// Cell: Cell_480629276
/*
{
  "id" : "Cell_480629276",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "316.341, 495.548, 49.0314, 11.9618", "322.322, 495.548, 49.0314, 11.9618", "328.303, 495.548, 49.0314, 11.9618" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "322.322, 495.548, 49.0314, 1.0", "328.163, 509.364, 49.0314, 1.0", "334.005, 523.18, 49.0314, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "323.188, 500.932, 45.5731, 0.296", "323.364, 502.026, 44.5116, 0.3156", "323.539, 503.12, 44.0773, 0.345", "323.67, 504.138, 43.5254, 0.4316", "324.057, 505.028, 42.8725, 0.437", "324.25, 506.1, 42.2839, 0.5134", "324.799, 507.021, 41.9266, 0.562", "325.364, 507.868, 41.8684, 0.647", "325.929, 508.847, 41.8552, 0.6004", "326.455, 509.731, 41.893, 0.5896", "327.267, 510.319, 41.7007, 0.4316", "328.293, 510.588, 41.3613, 0.3502", "329.327, 510.815, 40.9259, 0.3156", "330.095, 510.435, 40.3875, 0.376" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "321.659, 500.23, 48.4582, 0.2978", "321.498, 501.361, 48.1188, 0.3192", "321.338, 502.493, 47.9769, 0.3514", "321.178, 503.624, 47.805, 0.4446", "320.535, 504.469, 47.5896, 0.4564", "319.675, 505.149, 47.3651, 0.573", "319.173, 505.711, 46.8891, 0.559", "318.515, 506.374, 46.6413, 0.5054", "317.891, 507.196, 46.4304, 0.5398", "317.512, 508.227, 46.1647, 0.6416", "317.485, 509.349, 45.9152, 0.6446", "317.825, 510.414, 45.7274, 0.6374", "318.178, 511.338, 45.3706, 0.685", "318.372, 512.371, 44.8874, 0.7076", "318.294, 513.288, 44.2784, 0.6106", "318.023, 514.357, 43.9037, 0.6472", "317.705, 515.424, 43.6895, 0.809", "317.627, 516.498, 43.6724, 0.8822", "317.294, 517.591, 43.6898, 0.7446", "316.944, 518.667, 43.7027, 0.6724", "316.143, 519.377, 43.5946, 0.565", "315.863, 520.315, 43.2928, 0.4682", "316.105, 521.209, 43.0259, 0.4756", "316.427, 522.124, 42.8215, 0.4978", "316.75, 523.208, 42.6084, 0.5004", "316.77, 524.34, 42.3455, 0.463", "316.728, 525.429, 41.9681, 0.3684", "316.341, 526.449, 41.538, 0.3166", "315.854, 527.268, 40.9562, 0.3066" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "326.427, 492.881, 48.4103, 0.3212", "327.384, 492.259, 48.1712, 0.3626", "328.342, 491.636, 47.9175, 0.4304", "329.303, 491.025, 47.6398, 0.599", "330.267, 490.427, 47.3318, 0.7044", "331.237, 489.849, 46.9952, 0.5318", "332.216, 489.317, 46.6225, 0.3984", "333.246, 488.877, 46.2412, 0.3878", "334.325, 488.526, 45.8839, 0.362", "335.433, 488.313, 45.5826, 0.3466", "336.575, 488.257, 45.3558, 0.3864", "337.718, 488.2, 45.1816, 0.358", "338.862, 488.188, 45.036, 0.3454", "340.006, 488.188, 44.8904, 0.3548", "341.15, 488.188, 44.723, 0.4436" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "318.482, 491.289, 49.6706, 0.2962", "317.716, 490.44, 49.7288, 0.3162", "317.036, 489.527, 49.7549, 0.3462", "316.436, 488.552, 49.7689, 0.434", "315.836, 487.578, 49.7697, 0.4414", "315.236, 486.604, 49.754, 0.5218", "314.629, 485.635, 49.7235, 0.5766", "314.011, 484.673, 49.6793, 0.6798", "313.211, 483.857, 49.5986, 0.6322", "312.402, 483.048, 49.4855, 0.7892" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "334.005, 523.18, 49.0314, 1.0", "339.846, 536.996, 49.0314, 1.0", "345.687, 550.812, 49.0314, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "330.095, 510.435, 40.3875, 0.376", "330.504, 510.15, 40.171, 0.3386", "331.497, 509.941, 39.8874, 0.3088", "332.532, 509.671, 39.674, 0.291", "333.439, 509.507, 39.4072, 0.3062", "334.27, 509.65, 39.0113, 0.3274", "335.081, 509.905, 38.6646, 0.3992", "335.858, 510.692, 38.4241, 0.3766", "336.645, 511.31, 38.169, 0.4048", "337.725, 511.503, 37.9641, 0.3448", "338.813, 511.719, 37.7801, 0.3198", "339.914, 511.808, 37.6886, 0.3126", "340.934, 511.751, 37.6043, 0.3396", "341.06, 512.394, 37.2151, 0.4214", "341.979, 512.244, 36.8351, 0.4184", "342.409, 512.615, 36.8802, 0.4782", "343.551, 512.647, 36.972, 0.5022", "344.585, 513.045, 37.0997, 0.5084", "345.695, 513.238, 37.3257, 0.478", "346.754, 513.105, 37.5393, 0.3954", "347.765, 512.694, 37.807, 0.3692", "348.743, 512.18, 38.113, 0.3922", "349.787, 511.798, 38.4563, 0.5454", "350.854, 511.46, 38.8007, 0.5194", "351.939, 511.114, 39.0457, 0.606", "353.029, 510.766, 39.1829, 0.5684", "354.134, 510.477, 39.209, 0.5472", "355.249, 510.226, 39.1451, 0.4976", "356.363, 510.009, 38.9942, 0.4582", "357.477, 509.802, 38.7814, 0.3592", "358.605, 509.901, 38.5843, 0.3", "359.735, 510.073, 38.4154, 0.2746", "360.868, 510.17, 38.2455, 0.2746", "361.999, 510.17, 38.045, 0.2748", "363.131, 510.17, 37.8277, 0.2748", "364.204, 509.784, 37.6482, 0.2752", "365.273, 509.38, 37.4982, 0.2758", "366.404, 509.29, 37.3797, 0.2766", "367.548, 509.271, 37.2879, 0.2782", "368.692, 509.256, 37.2078, 0.2814", "369.835, 509.301, 37.1204, 0.287", "370.921, 509.645, 37.0118, 0.2988", "372.059, 509.566, 36.8788, 0.3142", "372.763, 508.747, 36.6394, 0.3734", "373.571, 508.124, 36.2818, 0.3338", "374.574, 507.65, 35.8784, 0.3", "375.675, 507.375, 35.5421, 0.2746", "376.794, 507.139, 35.2839, 0.2746", "377.849, 506.737, 35.0955, 0.2746", "378.857, 506.198, 34.9684, 0.2746", "379.881, 506.41, 34.8816, 0.2746", "380.861, 506.965, 34.7528, 0.2746", "381.945, 507.072, 34.552, 0.2746", "383.057, 507.339, 34.3918, 0.2746", "384.144, 507.657, 34.2768, 0.2746", "385.099, 508.237, 34.2143, 0.2746", "386.194, 508.518, 34.2006, 0.2746", "387.04, 509.238, 34.2286, 0.2746", "387.724, 510.099, 34.3434, 0.2746", "388.618, 510.628, 34.5369, 0.2744", "389.761, 510.637, 34.671, 0.2744", "390.895, 510.795, 34.7413, 0.2742", "392.026, 510.96, 34.7441, 0.2736", "393.161, 511.087, 34.6735, 0.2728", "394.305, 511.087, 34.51, 0.2712", "395.449, 511.087, 34.2818, 0.2684", "396.541, 511.087, 33.9436, 0.2626", "397.577, 511.087, 33.4474, 0.2542", "398.643, 511.087, 32.8885, 0.2288", "399.764, 511.087, 31.7299, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "330.095, 510.435, 40.3875, 0.376", "329.582, 510.699, 39.5702, 0.4576", "328.564, 511.143, 38.6257, 0.42", "327.647, 511.463, 38.08, 0.4396", "327.002, 511.527, 37.7695, 0.4036", "326.308, 512.163, 37.2655, 0.457", "325.64, 511.676, 36.442, 0.4308", "325.287, 511.025, 35.3321, 0.5318", "324.764, 510.469, 34.0418, 0.451", "323.878, 510.028, 32.8082, 0.4592", "323.413, 509.095, 31.687, 0.393", "324.12, 509.193, 30.585, 0.436", "325.205, 509.192, 29.6162, 0.399", "326.124, 508.638, 28.889, 0.4408", "326.604, 507.865, 28.2094, 0.4374", "326.294, 507.643, 27.2657, 0.3682", "325.871, 506.641, 26.4149, 0.3162", "325.675, 505.576, 25.6849, 0.3054", "325.24, 504.86, 24.8618, 0.3268", "326.167, 504.456, 24.1709, 0.3968", "327.266, 504.204, 23.723, 0.3784", "328.182, 504.591, 23.6268, 0.3756", "329.13, 505.013, 23.5536, 0.4492", "329.649, 505.971, 23.4585, 0.4322", "330.045, 506.926, 23.0138, 0.6864" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "315.854, 527.268, 40.9562, 0.3066", "315.961, 527.341, 40.2584, 0.3288", "315.754, 528.153, 39.6032, 0.4002", "314.978, 528.797, 39.3448, 0.3858", "314.518, 529.737, 39.3859, 0.3856", "314.058, 530.751, 39.5122, 0.4844", "313.651, 531.794, 39.5786, 0.4156", "313.272, 532.859, 39.6452, 0.3668", "313.108, 533.977, 39.697, 0.3502", "313.108, 535.119, 39.6735, 0.4192", "313.046, 536.219, 39.6763, 0.523", "312.492, 537.036, 39.5587, 0.83", "312.421, 537.812, 39.3613, 0.844", "311.693, 538.662, 39.0866, 0.8204", "311.126, 539.627, 38.8027, 0.5592", "310.676, 540.676, 38.5554, 0.4438", "310.255, 541.695, 38.2875, 0.4978", "309.751, 542.702, 38.1058, 0.443", "309.02, 543.459, 38.1408, 0.407", "308.146, 544.081, 38.2841, 0.4768", "307.353, 544.864, 38.3244, 0.4016", "306.687, 545.757, 38.2684, 0.341", "306.29, 546.83, 38.1744, 0.3032", "305.947, 547.903, 38.0139, 0.3286", "305.996, 548.984, 37.6824, 0.3702", "306.046, 550.067, 37.2596, 0.4738", "306.113, 551.207, 36.9079, 0.5364", "306.18, 552.347, 36.6181, 0.5972", "305.911, 553.443, 36.3958, 0.5186", "305.543, 554.526, 36.2359, 0.387", "305.098, 555.569, 36.1586, 0.304", "304.592, 556.579, 36.1455, 0.2824", "304.295, 557.638, 35.999, 0.2888", "304.034, 558.707, 35.719, 0.302", "303.439, 559.669, 35.4164, 0.3204", "302.806, 560.618, 35.1067, 0.385", "301.97, 561.352, 34.7318, 0.355", "301.076, 562.003, 34.3417, 0.3404", "300.042, 562.457, 34.0547, 0.3452", "299.112, 563.083, 33.8976, 0.4258", "298.53, 563.84, 33.5457, 0.4576", "298.039, 564.833, 33.1862, 0.4002", "297.519, 565.851, 32.8762, 0.4016", "297.313, 566.942, 32.5587, 0.3388", "297.27, 568.071, 32.2118, 0.3092", "297.155, 569.197, 31.8741, 0.2914", "296.919, 570.316, 31.5994, 0.3056", "296.537, 571.369, 31.2978, 0.3332", "296.071, 572.383, 30.9439, 0.3798", "295.615, 573.425, 30.6264, 0.4858", "295.161, 574.476, 30.3573, 0.5876", "294.511, 575.374, 30.0622, 0.5492", "293.754, 576.188, 29.7175, 0.438", "293.199, 577.153, 29.3518, 0.4252", "292.657, 578.127, 28.9929, 0.3772", "291.987, 579.031, 28.789, 0.4058", "291.186, 579.695, 28.6322, 0.3468", "290.18, 580.122, 28.4421, 0.3248", "289.882, 581.118, 28.2968, 0.3158", "289.677, 582.233, 28.1742, 0.3764", "289.329, 583.252, 27.9731, 0.339", "289.155, 584.38, 27.7919, 0.3098", "288.981, 585.51, 27.6485, 0.2926", "288.567, 586.558, 27.6082, 0.3094", "288.092, 587.587, 27.6515, 0.3334", "287.697, 588.658, 27.7036, 0.41", "287.312, 589.735, 27.7481, 0.3976", "287.201, 590.869, 27.7728, 0.4386", "287.125, 592.011, 27.7729, 0.4332", "286.884, 593.067, 27.6694, 0.36", "286.554, 594.075, 27.5535, 0.3012", "285.81, 594.843, 27.3935, 0.2766", "284.807, 595.389, 27.2533, 0.2782", "283.887, 596.058, 27.1295, 0.2814", "283.205, 596.962, 27.0187, 0.287", "282.979, 598.06, 26.9187, 0.2988", "282.672, 599.145, 26.7951, 0.3142", "282.083, 600.099, 26.592, 0.3734", "281.491, 601.058, 26.3414, 0.3338", "280.891, 602.031, 26.1233, 0.3", "280.329, 603.023, 25.9336, 0.2746", "279.939, 604.098, 25.7689, 0.2746", "279.47, 605.084, 25.535, 0.2748", "279.024, 606.104, 25.2846, 0.2748", "278.62, 607.173, 25.068, 0.2752", "278.105, 608.187, 24.8759, 0.2758", "277.476, 609.143, 24.7103, 0.2766", "276.778, 610.029, 24.5298, 0.2784", "276.0, 610.834, 24.3002, 0.2816", "275.06, 611.45, 24.0696, 0.2874", "274.195, 612.191, 23.8715, 0.2994", "273.502, 613.071, 23.7045, 0.3156", "273.272, 614.187, 23.5649, 0.376", "272.665, 615.131, 23.4029, 0.3384", "271.971, 616.0, 23.1808, 0.3084", "271.304, 616.92, 22.9833, 0.2902", "270.646, 617.857, 22.8301, 0.3046", "270.01, 618.808, 22.716, 0.3248", "269.382, 619.763, 22.6362, 0.3934", "268.92, 620.804, 22.5859, 0.3714", "268.524, 621.877, 22.5559, 0.3654", "268.085, 622.926, 22.5039, 0.4162", "267.61, 623.955, 22.4188, 0.4386", "266.984, 624.894, 22.3351, 0.3702", "266.261, 625.777, 22.269, 0.3206", "265.756, 626.747, 22.3295, 0.3118", "265.474, 627.728, 22.5612, 0.3468", "265.0, 628.288, 22.9418, 0.3928", "264.262, 628.542, 23.0058, 0.5706", "263.994, 629.479, 22.8902, 0.4514", "263.127, 630.019, 22.8067, 0.349", "262.476, 629.731, 22.9763, 0.2712", "262.388, 630.347, 23.3672, 0.2684", "262.388, 631.475, 23.6487, 0.2626", "262.388, 632.592, 23.7479, 0.2542", "262.708, 632.897, 23.3715, 0.2288", "262.388, 632.447, 21.5309, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "315.854, 527.268, 40.9562, 0.3066", "315.258, 527.282, 39.557, 0.2288", "314.196, 527.241, 38.7783, 0.415", "313.09, 527.077, 38.451, 0.4366", "312.037, 526.831, 38.1072, 0.3664", "311.825, 525.841, 37.8792, 0.313", "311.185, 524.992, 37.5077, 0.2994", "310.718, 524.629, 36.8374, 0.3164", "310.534, 523.873, 36.0192, 0.373", "310.365, 523.07, 35.1341, 0.356", "310.615, 522.259, 34.1774, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "341.15, 488.188, 44.723, 0.4436", "341.912, 488.035, 46.4601, 0.4576", "342.845, 487.414, 46.9493, 0.5184", "343.794, 486.813, 47.1713, 0.4962", "344.807, 486.293, 47.3872, 0.4318", "345.812, 485.756, 47.5698, 0.4246", "346.79, 485.17, 47.6619, 0.5524", "347.83, 484.707, 47.7089, 0.563", "348.899, 484.303, 47.7319, 0.5368", "349.913, 483.787, 47.7501, 0.4844", "350.877, 483.176, 47.7742, 0.4024", "351.803, 482.504, 47.7786, 0.4056", "352.779, 481.915, 47.7641, 0.3464", "353.756, 481.445, 47.7963, 0.3244", "354.824, 481.319, 47.6608, 0.3144", "355.935, 481.319, 47.4485, 0.374", "357.043, 481.21, 47.2307, 0.3352", "358.175, 481.043, 47.0789, 0.3022", "359.299, 480.863, 47.0106, 0.279", "360.4, 480.644, 47.0828, 0.2828", "361.497, 480.402, 47.2646, 0.2894", "362.587, 480.069, 47.4418, 0.3032", "363.722, 479.962, 47.6003, 0.3226", "364.854, 480.118, 47.733, 0.3892", "365.883, 480.616, 47.8416, 0.3624", "366.938, 481.037, 47.9643, 0.355", "367.987, 481.339, 48.1813, 0.366", "368.981, 481.878, 48.3697, 0.4964" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "341.15, 488.188, 44.723, 0.4436", "341.986, 488.188, 44.4349, 0.4904", "343.113, 488.188, 44.07, 0.463", "344.203, 487.933, 43.6526, 0.5074", "345.056, 487.362, 43.0984, 0.5872", "346.051, 486.908, 42.523, 0.5168", "347.079, 486.433, 42.0003, 0.5304", "348.025, 485.82, 41.5422, 0.545", "348.941, 485.154, 41.1432, 0.6208", "349.513, 484.207, 40.7761, 0.526", "350.05, 483.23, 40.4622, 0.5766", "350.649, 482.29, 40.3542, 0.488", "351.265, 481.363, 40.3413, 0.5222", "351.929, 480.469, 40.264, 0.5374", "352.657, 479.631, 40.2335, 0.5698", "353.444, 478.844, 40.3178, 0.6118", "354.069, 477.901, 40.3948, 0.5468", "354.939, 477.172, 40.427, 0.434", "355.967, 476.777, 40.3631, 0.4166", "357.056, 476.621, 40.2399, 0.368", "357.967, 476.034, 40.1484, 0.3578", "358.026, 474.911, 40.0904, 0.4082", "357.696, 473.893, 40.1904, 0.3934", "357.635, 472.773, 40.3292, 0.4352", "357.81, 471.659, 40.4452, 0.4034", "358.397, 470.704, 40.5238, 0.419", "359.205, 469.896, 40.5546, 0.542", "359.884, 469.035, 40.4872, 0.543", "360.637, 468.445, 40.3634, 0.5046" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "312.402, 483.048, 49.4855, 0.7892", "311.173, 482.591, 49.3984, 0.4684", "310.11, 482.437, 50.2606, 0.3652", "309.028, 482.37, 50.5991, 0.374", "308.685, 481.576, 51.116, 0.335", "308.31, 480.522, 51.5701, 0.302", "307.404, 479.946, 52.022, 0.2782", "306.301, 480.141, 52.4541, 0.2814", "305.167, 480.149, 52.8774, 0.287", "304.043, 480.149, 53.3201, 0.2988", "303.059, 480.57, 53.8264, 0.3142", "302.178, 480.593, 54.4886, 0.3734", "301.064, 480.378, 55.057, 0.3338", "299.964, 480.232, 55.445, 0.3", "298.889, 479.973, 55.6928, 0.2746", "298.06, 479.921, 56.1672, 0.2746", "297.201, 479.498, 56.7526, 0.2746", "296.845, 478.662, 57.3874, 0.2746", "296.399, 478.03, 57.7116, 0.2748", "295.724, 477.403, 57.9821, 0.2748", "294.806, 476.723, 58.1725, 0.2752", "293.901, 476.168, 58.3218, 0.2758", "293.668, 475.211, 58.5572, 0.2766", "292.73, 474.659, 58.8241, 0.2782", "291.742, 474.426, 58.9336, 0.2814", "291.146, 473.732, 58.9938, 0.287", "290.836, 472.705, 59.1699, 0.2988", "290.237, 471.763, 59.3995, 0.3142", "289.498, 470.929, 59.6666, 0.3734", "288.632, 470.225, 59.9469, 0.3338", "287.652, 469.673, 60.1378, 0.3", "286.641, 469.307, 60.1577, 0.2746", "285.729, 468.739, 60.1247, 0.2746", "284.975, 468.185, 60.31, 0.2746", "284.302, 467.275, 60.4895, 0.2746", "283.898, 466.221, 60.7037, 0.2746", "283.394, 465.235, 60.9501, 0.2746", "283.036, 464.242, 61.1822, 0.2746", "282.109, 463.575, 61.32, 0.2746", "281.354, 462.739, 61.3662, 0.2746", "280.76, 461.819, 61.278, 0.2748", "280.105, 460.93, 61.0946, 0.2748", "279.472, 459.981, 60.9442, 0.275", "278.779, 459.087, 60.8588, 0.2754", "277.864, 458.401, 60.8751, 0.2762", "276.972, 457.736, 61.0282, 0.2776", "276.168, 457.148, 61.448, 0.2802", "275.467, 456.365, 61.9763, 0.285", "274.846, 455.432, 62.4988, 0.2938", "274.142, 454.538, 62.935, 0.3112", "273.416, 453.654, 63.2668, 0.3384", "272.831, 452.675, 63.5032, 0.4132", "272.28, 451.673, 63.658, 0.4332", "271.543, 450.809, 63.7857, 0.3602", "270.826, 449.938, 63.9206, 0.3016", "270.356, 448.91, 64.1035, 0.2776", "269.748, 447.979, 64.2499, 0.2802", "269.005, 447.145, 64.3003, 0.285", "268.109, 446.495, 64.433, 0.2938", "267.347, 445.843, 64.5716, 0.3112", "266.545, 445.454, 64.8553, 0.3384", "265.751, 444.825, 65.1314, 0.413" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "312.402, 483.048, 49.4855, 0.7892", "311.842, 482.292, 49.2789, 0.8052", "311.214, 481.382, 48.9983, 0.798", "310.994, 480.281, 48.6942, 0.7338", "310.775, 479.18, 48.3966, 0.6344", "310.652, 478.043, 48.2146, 0.5818", "310.531, 476.906, 48.1334, 0.5326", "310.469, 475.801, 48.1967, 0.6638", "310.469, 474.729, 48.4117, 0.7434", "310.521, 473.639, 48.6567, 0.7684", "310.685, 472.508, 48.7802, 0.7252", "310.85, 471.375, 48.7682, 0.62", "311.086, 470.357, 48.4823, 0.5494", "311.335, 469.36, 47.9564, 0.5014" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "368.981, 481.878, 48.3697, 0.4964", "369.374, 481.589, 48.5086, 0.4326", "370.307, 480.93, 48.6032, 0.4244", "371.315, 480.39, 48.6629, 0.334", "372.326, 479.858, 48.6923, 0.3002", "373.365, 479.455, 48.6315, 0.2748", "374.217, 478.846, 48.5453, 0.2752", "375.019, 478.135, 48.622, 0.2758", "375.709, 477.286, 48.8337, 0.2766", "376.28, 476.308, 49.11, 0.2782", "376.854, 475.335, 49.4388, 0.2814", "377.435, 474.355, 49.7524, 0.287", "378.473, 474.03, 50.0217, 0.2988", "379.612, 473.956, 50.2547, 0.3142", "380.591, 473.502, 50.5411, 0.3734", "381.499, 472.837, 50.8785, 0.334", "381.931, 472.56, 50.9947, 0.3002", "382.238, 471.915, 51.5267, 0.275", "382.651, 471.363, 52.3712, 0.2754", "383.408, 470.683, 53.2588, 0.2762", "384.307, 469.997, 53.9636, 0.2776", "385.332, 469.609, 54.607, 0.2802", "386.327, 469.183, 55.2348, 0.285", "387.138, 468.463, 55.8001, 0.2938", "387.946, 467.695, 56.2775, 0.3112", "388.479, 466.778, 56.7524, 0.3382", "388.475, 465.751, 57.013, 0.413", "388.687, 464.701, 57.2328, 0.4326", "389.286, 463.788, 57.4745, 0.3592", "390.302, 463.415, 57.7534, 0.3", "391.402, 463.115, 58.0096, 0.2746", "392.413, 462.751, 58.3302, 0.2746", "393.126, 461.909, 58.6992, 0.2746", "394.028, 461.239, 59.0271, 0.2746", "394.964, 460.581, 59.2908, 0.2746", "395.801, 459.839, 59.5809, 0.2746", "396.588, 459.052, 59.9309, 0.2746", "397.619, 458.645, 60.3072, 0.2746", "398.675, 458.275, 60.702, 0.2746", "399.799, 458.162, 61.0249, 0.2746", "400.894, 458.258, 61.2886, 0.2746", "401.836, 457.663, 61.5062, 0.2748", "402.716, 456.996, 61.7187, 0.2748", "403.775, 456.586, 61.9679, 0.2752", "404.831, 456.431, 62.2289, 0.2758", "405.912, 456.265, 62.6413, 0.2766", "406.999, 456.18, 63.1574, 0.2784", "408.111, 456.434, 63.6871, 0.2816", "409.221, 456.689, 64.2362, 0.2876", "410.013, 457.355, 64.9244, 0.2998", "411.038, 457.061, 65.6281, 0.316", "411.235, 456.046, 66.4401, 0.377", "411.895, 455.369, 67.3812, 0.3406", "412.769, 455.09, 68.4709, 0.3126", "413.291, 454.263, 69.589, 0.2974", "413.543, 453.175, 70.5877, 0.318", "414.126, 452.453, 71.6355, 0.3508", "414.708, 451.734, 72.6866, 0.4372", "414.944, 450.712, 73.5521, 0.4722", "414.726, 449.645, 74.2311, 0.4582", "414.245, 448.751, 74.7807, 0.3594", "414.05, 447.722, 75.301, 0.3004", "414.272, 447.048, 75.626, 0.2752", "414.459, 446.189, 75.9581, 0.276", "414.914, 445.526, 76.4918, 0.2768", "415.508, 444.93, 77.154, 0.279", "415.875, 444.625, 77.866, 0.2826", "416.185, 443.771, 78.2821, 0.2896", "416.804, 443.135, 78.692, 0.302", "417.241, 442.376, 78.7478, 0.3274", "417.595, 441.503, 78.4969, 0.3622", "418.23, 440.581, 78.2239, 0.4878", "418.386, 439.56, 78.1052, 0.423", "417.848, 439.147, 78.083, 0.3754", "417.692, 438.149, 77.9145, 0.3928", "417.566, 437.106, 77.7151, 0.3708", "417.137, 436.25, 77.4483, 0.3642", "417.241, 435.332, 77.3744, 0.4142", "417.68, 435.237, 77.768, 0.4348", "417.347, 434.575, 78.5201, 0.3628", "417.159, 433.694, 79.4584, 0.3068", "417.019, 432.645, 80.3908, 0.2872", "417.044, 431.514, 81.207, 0.2988", "417.601, 430.779, 82.0299, 0.3144", "417.934, 429.833, 82.6059, 0.3738", "418.338, 429.005, 82.8433, 0.3348", "418.163, 428.256, 83.2191, 0.3016", "418.37, 427.319, 83.5744, 0.2776", "418.583, 426.608, 83.512, 0.2802", "418.622, 426.077, 83.1474, 0.285", "419.083, 425.148, 82.8909, 0.294", "419.293, 424.342, 83.0693, 0.3114", "418.962, 423.687, 83.5862, 0.3388", "418.85, 422.598, 84.1985, 0.4138", "419.007, 421.503, 84.8826, 0.4342", "419.251, 420.425, 85.5711, 0.3622", "419.68, 419.435, 86.1748, 0.3054", "420.048, 418.625, 86.4027, 0.2848", "420.451, 417.623, 86.5763, 0.2934", "420.248, 416.638, 86.9442, 0.3108", "420.169, 415.54, 87.4037, 0.3358", "420.19, 414.444, 87.9578, 0.415", "420.525, 413.454, 88.639, 0.4056", "421.06, 412.596, 89.4278, 0.4594", "421.928, 412.379, 90.2891, 0.4428", "422.833, 411.897, 90.8163, 0.5178", "423.708, 411.363, 91.3878, 0.6012", "424.081, 410.344, 91.9268, 0.5682", "424.521, 409.313, 92.4104, 0.5038", "424.768, 408.221, 92.8508, 0.3976", "424.964, 407.219, 93.357, 0.3668", "425.427, 406.209, 93.8204, 0.4188", "425.94, 405.275, 94.0708, 0.4434", "426.441, 404.45, 94.1349, 0.3788", "426.847, 403.814, 93.9658, 0.3372", "427.108, 402.837, 94.0713, 0.3396", "427.712, 402.044, 94.4591, 0.4156", "428.208, 401.517, 95.2255, 0.4374", "428.208, 400.453, 96.0123, 0.3682", "428.29, 399.326, 96.7968, 0.3162", "428.464, 398.231, 97.5666, 0.3056", "428.657, 397.67, 98.5275, 0.327", "429.135, 397.04, 99.4927, 0.397", "429.857, 396.377, 100.16, 0.3782", "430.364, 395.602, 100.961, 0.3778", "430.713, 394.579, 101.728, 0.4404", "431.19, 393.572, 102.357, 0.4782", "430.795, 392.869, 103.09, 0.469", "430.342, 391.889, 103.65, 0.3796", "430.751, 391.009, 104.216, 0.3384", "430.137, 390.242, 104.75, 0.3414", "430.51, 389.571, 105.192, 0.419", "430.443, 389.521, 106.095, 0.4434", "429.636, 389.129, 107.146, 0.38", "430.022, 388.819, 108.449, 0.3334", "430.138, 387.793, 109.563, 0.3616", "430.427, 387.231, 110.623, 0.3134", "429.768, 386.895, 111.742, 0.2542", "429.302, 386.164, 113.946, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "368.981, 481.878, 48.3697, 0.4964", "369.29, 482.328, 48.7278, 0.4576", "369.935, 483.244, 48.7819, 0.3904", "370.727, 484.068, 48.8158, 0.3522", "371.506, 484.898, 48.9003, 0.3976", "372.084, 485.772, 49.1201, 0.3736", "373.11, 486.266, 49.3038, 0.3994", "374.117, 486.681, 49.3744, 0.335", "375.031, 487.311, 49.4133, 0.302", "375.956, 487.969, 49.4432, 0.2782", "376.797, 488.725, 49.3987, 0.2814", "377.65, 489.455, 49.3746, 0.287", "378.52, 490.15, 49.4782, 0.2988", "379.493, 490.721, 49.6124, 0.3142", "380.516, 491.234, 49.7274, 0.3734", "381.603, 491.541, 49.8288, 0.3338", "382.736, 491.706, 49.924, 0.3", "383.854, 491.851, 49.9862, 0.2746", "384.884, 491.857, 49.9405, 0.2746", "385.94, 491.881, 50.101, 0.2746", "386.999, 491.943, 50.4017, 0.2746", "388.072, 492.339, 50.6582, 0.2746", "389.145, 492.736, 50.8763, 0.2746", "390.283, 492.82, 51.063, 0.2746", "391.424, 492.878, 51.2204, 0.2746", "392.557, 492.998, 51.3374, 0.2746", "393.656, 493.225, 51.4802, 0.2746", "394.766, 493.24, 51.7286, 0.2746", "395.749, 493.543, 51.9954, 0.2746", "396.101, 494.592, 52.232, 0.2746", "396.645, 495.432, 52.4947, 0.2746", "397.563, 496.062, 52.806, 0.2746", "398.623, 496.456, 53.0681, 0.2746", "399.716, 496.798, 53.2739, 0.2746", "400.717, 497.323, 53.4478, 0.2746", "401.653, 497.982, 53.6029, 0.2746", "402.487, 498.729, 53.797, 0.2746", "403.244, 499.545, 54.0666, 0.2746", "403.452, 500.628, 54.3284, 0.2746", "404.177, 501.372, 54.5754, 0.2746", "405.295, 501.469, 54.8232, 0.2746", "406.439, 501.469, 55.085, 0.2746", "407.583, 501.469, 55.3731, 0.2748", "408.681, 501.515, 55.7984, 0.2748", "409.753, 501.588, 56.4066, 0.275", "410.562, 501.887, 57.2312, 0.2752", "411.651, 502.147, 58.0331, 0.276", "412.545, 502.567, 58.8952, 0.277", "412.311, 502.883, 59.9841, 0.2794", "412.143, 503.845, 60.9515, 0.2834", "412.16, 504.979, 61.7148, 0.2908", "412.512, 505.976, 62.3518, 0.3056", "412.981, 506.96, 62.7301, 0.3268", "413.556, 507.904, 62.8852, 0.3978", "414.597, 508.32, 63.0087, 0.3738", "415.502, 508.88, 63.1932, 0.3998", "416.335, 509.659, 63.3898, 0.3354", "417.253, 510.332, 63.6017, 0.303", "418.203, 510.964, 63.8403, 0.28", "419.037, 511.737, 64.0928, 0.2848", "419.855, 512.53, 64.3451, 0.2934", "420.768, 513.217, 64.6024, 0.3102", "421.556, 514.029, 64.8707, 0.3354", "422.238, 514.948, 65.1473, 0.4136", "422.773, 515.93, 65.4968, 0.4046", "423.118, 516.9, 65.9856, 0.4508", "423.294, 517.723, 66.6887, 0.457", "423.965, 518.587, 67.3406, 0.3988", "424.767, 519.401, 67.8899, 0.3988", "425.354, 520.292, 68.4312, 0.334", "426.106, 521.151, 68.8573, 0.3002", "426.579, 522.156, 69.1558, 0.2748", "426.81, 523.22, 69.4008, 0.275", "427.078, 523.992, 69.8214, 0.2752", "426.861, 524.975, 70.11, 0.276", "426.595, 525.463, 70.0364, 0.2768", "426.606, 525.917, 69.72, 0.279", "427.189, 526.86, 69.6046, 0.2826", "427.719, 527.741, 69.645, 0.2894", "428.007, 527.958, 70.1677, 0.303", "428.331, 528.704, 70.9822, 0.3222", "428.197, 529.438, 71.9883, 0.388", "428.086, 530.504, 72.7849, 0.3622", "428.651, 531.29, 73.4446, 0.3476", "429.196, 532.26, 73.8402, 0.387", "428.995, 533.126, 74.0757, 0.3644", "428.538, 533.98, 74.0508, 0.3304", "428.235, 534.974, 73.7808, 0.4576" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "360.637, 468.445, 40.3634, 0.5046", "361.974, 468.078, 40.4942, 0.3142", "363.067, 467.777, 41.1225, 0.3736", "364.033, 467.35, 41.4571, 0.3342", "364.974, 466.869, 41.7684, 0.3006", "366.108, 467.016, 42.0398, 0.2758", "367.179, 466.853, 42.3234, 0.2766", "368.074, 466.252, 42.6765, 0.2782", "369.131, 465.959, 42.9484, 0.2814", "370.206, 466.309, 43.1544, 0.287", "371.275, 466.552, 43.3894, 0.2988", "372.359, 466.54, 43.6652, 0.3142", "373.323, 465.928, 43.8575, 0.3734", "374.194, 465.193, 43.9466, 0.334", "374.969, 464.377, 44.0138, 0.3002", "375.781, 463.595, 44.0703, 0.275", "376.805, 463.099, 44.0868, 0.2754", "377.891, 463.361, 44.0765, 0.2762", "378.893, 463.789, 44.0527, 0.2776", "380.036, 463.845, 44.0129, 0.28", "381.178, 463.902, 43.9505, 0.2846", "382.288, 463.676, 43.8662, 0.2928", "383.405, 463.484, 43.7198, 0.3098", "384.464, 463.676, 43.4574, 0.3346", "385.349, 464.28, 43.2382, 0.412", "386.464, 464.025, 43.0573, 0.4014", "387.459, 463.597, 42.8257, 0.4452", "388.508, 463.283, 42.6348, 0.4452", "389.587, 462.966, 42.5774, 0.3836", "390.622, 462.515, 42.5552, 0.34", "391.597, 462.162, 42.3956, 0.374", "392.678, 462.524, 42.2624, 0.3352", "393.797, 462.748, 42.1792, 0.3022", "394.878, 463.115, 42.1187, 0.279", "395.972, 463.44, 42.0697, 0.2826", "396.917, 464.056, 42.103, 0.289", "397.824, 464.749, 42.2243, 0.3024", "398.85, 465.186, 42.4469, 0.321", "399.893, 465.586, 42.747, 0.386", "401.031, 465.654, 43.0352, 0.358", "402.173, 465.714, 43.3034, 0.3398", "403.313, 465.748, 43.5504, 0.3738", "404.45, 465.748, 43.7808, 0.3348", "405.587, 465.748, 43.9874, 0.3016", "406.679, 465.993, 44.2053, 0.2774", "407.765, 466.272, 44.4312, 0.2796", "408.802, 466.685, 44.5015, 0.2842", "409.831, 467.118, 44.4273, 0.292", "410.944, 467.382, 44.3338, 0.308", "412.057, 467.644, 44.2288, 0.3316", "413.188, 467.811, 44.116, 0.4052", "414.325, 467.931, 44.0101, 0.395", "415.462, 468.022, 43.9242, 0.4036", "416.595, 467.871, 43.839, 0.5122", "417.6, 467.58, 43.6114, 0.4928", "418.501, 467.603, 43.3, 0.3862", "418.98, 468.199, 43.2348, 0.303", "419.659, 468.073, 43.1547, 0.28", "420.6, 467.475, 42.9794, 0.2848", "421.551, 467.121, 42.6712, 0.2934", "422.693, 467.127, 42.4158, 0.3104", "423.758, 467.35, 42.3086, 0.3358", "424.826, 467.721, 42.1949, 0.4132", "425.935, 467.982, 42.026, 0.4094", "427.014, 467.897, 41.7351, 0.4318", "428.016, 467.411, 41.377, 0.5594", "429.001, 466.904, 40.9242, 0.6056", "430.058, 466.755, 40.3824, 0.4722", "431.13, 466.683, 39.8129, 0.3724", "432.254, 466.664, 39.3548, 0.387", "433.387, 466.551, 39.0508, 0.3602", "434.219, 465.926, 38.8808, 0.3434", "434.799, 464.94, 38.8212, 0.3804", "435.453, 464.009, 38.8573, 0.3468", "436.023, 463.031, 39.0006, 0.3254", "436.645, 462.086, 39.1952, 0.3162", "437.368, 461.203, 39.401, 0.3772", "438.119, 460.395, 39.5354, 0.341", "438.954, 459.68, 39.6973, 0.3128", "439.504, 458.757, 39.9031, 0.2992", "439.603, 457.625, 40.1212, 0.3152", "439.603, 456.518, 40.4261, 0.3754", "439.603, 455.418, 40.8038, 0.3378", "439.994, 454.408, 41.1961, 0.3072", "440.893, 453.721, 41.4982, 0.288", "441.784, 453.037, 41.6833, 0.2994", "442.774, 452.499, 41.7449, 0.3216", "443.655, 451.811, 41.8174, 0.3576", "444.479, 451.046, 41.9672, 0.4498", "445.068, 450.07, 42.1268, 0.4956", "445.637, 449.078, 42.3097, 0.5022", "446.485, 448.354, 42.5914, 0.4364", "447.383, 447.684, 42.9514, 0.4642", "448.394, 447.152, 43.3009, 0.4756", "449.409, 446.65, 43.6534, 0.4642", "450.463, 446.427, 44.1073, 0.3706", "451.359, 445.897, 44.5886, 0.321", "452.03, 445.128, 45.1556, 0.3142", "452.807, 444.357, 45.6459, 0.3438", "453.436, 443.401, 45.9908, 0.4236", "454.127, 442.508, 46.2322, 0.4522", "454.905, 441.703, 46.4181, 0.3962", "455.707, 440.93, 46.4363, 0.3634", "456.521, 440.175, 46.2641, 0.4182", "457.45, 439.549, 45.9883, 0.4126", "458.369, 438.902, 45.6588, 0.4674", "459.215, 438.133, 45.3575, 0.4812", "460.062, 437.364, 45.0825, 0.4746", "460.908, 436.594, 44.8434, 0.3906", "461.693, 435.799, 44.5953, 0.3528", "462.232, 434.898, 44.1963, 0.3976", "462.901, 434.051, 43.7231, 0.3798", "463.838, 433.415, 43.2908, 0.3808", "464.775, 432.946, 42.9974, 0.4454", "465.615, 432.928, 42.6826, 0.488", "466.408, 432.462, 42.1991, 0.4868", "467.4, 432.345, 41.6718, 0.4148", "468.439, 432.573, 41.2392, 0.3924", "469.388, 432.66, 41.1225, 0.497", "470.354, 432.288, 41.1622, 0.4398", "471.325, 431.805, 41.3249, 0.4072", "472.277, 431.413, 41.3636, 0.4476", "473.242, 431.647, 41.1734, 0.4916", "474.355, 431.859, 40.9385, 0.4948", "475.498, 431.859, 40.654, 0.423", "476.641, 431.859, 40.3458, 0.4384", "477.782, 431.859, 40.0369, 0.4328", "478.894, 431.797, 39.6827, 0.3596", "480.001, 431.728, 39.284, 0.3006", "481.052, 431.436, 38.8318, 0.2758", "482.077, 431.038, 38.3485, 0.2766", "483.156, 430.717, 38.0097, 0.2782", "484.241, 430.407, 37.7969, 0.2814", "484.875, 429.676, 37.5334, 0.287", "485.945, 429.726, 37.3618, 0.2984", "486.988, 429.983, 37.0499, 0.3136", "487.695, 429.445, 36.5179, 0.3724", "488.053, 428.392, 35.943, 0.332", "488.408, 427.393, 35.2853, 0.2966", "489.201, 426.611, 34.6909, 0.2684", "489.989, 426.086, 33.9912, 0.2626", "490.771, 425.714, 33.2102, 0.2542", "490.289, 424.702, 32.5898, 0.2288", "489.974, 423.615, 31.7299, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "360.637, 468.445, 40.3634, 0.5046", "359.976, 467.534, 40.2214, 0.3692", "360.083, 466.409, 40.1444, 0.4236", "360.439, 465.322, 40.1279, 0.4522", "360.973, 464.349, 40.2304, 0.396", "361.605, 463.43, 40.4536, 0.364", "362.376, 462.594, 40.6759, 0.4134", "363.214, 461.848, 40.9497, 0.4336", "363.564, 460.857, 41.1004, 0.361", "363.65, 459.744, 41.2286, 0.3032", "364.239, 458.79, 41.4044, 0.2802", "364.881, 457.868, 41.5918, 0.285", "365.651, 457.021, 41.7371, 0.294", "366.272, 456.093, 41.8452, 0.3114", "366.559, 454.987, 41.9292, 0.3386", "366.85, 453.881, 41.9773, 0.4136", "367.428, 452.905, 42.0123, 0.434", "368.025, 451.996, 42.1383, 0.3618", "368.759, 451.206, 42.1417, 0.3046", "369.738, 450.695, 42.0468, 0.283", "370.674, 450.037, 41.9432, 0.2906", "371.506, 449.275, 41.8289, 0.3038", "372.053, 448.277, 41.7038, 0.3308", "372.264, 447.171, 41.5612, 0.3684", "372.097, 446.118, 41.3454, 0.5006", "371.983, 445.027, 41.1026, 0.4404", "372.005, 443.891, 40.8789, 0.4382", "372.683, 442.975, 40.6829, 0.3608", "373.38, 442.075, 40.4841, 0.3448", "374.103, 441.192, 40.2856, 0.3832", "374.831, 440.324, 40.0627, 0.3516", "375.48, 439.421, 39.8182, 0.334", "375.716, 438.31, 39.5654, 0.3324", "375.953, 437.2, 39.312, 0.4084", "376.422, 436.172, 39.1756, 0.3934", "377.003, 435.226, 39.0989, 0.4364", "377.886, 434.498, 39.0037, 0.3992", "378.686, 433.716, 38.8511, 0.4416", "379.301, 432.807, 38.5776, 0.4388", "379.718, 431.821, 38.2096, 0.3706", "379.985, 430.776, 37.7762, 0.3208", "380.169, 429.681, 37.4634, 0.314", "380.312, 428.562, 37.3293, 0.3432", "380.414, 427.441, 37.3344, 0.4222", "380.479, 426.316, 37.4318, 0.4496", "380.531, 425.189, 37.5396, 0.3914", "380.592, 424.075, 37.5113, 0.3544", "381.06, 423.084, 37.3237, 0.402", "381.856, 422.342, 37.063, 0.3814", "382.677, 421.676, 36.6769, 0.4136", "383.376, 420.77, 36.3194, 0.3612", "384.098, 419.896, 35.9769, 0.3514", "384.885, 419.109, 35.5961, 0.367", "385.529, 418.199, 35.2352, 0.461", "386.166, 417.257, 34.93, 0.5472", "386.445, 416.178, 34.6553, 0.4486", "386.484, 415.105, 34.2866, 0.3756", "386.766, 414.067, 33.8528, 0.3934", "387.292, 413.103, 33.4519, 0.3718", "387.619, 412.053, 33.1433, 0.3648", "387.722, 410.913, 32.9137, 0.4212", "387.826, 409.775, 32.7583, 0.4182", "388.07, 408.678, 32.6138, 0.4772", "388.377, 407.602, 32.4475, 0.5008", "388.579, 406.491, 32.3501, 0.5058", "388.737, 405.366, 32.34, 0.473", "389.09, 404.309, 32.3876, 0.3878", "389.693, 403.34, 32.4626, 0.3476", "390.152, 402.306, 32.5324, 0.3878", "390.771, 401.409, 32.5592, 0.3618", "391.773, 400.877, 32.5223, 0.3466", "392.857, 400.726, 32.508, 0.3862", "393.861, 400.274, 32.363, 0.3588", "394.712, 399.66, 32.0155, 0.3406", "395.576, 399.028, 31.54, 0.3756", "396.444, 398.398, 31.0002, 0.3382", "397.357, 397.818, 30.4721, 0.308", "398.39, 397.448, 30.0054, 0.289", "399.368, 397.072, 29.7522, 0.3024", "400.221, 396.977, 29.8766, 0.3212", "400.965, 396.319, 30.0754, 0.3864", "401.132, 395.271, 30.0807, 0.3592", "401.138, 394.194, 29.8833, 0.3416", "401.151, 393.068, 29.5873, 0.377", "401.251, 391.941, 29.2541, 0.3406", "401.844, 391.026, 28.8148, 0.3126", "402.673, 390.304, 28.3399, 0.2988", "403.418, 389.532, 27.8708, 0.3142", "404.227, 388.723, 27.5057, 0.3734", "405.071, 387.953, 27.2111, 0.334", "405.964, 387.238, 26.9686, 0.3002", "406.721, 386.407, 26.7619, 0.2748", "407.292, 385.416, 26.5644, 0.275", "407.825, 384.442, 26.2969, 0.2752", "408.296, 383.5, 25.864, 0.276", "408.703, 382.487, 25.3649, 0.277", "408.983, 381.46, 24.8067, 0.2792", "409.483, 380.438, 24.3567, 0.2832", "410.321, 379.779, 24.0247, 0.2906", "411.462, 379.698, 23.7996, 0.3038", "412.604, 379.651, 23.6624, 0.331", "413.731, 379.565, 23.572, 0.3688", "414.741, 379.142, 23.4606, 0.5", "415.066, 378.301, 23.2137, 0.4466", "415.352, 377.223, 23.1229, 0.4138", "415.496, 376.103, 23.1456, 0.49", "415.787, 375.036, 23.3313, 0.4256", "416.047, 373.946, 23.6142, 0.3876", "416.27, 372.828, 23.9343, 0.3802", "416.878, 371.892, 24.1874, 0.5166", "417.593, 371.009, 24.4125, 0.5008", "417.975, 370.011, 24.7031, 0.4008", "417.408, 369.74, 25.1548, 0.3298", "417.021, 369.243, 25.6325, 0.3304", "417.504, 368.254, 25.9768, 0.375", "417.577, 367.152, 26.2902, 0.476", "416.877, 366.448, 26.7471, 0.5746", "416.266, 365.996, 27.403, 0.5", "416.31, 364.965, 28.0837, 0.4678", "416.782, 363.929, 28.625, 0.5802", "417.521, 363.062, 29.0332, 0.639", "418.24, 362.188, 29.3107, 0.559", "418.5, 361.116, 29.442, 0.4142", "418.269, 360.059, 29.3899, 0.3554", "418.246, 359.095, 29.4252, 0.374", "418.511, 358.137, 29.6797, 0.4738", "418.538, 357.029, 29.9986, 0.5724", "418.403, 355.909, 30.3016, 0.4884", "417.857, 354.981, 30.5276, 0.4828", "417.289, 354.053, 30.6718, 0.4318", "417.896, 353.202, 30.8605, 0.5336", "418.844, 352.876, 31.2757, 0.4542", "419.497, 352.089, 31.8853, 0.4646", "419.912, 351.126, 32.6463, 0.4046", "419.912, 349.985, 33.3981, 0.4514", "419.416, 349.271, 34.337, 0.4566", "418.591, 348.785, 35.3147, 0.4048", "417.714, 348.183, 36.2088, 0.3786", "416.834, 347.616, 37.0188, 0.4478", "415.719, 347.365, 37.6205, 0.4634", "414.605, 347.116, 38.0584, 0.5804", "413.685, 346.474, 38.2841, 0.5978", "412.785, 345.804, 38.3695, 0.4566", "411.661, 345.76, 38.4037, 0.3498", "410.672, 345.375, 38.5622, 0.3144", "409.918, 344.7, 38.9259, 0.374", "410.274, 343.716, 39.3464, 0.335", "410.868, 342.786, 39.8222, 0.3022", "411.199, 341.734, 40.2727, 0.2786", "411.531, 340.668, 40.6104, 0.2822", "412.364, 340.627, 40.7224, 0.2882", "412.952, 340.449, 41.0682, 0.3012", "413.094, 339.402, 41.3893, 0.3182", "413.492, 338.439, 41.4067, 0.3814", "413.694, 337.33, 41.3034, 0.3476", "414.284, 336.481, 41.0262, 0.3304", "415.323, 336.119, 40.654, 0.305", "416.249, 335.686, 39.6623, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "265.751, 444.825, 65.1314, 0.413", "265.293, 444.605, 65.4808, 0.4328", "264.328, 444.069, 65.8526, 0.3594", "263.728, 443.14, 66.1536, 0.3002", "263.168, 442.281, 66.5272, 0.275", "262.673, 441.273, 66.8161, 0.2754", "262.182, 440.265, 67.0474, 0.2762", "261.735, 439.23, 67.1964, 0.2774", "261.29, 438.372, 67.4786, 0.2798", "261.29, 437.246, 67.7678, 0.2844", "261.29, 436.288, 68.0, 0.2924", "261.482, 435.638, 68.3502, 0.3088", "261.407, 434.726, 68.5342, 0.3324", "261.443, 433.623, 68.6745, 0.4086", "261.518, 432.872, 68.9483, 0.3938", "261.29, 431.905, 69.0206, 0.4374", "261.483, 430.843, 68.9651, 0.4014", "261.539, 429.712, 68.8814, 0.4454", "261.518, 428.746, 68.8559, 0.4458", "261.518, 427.641, 68.9125, 0.3844", "261.564, 426.526, 69.0592, 0.3412", "261.572, 425.519, 69.2891, 0.3764", "261.537, 424.407, 69.4966, 0.339", "260.757, 423.655, 69.7959, 0.3098", "259.801, 423.083, 70.0916, 0.2928", "259.609, 422.111, 70.5205, 0.308", "259.388, 421.09, 70.9484, 0.3384", "258.668, 420.277, 71.302, 0.3834", "258.36, 419.888, 71.9639, 0.5224", "257.429, 419.378, 72.6314, 0.5112", "256.399, 419.25, 73.3138, 0.4214", "256.116, 418.259, 73.771, 0.3624", "255.548, 417.662, 73.946, 0.4168", "255.201, 416.872, 74.3008, 0.4102", "254.67, 415.957, 74.5996, 0.4628", "254.086, 415.132, 74.7382, 0.4728", "253.238, 414.582, 74.9616, 0.4588", "252.329, 413.953, 75.21, 0.3606", "252.029, 412.859, 75.3858, 0.3022", "251.681, 411.797, 75.4216, 0.279", "251.043, 410.855, 75.4211, 0.2826", "250.17, 410.122, 75.3889, 0.2892", "249.557, 409.379, 75.3306, 0.303", "249.254, 408.355, 75.2752, 0.322", "249.391, 407.271, 75.271, 0.388", "249.604, 406.249, 75.2816, 0.3608", "249.25, 405.43, 75.5532, 0.3508", "249.294, 404.883, 76.1522, 0.364", "249.479, 404.211, 76.8183, 0.4628", "249.456, 403.591, 76.9835, 0.5146", "249.328, 402.905, 76.9306, 0.5622", "249.857, 402.155, 76.7819, 0.428", "249.368, 401.422, 76.7463, 0.343", "248.807, 401.202, 77.1224, 0.3082", "248.792, 400.512, 77.8254, 0.3314", "248.948, 399.472, 78.4638, 0.4064", "249.194, 398.548, 79.1297, 0.3896", "248.796, 397.566, 79.6362, 0.43", "249.155, 396.563, 80.1436, 0.386", "249.673, 395.951, 80.7372, 0.4232", "250.165, 395.444, 81.501, 0.374", "249.573, 395.167, 82.4687, 0.4", "248.926, 394.383, 83.4162, 0.3358", "248.684, 393.352, 84.224, 0.3036", "248.292, 392.307, 84.842, 0.2814", "248.106, 391.376, 85.1536, 0.2872", "247.901, 390.658, 85.575, 0.299", "247.168, 389.927, 86.0177, 0.3148", "246.753, 388.892, 86.4394, 0.3746", "246.71, 387.793, 86.7541, 0.3362", "246.503, 386.732, 87.1808, 0.304", "246.503, 385.893, 87.845, 0.2818", "246.094, 385.168, 88.5273, 0.288", "245.854, 384.08, 89.0901, 0.3008", "245.603, 383.0, 89.6165, 0.3178", "245.052, 382.044, 90.0486, 0.3804", "244.276, 381.344, 90.4448, 0.347", "243.557, 380.504, 90.7791, 0.324", "242.762, 379.975, 91.2265, 0.321", "242.435, 379.077, 91.7652, 0.3502", "242.098, 378.091, 92.1724, 0.466", "241.327, 377.422, 92.5582, 0.3814", "241.02, 376.526, 92.9916, 0.305", "240.317, 375.868, 93.506, 0.2288", "239.18, 375.789, 94.2998, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "265.751, 444.825, 65.1314, 0.413", "266.124, 443.803, 64.535, 0.3734", "265.692, 442.765, 64.6363, 0.3338", "265.138, 441.764, 64.6738, 0.3", "264.573, 440.77, 64.7324, 0.2746", "264.0, 439.781, 64.8194, 0.2746", "263.427, 438.793, 64.9295, 0.2746", "262.818, 437.829, 65.0546, 0.2746", "262.046, 436.987, 65.1815, 0.2746", "261.276, 436.145, 65.3352, 0.2746", "260.507, 435.305, 65.5057, 0.2746", "259.737, 434.463, 65.6897, 0.2746", "258.967, 433.621, 65.8832, 0.2746", "258.194, 432.779, 66.0545, 0.2746", "257.406, 431.952, 66.2119, 0.2746", "256.525, 431.22, 66.358, 0.2746", "255.692, 430.546, 66.6254, 0.2746", "254.878, 429.81, 66.9306, 0.2746", "254.068, 429.003, 67.1796, 0.2746", "252.937, 428.895, 67.4307, 0.2746", "251.898, 428.656, 67.5802, 0.2746", "250.789, 428.465, 67.7488, 0.2746", "249.652, 428.427, 67.8888, 0.2746", "248.508, 428.427, 68.014, 0.2746", "247.539, 427.948, 68.1414, 0.2748", "247.261, 426.871, 68.2774, 0.2748", "246.492, 426.048, 68.4345, 0.2752", "245.942, 425.228, 68.67, 0.2758", "245.001, 424.777, 69.0248, 0.2766", "243.896, 424.724, 69.4235, 0.2782", "243.299, 423.896, 69.8197, 0.2814", "242.74, 423.024, 70.194, 0.287", "241.898, 422.935, 70.7879, 0.2988", "240.755, 422.935, 71.3045, 0.3142", "239.708, 422.65, 71.682, 0.3734", "239.408, 422.819, 72.3481, 0.3338", "238.859, 422.361, 72.9641, 0.3", "238.493, 421.564, 73.6112, 0.2746", "238.209, 420.874, 74.1535, 0.2746", "238.012, 420.167, 74.2818, 0.2746", "237.954, 419.274, 74.4327, 0.2746", "237.758, 419.044, 74.8644, 0.2746", "237.118, 419.681, 75.2788, 0.2748", "236.776, 419.241, 75.2839, 0.2748", "236.198, 418.354, 75.2268, 0.2752", "235.452, 417.664, 75.0876, 0.2758", "235.452, 416.589, 74.9784, 0.2766", "235.593, 415.502, 74.8846, 0.2782", "235.746, 414.493, 75.0478, 0.2814", "235.566, 413.405, 75.406, 0.2874", "235.141, 412.342, 75.801, 0.2982", "234.837, 411.355, 76.3854, 0.3192", "234.403, 410.376, 76.9756, 0.3528", "233.992, 409.723, 77.7521, 0.4412", "233.277, 408.893, 78.4507, 0.4798", "232.594, 408.009, 79.1151, 0.4718", "232.183, 406.993, 79.7387, 0.3856", "232.084, 405.891, 80.3278, 0.3434", "231.622, 404.924, 80.8609, 0.381", "231.253, 403.986, 81.3288, 0.3474", "230.495, 403.182, 81.8138, 0.3262", "230.167, 402.309, 82.4527, 0.3178", "229.779, 401.549, 83.2913, 0.3804", "229.381, 400.612, 84.2002, 0.3468", "228.755, 399.739, 84.9772, 0.3248", "228.329, 398.734, 85.7326, 0.3156", "227.87, 397.786, 86.4606, 0.3762", "227.068, 397.531, 87.3211, 0.3388", "226.775, 396.768, 88.2479, 0.3094", "226.052, 395.952, 89.105, 0.2914", "225.247, 395.456, 89.9391, 0.307", "224.76, 394.648, 90.5962, 0.3304", "224.606, 393.595, 91.1291, 0.3984", "224.098, 392.623, 91.5356, 0.4068", "223.586, 391.629, 91.8308, 0.305", "223.158, 390.665, 92.0545, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "311.335, 469.36, 47.9564, 0.5014", "311.595, 468.587, 47.5488, 0.6864", "311.923, 467.593, 45.3933, 0.5526", "311.637, 466.919, 44.38, 0.4022", "311.104, 466.437, 43.0926, 0.3334", "309.96, 466.417, 41.841, 0.3314", "309.253, 466.179, 40.3102, 0.4052", "309.095, 465.685, 38.5459, 0.394", "309.005, 465.163, 36.6243, 0.4068", "309.241, 464.76, 34.6108, 0.4946", "309.63, 464.526, 32.557, 0.5746", "309.995, 464.358, 30.5332, 0.6702", "310.19, 463.938, 28.7361, 0.644", "310.129, 463.444, 27.1618, 0.6668", "310.606, 464.321, 25.9898, 0.5932", "310.811, 465.41, 25.2189, 0.5592", "311.048, 466.188, 25.2588, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "311.335, 469.36, 47.9564, 0.5014", "311.973, 467.871, 47.4152, 0.3718", "312.658, 467.173, 46.7468, 0.3244" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "312.658, 467.173, 46.7468, 0.3244", "313.596, 467.075, 46.1012, 0.3146", "314.472, 466.391, 45.6, 0.374", "314.587, 465.259, 45.2273, 0.3352", "314.276, 464.169, 44.935, 0.3024", "314.078, 463.043, 44.6746, 0.2792", "313.81, 462.056, 44.3066, 0.2832", "314.125, 460.966, 43.9258, 0.2908", "314.63, 460.082, 43.4563, 0.3044", "315.408, 459.443, 42.8674, 0.3304", "316.159, 458.663, 42.2946, 0.375", "316.451, 457.623, 41.7945, 0.4768", "316.639, 456.506, 41.4392, 0.5714", "316.937, 455.402, 41.2328, 0.5176", "317.237, 454.298, 41.1594, 0.385" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "312.658, 467.173, 46.7468, 0.3244", "311.681, 466.603, 45.4362, 0.2754", "311.038, 465.829, 45.0884, 0.2762", "309.955, 465.625, 45.0209, 0.2778", "308.833, 465.468, 45.0072, 0.2802", "307.778, 465.044, 45.0097, 0.2854", "306.735, 464.812, 44.9994, 0.2944", "306.69, 463.858, 44.8123, 0.3124", "305.886, 463.158, 44.611, 0.3404", "304.982, 462.552, 44.5178, 0.4172", "303.873, 462.527, 44.429, 0.4404", "302.775, 462.527, 44.501, 0.3732", "301.669, 462.524, 44.6732, 0.327", "300.883, 461.869, 44.9224, 0.3192", "299.99, 461.423, 45.0125, 0.383", "299.124, 460.77, 45.0918, 0.3514", "298.137, 460.267, 45.2682, 0.3336", "297.184, 459.651, 45.4261, 0.3314", "296.113, 459.345, 45.5902, 0.4064", "295.098, 459.092, 45.8643, 0.3894", "294.097, 458.547, 46.0424, 0.4294", "293.135, 458.022, 46.048, 0.3852", "292.198, 457.472, 46.0314, 0.4208", "291.339, 456.741, 45.9158, 0.3756", "290.496, 455.978, 45.7453, 0.3718", "289.687, 455.296, 45.4474, 0.4352", "288.663, 454.977, 45.2794, 0.439", "287.765, 454.334, 45.0663, 0.5406", "287.046, 453.518, 44.8202, 0.4984", "286.006, 453.188, 44.6877, 0.3962", "285.096, 452.512, 44.5404, 0.3214", "284.109, 451.983, 44.4903, 0.315", "283.026, 451.708, 44.3713, 0.3454", "281.89, 451.808, 44.275, 0.4262", "280.797, 451.759, 44.0762, 0.4586", "279.901, 451.243, 43.9566, 0.402", "279.319, 450.432, 43.8511, 0.4046", "278.617, 449.679, 43.6696, 0.3446", "277.688, 449.448, 43.3843, 0.3196", "276.679, 449.869, 42.9722, 0.3118", "275.609, 450.117, 42.5334, 0.3394", "274.843, 450.387, 41.9028, 0.415", "273.828, 450.18, 41.323, 0.4366", "272.703, 450.032, 40.892, 0.3664", "271.614, 449.855, 40.5611, 0.3126", "270.527, 450.121, 40.2545, 0.299", "269.732, 450.777, 39.9339, 0.3146", "269.128, 451.722, 39.6295, 0.3746", "268.263, 452.28, 39.2804, 0.3358", "267.147, 452.501, 38.9668, 0.3038", "266.053, 452.74, 38.7201, 0.2816", "265.185, 453.447, 38.593, 0.2876", "264.222, 453.961, 38.5554, 0.2998", "263.476, 454.698, 38.4496, 0.3158", "263.027, 455.677, 38.1651, 0.3764", "262.356, 455.72, 37.6429, 0.3396", "261.477, 455.265, 37.0191, 0.3104", "260.699, 455.826, 36.346, 0.294", "260.133, 456.576, 35.6434, 0.3114", "259.125, 456.913, 34.921, 0.3386", "258.047, 457.006, 34.2622, 0.4136", "256.923, 456.941, 33.6969, 0.434", "255.809, 456.793, 33.2209, 0.3616", "254.716, 456.453, 32.8689, 0.304", "253.622, 456.134, 32.6049, 0.2824", "252.498, 456.201, 32.3294, 0.289", "251.373, 456.267, 32.0261, 0.3006", "250.311, 456.609, 31.7839, 0.3252", "249.266, 457.044, 31.5983, 0.3576", "248.304, 457.546, 31.262, 0.4798", "247.28, 457.911, 30.8759, 0.407", "246.291, 457.584, 30.3932, 0.3522", "245.783, 456.858, 29.724, 0.319", "245.131, 456.108, 28.9666, 0.3824", "244.262, 455.427, 28.2932, 0.35", "243.788, 454.497, 27.9119, 0.3314", "242.846, 453.857, 27.6723, 0.3272", "241.877, 453.434, 27.3717, 0.3986", "240.747, 453.333, 27.1158, 0.3754", "239.612, 453.217, 26.8691, 0.4024", "238.495, 453.055, 26.5565, 0.3406", "237.378, 452.892, 26.1865, 0.3126", "236.38, 452.357, 25.8602, 0.2988", "235.552, 451.666, 25.5312, 0.3142", "234.622, 451.719, 25.056, 0.3736", "233.556, 452.006, 24.6487, 0.334", "232.413, 452.009, 24.3751, 0.3004", "231.269, 452.009, 24.2141, 0.2752", "230.127, 452.006, 24.1567, 0.276", "229.0, 451.984, 24.2408, 0.277", "227.873, 451.962, 24.4201, 0.2794", "226.804, 451.607, 24.5773, 0.2834", "225.749, 451.163, 24.6888, 0.291", "224.642, 451.405, 24.7598, 0.3062", "223.525, 451.551, 24.7367, 0.3276", "222.423, 451.53, 24.6304, 0.3984", "221.348, 451.332, 24.6125, 0.3814", "220.29, 451.212, 24.7334, 0.3824", "219.365, 451.793, 24.8862, 0.4546", "218.318, 452.215, 25.0493, 0.4756", "217.234, 452.467, 25.2513, 0.6048", "216.136, 452.466, 25.5155, 0.6374", "215.027, 452.229, 25.7472, 0.5558", "213.936, 452.009, 25.9237, 0.4096", "212.995, 451.999, 25.8234, 0.3406", "211.871, 451.889, 25.6985, 0.3754", "210.797, 451.496, 25.611, 0.3374", "209.809, 450.95, 25.5781, 0.3068", "208.797, 450.708, 25.7167, 0.2872", "207.742, 450.608, 26.006, 0.2976", "206.668, 450.298, 26.2806, 0.3182", "205.589, 449.919, 26.4554, 0.3512", "204.497, 449.585, 26.5119, 0.438", "204.169, 448.851, 26.2454, 0.4738", "203.829, 447.759, 25.9738, 0.4612", "203.43, 446.75, 25.8455, 0.365", "202.867, 445.764, 25.7036, 0.3104", "202.056, 445.047, 25.5117, 0.2942", "201.081, 444.45, 25.4093, 0.3104", "200.13, 443.877, 25.3965, 0.3434", "199.092, 443.894, 25.5076, 0.3914", "198.227, 444.497, 25.6898, 0.5444", "197.3, 445.146, 25.8075, 0.5174", "196.38, 445.8, 25.8546, 0.602", "195.471, 446.453, 25.8043, 0.5608", "194.531, 446.941, 25.6301, 0.5326", "193.604, 447.235, 25.6677, 0.4754", "192.958, 447.534, 26.0254, 0.3924", "192.273, 447.974, 26.3333, 0.356", "191.577, 448.302, 26.2901, 0.4038", "191.114, 448.742, 26.4854, 0.3898", "190.457, 449.253, 26.6216, 0.4068", "190.199, 449.253, 25.8202, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "317.237, 454.298, 41.1594, 0.385", "317.527, 454.589, 39.0902, 0.4576", "317.858, 454.47, 36.7186, 0.397", "317.906, 453.688, 35.7364, 0.3642", "317.03, 453.276, 34.764, 0.4204", "316.603, 452.45, 33.6977, 0.4166", "317.046, 451.909, 32.5032, 0.4732", "317.762, 451.134, 31.6221, 0.499", "317.986, 450.418, 30.6838, 0.473", "318.058, 449.753, 29.596, 0.5564", "317.241, 448.986, 28.6096, 0.5272", "317.0, 448.539, 27.4582, 0.4518", "317.405, 447.816, 26.2956, 0.4134", "317.372, 446.683, 25.3739, 0.5384", "317.109, 445.581, 24.6851, 0.505", "316.56, 444.596, 24.1286, 0.586", "315.75, 443.961, 23.6291, 0.4986", "314.699, 443.76, 23.1591, 0.574", "313.591, 443.663, 22.7381, 0.477", "312.595, 443.12, 22.381, 0.532", "311.918, 442.221, 22.0693, 0.4096", "311.3, 441.391, 21.6968, 0.3566", "310.854, 440.451, 21.3128, 0.3272", "310.59, 439.404, 21.0789, 0.3988", "311.049, 438.495, 20.8141, 0.3756", "312.131, 438.17, 20.5987, 0.4038", "312.421, 437.146, 20.3595, 0.3388", "312.134, 436.094, 20.2523, 0.3304", "311.734, 435.292, 19.6459, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "317.237, 454.298, 41.1594, 0.385", "317.105, 453.883, 41.1858, 0.3004", "316.906, 452.771, 41.2955, 0.2754", "316.966, 451.68, 41.5299, 0.2762", "317.491, 450.839, 41.9135, 0.2776", "318.492, 450.349, 42.1697, 0.2802", "319.496, 449.925, 42.2643, 0.285", "320.557, 449.544, 42.3424, 0.2938", "320.995, 448.539, 42.5312, 0.3112", "321.236, 447.493, 42.8134, 0.3384", "322.047, 446.726, 43.094, 0.413", "323.015, 446.193, 43.4213, 0.4328", "323.919, 445.506, 43.72, 0.3596", "324.523, 444.556, 43.9757, 0.3008", "324.803, 443.467, 44.1568, 0.276", "325.048, 442.349, 44.252, 0.2774", "325.096, 441.213, 44.2739, 0.2796", "325.124, 440.076, 44.2487, 0.284", "325.256, 439.001, 44.1428, 0.292", "325.755, 437.979, 44.1162, 0.3078", "326.329, 437.07, 44.2896, 0.3306", "326.75, 436.073, 44.6214, 0.4052", "326.954, 434.989, 45.0061, 0.3874", "326.916, 433.847, 45.3676, 0.4258", "326.752, 432.716, 45.7153, 0.3784", "326.583, 431.584, 46.0373, 0.4084", "326.61, 430.49, 46.4008, 0.3512", "326.846, 429.434, 46.8756, 0.3332", "326.954, 428.398, 47.4678, 0.3308", "327.187, 427.344, 48.0813, 0.4046", "327.259, 426.216, 48.6116, 0.392", "326.65, 425.378, 49.1658, 0.4046", "326.144, 424.375, 49.59, 0.4844", "326.039, 423.249, 49.8994, 0.5854", "325.773, 422.168, 50.1337, 0.544", "325.451, 421.087, 50.3619, 0.435", "325.24, 419.97, 50.6156, 0.3888", "325.223, 418.872, 50.9118, 0.4602", "325.454, 417.796, 51.2845, 0.516", "325.463, 416.703, 51.653, 0.5344", "325.201, 415.589, 51.9445, 0.5224", "324.929, 414.478, 52.1693, 0.4986", "324.581, 413.389, 52.3494, 0.4596", "324.234, 412.299, 52.498, 0.362", "324.207, 411.171, 52.6781, 0.3048", "324.207, 410.038, 52.8976, 0.2834", "324.207, 408.901, 53.1289, 0.2908", "324.207, 407.757, 53.3408, 0.3056", "324.207, 406.614, 53.541, 0.3268", "324.498, 405.525, 53.723, 0.3978", "324.981, 404.515, 53.8952, 0.374", "325.82, 403.84, 54.152, 0.4002", "326.039, 402.876, 54.5854, 0.3362", "326.249, 401.796, 55.0332, 0.3044", "326.499, 400.681, 55.4151, 0.2826", "326.565, 399.557, 55.7967, 0.2892", "326.631, 398.434, 56.1599, 0.3018", "327.062, 397.405, 56.4404, 0.3256", "327.632, 396.412, 56.6362, 0.366", "327.849, 395.319, 56.7865, 0.4594", "327.87, 394.176, 56.9148, 0.5444", "328.017, 393.1, 57.083, 0.4432", "328.629, 392.2, 57.2905, 0.3656", "329.423, 391.435, 57.4476, 0.3746", "329.791, 390.351, 57.5512, 0.3358", "330.159, 389.268, 57.6089, 0.3038" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "330.159, 389.268, 57.6089, 0.3038", "330.229, 388.739, 57.5862, 0.2816", "330.362, 387.654, 57.5876, 0.2876", "330.8, 386.791, 57.4563, 0.2986", "331.819, 386.774, 57.283, 0.32", "332.61, 386.376, 57.3776, 0.3544", "333.556, 385.74, 57.472, 0.4442", "334.611, 385.319, 57.5478, 0.4852", "335.724, 385.172, 57.6321, 0.4832", "336.85, 385.237, 57.7027, 0.4004", "337.967, 385.428, 57.6492, 0.4018", "339.043, 385.61, 57.4437, 0.3394", "339.919, 385.037, 57.2922, 0.31", "340.778, 384.486, 57.08, 0.2928", "341.81, 384.203, 56.7748, 0.3096", "342.743, 384.257, 56.3609, 0.3338", "343.85, 384.204, 56.1543, 0.4112", "344.939, 384.096, 56.1305, 0.3984", "345.941, 384.598, 56.1618, 0.446", "346.827, 385.151, 56.2279, 0.4168", "347.935, 385.097, 56.4284, 0.4752", "349.024, 384.996, 56.7218, 0.4968", "350.041, 385.289, 57.0853, 0.4984", "351.144, 385.581, 57.3751, 0.4592", "352.218, 385.416, 57.6562, 0.3612", "353.168, 385.012, 57.7097, 0.3036", "354.05, 384.411, 57.7637, 0.2814", "355.017, 383.812, 57.776, 0.2872", "355.824, 383.017, 57.7461, 0.299", "356.502, 382.263, 57.6262, 0.3148", "357.434, 381.855, 57.6475, 0.3748", "358.439, 381.513, 57.694, 0.3366", "358.905, 380.743, 57.8869, 0.305", "359.891, 380.584, 57.89, 0.2838", "361.014, 380.42, 57.9188, 0.2914", "362.147, 380.292, 57.9547, 0.307", "363.278, 380.213, 57.9197, 0.3292", "364.324, 380.361, 57.7405, 0.4024", "365.372, 380.533, 57.6304, 0.3826", "366.431, 380.164, 57.5425, 0.4156", "367.33, 379.469, 57.4269, 0.3656", "368.028, 378.777, 57.1018, 0.3538", "368.902, 378.159, 56.8708, 0.3994", "369.902, 378.017, 56.8417, 0.383", "370.396, 377.338, 56.5768, 0.387", "371.197, 376.632, 56.2559, 0.4566", "372.007, 375.837, 55.9863, 0.5096", "372.689, 374.952, 55.8474, 0.523", "373.558, 374.214, 55.6948, 0.5", "374.27, 373.324, 55.4974, 0.4624", "374.999, 372.465, 55.2765, 0.3672", "375.819, 371.693, 55.0189, 0.3144", "376.413, 370.738, 54.6924, 0.3024", "376.953, 369.94, 54.2926, 0.321", "377.565, 369.131, 53.7513, 0.386", "378.137, 368.264, 53.1454, 0.358", "378.233, 367.227, 52.6344, 0.3396", "377.511, 366.436, 52.1842, 0.3734", "377.029, 365.436, 51.9582, 0.3338", "377.165, 364.341, 51.8224, 0.3", "377.51, 363.267, 51.6818, 0.2748", "377.914, 362.197, 51.5721, 0.2748", "378.319, 361.128, 51.4634, 0.275", "378.792, 360.109, 51.2904, 0.2754", "379.444, 359.169, 51.1372, 0.2764", "380.143, 358.305, 50.9606, 0.278", "381.164, 357.959, 50.8334, 0.2812", "382.157, 357.421, 50.7254, 0.2864", "382.983, 356.641, 50.6831, 0.2976", "383.843, 355.936, 50.6867, 0.3124", "384.826, 355.482, 50.6999, 0.37", "385.448, 354.617, 50.6122, 0.3276", "385.858, 353.594, 50.6299, 0.288", "386.117, 352.518, 50.7307, 0.2542", "386.722, 351.756, 50.7385, 0.2288", "387.722, 351.53, 51.079, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "330.159, 389.268, 57.6089, 0.3038", "330.49, 387.865, 57.7937, 0.3286", "330.752, 386.751, 57.8791, 0.4014", "330.945, 385.624, 57.9138, 0.3802", "331.133, 384.496, 57.9628, 0.4114", "331.439, 383.4, 58.0289, 0.358", "331.863, 382.337, 58.1126, 0.3396", "332.144, 381.256, 58.2439, 0.3736", "332.144, 380.139, 58.4702, 0.334", "332.032, 379.022, 58.7286, 0.3004", "331.77, 377.909, 58.961, 0.2752", "331.534, 376.794, 59.1763, 0.2758", "331.534, 375.655, 59.4126, 0.2766", "331.534, 374.518, 59.6551, 0.2784", "331.504, 373.404, 59.9385, 0.2818", "331.044, 372.502, 60.3095, 0.2882", "330.633, 371.451, 60.613, 0.2994", "330.553, 370.361, 60.7281, 0.3228", "330.236, 369.299, 60.7729, 0.3538", "330.072, 368.209, 60.9011, 0.4722", "329.878, 367.113, 61.0826, 0.3934", "330.306, 366.079, 61.2478, 0.3256", "330.785, 365.087, 61.4432, 0.2748", "330.943, 363.962, 61.6958, 0.275", "331.076, 362.835, 61.9651, 0.2752", "331.076, 361.69, 62.1958, 0.276", "331.125, 360.561, 62.4268, 0.2768", "331.448, 359.512, 62.7673, 0.279", "331.848, 358.487, 63.1518, 0.2826", "332.47, 357.527, 63.474, 0.2892", "332.815, 356.467, 63.782, 0.303", "333.094, 355.371, 64.1175, 0.322", "333.395, 354.306, 64.5154, 0.3878", "333.405, 353.228, 64.8698, 0.3618", "332.93, 352.343, 65.3156, 0.3464", "332.97, 351.321, 65.6804, 0.386", "333.071, 350.345, 66.1674, 0.358", "333.367, 349.247, 66.5543, 0.3398", "333.701, 348.192, 66.9432, 0.3736", "333.935, 347.077, 67.2084, 0.3346", "333.916, 345.933, 67.3767, 0.3012", "333.579, 344.882, 67.548, 0.2766", "333.478, 343.765, 67.669, 0.2782", "333.306, 342.655, 67.6967, 0.2814", "333.39, 341.534, 67.7012, 0.287", "333.578, 340.405, 67.7306, 0.2986", "333.663, 339.275, 67.7813, 0.314", "333.187, 338.467, 67.9692, 0.373", "332.302, 337.832, 68.1873, 0.333", "331.665, 337.028, 68.3757, 0.2982", "331.622, 335.921, 68.5966, 0.2712", "331.075, 334.921, 68.7436, 0.2684", "330.696, 334.191, 68.9027, 0.2626", "330.55, 333.087, 68.9534, 0.2542", "330.269, 332.054, 68.817, 0.2288", "330.045, 330.932, 68.4796, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_278",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_20", "dend_13", "dend_0", "dend_25", "dend_24", "dend_22", "dend_21", "dend_17", "dend_14", "dend_10", "dend_1", "dend_19", "dend_18", "dend_16", "dend_15", "dend_12", "dend_11", "dend_9", "dend_2", "dend_4", "dend_3", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11537",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.8339026"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "17.797174"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.9008417E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.09043414",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.7811598E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.038021997",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.44630706",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.00613925E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0014587612",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0011801481",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "9.8346834E-5",
    "erev" : "-83.947205"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.765132E-4",
    "erev" : "-83.947205"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.0138103E-4",
    "erev" : "-83.947205"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.205916E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0011658843",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_480629276",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_480629276

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_278, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_278
// Group: {name=dend, groups=[], sections=[dend_23, dend_20, dend_13, dend_0, dend_25, dend_24, dend_22, dend_21, dend_17, dend_14, dend_10, dend_1, dend_19, dend_18, dend_16, dend_15, dend_12, dend_11, dend_9, dend_2, dend_4, dend_3, dend_8, dend_5, dend_7, dend_6]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_11537, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_11537
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_480629276
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_23(0), soma_0(0.5)
    connect dend_20(0), soma_0(0.5)
    connect dend_13(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 316.341, 495.548, 49.0314, 11.9618 ) }
    soma_0 { pt3dadd( 322.322, 495.548, 49.0314, 11.9618 ) }
    soma_0 { pt3dadd( 328.303, 495.548, 49.0314, 11.9618 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 322.322, 495.548, 49.0314, 1.0 ) }
    axon_0 { pt3dadd( 328.163, 509.364, 49.0314, 1.0 ) }
    axon_0 { pt3dadd( 334.005, 523.18, 49.0314, 1.0 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 323.188, 500.932, 45.5731, 0.296 ) }
    dend_23 { pt3dadd( 323.364, 502.026, 44.5116, 0.3156 ) }
    dend_23 { pt3dadd( 323.539, 503.12, 44.0773, 0.345 ) }
    dend_23 { pt3dadd( 323.67, 504.138, 43.5254, 0.4316 ) }
    dend_23 { pt3dadd( 324.057, 505.028, 42.8725, 0.437 ) }
    dend_23 { pt3dadd( 324.25, 506.1, 42.2839, 0.5134 ) }
    dend_23 { pt3dadd( 324.799, 507.021, 41.9266, 0.562 ) }
    dend_23 { pt3dadd( 325.364, 507.868, 41.8684, 0.647 ) }
    dend_23 { pt3dadd( 325.929, 508.847, 41.8552, 0.6004 ) }
    dend_23 { pt3dadd( 326.455, 509.731, 41.893, 0.5896 ) }
    dend_23 { pt3dadd( 327.267, 510.319, 41.7007, 0.4316 ) }
    dend_23 { pt3dadd( 328.293, 510.588, 41.3613, 0.3502 ) }
    dend_23 { pt3dadd( 329.327, 510.815, 40.9259, 0.3156 ) }
    dend_23 { pt3dadd( 330.095, 510.435, 40.3875, 0.376 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 20/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 321.659, 500.23, 48.4582, 0.2978 ) }
    dend_20 { pt3dadd( 321.498, 501.361, 48.1188, 0.3192 ) }
    dend_20 { pt3dadd( 321.338, 502.493, 47.9769, 0.3514 ) }
    dend_20 { pt3dadd( 321.178, 503.624, 47.805, 0.4446 ) }
    dend_20 { pt3dadd( 320.535, 504.469, 47.5896, 0.4564 ) }
    dend_20 { pt3dadd( 319.675, 505.149, 47.3651, 0.573 ) }
    dend_20 { pt3dadd( 319.173, 505.711, 46.8891, 0.559 ) }
    dend_20 { pt3dadd( 318.515, 506.374, 46.6413, 0.5054 ) }
    dend_20 { pt3dadd( 317.891, 507.196, 46.4304, 0.5398 ) }
    dend_20 { pt3dadd( 317.512, 508.227, 46.1647, 0.6416 ) }
    dend_20 { pt3dadd( 317.485, 509.349, 45.9152, 0.6446 ) }
    dend_20 { pt3dadd( 317.825, 510.414, 45.7274, 0.6374 ) }
    dend_20 { pt3dadd( 318.178, 511.338, 45.3706, 0.685 ) }
    dend_20 { pt3dadd( 318.372, 512.371, 44.8874, 0.7076 ) }
    dend_20 { pt3dadd( 318.294, 513.288, 44.2784, 0.6106 ) }
    dend_20 { pt3dadd( 318.023, 514.357, 43.9037, 0.6472 ) }
    dend_20 { pt3dadd( 317.705, 515.424, 43.6895, 0.809 ) }
    dend_20 { pt3dadd( 317.627, 516.498, 43.6724, 0.8822 ) }
    dend_20 { pt3dadd( 317.294, 517.591, 43.6898, 0.7446 ) }
    dend_20 { pt3dadd( 316.944, 518.667, 43.7027, 0.6724 ) }
    dend_20 { pt3dadd( 316.143, 519.377, 43.5946, 0.565 ) }
    dend_20 { pt3dadd( 315.863, 520.315, 43.2928, 0.4682 ) }
    dend_20 { pt3dadd( 316.105, 521.209, 43.0259, 0.4756 ) }
    dend_20 { pt3dadd( 316.427, 522.124, 42.8215, 0.4978 ) }
    dend_20 { pt3dadd( 316.75, 523.208, 42.6084, 0.5004 ) }
    dend_20 { pt3dadd( 316.77, 524.34, 42.3455, 0.463 ) }
    dend_20 { pt3dadd( 316.728, 525.429, 41.9681, 0.3684 ) }
    dend_20 { pt3dadd( 316.341, 526.449, 41.538, 0.3166 ) }
    dend_20 { pt3dadd( 315.854, 527.268, 40.9562, 0.3066 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 326.427, 492.881, 48.4103, 0.3212 ) }
    dend_13 { pt3dadd( 327.384, 492.259, 48.1712, 0.3626 ) }
    dend_13 { pt3dadd( 328.342, 491.636, 47.9175, 0.4304 ) }
    dend_13 { pt3dadd( 329.303, 491.025, 47.6398, 0.599 ) }
    dend_13 { pt3dadd( 330.267, 490.427, 47.3318, 0.7044 ) }
    dend_13 { pt3dadd( 331.237, 489.849, 46.9952, 0.5318 ) }
    dend_13 { pt3dadd( 332.216, 489.317, 46.6225, 0.3984 ) }
    dend_13 { pt3dadd( 333.246, 488.877, 46.2412, 0.3878 ) }
    dend_13 { pt3dadd( 334.325, 488.526, 45.8839, 0.362 ) }
    dend_13 { pt3dadd( 335.433, 488.313, 45.5826, 0.3466 ) }
    dend_13 { pt3dadd( 336.575, 488.257, 45.3558, 0.3864 ) }
    dend_13 { pt3dadd( 337.718, 488.2, 45.1816, 0.358 ) }
    dend_13 { pt3dadd( 338.862, 488.188, 45.036, 0.3454 ) }
    dend_13 { pt3dadd( 340.006, 488.188, 44.8904, 0.3548 ) }
    dend_13 { pt3dadd( 341.15, 488.188, 44.723, 0.4436 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 318.482, 491.289, 49.6706, 0.2962 ) }
    dend_0 { pt3dadd( 317.716, 490.44, 49.7288, 0.3162 ) }
    dend_0 { pt3dadd( 317.036, 489.527, 49.7549, 0.3462 ) }
    dend_0 { pt3dadd( 316.436, 488.552, 49.7689, 0.434 ) }
    dend_0 { pt3dadd( 315.836, 487.578, 49.7697, 0.4414 ) }
    dend_0 { pt3dadd( 315.236, 486.604, 49.754, 0.5218 ) }
    dend_0 { pt3dadd( 314.629, 485.635, 49.7235, 0.5766 ) }
    dend_0 { pt3dadd( 314.011, 484.673, 49.6793, 0.6798 ) }
    dend_0 { pt3dadd( 313.211, 483.857, 49.5986, 0.6322 ) }
    dend_0 { pt3dadd( 312.402, 483.048, 49.4855, 0.7892 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 74/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 334.005, 523.18, 49.0314, 1.0 ) }
    axon_1 { pt3dadd( 339.846, 536.996, 49.0314, 1.0 ) }
    axon_1 { pt3dadd( 345.687, 550.812, 49.0314, 1.0 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 330.095, 510.435, 40.3875, 0.376 ) }
    dend_25 { pt3dadd( 330.504, 510.15, 40.171, 0.3386 ) }
    dend_25 { pt3dadd( 331.497, 509.941, 39.8874, 0.3088 ) }
    dend_25 { pt3dadd( 332.532, 509.671, 39.674, 0.291 ) }
    dend_25 { pt3dadd( 333.439, 509.507, 39.4072, 0.3062 ) }
    dend_25 { pt3dadd( 334.27, 509.65, 39.0113, 0.3274 ) }
    dend_25 { pt3dadd( 335.081, 509.905, 38.6646, 0.3992 ) }
    dend_25 { pt3dadd( 335.858, 510.692, 38.4241, 0.3766 ) }
    dend_25 { pt3dadd( 336.645, 511.31, 38.169, 0.4048 ) }
    dend_25 { pt3dadd( 337.725, 511.503, 37.9641, 0.3448 ) }
    dend_25 { pt3dadd( 338.813, 511.719, 37.7801, 0.3198 ) }
    dend_25 { pt3dadd( 339.914, 511.808, 37.6886, 0.3126 ) }
    dend_25 { pt3dadd( 340.934, 511.751, 37.6043, 0.3396 ) }
    dend_25 { pt3dadd( 341.06, 512.394, 37.2151, 0.4214 ) }
    dend_25 { pt3dadd( 341.979, 512.244, 36.8351, 0.4184 ) }
    dend_25 { pt3dadd( 342.409, 512.615, 36.8802, 0.4782 ) }
    dend_25 { pt3dadd( 343.551, 512.647, 36.972, 0.5022 ) }
    dend_25 { pt3dadd( 344.585, 513.045, 37.0997, 0.5084 ) }
    dend_25 { pt3dadd( 345.695, 513.238, 37.3257, 0.478 ) }
    dend_25 { pt3dadd( 346.754, 513.105, 37.5393, 0.3954 ) }
    dend_25 { pt3dadd( 347.765, 512.694, 37.807, 0.3692 ) }
    dend_25 { pt3dadd( 348.743, 512.18, 38.113, 0.3922 ) }
    dend_25 { pt3dadd( 349.787, 511.798, 38.4563, 0.5454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( 350.854, 511.46, 38.8007, 0.5194 ) }
    dend_25 { pt3dadd( 351.939, 511.114, 39.0457, 0.606 ) }
    dend_25 { pt3dadd( 353.029, 510.766, 39.1829, 0.5684 ) }
    dend_25 { pt3dadd( 354.134, 510.477, 39.209, 0.5472 ) }
    dend_25 { pt3dadd( 355.249, 510.226, 39.1451, 0.4976 ) }
    dend_25 { pt3dadd( 356.363, 510.009, 38.9942, 0.4582 ) }
    dend_25 { pt3dadd( 357.477, 509.802, 38.7814, 0.3592 ) }
    dend_25 { pt3dadd( 358.605, 509.901, 38.5843, 0.3 ) }
    dend_25 { pt3dadd( 359.735, 510.073, 38.4154, 0.2746 ) }
    dend_25 { pt3dadd( 360.868, 510.17, 38.2455, 0.2746 ) }
    dend_25 { pt3dadd( 361.999, 510.17, 38.045, 0.2748 ) }
    dend_25 { pt3dadd( 363.131, 510.17, 37.8277, 0.2748 ) }
    dend_25 { pt3dadd( 364.204, 509.784, 37.6482, 0.2752 ) }
    dend_25 { pt3dadd( 365.273, 509.38, 37.4982, 0.2758 ) }
    dend_25 { pt3dadd( 366.404, 509.29, 37.3797, 0.2766 ) }
    dend_25 { pt3dadd( 367.548, 509.271, 37.2879, 0.2782 ) }
    dend_25 { pt3dadd( 368.692, 509.256, 37.2078, 0.2814 ) }
    dend_25 { pt3dadd( 369.835, 509.301, 37.1204, 0.287 ) }
    dend_25 { pt3dadd( 370.921, 509.645, 37.0118, 0.2988 ) }
    dend_25 { pt3dadd( 372.059, 509.566, 36.8788, 0.3142 ) }
    dend_25 { pt3dadd( 372.763, 508.747, 36.6394, 0.3734 ) }
    dend_25 { pt3dadd( 373.571, 508.124, 36.2818, 0.3338 ) }
    dend_25 { pt3dadd( 374.574, 507.65, 35.8784, 0.3 ) }
    dend_25 { pt3dadd( 375.675, 507.375, 35.5421, 0.2746 ) }
    dend_25 { pt3dadd( 376.794, 507.139, 35.2839, 0.2746 ) }
    dend_25 { pt3dadd( 377.849, 506.737, 35.0955, 0.2746 ) }
    dend_25 { pt3dadd( 378.857, 506.198, 34.9684, 0.2746 ) }
    dend_25 { pt3dadd( 379.881, 506.41, 34.8816, 0.2746 ) }
    dend_25 { pt3dadd( 380.861, 506.965, 34.7528, 0.2746 ) }
    dend_25 { pt3dadd( 381.945, 507.072, 34.552, 0.2746 ) }
    dend_25 { pt3dadd( 383.057, 507.339, 34.3918, 0.2746 ) }
    dend_25 { pt3dadd( 384.144, 507.657, 34.2768, 0.2746 ) }
    dend_25 { pt3dadd( 385.099, 508.237, 34.2143, 0.2746 ) }
    dend_25 { pt3dadd( 386.194, 508.518, 34.2006, 0.2746 ) }
    dend_25 { pt3dadd( 387.04, 509.238, 34.2286, 0.2746 ) }
    dend_25 { pt3dadd( 387.724, 510.099, 34.3434, 0.2746 ) }
    dend_25 { pt3dadd( 388.618, 510.628, 34.5369, 0.2744 ) }
    dend_25 { pt3dadd( 389.761, 510.637, 34.671, 0.2744 ) }
    dend_25 { pt3dadd( 390.895, 510.795, 34.7413, 0.2742 ) }
    dend_25 { pt3dadd( 392.026, 510.96, 34.7441, 0.2736 ) }
    dend_25 { pt3dadd( 393.161, 511.087, 34.6735, 0.2728 ) }
    dend_25 { pt3dadd( 394.305, 511.087, 34.51, 0.2712 ) }
    dend_25 { pt3dadd( 395.449, 511.087, 34.2818, 0.2684 ) }
    dend_25 { pt3dadd( 396.541, 511.087, 33.9436, 0.2626 ) }
    dend_25 { pt3dadd( 397.577, 511.087, 33.4474, 0.2542 ) }
    dend_25 { pt3dadd( 398.643, 511.087, 32.8885, 0.2288 ) }
    dend_25 { pt3dadd( 399.764, 511.087, 31.7299, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 330.095, 510.435, 40.3875, 0.376 ) }
    dend_24 { pt3dadd( 329.582, 510.699, 39.5702, 0.4576 ) }
    dend_24 { pt3dadd( 328.564, 511.143, 38.6257, 0.42 ) }
    dend_24 { pt3dadd( 327.647, 511.463, 38.08, 0.4396 ) }
    dend_24 { pt3dadd( 327.002, 511.527, 37.7695, 0.4036 ) }
    dend_24 { pt3dadd( 326.308, 512.163, 37.2655, 0.457 ) }
    dend_24 { pt3dadd( 325.64, 511.676, 36.442, 0.4308 ) }
    dend_24 { pt3dadd( 325.287, 511.025, 35.3321, 0.5318 ) }
    dend_24 { pt3dadd( 324.764, 510.469, 34.0418, 0.451 ) }
    dend_24 { pt3dadd( 323.878, 510.028, 32.8082, 0.4592 ) }
    dend_24 { pt3dadd( 323.413, 509.095, 31.687, 0.393 ) }
    dend_24 { pt3dadd( 324.12, 509.193, 30.585, 0.436 ) }
    dend_24 { pt3dadd( 325.205, 509.192, 29.6162, 0.399 ) }
    dend_24 { pt3dadd( 326.124, 508.638, 28.889, 0.4408 ) }
    dend_24 { pt3dadd( 326.604, 507.865, 28.2094, 0.4374 ) }
    dend_24 { pt3dadd( 326.294, 507.643, 27.2657, 0.3682 ) }
    dend_24 { pt3dadd( 325.871, 506.641, 26.4149, 0.3162 ) }
    dend_24 { pt3dadd( 325.675, 505.576, 25.6849, 0.3054 ) }
    dend_24 { pt3dadd( 325.24, 504.86, 24.8618, 0.3268 ) }
    dend_24 { pt3dadd( 326.167, 504.456, 24.1709, 0.3968 ) }
    dend_24 { pt3dadd( 327.266, 504.204, 23.723, 0.3784 ) }
    dend_24 { pt3dadd( 328.182, 504.591, 23.6268, 0.3756 ) }
    dend_24 { pt3dadd( 329.13, 505.013, 23.5536, 0.4492 ) }
    dend_24 { pt3dadd( 329.649, 505.971, 23.4585, 0.4322 ) }
    dend_24 { pt3dadd( 330.045, 506.926, 23.0138, 0.6864 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 315.854, 527.268, 40.9562, 0.3066 ) }
    dend_22 { pt3dadd( 315.961, 527.341, 40.2584, 0.3288 ) }
    dend_22 { pt3dadd( 315.754, 528.153, 39.6032, 0.4002 ) }
    dend_22 { pt3dadd( 314.978, 528.797, 39.3448, 0.3858 ) }
    dend_22 { pt3dadd( 314.518, 529.737, 39.3859, 0.3856 ) }
    dend_22 { pt3dadd( 314.058, 530.751, 39.5122, 0.4844 ) }
    dend_22 { pt3dadd( 313.651, 531.794, 39.5786, 0.4156 ) }
    dend_22 { pt3dadd( 313.272, 532.859, 39.6452, 0.3668 ) }
    dend_22 { pt3dadd( 313.108, 533.977, 39.697, 0.3502 ) }
    dend_22 { pt3dadd( 313.108, 535.119, 39.6735, 0.4192 ) }
    dend_22 { pt3dadd( 313.046, 536.219, 39.6763, 0.523 ) }
    dend_22 { pt3dadd( 312.492, 537.036, 39.5587, 0.83 ) }
    dend_22 { pt3dadd( 312.421, 537.812, 39.3613, 0.844 ) }
    dend_22 { pt3dadd( 311.693, 538.662, 39.0866, 0.8204 ) }
    dend_22 { pt3dadd( 311.126, 539.627, 38.8027, 0.5592 ) }
    dend_22 { pt3dadd( 310.676, 540.676, 38.5554, 0.4438 ) }
    dend_22 { pt3dadd( 310.255, 541.695, 38.2875, 0.4978 ) }
    dend_22 { pt3dadd( 309.751, 542.702, 38.1058, 0.443 ) }
    dend_22 { pt3dadd( 309.02, 543.459, 38.1408, 0.407 ) }
    dend_22 { pt3dadd( 308.146, 544.081, 38.2841, 0.4768 ) }
    dend_22 { pt3dadd( 307.353, 544.864, 38.3244, 0.4016 ) }
    dend_22 { pt3dadd( 306.687, 545.757, 38.2684, 0.341 ) }
    dend_22 { pt3dadd( 306.29, 546.83, 38.1744, 0.3032 ) }
    dend_22 { pt3dadd( 305.947, 547.903, 38.0139, 0.3286 ) }
    dend_22 { pt3dadd( 305.996, 548.984, 37.6824, 0.3702 ) }
    dend_22 { pt3dadd( 306.046, 550.067, 37.2596, 0.4738 ) }
    dend_22 { pt3dadd( 306.113, 551.207, 36.9079, 0.5364 ) }
    dend_22 { pt3dadd( 306.18, 552.347, 36.6181, 0.5972 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( 305.911, 553.443, 36.3958, 0.5186 ) }
    dend_22 { pt3dadd( 305.543, 554.526, 36.2359, 0.387 ) }
    dend_22 { pt3dadd( 305.098, 555.569, 36.1586, 0.304 ) }
    dend_22 { pt3dadd( 304.592, 556.579, 36.1455, 0.2824 ) }
    dend_22 { pt3dadd( 304.295, 557.638, 35.999, 0.2888 ) }
    dend_22 { pt3dadd( 304.034, 558.707, 35.719, 0.302 ) }
    dend_22 { pt3dadd( 303.439, 559.669, 35.4164, 0.3204 ) }
    dend_22 { pt3dadd( 302.806, 560.618, 35.1067, 0.385 ) }
    dend_22 { pt3dadd( 301.97, 561.352, 34.7318, 0.355 ) }
    dend_22 { pt3dadd( 301.076, 562.003, 34.3417, 0.3404 ) }
    dend_22 { pt3dadd( 300.042, 562.457, 34.0547, 0.3452 ) }
    dend_22 { pt3dadd( 299.112, 563.083, 33.8976, 0.4258 ) }
    dend_22 { pt3dadd( 298.53, 563.84, 33.5457, 0.4576 ) }
    dend_22 { pt3dadd( 298.039, 564.833, 33.1862, 0.4002 ) }
    dend_22 { pt3dadd( 297.519, 565.851, 32.8762, 0.4016 ) }
    dend_22 { pt3dadd( 297.313, 566.942, 32.5587, 0.3388 ) }
    dend_22 { pt3dadd( 297.27, 568.071, 32.2118, 0.3092 ) }
    dend_22 { pt3dadd( 297.155, 569.197, 31.8741, 0.2914 ) }
    dend_22 { pt3dadd( 296.919, 570.316, 31.5994, 0.3056 ) }
    dend_22 { pt3dadd( 296.537, 571.369, 31.2978, 0.3332 ) }
    dend_22 { pt3dadd( 296.071, 572.383, 30.9439, 0.3798 ) }
    dend_22 { pt3dadd( 295.615, 573.425, 30.6264, 0.4858 ) }
    dend_22 { pt3dadd( 295.161, 574.476, 30.3573, 0.5876 ) }
    dend_22 { pt3dadd( 294.511, 575.374, 30.0622, 0.5492 ) }
    dend_22 { pt3dadd( 293.754, 576.188, 29.7175, 0.438 ) }
    dend_22 { pt3dadd( 293.199, 577.153, 29.3518, 0.4252 ) }
    dend_22 { pt3dadd( 292.657, 578.127, 28.9929, 0.3772 ) }
    dend_22 { pt3dadd( 291.987, 579.031, 28.789, 0.4058 ) }
    dend_22 { pt3dadd( 291.186, 579.695, 28.6322, 0.3468 ) }
    dend_22 { pt3dadd( 290.18, 580.122, 28.4421, 0.3248 ) }
    dend_22 { pt3dadd( 289.882, 581.118, 28.2968, 0.3158 ) }
    dend_22 { pt3dadd( 289.677, 582.233, 28.1742, 0.3764 ) }
    dend_22 { pt3dadd( 289.329, 583.252, 27.9731, 0.339 ) }
    dend_22 { pt3dadd( 289.155, 584.38, 27.7919, 0.3098 ) }
    dend_22 { pt3dadd( 288.981, 585.51, 27.6485, 0.2926 ) }
    dend_22 { pt3dadd( 288.567, 586.558, 27.6082, 0.3094 ) }
    dend_22 { pt3dadd( 288.092, 587.587, 27.6515, 0.3334 ) }
    dend_22 { pt3dadd( 287.697, 588.658, 27.7036, 0.41 ) }
    dend_22 { pt3dadd( 287.312, 589.735, 27.7481, 0.3976 ) }
    dend_22 { pt3dadd( 287.201, 590.869, 27.7728, 0.4386 ) }
    dend_22 { pt3dadd( 287.125, 592.011, 27.7729, 0.4332 ) }
    dend_22 { pt3dadd( 286.884, 593.067, 27.6694, 0.36 ) }
    dend_22 { pt3dadd( 286.554, 594.075, 27.5535, 0.3012 ) }
    dend_22 { pt3dadd( 285.81, 594.843, 27.3935, 0.2766 ) }
    dend_22 { pt3dadd( 284.807, 595.389, 27.2533, 0.2782 ) }
    dend_22 { pt3dadd( 283.887, 596.058, 27.1295, 0.2814 ) }
    dend_22 { pt3dadd( 283.205, 596.962, 27.0187, 0.287 ) }
    dend_22 { pt3dadd( 282.979, 598.06, 26.9187, 0.2988 ) }
    dend_22 { pt3dadd( 282.672, 599.145, 26.7951, 0.3142 ) }
    dend_22 { pt3dadd( 282.083, 600.099, 26.592, 0.3734 ) }
    dend_22 { pt3dadd( 281.491, 601.058, 26.3414, 0.3338 ) }
    dend_22 { pt3dadd( 280.891, 602.031, 26.1233, 0.3 ) }
    dend_22 { pt3dadd( 280.329, 603.023, 25.9336, 0.2746 ) }
    dend_22 { pt3dadd( 279.939, 604.098, 25.7689, 0.2746 ) }
    dend_22 { pt3dadd( 279.47, 605.084, 25.535, 0.2748 ) }
    dend_22 { pt3dadd( 279.024, 606.104, 25.2846, 0.2748 ) }
    dend_22 { pt3dadd( 278.62, 607.173, 25.068, 0.2752 ) }
    dend_22 { pt3dadd( 278.105, 608.187, 24.8759, 0.2758 ) }
    dend_22 { pt3dadd( 277.476, 609.143, 24.7103, 0.2766 ) }
    dend_22 { pt3dadd( 276.778, 610.029, 24.5298, 0.2784 ) }
    dend_22 { pt3dadd( 276.0, 610.834, 24.3002, 0.2816 ) }
    dend_22 { pt3dadd( 275.06, 611.45, 24.0696, 0.2874 ) }
    dend_22 { pt3dadd( 274.195, 612.191, 23.8715, 0.2994 ) }
    dend_22 { pt3dadd( 273.502, 613.071, 23.7045, 0.3156 ) }
    dend_22 { pt3dadd( 273.272, 614.187, 23.5649, 0.376 ) }
    dend_22 { pt3dadd( 272.665, 615.131, 23.4029, 0.3384 ) }
    dend_22 { pt3dadd( 271.971, 616.0, 23.1808, 0.3084 ) }
    dend_22 { pt3dadd( 271.304, 616.92, 22.9833, 0.2902 ) }
    dend_22 { pt3dadd( 270.646, 617.857, 22.8301, 0.3046 ) }
    dend_22 { pt3dadd( 270.01, 618.808, 22.716, 0.3248 ) }
    dend_22 { pt3dadd( 269.382, 619.763, 22.6362, 0.3934 ) }
    dend_22 { pt3dadd( 268.92, 620.804, 22.5859, 0.3714 ) }
    dend_22 { pt3dadd( 268.524, 621.877, 22.5559, 0.3654 ) }
    dend_22 { pt3dadd( 268.085, 622.926, 22.5039, 0.4162 ) }
    dend_22 { pt3dadd( 267.61, 623.955, 22.4188, 0.4386 ) }
    dend_22 { pt3dadd( 266.984, 624.894, 22.3351, 0.3702 ) }
    dend_22 { pt3dadd( 266.261, 625.777, 22.269, 0.3206 ) }
    dend_22 { pt3dadd( 265.756, 626.747, 22.3295, 0.3118 ) }
    dend_22 { pt3dadd( 265.474, 627.728, 22.5612, 0.3468 ) }
    dend_22 { pt3dadd( 265.0, 628.288, 22.9418, 0.3928 ) }
    dend_22 { pt3dadd( 264.262, 628.542, 23.0058, 0.5706 ) }
    dend_22 { pt3dadd( 263.994, 629.479, 22.8902, 0.4514 ) }
    dend_22 { pt3dadd( 263.127, 630.019, 22.8067, 0.349 ) }
    dend_22 { pt3dadd( 262.476, 629.731, 22.9763, 0.2712 ) }
    dend_22 { pt3dadd( 262.388, 630.347, 23.3672, 0.2684 ) }
    dend_22 { pt3dadd( 262.388, 631.475, 23.6487, 0.2626 ) }
    dend_22 { pt3dadd( 262.388, 632.592, 23.7479, 0.2542 ) }
    dend_22 { pt3dadd( 262.708, 632.897, 23.3715, 0.2288 ) }
    dend_22 { pt3dadd( 262.388, 632.447, 21.5309, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 315.854, 527.268, 40.9562, 0.3066 ) }
    dend_21 { pt3dadd( 315.258, 527.282, 39.557, 0.2288 ) }
    dend_21 { pt3dadd( 314.196, 527.241, 38.7783, 0.415 ) }
    dend_21 { pt3dadd( 313.09, 527.077, 38.451, 0.4366 ) }
    dend_21 { pt3dadd( 312.037, 526.831, 38.1072, 0.3664 ) }
    dend_21 { pt3dadd( 311.825, 525.841, 37.8792, 0.313 ) }
    dend_21 { pt3dadd( 311.185, 524.992, 37.5077, 0.2994 ) }
    dend_21 { pt3dadd( 310.718, 524.629, 36.8374, 0.3164 ) }
    dend_21 { pt3dadd( 310.534, 523.873, 36.0192, 0.373 ) }
    dend_21 { pt3dadd( 310.365, 523.07, 35.1341, 0.356 ) }
    dend_21 { pt3dadd( 310.615, 522.259, 34.1774, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 0/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 341.15, 488.188, 44.723, 0.4436 ) }
    dend_17 { pt3dadd( 341.912, 488.035, 46.4601, 0.4576 ) }
    dend_17 { pt3dadd( 342.845, 487.414, 46.9493, 0.5184 ) }
    dend_17 { pt3dadd( 343.794, 486.813, 47.1713, 0.4962 ) }
    dend_17 { pt3dadd( 344.807, 486.293, 47.3872, 0.4318 ) }
    dend_17 { pt3dadd( 345.812, 485.756, 47.5698, 0.4246 ) }
    dend_17 { pt3dadd( 346.79, 485.17, 47.6619, 0.5524 ) }
    dend_17 { pt3dadd( 347.83, 484.707, 47.7089, 0.563 ) }
    dend_17 { pt3dadd( 348.899, 484.303, 47.7319, 0.5368 ) }
    dend_17 { pt3dadd( 349.913, 483.787, 47.7501, 0.4844 ) }
    dend_17 { pt3dadd( 350.877, 483.176, 47.7742, 0.4024 ) }
    dend_17 { pt3dadd( 351.803, 482.504, 47.7786, 0.4056 ) }
    dend_17 { pt3dadd( 352.779, 481.915, 47.7641, 0.3464 ) }
    dend_17 { pt3dadd( 353.756, 481.445, 47.7963, 0.3244 ) }
    dend_17 { pt3dadd( 354.824, 481.319, 47.6608, 0.3144 ) }
    dend_17 { pt3dadd( 355.935, 481.319, 47.4485, 0.374 ) }
    dend_17 { pt3dadd( 357.043, 481.21, 47.2307, 0.3352 ) }
    dend_17 { pt3dadd( 358.175, 481.043, 47.0789, 0.3022 ) }
    dend_17 { pt3dadd( 359.299, 480.863, 47.0106, 0.279 ) }
    dend_17 { pt3dadd( 360.4, 480.644, 47.0828, 0.2828 ) }
    dend_17 { pt3dadd( 361.497, 480.402, 47.2646, 0.2894 ) }
    dend_17 { pt3dadd( 362.587, 480.069, 47.4418, 0.3032 ) }
    dend_17 { pt3dadd( 363.722, 479.962, 47.6003, 0.3226 ) }
    dend_17 { pt3dadd( 364.854, 480.118, 47.733, 0.3892 ) }
    dend_17 { pt3dadd( 365.883, 480.616, 47.8416, 0.3624 ) }
    dend_17 { pt3dadd( 366.938, 481.037, 47.9643, 0.355 ) }
    dend_17 { pt3dadd( 367.987, 481.339, 48.1813, 0.366 ) }
    dend_17 { pt3dadd( 368.981, 481.878, 48.3697, 0.4964 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 341.15, 488.188, 44.723, 0.4436 ) }
    dend_14 { pt3dadd( 341.986, 488.188, 44.4349, 0.4904 ) }
    dend_14 { pt3dadd( 343.113, 488.188, 44.07, 0.463 ) }
    dend_14 { pt3dadd( 344.203, 487.933, 43.6526, 0.5074 ) }
    dend_14 { pt3dadd( 345.056, 487.362, 43.0984, 0.5872 ) }
    dend_14 { pt3dadd( 346.051, 486.908, 42.523, 0.5168 ) }
    dend_14 { pt3dadd( 347.079, 486.433, 42.0003, 0.5304 ) }
    dend_14 { pt3dadd( 348.025, 485.82, 41.5422, 0.545 ) }
    dend_14 { pt3dadd( 348.941, 485.154, 41.1432, 0.6208 ) }
    dend_14 { pt3dadd( 349.513, 484.207, 40.7761, 0.526 ) }
    dend_14 { pt3dadd( 350.05, 483.23, 40.4622, 0.5766 ) }
    dend_14 { pt3dadd( 350.649, 482.29, 40.3542, 0.488 ) }
    dend_14 { pt3dadd( 351.265, 481.363, 40.3413, 0.5222 ) }
    dend_14 { pt3dadd( 351.929, 480.469, 40.264, 0.5374 ) }
    dend_14 { pt3dadd( 352.657, 479.631, 40.2335, 0.5698 ) }
    dend_14 { pt3dadd( 353.444, 478.844, 40.3178, 0.6118 ) }
    dend_14 { pt3dadd( 354.069, 477.901, 40.3948, 0.5468 ) }
    dend_14 { pt3dadd( 354.939, 477.172, 40.427, 0.434 ) }
    dend_14 { pt3dadd( 355.967, 476.777, 40.3631, 0.4166 ) }
    dend_14 { pt3dadd( 357.056, 476.621, 40.2399, 0.368 ) }
    dend_14 { pt3dadd( 357.967, 476.034, 40.1484, 0.3578 ) }
    dend_14 { pt3dadd( 358.026, 474.911, 40.0904, 0.4082 ) }
    dend_14 { pt3dadd( 357.696, 473.893, 40.1904, 0.3934 ) }
    dend_14 { pt3dadd( 357.635, 472.773, 40.3292, 0.4352 ) }
    dend_14 { pt3dadd( 357.81, 471.659, 40.4452, 0.4034 ) }
    dend_14 { pt3dadd( 358.397, 470.704, 40.5238, 0.419 ) }
    dend_14 { pt3dadd( 359.205, 469.896, 40.5546, 0.542 ) }
    dend_14 { pt3dadd( 359.884, 469.035, 40.4872, 0.543 ) }
    dend_14 { pt3dadd( 360.637, 468.445, 40.3634, 0.5046 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 312.402, 483.048, 49.4855, 0.7892 ) }
    dend_10 { pt3dadd( 311.173, 482.591, 49.3984, 0.4684 ) }
    dend_10 { pt3dadd( 310.11, 482.437, 50.2606, 0.3652 ) }
    dend_10 { pt3dadd( 309.028, 482.37, 50.5991, 0.374 ) }
    dend_10 { pt3dadd( 308.685, 481.576, 51.116, 0.335 ) }
    dend_10 { pt3dadd( 308.31, 480.522, 51.5701, 0.302 ) }
    dend_10 { pt3dadd( 307.404, 479.946, 52.022, 0.2782 ) }
    dend_10 { pt3dadd( 306.301, 480.141, 52.4541, 0.2814 ) }
    dend_10 { pt3dadd( 305.167, 480.149, 52.8774, 0.287 ) }
    dend_10 { pt3dadd( 304.043, 480.149, 53.3201, 0.2988 ) }
    dend_10 { pt3dadd( 303.059, 480.57, 53.8264, 0.3142 ) }
    dend_10 { pt3dadd( 302.178, 480.593, 54.4886, 0.3734 ) }
    dend_10 { pt3dadd( 301.064, 480.378, 55.057, 0.3338 ) }
    dend_10 { pt3dadd( 299.964, 480.232, 55.445, 0.3 ) }
    dend_10 { pt3dadd( 298.889, 479.973, 55.6928, 0.2746 ) }
    dend_10 { pt3dadd( 298.06, 479.921, 56.1672, 0.2746 ) }
    dend_10 { pt3dadd( 297.201, 479.498, 56.7526, 0.2746 ) }
    dend_10 { pt3dadd( 296.845, 478.662, 57.3874, 0.2746 ) }
    dend_10 { pt3dadd( 296.399, 478.03, 57.7116, 0.2748 ) }
    dend_10 { pt3dadd( 295.724, 477.403, 57.9821, 0.2748 ) }
    dend_10 { pt3dadd( 294.806, 476.723, 58.1725, 0.2752 ) }
    dend_10 { pt3dadd( 293.901, 476.168, 58.3218, 0.2758 ) }
    dend_10 { pt3dadd( 293.668, 475.211, 58.5572, 0.2766 ) }
    dend_10 { pt3dadd( 292.73, 474.659, 58.8241, 0.2782 ) }
    dend_10 { pt3dadd( 291.742, 474.426, 58.9336, 0.2814 ) }
    dend_10 { pt3dadd( 291.146, 473.732, 58.9938, 0.287 ) }
    dend_10 { pt3dadd( 290.836, 472.705, 59.1699, 0.2988 ) }
    dend_10 { pt3dadd( 290.237, 471.763, 59.3995, 0.3142 ) }
    dend_10 { pt3dadd( 289.498, 470.929, 59.6666, 0.3734 ) }
    dend_10 { pt3dadd( 288.632, 470.225, 59.9469, 0.3338 ) }
    dend_10 { pt3dadd( 287.652, 469.673, 60.1378, 0.3 ) }
    dend_10 { pt3dadd( 286.641, 469.307, 60.1577, 0.2746 ) }
    dend_10 { pt3dadd( 285.729, 468.739, 60.1247, 0.2746 ) }
    dend_10 { pt3dadd( 284.975, 468.185, 60.31, 0.2746 ) }
    dend_10 { pt3dadd( 284.302, 467.275, 60.4895, 0.2746 ) }
    dend_10 { pt3dadd( 283.898, 466.221, 60.7037, 0.2746 ) }
    dend_10 { pt3dadd( 283.394, 465.235, 60.9501, 0.2746 ) }
    dend_10 { pt3dadd( 283.036, 464.242, 61.1822, 0.2746 ) }
    dend_10 { pt3dadd( 282.109, 463.575, 61.32, 0.2746 ) }
    dend_10 { pt3dadd( 281.354, 462.739, 61.3662, 0.2746 ) }
    dend_10 { pt3dadd( 280.76, 461.819, 61.278, 0.2748 ) }
    dend_10 { pt3dadd( 280.105, 460.93, 61.0946, 0.2748 ) }
    dend_10 { pt3dadd( 279.472, 459.981, 60.9442, 0.275 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_10 { pt3dadd( 278.779, 459.087, 60.8588, 0.2754 ) }
    dend_10 { pt3dadd( 277.864, 458.401, 60.8751, 0.2762 ) }
    dend_10 { pt3dadd( 276.972, 457.736, 61.0282, 0.2776 ) }
    dend_10 { pt3dadd( 276.168, 457.148, 61.448, 0.2802 ) }
    dend_10 { pt3dadd( 275.467, 456.365, 61.9763, 0.285 ) }
    dend_10 { pt3dadd( 274.846, 455.432, 62.4988, 0.2938 ) }
    dend_10 { pt3dadd( 274.142, 454.538, 62.935, 0.3112 ) }
    dend_10 { pt3dadd( 273.416, 453.654, 63.2668, 0.3384 ) }
    dend_10 { pt3dadd( 272.831, 452.675, 63.5032, 0.4132 ) }
    dend_10 { pt3dadd( 272.28, 451.673, 63.658, 0.4332 ) }
    dend_10 { pt3dadd( 271.543, 450.809, 63.7857, 0.3602 ) }
    dend_10 { pt3dadd( 270.826, 449.938, 63.9206, 0.3016 ) }
    dend_10 { pt3dadd( 270.356, 448.91, 64.1035, 0.2776 ) }
    dend_10 { pt3dadd( 269.748, 447.979, 64.2499, 0.2802 ) }
    dend_10 { pt3dadd( 269.005, 447.145, 64.3003, 0.285 ) }
    dend_10 { pt3dadd( 268.109, 446.495, 64.433, 0.2938 ) }
    dend_10 { pt3dadd( 267.347, 445.843, 64.5716, 0.3112 ) }
    dend_10 { pt3dadd( 266.545, 445.454, 64.8553, 0.3384 ) }
    dend_10 { pt3dadd( 265.751, 444.825, 65.1314, 0.413 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 312.402, 483.048, 49.4855, 0.7892 ) }
    dend_1 { pt3dadd( 311.842, 482.292, 49.2789, 0.8052 ) }
    dend_1 { pt3dadd( 311.214, 481.382, 48.9983, 0.798 ) }
    dend_1 { pt3dadd( 310.994, 480.281, 48.6942, 0.7338 ) }
    dend_1 { pt3dadd( 310.775, 479.18, 48.3966, 0.6344 ) }
    dend_1 { pt3dadd( 310.652, 478.043, 48.2146, 0.5818 ) }
    dend_1 { pt3dadd( 310.531, 476.906, 48.1334, 0.5326 ) }
    dend_1 { pt3dadd( 310.469, 475.801, 48.1967, 0.6638 ) }
    dend_1 { pt3dadd( 310.469, 474.729, 48.4117, 0.7434 ) }
    dend_1 { pt3dadd( 310.521, 473.639, 48.6567, 0.7684 ) }
    dend_1 { pt3dadd( 310.685, 472.508, 48.7802, 0.7252 ) }
    dend_1 { pt3dadd( 310.85, 471.375, 48.7682, 0.62 ) }
    dend_1 { pt3dadd( 311.086, 470.357, 48.4823, 0.5494 ) }
    dend_1 { pt3dadd( 311.335, 469.36, 47.9564, 0.5014 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 33/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 368.981, 481.878, 48.3697, 0.4964 ) }
    dend_19 { pt3dadd( 369.374, 481.589, 48.5086, 0.4326 ) }
    dend_19 { pt3dadd( 370.307, 480.93, 48.6032, 0.4244 ) }
    dend_19 { pt3dadd( 371.315, 480.39, 48.6629, 0.334 ) }
    dend_19 { pt3dadd( 372.326, 479.858, 48.6923, 0.3002 ) }
    dend_19 { pt3dadd( 373.365, 479.455, 48.6315, 0.2748 ) }
    dend_19 { pt3dadd( 374.217, 478.846, 48.5453, 0.2752 ) }
    dend_19 { pt3dadd( 375.019, 478.135, 48.622, 0.2758 ) }
    dend_19 { pt3dadd( 375.709, 477.286, 48.8337, 0.2766 ) }
    dend_19 { pt3dadd( 376.28, 476.308, 49.11, 0.2782 ) }
    dend_19 { pt3dadd( 376.854, 475.335, 49.4388, 0.2814 ) }
    dend_19 { pt3dadd( 377.435, 474.355, 49.7524, 0.287 ) }
    dend_19 { pt3dadd( 378.473, 474.03, 50.0217, 0.2988 ) }
    dend_19 { pt3dadd( 379.612, 473.956, 50.2547, 0.3142 ) }
    dend_19 { pt3dadd( 380.591, 473.502, 50.5411, 0.3734 ) }
    dend_19 { pt3dadd( 381.499, 472.837, 50.8785, 0.334 ) }
    dend_19 { pt3dadd( 381.931, 472.56, 50.9947, 0.3002 ) }
    dend_19 { pt3dadd( 382.238, 471.915, 51.5267, 0.275 ) }
    dend_19 { pt3dadd( 382.651, 471.363, 52.3712, 0.2754 ) }
    dend_19 { pt3dadd( 383.408, 470.683, 53.2588, 0.2762 ) }
    dend_19 { pt3dadd( 384.307, 469.997, 53.9636, 0.2776 ) }
    dend_19 { pt3dadd( 385.332, 469.609, 54.607, 0.2802 ) }
    dend_19 { pt3dadd( 386.327, 469.183, 55.2348, 0.285 ) }
    dend_19 { pt3dadd( 387.138, 468.463, 55.8001, 0.2938 ) }
    dend_19 { pt3dadd( 387.946, 467.695, 56.2775, 0.3112 ) }
    dend_19 { pt3dadd( 388.479, 466.778, 56.7524, 0.3382 ) }
    dend_19 { pt3dadd( 388.475, 465.751, 57.013, 0.413 ) }
    dend_19 { pt3dadd( 388.687, 464.701, 57.2328, 0.4326 ) }
    dend_19 { pt3dadd( 389.286, 463.788, 57.4745, 0.3592 ) }
    dend_19 { pt3dadd( 390.302, 463.415, 57.7534, 0.3 ) }
    dend_19 { pt3dadd( 391.402, 463.115, 58.0096, 0.2746 ) }
    dend_19 { pt3dadd( 392.413, 462.751, 58.3302, 0.2746 ) }
    dend_19 { pt3dadd( 393.126, 461.909, 58.6992, 0.2746 ) }
    dend_19 { pt3dadd( 394.028, 461.239, 59.0271, 0.2746 ) }
    dend_19 { pt3dadd( 394.964, 460.581, 59.2908, 0.2746 ) }
    dend_19 { pt3dadd( 395.801, 459.839, 59.5809, 0.2746 ) }
    dend_19 { pt3dadd( 396.588, 459.052, 59.9309, 0.2746 ) }
    dend_19 { pt3dadd( 397.619, 458.645, 60.3072, 0.2746 ) }
    dend_19 { pt3dadd( 398.675, 458.275, 60.702, 0.2746 ) }
    dend_19 { pt3dadd( 399.799, 458.162, 61.0249, 0.2746 ) }
    dend_19 { pt3dadd( 400.894, 458.258, 61.2886, 0.2746 ) }
    dend_19 { pt3dadd( 401.836, 457.663, 61.5062, 0.2748 ) }
    dend_19 { pt3dadd( 402.716, 456.996, 61.7187, 0.2748 ) }
    dend_19 { pt3dadd( 403.775, 456.586, 61.9679, 0.2752 ) }
    dend_19 { pt3dadd( 404.831, 456.431, 62.2289, 0.2758 ) }
    dend_19 { pt3dadd( 405.912, 456.265, 62.6413, 0.2766 ) }
    dend_19 { pt3dadd( 406.999, 456.18, 63.1574, 0.2784 ) }
    dend_19 { pt3dadd( 408.111, 456.434, 63.6871, 0.2816 ) }
    dend_19 { pt3dadd( 409.221, 456.689, 64.2362, 0.2876 ) }
    dend_19 { pt3dadd( 410.013, 457.355, 64.9244, 0.2998 ) }
    dend_19 { pt3dadd( 411.038, 457.061, 65.6281, 0.316 ) }
    dend_19 { pt3dadd( 411.235, 456.046, 66.4401, 0.377 ) }
    dend_19 { pt3dadd( 411.895, 455.369, 67.3812, 0.3406 ) }
    dend_19 { pt3dadd( 412.769, 455.09, 68.4709, 0.3126 ) }
    dend_19 { pt3dadd( 413.291, 454.263, 69.589, 0.2974 ) }
    dend_19 { pt3dadd( 413.543, 453.175, 70.5877, 0.318 ) }
    dend_19 { pt3dadd( 414.126, 452.453, 71.6355, 0.3508 ) }
    dend_19 { pt3dadd( 414.708, 451.734, 72.6866, 0.4372 ) }
    dend_19 { pt3dadd( 414.944, 450.712, 73.5521, 0.4722 ) }
    dend_19 { pt3dadd( 414.726, 449.645, 74.2311, 0.4582 ) }
    dend_19 { pt3dadd( 414.245, 448.751, 74.7807, 0.3594 ) }
    dend_19 { pt3dadd( 414.05, 447.722, 75.301, 0.3004 ) }
    dend_19 { pt3dadd( 414.272, 447.048, 75.626, 0.2752 ) }
    dend_19 { pt3dadd( 414.459, 446.189, 75.9581, 0.276 ) }
    dend_19 { pt3dadd( 414.914, 445.526, 76.4918, 0.2768 ) }
    dend_19 { pt3dadd( 415.508, 444.93, 77.154, 0.279 ) }
    dend_19 { pt3dadd( 415.875, 444.625, 77.866, 0.2826 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_19 { pt3dadd( 416.185, 443.771, 78.2821, 0.2896 ) }
    dend_19 { pt3dadd( 416.804, 443.135, 78.692, 0.302 ) }
    dend_19 { pt3dadd( 417.241, 442.376, 78.7478, 0.3274 ) }
    dend_19 { pt3dadd( 417.595, 441.503, 78.4969, 0.3622 ) }
    dend_19 { pt3dadd( 418.23, 440.581, 78.2239, 0.4878 ) }
    dend_19 { pt3dadd( 418.386, 439.56, 78.1052, 0.423 ) }
    dend_19 { pt3dadd( 417.848, 439.147, 78.083, 0.3754 ) }
    dend_19 { pt3dadd( 417.692, 438.149, 77.9145, 0.3928 ) }
    dend_19 { pt3dadd( 417.566, 437.106, 77.7151, 0.3708 ) }
    dend_19 { pt3dadd( 417.137, 436.25, 77.4483, 0.3642 ) }
    dend_19 { pt3dadd( 417.241, 435.332, 77.3744, 0.4142 ) }
    dend_19 { pt3dadd( 417.68, 435.237, 77.768, 0.4348 ) }
    dend_19 { pt3dadd( 417.347, 434.575, 78.5201, 0.3628 ) }
    dend_19 { pt3dadd( 417.159, 433.694, 79.4584, 0.3068 ) }
    dend_19 { pt3dadd( 417.019, 432.645, 80.3908, 0.2872 ) }
    dend_19 { pt3dadd( 417.044, 431.514, 81.207, 0.2988 ) }
    dend_19 { pt3dadd( 417.601, 430.779, 82.0299, 0.3144 ) }
    dend_19 { pt3dadd( 417.934, 429.833, 82.6059, 0.3738 ) }
    dend_19 { pt3dadd( 418.338, 429.005, 82.8433, 0.3348 ) }
    dend_19 { pt3dadd( 418.163, 428.256, 83.2191, 0.3016 ) }
    dend_19 { pt3dadd( 418.37, 427.319, 83.5744, 0.2776 ) }
    dend_19 { pt3dadd( 418.583, 426.608, 83.512, 0.2802 ) }
    dend_19 { pt3dadd( 418.622, 426.077, 83.1474, 0.285 ) }
    dend_19 { pt3dadd( 419.083, 425.148, 82.8909, 0.294 ) }
    dend_19 { pt3dadd( 419.293, 424.342, 83.0693, 0.3114 ) }
    dend_19 { pt3dadd( 418.962, 423.687, 83.5862, 0.3388 ) }
    dend_19 { pt3dadd( 418.85, 422.598, 84.1985, 0.4138 ) }
    dend_19 { pt3dadd( 419.007, 421.503, 84.8826, 0.4342 ) }
    dend_19 { pt3dadd( 419.251, 420.425, 85.5711, 0.3622 ) }
    dend_19 { pt3dadd( 419.68, 419.435, 86.1748, 0.3054 ) }
    dend_19 { pt3dadd( 420.048, 418.625, 86.4027, 0.2848 ) }
    dend_19 { pt3dadd( 420.451, 417.623, 86.5763, 0.2934 ) }
    dend_19 { pt3dadd( 420.248, 416.638, 86.9442, 0.3108 ) }
    dend_19 { pt3dadd( 420.169, 415.54, 87.4037, 0.3358 ) }
    dend_19 { pt3dadd( 420.19, 414.444, 87.9578, 0.415 ) }
    dend_19 { pt3dadd( 420.525, 413.454, 88.639, 0.4056 ) }
    dend_19 { pt3dadd( 421.06, 412.596, 89.4278, 0.4594 ) }
    dend_19 { pt3dadd( 421.928, 412.379, 90.2891, 0.4428 ) }
    dend_19 { pt3dadd( 422.833, 411.897, 90.8163, 0.5178 ) }
    dend_19 { pt3dadd( 423.708, 411.363, 91.3878, 0.6012 ) }
    dend_19 { pt3dadd( 424.081, 410.344, 91.9268, 0.5682 ) }
    dend_19 { pt3dadd( 424.521, 409.313, 92.4104, 0.5038 ) }
    dend_19 { pt3dadd( 424.768, 408.221, 92.8508, 0.3976 ) }
    dend_19 { pt3dadd( 424.964, 407.219, 93.357, 0.3668 ) }
    dend_19 { pt3dadd( 425.427, 406.209, 93.8204, 0.4188 ) }
    dend_19 { pt3dadd( 425.94, 405.275, 94.0708, 0.4434 ) }
    dend_19 { pt3dadd( 426.441, 404.45, 94.1349, 0.3788 ) }
    dend_19 { pt3dadd( 426.847, 403.814, 93.9658, 0.3372 ) }
    dend_19 { pt3dadd( 427.108, 402.837, 94.0713, 0.3396 ) }
    dend_19 { pt3dadd( 427.712, 402.044, 94.4591, 0.4156 ) }
    dend_19 { pt3dadd( 428.208, 401.517, 95.2255, 0.4374 ) }
    dend_19 { pt3dadd( 428.208, 400.453, 96.0123, 0.3682 ) }
    dend_19 { pt3dadd( 428.29, 399.326, 96.7968, 0.3162 ) }
    dend_19 { pt3dadd( 428.464, 398.231, 97.5666, 0.3056 ) }
    dend_19 { pt3dadd( 428.657, 397.67, 98.5275, 0.327 ) }
    dend_19 { pt3dadd( 429.135, 397.04, 99.4927, 0.397 ) }
    dend_19 { pt3dadd( 429.857, 396.377, 100.16, 0.3782 ) }
    dend_19 { pt3dadd( 430.364, 395.602, 100.961, 0.3778 ) }
    dend_19 { pt3dadd( 430.713, 394.579, 101.728, 0.4404 ) }
    dend_19 { pt3dadd( 431.19, 393.572, 102.357, 0.4782 ) }
    dend_19 { pt3dadd( 430.795, 392.869, 103.09, 0.469 ) }
    dend_19 { pt3dadd( 430.342, 391.889, 103.65, 0.3796 ) }
    dend_19 { pt3dadd( 430.751, 391.009, 104.216, 0.3384 ) }
    dend_19 { pt3dadd( 430.137, 390.242, 104.75, 0.3414 ) }
    dend_19 { pt3dadd( 430.51, 389.571, 105.192, 0.419 ) }
    dend_19 { pt3dadd( 430.443, 389.521, 106.095, 0.4434 ) }
    dend_19 { pt3dadd( 429.636, 389.129, 107.146, 0.38 ) }
    dend_19 { pt3dadd( 430.022, 388.819, 108.449, 0.3334 ) }
    dend_19 { pt3dadd( 430.138, 387.793, 109.563, 0.3616 ) }
    dend_19 { pt3dadd( 430.427, 387.231, 110.623, 0.3134 ) }
    dend_19 { pt3dadd( 429.768, 386.895, 111.742, 0.2542 ) }
    dend_19 { pt3dadd( 429.302, 386.164, 113.946, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 368.981, 481.878, 48.3697, 0.4964 ) }
    dend_18 { pt3dadd( 369.29, 482.328, 48.7278, 0.4576 ) }
    dend_18 { pt3dadd( 369.935, 483.244, 48.7819, 0.3904 ) }
    dend_18 { pt3dadd( 370.727, 484.068, 48.8158, 0.3522 ) }
    dend_18 { pt3dadd( 371.506, 484.898, 48.9003, 0.3976 ) }
    dend_18 { pt3dadd( 372.084, 485.772, 49.1201, 0.3736 ) }
    dend_18 { pt3dadd( 373.11, 486.266, 49.3038, 0.3994 ) }
    dend_18 { pt3dadd( 374.117, 486.681, 49.3744, 0.335 ) }
    dend_18 { pt3dadd( 375.031, 487.311, 49.4133, 0.302 ) }
    dend_18 { pt3dadd( 375.956, 487.969, 49.4432, 0.2782 ) }
    dend_18 { pt3dadd( 376.797, 488.725, 49.3987, 0.2814 ) }
    dend_18 { pt3dadd( 377.65, 489.455, 49.3746, 0.287 ) }
    dend_18 { pt3dadd( 378.52, 490.15, 49.4782, 0.2988 ) }
    dend_18 { pt3dadd( 379.493, 490.721, 49.6124, 0.3142 ) }
    dend_18 { pt3dadd( 380.516, 491.234, 49.7274, 0.3734 ) }
    dend_18 { pt3dadd( 381.603, 491.541, 49.8288, 0.3338 ) }
    dend_18 { pt3dadd( 382.736, 491.706, 49.924, 0.3 ) }
    dend_18 { pt3dadd( 383.854, 491.851, 49.9862, 0.2746 ) }
    dend_18 { pt3dadd( 384.884, 491.857, 49.9405, 0.2746 ) }
    dend_18 { pt3dadd( 385.94, 491.881, 50.101, 0.2746 ) }
    dend_18 { pt3dadd( 386.999, 491.943, 50.4017, 0.2746 ) }
    dend_18 { pt3dadd( 388.072, 492.339, 50.6582, 0.2746 ) }
    dend_18 { pt3dadd( 389.145, 492.736, 50.8763, 0.2746 ) }
    dend_18 { pt3dadd( 390.283, 492.82, 51.063, 0.2746 ) }
    dend_18 { pt3dadd( 391.424, 492.878, 51.2204, 0.2746 ) }
    dend_18 { pt3dadd( 392.557, 492.998, 51.3374, 0.2746 ) }
    dend_18 { pt3dadd( 393.656, 493.225, 51.4802, 0.2746 ) }
    dend_18 { pt3dadd( 394.766, 493.24, 51.7286, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_18 { pt3dadd( 395.749, 493.543, 51.9954, 0.2746 ) }
    dend_18 { pt3dadd( 396.101, 494.592, 52.232, 0.2746 ) }
    dend_18 { pt3dadd( 396.645, 495.432, 52.4947, 0.2746 ) }
    dend_18 { pt3dadd( 397.563, 496.062, 52.806, 0.2746 ) }
    dend_18 { pt3dadd( 398.623, 496.456, 53.0681, 0.2746 ) }
    dend_18 { pt3dadd( 399.716, 496.798, 53.2739, 0.2746 ) }
    dend_18 { pt3dadd( 400.717, 497.323, 53.4478, 0.2746 ) }
    dend_18 { pt3dadd( 401.653, 497.982, 53.6029, 0.2746 ) }
    dend_18 { pt3dadd( 402.487, 498.729, 53.797, 0.2746 ) }
    dend_18 { pt3dadd( 403.244, 499.545, 54.0666, 0.2746 ) }
    dend_18 { pt3dadd( 403.452, 500.628, 54.3284, 0.2746 ) }
    dend_18 { pt3dadd( 404.177, 501.372, 54.5754, 0.2746 ) }
    dend_18 { pt3dadd( 405.295, 501.469, 54.8232, 0.2746 ) }
    dend_18 { pt3dadd( 406.439, 501.469, 55.085, 0.2746 ) }
    dend_18 { pt3dadd( 407.583, 501.469, 55.3731, 0.2748 ) }
    dend_18 { pt3dadd( 408.681, 501.515, 55.7984, 0.2748 ) }
    dend_18 { pt3dadd( 409.753, 501.588, 56.4066, 0.275 ) }
    dend_18 { pt3dadd( 410.562, 501.887, 57.2312, 0.2752 ) }
    dend_18 { pt3dadd( 411.651, 502.147, 58.0331, 0.276 ) }
    dend_18 { pt3dadd( 412.545, 502.567, 58.8952, 0.277 ) }
    dend_18 { pt3dadd( 412.311, 502.883, 59.9841, 0.2794 ) }
    dend_18 { pt3dadd( 412.143, 503.845, 60.9515, 0.2834 ) }
    dend_18 { pt3dadd( 412.16, 504.979, 61.7148, 0.2908 ) }
    dend_18 { pt3dadd( 412.512, 505.976, 62.3518, 0.3056 ) }
    dend_18 { pt3dadd( 412.981, 506.96, 62.7301, 0.3268 ) }
    dend_18 { pt3dadd( 413.556, 507.904, 62.8852, 0.3978 ) }
    dend_18 { pt3dadd( 414.597, 508.32, 63.0087, 0.3738 ) }
    dend_18 { pt3dadd( 415.502, 508.88, 63.1932, 0.3998 ) }
    dend_18 { pt3dadd( 416.335, 509.659, 63.3898, 0.3354 ) }
    dend_18 { pt3dadd( 417.253, 510.332, 63.6017, 0.303 ) }
    dend_18 { pt3dadd( 418.203, 510.964, 63.8403, 0.28 ) }
    dend_18 { pt3dadd( 419.037, 511.737, 64.0928, 0.2848 ) }
    dend_18 { pt3dadd( 419.855, 512.53, 64.3451, 0.2934 ) }
    dend_18 { pt3dadd( 420.768, 513.217, 64.6024, 0.3102 ) }
    dend_18 { pt3dadd( 421.556, 514.029, 64.8707, 0.3354 ) }
    dend_18 { pt3dadd( 422.238, 514.948, 65.1473, 0.4136 ) }
    dend_18 { pt3dadd( 422.773, 515.93, 65.4968, 0.4046 ) }
    dend_18 { pt3dadd( 423.118, 516.9, 65.9856, 0.4508 ) }
    dend_18 { pt3dadd( 423.294, 517.723, 66.6887, 0.457 ) }
    dend_18 { pt3dadd( 423.965, 518.587, 67.3406, 0.3988 ) }
    dend_18 { pt3dadd( 424.767, 519.401, 67.8899, 0.3988 ) }
    dend_18 { pt3dadd( 425.354, 520.292, 68.4312, 0.334 ) }
    dend_18 { pt3dadd( 426.106, 521.151, 68.8573, 0.3002 ) }
    dend_18 { pt3dadd( 426.579, 522.156, 69.1558, 0.2748 ) }
    dend_18 { pt3dadd( 426.81, 523.22, 69.4008, 0.275 ) }
    dend_18 { pt3dadd( 427.078, 523.992, 69.8214, 0.2752 ) }
    dend_18 { pt3dadd( 426.861, 524.975, 70.11, 0.276 ) }
    dend_18 { pt3dadd( 426.595, 525.463, 70.0364, 0.2768 ) }
    dend_18 { pt3dadd( 426.606, 525.917, 69.72, 0.279 ) }
    dend_18 { pt3dadd( 427.189, 526.86, 69.6046, 0.2826 ) }
    dend_18 { pt3dadd( 427.719, 527.741, 69.645, 0.2894 ) }
    dend_18 { pt3dadd( 428.007, 527.958, 70.1677, 0.303 ) }
    dend_18 { pt3dadd( 428.331, 528.704, 70.9822, 0.3222 ) }
    dend_18 { pt3dadd( 428.197, 529.438, 71.9883, 0.388 ) }
    dend_18 { pt3dadd( 428.086, 530.504, 72.7849, 0.3622 ) }
    dend_18 { pt3dadd( 428.651, 531.29, 73.4446, 0.3476 ) }
    dend_18 { pt3dadd( 429.196, 532.26, 73.8402, 0.387 ) }
    dend_18 { pt3dadd( 428.995, 533.126, 74.0757, 0.3644 ) }
    dend_18 { pt3dadd( 428.538, 533.98, 74.0508, 0.3304 ) }
    dend_18 { pt3dadd( 428.235, 534.974, 73.7808, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 360.637, 468.445, 40.3634, 0.5046 ) }
    dend_16 { pt3dadd( 361.974, 468.078, 40.4942, 0.3142 ) }
    dend_16 { pt3dadd( 363.067, 467.777, 41.1225, 0.3736 ) }
    dend_16 { pt3dadd( 364.033, 467.35, 41.4571, 0.3342 ) }
    dend_16 { pt3dadd( 364.974, 466.869, 41.7684, 0.3006 ) }
    dend_16 { pt3dadd( 366.108, 467.016, 42.0398, 0.2758 ) }
    dend_16 { pt3dadd( 367.179, 466.853, 42.3234, 0.2766 ) }
    dend_16 { pt3dadd( 368.074, 466.252, 42.6765, 0.2782 ) }
    dend_16 { pt3dadd( 369.131, 465.959, 42.9484, 0.2814 ) }
    dend_16 { pt3dadd( 370.206, 466.309, 43.1544, 0.287 ) }
    dend_16 { pt3dadd( 371.275, 466.552, 43.3894, 0.2988 ) }
    dend_16 { pt3dadd( 372.359, 466.54, 43.6652, 0.3142 ) }
    dend_16 { pt3dadd( 373.323, 465.928, 43.8575, 0.3734 ) }
    dend_16 { pt3dadd( 374.194, 465.193, 43.9466, 0.334 ) }
    dend_16 { pt3dadd( 374.969, 464.377, 44.0138, 0.3002 ) }
    dend_16 { pt3dadd( 375.781, 463.595, 44.0703, 0.275 ) }
    dend_16 { pt3dadd( 376.805, 463.099, 44.0868, 0.2754 ) }
    dend_16 { pt3dadd( 377.891, 463.361, 44.0765, 0.2762 ) }
    dend_16 { pt3dadd( 378.893, 463.789, 44.0527, 0.2776 ) }
    dend_16 { pt3dadd( 380.036, 463.845, 44.0129, 0.28 ) }
    dend_16 { pt3dadd( 381.178, 463.902, 43.9505, 0.2846 ) }
    dend_16 { pt3dadd( 382.288, 463.676, 43.8662, 0.2928 ) }
    dend_16 { pt3dadd( 383.405, 463.484, 43.7198, 0.3098 ) }
    dend_16 { pt3dadd( 384.464, 463.676, 43.4574, 0.3346 ) }
    dend_16 { pt3dadd( 385.349, 464.28, 43.2382, 0.412 ) }
    dend_16 { pt3dadd( 386.464, 464.025, 43.0573, 0.4014 ) }
    dend_16 { pt3dadd( 387.459, 463.597, 42.8257, 0.4452 ) }
    dend_16 { pt3dadd( 388.508, 463.283, 42.6348, 0.4452 ) }
    dend_16 { pt3dadd( 389.587, 462.966, 42.5774, 0.3836 ) }
    dend_16 { pt3dadd( 390.622, 462.515, 42.5552, 0.34 ) }
    dend_16 { pt3dadd( 391.597, 462.162, 42.3956, 0.374 ) }
    dend_16 { pt3dadd( 392.678, 462.524, 42.2624, 0.3352 ) }
    dend_16 { pt3dadd( 393.797, 462.748, 42.1792, 0.3022 ) }
    dend_16 { pt3dadd( 394.878, 463.115, 42.1187, 0.279 ) }
    dend_16 { pt3dadd( 395.972, 463.44, 42.0697, 0.2826 ) }
    dend_16 { pt3dadd( 396.917, 464.056, 42.103, 0.289 ) }
    dend_16 { pt3dadd( 397.824, 464.749, 42.2243, 0.3024 ) }
    dend_16 { pt3dadd( 398.85, 465.186, 42.4469, 0.321 ) }
    dend_16 { pt3dadd( 399.893, 465.586, 42.747, 0.386 ) }
    dend_16 { pt3dadd( 401.031, 465.654, 43.0352, 0.358 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 402.173, 465.714, 43.3034, 0.3398 ) }
    dend_16 { pt3dadd( 403.313, 465.748, 43.5504, 0.3738 ) }
    dend_16 { pt3dadd( 404.45, 465.748, 43.7808, 0.3348 ) }
    dend_16 { pt3dadd( 405.587, 465.748, 43.9874, 0.3016 ) }
    dend_16 { pt3dadd( 406.679, 465.993, 44.2053, 0.2774 ) }
    dend_16 { pt3dadd( 407.765, 466.272, 44.4312, 0.2796 ) }
    dend_16 { pt3dadd( 408.802, 466.685, 44.5015, 0.2842 ) }
    dend_16 { pt3dadd( 409.831, 467.118, 44.4273, 0.292 ) }
    dend_16 { pt3dadd( 410.944, 467.382, 44.3338, 0.308 ) }
    dend_16 { pt3dadd( 412.057, 467.644, 44.2288, 0.3316 ) }
    dend_16 { pt3dadd( 413.188, 467.811, 44.116, 0.4052 ) }
    dend_16 { pt3dadd( 414.325, 467.931, 44.0101, 0.395 ) }
    dend_16 { pt3dadd( 415.462, 468.022, 43.9242, 0.4036 ) }
    dend_16 { pt3dadd( 416.595, 467.871, 43.839, 0.5122 ) }
    dend_16 { pt3dadd( 417.6, 467.58, 43.6114, 0.4928 ) }
    dend_16 { pt3dadd( 418.501, 467.603, 43.3, 0.3862 ) }
    dend_16 { pt3dadd( 418.98, 468.199, 43.2348, 0.303 ) }
    dend_16 { pt3dadd( 419.659, 468.073, 43.1547, 0.28 ) }
    dend_16 { pt3dadd( 420.6, 467.475, 42.9794, 0.2848 ) }
    dend_16 { pt3dadd( 421.551, 467.121, 42.6712, 0.2934 ) }
    dend_16 { pt3dadd( 422.693, 467.127, 42.4158, 0.3104 ) }
    dend_16 { pt3dadd( 423.758, 467.35, 42.3086, 0.3358 ) }
    dend_16 { pt3dadd( 424.826, 467.721, 42.1949, 0.4132 ) }
    dend_16 { pt3dadd( 425.935, 467.982, 42.026, 0.4094 ) }
    dend_16 { pt3dadd( 427.014, 467.897, 41.7351, 0.4318 ) }
    dend_16 { pt3dadd( 428.016, 467.411, 41.377, 0.5594 ) }
    dend_16 { pt3dadd( 429.001, 466.904, 40.9242, 0.6056 ) }
    dend_16 { pt3dadd( 430.058, 466.755, 40.3824, 0.4722 ) }
    dend_16 { pt3dadd( 431.13, 466.683, 39.8129, 0.3724 ) }
    dend_16 { pt3dadd( 432.254, 466.664, 39.3548, 0.387 ) }
    dend_16 { pt3dadd( 433.387, 466.551, 39.0508, 0.3602 ) }
    dend_16 { pt3dadd( 434.219, 465.926, 38.8808, 0.3434 ) }
    dend_16 { pt3dadd( 434.799, 464.94, 38.8212, 0.3804 ) }
    dend_16 { pt3dadd( 435.453, 464.009, 38.8573, 0.3468 ) }
    dend_16 { pt3dadd( 436.023, 463.031, 39.0006, 0.3254 ) }
    dend_16 { pt3dadd( 436.645, 462.086, 39.1952, 0.3162 ) }
    dend_16 { pt3dadd( 437.368, 461.203, 39.401, 0.3772 ) }
    dend_16 { pt3dadd( 438.119, 460.395, 39.5354, 0.341 ) }
    dend_16 { pt3dadd( 438.954, 459.68, 39.6973, 0.3128 ) }
    dend_16 { pt3dadd( 439.504, 458.757, 39.9031, 0.2992 ) }
    dend_16 { pt3dadd( 439.603, 457.625, 40.1212, 0.3152 ) }
    dend_16 { pt3dadd( 439.603, 456.518, 40.4261, 0.3754 ) }
    dend_16 { pt3dadd( 439.603, 455.418, 40.8038, 0.3378 ) }
    dend_16 { pt3dadd( 439.994, 454.408, 41.1961, 0.3072 ) }
    dend_16 { pt3dadd( 440.893, 453.721, 41.4982, 0.288 ) }
    dend_16 { pt3dadd( 441.784, 453.037, 41.6833, 0.2994 ) }
    dend_16 { pt3dadd( 442.774, 452.499, 41.7449, 0.3216 ) }
    dend_16 { pt3dadd( 443.655, 451.811, 41.8174, 0.3576 ) }
    dend_16 { pt3dadd( 444.479, 451.046, 41.9672, 0.4498 ) }
    dend_16 { pt3dadd( 445.068, 450.07, 42.1268, 0.4956 ) }
    dend_16 { pt3dadd( 445.637, 449.078, 42.3097, 0.5022 ) }
    dend_16 { pt3dadd( 446.485, 448.354, 42.5914, 0.4364 ) }
    dend_16 { pt3dadd( 447.383, 447.684, 42.9514, 0.4642 ) }
    dend_16 { pt3dadd( 448.394, 447.152, 43.3009, 0.4756 ) }
    dend_16 { pt3dadd( 449.409, 446.65, 43.6534, 0.4642 ) }
    dend_16 { pt3dadd( 450.463, 446.427, 44.1073, 0.3706 ) }
    dend_16 { pt3dadd( 451.359, 445.897, 44.5886, 0.321 ) }
    dend_16 { pt3dadd( 452.03, 445.128, 45.1556, 0.3142 ) }
    dend_16 { pt3dadd( 452.807, 444.357, 45.6459, 0.3438 ) }
    dend_16 { pt3dadd( 453.436, 443.401, 45.9908, 0.4236 ) }
    dend_16 { pt3dadd( 454.127, 442.508, 46.2322, 0.4522 ) }
    dend_16 { pt3dadd( 454.905, 441.703, 46.4181, 0.3962 ) }
    dend_16 { pt3dadd( 455.707, 440.93, 46.4363, 0.3634 ) }
    dend_16 { pt3dadd( 456.521, 440.175, 46.2641, 0.4182 ) }
    dend_16 { pt3dadd( 457.45, 439.549, 45.9883, 0.4126 ) }
    dend_16 { pt3dadd( 458.369, 438.902, 45.6588, 0.4674 ) }
    dend_16 { pt3dadd( 459.215, 438.133, 45.3575, 0.4812 ) }
    dend_16 { pt3dadd( 460.062, 437.364, 45.0825, 0.4746 ) }
    dend_16 { pt3dadd( 460.908, 436.594, 44.8434, 0.3906 ) }
    dend_16 { pt3dadd( 461.693, 435.799, 44.5953, 0.3528 ) }
    dend_16 { pt3dadd( 462.232, 434.898, 44.1963, 0.3976 ) }
    dend_16 { pt3dadd( 462.901, 434.051, 43.7231, 0.3798 ) }
    dend_16 { pt3dadd( 463.838, 433.415, 43.2908, 0.3808 ) }
    dend_16 { pt3dadd( 464.775, 432.946, 42.9974, 0.4454 ) }
    dend_16 { pt3dadd( 465.615, 432.928, 42.6826, 0.488 ) }
    dend_16 { pt3dadd( 466.408, 432.462, 42.1991, 0.4868 ) }
    dend_16 { pt3dadd( 467.4, 432.345, 41.6718, 0.4148 ) }
    dend_16 { pt3dadd( 468.439, 432.573, 41.2392, 0.3924 ) }
    dend_16 { pt3dadd( 469.388, 432.66, 41.1225, 0.497 ) }
    dend_16 { pt3dadd( 470.354, 432.288, 41.1622, 0.4398 ) }
    dend_16 { pt3dadd( 471.325, 431.805, 41.3249, 0.4072 ) }
    dend_16 { pt3dadd( 472.277, 431.413, 41.3636, 0.4476 ) }
    dend_16 { pt3dadd( 473.242, 431.647, 41.1734, 0.4916 ) }
    dend_16 { pt3dadd( 474.355, 431.859, 40.9385, 0.4948 ) }
    dend_16 { pt3dadd( 475.498, 431.859, 40.654, 0.423 ) }
    dend_16 { pt3dadd( 476.641, 431.859, 40.3458, 0.4384 ) }
    dend_16 { pt3dadd( 477.782, 431.859, 40.0369, 0.4328 ) }
    dend_16 { pt3dadd( 478.894, 431.797, 39.6827, 0.3596 ) }
    dend_16 { pt3dadd( 480.001, 431.728, 39.284, 0.3006 ) }
    dend_16 { pt3dadd( 481.052, 431.436, 38.8318, 0.2758 ) }
    dend_16 { pt3dadd( 482.077, 431.038, 38.3485, 0.2766 ) }
    dend_16 { pt3dadd( 483.156, 430.717, 38.0097, 0.2782 ) }
    dend_16 { pt3dadd( 484.241, 430.407, 37.7969, 0.2814 ) }
    dend_16 { pt3dadd( 484.875, 429.676, 37.5334, 0.287 ) }
    dend_16 { pt3dadd( 485.945, 429.726, 37.3618, 0.2984 ) }
    dend_16 { pt3dadd( 486.988, 429.983, 37.0499, 0.3136 ) }
    dend_16 { pt3dadd( 487.695, 429.445, 36.5179, 0.3724 ) }
    dend_16 { pt3dadd( 488.053, 428.392, 35.943, 0.332 ) }
    dend_16 { pt3dadd( 488.408, 427.393, 35.2853, 0.2966 ) }
    dend_16 { pt3dadd( 489.201, 426.611, 34.6909, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 489.989, 426.086, 33.9912, 0.2626 ) }
    dend_16 { pt3dadd( 490.771, 425.714, 33.2102, 0.2542 ) }
    dend_16 { pt3dadd( 490.289, 424.702, 32.5898, 0.2288 ) }
    dend_16 { pt3dadd( 489.974, 423.615, 31.7299, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 360.637, 468.445, 40.3634, 0.5046 ) }
    dend_15 { pt3dadd( 359.976, 467.534, 40.2214, 0.3692 ) }
    dend_15 { pt3dadd( 360.083, 466.409, 40.1444, 0.4236 ) }
    dend_15 { pt3dadd( 360.439, 465.322, 40.1279, 0.4522 ) }
    dend_15 { pt3dadd( 360.973, 464.349, 40.2304, 0.396 ) }
    dend_15 { pt3dadd( 361.605, 463.43, 40.4536, 0.364 ) }
    dend_15 { pt3dadd( 362.376, 462.594, 40.6759, 0.4134 ) }
    dend_15 { pt3dadd( 363.214, 461.848, 40.9497, 0.4336 ) }
    dend_15 { pt3dadd( 363.564, 460.857, 41.1004, 0.361 ) }
    dend_15 { pt3dadd( 363.65, 459.744, 41.2286, 0.3032 ) }
    dend_15 { pt3dadd( 364.239, 458.79, 41.4044, 0.2802 ) }
    dend_15 { pt3dadd( 364.881, 457.868, 41.5918, 0.285 ) }
    dend_15 { pt3dadd( 365.651, 457.021, 41.7371, 0.294 ) }
    dend_15 { pt3dadd( 366.272, 456.093, 41.8452, 0.3114 ) }
    dend_15 { pt3dadd( 366.559, 454.987, 41.9292, 0.3386 ) }
    dend_15 { pt3dadd( 366.85, 453.881, 41.9773, 0.4136 ) }
    dend_15 { pt3dadd( 367.428, 452.905, 42.0123, 0.434 ) }
    dend_15 { pt3dadd( 368.025, 451.996, 42.1383, 0.3618 ) }
    dend_15 { pt3dadd( 368.759, 451.206, 42.1417, 0.3046 ) }
    dend_15 { pt3dadd( 369.738, 450.695, 42.0468, 0.283 ) }
    dend_15 { pt3dadd( 370.674, 450.037, 41.9432, 0.2906 ) }
    dend_15 { pt3dadd( 371.506, 449.275, 41.8289, 0.3038 ) }
    dend_15 { pt3dadd( 372.053, 448.277, 41.7038, 0.3308 ) }
    dend_15 { pt3dadd( 372.264, 447.171, 41.5612, 0.3684 ) }
    dend_15 { pt3dadd( 372.097, 446.118, 41.3454, 0.5006 ) }
    dend_15 { pt3dadd( 371.983, 445.027, 41.1026, 0.4404 ) }
    dend_15 { pt3dadd( 372.005, 443.891, 40.8789, 0.4382 ) }
    dend_15 { pt3dadd( 372.683, 442.975, 40.6829, 0.3608 ) }
    dend_15 { pt3dadd( 373.38, 442.075, 40.4841, 0.3448 ) }
    dend_15 { pt3dadd( 374.103, 441.192, 40.2856, 0.3832 ) }
    dend_15 { pt3dadd( 374.831, 440.324, 40.0627, 0.3516 ) }
    dend_15 { pt3dadd( 375.48, 439.421, 39.8182, 0.334 ) }
    dend_15 { pt3dadd( 375.716, 438.31, 39.5654, 0.3324 ) }
    dend_15 { pt3dadd( 375.953, 437.2, 39.312, 0.4084 ) }
    dend_15 { pt3dadd( 376.422, 436.172, 39.1756, 0.3934 ) }
    dend_15 { pt3dadd( 377.003, 435.226, 39.0989, 0.4364 ) }
    dend_15 { pt3dadd( 377.886, 434.498, 39.0037, 0.3992 ) }
    dend_15 { pt3dadd( 378.686, 433.716, 38.8511, 0.4416 ) }
    dend_15 { pt3dadd( 379.301, 432.807, 38.5776, 0.4388 ) }
    dend_15 { pt3dadd( 379.718, 431.821, 38.2096, 0.3706 ) }
    dend_15 { pt3dadd( 379.985, 430.776, 37.7762, 0.3208 ) }
    dend_15 { pt3dadd( 380.169, 429.681, 37.4634, 0.314 ) }
    dend_15 { pt3dadd( 380.312, 428.562, 37.3293, 0.3432 ) }
    dend_15 { pt3dadd( 380.414, 427.441, 37.3344, 0.4222 ) }
    dend_15 { pt3dadd( 380.479, 426.316, 37.4318, 0.4496 ) }
    dend_15 { pt3dadd( 380.531, 425.189, 37.5396, 0.3914 ) }
    dend_15 { pt3dadd( 380.592, 424.075, 37.5113, 0.3544 ) }
    dend_15 { pt3dadd( 381.06, 423.084, 37.3237, 0.402 ) }
    dend_15 { pt3dadd( 381.856, 422.342, 37.063, 0.3814 ) }
    dend_15 { pt3dadd( 382.677, 421.676, 36.6769, 0.4136 ) }
    dend_15 { pt3dadd( 383.376, 420.77, 36.3194, 0.3612 ) }
    dend_15 { pt3dadd( 384.098, 419.896, 35.9769, 0.3514 ) }
    dend_15 { pt3dadd( 384.885, 419.109, 35.5961, 0.367 ) }
    dend_15 { pt3dadd( 385.529, 418.199, 35.2352, 0.461 ) }
    dend_15 { pt3dadd( 386.166, 417.257, 34.93, 0.5472 ) }
    dend_15 { pt3dadd( 386.445, 416.178, 34.6553, 0.4486 ) }
    dend_15 { pt3dadd( 386.484, 415.105, 34.2866, 0.3756 ) }
    dend_15 { pt3dadd( 386.766, 414.067, 33.8528, 0.3934 ) }
    dend_15 { pt3dadd( 387.292, 413.103, 33.4519, 0.3718 ) }
    dend_15 { pt3dadd( 387.619, 412.053, 33.1433, 0.3648 ) }
    dend_15 { pt3dadd( 387.722, 410.913, 32.9137, 0.4212 ) }
    dend_15 { pt3dadd( 387.826, 409.775, 32.7583, 0.4182 ) }
    dend_15 { pt3dadd( 388.07, 408.678, 32.6138, 0.4772 ) }
    dend_15 { pt3dadd( 388.377, 407.602, 32.4475, 0.5008 ) }
    dend_15 { pt3dadd( 388.579, 406.491, 32.3501, 0.5058 ) }
    dend_15 { pt3dadd( 388.737, 405.366, 32.34, 0.473 ) }
    dend_15 { pt3dadd( 389.09, 404.309, 32.3876, 0.3878 ) }
    dend_15 { pt3dadd( 389.693, 403.34, 32.4626, 0.3476 ) }
    dend_15 { pt3dadd( 390.152, 402.306, 32.5324, 0.3878 ) }
    dend_15 { pt3dadd( 390.771, 401.409, 32.5592, 0.3618 ) }
    dend_15 { pt3dadd( 391.773, 400.877, 32.5223, 0.3466 ) }
    dend_15 { pt3dadd( 392.857, 400.726, 32.508, 0.3862 ) }
    dend_15 { pt3dadd( 393.861, 400.274, 32.363, 0.3588 ) }
    dend_15 { pt3dadd( 394.712, 399.66, 32.0155, 0.3406 ) }
    dend_15 { pt3dadd( 395.576, 399.028, 31.54, 0.3756 ) }
    dend_15 { pt3dadd( 396.444, 398.398, 31.0002, 0.3382 ) }
    dend_15 { pt3dadd( 397.357, 397.818, 30.4721, 0.308 ) }
    dend_15 { pt3dadd( 398.39, 397.448, 30.0054, 0.289 ) }
    dend_15 { pt3dadd( 399.368, 397.072, 29.7522, 0.3024 ) }
    dend_15 { pt3dadd( 400.221, 396.977, 29.8766, 0.3212 ) }
    dend_15 { pt3dadd( 400.965, 396.319, 30.0754, 0.3864 ) }
    dend_15 { pt3dadd( 401.132, 395.271, 30.0807, 0.3592 ) }
    dend_15 { pt3dadd( 401.138, 394.194, 29.8833, 0.3416 ) }
    dend_15 { pt3dadd( 401.151, 393.068, 29.5873, 0.377 ) }
    dend_15 { pt3dadd( 401.251, 391.941, 29.2541, 0.3406 ) }
    dend_15 { pt3dadd( 401.844, 391.026, 28.8148, 0.3126 ) }
    dend_15 { pt3dadd( 402.673, 390.304, 28.3399, 0.2988 ) }
    dend_15 { pt3dadd( 403.418, 389.532, 27.8708, 0.3142 ) }
    dend_15 { pt3dadd( 404.227, 388.723, 27.5057, 0.3734 ) }
    dend_15 { pt3dadd( 405.071, 387.953, 27.2111, 0.334 ) }
    dend_15 { pt3dadd( 405.964, 387.238, 26.9686, 0.3002 ) }
    dend_15 { pt3dadd( 406.721, 386.407, 26.7619, 0.2748 ) }
    dend_15 { pt3dadd( 407.292, 385.416, 26.5644, 0.275 ) }
    dend_15 { pt3dadd( 407.825, 384.442, 26.2969, 0.2752 ) }
    dend_15 { pt3dadd( 408.296, 383.5, 25.864, 0.276 ) }
    dend_15 { pt3dadd( 408.703, 382.487, 25.3649, 0.277 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 408.983, 381.46, 24.8067, 0.2792 ) }
    dend_15 { pt3dadd( 409.483, 380.438, 24.3567, 0.2832 ) }
    dend_15 { pt3dadd( 410.321, 379.779, 24.0247, 0.2906 ) }
    dend_15 { pt3dadd( 411.462, 379.698, 23.7996, 0.3038 ) }
    dend_15 { pt3dadd( 412.604, 379.651, 23.6624, 0.331 ) }
    dend_15 { pt3dadd( 413.731, 379.565, 23.572, 0.3688 ) }
    dend_15 { pt3dadd( 414.741, 379.142, 23.4606, 0.5 ) }
    dend_15 { pt3dadd( 415.066, 378.301, 23.2137, 0.4466 ) }
    dend_15 { pt3dadd( 415.352, 377.223, 23.1229, 0.4138 ) }
    dend_15 { pt3dadd( 415.496, 376.103, 23.1456, 0.49 ) }
    dend_15 { pt3dadd( 415.787, 375.036, 23.3313, 0.4256 ) }
    dend_15 { pt3dadd( 416.047, 373.946, 23.6142, 0.3876 ) }
    dend_15 { pt3dadd( 416.27, 372.828, 23.9343, 0.3802 ) }
    dend_15 { pt3dadd( 416.878, 371.892, 24.1874, 0.5166 ) }
    dend_15 { pt3dadd( 417.593, 371.009, 24.4125, 0.5008 ) }
    dend_15 { pt3dadd( 417.975, 370.011, 24.7031, 0.4008 ) }
    dend_15 { pt3dadd( 417.408, 369.74, 25.1548, 0.3298 ) }
    dend_15 { pt3dadd( 417.021, 369.243, 25.6325, 0.3304 ) }
    dend_15 { pt3dadd( 417.504, 368.254, 25.9768, 0.375 ) }
    dend_15 { pt3dadd( 417.577, 367.152, 26.2902, 0.476 ) }
    dend_15 { pt3dadd( 416.877, 366.448, 26.7471, 0.5746 ) }
    dend_15 { pt3dadd( 416.266, 365.996, 27.403, 0.5 ) }
    dend_15 { pt3dadd( 416.31, 364.965, 28.0837, 0.4678 ) }
    dend_15 { pt3dadd( 416.782, 363.929, 28.625, 0.5802 ) }
    dend_15 { pt3dadd( 417.521, 363.062, 29.0332, 0.639 ) }
    dend_15 { pt3dadd( 418.24, 362.188, 29.3107, 0.559 ) }
    dend_15 { pt3dadd( 418.5, 361.116, 29.442, 0.4142 ) }
    dend_15 { pt3dadd( 418.269, 360.059, 29.3899, 0.3554 ) }
    dend_15 { pt3dadd( 418.246, 359.095, 29.4252, 0.374 ) }
    dend_15 { pt3dadd( 418.511, 358.137, 29.6797, 0.4738 ) }
    dend_15 { pt3dadd( 418.538, 357.029, 29.9986, 0.5724 ) }
    dend_15 { pt3dadd( 418.403, 355.909, 30.3016, 0.4884 ) }
    dend_15 { pt3dadd( 417.857, 354.981, 30.5276, 0.4828 ) }
    dend_15 { pt3dadd( 417.289, 354.053, 30.6718, 0.4318 ) }
    dend_15 { pt3dadd( 417.896, 353.202, 30.8605, 0.5336 ) }
    dend_15 { pt3dadd( 418.844, 352.876, 31.2757, 0.4542 ) }
    dend_15 { pt3dadd( 419.497, 352.089, 31.8853, 0.4646 ) }
    dend_15 { pt3dadd( 419.912, 351.126, 32.6463, 0.4046 ) }
    dend_15 { pt3dadd( 419.912, 349.985, 33.3981, 0.4514 ) }
    dend_15 { pt3dadd( 419.416, 349.271, 34.337, 0.4566 ) }
    dend_15 { pt3dadd( 418.591, 348.785, 35.3147, 0.4048 ) }
    dend_15 { pt3dadd( 417.714, 348.183, 36.2088, 0.3786 ) }
    dend_15 { pt3dadd( 416.834, 347.616, 37.0188, 0.4478 ) }
    dend_15 { pt3dadd( 415.719, 347.365, 37.6205, 0.4634 ) }
    dend_15 { pt3dadd( 414.605, 347.116, 38.0584, 0.5804 ) }
    dend_15 { pt3dadd( 413.685, 346.474, 38.2841, 0.5978 ) }
    dend_15 { pt3dadd( 412.785, 345.804, 38.3695, 0.4566 ) }
    dend_15 { pt3dadd( 411.661, 345.76, 38.4037, 0.3498 ) }
    dend_15 { pt3dadd( 410.672, 345.375, 38.5622, 0.3144 ) }
    dend_15 { pt3dadd( 409.918, 344.7, 38.9259, 0.374 ) }
    dend_15 { pt3dadd( 410.274, 343.716, 39.3464, 0.335 ) }
    dend_15 { pt3dadd( 410.868, 342.786, 39.8222, 0.3022 ) }
    dend_15 { pt3dadd( 411.199, 341.734, 40.2727, 0.2786 ) }
    dend_15 { pt3dadd( 411.531, 340.668, 40.6104, 0.2822 ) }
    dend_15 { pt3dadd( 412.364, 340.627, 40.7224, 0.2882 ) }
    dend_15 { pt3dadd( 412.952, 340.449, 41.0682, 0.3012 ) }
    dend_15 { pt3dadd( 413.094, 339.402, 41.3893, 0.3182 ) }
    dend_15 { pt3dadd( 413.492, 338.439, 41.4067, 0.3814 ) }
    dend_15 { pt3dadd( 413.694, 337.33, 41.3034, 0.3476 ) }
    dend_15 { pt3dadd( 414.284, 336.481, 41.0262, 0.3304 ) }
    dend_15 { pt3dadd( 415.323, 336.119, 40.654, 0.305 ) }
    dend_15 { pt3dadd( 416.249, 335.686, 39.6623, 0.4576 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 265.751, 444.825, 65.1314, 0.413 ) }
    dend_12 { pt3dadd( 265.293, 444.605, 65.4808, 0.4328 ) }
    dend_12 { pt3dadd( 264.328, 444.069, 65.8526, 0.3594 ) }
    dend_12 { pt3dadd( 263.728, 443.14, 66.1536, 0.3002 ) }
    dend_12 { pt3dadd( 263.168, 442.281, 66.5272, 0.275 ) }
    dend_12 { pt3dadd( 262.673, 441.273, 66.8161, 0.2754 ) }
    dend_12 { pt3dadd( 262.182, 440.265, 67.0474, 0.2762 ) }
    dend_12 { pt3dadd( 261.735, 439.23, 67.1964, 0.2774 ) }
    dend_12 { pt3dadd( 261.29, 438.372, 67.4786, 0.2798 ) }
    dend_12 { pt3dadd( 261.29, 437.246, 67.7678, 0.2844 ) }
    dend_12 { pt3dadd( 261.29, 436.288, 68.0, 0.2924 ) }
    dend_12 { pt3dadd( 261.482, 435.638, 68.3502, 0.3088 ) }
    dend_12 { pt3dadd( 261.407, 434.726, 68.5342, 0.3324 ) }
    dend_12 { pt3dadd( 261.443, 433.623, 68.6745, 0.4086 ) }
    dend_12 { pt3dadd( 261.518, 432.872, 68.9483, 0.3938 ) }
    dend_12 { pt3dadd( 261.29, 431.905, 69.0206, 0.4374 ) }
    dend_12 { pt3dadd( 261.483, 430.843, 68.9651, 0.4014 ) }
    dend_12 { pt3dadd( 261.539, 429.712, 68.8814, 0.4454 ) }
    dend_12 { pt3dadd( 261.518, 428.746, 68.8559, 0.4458 ) }
    dend_12 { pt3dadd( 261.518, 427.641, 68.9125, 0.3844 ) }
    dend_12 { pt3dadd( 261.564, 426.526, 69.0592, 0.3412 ) }
    dend_12 { pt3dadd( 261.572, 425.519, 69.2891, 0.3764 ) }
    dend_12 { pt3dadd( 261.537, 424.407, 69.4966, 0.339 ) }
    dend_12 { pt3dadd( 260.757, 423.655, 69.7959, 0.3098 ) }
    dend_12 { pt3dadd( 259.801, 423.083, 70.0916, 0.2928 ) }
    dend_12 { pt3dadd( 259.609, 422.111, 70.5205, 0.308 ) }
    dend_12 { pt3dadd( 259.388, 421.09, 70.9484, 0.3384 ) }
    dend_12 { pt3dadd( 258.668, 420.277, 71.302, 0.3834 ) }
    dend_12 { pt3dadd( 258.36, 419.888, 71.9639, 0.5224 ) }
    dend_12 { pt3dadd( 257.429, 419.378, 72.6314, 0.5112 ) }
    dend_12 { pt3dadd( 256.399, 419.25, 73.3138, 0.4214 ) }
    dend_12 { pt3dadd( 256.116, 418.259, 73.771, 0.3624 ) }
    dend_12 { pt3dadd( 255.548, 417.662, 73.946, 0.4168 ) }
    dend_12 { pt3dadd( 255.201, 416.872, 74.3008, 0.4102 ) }
    dend_12 { pt3dadd( 254.67, 415.957, 74.5996, 0.4628 ) }
    dend_12 { pt3dadd( 254.086, 415.132, 74.7382, 0.4728 ) }
    dend_12 { pt3dadd( 253.238, 414.582, 74.9616, 0.4588 ) }
    dend_12 { pt3dadd( 252.329, 413.953, 75.21, 0.3606 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 252.029, 412.859, 75.3858, 0.3022 ) }
    dend_12 { pt3dadd( 251.681, 411.797, 75.4216, 0.279 ) }
    dend_12 { pt3dadd( 251.043, 410.855, 75.4211, 0.2826 ) }
    dend_12 { pt3dadd( 250.17, 410.122, 75.3889, 0.2892 ) }
    dend_12 { pt3dadd( 249.557, 409.379, 75.3306, 0.303 ) }
    dend_12 { pt3dadd( 249.254, 408.355, 75.2752, 0.322 ) }
    dend_12 { pt3dadd( 249.391, 407.271, 75.271, 0.388 ) }
    dend_12 { pt3dadd( 249.604, 406.249, 75.2816, 0.3608 ) }
    dend_12 { pt3dadd( 249.25, 405.43, 75.5532, 0.3508 ) }
    dend_12 { pt3dadd( 249.294, 404.883, 76.1522, 0.364 ) }
    dend_12 { pt3dadd( 249.479, 404.211, 76.8183, 0.4628 ) }
    dend_12 { pt3dadd( 249.456, 403.591, 76.9835, 0.5146 ) }
    dend_12 { pt3dadd( 249.328, 402.905, 76.9306, 0.5622 ) }
    dend_12 { pt3dadd( 249.857, 402.155, 76.7819, 0.428 ) }
    dend_12 { pt3dadd( 249.368, 401.422, 76.7463, 0.343 ) }
    dend_12 { pt3dadd( 248.807, 401.202, 77.1224, 0.3082 ) }
    dend_12 { pt3dadd( 248.792, 400.512, 77.8254, 0.3314 ) }
    dend_12 { pt3dadd( 248.948, 399.472, 78.4638, 0.4064 ) }
    dend_12 { pt3dadd( 249.194, 398.548, 79.1297, 0.3896 ) }
    dend_12 { pt3dadd( 248.796, 397.566, 79.6362, 0.43 ) }
    dend_12 { pt3dadd( 249.155, 396.563, 80.1436, 0.386 ) }
    dend_12 { pt3dadd( 249.673, 395.951, 80.7372, 0.4232 ) }
    dend_12 { pt3dadd( 250.165, 395.444, 81.501, 0.374 ) }
    dend_12 { pt3dadd( 249.573, 395.167, 82.4687, 0.4 ) }
    dend_12 { pt3dadd( 248.926, 394.383, 83.4162, 0.3358 ) }
    dend_12 { pt3dadd( 248.684, 393.352, 84.224, 0.3036 ) }
    dend_12 { pt3dadd( 248.292, 392.307, 84.842, 0.2814 ) }
    dend_12 { pt3dadd( 248.106, 391.376, 85.1536, 0.2872 ) }
    dend_12 { pt3dadd( 247.901, 390.658, 85.575, 0.299 ) }
    dend_12 { pt3dadd( 247.168, 389.927, 86.0177, 0.3148 ) }
    dend_12 { pt3dadd( 246.753, 388.892, 86.4394, 0.3746 ) }
    dend_12 { pt3dadd( 246.71, 387.793, 86.7541, 0.3362 ) }
    dend_12 { pt3dadd( 246.503, 386.732, 87.1808, 0.304 ) }
    dend_12 { pt3dadd( 246.503, 385.893, 87.845, 0.2818 ) }
    dend_12 { pt3dadd( 246.094, 385.168, 88.5273, 0.288 ) }
    dend_12 { pt3dadd( 245.854, 384.08, 89.0901, 0.3008 ) }
    dend_12 { pt3dadd( 245.603, 383.0, 89.6165, 0.3178 ) }
    dend_12 { pt3dadd( 245.052, 382.044, 90.0486, 0.3804 ) }
    dend_12 { pt3dadd( 244.276, 381.344, 90.4448, 0.347 ) }
    dend_12 { pt3dadd( 243.557, 380.504, 90.7791, 0.324 ) }
    dend_12 { pt3dadd( 242.762, 379.975, 91.2265, 0.321 ) }
    dend_12 { pt3dadd( 242.435, 379.077, 91.7652, 0.3502 ) }
    dend_12 { pt3dadd( 242.098, 378.091, 92.1724, 0.466 ) }
    dend_12 { pt3dadd( 241.327, 377.422, 92.5582, 0.3814 ) }
    dend_12 { pt3dadd( 241.02, 376.526, 92.9916, 0.305 ) }
    dend_12 { pt3dadd( 240.317, 375.868, 93.506, 0.2288 ) }
    dend_12 { pt3dadd( 239.18, 375.789, 94.2998, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 265.751, 444.825, 65.1314, 0.413 ) }
    dend_11 { pt3dadd( 266.124, 443.803, 64.535, 0.3734 ) }
    dend_11 { pt3dadd( 265.692, 442.765, 64.6363, 0.3338 ) }
    dend_11 { pt3dadd( 265.138, 441.764, 64.6738, 0.3 ) }
    dend_11 { pt3dadd( 264.573, 440.77, 64.7324, 0.2746 ) }
    dend_11 { pt3dadd( 264.0, 439.781, 64.8194, 0.2746 ) }
    dend_11 { pt3dadd( 263.427, 438.793, 64.9295, 0.2746 ) }
    dend_11 { pt3dadd( 262.818, 437.829, 65.0546, 0.2746 ) }
    dend_11 { pt3dadd( 262.046, 436.987, 65.1815, 0.2746 ) }
    dend_11 { pt3dadd( 261.276, 436.145, 65.3352, 0.2746 ) }
    dend_11 { pt3dadd( 260.507, 435.305, 65.5057, 0.2746 ) }
    dend_11 { pt3dadd( 259.737, 434.463, 65.6897, 0.2746 ) }
    dend_11 { pt3dadd( 258.967, 433.621, 65.8832, 0.2746 ) }
    dend_11 { pt3dadd( 258.194, 432.779, 66.0545, 0.2746 ) }
    dend_11 { pt3dadd( 257.406, 431.952, 66.2119, 0.2746 ) }
    dend_11 { pt3dadd( 256.525, 431.22, 66.358, 0.2746 ) }
    dend_11 { pt3dadd( 255.692, 430.546, 66.6254, 0.2746 ) }
    dend_11 { pt3dadd( 254.878, 429.81, 66.9306, 0.2746 ) }
    dend_11 { pt3dadd( 254.068, 429.003, 67.1796, 0.2746 ) }
    dend_11 { pt3dadd( 252.937, 428.895, 67.4307, 0.2746 ) }
    dend_11 { pt3dadd( 251.898, 428.656, 67.5802, 0.2746 ) }
    dend_11 { pt3dadd( 250.789, 428.465, 67.7488, 0.2746 ) }
    dend_11 { pt3dadd( 249.652, 428.427, 67.8888, 0.2746 ) }
    dend_11 { pt3dadd( 248.508, 428.427, 68.014, 0.2746 ) }
    dend_11 { pt3dadd( 247.539, 427.948, 68.1414, 0.2748 ) }
    dend_11 { pt3dadd( 247.261, 426.871, 68.2774, 0.2748 ) }
    dend_11 { pt3dadd( 246.492, 426.048, 68.4345, 0.2752 ) }
    dend_11 { pt3dadd( 245.942, 425.228, 68.67, 0.2758 ) }
    dend_11 { pt3dadd( 245.001, 424.777, 69.0248, 0.2766 ) }
    dend_11 { pt3dadd( 243.896, 424.724, 69.4235, 0.2782 ) }
    dend_11 { pt3dadd( 243.299, 423.896, 69.8197, 0.2814 ) }
    dend_11 { pt3dadd( 242.74, 423.024, 70.194, 0.287 ) }
    dend_11 { pt3dadd( 241.898, 422.935, 70.7879, 0.2988 ) }
    dend_11 { pt3dadd( 240.755, 422.935, 71.3045, 0.3142 ) }
    dend_11 { pt3dadd( 239.708, 422.65, 71.682, 0.3734 ) }
    dend_11 { pt3dadd( 239.408, 422.819, 72.3481, 0.3338 ) }
    dend_11 { pt3dadd( 238.859, 422.361, 72.9641, 0.3 ) }
    dend_11 { pt3dadd( 238.493, 421.564, 73.6112, 0.2746 ) }
    dend_11 { pt3dadd( 238.209, 420.874, 74.1535, 0.2746 ) }
    dend_11 { pt3dadd( 238.012, 420.167, 74.2818, 0.2746 ) }
    dend_11 { pt3dadd( 237.954, 419.274, 74.4327, 0.2746 ) }
    dend_11 { pt3dadd( 237.758, 419.044, 74.8644, 0.2746 ) }
    dend_11 { pt3dadd( 237.118, 419.681, 75.2788, 0.2748 ) }
    dend_11 { pt3dadd( 236.776, 419.241, 75.2839, 0.2748 ) }
    dend_11 { pt3dadd( 236.198, 418.354, 75.2268, 0.2752 ) }
    dend_11 { pt3dadd( 235.452, 417.664, 75.0876, 0.2758 ) }
    dend_11 { pt3dadd( 235.452, 416.589, 74.9784, 0.2766 ) }
    dend_11 { pt3dadd( 235.593, 415.502, 74.8846, 0.2782 ) }
    dend_11 { pt3dadd( 235.746, 414.493, 75.0478, 0.2814 ) }
    dend_11 { pt3dadd( 235.566, 413.405, 75.406, 0.2874 ) }
    dend_11 { pt3dadd( 235.141, 412.342, 75.801, 0.2982 ) }
    dend_11 { pt3dadd( 234.837, 411.355, 76.3854, 0.3192 ) }
    dend_11 { pt3dadd( 234.403, 410.376, 76.9756, 0.3528 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_11 { pt3dadd( 233.992, 409.723, 77.7521, 0.4412 ) }
    dend_11 { pt3dadd( 233.277, 408.893, 78.4507, 0.4798 ) }
    dend_11 { pt3dadd( 232.594, 408.009, 79.1151, 0.4718 ) }
    dend_11 { pt3dadd( 232.183, 406.993, 79.7387, 0.3856 ) }
    dend_11 { pt3dadd( 232.084, 405.891, 80.3278, 0.3434 ) }
    dend_11 { pt3dadd( 231.622, 404.924, 80.8609, 0.381 ) }
    dend_11 { pt3dadd( 231.253, 403.986, 81.3288, 0.3474 ) }
    dend_11 { pt3dadd( 230.495, 403.182, 81.8138, 0.3262 ) }
    dend_11 { pt3dadd( 230.167, 402.309, 82.4527, 0.3178 ) }
    dend_11 { pt3dadd( 229.779, 401.549, 83.2913, 0.3804 ) }
    dend_11 { pt3dadd( 229.381, 400.612, 84.2002, 0.3468 ) }
    dend_11 { pt3dadd( 228.755, 399.739, 84.9772, 0.3248 ) }
    dend_11 { pt3dadd( 228.329, 398.734, 85.7326, 0.3156 ) }
    dend_11 { pt3dadd( 227.87, 397.786, 86.4606, 0.3762 ) }
    dend_11 { pt3dadd( 227.068, 397.531, 87.3211, 0.3388 ) }
    dend_11 { pt3dadd( 226.775, 396.768, 88.2479, 0.3094 ) }
    dend_11 { pt3dadd( 226.052, 395.952, 89.105, 0.2914 ) }
    dend_11 { pt3dadd( 225.247, 395.456, 89.9391, 0.307 ) }
    dend_11 { pt3dadd( 224.76, 394.648, 90.5962, 0.3304 ) }
    dend_11 { pt3dadd( 224.606, 393.595, 91.1291, 0.3984 ) }
    dend_11 { pt3dadd( 224.098, 392.623, 91.5356, 0.4068 ) }
    dend_11 { pt3dadd( 223.586, 391.629, 91.8308, 0.305 ) }
    dend_11 { pt3dadd( 223.158, 390.665, 92.0545, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 311.335, 469.36, 47.9564, 0.5014 ) }
    dend_9 { pt3dadd( 311.595, 468.587, 47.5488, 0.6864 ) }
    dend_9 { pt3dadd( 311.923, 467.593, 45.3933, 0.5526 ) }
    dend_9 { pt3dadd( 311.637, 466.919, 44.38, 0.4022 ) }
    dend_9 { pt3dadd( 311.104, 466.437, 43.0926, 0.3334 ) }
    dend_9 { pt3dadd( 309.96, 466.417, 41.841, 0.3314 ) }
    dend_9 { pt3dadd( 309.253, 466.179, 40.3102, 0.4052 ) }
    dend_9 { pt3dadd( 309.095, 465.685, 38.5459, 0.394 ) }
    dend_9 { pt3dadd( 309.005, 465.163, 36.6243, 0.4068 ) }
    dend_9 { pt3dadd( 309.241, 464.76, 34.6108, 0.4946 ) }
    dend_9 { pt3dadd( 309.63, 464.526, 32.557, 0.5746 ) }
    dend_9 { pt3dadd( 309.995, 464.358, 30.5332, 0.6702 ) }
    dend_9 { pt3dadd( 310.19, 463.938, 28.7361, 0.644 ) }
    dend_9 { pt3dadd( 310.129, 463.444, 27.1618, 0.6668 ) }
    dend_9 { pt3dadd( 310.606, 464.321, 25.9898, 0.5932 ) }
    dend_9 { pt3dadd( 310.811, 465.41, 25.2189, 0.5592 ) }
    dend_9 { pt3dadd( 311.048, 466.188, 25.2588, 0.4576 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 311.335, 469.36, 47.9564, 0.5014 ) }
    dend_2 { pt3dadd( 311.973, 467.871, 47.4152, 0.3718 ) }
    dend_2 { pt3dadd( 312.658, 467.173, 46.7468, 0.3244 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 312.658, 467.173, 46.7468, 0.3244 ) }
    dend_4 { pt3dadd( 313.596, 467.075, 46.1012, 0.3146 ) }
    dend_4 { pt3dadd( 314.472, 466.391, 45.6, 0.374 ) }
    dend_4 { pt3dadd( 314.587, 465.259, 45.2273, 0.3352 ) }
    dend_4 { pt3dadd( 314.276, 464.169, 44.935, 0.3024 ) }
    dend_4 { pt3dadd( 314.078, 463.043, 44.6746, 0.2792 ) }
    dend_4 { pt3dadd( 313.81, 462.056, 44.3066, 0.2832 ) }
    dend_4 { pt3dadd( 314.125, 460.966, 43.9258, 0.2908 ) }
    dend_4 { pt3dadd( 314.63, 460.082, 43.4563, 0.3044 ) }
    dend_4 { pt3dadd( 315.408, 459.443, 42.8674, 0.3304 ) }
    dend_4 { pt3dadd( 316.159, 458.663, 42.2946, 0.375 ) }
    dend_4 { pt3dadd( 316.451, 457.623, 41.7945, 0.4768 ) }
    dend_4 { pt3dadd( 316.639, 456.506, 41.4392, 0.5714 ) }
    dend_4 { pt3dadd( 316.937, 455.402, 41.2328, 0.5176 ) }
    dend_4 { pt3dadd( 317.237, 454.298, 41.1594, 0.385 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 312.658, 467.173, 46.7468, 0.3244 ) }
    dend_3 { pt3dadd( 311.681, 466.603, 45.4362, 0.2754 ) }
    dend_3 { pt3dadd( 311.038, 465.829, 45.0884, 0.2762 ) }
    dend_3 { pt3dadd( 309.955, 465.625, 45.0209, 0.2778 ) }
    dend_3 { pt3dadd( 308.833, 465.468, 45.0072, 0.2802 ) }
    dend_3 { pt3dadd( 307.778, 465.044, 45.0097, 0.2854 ) }
    dend_3 { pt3dadd( 306.735, 464.812, 44.9994, 0.2944 ) }
    dend_3 { pt3dadd( 306.69, 463.858, 44.8123, 0.3124 ) }
    dend_3 { pt3dadd( 305.886, 463.158, 44.611, 0.3404 ) }
    dend_3 { pt3dadd( 304.982, 462.552, 44.5178, 0.4172 ) }
    dend_3 { pt3dadd( 303.873, 462.527, 44.429, 0.4404 ) }
    dend_3 { pt3dadd( 302.775, 462.527, 44.501, 0.3732 ) }
    dend_3 { pt3dadd( 301.669, 462.524, 44.6732, 0.327 ) }
    dend_3 { pt3dadd( 300.883, 461.869, 44.9224, 0.3192 ) }
    dend_3 { pt3dadd( 299.99, 461.423, 45.0125, 0.383 ) }
    dend_3 { pt3dadd( 299.124, 460.77, 45.0918, 0.3514 ) }
    dend_3 { pt3dadd( 298.137, 460.267, 45.2682, 0.3336 ) }
    dend_3 { pt3dadd( 297.184, 459.651, 45.4261, 0.3314 ) }
    dend_3 { pt3dadd( 296.113, 459.345, 45.5902, 0.4064 ) }
    dend_3 { pt3dadd( 295.098, 459.092, 45.8643, 0.3894 ) }
    dend_3 { pt3dadd( 294.097, 458.547, 46.0424, 0.4294 ) }
    dend_3 { pt3dadd( 293.135, 458.022, 46.048, 0.3852 ) }
    dend_3 { pt3dadd( 292.198, 457.472, 46.0314, 0.4208 ) }
    dend_3 { pt3dadd( 291.339, 456.741, 45.9158, 0.3756 ) }
    dend_3 { pt3dadd( 290.496, 455.978, 45.7453, 0.3718 ) }
    dend_3 { pt3dadd( 289.687, 455.296, 45.4474, 0.4352 ) }
    dend_3 { pt3dadd( 288.663, 454.977, 45.2794, 0.439 ) }
    dend_3 { pt3dadd( 287.765, 454.334, 45.0663, 0.5406 ) }
    dend_3 { pt3dadd( 287.046, 453.518, 44.8202, 0.4984 ) }
    dend_3 { pt3dadd( 286.006, 453.188, 44.6877, 0.3962 ) }
    dend_3 { pt3dadd( 285.096, 452.512, 44.5404, 0.3214 ) }
    dend_3 { pt3dadd( 284.109, 451.983, 44.4903, 0.315 ) }
    dend_3 { pt3dadd( 283.026, 451.708, 44.3713, 0.3454 ) }
    dend_3 { pt3dadd( 281.89, 451.808, 44.275, 0.4262 ) }
    dend_3 { pt3dadd( 280.797, 451.759, 44.0762, 0.4586 ) }
    dend_3 { pt3dadd( 279.901, 451.243, 43.9566, 0.402 ) }
    dend_3 { pt3dadd( 279.319, 450.432, 43.8511, 0.4046 ) }
    dend_3 { pt3dadd( 278.617, 449.679, 43.6696, 0.3446 ) }
    dend_3 { pt3dadd( 277.688, 449.448, 43.3843, 0.3196 ) }
    dend_3 { pt3dadd( 276.679, 449.869, 42.9722, 0.3118 ) }
    dend_3 { pt3dadd( 275.609, 450.117, 42.5334, 0.3394 ) }
    dend_3 { pt3dadd( 274.843, 450.387, 41.9028, 0.415 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 273.828, 450.18, 41.323, 0.4366 ) }
    dend_3 { pt3dadd( 272.703, 450.032, 40.892, 0.3664 ) }
    dend_3 { pt3dadd( 271.614, 449.855, 40.5611, 0.3126 ) }
    dend_3 { pt3dadd( 270.527, 450.121, 40.2545, 0.299 ) }
    dend_3 { pt3dadd( 269.732, 450.777, 39.9339, 0.3146 ) }
    dend_3 { pt3dadd( 269.128, 451.722, 39.6295, 0.3746 ) }
    dend_3 { pt3dadd( 268.263, 452.28, 39.2804, 0.3358 ) }
    dend_3 { pt3dadd( 267.147, 452.501, 38.9668, 0.3038 ) }
    dend_3 { pt3dadd( 266.053, 452.74, 38.7201, 0.2816 ) }
    dend_3 { pt3dadd( 265.185, 453.447, 38.593, 0.2876 ) }
    dend_3 { pt3dadd( 264.222, 453.961, 38.5554, 0.2998 ) }
    dend_3 { pt3dadd( 263.476, 454.698, 38.4496, 0.3158 ) }
    dend_3 { pt3dadd( 263.027, 455.677, 38.1651, 0.3764 ) }
    dend_3 { pt3dadd( 262.356, 455.72, 37.6429, 0.3396 ) }
    dend_3 { pt3dadd( 261.477, 455.265, 37.0191, 0.3104 ) }
    dend_3 { pt3dadd( 260.699, 455.826, 36.346, 0.294 ) }
    dend_3 { pt3dadd( 260.133, 456.576, 35.6434, 0.3114 ) }
    dend_3 { pt3dadd( 259.125, 456.913, 34.921, 0.3386 ) }
    dend_3 { pt3dadd( 258.047, 457.006, 34.2622, 0.4136 ) }
    dend_3 { pt3dadd( 256.923, 456.941, 33.6969, 0.434 ) }
    dend_3 { pt3dadd( 255.809, 456.793, 33.2209, 0.3616 ) }
    dend_3 { pt3dadd( 254.716, 456.453, 32.8689, 0.304 ) }
    dend_3 { pt3dadd( 253.622, 456.134, 32.6049, 0.2824 ) }
    dend_3 { pt3dadd( 252.498, 456.201, 32.3294, 0.289 ) }
    dend_3 { pt3dadd( 251.373, 456.267, 32.0261, 0.3006 ) }
    dend_3 { pt3dadd( 250.311, 456.609, 31.7839, 0.3252 ) }
    dend_3 { pt3dadd( 249.266, 457.044, 31.5983, 0.3576 ) }
    dend_3 { pt3dadd( 248.304, 457.546, 31.262, 0.4798 ) }
    dend_3 { pt3dadd( 247.28, 457.911, 30.8759, 0.407 ) }
    dend_3 { pt3dadd( 246.291, 457.584, 30.3932, 0.3522 ) }
    dend_3 { pt3dadd( 245.783, 456.858, 29.724, 0.319 ) }
    dend_3 { pt3dadd( 245.131, 456.108, 28.9666, 0.3824 ) }
    dend_3 { pt3dadd( 244.262, 455.427, 28.2932, 0.35 ) }
    dend_3 { pt3dadd( 243.788, 454.497, 27.9119, 0.3314 ) }
    dend_3 { pt3dadd( 242.846, 453.857, 27.6723, 0.3272 ) }
    dend_3 { pt3dadd( 241.877, 453.434, 27.3717, 0.3986 ) }
    dend_3 { pt3dadd( 240.747, 453.333, 27.1158, 0.3754 ) }
    dend_3 { pt3dadd( 239.612, 453.217, 26.8691, 0.4024 ) }
    dend_3 { pt3dadd( 238.495, 453.055, 26.5565, 0.3406 ) }
    dend_3 { pt3dadd( 237.378, 452.892, 26.1865, 0.3126 ) }
    dend_3 { pt3dadd( 236.38, 452.357, 25.8602, 0.2988 ) }
    dend_3 { pt3dadd( 235.552, 451.666, 25.5312, 0.3142 ) }
    dend_3 { pt3dadd( 234.622, 451.719, 25.056, 0.3736 ) }
    dend_3 { pt3dadd( 233.556, 452.006, 24.6487, 0.334 ) }
    dend_3 { pt3dadd( 232.413, 452.009, 24.3751, 0.3004 ) }
    dend_3 { pt3dadd( 231.269, 452.009, 24.2141, 0.2752 ) }
    dend_3 { pt3dadd( 230.127, 452.006, 24.1567, 0.276 ) }
    dend_3 { pt3dadd( 229.0, 451.984, 24.2408, 0.277 ) }
    dend_3 { pt3dadd( 227.873, 451.962, 24.4201, 0.2794 ) }
    dend_3 { pt3dadd( 226.804, 451.607, 24.5773, 0.2834 ) }
    dend_3 { pt3dadd( 225.749, 451.163, 24.6888, 0.291 ) }
    dend_3 { pt3dadd( 224.642, 451.405, 24.7598, 0.3062 ) }
    dend_3 { pt3dadd( 223.525, 451.551, 24.7367, 0.3276 ) }
    dend_3 { pt3dadd( 222.423, 451.53, 24.6304, 0.3984 ) }
    dend_3 { pt3dadd( 221.348, 451.332, 24.6125, 0.3814 ) }
    dend_3 { pt3dadd( 220.29, 451.212, 24.7334, 0.3824 ) }
    dend_3 { pt3dadd( 219.365, 451.793, 24.8862, 0.4546 ) }
    dend_3 { pt3dadd( 218.318, 452.215, 25.0493, 0.4756 ) }
    dend_3 { pt3dadd( 217.234, 452.467, 25.2513, 0.6048 ) }
    dend_3 { pt3dadd( 216.136, 452.466, 25.5155, 0.6374 ) }
    dend_3 { pt3dadd( 215.027, 452.229, 25.7472, 0.5558 ) }
    dend_3 { pt3dadd( 213.936, 452.009, 25.9237, 0.4096 ) }
    dend_3 { pt3dadd( 212.995, 451.999, 25.8234, 0.3406 ) }
    dend_3 { pt3dadd( 211.871, 451.889, 25.6985, 0.3754 ) }
    dend_3 { pt3dadd( 210.797, 451.496, 25.611, 0.3374 ) }
    dend_3 { pt3dadd( 209.809, 450.95, 25.5781, 0.3068 ) }
    dend_3 { pt3dadd( 208.797, 450.708, 25.7167, 0.2872 ) }
    dend_3 { pt3dadd( 207.742, 450.608, 26.006, 0.2976 ) }
    dend_3 { pt3dadd( 206.668, 450.298, 26.2806, 0.3182 ) }
    dend_3 { pt3dadd( 205.589, 449.919, 26.4554, 0.3512 ) }
    dend_3 { pt3dadd( 204.497, 449.585, 26.5119, 0.438 ) }
    dend_3 { pt3dadd( 204.169, 448.851, 26.2454, 0.4738 ) }
    dend_3 { pt3dadd( 203.829, 447.759, 25.9738, 0.4612 ) }
    dend_3 { pt3dadd( 203.43, 446.75, 25.8455, 0.365 ) }
    dend_3 { pt3dadd( 202.867, 445.764, 25.7036, 0.3104 ) }
    dend_3 { pt3dadd( 202.056, 445.047, 25.5117, 0.2942 ) }
    dend_3 { pt3dadd( 201.081, 444.45, 25.4093, 0.3104 ) }
    dend_3 { pt3dadd( 200.13, 443.877, 25.3965, 0.3434 ) }
    dend_3 { pt3dadd( 199.092, 443.894, 25.5076, 0.3914 ) }
    dend_3 { pt3dadd( 198.227, 444.497, 25.6898, 0.5444 ) }
    dend_3 { pt3dadd( 197.3, 445.146, 25.8075, 0.5174 ) }
    dend_3 { pt3dadd( 196.38, 445.8, 25.8546, 0.602 ) }
    dend_3 { pt3dadd( 195.471, 446.453, 25.8043, 0.5608 ) }
    dend_3 { pt3dadd( 194.531, 446.941, 25.6301, 0.5326 ) }
    dend_3 { pt3dadd( 193.604, 447.235, 25.6677, 0.4754 ) }
    dend_3 { pt3dadd( 192.958, 447.534, 26.0254, 0.3924 ) }
    dend_3 { pt3dadd( 192.273, 447.974, 26.3333, 0.356 ) }
    dend_3 { pt3dadd( 191.577, 448.302, 26.2901, 0.4038 ) }
    dend_3 { pt3dadd( 191.114, 448.742, 26.4854, 0.3898 ) }
    dend_3 { pt3dadd( 190.457, 449.253, 26.6216, 0.4068 ) }
    dend_3 { pt3dadd( 190.199, 449.253, 25.8202, 0.4576 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 317.237, 454.298, 41.1594, 0.385 ) }
    dend_8 { pt3dadd( 317.527, 454.589, 39.0902, 0.4576 ) }
    dend_8 { pt3dadd( 317.858, 454.47, 36.7186, 0.397 ) }
    dend_8 { pt3dadd( 317.906, 453.688, 35.7364, 0.3642 ) }
    dend_8 { pt3dadd( 317.03, 453.276, 34.764, 0.4204 ) }
    dend_8 { pt3dadd( 316.603, 452.45, 33.6977, 0.4166 ) }
    dend_8 { pt3dadd( 317.046, 451.909, 32.5032, 0.4732 ) }
    dend_8 { pt3dadd( 317.762, 451.134, 31.6221, 0.499 ) }
    dend_8 { pt3dadd( 317.986, 450.418, 30.6838, 0.473 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( 318.058, 449.753, 29.596, 0.5564 ) }
    dend_8 { pt3dadd( 317.241, 448.986, 28.6096, 0.5272 ) }
    dend_8 { pt3dadd( 317.0, 448.539, 27.4582, 0.4518 ) }
    dend_8 { pt3dadd( 317.405, 447.816, 26.2956, 0.4134 ) }
    dend_8 { pt3dadd( 317.372, 446.683, 25.3739, 0.5384 ) }
    dend_8 { pt3dadd( 317.109, 445.581, 24.6851, 0.505 ) }
    dend_8 { pt3dadd( 316.56, 444.596, 24.1286, 0.586 ) }
    dend_8 { pt3dadd( 315.75, 443.961, 23.6291, 0.4986 ) }
    dend_8 { pt3dadd( 314.699, 443.76, 23.1591, 0.574 ) }
    dend_8 { pt3dadd( 313.591, 443.663, 22.7381, 0.477 ) }
    dend_8 { pt3dadd( 312.595, 443.12, 22.381, 0.532 ) }
    dend_8 { pt3dadd( 311.918, 442.221, 22.0693, 0.4096 ) }
    dend_8 { pt3dadd( 311.3, 441.391, 21.6968, 0.3566 ) }
    dend_8 { pt3dadd( 310.854, 440.451, 21.3128, 0.3272 ) }
    dend_8 { pt3dadd( 310.59, 439.404, 21.0789, 0.3988 ) }
    dend_8 { pt3dadd( 311.049, 438.495, 20.8141, 0.3756 ) }
    dend_8 { pt3dadd( 312.131, 438.17, 20.5987, 0.4038 ) }
    dend_8 { pt3dadd( 312.421, 437.146, 20.3595, 0.3388 ) }
    dend_8 { pt3dadd( 312.134, 436.094, 20.2523, 0.3304 ) }
    dend_8 { pt3dadd( 311.734, 435.292, 19.6459, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 20/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 317.237, 454.298, 41.1594, 0.385 ) }
    dend_5 { pt3dadd( 317.105, 453.883, 41.1858, 0.3004 ) }
    dend_5 { pt3dadd( 316.906, 452.771, 41.2955, 0.2754 ) }
    dend_5 { pt3dadd( 316.966, 451.68, 41.5299, 0.2762 ) }
    dend_5 { pt3dadd( 317.491, 450.839, 41.9135, 0.2776 ) }
    dend_5 { pt3dadd( 318.492, 450.349, 42.1697, 0.2802 ) }
    dend_5 { pt3dadd( 319.496, 449.925, 42.2643, 0.285 ) }
    dend_5 { pt3dadd( 320.557, 449.544, 42.3424, 0.2938 ) }
    dend_5 { pt3dadd( 320.995, 448.539, 42.5312, 0.3112 ) }
    dend_5 { pt3dadd( 321.236, 447.493, 42.8134, 0.3384 ) }
    dend_5 { pt3dadd( 322.047, 446.726, 43.094, 0.413 ) }
    dend_5 { pt3dadd( 323.015, 446.193, 43.4213, 0.4328 ) }
    dend_5 { pt3dadd( 323.919, 445.506, 43.72, 0.3596 ) }
    dend_5 { pt3dadd( 324.523, 444.556, 43.9757, 0.3008 ) }
    dend_5 { pt3dadd( 324.803, 443.467, 44.1568, 0.276 ) }
    dend_5 { pt3dadd( 325.048, 442.349, 44.252, 0.2774 ) }
    dend_5 { pt3dadd( 325.096, 441.213, 44.2739, 0.2796 ) }
    dend_5 { pt3dadd( 325.124, 440.076, 44.2487, 0.284 ) }
    dend_5 { pt3dadd( 325.256, 439.001, 44.1428, 0.292 ) }
    dend_5 { pt3dadd( 325.755, 437.979, 44.1162, 0.3078 ) }
    dend_5 { pt3dadd( 326.329, 437.07, 44.2896, 0.3306 ) }
    dend_5 { pt3dadd( 326.75, 436.073, 44.6214, 0.4052 ) }
    dend_5 { pt3dadd( 326.954, 434.989, 45.0061, 0.3874 ) }
    dend_5 { pt3dadd( 326.916, 433.847, 45.3676, 0.4258 ) }
    dend_5 { pt3dadd( 326.752, 432.716, 45.7153, 0.3784 ) }
    dend_5 { pt3dadd( 326.583, 431.584, 46.0373, 0.4084 ) }
    dend_5 { pt3dadd( 326.61, 430.49, 46.4008, 0.3512 ) }
    dend_5 { pt3dadd( 326.846, 429.434, 46.8756, 0.3332 ) }
    dend_5 { pt3dadd( 326.954, 428.398, 47.4678, 0.3308 ) }
    dend_5 { pt3dadd( 327.187, 427.344, 48.0813, 0.4046 ) }
    dend_5 { pt3dadd( 327.259, 426.216, 48.6116, 0.392 ) }
    dend_5 { pt3dadd( 326.65, 425.378, 49.1658, 0.4046 ) }
    dend_5 { pt3dadd( 326.144, 424.375, 49.59, 0.4844 ) }
    dend_5 { pt3dadd( 326.039, 423.249, 49.8994, 0.5854 ) }
    dend_5 { pt3dadd( 325.773, 422.168, 50.1337, 0.544 ) }
    dend_5 { pt3dadd( 325.451, 421.087, 50.3619, 0.435 ) }
    dend_5 { pt3dadd( 325.24, 419.97, 50.6156, 0.3888 ) }
    dend_5 { pt3dadd( 325.223, 418.872, 50.9118, 0.4602 ) }
    dend_5 { pt3dadd( 325.454, 417.796, 51.2845, 0.516 ) }
    dend_5 { pt3dadd( 325.463, 416.703, 51.653, 0.5344 ) }
    dend_5 { pt3dadd( 325.201, 415.589, 51.9445, 0.5224 ) }
    dend_5 { pt3dadd( 324.929, 414.478, 52.1693, 0.4986 ) }
    dend_5 { pt3dadd( 324.581, 413.389, 52.3494, 0.4596 ) }
    dend_5 { pt3dadd( 324.234, 412.299, 52.498, 0.362 ) }
    dend_5 { pt3dadd( 324.207, 411.171, 52.6781, 0.3048 ) }
    dend_5 { pt3dadd( 324.207, 410.038, 52.8976, 0.2834 ) }
    dend_5 { pt3dadd( 324.207, 408.901, 53.1289, 0.2908 ) }
    dend_5 { pt3dadd( 324.207, 407.757, 53.3408, 0.3056 ) }
    dend_5 { pt3dadd( 324.207, 406.614, 53.541, 0.3268 ) }
    dend_5 { pt3dadd( 324.498, 405.525, 53.723, 0.3978 ) }
    dend_5 { pt3dadd( 324.981, 404.515, 53.8952, 0.374 ) }
    dend_5 { pt3dadd( 325.82, 403.84, 54.152, 0.4002 ) }
    dend_5 { pt3dadd( 326.039, 402.876, 54.5854, 0.3362 ) }
    dend_5 { pt3dadd( 326.249, 401.796, 55.0332, 0.3044 ) }
    dend_5 { pt3dadd( 326.499, 400.681, 55.4151, 0.2826 ) }
    dend_5 { pt3dadd( 326.565, 399.557, 55.7967, 0.2892 ) }
    dend_5 { pt3dadd( 326.631, 398.434, 56.1599, 0.3018 ) }
    dend_5 { pt3dadd( 327.062, 397.405, 56.4404, 0.3256 ) }
    dend_5 { pt3dadd( 327.632, 396.412, 56.6362, 0.366 ) }
    dend_5 { pt3dadd( 327.849, 395.319, 56.7865, 0.4594 ) }
    dend_5 { pt3dadd( 327.87, 394.176, 56.9148, 0.5444 ) }
    dend_5 { pt3dadd( 328.017, 393.1, 57.083, 0.4432 ) }
    dend_5 { pt3dadd( 328.629, 392.2, 57.2905, 0.3656 ) }
    dend_5 { pt3dadd( 329.423, 391.435, 57.4476, 0.3746 ) }
    dend_5 { pt3dadd( 329.791, 390.351, 57.5512, 0.3358 ) }
    dend_5 { pt3dadd( 330.159, 389.268, 57.6089, 0.3038 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 86/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 330.159, 389.268, 57.6089, 0.3038 ) }
    dend_7 { pt3dadd( 330.229, 388.739, 57.5862, 0.2816 ) }
    dend_7 { pt3dadd( 330.362, 387.654, 57.5876, 0.2876 ) }
    dend_7 { pt3dadd( 330.8, 386.791, 57.4563, 0.2986 ) }
    dend_7 { pt3dadd( 331.819, 386.774, 57.283, 0.32 ) }
    dend_7 { pt3dadd( 332.61, 386.376, 57.3776, 0.3544 ) }
    dend_7 { pt3dadd( 333.556, 385.74, 57.472, 0.4442 ) }
    dend_7 { pt3dadd( 334.611, 385.319, 57.5478, 0.4852 ) }
    dend_7 { pt3dadd( 335.724, 385.172, 57.6321, 0.4832 ) }
    dend_7 { pt3dadd( 336.85, 385.237, 57.7027, 0.4004 ) }
    dend_7 { pt3dadd( 337.967, 385.428, 57.6492, 0.4018 ) }
    dend_7 { pt3dadd( 339.043, 385.61, 57.4437, 0.3394 ) }
    dend_7 { pt3dadd( 339.919, 385.037, 57.2922, 0.31 ) }
    dend_7 { pt3dadd( 340.778, 384.486, 57.08, 0.2928 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 341.81, 384.203, 56.7748, 0.3096 ) }
    dend_7 { pt3dadd( 342.743, 384.257, 56.3609, 0.3338 ) }
    dend_7 { pt3dadd( 343.85, 384.204, 56.1543, 0.4112 ) }
    dend_7 { pt3dadd( 344.939, 384.096, 56.1305, 0.3984 ) }
    dend_7 { pt3dadd( 345.941, 384.598, 56.1618, 0.446 ) }
    dend_7 { pt3dadd( 346.827, 385.151, 56.2279, 0.4168 ) }
    dend_7 { pt3dadd( 347.935, 385.097, 56.4284, 0.4752 ) }
    dend_7 { pt3dadd( 349.024, 384.996, 56.7218, 0.4968 ) }
    dend_7 { pt3dadd( 350.041, 385.289, 57.0853, 0.4984 ) }
    dend_7 { pt3dadd( 351.144, 385.581, 57.3751, 0.4592 ) }
    dend_7 { pt3dadd( 352.218, 385.416, 57.6562, 0.3612 ) }
    dend_7 { pt3dadd( 353.168, 385.012, 57.7097, 0.3036 ) }
    dend_7 { pt3dadd( 354.05, 384.411, 57.7637, 0.2814 ) }
    dend_7 { pt3dadd( 355.017, 383.812, 57.776, 0.2872 ) }
    dend_7 { pt3dadd( 355.824, 383.017, 57.7461, 0.299 ) }
    dend_7 { pt3dadd( 356.502, 382.263, 57.6262, 0.3148 ) }
    dend_7 { pt3dadd( 357.434, 381.855, 57.6475, 0.3748 ) }
    dend_7 { pt3dadd( 358.439, 381.513, 57.694, 0.3366 ) }
    dend_7 { pt3dadd( 358.905, 380.743, 57.8869, 0.305 ) }
    dend_7 { pt3dadd( 359.891, 380.584, 57.89, 0.2838 ) }
    dend_7 { pt3dadd( 361.014, 380.42, 57.9188, 0.2914 ) }
    dend_7 { pt3dadd( 362.147, 380.292, 57.9547, 0.307 ) }
    dend_7 { pt3dadd( 363.278, 380.213, 57.9197, 0.3292 ) }
    dend_7 { pt3dadd( 364.324, 380.361, 57.7405, 0.4024 ) }
    dend_7 { pt3dadd( 365.372, 380.533, 57.6304, 0.3826 ) }
    dend_7 { pt3dadd( 366.431, 380.164, 57.5425, 0.4156 ) }
    dend_7 { pt3dadd( 367.33, 379.469, 57.4269, 0.3656 ) }
    dend_7 { pt3dadd( 368.028, 378.777, 57.1018, 0.3538 ) }
    dend_7 { pt3dadd( 368.902, 378.159, 56.8708, 0.3994 ) }
    dend_7 { pt3dadd( 369.902, 378.017, 56.8417, 0.383 ) }
    dend_7 { pt3dadd( 370.396, 377.338, 56.5768, 0.387 ) }
    dend_7 { pt3dadd( 371.197, 376.632, 56.2559, 0.4566 ) }
    dend_7 { pt3dadd( 372.007, 375.837, 55.9863, 0.5096 ) }
    dend_7 { pt3dadd( 372.689, 374.952, 55.8474, 0.523 ) }
    dend_7 { pt3dadd( 373.558, 374.214, 55.6948, 0.5 ) }
    dend_7 { pt3dadd( 374.27, 373.324, 55.4974, 0.4624 ) }
    dend_7 { pt3dadd( 374.999, 372.465, 55.2765, 0.3672 ) }
    dend_7 { pt3dadd( 375.819, 371.693, 55.0189, 0.3144 ) }
    dend_7 { pt3dadd( 376.413, 370.738, 54.6924, 0.3024 ) }
    dend_7 { pt3dadd( 376.953, 369.94, 54.2926, 0.321 ) }
    dend_7 { pt3dadd( 377.565, 369.131, 53.7513, 0.386 ) }
    dend_7 { pt3dadd( 378.137, 368.264, 53.1454, 0.358 ) }
    dend_7 { pt3dadd( 378.233, 367.227, 52.6344, 0.3396 ) }
    dend_7 { pt3dadd( 377.511, 366.436, 52.1842, 0.3734 ) }
    dend_7 { pt3dadd( 377.029, 365.436, 51.9582, 0.3338 ) }
    dend_7 { pt3dadd( 377.165, 364.341, 51.8224, 0.3 ) }
    dend_7 { pt3dadd( 377.51, 363.267, 51.6818, 0.2748 ) }
    dend_7 { pt3dadd( 377.914, 362.197, 51.5721, 0.2748 ) }
    dend_7 { pt3dadd( 378.319, 361.128, 51.4634, 0.275 ) }
    dend_7 { pt3dadd( 378.792, 360.109, 51.2904, 0.2754 ) }
    dend_7 { pt3dadd( 379.444, 359.169, 51.1372, 0.2764 ) }
    dend_7 { pt3dadd( 380.143, 358.305, 50.9606, 0.278 ) }
    dend_7 { pt3dadd( 381.164, 357.959, 50.8334, 0.2812 ) }
    dend_7 { pt3dadd( 382.157, 357.421, 50.7254, 0.2864 ) }
    dend_7 { pt3dadd( 382.983, 356.641, 50.6831, 0.2976 ) }
    dend_7 { pt3dadd( 383.843, 355.936, 50.6867, 0.3124 ) }
    dend_7 { pt3dadd( 384.826, 355.482, 50.6999, 0.37 ) }
    dend_7 { pt3dadd( 385.448, 354.617, 50.6122, 0.3276 ) }
    dend_7 { pt3dadd( 385.858, 353.594, 50.6299, 0.288 ) }
    dend_7 { pt3dadd( 386.117, 352.518, 50.7307, 0.2542 ) }
    dend_7 { pt3dadd( 386.722, 351.756, 50.7385, 0.2288 ) }
    dend_7 { pt3dadd( 387.722, 351.53, 51.079, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 330.159, 389.268, 57.6089, 0.3038 ) }
    dend_6 { pt3dadd( 330.49, 387.865, 57.7937, 0.3286 ) }
    dend_6 { pt3dadd( 330.752, 386.751, 57.8791, 0.4014 ) }
    dend_6 { pt3dadd( 330.945, 385.624, 57.9138, 0.3802 ) }
    dend_6 { pt3dadd( 331.133, 384.496, 57.9628, 0.4114 ) }
    dend_6 { pt3dadd( 331.439, 383.4, 58.0289, 0.358 ) }
    dend_6 { pt3dadd( 331.863, 382.337, 58.1126, 0.3396 ) }
    dend_6 { pt3dadd( 332.144, 381.256, 58.2439, 0.3736 ) }
    dend_6 { pt3dadd( 332.144, 380.139, 58.4702, 0.334 ) }
    dend_6 { pt3dadd( 332.032, 379.022, 58.7286, 0.3004 ) }
    dend_6 { pt3dadd( 331.77, 377.909, 58.961, 0.2752 ) }
    dend_6 { pt3dadd( 331.534, 376.794, 59.1763, 0.2758 ) }
    dend_6 { pt3dadd( 331.534, 375.655, 59.4126, 0.2766 ) }
    dend_6 { pt3dadd( 331.534, 374.518, 59.6551, 0.2784 ) }
    dend_6 { pt3dadd( 331.504, 373.404, 59.9385, 0.2818 ) }
    dend_6 { pt3dadd( 331.044, 372.502, 60.3095, 0.2882 ) }
    dend_6 { pt3dadd( 330.633, 371.451, 60.613, 0.2994 ) }
    dend_6 { pt3dadd( 330.553, 370.361, 60.7281, 0.3228 ) }
    dend_6 { pt3dadd( 330.236, 369.299, 60.7729, 0.3538 ) }
    dend_6 { pt3dadd( 330.072, 368.209, 60.9011, 0.4722 ) }
    dend_6 { pt3dadd( 329.878, 367.113, 61.0826, 0.3934 ) }
    dend_6 { pt3dadd( 330.306, 366.079, 61.2478, 0.3256 ) }
    dend_6 { pt3dadd( 330.785, 365.087, 61.4432, 0.2748 ) }
    dend_6 { pt3dadd( 330.943, 363.962, 61.6958, 0.275 ) }
    dend_6 { pt3dadd( 331.076, 362.835, 61.9651, 0.2752 ) }
    dend_6 { pt3dadd( 331.076, 361.69, 62.1958, 0.276 ) }
    dend_6 { pt3dadd( 331.125, 360.561, 62.4268, 0.2768 ) }
    dend_6 { pt3dadd( 331.448, 359.512, 62.7673, 0.279 ) }
    dend_6 { pt3dadd( 331.848, 358.487, 63.1518, 0.2826 ) }
    dend_6 { pt3dadd( 332.47, 357.527, 63.474, 0.2892 ) }
    dend_6 { pt3dadd( 332.815, 356.467, 63.782, 0.303 ) }
    dend_6 { pt3dadd( 333.094, 355.371, 64.1175, 0.322 ) }
    dend_6 { pt3dadd( 333.395, 354.306, 64.5154, 0.3878 ) }
    dend_6 { pt3dadd( 333.405, 353.228, 64.8698, 0.3618 ) }
    dend_6 { pt3dadd( 332.93, 352.343, 65.3156, 0.3464 ) }
    dend_6 { pt3dadd( 332.97, 351.321, 65.6804, 0.386 ) }
    dend_6 { pt3dadd( 333.071, 350.345, 66.1674, 0.358 ) }
    dend_6 { pt3dadd( 333.367, 349.247, 66.5543, 0.3398 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_6 { pt3dadd( 333.701, 348.192, 66.9432, 0.3736 ) }
    dend_6 { pt3dadd( 333.935, 347.077, 67.2084, 0.3346 ) }
    dend_6 { pt3dadd( 333.916, 345.933, 67.3767, 0.3012 ) }
    dend_6 { pt3dadd( 333.579, 344.882, 67.548, 0.2766 ) }
    dend_6 { pt3dadd( 333.478, 343.765, 67.669, 0.2782 ) }
    dend_6 { pt3dadd( 333.306, 342.655, 67.6967, 0.2814 ) }
    dend_6 { pt3dadd( 333.39, 341.534, 67.7012, 0.287 ) }
    dend_6 { pt3dadd( 333.578, 340.405, 67.7306, 0.2986 ) }
    dend_6 { pt3dadd( 333.663, 339.275, 67.7813, 0.314 ) }
    dend_6 { pt3dadd( 333.187, 338.467, 67.9692, 0.373 ) }
    dend_6 { pt3dadd( 332.302, 337.832, 68.1873, 0.333 ) }
    dend_6 { pt3dadd( 331.665, 337.028, 68.3757, 0.2982 ) }
    dend_6 { pt3dadd( 331.622, 335.921, 68.5966, 0.2712 ) }
    dend_6 { pt3dadd( 331.075, 334.921, 68.7436, 0.2684 ) }
    dend_6 { pt3dadd( 330.696, 334.191, 68.9027, 0.2626 ) }
    dend_6 { pt3dadd( 330.55, 333.087, 68.9534, 0.2542 ) }
    dend_6 { pt3dadd( 330.269, 332.054, 68.817, 0.2288 ) }
    dend_6 { pt3dadd( 330.045, 330.932, 68.4796, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_278, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_278 = new SectionList()
    soma_0 ModelViewParmSubset_278.append()
    axon_0 ModelViewParmSubset_278.append()
    axon_1 ModelViewParmSubset_278.append()

    // Group: {name=dend, groups=[], sections=[dend_23, dend_20, dend_13, dend_0, dend_25, dend_24, dend_22, dend_21, dend_17, dend_14, dend_10, dend_1, dend_19, dend_18, dend_16, dend_15, dend_12, dend_11, dend_9, dend_2, dend_4, dend_3, dend_8, dend_5, dend_7, dend_6]}
    dend = new SectionList()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_13 dend.append()
    dend_0 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_1 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_2 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_11537, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_11537 = new SectionList()
    soma_0 OneSecGrp_SectionRef_11537.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.8339026  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 17.797174  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 4.9008417E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.09043414  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.7811598E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.038021997  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.44630706  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.00613925E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0014587612  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0011801481  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 9.8346834E-5  // units: S cm-2
        e_pas_nml2 = -83.947205  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.765132E-4  // units: S cm-2
        e_pas_nml2 = -83.947205  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.0138103E-4  // units: S cm-2
        e_pas_nml2 = -83.947205  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 3.205916E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0011658843  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_480629276
    forsec soma {
        insert CaDynamics_480629276
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_22 nseg = 7
    dend_10 nseg = 3
    dend_19 nseg = 7
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_12 nseg = 5
    dend_11 nseg = 5
    dend_3 nseg = 7
    dend_5 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_480629276


