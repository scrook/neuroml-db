// Cell: dSTUT214_L6_BP_b9592b27fd_0_0
/*
{
  "id" : "dSTUT214_L6_BP_b9592b27fd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.62353, 8.82959, 2.95671, 0.83", "-7.22089, 11.6179, 3.49924, 1.11", "-9.34191, 13.2607, 3.78145, 0.83", "-11.4026, 14.843, 4.03431, 0.83", "-12.6227, 15.7452, 4.17287, 1.11", "-16.4433, 18.5646, 4.61696, 1.11", "-23.277, 23.3915, 5.40198, 0.83", "-25.7389, 25.0642, 5.66121, 0.83", "-27.6885, 26.3494, 5.82223, 0.83", "-29.5897, 27.6231, 5.96161, 0.83", "-31.1372, 28.6729, 6.03681, 0.55", "-32.3005, 29.3837, 6.11314, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "5.0249, 6.42249, -6.34857, 0.55", "8.30915, 7.13295, -7.082, 0.55", "10.2148, 7.31229, -8.05249, 0.83", "13.231, 7.50315, -9.85523, 0.55", "14.687, 7.59528, -10.7254, 1.38", "18.2669, 7.82181, -12.8651, 0.55", "19.7916, 7.7451, -13.886, 0.83", "27.6787, 6.3383, -19.6222, 0.55", "28.4417, 6.14912, -20.2533, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.684222, -10.4959, 3.23568, 1.11", "-0.732744, -14.7769, 4.77044, 1.11", "-0.752504, -16.5205, 5.39549, 0.83", "-0.778758, -18.8368, 6.2259, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.90494, 10.5461, -1.40341, 1.11", "0.992495, 13.1429, -1.38128, 1.11", "1.11546, 17.3798, -1.19136, 1.38", "1.12615, 17.6159, -1.17633, 1.38", "1.43232, 20.5372, -0.950997, 0.83", "1.87184, 23.6274, -0.541001, 0.83", "2.64167, 27.1188, 0.359589, 0.83", "3.0879, 28.4444, 0.872776, 0.83", "3.53392, 29.4052, 1.34797, 1.11", "4.8517, 31.7474, 2.58329, 0.55", "6.38559, 34.1934, 4.05763, 0.83", "8.41513, 36.7125, 5.74584, 0.55", "9.4575, 37.7604, 6.51708, 0.83", "10.9092, 39.1799, 7.71256, 0.55", "12.7005, 40.9852, 9.32353, 0.55", "15.1905, 43.7007, 11.7738, 0.55", "17.9331, 46.8037, 14.4788, 0.55", "19.6471, 48.8173, 16.4852, 0.55", "21.7287, 51.363, 19.3032, 0.55", "22.1589, 51.8737, 19.9408, 0.83", "23.289, 53.2233, 21.7358, 0.55", "24.246, 54.276, 23.1481, 0.83", "26.4403, 57.1486, 26.4933, 0.55", "27.281, 58.1977, 27.4792, 0.83", "28.0825, 58.9721, 28.1581, 0.55", "28.8861, 59.6396, 28.6873, 0.83", "30.6805, 60.8826, 29.6615, 0.83", "33.0642, 62.5743, 30.7281, 0.83", "34.5339, 63.6916, 31.2173, 0.55", "35.6533, 64.6573, 31.5967, 0.55", "38.5902, 67.1529, 32.5455, 0.83", "40.491, 68.7533, 33.0789, 0.55", "43.3833, 71.0984, 33.7674, 0.55", "46.0401, 73.066, 34.289, 0.55", "48.4203, 74.7338, 34.6899, 0.55", "51.436, 76.6892, 35.0566, 0.55", "53.2841, 77.6499, 35.2198, 0.55", "54.5528, 78.1914, 35.1779, 0.55", "56.2472, 78.6011, 34.9794, 0.55", "58.7886, 78.8017, 34.4763, 0.55", "60.3777, 78.7271, 34.1021, 0.55", "62.6935, 78.5559, 33.7166, 0.55", "67.0868, 78.3693, 33.3737, 0.55", "70.5222, 78.3818, 33.3491, 0.55", "74.1525, 78.5686, 33.5404, 0.55", "76.4716, 78.7684, 33.8474, 0.55", "82.4745, 79.8369, 35.044, 0.55", "86.0121, 80.7457, 36.0223, 0.55", "88.6523, 81.6039, 37.008, 0.55", "90.2513, 82.3972, 37.6704, 0.55", "92.1027, 83.5729, 38.4288, 0.55", "95.2456, 85.8867, 39.4252, 0.55", "95.9706, 86.4436, 39.5517, 0.55", "98.0576, 87.9334, 39.7749, 0.55", "99.9737, 89.5181, 39.9726, 0.83", "101.02, 90.397, 40.0636, 0.55", "102.588, 91.9037, 40.1367, 0.83", "110.748, 99.9511, 42.7278, 0.83", "117.846, 109.163, 44.4031, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-32.3005, 29.3837, 6.11314, 0.55", "-34.1641, 30.4656, 5.09377, 0.55", "-36.1907, 31.642, 3.98531, 0.55", "-38.6363, 33.0617, 2.64764, 0.55", "-40.6557, 34.234, 1.54309, 0.83", "-42.348, 35.2164, 0.617481, 0.55", "-45.489, 37.0399, -1.10059, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-32.3005, 29.3837, 6.11314, 0.55", "-34.1256, 29.6286, 6.16918, 0.55", "-36.0311, 29.8678, 6.4246, 0.55", "-38.1822, 30.146, 6.76613, 0.55", "-41.2453, 30.5722, 7.54655, 0.55", "-43.7714, 30.8904, 8.39534, 0.55", "-46.3976, 31.2054, 9.40794, 0.55", "-48.8753, 31.389, 10.7002, 0.55", "-50.9561, 31.3707, 12.0714, 0.55", "-53.4834, 31.2111, 14.1166, 0.55", "-54.5464, 31.086, 15.1922, 0.55", "-55.6835, 30.9481, 16.4132, 0.55", "-57.698, 30.5065, 18.4965, 0.55", "-58.8053, 30.2361, 19.411, 0.55", "-59.9641, 29.9114, 20.3691, 0.55", "-61.3716, 29.5134, 21.3495, 0.55", "-62.9114, 29.1067, 22.3626, 0.55", "-65.118, 28.5099, 23.758, 0.55", "-68.1295, 27.8696, 25.2956, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.4417, 6.14912, -20.2533, 0.55", "33.2208, 7.71726, -21.3323, 0.55", "35.9997, 8.42066, -22.334, 0.55", "38.7538, 8.98709, -23.3516, 0.55", "40.6418, 9.29871, -24.0393, 0.55", "43.4059, 9.69204, -25.0173, 0.55", "49.154, 10.3809, -27.2155, 0.55", "55.69, 11.0817, -30.1398, 0.55", "58.8817, 11.2047, -31.7588, 0.55", "60.5975, 11.2189, -32.7332, 0.55", "62.4802, 11.2366, -33.8778, 0.55", "65.8471, 11.1771, -35.8989, 0.55", "67.0767, 11.0813, -36.6666, 0.55", "72.2824, 10.767, -40.3216, 0.55", "75.9696, 10.5778, -43.1811, 0.55", "78.0907, 10.5041, -44.8883, 0.55", "80.2076, 10.4124, -46.5878, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "28.4417, 6.14912, -20.2533, 0.83", "30.4016, 7.66806, -20.4107, 0.83", "31.5244, 8.52781, -20.5556, 0.55", "33.1792, 9.81197, -20.9252, 0.83", "34.29, 10.7009, -21.2141, 0.55", "35.816, 11.9739, -21.5943, 0.83", "37.6436, 13.553, -21.9837, 0.55", "38.5695, 14.2799, -22.1283, 0.55", "40.728, 15.6648, -22.2562, 0.83", "42.7036, 16.7094, -22.067, 0.55", "43.8044, 17.2963, -21.8481, 0.83", "45.4438, 18.2398, -21.3411, 0.55", "47.7794, 19.6827, -20.298, 0.55", "51.0349, 21.5322, -18.6455, 0.55", "54.1422, 23.2082, -16.8233, 0.55", "56.6049, 24.5144, -15.3284, 0.55", "60.6617, 26.6911, -12.8439, 0.55", "63.6164, 28.3837, -10.9688, 0.55", "65.379, 29.5748, -9.78833, 0.55", "68.5825, 32.1324, -7.63135, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.778758, -18.8368, 6.2259, 0.83", "-1.11523, -21.8014, 6.11684, 0.83", "-1.44304, -24.6897, 6.01059, 0.83", "-1.80904, -27.9145, 5.89195, 0.83", "-2.00016, -29.5985, 5.83, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.778758, -18.8368, 6.2259, 0.55", "-0.316974, -20.2366, 7.27204, 0.55", "0.0671738, -21.9571, 8.61085, 0.55", "0.213292, -24.2251, 10.4207, 0.55", "0.205531, -25.109, 11.1419, 0.83", "-0.0484068, -27.3721, 13.2194, 0.55", "-0.277682, -28.5444, 14.3048, 0.55", "-0.781622, -30.8258, 16.507, 0.83", "-1.26429, -32.5233, 18.2397, 0.55", "-1.78407, -33.9283, 19.6347, 0.55", "-2.82296, -36.5917, 22.2227, 0.55", "-3.64629, -38.7145, 24.261, 0.55", "-4.27455, -40.4148, 25.9221, 0.55", "-4.83713, -42.2166, 27.6394, 0.28", "-5.00582, -42.9647, 28.3325, 0.55", "-5.27356, -44.3454, 29.538, 0.28", "-5.36467, -46.4904, 31.1159, 0.55", "-7.42914, -53.6913, 36.5762, 0.55", "-9.75726, -60.3546, 42.5854, 0.55", "-11.8344, -65.8234, 49.7762, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-45.489, 37.0399, -1.10059, 0.55", "-48.0378, 37.3872, 0.481583, 0.55", "-49.0983, 37.4819, 1.28951, 0.83", "-50.3238, 37.5393, 2.41319, 0.55", "-51.254, 37.5891, 3.36417, 0.83", "-53.6946, 37.8113, 5.82649, 0.55", "-54.6183, 37.9126, 6.76554, 0.28", "-56.147, 38.1096, 8.47052, 0.55", "-58.1991, 38.3862, 10.7469, 0.55", "-59.7638, 38.5915, 12.3973, 0.55", "-61.8599, 38.8603, 14.5298, 0.28", "-62.4105, 38.9297, 15.0125, 0.55", "-63.5541, 39.0846, 15.9645, 0.28", "-64.3373, 39.2061, 16.5318, 0.55", "-65.9482, 39.4322, 17.5441, 0.28", "-66.8976, 39.5067, 18.0905, 0.55", "-68.5703, 39.5113, 19.0776, 0.28", "-69.6971, 39.5039, 19.6999, 0.55", "-76.2924, 39.105, 26.7143, 0.55", "-82.2281, 37.8334, 34.1984, 0.55", "-87.9072, 35.6584, 41.6734, 0.55", "-93.5749, 32.3559, 48.7324, 0.55", "-98.1148, 29.5109, 56.7421, 0.55", "-103.39, 26.9892, 64.4014, 0.55", "-108.766, 26.045, 72.3433, 0.55", "-114.115, 24.3351, 80.1737, 0.55", "-119.273, 23.2778, 88.2447, 0.55", "-123.97, 22.0998, 96.5758, 0.55", "-127.705, 19.8612, 105.172, 0.55", "-131.522, 18.5185, 113.918, 0.55", "-135.478, 16.2056, 122.395, 0.55", "-138.296, 13.5134, 131.208, 0.55", "-139.482, 11.5099, 140.559, 0.55", "-140.64, 7.72272, 149.344, 0.55", "-140.423, 3.76398, 158.127, 0.55", "-140.708, 0.210265, 167.079, 0.55", "-142.011, -2.64978, 176.189, 0.55", "-145.317, -4.03222, 185.134, 0.55", "-147.788, -6.47153, 194.123, 0.55", "-148.434, -7.28258, 203.704, 0.55", "-150.626, -7.40244, 213.086, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.489, 37.0399, -1.10059, 0.55", "-46.6977, 37.8929, -2.87512, 0.55", "-47.554, 38.8353, -4.79032, 0.55", "-48.3255, 39.9587, -6.78407, 0.55", "-48.8085, 40.6622, -8.03253, 0.55", "-49.6897, 41.9454, -10.3099, 0.83", "-50.3344, 42.8842, -11.976, 0.55", "-51.0033, 44.1861, -14.398, 0.83", "-51.1889, 45.0322, -15.7198, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-68.1295, 27.8696, 25.2956, 0.28", "-69.1662, 25.9285, 25.3459, 0.28", "-69.6738, 25.0846, 25.3084, 0.28", "-70.3429, 23.8866, 25.2047, 0.55", "-70.8946, 22.8348, 25.1164, 0.28", "-71.7062, 21.2353, 24.9968, 0.55", "-73.9561, 16.5451, 24.6977, 0.28", "-74.7142, 14.8846, 24.4602, 0.55", "-75.8784, 12.317, 24.0106, 0.28", "-76.561, 10.773, 23.673, 0.55", "-77.0366, 9.70576, 23.4168, 0.28", "-77.5774, 8.48216, 23.1314, 0.55", "-79.2119, 4.41256, 22.2467, 0.28", "-79.7313, 3.17599, 21.9416, 0.55", "-80.66, 1.26021, 21.3111, 0.28", "-81.4206, 0.0190406, 20.8337, 0.28", "-82.0873, -0.815149, 20.5111, 0.55", "-84.3555, -3.15223, 19.7273, 0.28", "-85.3962, -4.09708, 19.4475, 0.55", "-87.9525, -6.26625, 18.7144, 0.28", "-90.4975, -8.19405, 18.0655, 0.28", "-93.2592, -10.0472, 17.4101, 0.28", "-94.5117, -10.748, 17.1891, 0.55", "-100.595, -18.205, 15.592, 0.55", "-107.009, -25.5503, 15.8603, 0.55", "-113.551, -32.6887, 14.669, 0.55", "-120.409, -39.3241, 12.6426, 0.55", "-127.508, -45.3608, 9.75564, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-68.1295, 27.8696, 25.2956, 0.55", "-68.8182, 27.825, 25.4937, 0.55", "-70.7239, 27.7219, 26.3087, 0.55", "-71.4343, 27.667, 26.6562, 0.55", "-73.1013, 27.4867, 27.5046, 0.55", "-75.6836, 27.2266, 28.6769, 0.55", "-77.0291, 27.1329, 29.2579, 0.28", "-79.1291, 26.9358, 30.1231, 0.55", "-80.697, 26.7513, 30.7103, 0.55", "-81.3588, 26.669, 30.96, 0.28", "-85.3297, 26.1724, 32.453, 0.55", "-87.2025, 25.8419, 33.041, 0.28", "-89.7502, 25.3742, 33.6837, 0.28", "-91.9652, 24.9934, 34.1048, 0.55", "-100.337, 24.9415, 37.5304, 0.55", "-108.279, 24.7345, 41.8575, 0.55", "-115.612, 23.6756, 47.0477, 0.55", "-122.613, 24.1805, 52.7542, 0.55", "-128.284, 24.4912, 59.7957, 0.55", "-132.495, 25.3747, 67.7534, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "80.2076, 10.4124, -46.5878, 0.55", "84.778, 11.7212, -50.4876, 0.55", "86.2327, 12.056, -51.8009, 0.55", "88.0593, 12.4188, -53.4127, 0.55", "91.3832, 13.0155, -56.5267, 0.55", "94.871, 13.4817, -59.8379, 0.55", "96.59, 13.5817, -61.391, 0.83", "98.019, 13.5503, -62.7582, 0.55", "99.1008, 13.4227, -63.8714, 0.83", "101.753, 12.7334, -66.6685, 0.55", "103.959, 11.9692, -68.9528, 0.55", "106.494, 11.0939, -71.4593, 0.55", "109.309, 10.1866, -74.3176, 0.55", "111.204, 9.5283, -76.2719, 0.55", "113.344, 8.76854, -78.5399, 0.55", "115.19, 8.15319, -80.6323, 0.55", "116.345, 7.84187, -82.112, 0.55", "117.852, 7.1839, -85.112, 0.55", "118.689, 6.70079, -86.9795, 0.55", "119.463, 5.91004, -89.4462, 0.55", "120.577, 4.42136, -93.596, 0.55", "120.814, 4.04725, -94.5255, 0.28", "123.84, -0.616751, -105.8, 0.28", "124.83, -1.95061, -109.113, 0.83", "128.676, -6.86532, -120.816, 0.83", "130.642, -9.35844, -126.208, 0.83", "131.569, -10.4483, -128.373, 0.55", "132.608, -11.506, -130.478, 0.55", "135.354, -13.4767, -134.347, 0.55", "138.24, -15.1949, -137.731, 0.28", "139.067, -15.4019, -137.885, 0.55", "140.855, -15.6291, -137.624, 0.28", "141.948, -15.6666, -137.32, 0.55", "143.086, -15.7042, -136.905, 0.28", "144.442, -15.6716, -136.357, 0.55", "146.467, -15.5535, -135.77, 0.28", "148.1, -15.5173, -135.343, 0.55", "149.9, -15.3834, -135.035, 0.28", "152.352, -15.2302, -134.832, 0.55", "155.101, -15.0237, -134.78, 0.55", "157.521, -14.8411, -134.898, 0.28", "160.873, -14.5896, -135.25, 0.55", "166.672, -14.1017, -136.498, 0.55", "169.23, -13.8079, -137.379, 0.55", "170.328, -13.6565, -137.882, 0.83", "172.426, -13.3861, -139.034, 0.55", "173.878, -13.1558, -139.935, 0.83", "177.776, -12.4416, -142.419, 0.55", "180.176, -12.179, -143.969, 0.28", "181.189, -12.111, -144.498, 0.55", "183.982, -12.1249, -145.601, 0.28", "184.967, -12.2066, -145.908, 0.55", "187.002, -12.4457, -146.216, 0.28", "189.082, -12.8232, -146.148, 0.55", "193.283, -13.6797, -145.26, 0.28", "195.221, -14.1223, -144.637, 0.55", "198.117, -14.9138, -143.535, 0.28", "201.77, -15.8781, -142.019, 0.55", "204.406, -16.534, -140.888, 0.55", "208.956, -17.5202, -138.881, 0.28", "210.819, -17.8676, -138.22, 0.55", "214.024, -18.3487, -137.455, 0.28", "217.199, -18.6293, -136.95, 0.55", "218.928, -18.6325, -136.944, 0.28", "220.472, -18.4506, -137.095, 0.55", "224.816, -17.7503, -137.977, 0.28", "227.898, -17.0454, -138.695, 0.28", "230.557, -16.244, -139.393, 0.55", "233.489, -15.3027, -140.329, 0.28", "234.222, -15.0143, -140.548, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "80.2076, 10.4124, -46.5878, 0.55", "81.0124, 8.13199, -48.0382, 0.55", "81.5197, 6.18725, -49.1299, 0.28", "81.9805, 4.40671, -49.978, 0.55", "83.1502, 0.649904, -51.8103, 0.28", "83.2179, 0.412598, -51.9592, 0.55", "83.6076, -0.828249, -52.8413, 0.28", "83.8384, -1.86452, -53.7351, 0.55", "84.0201, -2.95277, -54.7914, 0.28", "84.2261, -4.44156, -56.3006, 0.55", "84.74, -8.17963, -60.0201, 0.55", "85.1708, -11.5906, -63.4704, 0.55", "85.4888, -14.3194, -66.232, 0.55", "85.7526, -17.0057, -68.8997, 0.55", "85.8182, -17.6997, -69.5599, 0.28", "85.908, -18.4388, -70.2041, 0.55", "86.1249, -19.4534, -71.0023, 0.28", "86.6939, -21.2547, -72.2665, 0.55", "88.0688, -24.6739, -74.1382, 0.55", "88.8222, -26.5099, -74.9782, 0.28", "89.4806, -28.3864, -75.9152, 0.55", "90.2126, -31.0323, -77.3277, 0.28", "90.669, -33.1799, -78.5183, 0.55", "91.2168, -36.4029, -80.3053, 0.28", "91.8059, -39.7346, -82.0523, 0.55", "92.5992, -44.578, -84.6312, 0.28", "92.9669, -47.1647, -86.0144, 0.55", "93.302, -49.8148, -87.4912, 0.28", "93.5752, -52.1518, -88.9341, 0.28", "94.0179, -55.0695, -90.9858, 0.55", "94.6099, -57.7577, -92.8204, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "68.5825, 32.1324, -7.63135, 0.55", "72.0237, 32.5146, -6.34615, 0.55", "74.5788, 32.6084, -5.60039, 0.55", "80.2237, 32.6426, -4.21862, 0.55", "82.8015, 32.5239, -3.78852, 0.55", "85.6313, 32.3973, -3.47373, 0.55", "89.4655, 32.1903, -3.32291, 0.55", "93.5758, 31.7348, -3.47204, 0.55", "95.7712, 31.3823, -3.76017, 0.55", "100.32, 30.4509, -4.88052, 0.55", "102.423, 30.014, -5.46015, 0.55", "107.374, 28.8647, -6.89464, 0.55", "110.735, 27.9791, -7.79481, 0.55", "113.193, 27.3525, -8.35541, 0.83", "117.127, 26.2397, -9.16086, 0.55", "120.973, 25.0381, -9.75406, 0.83", "124.232, 23.928, -10.1035, 0.55", "127.108, 23.0295, -10.2982, 0.55", "128.726, 22.613, -10.3558, 0.83", "132.474, 21.7213, -10.3189, 0.28", "134.316, 21.389, -10.2236, 0.28", "136.119, 20.9317, -10.1725, 0.28", "138.066, 20.4811, -10.144, 0.28", "141.185, 19.7897, -10.1771, 0.28", "142.434, 19.5386, -10.1629, 0.55", "145.378, 19.0701, -9.87888, 0.55", "150.641, 18.2768, -9.10689, 0.55", "152.092, 18.045, -8.82051, 0.55", "153.383, 17.8194, -8.49793, 0.83", "156.147, 17.4926, -7.62166, 0.55", "158.544, 17.2273, -6.82585, 0.55", "160.807, 16.9897, -6.06768, 0.55", "162.569, 16.7582, -5.51533, 0.55", "165.398, 16.1569, -4.69277, 0.55", "168.781, 15.1069, -3.78329, 0.55", "174.135, 12.7978, -2.48667, 0.55", "177.131, 11.0723, -1.78515, 0.55", "179.778, 9.13642, -1.13408, 0.28", "180.585, 8.39186, -0.919064, 0.55", "182.417, 6.25304, -0.338375, 0.28", "184.047, 3.81339, 0.320787, 0.55", "185.621, 0.804075, 1.34135, 0.55", "186.665, -1.13257, 2.10872, 0.28", "187.04, -1.80138, 2.41508, 0.55", "188.001, -3.44795, 3.20352, 0.28", "189.297, -5.56032, 4.28911, 0.55", "192.622, -10.5624, 7.0625, 0.55", "194.34, -13.0525, 8.52279, 0.55", "195.929, -15.3227, 9.88547, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "68.5825, 32.1324, -7.63135, 0.55", "70.9649, 33.5103, -5.47747, 0.55", "71.7367, 33.9352, -4.83205, 0.55", "74.6547, 35.3269, -2.51641, 0.55", "77.8948, 36.9652, 0.0995575, 0.55", "82.0299, 39.0906, 3.5751, 0.55", "83.1732, 39.6766, 4.52634, 0.55", "85.2398, 40.6357, 6.23731, 0.55", "87.5121, 41.716, 8.00317, 0.55", "90.1633, 43.0133, 9.90401, 0.55", "92.6549, 44.2766, 11.6933, 0.55", "94.0232, 45.0163, 12.5862, 0.55", "95.6232, 45.9336, 13.6164, 0.55", "97.5999, 47.1187, 14.8335, 0.83", "100.897, 48.9434, 16.4637, 0.55", "103.11, 50.0273, 17.4597, 0.83", "106.22, 51.3519, 18.7771, 0.55", "107.185, 51.7007, 19.1838, 0.55", "110.21, 52.612, 20.4281, 0.55", "115.704, 53.8468, 22.536, 0.55", "119.772, 54.5009, 24.0553, 0.55", "123.001, 54.8932, 25.3774, 0.55", "126.3, 55.1558, 26.888, 0.55", "126.996, 55.1937, 27.2148, 0.28", "128.415, 55.2143, 27.8909, 0.83", "134.25, 55.2257, 30.7253, 0.55", "138.343, 55.2156, 32.6295, 0.55", "141.678, 55.3142, 34.2496, 0.55", "143.668, 55.3727, 35.2381, 0.83", "145.232, 55.4419, 36.0124, 0.28", "146.652, 55.5031, 36.7008, 0.55", "157.107, 59.0876, 42.8348, 0.55", "168.791, 60.3436, 47.49, 0.55", "180.14, 63.2062, 52.2634, 0.55", "190.08, 64.9073, 59.8845, 0.55", "199.419, 65.0321, 68.4023, 0.55", "210.396, 62.6277, 74.191, 0.55", "221.629, 58.509, 78.2678, 0.55", "233.77, 56.4555, 81.1274, 0.55", "245.686, 54.4316, 84.8255, 0.55", "258.023, 53.5556, 87.4352, 0.55", "270.016, 53.6422, 91.4283, 0.55", "281.419, 51.7664, 96.5502, 0.55", "292.674, 52.375, 102.27, 0.55", "302.954, 55.1432, 109.084, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.00016, -29.5985, 5.83, 1.38", "0.962787, -32.7891, 5.05964, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.00016, -29.5985, 5.83, 0.55", "-3.28045, -31.0487, 5.99503, 0.55", "-4.70605, -32.9172, 6.17515, 0.55", "-5.80588, -34.1477, 6.3301, 0.55", "-6.74999, -35.1737, 6.3181, 0.55", "-8.82857, -37.2915, 6.10508, 0.55", "-10.2884, -38.7022, 5.91781, 0.55", "-11.5925, -39.9667, 5.70416, 0.55", "-14.9359, -43.0368, 5.16048, 0.55", "-18.9442, -46.5854, 4.53944, 0.55", "-22.0523, -49.2692, 4.00778, 0.55", "-24.0413, -51.0337, 3.64039, 0.55", "-26.3263, -53.1556, 3.22422, 0.55", "-29.2344, -56.2163, 2.72786, 0.55", "-30.9468, -58.4045, 2.4665, 0.55", "-33.0553, -61.5704, 2.3127, 0.55", "-34.7465, -64.5508, 2.24706, 0.55", "-36.4804, -68.2875, 2.19905, 0.55", "-38.1419, -72.6925, 2.20756, 0.55", "-39.0695, -76.0755, 2.25543, 0.55", "-39.4031, -77.7656, 2.37579, 0.55", "-39.9228, -81.7507, 2.84614, 0.55", "-40.3312, -85.4838, 3.37535, 0.55", "-40.5169, -89.2569, 4.16195, 0.55", "-40.6316, -91.4223, 4.73293, 0.55", "-40.9163, -98.1226, 6.7371, 0.55", "-40.9395, -98.6159, 6.89363, 0.55", "-41.0161, -101.64, 7.91873, 0.55", "-41.3872, -107.04, 9.90757, 0.55", "-41.5347, -108.844, 10.4677, 0.55", "-41.8924, -111.654, 10.8725, 0.55", "-42.0273, -112.696, 10.7821, 0.55", "-42.409, -116.218, 9.79741, 0.55", "-42.5877, -118.499, 8.66444, 0.55", "-42.8629, -122.126, 6.11105, 0.55", "-43.0616, -126.566, 2.6224, 0.28", "-43.1115, -127.662, 1.60964, 0.55", "-43.1996, -129.321, -0.0730369, 0.28", "-43.2168, -129.571, -0.339647, 0.55", "-43.3054, -130.941, -1.68091, 0.28", "-43.3543, -131.406, -2.02514, 0.55", "-43.6063, -133.829, -3.34001, 0.28", "-43.7227, -134.652, -3.77311, 0.55", "-44.0726, -137.033, -4.8864, 0.28", "-44.179, -137.783, -5.23452, 0.55", "-44.5625, -140.37, -6.39097, 0.28", "-44.7334, -141.56, -6.92978, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.8344, -65.8234, 49.7762, 0.55", "-15.4607, -72.2884, 56.3808, 0.55", "-19.9179, -77.7926, 63.3381, 0.55", "-24.2276, -83.9568, 69.8184, 0.55", "-28.7229, -90.1311, 76.1617, 0.55", "-32.3899, -97.5051, 81.7064, 0.55", "-35.8819, -104.589, 87.7221, 0.55", "-38.628, -113.27, 91.6805, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.8344, -65.8234, 49.7762, 0.55", "-11.2934, -74.9099, 58.1435, 0.55", "-10.4211, -85.3522, 64.7058, 0.55", "-11.5377, -95.7452, 71.3093, 0.55", "-13.4492, -106.657, 76.799, 0.55", "-14.8536, -117.561, 82.4564, 0.55", "-16.1025, -128.047, 88.8875, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-51.1889, 45.0322, -15.7198, 0.83", "-50.939, 46.4702, -18.0257, 0.83", "-50.4034, 50.0129, -23.2324, 0.55", "-50.1481, 51.5694, -25.3204, 0.83", "-49.8484, 53.2592, -27.4161, 0.55", "-49.4999, 55.0515, -29.2757, 0.55", "-49.2978, 55.9758, -30.0759, 0.28", "-49.1835, 56.6232, -30.4256, 0.55", "-48.6624, 58.8687, -31.1091, 0.28", "-48.4078, 59.8363, -31.3551, 0.55", "-47.545, 63.2283, -32.0651, 0.28", "-46.9188, 65.9381, -32.5259, 0.55", "-46.1264, 70.2089, -33.0853, 0.28", "-45.551, 73.9854, -33.4869, 0.28", "-45.3446, 76.1152, -33.654, 0.55", "-45.2524, 78.6515, -33.8292, 0.28", "-45.2841, 79.8701, -33.8853, 0.55", "-45.5293, 82.7247, -34.1205, 0.28", "-45.8306, 84.6184, -34.3563, 0.28", "-46.1734, 86.4711, -34.6375, 0.28", "-46.3182, 87.4469, -34.7952, 0.55", "-46.7087, 91.3658, -35.5536, 0.28", "-47.0305, 95.9838, -36.558, 0.55", "-47.1192, 97.5762, -36.9144, 0.55", "-47.2286, 99.1803, -37.2339, 0.55", "-47.6487, 102.589, -37.9421, 0.55", "-48.0746, 104.826, -38.4344, 0.28", "-48.3351, 105.677, -38.6181, 0.55", "-49.194, 107.996, -39.0446, 0.28", "-50.2216, 110.453, -39.5801, 0.55", "-52.044, 113.979, -40.4391, 0.28", "-52.9695, 115.451, -40.822, 0.28", "-54.5465, 117.474, -41.5194, 0.55", "-56.3467, 119.57, -42.3369, 0.28", "-56.6816, 119.898, -42.4746, 0.55", "-57.9048, 120.945, -42.9358, 0.28", "-62.1433, 124.309, -44.3939, 0.55", "-68.1378, 128.418, -46.5407, 0.28", "-69.2643, 129.095, -46.9893, 0.55", "-72.3793, 130.827, -48.2485, 0.28", "-73.695, 131.531, -48.8082, 0.28", "-74.8505, 132.105, -49.3419, 0.55", "-78.3191, 133.352, -51.0758, 0.28", "-80.7819, 134.014, -52.163, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-51.1889, 45.0322, -15.7198, 0.55", "-51.3218, 46.5909, -16.1381, 0.55", "-51.4125, 47.5256, -16.2961, 0.28", "-51.5884, 48.2281, -16.2316, 0.55", "-51.9926, 49.8413, -16.0835, 0.28", "-52.2765, 50.9744, -15.9795, 0.55", "-52.7998, 53.0632, -15.7878, 0.28", "-53.1631, 54.2181, -15.4889, 0.55", "-54.6629, 57.1552, -13.7964, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-127.508, -45.3608, 9.75564, 0.55", "-131.765, -51.2289, 9.47683, 0.55", "-134.92, -57.7236, 8.76482, 0.55", "-137.64, -64.0529, 6.48957, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-127.508, -45.3608, 9.75564, 0.55", "-132.803, -50.9032, 7.46056, 0.55", "-137.467, -56.5121, 4.17264, 0.55", "-141.84, -62.2301, 0.679582, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-132.495, 25.3747, 67.7534, 0.55", "-141.049, 24.7309, 74.5516, 0.55", "-149.868, 25.8187, 80.9428, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-132.495, 25.3747, 67.7534, 0.55", "-140.775, 24.5362, 72.279, 0.55", "-149.103, 25.2629, 76.7376, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "94.6099, -57.7577, -92.8204, 0.28", "104.171, -62.6954, -106.417, 0.28", "105.098, -63.2599, -107.621, 0.55", "106.662, -64.213, -109.653, 0.28", "107.98, -65.0155, -111.364, 0.28", "109.724, -66.0777, -113.629, 0.55", "112.023, -67.4783, -116.616, 0.55", "114.773, -69.9508, -118.025, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "94.6099, -57.7577, -92.8204, 0.55", "95.5646, -59.2145, -94.2353, 0.55", "95.8694, -59.8776, -94.867, 0.28", "96.3309, -61.0198, -95.9758, 0.55", "97.3477, -63.5361, -98.4182, 0.28", "98.0523, -65.2799, -100.111, 0.55", "99.2462, -68.2344, -102.979, 0.28", "100.608, -71.8633, -106.777, 0.28", "101.162, -73.5388, -108.559, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "195.929, -15.3227, 9.88547, 0.28", "197.814, -17.3324, 11.4228, 0.28", "200.143, -19.9382, 13.7078, 0.28", "201.598, -21.6143, 15.2706, 0.55", "202.465, -22.5122, 16.2063, 0.28", "202.924, -22.9952, 16.7151, 0.28", "205.212, -25.3901, 19.1798, 0.55", "205.72, -25.8963, 19.8235, 0.28", "206.888, -27.2237, 21.6184, 0.55", "207.897, -28.3983, 23.1076, 0.28", "208.787, -29.3488, 24.3052, 0.55", "209.851, -30.5147, 25.635, 0.55", "211.609, -32.4463, 27.4336, 0.55", "212.037, -32.9273, 27.8513, 0.55", "213.576, -34.7413, 29.373, 0.28", "214.177, -35.4944, 29.9637, 0.55", "215.016, -36.4454, 30.7276, 0.28", "216.217, -37.8165, 31.7335, 0.55", "218.286, -40.0607, 32.9507, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "195.929, -15.3227, 9.88547, 0.55", "193.859, -15.6176, 9.54086, 0.55", "192.179, -15.8571, 9.26101, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.962787, -32.7891, 5.05964, 0.83", "1.0689, -32.9914, 5.06265, 0.83", "2.25167, -34.7732, 5.25482, 0.83", "3.30949, -36.3331, 5.31828, 0.55", "4.15339, -37.5775, 5.36891, 0.55", "5.94715, -40.2227, 5.47652, 0.83", "8.12285, -43.4311, 5.60704, 0.55", "9.29959, -45.1091, 5.71816, 0.83", "11.3464, -47.7723, 6.05625, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.962787, -32.7891, 5.05964, 0.55", "1.05212, -33.8275, 1.96968, 0.55", "1.14801, -34.942, -1.34701, 0.55", "1.26121, -36.2578, -5.26239, 0.55", "1.39867, -37.8555, -10.0169, 0.55", "1.47668, -38.7622, -12.715, 0.55", "1.49235, -38.9444, -13.257, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.1025, -128.047, 88.8875, 0.55", "-16.3105, -138.511, 96.3183, 0.55", "-14.6616, -149.587, 102.593, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-16.1025, -128.047, 88.8875, 0.55", "-16.5984, -131.924, 91.0475, 0.55", "-17.2589, -135.685, 93.3642, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-54.6629, 57.1552, -13.7964, 0.28", "-56.1624, 58.6455, -12.2063, 0.28", "-56.7348, 59.2034, -11.5267, 0.55", "-58.3762, 60.8162, -9.51542, 0.28", "-59.1836, 61.6241, -8.61677, 0.55", "-61.3809, 63.819, -6.27793, 0.28", "-63.6143, 66.0498, -3.90082, 0.55", "-67.3184, 69.5195, 0.0535342, 0.28", "-68.1069, 70.2654, 0.897068, 0.55", "-69.8322, 72.0323, 2.69231, 0.28", "-70.5038, 72.7691, 3.40145, 0.55", "-78.0283, 77.5349, 9.17606, 0.55", "-86.0202, 83.6302, 12.59, 0.55", "-93.056, 89.8903, 17.4877, 0.55", "-98.677, 97.435, 22.4029, 0.55", "-105.324, 104.637, 26.4805, 0.55", "-112.964, 110.16, 31.3592, 0.55", "-120.084, 114.757, 37.7508, 0.55", "-126.39, 118.185, 45.5712, 0.55", "-132.674, 122.24, 53.1042, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-54.6629, 57.1552, -13.7964, 0.55", "-58.019, 56.1118, -12.5564, 0.55", "-59.7642, 55.5117, -11.9154, 0.28", "-61.0629, 55.0652, -11.4384, 0.55", "-62.1453, 54.693, -11.0409, 0.28", "-62.9035, 54.4323, -10.7624, 0.55", "-64.9941, 53.7135, -9.99459, 0.28", "-66.3813, 53.1183, -9.65906, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-137.64, -64.0529, 6.48957, 0.55", "-140.326, -70.3375, 7.37086, 0.55", "-142.776, -76.57, 8.99574, 0.55", "-144.871, -83.1229, 9.39015, 0.55", "-147.537, -89.3375, 10.7147, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-137.64, -64.0529, 6.48957, 0.55", "-143.971, -72.7733, 0.152851, 0.55", "-149.859, -80.3325, -7.87687, 0.55", "-156.621, -88.7925, -14.1209, 0.55", "-165.77, -95.086, -19.8636, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-141.84, -62.2301, 0.679582, 0.55", "-146.126, -65.7665, -3.83246, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-141.84, -62.2301, 0.679582, 0.55", "-145.069, -70.2211, 1.12907, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "114.773, -69.9508, -118.025, 0.28", "117.082, -71.2236, -119.111, 0.28", "118.155, -71.8148, -119.616, 0.55", "120.2, -72.9422, -120.578, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "114.773, -69.9508, -118.025, 0.55", "114.43, -70.9995, -119.413, 0.55", "113.743, -73.0973, -122.19, 0.28", "113.519, -73.7805, -123.094, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "101.162, -73.5388, -108.559, 0.28", "102.772, -77.5979, -113.207, 0.28", "103.57, -79.6078, -115.509, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "101.162, -73.5388, -108.559, 0.55", "99.1203, -74.146, -108.041, 0.55", "93.4288, -75.8392, -106.595, 0.28", "92.0767, -76.2414, -106.252, 0.55", "88.3781, -77.3417, -105.312, 0.28", "85.994, -78.0509, -104.707, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "11.3464, -47.7723, 6.05625, 0.83", "11.4018, -47.9752, 6.03457, 0.83", "12.118, -50.6362, 5.83653, 0.83", "12.4355, -52.6528, 5.69441, 0.83", "12.5136, -54.6285, 5.64595, 0.83", "12.4295, -57.2831, 5.69154, 0.83", "12.201, -60.3575, 5.78834, 0.83", "11.8578, -63.808, 6.05039, 0.83", "11.4399, -67.1756, 6.43013, 0.83", "10.7632, -71.313, 6.66973, 0.83", "10.4278, -73.2077, 6.63509, 0.83", "10.2206, -74.6238, 6.53356, 0.83", "9.80829, -77.3375, 6.25968, 0.83", "9.55995, -79.7515, 5.93743, 0.83", "9.58069, -84.827, 4.93862, 0.83", "9.82438, -87.5635, 4.11054, 0.83", "10.1536, -90.0654, 3.19155, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.3464, -47.7723, 6.05625, 0.55", "10.2813, -50.3448, 6.0296, 0.55", "9.45519, -52.2093, 6.14148, 0.55", "8.93473, -53.3971, 6.33588, 0.55", "8.17166, -55.2476, 6.83397, 0.55", "6.7085, -58.9018, 8.07045, 0.55", "5.5193, -61.6599, 9.30195, 0.55", "4.52222, -63.8638, 10.5228, 0.55", "3.43064, -66.0873, 11.9019, 0.55", "2.49122, -67.929, 13.1383, 0.28", "1.65903, -69.4282, 14.3635, 0.55", "0.00654364, -72.1473, 16.9636, 0.55", "-1.1333, -73.812, 18.7202, 0.55", "-1.78039, -74.7452, 19.6929, 0.55", "-2.58818, -75.8497, 20.7712, 0.83", "-4.96977, -79.1323, 23.743, 0.28", "-5.75105, -80.2196, 24.697, 0.55", "-7.08773, -82.1822, 26.3672, 0.28", "-7.50788, -82.7858, 26.9263, 0.55", "-8.40958, -84.2013, 28.2268, 0.28", "-8.90524, -85.0079, 28.9078, 0.55", "-10.5427, -87.6599, 30.3823, 0.55", "-13.719, -94.6612, 37.4823, 0.55", "-16.499, -101.296, 45.0827, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.49235, -38.9444, -13.257, 0.55", "1.80279, -40.1055, -17.241, 0.55", "1.86266, -40.3802, -18.392, 0.55", "1.95166, -41.0721, -21.2312, 0.55", "1.99577, -42.4516, -27.3228, 0.28", "1.96945, -42.6419, -28.2023, 0.55", "1.77757, -43.5164, -31.7988, 0.55", "1.23416, -44.723, -36.4839, 0.55", "0.998328, -45.1396, -38.2542, 0.28", "0.734597, -45.4195, -39.759, 0.28", "0.0645863, -45.8601, -42.1381, 0.55", "-0.683194, -46.2732, -45.1078, 0.28", "-1.3393, -46.4478, -47.8908, 0.55", "-1.87758, -46.4295, -50.0212, 0.55", "-2.22107, -46.3091, -51.5173, 0.55", "-3.15087, -45.7837, -55.9918, 0.55", "-4.19339, -44.9631, -60.6563, 0.55", "-4.65707, -44.5346, -62.5578, 0.28", "-5.07556, -44.1516, -64.3833, 0.55", "-5.94397, -43.5791, -68.0626, 0.28", "-6.24349, -43.4171, -69.2931, 0.83", "-6.9046, -43.094, -71.5019, 0.28", "-7.51715, -42.9723, -72.9668, 0.55", "-8.43597, -42.8687, -75.0651, 0.28", "-8.82239, -42.8174, -75.8825, 0.55", "-9.59882, -42.7527, -77.3414, 0.55", "-10.8428, -42.4257, -79.4886, 0.55", "-11.7199, -42.1206, -80.8344, 0.28", "-12.5012, -41.7264, -81.8544, 0.55", "-13.4213, -41.0864, -83.0631, 0.28", "-13.5674, -40.9622, -83.2678, 0.55", "-14.6447, -39.7605, -85.4212, 0.28", "-15.306, -38.8537, -87.102, 0.55", "-15.9736, -37.5149, -89.5213, 0.83", "-16.3846, -36.3692, -91.649, 0.28", "-16.4587, -36.0756, -92.229, 0.55", "-16.8879, -33.8702, -96.8095, 0.28", "-16.9197, -33.493, -97.6518, 0.55", "-16.9343, -32.2585, -100.216, 0.28", "-16.9355, -31.9409, -100.88, 0.55", "-16.9985, -31.1156, -102.529, 0.28", "-17.0823, -30.5225, -103.66, 0.55", "-17.4773, -29.2037, -105.995, 0.28", "-17.7427, -28.5002, -107.352, 0.55", "-18.4014, -27.1504, -110.161, 0.28", "-18.6055, -26.7875, -110.99, 0.55", "-18.9549, -26.3053, -112.263, 0.28", "-19.2846, -25.9004, -113.309, 0.55", "-20.0555, -25.0883, -115.4, 0.28", "-20.3018, -24.8574, -116.016, 0.55", "-22.2816, -23.0603, -120.455, 0.28", "-23.0745, -22.3239, -121.917, 0.55", "-24.6169, -20.8818, -124.4, 0.28", "-25.3398, -20.1835, -125.493, 0.55", "-27.1134, -18.6062, -127.881, 0.28", "-27.7964, -18.0745, -128.725, 0.55", "-30.4077, -16.4943, -131.632, 0.28", "-31.5053, -16.0336, -132.834, 0.55", "-33.0876, -15.7467, -134.531, 0.55", "-34.0834, -15.659, -135.55, 0.55", "-36.2634, -15.5578, -137.468, 0.28", "-38.5273, -15.4895, -139.223, 0.28", "-40.459, -15.4253, -140.634, 0.55", "-43.0282, -15.1053, -142.119, 0.28", "-44.4227, -14.7736, -142.705, 0.55", "-47.9542, -13.4458, -143.829, 0.28", "-50.0224, -12.424, -144.066, 0.55", "-51.5015, -11.5892, -144.011, 0.28", "-53.3321, -10.6509, -143.682, 0.55", "-55.7269, -9.41984, -143.098, 0.28", "-56.6329, -8.98854, -142.885, 0.55", "-61.138, -7.07432, -142.137, 0.28", "-62.6533, -6.47464, -141.897, 0.55", "-66.2914, -5.15617, -141.269, 0.28", "-68.2681, -4.4581, -140.929, 0.55", "-69.8927, -3.88648, -140.653, 0.55", "-71.8165, -3.21461, -140.357, 0.28", "-72.7608, -2.87291, -140.318, 0.55", "-75.8533, -1.64124, -140.327, 0.28", "-77.4831, -0.839579, -140.303, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.49235, -38.9444, -13.257, 0.55", "2.07186, -38.9639, -13.7933, 0.55", "2.66109, -38.8967, -14.315, 0.55", "3.41985, -38.7429, -14.9259, 0.55", "4.05129, -38.5537, -15.3951, 0.55", "8.33537, -36.7737, -18.1381, 0.55", "9.28475, -36.2495, -18.7663, 0.55", "10.6639, -35.3602, -19.7218, 0.55", "11.6336, -34.693, -20.4037, 0.55", "12.578, -33.9777, -21.043, 0.28", "14.044, -32.7784, -21.945, 0.55", "16.256, -30.9115, -23.1519, 0.28", "16.4421, -30.7937, -23.3113, 0.55", "17.4549, -30.3652, -24.6951, 0.28", "17.9921, -30.1704, -25.7484, 0.55", "18.4813, -30.064, -26.9477, 0.55", "19.3468, -29.9934, -29.1173, 0.55", "21.0611, -29.885, -33.3705, 0.55", "22.2665, -29.8364, -36.206, 0.55", "22.7095, -29.8252, -37.1733, 0.55", "25.7607, -29.6753, -43.4588, 0.55", "26.6536, -29.5971, -45.1245, 0.55", "27.2239, -29.5429, -46.0209, 0.55", "28.742, -29.449, -47.994, 0.55", "32.7008, -29.474, -52.516, 0.55", "33.8281, -29.5358, -53.689, 0.28", "34.5257, -29.6021, -54.3088, 0.55", "35.5848, -29.7507, -55.2084, 0.28", "36.0552, -29.8608, -55.5461, 0.55", "37.7002, -30.3891, -56.1869, 0.28", "38.9744, -31.2039, -55.9754, 0.55", "39.7392, -31.8007, -55.8006, 0.28", "40.4333, -32.4765, -55.5583, 0.55", "41.0452, -33.2296, -55.2925, 0.28", "41.32, -33.6226, -55.186, 0.55", "41.9569, -34.6621, -54.8884, 0.28", "42.1395, -34.9734, -54.8584, 0.55", "43.2107, -36.7551, -54.7932, 0.28", "43.7646, -37.5714, -54.8664, 0.55", "45.0775, -39.2974, -55.2089, 0.28", "45.6125, -39.926, -55.4019, 0.55", "47.4986, -41.9716, -56.1454, 0.28", "47.9677, -42.4675, -56.3483, 0.55", "49.4247, -44.0419, -57.0678, 0.28", "49.7333, -44.4155, -57.2126, 0.55", "50.5107, -45.4081, -57.5965, 0.28", "50.9858, -45.9807, -57.8776, 0.55", "51.488, -46.5378, -58.1956, 0.55", "52.4879, -47.6499, -58.8208, 0.28", "53.2026, -48.3241, -59.2737, 0.55", "55.4855, -49.9367, -60.7241, 0.28", "56.3796, -50.4379, -61.3168, 0.55", "56.9998, -50.7484, -61.7133, 0.28", "57.6312, -51.0222, -62.1035, 0.55", "59.5889, -51.7616, -63.266, 0.28", "61.0747, -52.34, -64.11, 0.55", "63.62, -53.4804, -65.3781, 0.28", "64.4216, -53.8339, -65.7735, 0.55", "65.9562, -54.4752, -66.4128, 0.28", "66.4659, -54.6847, -66.589, 0.55", "67.2839, -55.0198, -66.7433, 0.28", "67.9988, -55.2991, -66.824, 0.55", "69.9085, -55.9725, -66.8617, 0.28", "72.0898, -56.6657, -66.8703, 0.28", "73.18, -56.9735, -66.8027, 0.28", "74.2874, -57.2506, -66.7949, 0.55", "75.9023, -57.5874, -66.7881, 0.28", "76.6177, -57.7277, -66.7709, 0.83", "78.4334, -58.1095, -66.663, 0.28", "79.2288, -58.2904, -66.6572, 0.55", "82.7569, -59.2023, -66.7828, 0.28", "84.5413, -59.6738, -66.9749, 0.28", "85.8492, -60.0146, -67.191, 0.55", "86.6213, -60.2257, -67.3941, 0.55", "88.6864, -60.8078, -68.077, 0.28", "90.6273, -61.427, -68.7861, 0.55", "92.3974, -62.0389, -69.4333, 0.28", "94.0053, -62.6112, -70.0931, 0.55", "95.3333, -63.0706, -70.6313, 0.28", "96.4134, -63.3794, -71.019, 0.55", "99.0049, -63.9968, -71.8455, 0.28", "100.315, -64.3088, -72.2162, 0.55", "102.278, -64.7832, -72.7087, 0.28", "103.88, -65.1307, -73.0775, 0.55", "107.621, -65.7972, -73.9425, 0.28", "109.147, -65.9899, -74.385, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.6616, -149.587, 102.593, 0.55", "-14.0224, -158.779, 107.41, 0.55", "-11.5096, -168.409, 110.421, 0.55", "-10.1116, -177.86, 114.522, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.6616, -149.587, 102.593, 0.55", "-13.8717, -157.823, 108.829, 0.55", "-14.7451, -164.978, 116.271, 0.55", "-15.9007, -170.442, 124.998, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.2589, -135.685, 93.3642, 0.55", "-17.531, -145.139, 98.4126, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.2589, -135.685, 93.3642, 0.55", "-19.7669, -146.232, 99.8753, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.1536, -90.0654, 3.19155, 0.83", "11.1484, -94.3453, 3.9602, 0.83", "12.0151, -97.9643, 4.92057, 0.83", "12.8767, -101.561, 5.87519, 0.83", "13.6949, -104.978, 6.78178, 0.83", "14.9558, -110.242, 8.17888, 0.83", "16.2076, -115.469, 9.5659, 0.83", "17.0838, -118.948, 11.006, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.1536, -90.0654, 3.19155, 0.55", "12.2159, -92.6813, 3.73167, 0.55", "13.9267, -94.6978, 3.79696, 0.55", "15.1761, -96.1817, 3.67364, 0.55", "16.4545, -97.9217, 3.21339, 0.83", "17.8614, -99.8872, 2.40211, 0.55", "19.2375, -101.81, 1.60857, 0.83", "20.6804, -103.888, 0.509607, 0.55", "21.5554, -105.085, -0.242867, 0.83", "24.3303, -108.943, -3.04702, 0.55", "26.3212, -111.973, -5.53621, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-16.499, -101.296, 45.0827, 0.55", "-20.6099, -108.656, 49.615, 0.55", "-26.0489, -115.144, 54.0805, 0.55", "-32.2207, -120.755, 58.7753, 0.55", "-39.241, -125.285, 63.4456, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.499, -101.296, 45.0827, 0.55", "-21.3106, -111.38, 53.5912, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.0838, -118.948, 11.006, 0.55", "17.1951, -120.747, 11.426, 0.55", "17.3843, -123.041, 12.0327, 0.55", "17.5665, -125.207, 12.5942, 0.55", "17.6843, -126.747, 12.9664, 0.55", "17.8747, -129.495, 13.5822, 0.55", "18.5698, -137.204, 15.1499, 0.55", "18.8935, -139.813, 15.5875, 0.55", "19.1503, -141.648, 15.8077, 0.55", "19.4997, -143.735, 15.8991, 0.55", "19.7769, -145.345, 15.8229, 0.55", "20.5709, -149.092, 15.5181, 0.55", "21.0765, -151.943, 15.2597, 0.55", "21.4452, -153.814, 15.1562, 0.55", "22.3265, -158.679, 15.1291, 0.55", "22.8649, -161.957, 15.2488, 0.55", "23.524, -166.194, 15.6414, 0.55", "24.248, -171.013, 16.464, 0.55", "24.8275, -174.231, 17.2411, 0.55", "25.2033, -176.132, 17.7605, 0.55", "25.5191, -177.887, 18.2271, 0.55", "25.9796, -180.101, 18.7241, 0.55", "27.1099, -185.428, 19.5529, 0.55", "27.6333, -187.481, 19.8144, 0.55", "28.1658, -189.77, 20.0777, 0.55", "28.9417, -193.209, 20.449, 0.55", "29.4112, -195.862, 20.7312, 0.55", "29.7215, -198.39, 20.9341, 0.55", "29.9121, -200.807, 21.1037, 0.55", "30.051, -203.169, 21.2936, 0.55", "30.1636, -204.849, 21.4146, 0.55", "30.3863, -207.593, 21.5238, 0.55", "30.6663, -210.879, 21.3986, 0.55", "30.8706, -212.466, 21.2292, 0.55", "31.0898, -213.855, 20.9796, 0.55", "31.6592, -216.459, 20.3817, 0.55", "32.0142, -218.108, 19.9527, 0.55", "32.4566, -220.144, 19.5064, 0.55", "32.693, -221.582, 19.2669, 0.55", "33.2061, -225.333, 18.7742, 0.55", "33.4745, -228.156, 18.5889, 0.55", "33.7344, -232.547, 18.6381, 0.55", "33.8996, -235.388, 18.946, 0.55", "34.028, -238.378, 19.3589, 0.28", "34.0391, -239.584, 19.5663, 0.28", "33.9908, -242.523, 20.3247, 0.28", "33.8719, -245.25, 21.2283, 0.28", "33.9485, -248.851, 22.8568, 0.28", "35.6182, -256.791, 24.7653, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "17.0838, -118.948, 11.006, 0.55", "17.8129, -119.36, 12.0279, 0.55", "19.2013, -120.429, 14.2403, 0.55", "20.3464, -121.487, 16.2048, 0.28", "21.5314, -122.695, 18.3553, 0.55", "22.1153, -123.48, 19.7767, 0.28", "22.9704, -124.91, 22.387, 0.55", "23.1271, -125.683, 23.6588, 0.28", "23.133, -125.969, 24.1625, 0.28", "23.1311, -126.383, 25.0425, 0.55", "23.2734, -127.751, 28.3625, 0.28", "23.3682, -128.286, 29.7515, 0.55", "23.9724, -129.811, 33.7231, 0.28", "24.4054, -130.558, 35.8048, 0.28", "25.058, -131.503, 38.3165, 0.55", "26.2746, -132.941, 41.8704, 0.28", "26.4785, -133.128, 42.321, 0.55", "27.602, -134.025, 44.4433, 0.28", "27.7215, -134.107, 44.6213, 0.55", "28.7514, -135.076, 46.2167, 0.28", "29.2063, -135.609, 47.0068, 0.55", "32.8682, -139.561, 53.5679, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-39.241, -125.285, 63.4456, 0.55", "-44.9108, -129.376, 70.2076, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-39.241, -125.285, 63.4456, 0.55", "-45.1865, -132.573, 66.6305, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_BP_b9592b27fd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.62353, 8.82959, 2.95671, 0.83 ) }
    dend_43 { pt3dadd( -7.22089, 11.6179, 3.49924, 1.11 ) }
    dend_43 { pt3dadd( -9.34191, 13.2607, 3.78145, 0.83 ) }
    dend_43 { pt3dadd( -11.4026, 14.843, 4.03431, 0.83 ) }
    dend_43 { pt3dadd( -12.6227, 15.7452, 4.17287, 1.11 ) }
    dend_43 { pt3dadd( -16.4433, 18.5646, 4.61696, 1.11 ) }
    dend_43 { pt3dadd( -23.277, 23.3915, 5.40198, 0.83 ) }
    dend_43 { pt3dadd( -25.7389, 25.0642, 5.66121, 0.83 ) }
    dend_43 { pt3dadd( -27.6885, 26.3494, 5.82223, 0.83 ) }
    dend_43 { pt3dadd( -29.5897, 27.6231, 5.96161, 0.83 ) }
    dend_43 { pt3dadd( -31.1372, 28.6729, 6.03681, 0.55 ) }
    dend_43 { pt3dadd( -32.3005, 29.3837, 6.11314, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.0249, 6.42249, -6.34857, 0.55 ) }
    dend_28 { pt3dadd( 8.30915, 7.13295, -7.082, 0.55 ) }
    dend_28 { pt3dadd( 10.2148, 7.31229, -8.05249, 0.83 ) }
    dend_28 { pt3dadd( 13.231, 7.50315, -9.85523, 0.55 ) }
    dend_28 { pt3dadd( 14.687, 7.59528, -10.7254, 1.38 ) }
    dend_28 { pt3dadd( 18.2669, 7.82181, -12.8651, 0.55 ) }
    dend_28 { pt3dadd( 19.7916, 7.7451, -13.886, 0.83 ) }
    dend_28 { pt3dadd( 27.6787, 6.3383, -19.6222, 0.55 ) }
    dend_28 { pt3dadd( 28.4417, 6.14912, -20.2533, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.684222, -10.4959, 3.23568, 1.11 ) }
    dend_1 { pt3dadd( -0.732744, -14.7769, 4.77044, 1.11 ) }
    dend_1 { pt3dadd( -0.752504, -16.5205, 5.39549, 0.83 ) }
    dend_1 { pt3dadd( -0.778758, -18.8368, 6.2259, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.90494, 10.5461, -1.40341, 1.11 ) }
    dend_0 { pt3dadd( 0.992495, 13.1429, -1.38128, 1.11 ) }
    dend_0 { pt3dadd( 1.11546, 17.3798, -1.19136, 1.38 ) }
    dend_0 { pt3dadd( 1.12615, 17.6159, -1.17633, 1.38 ) }
    dend_0 { pt3dadd( 1.43232, 20.5372, -0.950997, 0.83 ) }
    dend_0 { pt3dadd( 1.87184, 23.6274, -0.541001, 0.83 ) }
    dend_0 { pt3dadd( 2.64167, 27.1188, 0.359589, 0.83 ) }
    dend_0 { pt3dadd( 3.0879, 28.4444, 0.872776, 0.83 ) }
    dend_0 { pt3dadd( 3.53392, 29.4052, 1.34797, 1.11 ) }
    dend_0 { pt3dadd( 4.8517, 31.7474, 2.58329, 0.55 ) }
    dend_0 { pt3dadd( 6.38559, 34.1934, 4.05763, 0.83 ) }
    dend_0 { pt3dadd( 8.41513, 36.7125, 5.74584, 0.55 ) }
    dend_0 { pt3dadd( 9.4575, 37.7604, 6.51708, 0.83 ) }
    dend_0 { pt3dadd( 10.9092, 39.1799, 7.71256, 0.55 ) }
    dend_0 { pt3dadd( 12.7005, 40.9852, 9.32353, 0.55 ) }
    dend_0 { pt3dadd( 15.1905, 43.7007, 11.7738, 0.55 ) }
    dend_0 { pt3dadd( 17.9331, 46.8037, 14.4788, 0.55 ) }
    dend_0 { pt3dadd( 19.6471, 48.8173, 16.4852, 0.55 ) }
    dend_0 { pt3dadd( 21.7287, 51.363, 19.3032, 0.55 ) }
    dend_0 { pt3dadd( 22.1589, 51.8737, 19.9408, 0.83 ) }
    dend_0 { pt3dadd( 23.289, 53.2233, 21.7358, 0.55 ) }
    dend_0 { pt3dadd( 24.246, 54.276, 23.1481, 0.83 ) }
    dend_0 { pt3dadd( 26.4403, 57.1486, 26.4933, 0.55 ) }
    dend_0 { pt3dadd( 27.281, 58.1977, 27.4792, 0.83 ) }
    dend_0 { pt3dadd( 28.0825, 58.9721, 28.1581, 0.55 ) }
    dend_0 { pt3dadd( 28.8861, 59.6396, 28.6873, 0.83 ) }
    dend_0 { pt3dadd( 30.6805, 60.8826, 29.6615, 0.83 ) }
    dend_0 { pt3dadd( 33.0642, 62.5743, 30.7281, 0.83 ) }
    dend_0 { pt3dadd( 34.5339, 63.6916, 31.2173, 0.55 ) }
    dend_0 { pt3dadd( 35.6533, 64.6573, 31.5967, 0.55 ) }
    dend_0 { pt3dadd( 38.5902, 67.1529, 32.5455, 0.83 ) }
    dend_0 { pt3dadd( 40.491, 68.7533, 33.0789, 0.55 ) }
    dend_0 { pt3dadd( 43.3833, 71.0984, 33.7674, 0.55 ) }
    dend_0 { pt3dadd( 46.0401, 73.066, 34.289, 0.55 ) }
    dend_0 { pt3dadd( 48.4203, 74.7338, 34.6899, 0.55 ) }
    dend_0 { pt3dadd( 51.436, 76.6892, 35.0566, 0.55 ) }
    dend_0 { pt3dadd( 53.2841, 77.6499, 35.2198, 0.55 ) }
    dend_0 { pt3dadd( 54.5528, 78.1914, 35.1779, 0.55 ) }
    dend_0 { pt3dadd( 56.2472, 78.6011, 34.9794, 0.55 ) }
    dend_0 { pt3dadd( 58.7886, 78.8017, 34.4763, 0.55 ) }
    dend_0 { pt3dadd( 60.3777, 78.7271, 34.1021, 0.55 ) }
    dend_0 { pt3dadd( 62.6935, 78.5559, 33.7166, 0.55 ) }
    dend_0 { pt3dadd( 67.0868, 78.3693, 33.3737, 0.55 ) }
    dend_0 { pt3dadd( 70.5222, 78.3818, 33.3491, 0.55 ) }
    dend_0 { pt3dadd( 74.1525, 78.5686, 33.5404, 0.55 ) }
    dend_0 { pt3dadd( 76.4716, 78.7684, 33.8474, 0.55 ) }
    dend_0 { pt3dadd( 82.4745, 79.8369, 35.044, 0.55 ) }
    dend_0 { pt3dadd( 86.0121, 80.7457, 36.0223, 0.55 ) }
    dend_0 { pt3dadd( 88.6523, 81.6039, 37.008, 0.55 ) }
    dend_0 { pt3dadd( 90.2513, 82.3972, 37.6704, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 92.1027, 83.5729, 38.4288, 0.55 ) }
    dend_0 { pt3dadd( 95.2456, 85.8867, 39.4252, 0.55 ) }
    dend_0 { pt3dadd( 95.9706, 86.4436, 39.5517, 0.55 ) }
    dend_0 { pt3dadd( 98.0576, 87.9334, 39.7749, 0.55 ) }
    dend_0 { pt3dadd( 99.9737, 89.5181, 39.9726, 0.83 ) }
    dend_0 { pt3dadd( 101.02, 90.397, 40.0636, 0.55 ) }
    dend_0 { pt3dadd( 102.588, 91.9037, 40.1367, 0.83 ) }
    dend_0 { pt3dadd( 110.748, 99.9511, 42.7278, 0.83 ) }
    dend_0 { pt3dadd( 117.846, 109.163, 44.4031, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -32.3005, 29.3837, 6.11314, 0.55 ) }
    dend_55 { pt3dadd( -34.1641, 30.4656, 5.09377, 0.55 ) }
    dend_55 { pt3dadd( -36.1907, 31.642, 3.98531, 0.55 ) }
    dend_55 { pt3dadd( -38.6363, 33.0617, 2.64764, 0.55 ) }
    dend_55 { pt3dadd( -40.6557, 34.234, 1.54309, 0.83 ) }
    dend_55 { pt3dadd( -42.348, 35.2164, 0.617481, 0.55 ) }
    dend_55 { pt3dadd( -45.489, 37.0399, -1.10059, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -32.3005, 29.3837, 6.11314, 0.55 ) }
    dend_44 { pt3dadd( -34.1256, 29.6286, 6.16918, 0.55 ) }
    dend_44 { pt3dadd( -36.0311, 29.8678, 6.4246, 0.55 ) }
    dend_44 { pt3dadd( -38.1822, 30.146, 6.76613, 0.55 ) }
    dend_44 { pt3dadd( -41.2453, 30.5722, 7.54655, 0.55 ) }
    dend_44 { pt3dadd( -43.7714, 30.8904, 8.39534, 0.55 ) }
    dend_44 { pt3dadd( -46.3976, 31.2054, 9.40794, 0.55 ) }
    dend_44 { pt3dadd( -48.8753, 31.389, 10.7002, 0.55 ) }
    dend_44 { pt3dadd( -50.9561, 31.3707, 12.0714, 0.55 ) }
    dend_44 { pt3dadd( -53.4834, 31.2111, 14.1166, 0.55 ) }
    dend_44 { pt3dadd( -54.5464, 31.086, 15.1922, 0.55 ) }
    dend_44 { pt3dadd( -55.6835, 30.9481, 16.4132, 0.55 ) }
    dend_44 { pt3dadd( -57.698, 30.5065, 18.4965, 0.55 ) }
    dend_44 { pt3dadd( -58.8053, 30.2361, 19.411, 0.55 ) }
    dend_44 { pt3dadd( -59.9641, 29.9114, 20.3691, 0.55 ) }
    dend_44 { pt3dadd( -61.3716, 29.5134, 21.3495, 0.55 ) }
    dend_44 { pt3dadd( -62.9114, 29.1067, 22.3626, 0.55 ) }
    dend_44 { pt3dadd( -65.118, 28.5099, 23.758, 0.55 ) }
    dend_44 { pt3dadd( -68.1295, 27.8696, 25.2956, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.4417, 6.14912, -20.2533, 0.55 ) }
    dend_34 { pt3dadd( 33.2208, 7.71726, -21.3323, 0.55 ) }
    dend_34 { pt3dadd( 35.9997, 8.42066, -22.334, 0.55 ) }
    dend_34 { pt3dadd( 38.7538, 8.98709, -23.3516, 0.55 ) }
    dend_34 { pt3dadd( 40.6418, 9.29871, -24.0393, 0.55 ) }
    dend_34 { pt3dadd( 43.4059, 9.69204, -25.0173, 0.55 ) }
    dend_34 { pt3dadd( 49.154, 10.3809, -27.2155, 0.55 ) }
    dend_34 { pt3dadd( 55.69, 11.0817, -30.1398, 0.55 ) }
    dend_34 { pt3dadd( 58.8817, 11.2047, -31.7588, 0.55 ) }
    dend_34 { pt3dadd( 60.5975, 11.2189, -32.7332, 0.55 ) }
    dend_34 { pt3dadd( 62.4802, 11.2366, -33.8778, 0.55 ) }
    dend_34 { pt3dadd( 65.8471, 11.1771, -35.8989, 0.55 ) }
    dend_34 { pt3dadd( 67.0767, 11.0813, -36.6666, 0.55 ) }
    dend_34 { pt3dadd( 72.2824, 10.767, -40.3216, 0.55 ) }
    dend_34 { pt3dadd( 75.9696, 10.5778, -43.1811, 0.55 ) }
    dend_34 { pt3dadd( 78.0907, 10.5041, -44.8883, 0.55 ) }
    dend_34 { pt3dadd( 80.2076, 10.4124, -46.5878, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 28.4417, 6.14912, -20.2533, 0.83 ) }
    dend_29 { pt3dadd( 30.4016, 7.66806, -20.4107, 0.83 ) }
    dend_29 { pt3dadd( 31.5244, 8.52781, -20.5556, 0.55 ) }
    dend_29 { pt3dadd( 33.1792, 9.81197, -20.9252, 0.83 ) }
    dend_29 { pt3dadd( 34.29, 10.7009, -21.2141, 0.55 ) }
    dend_29 { pt3dadd( 35.816, 11.9739, -21.5943, 0.83 ) }
    dend_29 { pt3dadd( 37.6436, 13.553, -21.9837, 0.55 ) }
    dend_29 { pt3dadd( 38.5695, 14.2799, -22.1283, 0.55 ) }
    dend_29 { pt3dadd( 40.728, 15.6648, -22.2562, 0.83 ) }
    dend_29 { pt3dadd( 42.7036, 16.7094, -22.067, 0.55 ) }
    dend_29 { pt3dadd( 43.8044, 17.2963, -21.8481, 0.83 ) }
    dend_29 { pt3dadd( 45.4438, 18.2398, -21.3411, 0.55 ) }
    dend_29 { pt3dadd( 47.7794, 19.6827, -20.298, 0.55 ) }
    dend_29 { pt3dadd( 51.0349, 21.5322, -18.6455, 0.55 ) }
    dend_29 { pt3dadd( 54.1422, 23.2082, -16.8233, 0.55 ) }
    dend_29 { pt3dadd( 56.6049, 24.5144, -15.3284, 0.55 ) }
    dend_29 { pt3dadd( 60.6617, 26.6911, -12.8439, 0.55 ) }
    dend_29 { pt3dadd( 63.6164, 28.3837, -10.9688, 0.55 ) }
    dend_29 { pt3dadd( 65.379, 29.5748, -9.78833, 0.55 ) }
    dend_29 { pt3dadd( 68.5825, 32.1324, -7.63135, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.778758, -18.8368, 6.2259, 0.83 ) }
    dend_11 { pt3dadd( -1.11523, -21.8014, 6.11684, 0.83 ) }
    dend_11 { pt3dadd( -1.44304, -24.6897, 6.01059, 0.83 ) }
    dend_11 { pt3dadd( -1.80904, -27.9145, 5.89195, 0.83 ) }
    dend_11 { pt3dadd( -2.00016, -29.5985, 5.83, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.778758, -18.8368, 6.2259, 0.55 ) }
    dend_2 { pt3dadd( -0.316974, -20.2366, 7.27204, 0.55 ) }
    dend_2 { pt3dadd( 0.0671738, -21.9571, 8.61085, 0.55 ) }
    dend_2 { pt3dadd( 0.213292, -24.2251, 10.4207, 0.55 ) }
    dend_2 { pt3dadd( 0.205531, -25.109, 11.1419, 0.83 ) }
    dend_2 { pt3dadd( -0.0484068, -27.3721, 13.2194, 0.55 ) }
    dend_2 { pt3dadd( -0.277682, -28.5444, 14.3048, 0.55 ) }
    dend_2 { pt3dadd( -0.781622, -30.8258, 16.507, 0.83 ) }
    dend_2 { pt3dadd( -1.26429, -32.5233, 18.2397, 0.55 ) }
    dend_2 { pt3dadd( -1.78407, -33.9283, 19.6347, 0.55 ) }
    dend_2 { pt3dadd( -2.82296, -36.5917, 22.2227, 0.55 ) }
    dend_2 { pt3dadd( -3.64629, -38.7145, 24.261, 0.55 ) }
    dend_2 { pt3dadd( -4.27455, -40.4148, 25.9221, 0.55 ) }
    dend_2 { pt3dadd( -4.83713, -42.2166, 27.6394, 0.28 ) }
    dend_2 { pt3dadd( -5.00582, -42.9647, 28.3325, 0.55 ) }
    dend_2 { pt3dadd( -5.27356, -44.3454, 29.538, 0.28 ) }
    dend_2 { pt3dadd( -5.36467, -46.4904, 31.1159, 0.55 ) }
    dend_2 { pt3dadd( -7.42914, -53.6913, 36.5762, 0.55 ) }
    dend_2 { pt3dadd( -9.75726, -60.3546, 42.5854, 0.55 ) }
    dend_2 { pt3dadd( -11.8344, -65.8234, 49.7762, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -45.489, 37.0399, -1.10059, 0.55 ) }
    dend_61 { pt3dadd( -48.0378, 37.3872, 0.481583, 0.55 ) }
    dend_61 { pt3dadd( -49.0983, 37.4819, 1.28951, 0.83 ) }
    dend_61 { pt3dadd( -50.3238, 37.5393, 2.41319, 0.55 ) }
    dend_61 { pt3dadd( -51.254, 37.5891, 3.36417, 0.83 ) }
    dend_61 { pt3dadd( -53.6946, 37.8113, 5.82649, 0.55 ) }
    dend_61 { pt3dadd( -54.6183, 37.9126, 6.76554, 0.28 ) }
    dend_61 { pt3dadd( -56.147, 38.1096, 8.47052, 0.55 ) }
    dend_61 { pt3dadd( -58.1991, 38.3862, 10.7469, 0.55 ) }
    dend_61 { pt3dadd( -59.7638, 38.5915, 12.3973, 0.55 ) }
    dend_61 { pt3dadd( -61.8599, 38.8603, 14.5298, 0.28 ) }
    dend_61 { pt3dadd( -62.4105, 38.9297, 15.0125, 0.55 ) }
    dend_61 { pt3dadd( -63.5541, 39.0846, 15.9645, 0.28 ) }
    dend_61 { pt3dadd( -64.3373, 39.2061, 16.5318, 0.55 ) }
    dend_61 { pt3dadd( -65.9482, 39.4322, 17.5441, 0.28 ) }
    dend_61 { pt3dadd( -66.8976, 39.5067, 18.0905, 0.55 ) }
    dend_61 { pt3dadd( -68.5703, 39.5113, 19.0776, 0.28 ) }
    dend_61 { pt3dadd( -69.6971, 39.5039, 19.6999, 0.55 ) }
    dend_61 { pt3dadd( -76.2924, 39.105, 26.7143, 0.55 ) }
    dend_61 { pt3dadd( -82.2281, 37.8334, 34.1984, 0.55 ) }
    dend_61 { pt3dadd( -87.9072, 35.6584, 41.6734, 0.55 ) }
    dend_61 { pt3dadd( -93.5749, 32.3559, 48.7324, 0.55 ) }
    dend_61 { pt3dadd( -98.1148, 29.5109, 56.7421, 0.55 ) }
    dend_61 { pt3dadd( -103.39, 26.9892, 64.4014, 0.55 ) }
    dend_61 { pt3dadd( -108.766, 26.045, 72.3433, 0.55 ) }
    dend_61 { pt3dadd( -114.115, 24.3351, 80.1737, 0.55 ) }
    dend_61 { pt3dadd( -119.273, 23.2778, 88.2447, 0.55 ) }
    dend_61 { pt3dadd( -123.97, 22.0998, 96.5758, 0.55 ) }
    dend_61 { pt3dadd( -127.705, 19.8612, 105.172, 0.55 ) }
    dend_61 { pt3dadd( -131.522, 18.5185, 113.918, 0.55 ) }
    dend_61 { pt3dadd( -135.478, 16.2056, 122.395, 0.55 ) }
    dend_61 { pt3dadd( -138.296, 13.5134, 131.208, 0.55 ) }
    dend_61 { pt3dadd( -139.482, 11.5099, 140.559, 0.55 ) }
    dend_61 { pt3dadd( -140.64, 7.72272, 149.344, 0.55 ) }
    dend_61 { pt3dadd( -140.423, 3.76398, 158.127, 0.55 ) }
    dend_61 { pt3dadd( -140.708, 0.210265, 167.079, 0.55 ) }
    dend_61 { pt3dadd( -142.011, -2.64978, 176.189, 0.55 ) }
    dend_61 { pt3dadd( -145.317, -4.03222, 185.134, 0.55 ) }
    dend_61 { pt3dadd( -147.788, -6.47153, 194.123, 0.55 ) }
    dend_61 { pt3dadd( -148.434, -7.28258, 203.704, 0.55 ) }
    dend_61 { pt3dadd( -150.626, -7.40244, 213.086, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.489, 37.0399, -1.10059, 0.55 ) }
    dend_56 { pt3dadd( -46.6977, 37.8929, -2.87512, 0.55 ) }
    dend_56 { pt3dadd( -47.554, 38.8353, -4.79032, 0.55 ) }
    dend_56 { pt3dadd( -48.3255, 39.9587, -6.78407, 0.55 ) }
    dend_56 { pt3dadd( -48.8085, 40.6622, -8.03253, 0.55 ) }
    dend_56 { pt3dadd( -49.6897, 41.9454, -10.3099, 0.83 ) }
    dend_56 { pt3dadd( -50.3344, 42.8842, -11.976, 0.55 ) }
    dend_56 { pt3dadd( -51.0033, 44.1861, -14.398, 0.83 ) }
    dend_56 { pt3dadd( -51.1889, 45.0322, -15.7198, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -68.1295, 27.8696, 25.2956, 0.28 ) }
    dend_48 { pt3dadd( -69.1662, 25.9285, 25.3459, 0.28 ) }
    dend_48 { pt3dadd( -69.6738, 25.0846, 25.3084, 0.28 ) }
    dend_48 { pt3dadd( -70.3429, 23.8866, 25.2047, 0.55 ) }
    dend_48 { pt3dadd( -70.8946, 22.8348, 25.1164, 0.28 ) }
    dend_48 { pt3dadd( -71.7062, 21.2353, 24.9968, 0.55 ) }
    dend_48 { pt3dadd( -73.9561, 16.5451, 24.6977, 0.28 ) }
    dend_48 { pt3dadd( -74.7142, 14.8846, 24.4602, 0.55 ) }
    dend_48 { pt3dadd( -75.8784, 12.317, 24.0106, 0.28 ) }
    dend_48 { pt3dadd( -76.561, 10.773, 23.673, 0.55 ) }
    dend_48 { pt3dadd( -77.0366, 9.70576, 23.4168, 0.28 ) }
    dend_48 { pt3dadd( -77.5774, 8.48216, 23.1314, 0.55 ) }
    dend_48 { pt3dadd( -79.2119, 4.41256, 22.2467, 0.28 ) }
    dend_48 { pt3dadd( -79.7313, 3.17599, 21.9416, 0.55 ) }
    dend_48 { pt3dadd( -80.66, 1.26021, 21.3111, 0.28 ) }
    dend_48 { pt3dadd( -81.4206, 0.0190406, 20.8337, 0.28 ) }
    dend_48 { pt3dadd( -82.0873, -0.815149, 20.5111, 0.55 ) }
    dend_48 { pt3dadd( -84.3555, -3.15223, 19.7273, 0.28 ) }
    dend_48 { pt3dadd( -85.3962, -4.09708, 19.4475, 0.55 ) }
    dend_48 { pt3dadd( -87.9525, -6.26625, 18.7144, 0.28 ) }
    dend_48 { pt3dadd( -90.4975, -8.19405, 18.0655, 0.28 ) }
    dend_48 { pt3dadd( -93.2592, -10.0472, 17.4101, 0.28 ) }
    dend_48 { pt3dadd( -94.5117, -10.748, 17.1891, 0.55 ) }
    dend_48 { pt3dadd( -100.595, -18.205, 15.592, 0.55 ) }
    dend_48 { pt3dadd( -107.009, -25.5503, 15.8603, 0.55 ) }
    dend_48 { pt3dadd( -113.551, -32.6887, 14.669, 0.55 ) }
    dend_48 { pt3dadd( -120.409, -39.3241, 12.6426, 0.55 ) }
    dend_48 { pt3dadd( -127.508, -45.3608, 9.75564, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -68.1295, 27.8696, 25.2956, 0.55 ) }
    dend_45 { pt3dadd( -68.8182, 27.825, 25.4937, 0.55 ) }
    dend_45 { pt3dadd( -70.7239, 27.7219, 26.3087, 0.55 ) }
    dend_45 { pt3dadd( -71.4343, 27.667, 26.6562, 0.55 ) }
    dend_45 { pt3dadd( -73.1013, 27.4867, 27.5046, 0.55 ) }
    dend_45 { pt3dadd( -75.6836, 27.2266, 28.6769, 0.55 ) }
    dend_45 { pt3dadd( -77.0291, 27.1329, 29.2579, 0.28 ) }
    dend_45 { pt3dadd( -79.1291, 26.9358, 30.1231, 0.55 ) }
    dend_45 { pt3dadd( -80.697, 26.7513, 30.7103, 0.55 ) }
    dend_45 { pt3dadd( -81.3588, 26.669, 30.96, 0.28 ) }
    dend_45 { pt3dadd( -85.3297, 26.1724, 32.453, 0.55 ) }
    dend_45 { pt3dadd( -87.2025, 25.8419, 33.041, 0.28 ) }
    dend_45 { pt3dadd( -89.7502, 25.3742, 33.6837, 0.28 ) }
    dend_45 { pt3dadd( -91.9652, 24.9934, 34.1048, 0.55 ) }
    dend_45 { pt3dadd( -100.337, 24.9415, 37.5304, 0.55 ) }
    dend_45 { pt3dadd( -108.279, 24.7345, 41.8575, 0.55 ) }
    dend_45 { pt3dadd( -115.612, 23.6756, 47.0477, 0.55 ) }
    dend_45 { pt3dadd( -122.613, 24.1805, 52.7542, 0.55 ) }
    dend_45 { pt3dadd( -128.284, 24.4912, 59.7957, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -132.495, 25.3747, 67.7534, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 80.2076, 10.4124, -46.5878, 0.55 ) }
    dend_42 { pt3dadd( 84.778, 11.7212, -50.4876, 0.55 ) }
    dend_42 { pt3dadd( 86.2327, 12.056, -51.8009, 0.55 ) }
    dend_42 { pt3dadd( 88.0593, 12.4188, -53.4127, 0.55 ) }
    dend_42 { pt3dadd( 91.3832, 13.0155, -56.5267, 0.55 ) }
    dend_42 { pt3dadd( 94.871, 13.4817, -59.8379, 0.55 ) }
    dend_42 { pt3dadd( 96.59, 13.5817, -61.391, 0.83 ) }
    dend_42 { pt3dadd( 98.019, 13.5503, -62.7582, 0.55 ) }
    dend_42 { pt3dadd( 99.1008, 13.4227, -63.8714, 0.83 ) }
    dend_42 { pt3dadd( 101.753, 12.7334, -66.6685, 0.55 ) }
    dend_42 { pt3dadd( 103.959, 11.9692, -68.9528, 0.55 ) }
    dend_42 { pt3dadd( 106.494, 11.0939, -71.4593, 0.55 ) }
    dend_42 { pt3dadd( 109.309, 10.1866, -74.3176, 0.55 ) }
    dend_42 { pt3dadd( 111.204, 9.5283, -76.2719, 0.55 ) }
    dend_42 { pt3dadd( 113.344, 8.76854, -78.5399, 0.55 ) }
    dend_42 { pt3dadd( 115.19, 8.15319, -80.6323, 0.55 ) }
    dend_42 { pt3dadd( 116.345, 7.84187, -82.112, 0.55 ) }
    dend_42 { pt3dadd( 117.852, 7.1839, -85.112, 0.55 ) }
    dend_42 { pt3dadd( 118.689, 6.70079, -86.9795, 0.55 ) }
    dend_42 { pt3dadd( 119.463, 5.91004, -89.4462, 0.55 ) }
    dend_42 { pt3dadd( 120.577, 4.42136, -93.596, 0.55 ) }
    dend_42 { pt3dadd( 120.814, 4.04725, -94.5255, 0.28 ) }
    dend_42 { pt3dadd( 123.84, -0.616751, -105.8, 0.28 ) }
    dend_42 { pt3dadd( 124.83, -1.95061, -109.113, 0.83 ) }
    dend_42 { pt3dadd( 128.676, -6.86532, -120.816, 0.83 ) }
    dend_42 { pt3dadd( 130.642, -9.35844, -126.208, 0.83 ) }
    dend_42 { pt3dadd( 131.569, -10.4483, -128.373, 0.55 ) }
    dend_42 { pt3dadd( 132.608, -11.506, -130.478, 0.55 ) }
    dend_42 { pt3dadd( 135.354, -13.4767, -134.347, 0.55 ) }
    dend_42 { pt3dadd( 138.24, -15.1949, -137.731, 0.28 ) }
    dend_42 { pt3dadd( 139.067, -15.4019, -137.885, 0.55 ) }
    dend_42 { pt3dadd( 140.855, -15.6291, -137.624, 0.28 ) }
    dend_42 { pt3dadd( 141.948, -15.6666, -137.32, 0.55 ) }
    dend_42 { pt3dadd( 143.086, -15.7042, -136.905, 0.28 ) }
    dend_42 { pt3dadd( 144.442, -15.6716, -136.357, 0.55 ) }
    dend_42 { pt3dadd( 146.467, -15.5535, -135.77, 0.28 ) }
    dend_42 { pt3dadd( 148.1, -15.5173, -135.343, 0.55 ) }
    dend_42 { pt3dadd( 149.9, -15.3834, -135.035, 0.28 ) }
    dend_42 { pt3dadd( 152.352, -15.2302, -134.832, 0.55 ) }
    dend_42 { pt3dadd( 155.101, -15.0237, -134.78, 0.55 ) }
    dend_42 { pt3dadd( 157.521, -14.8411, -134.898, 0.28 ) }
    dend_42 { pt3dadd( 160.873, -14.5896, -135.25, 0.55 ) }
    dend_42 { pt3dadd( 166.672, -14.1017, -136.498, 0.55 ) }
    dend_42 { pt3dadd( 169.23, -13.8079, -137.379, 0.55 ) }
    dend_42 { pt3dadd( 170.328, -13.6565, -137.882, 0.83 ) }
    dend_42 { pt3dadd( 172.426, -13.3861, -139.034, 0.55 ) }
    dend_42 { pt3dadd( 173.878, -13.1558, -139.935, 0.83 ) }
    dend_42 { pt3dadd( 177.776, -12.4416, -142.419, 0.55 ) }
    dend_42 { pt3dadd( 180.176, -12.179, -143.969, 0.28 ) }
    dend_42 { pt3dadd( 181.189, -12.111, -144.498, 0.55 ) }
    dend_42 { pt3dadd( 183.982, -12.1249, -145.601, 0.28 ) }
    dend_42 { pt3dadd( 184.967, -12.2066, -145.908, 0.55 ) }
    dend_42 { pt3dadd( 187.002, -12.4457, -146.216, 0.28 ) }
    dend_42 { pt3dadd( 189.082, -12.8232, -146.148, 0.55 ) }
    dend_42 { pt3dadd( 193.283, -13.6797, -145.26, 0.28 ) }
    dend_42 { pt3dadd( 195.221, -14.1223, -144.637, 0.55 ) }
    dend_42 { pt3dadd( 198.117, -14.9138, -143.535, 0.28 ) }
    dend_42 { pt3dadd( 201.77, -15.8781, -142.019, 0.55 ) }
    dend_42 { pt3dadd( 204.406, -16.534, -140.888, 0.55 ) }
    dend_42 { pt3dadd( 208.956, -17.5202, -138.881, 0.28 ) }
    dend_42 { pt3dadd( 210.819, -17.8676, -138.22, 0.55 ) }
    dend_42 { pt3dadd( 214.024, -18.3487, -137.455, 0.28 ) }
    dend_42 { pt3dadd( 217.199, -18.6293, -136.95, 0.55 ) }
    dend_42 { pt3dadd( 218.928, -18.6325, -136.944, 0.28 ) }
    dend_42 { pt3dadd( 220.472, -18.4506, -137.095, 0.55 ) }
    dend_42 { pt3dadd( 224.816, -17.7503, -137.977, 0.28 ) }
    dend_42 { pt3dadd( 227.898, -17.0454, -138.695, 0.28 ) }
    dend_42 { pt3dadd( 230.557, -16.244, -139.393, 0.55 ) }
    dend_42 { pt3dadd( 233.489, -15.3027, -140.329, 0.28 ) }
    dend_42 { pt3dadd( 234.222, -15.0143, -140.548, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 80.2076, 10.4124, -46.5878, 0.55 ) }
    dend_35 { pt3dadd( 81.0124, 8.13199, -48.0382, 0.55 ) }
    dend_35 { pt3dadd( 81.5197, 6.18725, -49.1299, 0.28 ) }
    dend_35 { pt3dadd( 81.9805, 4.40671, -49.978, 0.55 ) }
    dend_35 { pt3dadd( 83.1502, 0.649904, -51.8103, 0.28 ) }
    dend_35 { pt3dadd( 83.2179, 0.412598, -51.9592, 0.55 ) }
    dend_35 { pt3dadd( 83.6076, -0.828249, -52.8413, 0.28 ) }
    dend_35 { pt3dadd( 83.8384, -1.86452, -53.7351, 0.55 ) }
    dend_35 { pt3dadd( 84.0201, -2.95277, -54.7914, 0.28 ) }
    dend_35 { pt3dadd( 84.2261, -4.44156, -56.3006, 0.55 ) }
    dend_35 { pt3dadd( 84.74, -8.17963, -60.0201, 0.55 ) }
    dend_35 { pt3dadd( 85.1708, -11.5906, -63.4704, 0.55 ) }
    dend_35 { pt3dadd( 85.4888, -14.3194, -66.232, 0.55 ) }
    dend_35 { pt3dadd( 85.7526, -17.0057, -68.8997, 0.55 ) }
    dend_35 { pt3dadd( 85.8182, -17.6997, -69.5599, 0.28 ) }
    dend_35 { pt3dadd( 85.908, -18.4388, -70.2041, 0.55 ) }
    dend_35 { pt3dadd( 86.1249, -19.4534, -71.0023, 0.28 ) }
    dend_35 { pt3dadd( 86.6939, -21.2547, -72.2665, 0.55 ) }
    dend_35 { pt3dadd( 88.0688, -24.6739, -74.1382, 0.55 ) }
    dend_35 { pt3dadd( 88.8222, -26.5099, -74.9782, 0.28 ) }
    dend_35 { pt3dadd( 89.4806, -28.3864, -75.9152, 0.55 ) }
    dend_35 { pt3dadd( 90.2126, -31.0323, -77.3277, 0.28 ) }
    dend_35 { pt3dadd( 90.669, -33.1799, -78.5183, 0.55 ) }
    dend_35 { pt3dadd( 91.2168, -36.4029, -80.3053, 0.28 ) }
    dend_35 { pt3dadd( 91.8059, -39.7346, -82.0523, 0.55 ) }
    dend_35 { pt3dadd( 92.5992, -44.578, -84.6312, 0.28 ) }
    dend_35 { pt3dadd( 92.9669, -47.1647, -86.0144, 0.55 ) }
    dend_35 { pt3dadd( 93.302, -49.8148, -87.4912, 0.28 ) }
    dend_35 { pt3dadd( 93.5752, -52.1518, -88.9341, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 94.0179, -55.0695, -90.9858, 0.55 ) }
    dend_35 { pt3dadd( 94.6099, -57.7577, -92.8204, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 68.5825, 32.1324, -7.63135, 0.55 ) }
    dend_31 { pt3dadd( 72.0237, 32.5146, -6.34615, 0.55 ) }
    dend_31 { pt3dadd( 74.5788, 32.6084, -5.60039, 0.55 ) }
    dend_31 { pt3dadd( 80.2237, 32.6426, -4.21862, 0.55 ) }
    dend_31 { pt3dadd( 82.8015, 32.5239, -3.78852, 0.55 ) }
    dend_31 { pt3dadd( 85.6313, 32.3973, -3.47373, 0.55 ) }
    dend_31 { pt3dadd( 89.4655, 32.1903, -3.32291, 0.55 ) }
    dend_31 { pt3dadd( 93.5758, 31.7348, -3.47204, 0.55 ) }
    dend_31 { pt3dadd( 95.7712, 31.3823, -3.76017, 0.55 ) }
    dend_31 { pt3dadd( 100.32, 30.4509, -4.88052, 0.55 ) }
    dend_31 { pt3dadd( 102.423, 30.014, -5.46015, 0.55 ) }
    dend_31 { pt3dadd( 107.374, 28.8647, -6.89464, 0.55 ) }
    dend_31 { pt3dadd( 110.735, 27.9791, -7.79481, 0.55 ) }
    dend_31 { pt3dadd( 113.193, 27.3525, -8.35541, 0.83 ) }
    dend_31 { pt3dadd( 117.127, 26.2397, -9.16086, 0.55 ) }
    dend_31 { pt3dadd( 120.973, 25.0381, -9.75406, 0.83 ) }
    dend_31 { pt3dadd( 124.232, 23.928, -10.1035, 0.55 ) }
    dend_31 { pt3dadd( 127.108, 23.0295, -10.2982, 0.55 ) }
    dend_31 { pt3dadd( 128.726, 22.613, -10.3558, 0.83 ) }
    dend_31 { pt3dadd( 132.474, 21.7213, -10.3189, 0.28 ) }
    dend_31 { pt3dadd( 134.316, 21.389, -10.2236, 0.28 ) }
    dend_31 { pt3dadd( 136.119, 20.9317, -10.1725, 0.28 ) }
    dend_31 { pt3dadd( 138.066, 20.4811, -10.144, 0.28 ) }
    dend_31 { pt3dadd( 141.185, 19.7897, -10.1771, 0.28 ) }
    dend_31 { pt3dadd( 142.434, 19.5386, -10.1629, 0.55 ) }
    dend_31 { pt3dadd( 145.378, 19.0701, -9.87888, 0.55 ) }
    dend_31 { pt3dadd( 150.641, 18.2768, -9.10689, 0.55 ) }
    dend_31 { pt3dadd( 152.092, 18.045, -8.82051, 0.55 ) }
    dend_31 { pt3dadd( 153.383, 17.8194, -8.49793, 0.83 ) }
    dend_31 { pt3dadd( 156.147, 17.4926, -7.62166, 0.55 ) }
    dend_31 { pt3dadd( 158.544, 17.2273, -6.82585, 0.55 ) }
    dend_31 { pt3dadd( 160.807, 16.9897, -6.06768, 0.55 ) }
    dend_31 { pt3dadd( 162.569, 16.7582, -5.51533, 0.55 ) }
    dend_31 { pt3dadd( 165.398, 16.1569, -4.69277, 0.55 ) }
    dend_31 { pt3dadd( 168.781, 15.1069, -3.78329, 0.55 ) }
    dend_31 { pt3dadd( 174.135, 12.7978, -2.48667, 0.55 ) }
    dend_31 { pt3dadd( 177.131, 11.0723, -1.78515, 0.55 ) }
    dend_31 { pt3dadd( 179.778, 9.13642, -1.13408, 0.28 ) }
    dend_31 { pt3dadd( 180.585, 8.39186, -0.919064, 0.55 ) }
    dend_31 { pt3dadd( 182.417, 6.25304, -0.338375, 0.28 ) }
    dend_31 { pt3dadd( 184.047, 3.81339, 0.320787, 0.55 ) }
    dend_31 { pt3dadd( 185.621, 0.804075, 1.34135, 0.55 ) }
    dend_31 { pt3dadd( 186.665, -1.13257, 2.10872, 0.28 ) }
    dend_31 { pt3dadd( 187.04, -1.80138, 2.41508, 0.55 ) }
    dend_31 { pt3dadd( 188.001, -3.44795, 3.20352, 0.28 ) }
    dend_31 { pt3dadd( 189.297, -5.56032, 4.28911, 0.55 ) }
    dend_31 { pt3dadd( 192.622, -10.5624, 7.0625, 0.55 ) }
    dend_31 { pt3dadd( 194.34, -13.0525, 8.52279, 0.55 ) }
    dend_31 { pt3dadd( 195.929, -15.3227, 9.88547, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 68.5825, 32.1324, -7.63135, 0.55 ) }
    dend_30 { pt3dadd( 70.9649, 33.5103, -5.47747, 0.55 ) }
    dend_30 { pt3dadd( 71.7367, 33.9352, -4.83205, 0.55 ) }
    dend_30 { pt3dadd( 74.6547, 35.3269, -2.51641, 0.55 ) }
    dend_30 { pt3dadd( 77.8948, 36.9652, 0.0995575, 0.55 ) }
    dend_30 { pt3dadd( 82.0299, 39.0906, 3.5751, 0.55 ) }
    dend_30 { pt3dadd( 83.1732, 39.6766, 4.52634, 0.55 ) }
    dend_30 { pt3dadd( 85.2398, 40.6357, 6.23731, 0.55 ) }
    dend_30 { pt3dadd( 87.5121, 41.716, 8.00317, 0.55 ) }
    dend_30 { pt3dadd( 90.1633, 43.0133, 9.90401, 0.55 ) }
    dend_30 { pt3dadd( 92.6549, 44.2766, 11.6933, 0.55 ) }
    dend_30 { pt3dadd( 94.0232, 45.0163, 12.5862, 0.55 ) }
    dend_30 { pt3dadd( 95.6232, 45.9336, 13.6164, 0.55 ) }
    dend_30 { pt3dadd( 97.5999, 47.1187, 14.8335, 0.83 ) }
    dend_30 { pt3dadd( 100.897, 48.9434, 16.4637, 0.55 ) }
    dend_30 { pt3dadd( 103.11, 50.0273, 17.4597, 0.83 ) }
    dend_30 { pt3dadd( 106.22, 51.3519, 18.7771, 0.55 ) }
    dend_30 { pt3dadd( 107.185, 51.7007, 19.1838, 0.55 ) }
    dend_30 { pt3dadd( 110.21, 52.612, 20.4281, 0.55 ) }
    dend_30 { pt3dadd( 115.704, 53.8468, 22.536, 0.55 ) }
    dend_30 { pt3dadd( 119.772, 54.5009, 24.0553, 0.55 ) }
    dend_30 { pt3dadd( 123.001, 54.8932, 25.3774, 0.55 ) }
    dend_30 { pt3dadd( 126.3, 55.1558, 26.888, 0.55 ) }
    dend_30 { pt3dadd( 126.996, 55.1937, 27.2148, 0.28 ) }
    dend_30 { pt3dadd( 128.415, 55.2143, 27.8909, 0.83 ) }
    dend_30 { pt3dadd( 134.25, 55.2257, 30.7253, 0.55 ) }
    dend_30 { pt3dadd( 138.343, 55.2156, 32.6295, 0.55 ) }
    dend_30 { pt3dadd( 141.678, 55.3142, 34.2496, 0.55 ) }
    dend_30 { pt3dadd( 143.668, 55.3727, 35.2381, 0.83 ) }
    dend_30 { pt3dadd( 145.232, 55.4419, 36.0124, 0.28 ) }
    dend_30 { pt3dadd( 146.652, 55.5031, 36.7008, 0.55 ) }
    dend_30 { pt3dadd( 157.107, 59.0876, 42.8348, 0.55 ) }
    dend_30 { pt3dadd( 168.791, 60.3436, 47.49, 0.55 ) }
    dend_30 { pt3dadd( 180.14, 63.2062, 52.2634, 0.55 ) }
    dend_30 { pt3dadd( 190.08, 64.9073, 59.8845, 0.55 ) }
    dend_30 { pt3dadd( 199.419, 65.0321, 68.4023, 0.55 ) }
    dend_30 { pt3dadd( 210.396, 62.6277, 74.191, 0.55 ) }
    dend_30 { pt3dadd( 221.629, 58.509, 78.2678, 0.55 ) }
    dend_30 { pt3dadd( 233.77, 56.4555, 81.1274, 0.55 ) }
    dend_30 { pt3dadd( 245.686, 54.4316, 84.8255, 0.55 ) }
    dend_30 { pt3dadd( 258.023, 53.5556, 87.4352, 0.55 ) }
    dend_30 { pt3dadd( 270.016, 53.6422, 91.4283, 0.55 ) }
    dend_30 { pt3dadd( 281.419, 51.7664, 96.5502, 0.55 ) }
    dend_30 { pt3dadd( 292.674, 52.375, 102.27, 0.55 ) }
    dend_30 { pt3dadd( 302.954, 55.1432, 109.084, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.00016, -29.5985, 5.83, 1.38 ) }
    dend_13 { pt3dadd( 0.962787, -32.7891, 5.05964, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.00016, -29.5985, 5.83, 0.55 ) }
    dend_12 { pt3dadd( -3.28045, -31.0487, 5.99503, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.70605, -32.9172, 6.17515, 0.55 ) }
    dend_12 { pt3dadd( -5.80588, -34.1477, 6.3301, 0.55 ) }
    dend_12 { pt3dadd( -6.74999, -35.1737, 6.3181, 0.55 ) }
    dend_12 { pt3dadd( -8.82857, -37.2915, 6.10508, 0.55 ) }
    dend_12 { pt3dadd( -10.2884, -38.7022, 5.91781, 0.55 ) }
    dend_12 { pt3dadd( -11.5925, -39.9667, 5.70416, 0.55 ) }
    dend_12 { pt3dadd( -14.9359, -43.0368, 5.16048, 0.55 ) }
    dend_12 { pt3dadd( -18.9442, -46.5854, 4.53944, 0.55 ) }
    dend_12 { pt3dadd( -22.0523, -49.2692, 4.00778, 0.55 ) }
    dend_12 { pt3dadd( -24.0413, -51.0337, 3.64039, 0.55 ) }
    dend_12 { pt3dadd( -26.3263, -53.1556, 3.22422, 0.55 ) }
    dend_12 { pt3dadd( -29.2344, -56.2163, 2.72786, 0.55 ) }
    dend_12 { pt3dadd( -30.9468, -58.4045, 2.4665, 0.55 ) }
    dend_12 { pt3dadd( -33.0553, -61.5704, 2.3127, 0.55 ) }
    dend_12 { pt3dadd( -34.7465, -64.5508, 2.24706, 0.55 ) }
    dend_12 { pt3dadd( -36.4804, -68.2875, 2.19905, 0.55 ) }
    dend_12 { pt3dadd( -38.1419, -72.6925, 2.20756, 0.55 ) }
    dend_12 { pt3dadd( -39.0695, -76.0755, 2.25543, 0.55 ) }
    dend_12 { pt3dadd( -39.4031, -77.7656, 2.37579, 0.55 ) }
    dend_12 { pt3dadd( -39.9228, -81.7507, 2.84614, 0.55 ) }
    dend_12 { pt3dadd( -40.3312, -85.4838, 3.37535, 0.55 ) }
    dend_12 { pt3dadd( -40.5169, -89.2569, 4.16195, 0.55 ) }
    dend_12 { pt3dadd( -40.6316, -91.4223, 4.73293, 0.55 ) }
    dend_12 { pt3dadd( -40.9163, -98.1226, 6.7371, 0.55 ) }
    dend_12 { pt3dadd( -40.9395, -98.6159, 6.89363, 0.55 ) }
    dend_12 { pt3dadd( -41.0161, -101.64, 7.91873, 0.55 ) }
    dend_12 { pt3dadd( -41.3872, -107.04, 9.90757, 0.55 ) }
    dend_12 { pt3dadd( -41.5347, -108.844, 10.4677, 0.55 ) }
    dend_12 { pt3dadd( -41.8924, -111.654, 10.8725, 0.55 ) }
    dend_12 { pt3dadd( -42.0273, -112.696, 10.7821, 0.55 ) }
    dend_12 { pt3dadd( -42.409, -116.218, 9.79741, 0.55 ) }
    dend_12 { pt3dadd( -42.5877, -118.499, 8.66444, 0.55 ) }
    dend_12 { pt3dadd( -42.8629, -122.126, 6.11105, 0.55 ) }
    dend_12 { pt3dadd( -43.0616, -126.566, 2.6224, 0.28 ) }
    dend_12 { pt3dadd( -43.1115, -127.662, 1.60964, 0.55 ) }
    dend_12 { pt3dadd( -43.1996, -129.321, -0.0730369, 0.28 ) }
    dend_12 { pt3dadd( -43.2168, -129.571, -0.339647, 0.55 ) }
    dend_12 { pt3dadd( -43.3054, -130.941, -1.68091, 0.28 ) }
    dend_12 { pt3dadd( -43.3543, -131.406, -2.02514, 0.55 ) }
    dend_12 { pt3dadd( -43.6063, -133.829, -3.34001, 0.28 ) }
    dend_12 { pt3dadd( -43.7227, -134.652, -3.77311, 0.55 ) }
    dend_12 { pt3dadd( -44.0726, -137.033, -4.8864, 0.28 ) }
    dend_12 { pt3dadd( -44.179, -137.783, -5.23452, 0.55 ) }
    dend_12 { pt3dadd( -44.5625, -140.37, -6.39097, 0.28 ) }
    dend_12 { pt3dadd( -44.7334, -141.56, -6.92978, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.8344, -65.8234, 49.7762, 0.55 ) }
    dend_10 { pt3dadd( -15.4607, -72.2884, 56.3808, 0.55 ) }
    dend_10 { pt3dadd( -19.9179, -77.7926, 63.3381, 0.55 ) }
    dend_10 { pt3dadd( -24.2276, -83.9568, 69.8184, 0.55 ) }
    dend_10 { pt3dadd( -28.7229, -90.1311, 76.1617, 0.55 ) }
    dend_10 { pt3dadd( -32.3899, -97.5051, 81.7064, 0.55 ) }
    dend_10 { pt3dadd( -35.8819, -104.589, 87.7221, 0.55 ) }
    dend_10 { pt3dadd( -38.628, -113.27, 91.6805, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.8344, -65.8234, 49.7762, 0.55 ) }
    dend_3 { pt3dadd( -11.2934, -74.9099, 58.1435, 0.55 ) }
    dend_3 { pt3dadd( -10.4211, -85.3522, 64.7058, 0.55 ) }
    dend_3 { pt3dadd( -11.5377, -95.7452, 71.3093, 0.55 ) }
    dend_3 { pt3dadd( -13.4492, -106.657, 76.799, 0.55 ) }
    dend_3 { pt3dadd( -14.8536, -117.561, 82.4564, 0.55 ) }
    dend_3 { pt3dadd( -16.1025, -128.047, 88.8875, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -51.1889, 45.0322, -15.7198, 0.83 ) }
    dend_60 { pt3dadd( -50.939, 46.4702, -18.0257, 0.83 ) }
    dend_60 { pt3dadd( -50.4034, 50.0129, -23.2324, 0.55 ) }
    dend_60 { pt3dadd( -50.1481, 51.5694, -25.3204, 0.83 ) }
    dend_60 { pt3dadd( -49.8484, 53.2592, -27.4161, 0.55 ) }
    dend_60 { pt3dadd( -49.4999, 55.0515, -29.2757, 0.55 ) }
    dend_60 { pt3dadd( -49.2978, 55.9758, -30.0759, 0.28 ) }
    dend_60 { pt3dadd( -49.1835, 56.6232, -30.4256, 0.55 ) }
    dend_60 { pt3dadd( -48.6624, 58.8687, -31.1091, 0.28 ) }
    dend_60 { pt3dadd( -48.4078, 59.8363, -31.3551, 0.55 ) }
    dend_60 { pt3dadd( -47.545, 63.2283, -32.0651, 0.28 ) }
    dend_60 { pt3dadd( -46.9188, 65.9381, -32.5259, 0.55 ) }
    dend_60 { pt3dadd( -46.1264, 70.2089, -33.0853, 0.28 ) }
    dend_60 { pt3dadd( -45.551, 73.9854, -33.4869, 0.28 ) }
    dend_60 { pt3dadd( -45.3446, 76.1152, -33.654, 0.55 ) }
    dend_60 { pt3dadd( -45.2524, 78.6515, -33.8292, 0.28 ) }
    dend_60 { pt3dadd( -45.2841, 79.8701, -33.8853, 0.55 ) }
    dend_60 { pt3dadd( -45.5293, 82.7247, -34.1205, 0.28 ) }
    dend_60 { pt3dadd( -45.8306, 84.6184, -34.3563, 0.28 ) }
    dend_60 { pt3dadd( -46.1734, 86.4711, -34.6375, 0.28 ) }
    dend_60 { pt3dadd( -46.3182, 87.4469, -34.7952, 0.55 ) }
    dend_60 { pt3dadd( -46.7087, 91.3658, -35.5536, 0.28 ) }
    dend_60 { pt3dadd( -47.0305, 95.9838, -36.558, 0.55 ) }
    dend_60 { pt3dadd( -47.1192, 97.5762, -36.9144, 0.55 ) }
    dend_60 { pt3dadd( -47.2286, 99.1803, -37.2339, 0.55 ) }
    dend_60 { pt3dadd( -47.6487, 102.589, -37.9421, 0.55 ) }
    dend_60 { pt3dadd( -48.0746, 104.826, -38.4344, 0.28 ) }
    dend_60 { pt3dadd( -48.3351, 105.677, -38.6181, 0.55 ) }
    dend_60 { pt3dadd( -49.194, 107.996, -39.0446, 0.28 ) }
    dend_60 { pt3dadd( -50.2216, 110.453, -39.5801, 0.55 ) }
    dend_60 { pt3dadd( -52.044, 113.979, -40.4391, 0.28 ) }
    dend_60 { pt3dadd( -52.9695, 115.451, -40.822, 0.28 ) }
    dend_60 { pt3dadd( -54.5465, 117.474, -41.5194, 0.55 ) }
    dend_60 { pt3dadd( -56.3467, 119.57, -42.3369, 0.28 ) }
    dend_60 { pt3dadd( -56.6816, 119.898, -42.4746, 0.55 ) }
    dend_60 { pt3dadd( -57.9048, 120.945, -42.9358, 0.28 ) }
    dend_60 { pt3dadd( -62.1433, 124.309, -44.3939, 0.55 ) }
    dend_60 { pt3dadd( -68.1378, 128.418, -46.5407, 0.28 ) }
    dend_60 { pt3dadd( -69.2643, 129.095, -46.9893, 0.55 ) }
    dend_60 { pt3dadd( -72.3793, 130.827, -48.2485, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -73.695, 131.531, -48.8082, 0.28 ) }
    dend_60 { pt3dadd( -74.8505, 132.105, -49.3419, 0.55 ) }
    dend_60 { pt3dadd( -78.3191, 133.352, -51.0758, 0.28 ) }
    dend_60 { pt3dadd( -80.7819, 134.014, -52.163, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -51.1889, 45.0322, -15.7198, 0.55 ) }
    dend_57 { pt3dadd( -51.3218, 46.5909, -16.1381, 0.55 ) }
    dend_57 { pt3dadd( -51.4125, 47.5256, -16.2961, 0.28 ) }
    dend_57 { pt3dadd( -51.5884, 48.2281, -16.2316, 0.55 ) }
    dend_57 { pt3dadd( -51.9926, 49.8413, -16.0835, 0.28 ) }
    dend_57 { pt3dadd( -52.2765, 50.9744, -15.9795, 0.55 ) }
    dend_57 { pt3dadd( -52.7998, 53.0632, -15.7878, 0.28 ) }
    dend_57 { pt3dadd( -53.1631, 54.2181, -15.4889, 0.55 ) }
    dend_57 { pt3dadd( -54.6629, 57.1552, -13.7964, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -127.508, -45.3608, 9.75564, 0.55 ) }
    dend_52 { pt3dadd( -131.765, -51.2289, 9.47683, 0.55 ) }
    dend_52 { pt3dadd( -134.92, -57.7236, 8.76482, 0.55 ) }
    dend_52 { pt3dadd( -137.64, -64.0529, 6.48957, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -127.508, -45.3608, 9.75564, 0.55 ) }
    dend_49 { pt3dadd( -132.803, -50.9032, 7.46056, 0.55 ) }
    dend_49 { pt3dadd( -137.467, -56.5121, 4.17264, 0.55 ) }
    dend_49 { pt3dadd( -141.84, -62.2301, 0.679582, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -132.495, 25.3747, 67.7534, 0.55 ) }
    dend_47 { pt3dadd( -141.049, 24.7309, 74.5516, 0.55 ) }
    dend_47 { pt3dadd( -149.868, 25.8187, 80.9428, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -132.495, 25.3747, 67.7534, 0.55 ) }
    dend_46 { pt3dadd( -140.775, 24.5362, 72.279, 0.55 ) }
    dend_46 { pt3dadd( -149.103, 25.2629, 76.7376, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 94.6099, -57.7577, -92.8204, 0.28 ) }
    dend_39 { pt3dadd( 104.171, -62.6954, -106.417, 0.28 ) }
    dend_39 { pt3dadd( 105.098, -63.2599, -107.621, 0.55 ) }
    dend_39 { pt3dadd( 106.662, -64.213, -109.653, 0.28 ) }
    dend_39 { pt3dadd( 107.98, -65.0155, -111.364, 0.28 ) }
    dend_39 { pt3dadd( 109.724, -66.0777, -113.629, 0.55 ) }
    dend_39 { pt3dadd( 112.023, -67.4783, -116.616, 0.55 ) }
    dend_39 { pt3dadd( 114.773, -69.9508, -118.025, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 94.6099, -57.7577, -92.8204, 0.55 ) }
    dend_36 { pt3dadd( 95.5646, -59.2145, -94.2353, 0.55 ) }
    dend_36 { pt3dadd( 95.8694, -59.8776, -94.867, 0.28 ) }
    dend_36 { pt3dadd( 96.3309, -61.0198, -95.9758, 0.55 ) }
    dend_36 { pt3dadd( 97.3477, -63.5361, -98.4182, 0.28 ) }
    dend_36 { pt3dadd( 98.0523, -65.2799, -100.111, 0.55 ) }
    dend_36 { pt3dadd( 99.2462, -68.2344, -102.979, 0.28 ) }
    dend_36 { pt3dadd( 100.608, -71.8633, -106.777, 0.28 ) }
    dend_36 { pt3dadd( 101.162, -73.5388, -108.559, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 195.929, -15.3227, 9.88547, 0.28 ) }
    dend_33 { pt3dadd( 197.814, -17.3324, 11.4228, 0.28 ) }
    dend_33 { pt3dadd( 200.143, -19.9382, 13.7078, 0.28 ) }
    dend_33 { pt3dadd( 201.598, -21.6143, 15.2706, 0.55 ) }
    dend_33 { pt3dadd( 202.465, -22.5122, 16.2063, 0.28 ) }
    dend_33 { pt3dadd( 202.924, -22.9952, 16.7151, 0.28 ) }
    dend_33 { pt3dadd( 205.212, -25.3901, 19.1798, 0.55 ) }
    dend_33 { pt3dadd( 205.72, -25.8963, 19.8235, 0.28 ) }
    dend_33 { pt3dadd( 206.888, -27.2237, 21.6184, 0.55 ) }
    dend_33 { pt3dadd( 207.897, -28.3983, 23.1076, 0.28 ) }
    dend_33 { pt3dadd( 208.787, -29.3488, 24.3052, 0.55 ) }
    dend_33 { pt3dadd( 209.851, -30.5147, 25.635, 0.55 ) }
    dend_33 { pt3dadd( 211.609, -32.4463, 27.4336, 0.55 ) }
    dend_33 { pt3dadd( 212.037, -32.9273, 27.8513, 0.55 ) }
    dend_33 { pt3dadd( 213.576, -34.7413, 29.373, 0.28 ) }
    dend_33 { pt3dadd( 214.177, -35.4944, 29.9637, 0.55 ) }
    dend_33 { pt3dadd( 215.016, -36.4454, 30.7276, 0.28 ) }
    dend_33 { pt3dadd( 216.217, -37.8165, 31.7335, 0.55 ) }
    dend_33 { pt3dadd( 218.286, -40.0607, 32.9507, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 195.929, -15.3227, 9.88547, 0.55 ) }
    dend_32 { pt3dadd( 193.859, -15.6176, 9.54086, 0.55 ) }
    dend_32 { pt3dadd( 192.179, -15.8571, 9.26101, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.962787, -32.7891, 5.05964, 0.83 ) }
    dend_17 { pt3dadd( 1.0689, -32.9914, 5.06265, 0.83 ) }
    dend_17 { pt3dadd( 2.25167, -34.7732, 5.25482, 0.83 ) }
    dend_17 { pt3dadd( 3.30949, -36.3331, 5.31828, 0.55 ) }
    dend_17 { pt3dadd( 4.15339, -37.5775, 5.36891, 0.55 ) }
    dend_17 { pt3dadd( 5.94715, -40.2227, 5.47652, 0.83 ) }
    dend_17 { pt3dadd( 8.12285, -43.4311, 5.60704, 0.55 ) }
    dend_17 { pt3dadd( 9.29959, -45.1091, 5.71816, 0.83 ) }
    dend_17 { pt3dadd( 11.3464, -47.7723, 6.05625, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.962787, -32.7891, 5.05964, 0.55 ) }
    dend_14 { pt3dadd( 1.05212, -33.8275, 1.96968, 0.55 ) }
    dend_14 { pt3dadd( 1.14801, -34.942, -1.34701, 0.55 ) }
    dend_14 { pt3dadd( 1.26121, -36.2578, -5.26239, 0.55 ) }
    dend_14 { pt3dadd( 1.39867, -37.8555, -10.0169, 0.55 ) }
    dend_14 { pt3dadd( 1.47668, -38.7622, -12.715, 0.55 ) }
    dend_14 { pt3dadd( 1.49235, -38.9444, -13.257, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.1025, -128.047, 88.8875, 0.55 ) }
    dend_7 { pt3dadd( -16.3105, -138.511, 96.3183, 0.55 ) }
    dend_7 { pt3dadd( -14.6616, -149.587, 102.593, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -16.1025, -128.047, 88.8875, 0.55 ) }
    dend_4 { pt3dadd( -16.5984, -131.924, 91.0475, 0.55 ) }
    dend_4 { pt3dadd( -17.2589, -135.685, 93.3642, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -54.6629, 57.1552, -13.7964, 0.28 ) }
    dend_59 { pt3dadd( -56.1624, 58.6455, -12.2063, 0.28 ) }
    dend_59 { pt3dadd( -56.7348, 59.2034, -11.5267, 0.55 ) }
    dend_59 { pt3dadd( -58.3762, 60.8162, -9.51542, 0.28 ) }
    dend_59 { pt3dadd( -59.1836, 61.6241, -8.61677, 0.55 ) }
    dend_59 { pt3dadd( -61.3809, 63.819, -6.27793, 0.28 ) }
    dend_59 { pt3dadd( -63.6143, 66.0498, -3.90082, 0.55 ) }
    dend_59 { pt3dadd( -67.3184, 69.5195, 0.0535342, 0.28 ) }
    dend_59 { pt3dadd( -68.1069, 70.2654, 0.897068, 0.55 ) }
    dend_59 { pt3dadd( -69.8322, 72.0323, 2.69231, 0.28 ) }
    dend_59 { pt3dadd( -70.5038, 72.7691, 3.40145, 0.55 ) }
    dend_59 { pt3dadd( -78.0283, 77.5349, 9.17606, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -86.0202, 83.6302, 12.59, 0.55 ) }
    dend_59 { pt3dadd( -93.056, 89.8903, 17.4877, 0.55 ) }
    dend_59 { pt3dadd( -98.677, 97.435, 22.4029, 0.55 ) }
    dend_59 { pt3dadd( -105.324, 104.637, 26.4805, 0.55 ) }
    dend_59 { pt3dadd( -112.964, 110.16, 31.3592, 0.55 ) }
    dend_59 { pt3dadd( -120.084, 114.757, 37.7508, 0.55 ) }
    dend_59 { pt3dadd( -126.39, 118.185, 45.5712, 0.55 ) }
    dend_59 { pt3dadd( -132.674, 122.24, 53.1042, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -54.6629, 57.1552, -13.7964, 0.55 ) }
    dend_58 { pt3dadd( -58.019, 56.1118, -12.5564, 0.55 ) }
    dend_58 { pt3dadd( -59.7642, 55.5117, -11.9154, 0.28 ) }
    dend_58 { pt3dadd( -61.0629, 55.0652, -11.4384, 0.55 ) }
    dend_58 { pt3dadd( -62.1453, 54.693, -11.0409, 0.28 ) }
    dend_58 { pt3dadd( -62.9035, 54.4323, -10.7624, 0.55 ) }
    dend_58 { pt3dadd( -64.9941, 53.7135, -9.99459, 0.28 ) }
    dend_58 { pt3dadd( -66.3813, 53.1183, -9.65906, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -137.64, -64.0529, 6.48957, 0.55 ) }
    dend_54 { pt3dadd( -140.326, -70.3375, 7.37086, 0.55 ) }
    dend_54 { pt3dadd( -142.776, -76.57, 8.99574, 0.55 ) }
    dend_54 { pt3dadd( -144.871, -83.1229, 9.39015, 0.55 ) }
    dend_54 { pt3dadd( -147.537, -89.3375, 10.7147, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -137.64, -64.0529, 6.48957, 0.55 ) }
    dend_53 { pt3dadd( -143.971, -72.7733, 0.152851, 0.55 ) }
    dend_53 { pt3dadd( -149.859, -80.3325, -7.87687, 0.55 ) }
    dend_53 { pt3dadd( -156.621, -88.7925, -14.1209, 0.55 ) }
    dend_53 { pt3dadd( -165.77, -95.086, -19.8636, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -141.84, -62.2301, 0.679582, 0.55 ) }
    dend_51 { pt3dadd( -146.126, -65.7665, -3.83246, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -141.84, -62.2301, 0.679582, 0.55 ) }
    dend_50 { pt3dadd( -145.069, -70.2211, 1.12907, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 114.773, -69.9508, -118.025, 0.28 ) }
    dend_41 { pt3dadd( 117.082, -71.2236, -119.111, 0.28 ) }
    dend_41 { pt3dadd( 118.155, -71.8148, -119.616, 0.55 ) }
    dend_41 { pt3dadd( 120.2, -72.9422, -120.578, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 114.773, -69.9508, -118.025, 0.55 ) }
    dend_40 { pt3dadd( 114.43, -70.9995, -119.413, 0.55 ) }
    dend_40 { pt3dadd( 113.743, -73.0973, -122.19, 0.28 ) }
    dend_40 { pt3dadd( 113.519, -73.7805, -123.094, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 101.162, -73.5388, -108.559, 0.28 ) }
    dend_38 { pt3dadd( 102.772, -77.5979, -113.207, 0.28 ) }
    dend_38 { pt3dadd( 103.57, -79.6078, -115.509, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 101.162, -73.5388, -108.559, 0.55 ) }
    dend_37 { pt3dadd( 99.1203, -74.146, -108.041, 0.55 ) }
    dend_37 { pt3dadd( 93.4288, -75.8392, -106.595, 0.28 ) }
    dend_37 { pt3dadd( 92.0767, -76.2414, -106.252, 0.55 ) }
    dend_37 { pt3dadd( 88.3781, -77.3417, -105.312, 0.28 ) }
    dend_37 { pt3dadd( 85.994, -78.0509, -104.707, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 11.3464, -47.7723, 6.05625, 0.83 ) }
    dend_23 { pt3dadd( 11.4018, -47.9752, 6.03457, 0.83 ) }
    dend_23 { pt3dadd( 12.118, -50.6362, 5.83653, 0.83 ) }
    dend_23 { pt3dadd( 12.4355, -52.6528, 5.69441, 0.83 ) }
    dend_23 { pt3dadd( 12.5136, -54.6285, 5.64595, 0.83 ) }
    dend_23 { pt3dadd( 12.4295, -57.2831, 5.69154, 0.83 ) }
    dend_23 { pt3dadd( 12.201, -60.3575, 5.78834, 0.83 ) }
    dend_23 { pt3dadd( 11.8578, -63.808, 6.05039, 0.83 ) }
    dend_23 { pt3dadd( 11.4399, -67.1756, 6.43013, 0.83 ) }
    dend_23 { pt3dadd( 10.7632, -71.313, 6.66973, 0.83 ) }
    dend_23 { pt3dadd( 10.4278, -73.2077, 6.63509, 0.83 ) }
    dend_23 { pt3dadd( 10.2206, -74.6238, 6.53356, 0.83 ) }
    dend_23 { pt3dadd( 9.80829, -77.3375, 6.25968, 0.83 ) }
    dend_23 { pt3dadd( 9.55995, -79.7515, 5.93743, 0.83 ) }
    dend_23 { pt3dadd( 9.58069, -84.827, 4.93862, 0.83 ) }
    dend_23 { pt3dadd( 9.82438, -87.5635, 4.11054, 0.83 ) }
    dend_23 { pt3dadd( 10.1536, -90.0654, 3.19155, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.3464, -47.7723, 6.05625, 0.55 ) }
    dend_18 { pt3dadd( 10.2813, -50.3448, 6.0296, 0.55 ) }
    dend_18 { pt3dadd( 9.45519, -52.2093, 6.14148, 0.55 ) }
    dend_18 { pt3dadd( 8.93473, -53.3971, 6.33588, 0.55 ) }
    dend_18 { pt3dadd( 8.17166, -55.2476, 6.83397, 0.55 ) }
    dend_18 { pt3dadd( 6.7085, -58.9018, 8.07045, 0.55 ) }
    dend_18 { pt3dadd( 5.5193, -61.6599, 9.30195, 0.55 ) }
    dend_18 { pt3dadd( 4.52222, -63.8638, 10.5228, 0.55 ) }
    dend_18 { pt3dadd( 3.43064, -66.0873, 11.9019, 0.55 ) }
    dend_18 { pt3dadd( 2.49122, -67.929, 13.1383, 0.28 ) }
    dend_18 { pt3dadd( 1.65903, -69.4282, 14.3635, 0.55 ) }
    dend_18 { pt3dadd( 0.00654364, -72.1473, 16.9636, 0.55 ) }
    dend_18 { pt3dadd( -1.1333, -73.812, 18.7202, 0.55 ) }
    dend_18 { pt3dadd( -1.78039, -74.7452, 19.6929, 0.55 ) }
    dend_18 { pt3dadd( -2.58818, -75.8497, 20.7712, 0.83 ) }
    dend_18 { pt3dadd( -4.96977, -79.1323, 23.743, 0.28 ) }
    dend_18 { pt3dadd( -5.75105, -80.2196, 24.697, 0.55 ) }
    dend_18 { pt3dadd( -7.08773, -82.1822, 26.3672, 0.28 ) }
    dend_18 { pt3dadd( -7.50788, -82.7858, 26.9263, 0.55 ) }
    dend_18 { pt3dadd( -8.40958, -84.2013, 28.2268, 0.28 ) }
    dend_18 { pt3dadd( -8.90524, -85.0079, 28.9078, 0.55 ) }
    dend_18 { pt3dadd( -10.5427, -87.6599, 30.3823, 0.55 ) }
    dend_18 { pt3dadd( -13.719, -94.6612, 37.4823, 0.55 ) }
    dend_18 { pt3dadd( -16.499, -101.296, 45.0827, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.49235, -38.9444, -13.257, 0.55 ) }
    dend_16 { pt3dadd( 1.80279, -40.1055, -17.241, 0.55 ) }
    dend_16 { pt3dadd( 1.86266, -40.3802, -18.392, 0.55 ) }
    dend_16 { pt3dadd( 1.95166, -41.0721, -21.2312, 0.55 ) }
    dend_16 { pt3dadd( 1.99577, -42.4516, -27.3228, 0.28 ) }
    dend_16 { pt3dadd( 1.96945, -42.6419, -28.2023, 0.55 ) }
    dend_16 { pt3dadd( 1.77757, -43.5164, -31.7988, 0.55 ) }
    dend_16 { pt3dadd( 1.23416, -44.723, -36.4839, 0.55 ) }
    dend_16 { pt3dadd( 0.998328, -45.1396, -38.2542, 0.28 ) }
    dend_16 { pt3dadd( 0.734597, -45.4195, -39.759, 0.28 ) }
    dend_16 { pt3dadd( 0.0645863, -45.8601, -42.1381, 0.55 ) }
    dend_16 { pt3dadd( -0.683194, -46.2732, -45.1078, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -1.3393, -46.4478, -47.8908, 0.55 ) }
    dend_16 { pt3dadd( -1.87758, -46.4295, -50.0212, 0.55 ) }
    dend_16 { pt3dadd( -2.22107, -46.3091, -51.5173, 0.55 ) }
    dend_16 { pt3dadd( -3.15087, -45.7837, -55.9918, 0.55 ) }
    dend_16 { pt3dadd( -4.19339, -44.9631, -60.6563, 0.55 ) }
    dend_16 { pt3dadd( -4.65707, -44.5346, -62.5578, 0.28 ) }
    dend_16 { pt3dadd( -5.07556, -44.1516, -64.3833, 0.55 ) }
    dend_16 { pt3dadd( -5.94397, -43.5791, -68.0626, 0.28 ) }
    dend_16 { pt3dadd( -6.24349, -43.4171, -69.2931, 0.83 ) }
    dend_16 { pt3dadd( -6.9046, -43.094, -71.5019, 0.28 ) }
    dend_16 { pt3dadd( -7.51715, -42.9723, -72.9668, 0.55 ) }
    dend_16 { pt3dadd( -8.43597, -42.8687, -75.0651, 0.28 ) }
    dend_16 { pt3dadd( -8.82239, -42.8174, -75.8825, 0.55 ) }
    dend_16 { pt3dadd( -9.59882, -42.7527, -77.3414, 0.55 ) }
    dend_16 { pt3dadd( -10.8428, -42.4257, -79.4886, 0.55 ) }
    dend_16 { pt3dadd( -11.7199, -42.1206, -80.8344, 0.28 ) }
    dend_16 { pt3dadd( -12.5012, -41.7264, -81.8544, 0.55 ) }
    dend_16 { pt3dadd( -13.4213, -41.0864, -83.0631, 0.28 ) }
    dend_16 { pt3dadd( -13.5674, -40.9622, -83.2678, 0.55 ) }
    dend_16 { pt3dadd( -14.6447, -39.7605, -85.4212, 0.28 ) }
    dend_16 { pt3dadd( -15.306, -38.8537, -87.102, 0.55 ) }
    dend_16 { pt3dadd( -15.9736, -37.5149, -89.5213, 0.83 ) }
    dend_16 { pt3dadd( -16.3846, -36.3692, -91.649, 0.28 ) }
    dend_16 { pt3dadd( -16.4587, -36.0756, -92.229, 0.55 ) }
    dend_16 { pt3dadd( -16.8879, -33.8702, -96.8095, 0.28 ) }
    dend_16 { pt3dadd( -16.9197, -33.493, -97.6518, 0.55 ) }
    dend_16 { pt3dadd( -16.9343, -32.2585, -100.216, 0.28 ) }
    dend_16 { pt3dadd( -16.9355, -31.9409, -100.88, 0.55 ) }
    dend_16 { pt3dadd( -16.9985, -31.1156, -102.529, 0.28 ) }
    dend_16 { pt3dadd( -17.0823, -30.5225, -103.66, 0.55 ) }
    dend_16 { pt3dadd( -17.4773, -29.2037, -105.995, 0.28 ) }
    dend_16 { pt3dadd( -17.7427, -28.5002, -107.352, 0.55 ) }
    dend_16 { pt3dadd( -18.4014, -27.1504, -110.161, 0.28 ) }
    dend_16 { pt3dadd( -18.6055, -26.7875, -110.99, 0.55 ) }
    dend_16 { pt3dadd( -18.9549, -26.3053, -112.263, 0.28 ) }
    dend_16 { pt3dadd( -19.2846, -25.9004, -113.309, 0.55 ) }
    dend_16 { pt3dadd( -20.0555, -25.0883, -115.4, 0.28 ) }
    dend_16 { pt3dadd( -20.3018, -24.8574, -116.016, 0.55 ) }
    dend_16 { pt3dadd( -22.2816, -23.0603, -120.455, 0.28 ) }
    dend_16 { pt3dadd( -23.0745, -22.3239, -121.917, 0.55 ) }
    dend_16 { pt3dadd( -24.6169, -20.8818, -124.4, 0.28 ) }
    dend_16 { pt3dadd( -25.3398, -20.1835, -125.493, 0.55 ) }
    dend_16 { pt3dadd( -27.1134, -18.6062, -127.881, 0.28 ) }
    dend_16 { pt3dadd( -27.7964, -18.0745, -128.725, 0.55 ) }
    dend_16 { pt3dadd( -30.4077, -16.4943, -131.632, 0.28 ) }
    dend_16 { pt3dadd( -31.5053, -16.0336, -132.834, 0.55 ) }
    dend_16 { pt3dadd( -33.0876, -15.7467, -134.531, 0.55 ) }
    dend_16 { pt3dadd( -34.0834, -15.659, -135.55, 0.55 ) }
    dend_16 { pt3dadd( -36.2634, -15.5578, -137.468, 0.28 ) }
    dend_16 { pt3dadd( -38.5273, -15.4895, -139.223, 0.28 ) }
    dend_16 { pt3dadd( -40.459, -15.4253, -140.634, 0.55 ) }
    dend_16 { pt3dadd( -43.0282, -15.1053, -142.119, 0.28 ) }
    dend_16 { pt3dadd( -44.4227, -14.7736, -142.705, 0.55 ) }
    dend_16 { pt3dadd( -47.9542, -13.4458, -143.829, 0.28 ) }
    dend_16 { pt3dadd( -50.0224, -12.424, -144.066, 0.55 ) }
    dend_16 { pt3dadd( -51.5015, -11.5892, -144.011, 0.28 ) }
    dend_16 { pt3dadd( -53.3321, -10.6509, -143.682, 0.55 ) }
    dend_16 { pt3dadd( -55.7269, -9.41984, -143.098, 0.28 ) }
    dend_16 { pt3dadd( -56.6329, -8.98854, -142.885, 0.55 ) }
    dend_16 { pt3dadd( -61.138, -7.07432, -142.137, 0.28 ) }
    dend_16 { pt3dadd( -62.6533, -6.47464, -141.897, 0.55 ) }
    dend_16 { pt3dadd( -66.2914, -5.15617, -141.269, 0.28 ) }
    dend_16 { pt3dadd( -68.2681, -4.4581, -140.929, 0.55 ) }
    dend_16 { pt3dadd( -69.8927, -3.88648, -140.653, 0.55 ) }
    dend_16 { pt3dadd( -71.8165, -3.21461, -140.357, 0.28 ) }
    dend_16 { pt3dadd( -72.7608, -2.87291, -140.318, 0.55 ) }
    dend_16 { pt3dadd( -75.8533, -1.64124, -140.327, 0.28 ) }
    dend_16 { pt3dadd( -77.4831, -0.839579, -140.303, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.49235, -38.9444, -13.257, 0.55 ) }
    dend_15 { pt3dadd( 2.07186, -38.9639, -13.7933, 0.55 ) }
    dend_15 { pt3dadd( 2.66109, -38.8967, -14.315, 0.55 ) }
    dend_15 { pt3dadd( 3.41985, -38.7429, -14.9259, 0.55 ) }
    dend_15 { pt3dadd( 4.05129, -38.5537, -15.3951, 0.55 ) }
    dend_15 { pt3dadd( 8.33537, -36.7737, -18.1381, 0.55 ) }
    dend_15 { pt3dadd( 9.28475, -36.2495, -18.7663, 0.55 ) }
    dend_15 { pt3dadd( 10.6639, -35.3602, -19.7218, 0.55 ) }
    dend_15 { pt3dadd( 11.6336, -34.693, -20.4037, 0.55 ) }
    dend_15 { pt3dadd( 12.578, -33.9777, -21.043, 0.28 ) }
    dend_15 { pt3dadd( 14.044, -32.7784, -21.945, 0.55 ) }
    dend_15 { pt3dadd( 16.256, -30.9115, -23.1519, 0.28 ) }
    dend_15 { pt3dadd( 16.4421, -30.7937, -23.3113, 0.55 ) }
    dend_15 { pt3dadd( 17.4549, -30.3652, -24.6951, 0.28 ) }
    dend_15 { pt3dadd( 17.9921, -30.1704, -25.7484, 0.55 ) }
    dend_15 { pt3dadd( 18.4813, -30.064, -26.9477, 0.55 ) }
    dend_15 { pt3dadd( 19.3468, -29.9934, -29.1173, 0.55 ) }
    dend_15 { pt3dadd( 21.0611, -29.885, -33.3705, 0.55 ) }
    dend_15 { pt3dadd( 22.2665, -29.8364, -36.206, 0.55 ) }
    dend_15 { pt3dadd( 22.7095, -29.8252, -37.1733, 0.55 ) }
    dend_15 { pt3dadd( 25.7607, -29.6753, -43.4588, 0.55 ) }
    dend_15 { pt3dadd( 26.6536, -29.5971, -45.1245, 0.55 ) }
    dend_15 { pt3dadd( 27.2239, -29.5429, -46.0209, 0.55 ) }
    dend_15 { pt3dadd( 28.742, -29.449, -47.994, 0.55 ) }
    dend_15 { pt3dadd( 32.7008, -29.474, -52.516, 0.55 ) }
    dend_15 { pt3dadd( 33.8281, -29.5358, -53.689, 0.28 ) }
    dend_15 { pt3dadd( 34.5257, -29.6021, -54.3088, 0.55 ) }
    dend_15 { pt3dadd( 35.5848, -29.7507, -55.2084, 0.28 ) }
    dend_15 { pt3dadd( 36.0552, -29.8608, -55.5461, 0.55 ) }
    dend_15 { pt3dadd( 37.7002, -30.3891, -56.1869, 0.28 ) }
    dend_15 { pt3dadd( 38.9744, -31.2039, -55.9754, 0.55 ) }
    dend_15 { pt3dadd( 39.7392, -31.8007, -55.8006, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 40.4333, -32.4765, -55.5583, 0.55 ) }
    dend_15 { pt3dadd( 41.0452, -33.2296, -55.2925, 0.28 ) }
    dend_15 { pt3dadd( 41.32, -33.6226, -55.186, 0.55 ) }
    dend_15 { pt3dadd( 41.9569, -34.6621, -54.8884, 0.28 ) }
    dend_15 { pt3dadd( 42.1395, -34.9734, -54.8584, 0.55 ) }
    dend_15 { pt3dadd( 43.2107, -36.7551, -54.7932, 0.28 ) }
    dend_15 { pt3dadd( 43.7646, -37.5714, -54.8664, 0.55 ) }
    dend_15 { pt3dadd( 45.0775, -39.2974, -55.2089, 0.28 ) }
    dend_15 { pt3dadd( 45.6125, -39.926, -55.4019, 0.55 ) }
    dend_15 { pt3dadd( 47.4986, -41.9716, -56.1454, 0.28 ) }
    dend_15 { pt3dadd( 47.9677, -42.4675, -56.3483, 0.55 ) }
    dend_15 { pt3dadd( 49.4247, -44.0419, -57.0678, 0.28 ) }
    dend_15 { pt3dadd( 49.7333, -44.4155, -57.2126, 0.55 ) }
    dend_15 { pt3dadd( 50.5107, -45.4081, -57.5965, 0.28 ) }
    dend_15 { pt3dadd( 50.9858, -45.9807, -57.8776, 0.55 ) }
    dend_15 { pt3dadd( 51.488, -46.5378, -58.1956, 0.55 ) }
    dend_15 { pt3dadd( 52.4879, -47.6499, -58.8208, 0.28 ) }
    dend_15 { pt3dadd( 53.2026, -48.3241, -59.2737, 0.55 ) }
    dend_15 { pt3dadd( 55.4855, -49.9367, -60.7241, 0.28 ) }
    dend_15 { pt3dadd( 56.3796, -50.4379, -61.3168, 0.55 ) }
    dend_15 { pt3dadd( 56.9998, -50.7484, -61.7133, 0.28 ) }
    dend_15 { pt3dadd( 57.6312, -51.0222, -62.1035, 0.55 ) }
    dend_15 { pt3dadd( 59.5889, -51.7616, -63.266, 0.28 ) }
    dend_15 { pt3dadd( 61.0747, -52.34, -64.11, 0.55 ) }
    dend_15 { pt3dadd( 63.62, -53.4804, -65.3781, 0.28 ) }
    dend_15 { pt3dadd( 64.4216, -53.8339, -65.7735, 0.55 ) }
    dend_15 { pt3dadd( 65.9562, -54.4752, -66.4128, 0.28 ) }
    dend_15 { pt3dadd( 66.4659, -54.6847, -66.589, 0.55 ) }
    dend_15 { pt3dadd( 67.2839, -55.0198, -66.7433, 0.28 ) }
    dend_15 { pt3dadd( 67.9988, -55.2991, -66.824, 0.55 ) }
    dend_15 { pt3dadd( 69.9085, -55.9725, -66.8617, 0.28 ) }
    dend_15 { pt3dadd( 72.0898, -56.6657, -66.8703, 0.28 ) }
    dend_15 { pt3dadd( 73.18, -56.9735, -66.8027, 0.28 ) }
    dend_15 { pt3dadd( 74.2874, -57.2506, -66.7949, 0.55 ) }
    dend_15 { pt3dadd( 75.9023, -57.5874, -66.7881, 0.28 ) }
    dend_15 { pt3dadd( 76.6177, -57.7277, -66.7709, 0.83 ) }
    dend_15 { pt3dadd( 78.4334, -58.1095, -66.663, 0.28 ) }
    dend_15 { pt3dadd( 79.2288, -58.2904, -66.6572, 0.55 ) }
    dend_15 { pt3dadd( 82.7569, -59.2023, -66.7828, 0.28 ) }
    dend_15 { pt3dadd( 84.5413, -59.6738, -66.9749, 0.28 ) }
    dend_15 { pt3dadd( 85.8492, -60.0146, -67.191, 0.55 ) }
    dend_15 { pt3dadd( 86.6213, -60.2257, -67.3941, 0.55 ) }
    dend_15 { pt3dadd( 88.6864, -60.8078, -68.077, 0.28 ) }
    dend_15 { pt3dadd( 90.6273, -61.427, -68.7861, 0.55 ) }
    dend_15 { pt3dadd( 92.3974, -62.0389, -69.4333, 0.28 ) }
    dend_15 { pt3dadd( 94.0053, -62.6112, -70.0931, 0.55 ) }
    dend_15 { pt3dadd( 95.3333, -63.0706, -70.6313, 0.28 ) }
    dend_15 { pt3dadd( 96.4134, -63.3794, -71.019, 0.55 ) }
    dend_15 { pt3dadd( 99.0049, -63.9968, -71.8455, 0.28 ) }
    dend_15 { pt3dadd( 100.315, -64.3088, -72.2162, 0.55 ) }
    dend_15 { pt3dadd( 102.278, -64.7832, -72.7087, 0.28 ) }
    dend_15 { pt3dadd( 103.88, -65.1307, -73.0775, 0.55 ) }
    dend_15 { pt3dadd( 107.621, -65.7972, -73.9425, 0.28 ) }
    dend_15 { pt3dadd( 109.147, -65.9899, -74.385, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.6616, -149.587, 102.593, 0.55 ) }
    dend_9 { pt3dadd( -14.0224, -158.779, 107.41, 0.55 ) }
    dend_9 { pt3dadd( -11.5096, -168.409, 110.421, 0.55 ) }
    dend_9 { pt3dadd( -10.1116, -177.86, 114.522, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.6616, -149.587, 102.593, 0.55 ) }
    dend_8 { pt3dadd( -13.8717, -157.823, 108.829, 0.55 ) }
    dend_8 { pt3dadd( -14.7451, -164.978, 116.271, 0.55 ) }
    dend_8 { pt3dadd( -15.9007, -170.442, 124.998, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.2589, -135.685, 93.3642, 0.55 ) }
    dend_6 { pt3dadd( -17.531, -145.139, 98.4126, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.2589, -135.685, 93.3642, 0.55 ) }
    dend_5 { pt3dadd( -19.7669, -146.232, 99.8753, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.1536, -90.0654, 3.19155, 0.83 ) }
    dend_25 { pt3dadd( 11.1484, -94.3453, 3.9602, 0.83 ) }
    dend_25 { pt3dadd( 12.0151, -97.9643, 4.92057, 0.83 ) }
    dend_25 { pt3dadd( 12.8767, -101.561, 5.87519, 0.83 ) }
    dend_25 { pt3dadd( 13.6949, -104.978, 6.78178, 0.83 ) }
    dend_25 { pt3dadd( 14.9558, -110.242, 8.17888, 0.83 ) }
    dend_25 { pt3dadd( 16.2076, -115.469, 9.5659, 0.83 ) }
    dend_25 { pt3dadd( 17.0838, -118.948, 11.006, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.1536, -90.0654, 3.19155, 0.55 ) }
    dend_24 { pt3dadd( 12.2159, -92.6813, 3.73167, 0.55 ) }
    dend_24 { pt3dadd( 13.9267, -94.6978, 3.79696, 0.55 ) }
    dend_24 { pt3dadd( 15.1761, -96.1817, 3.67364, 0.55 ) }
    dend_24 { pt3dadd( 16.4545, -97.9217, 3.21339, 0.83 ) }
    dend_24 { pt3dadd( 17.8614, -99.8872, 2.40211, 0.55 ) }
    dend_24 { pt3dadd( 19.2375, -101.81, 1.60857, 0.83 ) }
    dend_24 { pt3dadd( 20.6804, -103.888, 0.509607, 0.55 ) }
    dend_24 { pt3dadd( 21.5554, -105.085, -0.242867, 0.83 ) }
    dend_24 { pt3dadd( 24.3303, -108.943, -3.04702, 0.55 ) }
    dend_24 { pt3dadd( 26.3212, -111.973, -5.53621, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -16.499, -101.296, 45.0827, 0.55 ) }
    dend_20 { pt3dadd( -20.6099, -108.656, 49.615, 0.55 ) }
    dend_20 { pt3dadd( -26.0489, -115.144, 54.0805, 0.55 ) }
    dend_20 { pt3dadd( -32.2207, -120.755, 58.7753, 0.55 ) }
    dend_20 { pt3dadd( -39.241, -125.285, 63.4456, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.499, -101.296, 45.0827, 0.55 ) }
    dend_19 { pt3dadd( -21.3106, -111.38, 53.5912, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.0838, -118.948, 11.006, 0.55 ) }
    dend_27 { pt3dadd( 17.1951, -120.747, 11.426, 0.55 ) }
    dend_27 { pt3dadd( 17.3843, -123.041, 12.0327, 0.55 ) }
    dend_27 { pt3dadd( 17.5665, -125.207, 12.5942, 0.55 ) }
    dend_27 { pt3dadd( 17.6843, -126.747, 12.9664, 0.55 ) }
    dend_27 { pt3dadd( 17.8747, -129.495, 13.5822, 0.55 ) }
    dend_27 { pt3dadd( 18.5698, -137.204, 15.1499, 0.55 ) }
    dend_27 { pt3dadd( 18.8935, -139.813, 15.5875, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 19.1503, -141.648, 15.8077, 0.55 ) }
    dend_27 { pt3dadd( 19.4997, -143.735, 15.8991, 0.55 ) }
    dend_27 { pt3dadd( 19.7769, -145.345, 15.8229, 0.55 ) }
    dend_27 { pt3dadd( 20.5709, -149.092, 15.5181, 0.55 ) }
    dend_27 { pt3dadd( 21.0765, -151.943, 15.2597, 0.55 ) }
    dend_27 { pt3dadd( 21.4452, -153.814, 15.1562, 0.55 ) }
    dend_27 { pt3dadd( 22.3265, -158.679, 15.1291, 0.55 ) }
    dend_27 { pt3dadd( 22.8649, -161.957, 15.2488, 0.55 ) }
    dend_27 { pt3dadd( 23.524, -166.194, 15.6414, 0.55 ) }
    dend_27 { pt3dadd( 24.248, -171.013, 16.464, 0.55 ) }
    dend_27 { pt3dadd( 24.8275, -174.231, 17.2411, 0.55 ) }
    dend_27 { pt3dadd( 25.2033, -176.132, 17.7605, 0.55 ) }
    dend_27 { pt3dadd( 25.5191, -177.887, 18.2271, 0.55 ) }
    dend_27 { pt3dadd( 25.9796, -180.101, 18.7241, 0.55 ) }
    dend_27 { pt3dadd( 27.1099, -185.428, 19.5529, 0.55 ) }
    dend_27 { pt3dadd( 27.6333, -187.481, 19.8144, 0.55 ) }
    dend_27 { pt3dadd( 28.1658, -189.77, 20.0777, 0.55 ) }
    dend_27 { pt3dadd( 28.9417, -193.209, 20.449, 0.55 ) }
    dend_27 { pt3dadd( 29.4112, -195.862, 20.7312, 0.55 ) }
    dend_27 { pt3dadd( 29.7215, -198.39, 20.9341, 0.55 ) }
    dend_27 { pt3dadd( 29.9121, -200.807, 21.1037, 0.55 ) }
    dend_27 { pt3dadd( 30.051, -203.169, 21.2936, 0.55 ) }
    dend_27 { pt3dadd( 30.1636, -204.849, 21.4146, 0.55 ) }
    dend_27 { pt3dadd( 30.3863, -207.593, 21.5238, 0.55 ) }
    dend_27 { pt3dadd( 30.6663, -210.879, 21.3986, 0.55 ) }
    dend_27 { pt3dadd( 30.8706, -212.466, 21.2292, 0.55 ) }
    dend_27 { pt3dadd( 31.0898, -213.855, 20.9796, 0.55 ) }
    dend_27 { pt3dadd( 31.6592, -216.459, 20.3817, 0.55 ) }
    dend_27 { pt3dadd( 32.0142, -218.108, 19.9527, 0.55 ) }
    dend_27 { pt3dadd( 32.4566, -220.144, 19.5064, 0.55 ) }
    dend_27 { pt3dadd( 32.693, -221.582, 19.2669, 0.55 ) }
    dend_27 { pt3dadd( 33.2061, -225.333, 18.7742, 0.55 ) }
    dend_27 { pt3dadd( 33.4745, -228.156, 18.5889, 0.55 ) }
    dend_27 { pt3dadd( 33.7344, -232.547, 18.6381, 0.55 ) }
    dend_27 { pt3dadd( 33.8996, -235.388, 18.946, 0.55 ) }
    dend_27 { pt3dadd( 34.028, -238.378, 19.3589, 0.28 ) }
    dend_27 { pt3dadd( 34.0391, -239.584, 19.5663, 0.28 ) }
    dend_27 { pt3dadd( 33.9908, -242.523, 20.3247, 0.28 ) }
    dend_27 { pt3dadd( 33.8719, -245.25, 21.2283, 0.28 ) }
    dend_27 { pt3dadd( 33.9485, -248.851, 22.8568, 0.28 ) }
    dend_27 { pt3dadd( 35.6182, -256.791, 24.7653, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 17.0838, -118.948, 11.006, 0.55 ) }
    dend_26 { pt3dadd( 17.8129, -119.36, 12.0279, 0.55 ) }
    dend_26 { pt3dadd( 19.2013, -120.429, 14.2403, 0.55 ) }
    dend_26 { pt3dadd( 20.3464, -121.487, 16.2048, 0.28 ) }
    dend_26 { pt3dadd( 21.5314, -122.695, 18.3553, 0.55 ) }
    dend_26 { pt3dadd( 22.1153, -123.48, 19.7767, 0.28 ) }
    dend_26 { pt3dadd( 22.9704, -124.91, 22.387, 0.55 ) }
    dend_26 { pt3dadd( 23.1271, -125.683, 23.6588, 0.28 ) }
    dend_26 { pt3dadd( 23.133, -125.969, 24.1625, 0.28 ) }
    dend_26 { pt3dadd( 23.1311, -126.383, 25.0425, 0.55 ) }
    dend_26 { pt3dadd( 23.2734, -127.751, 28.3625, 0.28 ) }
    dend_26 { pt3dadd( 23.3682, -128.286, 29.7515, 0.55 ) }
    dend_26 { pt3dadd( 23.9724, -129.811, 33.7231, 0.28 ) }
    dend_26 { pt3dadd( 24.4054, -130.558, 35.8048, 0.28 ) }
    dend_26 { pt3dadd( 25.058, -131.503, 38.3165, 0.55 ) }
    dend_26 { pt3dadd( 26.2746, -132.941, 41.8704, 0.28 ) }
    dend_26 { pt3dadd( 26.4785, -133.128, 42.321, 0.55 ) }
    dend_26 { pt3dadd( 27.602, -134.025, 44.4433, 0.28 ) }
    dend_26 { pt3dadd( 27.7215, -134.107, 44.6213, 0.55 ) }
    dend_26 { pt3dadd( 28.7514, -135.076, 46.2167, 0.28 ) }
    dend_26 { pt3dadd( 29.2063, -135.609, 47.0068, 0.55 ) }
    dend_26 { pt3dadd( 32.8682, -139.561, 53.5679, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -39.241, -125.285, 63.4456, 0.55 ) }
    dend_22 { pt3dadd( -44.9108, -129.376, 70.2076, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -39.241, -125.285, 63.4456, 0.55 ) }
    dend_21 { pt3dadd( -45.1865, -132.573, 66.6305, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 13
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 13
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 7
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_BP_b9592b27fd_0_0


