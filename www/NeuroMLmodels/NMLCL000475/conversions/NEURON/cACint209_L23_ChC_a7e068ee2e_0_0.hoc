// Cell: cACint209_L23_ChC_a7e068ee2e_0_0
/*
{
  "id" : "cACint209_L23_ChC_a7e068ee2e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.247476, -12.3185, -1.01707, 2.36383", "0.272374, -11.1472, -0.92957, 3.66321", "0.297273, -9.97598, -0.842075, 5.22974", "0.322171, -8.80474, -0.75458, 6.26105", "0.34707, -7.63351, -0.667085, 6.92536", "0.371968, -6.46227, -0.57959, 7.55364", "0.396866, -5.29103, -0.492094, 8.36178", "0.421765, -4.1198, -0.404599, 9.09467", "0.446663, -2.94856, -0.317104, 9.82452", "0.471562, -1.77733, -0.229609, 10.5969", "0.49646, -0.606089, -0.142114, 10.9527", "0.521359, 0.565147, -0.0546186, 11.1935", "0.546257, 1.73638, 0.0328765, 11.3346", "0.571156, 2.90762, 0.120372, 11.3156", "0.596054, 4.07886, 0.207867, 11.2804", "0.620953, 5.25009, 0.295362, 11.0098", "0.645851, 6.42133, 0.382857, 10.6994", "0.67075, 7.59256, 0.470352, 10.2417", "0.695648, 8.7638, 0.557847, 9.96532", "0.720546, 9.93504, 0.645343, 4.49434", "0.745445, 11.1063, 0.732838, 2.79989" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "5.17534, 7.60086, -4.88165, 0.29", "5.58986, 8.25164, -4.6502, 0.29", "6.03482, 8.96095, -4.43048, 0.37", "6.51276, 9.73489, -4.22341, 0.52", "6.79192, 10.195, -4.11649, 0.52", "7.18856, 10.8335, -3.98608, 0.81", "7.42148, 11.2269, -3.91701, 0.81", "7.67873, 11.7172, -3.83212, 0.29", "7.90814, 12.2431, -3.7541, 0.59", "8.09606, 12.7381, -3.69913, 0.59", "8.2911, 13.3014, -3.63388, 0.59", "8.54712, 14.0646, -3.54028, 0.29", "8.91568, 15.1542, -3.41172, 0.29", "9.15756, 15.826, -3.33675, 0.81", "9.32116, 16.2421, -3.29457, 0.81", "9.55412, 16.7904, -3.24956, 0.52", "9.92129, 17.5218, -3.20694, 0.29", "10.4469, 18.4542, -3.17185, 0.22", "10.7635, 18.9606, -3.17156, 0.29", "11.1069, 19.4819, -3.17168, 0.29", "11.8171, 20.5342, -3.17233, 0.22", "12.5024, 21.5143, -3.17352, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.00466, -10.0701, 5.49835, 1.11", "-1.00466, -10.0701, 5.49835, 1.11", "-1.45982, -10.6973, 5.49699, 1.11", "-2.0325, -11.5755, 5.52117, 0.88", "-2.44595, -12.273, 5.59264, 0.88", "-3.03373, -13.3968, 5.79341, 1.18", "-3.40493, -14.2358, 6.02471, 1.18", "-3.81722, -15.5425, 6.51152, 0.81", "-3.90726, -16.1424, 6.79413, 1.11", "-3.83764, -17.0664, 7.28932, 1.11", "-3.62684, -17.8446, 7.76438, 0.96", "-3.20185, -18.8524, 8.43149, 1.11", "-2.85767, -19.5537, 8.90268, 1.25", "-2.56635, -20.0995, 9.25878, 0.96", "-2.13043, -21.093, 9.80625, 1.03", "-1.88455, -21.8927, 10.1403, 1.03", "-1.82059, -22.405, 10.3112, 0.59", "-1.86712, -23.0945, 10.5359, 0.88", "-1.95313, -23.4145, 10.6561, 0.88", "-2.38979, -24.3887, 11.0614, 0.66", "-2.65812, -24.7951, 11.2665, 0.74", "-3.09848, -25.4072, 11.5898, 0.66", "-3.63015, -26.2054, 12.0266, 0.88", "-3.98416, -26.8317, 12.3548, 0.81", "-4.20186, -27.3116, 12.5996, 0.44", "-4.53031, -28.2935, 13.086, 0.81", "-4.75583, -29.2005, 13.4807, 0.81", "-4.90893, -30.1788, 13.8099, 0.59", "-4.97798, -31.0695, 14.0318, 1.11", "-4.98282, -31.8133, 14.1594, 1.33", "-4.95413, -32.4512, 14.2447, 1.11", "-4.8742, -33.3227, 14.3414, 0.81", "-4.78048, -34.1349, 14.482, 0.66", "-4.68415, -34.6794, 14.6496, 1.18", "-4.45357, -35.5431, 15.0661, 0.96", "-4.26258, -36.1294, 15.4256, 0.74", "-3.9978, -36.8696, 15.9693, 0.66", "-3.70196, -37.6772, 16.6354, 0.88", "-3.38662, -38.6356, 17.5192, 1.18", "-3.18319, -39.436, 18.2914, 0.66", "-3.10974, -39.9678, 18.7961, 0.59", "-3.09748, -40.4637, 19.1916, 0.74", "-3.14047, -41.0311, 19.5515, 0.44", "-3.27633, -41.8604, 19.9212, 0.44", "-3.3993, -42.3754, 20.0513, 0.44", "-3.61336, -43.1688, 20.1302, 0.37", "-3.78029, -43.9622, 20.3041, 0.37", "-3.88311, -44.5046, 20.5278, 0.96", "-3.95092, -44.865, 20.7387, 0.96", "-4.0977, -45.5447, 21.2626, 0.44", "-4.27948, -46.1898, 21.8478, 0.81", "-4.93155, -48.3064, 23.9041, 0.88", "-5.17634, -49.0922, 24.6762, 0.88", "-5.2683, -49.4445, 25.0007, 0.88", "-5.39936, -50.1058, 25.5427, 0.66", "-5.54236, -51.0856, 26.245, 0.52", "-5.60625, -51.7939, 26.6015, 0.59", "-5.62423, -52.5024, 26.7691, 0.59", "-5.55112, -53.3877, 26.9652, 0.74", "-5.48361, -53.9045, 27.09, 0.74", "-5.29033, -55.2112, 27.4549, 0.74", "-5.15505, -56.031, 27.767, 0.52", "-5.06635, -56.5509, 28.0028, 0.66", "-4.96386, -57.0885, 28.2556, 0.66", "-4.78354, -57.8003, 28.5987, 0.37", "-4.62166, -58.276, 28.7931, 0.37", "-4.36901, -58.8895, 28.9648, 0.37", "-4.09664, -59.5681, 29.1199, 0.37", "-3.87878, -60.1296, 29.2245, 0.37", "-3.49792, -61.0309, 29.3672, 0.37", "-3.26522, -61.5134, 29.4489, 0.52", "-3.09996, -61.859, 29.5048, 0.66", "-2.87763, -62.3803, 29.5924, 0.52", "-2.61903, -63.0786, 29.725, 0.52", "-2.36868, -63.7881, 29.8723, 0.74", "-2.15702, -64.3911, 29.9816, 0.88", "-1.92997, -65.0225, 30.1036, 0.96", "-1.78808, -65.4104, 30.1816, 0.96", "-1.64247, -65.8049, 30.2627, 0.81", "-1.41471, -66.5116, 30.3989, 1.18", "-1.2922, -67.0138, 30.4962, 1.4", "-1.21056, -67.412, 30.5622, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.87466, -11.8024, -0.261648, 2.87", "-2.87466, -11.8024, -0.261648, 2.87", "-3.34927, -12.2962, -0.216853, 2.87", "-4.26215, -13.2615, -0.149413, 2.21", "-5.05947, -14.1047, -0.0905114, 2.21", "-5.63774, -14.7162, -0.0477913, 2.21", "-6.37115, -15.4917, 0.00638996, 2.21", "-7.13428, -16.2936, 0.0571794, 2.21", "-7.91929, -17.1068, 0.0963994, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.71466, 9.84559, 3.05835, 3.83", "-4.05868, 10.3775, 3.38383, 3.83", "-4.86419, 11.6228, 4.14591, 3.32", "-5.54756, 12.6793, 4.79244, 3.32", "-6.16219, 13.6296, 5.37393, 3.39", "-7.00212, 14.9281, 6.16858, 3.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.19534, 8.27736, -4.07165, 1.99", "4.19534, 8.27736, -4.07165, 1.99", "4.32644, 9.01483, -3.72099, 1.03", "4.43178, 9.68679, -3.36262, 1.03", "4.55653, 10.6289, -2.82408, 1.03", "4.62615, 11.2418, -2.46899, 1.03", "4.69513, 11.9449, -2.06946, 1.03", "4.77888, 12.976, -1.49111, 1.11", "4.81506, 13.551, -1.1444, 1.33", "4.84521, 14.2311, -0.728059, 1.33", "4.8626, 14.582, -0.520515, 1.47", "4.90075, 15.0123, -0.277231, 1.47", "4.98279, 15.706, 0.0697434, 1.25", "5.1489, 16.779, 0.518618, 1.25", "5.25751, 17.3181, 0.71243, 1.4", "5.46409, 18.1235, 0.972113, 1.4", "5.73789, 19.0912, 1.21339, 1.18", "5.96213, 19.8786, 1.33018, 1.25", "6.1455, 20.5555, 1.36387, 1.11", "6.37728, 21.5202, 1.292, 0.88", "6.56222, 22.4068, 1.16791, 0.88", "6.75794, 23.6224, 0.939338, 0.88", "6.87992, 24.8071, 0.675114, 1.4", "6.93424, 25.7954, 0.444132, 1.55", "6.94414, 27.1135, 0.160661, 1.84", "6.92742, 27.6534, 0.0583754, 1.84", "6.88691, 28.6597, -0.0971772, 1.33", "6.86135, 29.838, -0.210671, 0.96", "6.88603, 30.8351, -0.265256, 0.96", "7.00531, 32.1791, -0.299036, 1.03", "7.12177, 32.8171, -0.290667, 1.25", "7.39161, 33.7414, -0.265882, 1.47", "7.65551, 34.357, -0.243962, 1.47", "8.14811, 35.2123, -0.208241, 1.03", "8.59712, 35.8329, -0.196395, 1.03", "9.17443, 36.518, -0.18837, 1.47", "9.72767, 37.127, -0.165665, 1.25", "10.0964, 37.5114, -0.134361, 1.55", "10.8062, 38.2351, -0.0645692, 0.81", "11.4732, 38.9108, 0.0147997, 0.81", "11.992, 39.4409, 0.0900464, 1.25", "12.455, 39.9303, 0.175337, 1.47", "12.8905, 40.4121, 0.277928, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.745445, 11.1063, 0.732838, 0.885242", "1.06425, 26.1029, 0.732838, 0.885242", "1.38305, 41.0995, 0.732838, 0.885242" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-7.91929, -17.1068, 0.0963994, 0.96", "-8.07644, -17.5822, 0.606899, 0.96", "-8.48794, -18.7178, 1.7726, 0.74", "-9.24485, -20.7699, 3.75233, 1.11", "-9.71629, -21.9835, 4.83452, 0.81", "-10.0407, -22.7717, 5.4646, 0.66", "-10.3168, -23.4044, 5.91536, 0.44", "-10.6575, -24.0959, 6.35995, 0.66", "-10.9238, -24.5683, 6.58107, 1.03", "-11.3087, -25.3011, 6.69536, 1.03", "-11.8196, -26.3295, 6.71714, 0.81", "-12.1872, -27.2026, 6.69183, 0.81", "-12.4621, -28.0452, 6.63422, 0.96", "-12.8015, -29.5591, 6.49242, 0.74", "-13.083, -31.5477, 6.28771, 0.52", "-13.1355, -32.3847, 6.17707, 0.88", "-13.132, -33.7125, 5.93048, 0.74", "-13.039, -35.3631, 5.53991, 0.59", "-12.8893, -36.8775, 5.11339, 0.74", "-12.7094, -38.39, 4.67633, 0.59", "-12.5107, -40.3397, 4.11209, 0.74", "-12.4254, -41.9494, 3.64865, 0.81", "-12.4307, -43.2453, 3.2924, 0.52", "-12.486, -44.2868, 3.03906, 0.66", "-12.6126, -45.5888, 2.78403, 0.59", "-12.8084, -46.9875, 2.62731, 0.74", "-13.0269, -48.0899, 2.61866, 0.74", "-13.3618, -49.3943, 2.71062, 0.52", "-13.6794, -50.3949, 2.81217, 0.96", "-13.8835, -51.014, 2.87613, 1.11", "-14.1175, -51.8176, 2.94493, 1.25", "-14.3418, -52.6502, 3.0098, 0.96", "-14.6119, -53.6873, 3.07293, 0.96", "-14.9659, -55.0334, 3.1006, 0.52", "-15.2243, -56.1407, 3.08924, 0.59", "-15.4407, -57.2626, 3.05517, 0.81", "-15.5855, -58.3395, 2.97197, 0.96", "-15.6462, -59.3428, 2.84788, 0.96", "-15.65, -60.759, 2.60156, 0.74", "-15.6009, -62.3151, 2.27406, 0.74", "-15.5753, -63.3484, 2.02236, 1.03", "-15.5572, -64.7402, 1.65539, 1.25", "-15.5259, -65.9518, 1.29907, 0.66", "-15.5048, -66.7866, 1.09554, 0.52", "-15.4971, -67.7161, 0.930696, 0.74", "-15.5159, -68.897, 0.818658, 0.74", "-15.5389, -69.9921, 0.844667, 0.66", "-15.5663, -71.1177, 0.993243, 0.66", "-15.5864, -73.3513, 1.46309, 0.66", "-15.5547, -74.5383, 1.77592, 0.74", "-15.4634, -76.1286, 2.2408, 0.74", "-15.3445, -77.9373, 2.829, 0.88", "-15.3033, -79.0219, 3.19453, 1.11", "-15.2994, -80.2976, 3.62329, 1.11", "-15.3052, -81.8324, 4.08469, 0.88", "-15.3195, -83.308, 4.55446, 0.74", "-15.3196, -85.0379, 5.05477, 0.59", "-15.2605, -86.478, 5.36497, 0.44", "-15.2069, -87.0283, 5.45128, 0.74", "-15.0323, -88.0864, 5.56264, 0.88", "-14.7627, -89.1443, 5.67717, 0.88", "-14.2297, -90.7917, 5.87809, 0.66", "-13.8512, -91.8367, 6.04839, 0.81", "-13.5416, -92.7987, 6.27145, 0.81", "-13.3668, -93.7385, 6.52115, 0.59", "-13.3031, -95.2743, 6.91618, 0.74", "-13.3791, -96.2083, 7.1094, 0.96", "-13.531, -97.1149, 7.22094, 0.96", "-13.802, -98.3574, 7.20956, 0.66", "-14.1561, -99.8983, 7.00648, 0.44", "-14.4154, -101.078, 6.72102, 0.81", "-14.6691, -102.459, 6.28962, 0.81", "-14.9216, -104.282, 5.67402, 0.37", "-15.0336, -105.431, 5.26682, 0.81", "-15.0841, -106.438, 4.92131, 1.03", "-15.0809, -107.433, 4.64137, 0.52", "-15.009, -108.623, 4.43789, 0.29", "-14.9367, -109.211, 4.39287, 0.88", "-14.8703, -109.648, 4.39069, 1.11", "-14.7581, -110.266, 4.37849, 1.18", "-14.586, -111.202, 4.33946, 0.81", "-14.3503, -112.593, 4.24932, 0.44", "-14.2136, -113.497, 4.13804, 0.29", "-14.1058, -114.362, 4.02354, 0.29", "-14.0349, -115.317, 3.89412, 0.59", "-14.0278, -115.682, 3.84877, 0.88", "-14.0529, -116.259, 3.80017, 0.88", "-14.1311, -116.994, 3.80633, 0.59", "-14.2548, -118.025, 3.95101, 0.29", "-14.333, -118.625, 4.08781, 0.66", "-14.4296, -119.306, 4.3067, 0.81", "-14.5322, -120.05, 4.5667, 1.03", "-14.6266, -120.655, 4.77879, 1.18", "-14.7636, -121.338, 5.01549, 1.18", "-14.8603, -121.752, 5.14382, 1.25", "-15.1027, -122.688, 5.38248, 0.96", "-15.3518, -123.582, 5.55613, 0.59", "-15.65, -124.684, 5.70634, 0.37", "-15.8854, -125.593, 5.7756, 0.22", "-16.012, -126.103, 5.78909, 0.29", "-16.2449, -127.118, 5.78149, 0.44", "-16.3862, -127.763, 5.75436, 1.03", "-16.5608, -128.664, 5.71242, 1.18", "-16.6727, -129.333, 5.67226, 1.18", "-16.877, -130.595, 5.58976, 0.59", "-17.0564, -131.543, 5.55893, 0.59", "-17.2437, -132.413, 5.5499, 0.59", "-17.5477, -133.788, 5.51082, 0.81", "-17.6965, -134.454, 5.48293, 0.88", "-18.0286, -135.907, 5.41652, 0.52", "-18.3692, -137.466, 5.34298, 0.52", "-18.6619, -138.903, 5.30236, 0.59", "-18.8686, -140.027, 5.26242, 0.29", "-18.9779, -140.739, 5.22169, 0.29", "-19.0692, -141.483, 5.16857, 0.88", "-19.2108, -142.933, 5.02524, 0.29", "-19.3151, -144.008, 4.88978, 1.03", "-19.4247, -145.004, 4.73351, 1.25", "-19.5392, -145.978, 4.54172, 1.03", "-19.6973, -147.531, 4.13723, 0.44", "-19.7924, -148.576, 3.7831, 0.44", "-19.9191, -149.71, 3.32124, 0.44", "-20.1227, -151.168, 2.64434, 0.44", "-20.3487, -152.587, 1.97678, 0.66", "-20.55, -153.826, 1.35679, 1.55", "-20.7248, -154.88, 0.802964, 1.92", "-20.9386, -156.198, 0.1507, 0.66", "-21.2107, -157.688, -0.509497, 0.59", "-21.4444, -158.73, -0.88956, 0.29", "-21.7796, -159.976, -1.24538, 0.29", "-22.089, -161.022, -1.46399, 0.29", "-22.6187, -162.747, -1.70638, 0.29", "-22.9523, -163.825, -1.80003, 1.25", "-23.2871, -164.958, -1.84404, 1.33", "-23.7294, -166.528, -1.87594, 0.52", "-23.9015, -167.214, -1.87309, 0.52", "-24.0779, -168.164, -1.87082, 0.66", "-24.1933, -169.1, -1.86734, 0.37", "-24.2281, -169.931, -1.85722, 0.29", "-24.2021, -170.655, -1.83778, 0.81", "-24.1148, -171.462, -1.80135, 0.96", "-23.9704, -172.435, -1.7397, 0.59", "-23.828, -173.24, -1.65052, 0.44", "-23.7967, -173.404, -1.62607, 0.37", "-23.5406, -174.852, -1.38013, 0.22", "-23.426, -175.487, -1.25932, 0.52", "-23.3832, -175.729, -1.20976, 0.52", "-23.043, -177.649, -0.775413, 0.22", "-22.9694, -178.047, -0.676203, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.91929, -17.1068, 0.0963994, 1.62", "-8.96407, -17.6626, 0.444978, 1.62", "-9.73794, -18.0742, 0.70317, 1.62", "-10.3333, -18.3909, 0.901812, 1.84", "-10.878, -18.6806, 1.08352, 2.06", "-11.4252, -18.9717, 1.2661, 2.36", "-11.7858, -19.1635, 1.38643, 2.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.00212, 14.9281, 6.16858, 1.25", "-7.42544, 16.6102, 6.21424, 1.25", "-7.64713, 17.5718, 6.42313, 1.4", "-7.80972, 18.3172, 6.65974, 1.4", "-8.01924, 19.3655, 7.04714, 1.47", "-8.0999, 19.769, 7.19628, 1.69", "-8.22595, 20.3996, 7.42935, 1.69", "-8.42444, 21.539, 8.08583, 1.62", "-8.51706, 22.2161, 8.5706, 1.55", "-8.59566, 22.8338, 9.07428, 1.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.00212, 14.9281, 6.16858, 1.77", "-8.4882, 15.9182, 8.22215, 1.77", "-9.91271, 16.8671, 10.1907, 1.62", "-10.7985, 17.4572, 11.4147, 1.55", "-11.6289, 18.0105, 12.5623, 1.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.8905, 40.4121, 0.277928, 0.59", "13.1898, 41.7148, -0.0439731, 0.59", "13.3381, 42.2289, -0.161896, 0.59", "13.5362, 42.7244, -0.276596, 0.74", "13.7817, 43.1779, -0.385184, 0.74", "14.0736, 43.6193, -0.505464, 0.88", "14.3208, 43.9649, -0.604236, 1.03", "14.7598, 44.5167, -0.743872, 0.59", "15.1458, 45.016, -0.866881, 0.88", "15.5125, 45.5427, -1.00661, 0.88", "15.8319, 46.078, -1.16437, 0.66", "16.0651, 46.6277, -1.35749, 0.52", "16.1206, 47.0976, -1.61021, 0.52", "16.0785, 47.7263, -2.07163, 0.52", "15.9384, 48.3411, -2.59599, 0.96", "15.8193, 48.6513, -2.88641, 1.18", "15.6532, 48.9719, -3.20553, 1.18", "14.9994, 50.0061, -4.30319, 0.81", "14.7066, 50.472, -4.79025, 0.59", "14.3792, 51.0679, -5.3973, 0.74", "14.204, 51.4844, -5.77649, 0.66", "14.1084, 51.8597, -6.061, 0.66", "14.0817, 52.3679, -6.40976, 0.66", "14.1791, 53.1287, -6.86188, 0.81", "14.3568, 53.8567, -7.31099, 1.03", "14.5371, 54.3492, -7.62932, 0.96", "14.7535, 54.8785, -7.97693, 0.81", "15.1765, 55.9498, -8.65784, 0.81", "15.3107, 56.3447, -8.87586, 1.03", "15.4318, 56.8701, -9.11134, 1.03", "15.4908, 57.3245, -9.259, 1.11", "15.5162, 57.9073, -9.4023, 1.11", "15.5017, 58.5337, -9.50152, 0.81", "15.4472, 59.5161, -9.56826, 0.74", "15.413, 60.2289, -9.60471, 0.88", "15.3994, 60.8455, -9.63706, 0.88", "15.4129, 61.277, -9.66613, 0.52", "15.4846, 61.9787, -9.72365, 0.37", "15.5208, 62.178, -9.7461, 0.37", "15.6592, 62.7395, -9.83996, 0.37", "15.9212, 63.5526, -10.0031, 0.74", "16.0896, 64.0479, -10.102, 0.96", "16.2182, 64.4815, -10.1875, 1.18", "16.2746, 64.7497, -10.2359, 1.18", "16.3219, 65.4296, -10.323, 0.88", "16.2804, 66.0776, -10.3696, 0.29", "16.1412, 66.8949, -10.3828, 0.88", "15.9792, 67.504, -10.3734, 0.88", "15.764, 68.1399, -10.3437, 0.88", "15.4399, 68.975, -10.3008, 0.59", "15.2229, 69.4991, -10.2682, 0.59", "15.0335, 69.9927, -10.2451, 0.96", "14.82, 70.7211, -10.2302, 0.88", "14.7072, 71.3634, -10.2634, 0.52", "14.6612, 72.1956, -10.3684, 0.52", "14.6891, 72.8502, -10.5155, 0.52", "14.7761, 73.5852, -10.7267, 0.81", "14.8849, 74.172, -10.9143, 0.81", "15.1224, 75.0753, -11.2332, 0.81", "15.2621, 75.5675, -11.4118, 0.59", "15.4466, 76.2894, -11.6701, 0.74", "15.5267, 76.755, -11.8445, 0.88", "15.5659, 77.4805, -12.1125, 0.37", "15.5524, 78.1478, -12.3375, 0.37", "15.5361, 78.626, -12.4735, 0.37", "15.5278, 79.1591, -12.6356, 0.37", "15.5472, 79.5376, -12.7675, 0.37", "15.6141, 80.0236, -12.9794, 0.52", "15.707, 80.3983, -13.1606, 0.81", "15.8451, 80.8165, -13.3489, 0.81", "15.9856, 81.1752, -13.4957, 0.81", "16.1867, 81.6995, -13.6848, 0.74", "16.3398, 82.1549, -13.8198, 0.59", "16.4618, 82.6464, -13.9394, 0.52", "16.5263, 83.0782, -14.0306, 0.88", "16.554, 83.592, -14.1268, 0.88", "16.5408, 84.2368, -14.2374, 0.44", "16.4956, 84.8057, -14.3458, 0.44", "16.441, 85.3033, -14.4682, 0.44", "16.3721, 85.8947, -14.6666, 0.81", "16.3159, 86.4568, -14.8917, 0.81", "16.2773, 87.0121, -15.1387, 0.59", "16.2549, 87.6703, -15.4478, 0.59", "16.2555, 88.0716, -15.6376, 0.88", "16.2737, 88.6596, -15.9095, 0.88", "16.2912, 89.2814, -16.1708, 0.88", "16.2869, 89.6671, -16.2999, 0.96", "16.2521, 90.0695, -16.3899, 0.96", "16.1604, 90.5622, -16.4355, 0.44", "16.0141, 91.0999, -16.4433, 0.44", "15.9079, 91.4662, -16.4296, 0.44", "15.7133, 92.1475, -16.4183, 0.81", "15.5815, 92.6675, -16.4272, 0.81", "15.4096, 93.3998, -16.4521, 1.11", "15.3333, 93.757, -16.4655, 1.11", "15.1937, 94.4763, -16.4876, 0.37", "15.1093, 94.9909, -16.5078, 0.37", "14.9795, 95.8231, -16.5423, 0.52", "14.8986, 96.3396, -16.5588, 0.52", "14.7914, 97.0835, -16.608, 0.88", "14.7288, 97.5573, -16.6641, 0.88", "14.6542, 98.2369, -16.7752, 0.88", "14.6413, 98.6185, -16.8598, 0.96", "14.6975, 99.3161, -17.1067, 0.66", "14.8577, 100.253, -17.5556, 0.66", "14.9826, 100.839, -17.9031, 0.66", "15.0629, 101.242, -18.1716, 0.59", "15.1461, 101.764, -18.5524, 0.74", "15.2084, 102.348, -18.9908, 0.59", "15.241, 102.831, -19.3531, 0.88", "15.2517, 103.332, -19.702, 0.88", "15.2714, 103.835, -20.0599, 0.88", "15.2923, 104.074, -20.2339, 0.88", "15.4001, 104.681, -20.6423, 0.37", "15.5386, 105.125, -20.9026, 0.81", "15.6799, 105.419, -21.0647, 0.81", "16.0855, 106.097, -21.3843, 0.37", "16.3454, 106.502, -21.541, 0.37", "16.6084, 106.927, -21.6626, 0.81", "16.8329, 107.35, -21.7485, 0.81", "16.9704, 107.7, -21.7975, 0.81", "17.0957, 108.169, -21.864, 0.52", "17.1407, 108.503, -21.9183, 0.59", "17.1697, 108.992, -22.0398, 0.44", "17.1852, 109.512, -22.203, 0.59", "17.1947, 110.019, -22.3803, 0.66", "17.2002, 110.839, -22.6715, 0.44", "17.2038, 111.521, -22.9117, 1.33", "17.2089, 111.924, -23.0436, 1.33", "17.2151, 112.632, -23.2454, 0.37", "17.2329, 113.218, -23.3767, 0.29", "17.2519, 113.748, -23.4652, 0.52", "17.2543, 114.029, -23.4857, 0.74", "17.2147, 114.576, -23.4929, 0.44", "17.124, 115.018, -23.4717, 0.74", "16.982, 115.366, -23.4412, 0.74", "16.7267, 115.813, -23.3959, 0.44", "16.4203, 116.254, -23.3836, 0.74", "16.1215, 116.626, -23.4031, 0.74", "15.8939, 116.884, -23.4547, 0.88", "15.5286, 117.294, -23.586, 0.59", "15.2625, 117.605, -23.7102, 0.44", "14.8978, 118.095, -23.9306, 0.74", "14.6923, 118.433, -24.0826, 0.59", "14.3176, 119.162, -24.378, 1.25", "14.2022, 119.408, -24.466, 1.4", "13.9978, 119.848, -24.5932, 0.88", "13.7307, 120.35, -24.6971, 0.59", "13.4693, 120.781, -24.7471, 0.59", "13.1411, 121.25, -24.7693, 0.66", "12.7998, 121.628, -24.747, 0.52", "12.4157, 121.991, -24.7169, 0.37", "12.0108, 122.345, -24.6839, 0.52", "11.8022, 122.521, -24.6676, 0.66", "11.5764, 122.722, -24.6612, 0.66", "11.2321, 123.197, -24.7352, 0.29", "11.0502, 123.682, -24.9207, 0.29", "10.929, 124.128, -25.1765, 0.66", "10.8385, 124.424, -25.4049, 0.66", "10.6872, 124.723, -25.7109, 0.52", "10.3736, 125.047, -26.1816, 0.66", "9.98107, 125.251, -26.6218, 0.81", "9.6157, 125.357, -26.9281, 0.96", "9.189, 125.444, -27.2161, 0.96", "8.59219, 125.556, -27.5441, 0.81", "7.97508, 125.679, -27.8175, 0.74", "7.40857, 125.846, -28.011, 0.52", "6.96889, 126.047, -28.1193, 0.66", "6.67046, 126.241, -28.1641, 0.66", "6.14773, 126.684, -28.1886, 0.37", "5.81573, 127.025, -28.1816, 0.37", "5.19247, 127.757, -28.1632, 0.29", "4.90685, 128.13, -28.1721, 0.52", "4.69103, 128.439, -28.2017, 0.52", "4.40954, 128.867, -28.2682, 0.29", "4.181, 129.216, -28.3349, 0.29", "3.80492, 129.771, -28.4769, 0.59", "3.45821, 130.243, -28.6526, 0.52", "3.16411, 130.667, -28.8425, 0.74", "3.04339, 130.859, -28.9409, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "12.8905, 40.4121, 0.277928, 0.96", "13.3392, 42.1348, 0.878523, 0.96", "13.5542, 42.9243, 1.10029, 0.96", "13.7275, 43.5373, 1.21025, 0.81", "14.0499, 44.807, 1.3076, 0.88", "14.2455, 45.7054, 1.29623, 0.88", "14.3895, 46.5769, 1.24523, 0.81", "14.4763, 47.6131, 1.0745, 0.96", "14.513, 48.6998, 0.8667, 0.74", "14.5288, 49.7967, 0.627592, 0.88", "14.486, 50.782, 0.411332, 0.88", "14.3629, 51.9462, 0.199189, 0.88", "14.1714, 53.0166, 0.0611553, 1.03", "13.8843, 54.0516, 0.0104024, 1.03", "13.5702, 54.8933, 0.0582263, 0.88", "13.0089, 56.0413, 0.225564, 0.96", "12.5955, 56.7138, 0.360846, 1.11", "12.1185, 57.3839, 0.509696, 1.11", "11.459, 58.2531, 0.711532, 1.11", "10.8141, 59.087, 0.907831, 1.11", "9.95395, 60.2459, 1.16354, 1.03", "9.33205, 61.2019, 1.33834, 1.03", "8.69289, 62.3441, 1.51234, 0.96", "8.16302, 63.5283, 1.60927, 1.03", "7.79535, 64.6178, 1.61005, 0.88", "7.6061, 65.4106, 1.55922, 0.88", "7.46093, 66.4158, 1.44722, 1.11", "7.40411, 67.0344, 1.35534, 1.11", "7.31767, 68.7586, 1.14474, 1.03", "7.26786, 70.1134, 1.03283, 0.88", "7.21756, 71.3524, 1.01161, 0.88", "7.141, 72.6785, 1.1164, 0.88", "7.04632, 73.797, 1.32182, 1.03", "6.86184, 75.4641, 1.78525, 0.88", "6.73081, 76.53, 2.19691, 0.96", "6.62134, 77.4755, 2.61012, 1.03", "6.52771, 78.4316, 3.00108, 1.33", "6.46654, 79.4644, 3.35861, 0.74", "6.46585, 80.0974, 3.48965, 0.74", "6.51069, 80.9219, 3.51493, 0.88", "6.65467, 81.9712, 3.43931, 0.88", "6.91364, 83.2264, 3.24597, 0.81", "7.16043, 84.158, 3.05516, 0.88", "7.5328, 85.346, 2.76251, 0.74", "7.80665, 86.1394, 2.55512, 0.74", "8.16927, 87.1815, 2.28213, 0.81", "8.48752, 88.113, 2.03356, 0.81", "8.71107, 88.811, 1.86572, 0.81", "8.96995, 89.8128, 1.62117, 0.81", "9.12035, 90.7166, 1.41722, 0.96", "9.18028, 91.6433, 1.22201, 0.96", "9.1749, 92.5943, 1.04827, 1.03", "9.12815, 93.7761, 0.816769, 0.96", "9.08932, 94.9274, 0.575263, 0.96", "9.05472, 96.3078, 0.294801, 0.96", "9.03119, 97.4753, 0.0365492, 0.96", "9.02577, 98.7196, -0.251517, 0.88", "9.02089, 100.273, -0.606681, 0.81", "9.00298, 101.24, -0.826152, 0.81", "8.95871, 102.227, -1.0348, 0.74", "8.81635, 103.358, -1.25059, 1.03", "8.61772, 104.249, -1.38582, 1.03", "8.24454, 105.392, -1.47799, 1.03", "7.85484, 106.413, -1.47956, 1.11", "7.57948, 107.089, -1.46118, 1.11", "7.06575, 108.407, -1.37668, 0.96", "6.69951, 109.459, -1.27755, 0.96", "6.36478, 110.623, -1.15756, 0.96", "6.02511, 112.139, -0.996025, 0.88", "5.8321, 113.276, -0.877228, 1.18", "5.64393, 114.582, -0.733824, 0.96", "5.49266, 115.659, -0.607044, 0.88", "5.33719, 116.765, -0.456805, 0.88", "5.18297, 117.893, -0.277382, 0.88", "5.06468, 118.779, -0.121777, 0.96", "4.91647, 119.91, 0.0838414, 0.96", "4.76408, 121.043, 0.278223, 0.96", "4.6162, 122.282, 0.461476, 1.03", "4.52439, 123.332, 0.58705, 0.96", "4.48123, 124.624, 0.688773, 0.88", "4.51938, 125.777, 0.730022, 0.81", "4.61754, 126.809, 0.722507, 0.96", "4.80717, 128.314, 0.659234, 0.81", "4.89203, 128.996, 0.62249, 0.81", "4.9724, 129.787, 0.599115, 0.81", "5.02571, 130.957, 0.627091, 0.88", "5.00204, 131.787, 0.699043, 0.88", "4.8903, 132.581, 0.829812, 0.88", "4.68135, 133.345, 1.01577, 0.74", "4.28001, 134.41, 1.30835, 0.88", "3.69935, 135.712, 1.71513, 1.33", "3.37743, 136.4, 1.93454, 1.33", "2.98492, 137.316, 2.20631, 1.11", "2.69663, 138.112, 2.39588, 0.96", "2.49288, 138.83, 2.51663, 0.96", "2.24364, 140.048, 2.66353, 0.74", "2.12292, 140.953, 2.72567, 0.74", "2.03799, 141.905, 2.7444, 0.74", "1.97133, 142.922, 2.72434, 0.74", "1.89716, 144.129, 2.66109, 1.03", "1.82593, 145.051, 2.57508, 1.03", "1.73237, 145.975, 2.4619, 1.03", "1.62063, 146.785, 2.35949, 0.88", "1.44092, 147.874, 2.22161, 0.88", "1.27569, 148.846, 2.1047, 1.03", "1.11222, 149.922, 1.94509, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.38305, 41.0995, 0.732838, 0.66", "1.70185, 56.0961, 0.732838, 0.66", "2.02065, 71.0928, 0.732838, 0.66" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-11.7858, -19.1635, 1.38643, 0.96", "-12.6418, -20.3791, 1.70575, 0.96", "-13.377, -21.3221, 1.93078, 0.96", "-13.9795, -22.0373, 2.0807, 1.11", "-14.3907, -22.5184, 2.11825, 1.25", "-14.7425, -22.9367, 2.10267, 1.25", "-15.3976, -23.7509, 2.01591, 1.03", "-15.9262, -24.3875, 1.86738, 0.96", "-16.402, -25.013, 1.63498, 1.18", "-17.2197, -26.1444, 1.12583, 1.03", "-17.6965, -26.8427, 0.7757, 1.03", "-18.1344, -27.5367, 0.391728, 0.88", "-18.4609, -28.1193, 0.0252774, 1.11", "-18.8233, -28.8523, -0.468012, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.7858, -19.1635, 1.38643, 1.92", "-12.9123, -18.1422, 1.15792, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-8.59566, 22.8338, 9.07428, 0.88", "-8.89093, 23.4147, 8.48484, 0.88", "-9.09064, 23.9481, 7.90644, 0.81", "-9.20562, 24.3454, 7.49995, 0.81", "-9.37259, 25.0967, 6.76352, 0.66", "-9.49142, 25.6339, 6.24923, 1.11", "-9.61077, 26.0642, 5.83843, 1.11", "-9.9246, 27.0184, 4.9465, 0.88", "-10.1329, 27.4789, 4.52626, 1.03", "-10.5749, 28.1672, 3.88676, 1.11", "-11.0429, 28.6689, 3.46294, 0.88", "-11.785, 29.1542, 3.08155, 0.88", "-12.5708, 29.462, 2.89599, 0.81", "-13.291, 29.6372, 2.85312, 0.88", "-14.0078, 29.747, 2.83936, 1.11", "-15.3217, 29.8935, 2.86506, 1.33", "-16.0066, 29.9808, 2.84916, 0.96", "-16.687, 30.1142, 2.77205, 1.11", "-17.0531, 30.2226, 2.66539, 0.88", "-17.7705, 30.5214, 2.34171, 0.74", "-18.3338, 30.832, 2.00174, 1.03", "-19.1007, 31.3493, 1.3995, 1.11", "-19.5131, 31.7143, 1.01532, 1.11", "-19.9053, 32.1614, 0.567829, 1.11", "-20.1474, 32.5806, 0.162155, 1.25", "-20.3698, 33.2542, -0.503089, 1.25", "-20.4843, 33.9454, -1.25391, 0.88", "-20.5368, 34.5412, -1.93886, 0.81", "-20.5798, 35.0015, -2.48199, 0.81", "-20.7036, 36.001, -3.68232, 1.03", "-20.8528, 36.7899, -4.66729, 1.18", "-21.0592, 37.4382, -5.49298, 1.33", "-21.3627, 37.9819, -6.18134, 1.18", "-21.8371, 38.5088, -6.83632, 1.18", "-22.1757, 38.791, -7.14831, 1.18", "-22.6355, 39.1177, -7.42854, 1.03", "-23.0474, 39.4179, -7.618, 0.96", "-23.5711, 39.8095, -7.80991, 0.96", "-24.1231, 40.2646, -8.09618, 1.11", "-24.5085, 40.6614, -8.42671, 1.11", "-24.9915, 41.2545, -8.94284, 1.03", "-25.4306, 41.846, -9.47301, 1.47", "-25.7695, 42.3114, -9.88477, 1.84", "-26.9095, 43.8173, -11.188, 1.33", "-27.8207, 44.9214, -12.1245, 0.88", "-28.4828, 45.6196, -12.7038, 1.03", "-29.0104, 46.0919, -13.0756, 0.88", "-29.7124, 46.6138, -13.4124, 0.81", "-30.541, 47.1158, -13.6243, 0.88", "-31.1674, 47.4187, -13.6875, 1.25", "-31.8083, 47.6931, -13.7535, 1.4", "-32.2391, 47.8904, -13.8363, 1.62", "-32.7541, 48.1866, -14.0054, 1.33", "-33.2628, 48.5738, -14.2713, 1.03", "-34.3637, 49.6882, -15.1047, 0.88", "-34.7262, 50.1831, -15.476, 0.88", "-35.0304, 50.7691, -15.8977, 0.81", "-35.334, 51.6532, -16.4949, 0.96", "-35.4593, 52.4055, -16.9523, 0.96", "-35.4545, 53.0304, -17.2689, 1.11", "-35.3487, 53.6242, -17.4855, 1.11", "-35.2055, 54.1753, -17.6363, 1.11", "-35.0787, 54.6128, -17.7266, 1.18", "-34.9479, 55.1273, -17.7913, 1.11", "-34.8168, 55.8637, -17.8667, 0.88", "-34.7645, 56.6032, -17.96, 0.81", "-34.8204, 57.0756, -18.0593, 0.81", "-35.0826, 57.6415, -18.2512, 0.81", "-35.512, 58.0502, -18.4866, 0.96", "-35.8914, 58.2472, -18.6702, 0.96", "-36.5771, 58.4722, -18.9605, 0.74", "-37.0026, 58.5768, -19.1331, 0.74", "-37.4299, 58.6775, -19.3031, 1.03", "-37.9268, 58.8155, -19.5022, 1.25", "-38.278, 58.9558, -19.6388, 1.4", "-38.9203, 59.3317, -19.8641, 1.18", "-39.6008, 59.8677, -20.0873, 0.88", "-40.0982, 60.3579, -20.2491, 0.81", "-40.4768, 60.814, -20.3426, 0.81", "-41.0861, 61.6604, -20.4286, 0.81", "-41.6262, 62.4806, -20.4594, 1.03", "-41.9002, 62.925, -20.4511, 1.25", "-42.2011, 63.4342, -20.4128, 1.4", "-42.7057, 64.2922, -20.3277, 1.03", "-43.1824, 65.0868, -20.2451, 0.88", "-43.4651, 65.5457, -20.206, 1.11", "-43.8398, 66.1565, -20.1693, 1.11", "-44.2714, 66.877, -20.1477, 0.96", "-44.6186, 67.4674, -20.1529, 1.33", "-44.8851, 67.9266, -20.1907, 1.33", "-45.1999, 68.486, -20.2639, 1.11", "-45.5762, 69.1382, -20.3877, 0.88", "-45.9488, 69.7293, -20.5311, 0.88", "-46.2748, 70.1872, -20.6572, 1.11", "-46.6542, 70.6764, -20.7889, 1.11", "-47.1074, 71.2298, -20.9281, 0.59", "-47.4985, 71.693, -21.0343, 0.52", "-47.9999, 72.2797, -21.1498, 0.81", "-48.6895, 73.1023, -21.2754, 0.96", "-49.2166, 73.7448, -21.3359, 1.25", "-49.5746, 74.1854, -21.3523, 1.47", "-49.9393, 74.6326, -21.352, 1.47", "-50.4499, 75.2734, -21.3424, 1.03", "-50.7895, 75.7187, -21.3381, 1.03", "-51.4473, 76.6471, -21.335, 1.03", "-51.9148, 77.4004, -21.3377, 0.96", "-52.31, 78.1833, -21.3398, 0.74", "-52.5991, 79.0295, -21.3413, 0.74", "-52.726, 79.858, -21.3398, 1.03", "-52.713, 80.5193, -21.3368, 1.03", "-52.5261, 81.4589, -21.33, 0.81", "-52.2554, 82.3018, -21.3225, 0.81", "-51.8012, 83.4104, -21.3114, 0.74", "-51.4256, 84.2144, -21.3029, 1.03", "-51.1467, 84.7762, -21.2923, 1.03", "-50.7161, 85.6622, -21.2697, 0.96", "-50.4068, 86.3729, -21.2544, 1.4", "-50.1612, 87.0524, -21.2386, 1.25", "-49.9556, 87.8197, -21.2292, 0.81", "-49.8528, 88.4197, -21.23, 0.59", "-49.7811, 89.1917, -21.2388, 0.59", "-49.769, 90.2502, -21.2429, 0.74", "-49.7952, 90.9382, -21.2367, 0.81", "-49.8582, 91.6472, -21.2142, 0.81", "-49.9602, 92.4497, -21.1757, 0.66", "-50.1049, 93.3149, -21.1243, 0.88", "-50.3146, 94.2709, -21.0507, 0.96", "-50.5322, 95.0552, -20.9755, 0.74", "-50.8158, 95.8678, -20.8935, 0.96", "-51.1106, 96.5606, -20.8127, 0.96", "-51.4613, 97.2388, -20.731, 0.88", "-51.9823, 98.0752, -20.64, 0.88", "-52.3782, 98.649, -20.5916, 0.74", "-52.767, 99.1929, -20.552, 1.03", "-52.9746, 99.4951, -20.5335, 1.03", "-53.3996, 100.167, -20.4853, 0.81", "-53.9979, 101.261, -20.4307, 1.03", "-54.2823, 101.883, -20.4129, 0.88", "-54.5108, 102.495, -20.4086, 0.88", "-54.7517, 103.289, -20.4157, 1.11", "-54.9503, 104.059, -20.4339, 0.96", "-55.1239, 104.887, -20.4629, 0.81", "-55.2512, 105.643, -20.4929, 0.81", "-55.4332, 106.92, -20.5432, 0.88", "-55.5477, 107.798, -20.5762, 1.11", "-55.6245, 108.4, -20.5946, 1.11", "-55.7009, 108.947, -20.606, 0.96", "-55.8, 109.545, -20.6051, 0.96", "-55.9469, 110.275, -20.6029, 0.66", "-56.1464, 111.091, -20.5995, 0.81", "-56.4873, 112.244, -20.5941, 0.88", "-56.8816, 113.396, -20.5884, 1.11", "-57.1355, 114.041, -20.584, 1.03", "-57.3258, 114.468, -20.5688, 1.03", "-57.6763, 115.181, -20.521, 0.96", "-57.9796, 115.772, -20.4609, 0.96", "-58.3814, 116.554, -20.3408, 1.18", "-58.6494, 117.157, -20.2244, 1.03", "-58.9199, 117.935, -20.0513, 0.96", "-59.0387, 118.452, -19.919, 0.59", "-59.0994, 119.026, -19.7559, 0.59", "-59.0925, 119.571, -19.595, 0.81", "-58.9827, 120.451, -19.3441, 1.11", "-58.8918, 120.887, -19.2184, 1.11", "-58.7135, 121.527, -19.0409, 0.81", "-58.5227, 122.124, -18.871, 0.96", "-58.2791, 122.842, -18.6676, 0.81", "-58.0649, 123.457, -18.4996, 0.96", "-57.8208, 124.129, -18.3077, 0.96", "-57.6071, 124.671, -18.1607, 1.03", "-57.4586, 125.042, -18.0658, 1.03", "-57.2928, 125.492, -17.9614, 0.96", "-57.1498, 126.007, -17.8592, 0.96", "-57.0245, 126.742, -17.7326, 0.74", "-56.981, 127.443, -17.6397, 0.74", "-57.0084, 128.105, -17.5675, 0.96", "-57.1204, 128.951, -17.4951, 0.96", "-57.3199, 129.843, -17.4429, 1.11", "-57.4387, 130.244, -17.4327, 1.11", "-57.6986, 131.019, -17.44, 0.74", "-57.9291, 131.686, -17.444, 0.74", "-58.232, 132.621, -17.4377, 0.74", "-58.524, 133.629, -17.4163, 0.81", "-58.7418, 134.5, -17.3884, 0.96", "-58.9295, 135.382, -17.3521, 1.03", "-59.1125, 136.328, -17.3006, 1.11", "-59.2412, 137.111, -17.22, 0.88", "-59.3508, 137.919, -17.1079, 0.88", "-59.4282, 138.587, -16.9956, 0.81", "-59.4799, 139.086, -16.9041, 0.81", "-59.5722, 139.95, -16.751, 0.66", "-59.7019, 141.093, -16.5488, 0.66", "-59.8025, 141.887, -16.3968, 0.88", "-59.8878, 142.491, -16.2752, 1.11", "-60.0317, 143.377, -16.0957, 0.96", "-60.1913, 144.2, -15.9247, 0.96", "-60.3328, 144.819, -15.7963, 0.66", "-60.5924, 145.731, -15.6135, 0.59", "-60.8521, 146.537, -15.4298, 0.59", "-61.1161, 147.334, -15.2448, 0.74", "-61.338, 148.024, -15.0882, 0.74", "-61.4805, 148.532, -14.9964, 0.81", "-61.596, 148.992, -14.9376, 0.81", "-61.7799, 149.812, -14.842, 0.59", "-61.9939, 150.883, -14.6854, 0.74", "-62.1102, 151.504, -14.5708, 0.74", "-62.309, 152.62, -14.3325, 1.03", "-62.4165, 153.269, -14.1659, 0.52", "-62.5064, 153.878, -13.9818, 0.52", "-62.6116, 154.715, -13.6839, 0.88", "-62.7016, 155.574, -13.3453, 0.59", "-62.7519, 156.25, -13.0513, 0.44", "-62.7744, 156.861, -12.7752, 0.74", "-62.7845, 157.464, -12.5257, 0.74", "-62.8137, 158.299, -12.2108, 0.66", "-62.8567, 159.003, -11.978, 0.59", "-62.9526, 159.787, -11.7197, 0.59", "-63.0714, 160.346, -11.5136, 0.59", "-63.3079, 161.099, -11.2204, 0.59", "-63.6395, 161.955, -10.8782, 0.81", "-63.8737, 162.512, -10.6578, 0.81", "-64.2693, 163.448, -10.2896, 0.74", "-64.6428, 164.393, -9.89787, 0.66", "-64.8352, 164.931, -9.64738, 0.59", "-65.0881, 165.742, -9.25713, 0.59", "-65.2913, 166.482, -8.89957, 0.96", "-65.4269, 166.997, -8.64749, 0.96", "-65.7664, 168.241, -8.07132, 0.88", "-65.983, 168.938, -7.75994, 0.66", "-66.1886, 169.5, -7.50929, 0.37", "-66.3572, 169.909, -7.34046, 0.44", "-66.5832, 170.419, -7.1693, 0.44", "-66.8687, 171.023, -7.02911, 0.44", "-67.2535, 171.746, -6.93427, 0.44", "-67.715, 172.508, -6.8598, 0.44", "-68.2114, 173.24, -6.78492, 0.44", "-68.6837, 173.929, -6.7123, 0.52", "-68.9577, 174.375, -6.66627, 0.52", "-69.2379, 174.929, -6.61658, 0.52", "-69.5114, 175.579, -6.58688, 0.59", "-69.6786, 176.006, -6.57355, 0.59", "-69.9971, 176.738, -6.5604, 0.59", "-70.4474, 177.71, -6.55207, 0.44", "-70.9211, 178.652, -6.55194, 0.44", "-71.5682, 179.744, -6.56703, 0.44", "-71.8892, 180.15, -6.58331, 0.44", "-72.7721, 180.621, -6.65214, 0.44", "-73.4832, 180.63, -6.70858, 0.37", "-74.2411, 180.456, -6.76393, 0.37", "-74.9784, 180.169, -6.81306, 1.25", "-75.7771, 179.783, -6.86345, 0.37", "-76.2866, 179.525, -6.87128, 0.37", "-76.5167, 179.411, -6.85573, 0.59", "-76.9727, 179.207, -6.77984, 0.59", "-77.3595, 179.039, -6.6677, 0.29", "-77.9745, 178.78, -6.44635, 0.29", "-78.6764, 178.556, -6.14241, 0.66", "-79.174, 178.419, -5.88727, 1.11", "-79.5933, 178.316, -5.64349, 1.33", "-80.0956, 178.205, -5.29524, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.59566, 22.8338, 9.07428, 0.81", "-8.68846, 24.8113, 8.9606, 0.81", "-8.80092, 26.3425, 8.83407, 0.96", "-8.97387, 27.8781, 8.69552, 0.88", "-9.10058, 28.6468, 8.6269, 0.88", "-9.35222, 29.8239, 8.52651, 1.03", "-9.55375, 30.5684, 8.46789, 1.03", "-10.0756, 31.9219, 8.34595, 0.96", "-10.6338, 33.0453, 8.26506, 0.96", "-11.3195, 34.133, 8.18903, 1.11", "-11.9526, 34.9407, 8.12962, 1.18", "-12.9262, 35.9749, 8.0559, 1.18", "-13.6265, 36.6409, 8.01399, 1.4", "-14.1272, 37.0952, 8.01271, 1.25", "-14.9127, 37.8118, 8.04225, 0.88", "-15.681, 38.5585, 8.09562, 1.18", "-16.1078, 39.0272, 8.16454, 1.47", "-16.5929, 39.6346, 8.28761, 1.33", "-17.5613, 40.9498, 8.60194, 0.96", "-18.0281, 41.6254, 8.77911, 1.18", "-18.462, 42.2755, 8.96538, 1.18", "-19.3211, 43.4989, 9.30721, 1.18", "-19.6265, 43.8919, 9.41024, 1.33", "-20.192, 44.5288, 9.55643, 0.96", "-20.6607, 44.9858, 9.63295, 0.81", "-21.1853, 45.4503, 9.70544, 0.81", "-21.95, 46.0696, 9.78225, 1.11", "-22.411, 46.4379, 9.80035, 1.11", "-22.9093, 46.8908, 9.80072, 0.88", "-23.2021, 47.2356, 9.78663, 0.88", "-23.5038, 47.7347, 9.7511, 0.88", "-23.9001, 48.7701, 9.63891, 1.11", "-24.0172, 49.3948, 9.51641, 1.11", "-24.109, 50.4582, 9.26352, 1.11", "-24.1547, 51.545, 8.94275, 1.03", "-24.1812, 52.5174, 8.62457, 1.4", "-24.2102, 53.3637, 8.29894, 1.62", "-24.292, 54.8309, 7.67696, 0.88", "-24.3988, 55.7569, 7.26724, 0.88", "-24.6148, 56.8487, 6.83024, 0.88", "-24.8708, 57.7332, 6.53966, 1.03", "-25.2763, 58.7643, 6.30015, 0.81", "-25.5978, 59.3555, 6.30983, 0.96", "-25.9977, 59.8525, 6.51544, 0.81", "-26.9299, 60.681, 7.2319, 1.25", "-27.9217, 61.3567, 8.1449, 1.25", "-28.4104, 61.6251, 8.59779, 0.96", "-29.3523, 62.085, 9.45279, 0.96", "-30.0726, 62.4132, 10.036, 0.96", "-30.5814, 62.6599, 10.3767, 0.96", "-31.358, 63.1116, 10.7496, 0.81", "-31.9602, 63.5733, 10.9566, 0.96", "-32.7434, 64.3256, 11.1757, 0.96", "-33.0894, 64.7008, 11.2479, 1.11", "-33.7556, 65.4706, 11.379, 1.11", "-34.4378, 66.3163, 11.4729, 0.96", "-35.1629, 67.2803, 11.5378, 0.81", "-35.9732, 68.449, 11.5712, 1.03", "-36.5673, 69.3878, 11.6122, 1.18", "-37.2232, 70.5055, 11.6934, 1.18", "-37.9185, 71.8721, 11.8304, 1.03", "-38.2558, 72.6785, 11.948, 1.11", "-38.4998, 73.5181, 12.1365, 1.11", "-38.7252, 74.9371, 12.6035, 0.96", "-38.7757, 75.5709, 12.8741, 0.96", "-38.8229, 76.4258, 13.3216, 0.74", "-38.9054, 77.1797, 13.7895, 0.74", "-39.1923, 78.3154, 14.5364, 0.96", "-39.5294, 78.9944, 14.9787, 0.88", "-40.0631, 79.5413, 15.2607, 0.74", "-40.76, 79.9388, 15.3982, 0.74", "-41.5322, 80.2523, 15.4135, 0.81", "-42.5559, 80.6192, 15.3219, 0.88", "-43.1874, 80.8413, 15.2248, 0.88", "-43.7907, 81.0721, 15.1122, 1.03", "-44.6461, 81.4268, 14.9537, 1.03", "-45.8473, 81.9348, 14.8188, 0.96", "-46.6158, 82.2491, 14.7929, 0.96", "-47.5486, 82.6006, 14.8413, 0.81", "-48.1951, 82.8214, 14.9107, 0.81", "-49.0538, 83.0884, 15.0399, 0.81", "-50.3135, 83.4454, 15.277, 0.88", "-51.0289, 83.6377, 15.4088, 0.88", "-52.0133, 83.9341, 15.5779, 0.88", "-52.8012, 84.2388, 15.712, 0.96", "-53.4373, 84.5717, 15.836, 0.96", "-54.0705, 84.994, 15.9738, 0.81", "-54.6113, 85.4212, 16.0972, 0.96", "-55.1682, 85.9103, 16.2655, 0.96", "-55.7925, 86.5125, 16.5463, 0.88", "-56.3872, 87.106, 16.9175, 0.88", "-56.8109, 87.5597, 17.2544, 0.96", "-57.213, 88.0349, 17.6692, 0.96", "-57.7432, 88.768, 18.3492, 0.81", "-58.2309, 89.514, 19.0636, 0.81", "-58.6255, 90.1496, 19.6112, 0.88", "-58.9597, 90.7261, 20.0228, 0.81", "-59.3711, 91.5145, 20.4658, 0.81", "-59.8215, 92.4351, 20.8077, 0.96", "-60.166, 93.1293, 20.9438, 0.81", "-60.8068, 94.3405, 21.0385, 0.74", "-61.2591, 95.1434, 21.0228, 0.74", "-61.8078, 96.0315, 20.9282, 0.74", "-62.416, 96.9894, 20.7145, 0.88", "-62.714, 97.4706, 20.5687, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.6289, 18.0105, 12.5623, 0.74", "-12.967, 17.1091, 13.6246, 0.74", "-13.348, 16.8048, 13.9456, 0.88", "-14.1046, 16.1757, 14.5339, 0.81", "-15.0359, 15.2277, 15.3641, 0.52", "-15.4119, 14.8632, 15.6275, 0.44", "-15.9466, 14.3865, 15.9073, 0.44", "-16.3555, 14.0384, 15.9334, 0.29", "-16.7812, 13.811, 15.83, 0.29", "-18.0111, 13.5899, 15.16, 1.4", "-19.5824, 13.4391, 14.1155, 0.29", "-20.0818, 13.4174, 13.7684, 0.29", "-20.8676, 13.438, 13.1738, 0.37", "-21.3555, 13.4985, 12.7768, 0.44", "-21.8969, 13.6192, 12.3018, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.6289, 18.0105, 12.5623, 2.28", "-12.3036, 19.7131, 12.9318, 2.28", "-12.7626, 20.8716, 13.1832, 1.4", "-13.0608, 21.6241, 13.3466, 1.4", "-13.5119, 22.7625, 13.5937, 1.4", "-13.8038, 23.4994, 13.7536, 1.4", "-14.1043, 24.2577, 13.9182, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.11222, 149.922, 1.94509, 0.59", "1.29814, 151.82, 1.17049, 0.59", "1.35168, 152.84, 0.827256, 0.59", "1.38527, 154.235, 0.474332, 0.59", "1.39217, 154.773, 0.368902, 0.59", "1.40087, 155.765, 0.165604, 0.81", "1.4069, 156.633, -0.00479829, 0.88", "1.40633, 157.498, -0.109161, 0.88", "1.36072, 158.823, -0.249553, 0.66", "1.30296, 159.726, -0.306845, 0.88", "1.19296, 160.93, -0.339737, 0.96", "1.07218, 161.89, -0.342616, 0.81", "0.961515, 162.484, -0.324651, 0.81", "0.67223, 163.496, -0.256301, 0.66", "0.299587, 164.345, -0.152284, 0.74", "-0.315874, 165.327, 0.0757814, 0.44", "-0.848393, 165.953, 0.307739, 0.44", "-1.20638, 166.294, 0.453612, 0.81", "-1.61573, 166.66, 0.615073, 0.96", "-2.02864, 167.042, 0.77433, 0.74", "-2.5578, 167.622, 0.997023, 0.74", "-3.0479, 168.286, 1.12855, 0.88", "-3.61862, 169.249, 1.19252, 1.03", "-4.05901, 170.115, 1.12893, 0.88", "-4.48605, 171.054, 0.987483, 0.74", "-4.87346, 171.987, 0.805461, 0.88", "-5.66969, 174.076, 0.340431, 0.66", "-6.15692, 175.466, 0.0293293, 1.03", "-6.61709, 176.899, -0.279865, 0.88", "-7.00738, 178.292, -0.503973, 1.03", "-7.24224, 179.261, -0.600103, 1.03", "-7.46261, 180.374, -0.624906, 0.88", "-7.63414, 181.426, -0.53098, 0.81", "-7.79673, 182.406, -0.412892, 0.81", "-8.10116, 183.927, -0.195627, 0.66", "-8.30405, 184.718, -0.100023, 0.66", "-8.6691, 185.798, -0.0166317, 1.03", "-8.95718, 186.484, 0.00670271, 0.81", "-9.41705, 187.46, -0.0213685, 0.59", "-9.95013, 188.513, -0.141867, 0.59", "-10.2896, 189.154, -0.296738, 0.59", "-10.7108, 189.895, -0.563406, 0.59", "-11.1314, 190.582, -0.869603, 0.59", "-11.8582, 191.709, -1.40975, 0.59", "-12.6074, 192.831, -1.92069, 1.18", "-13.2445, 193.737, -2.31118, 1.33", "-14.1584, 194.973, -2.82198, 0.74", "-14.6759, 195.661, -3.06742, 0.74", "-15.2233, 196.402, -3.31561, 0.74", "-16.0345, 197.596, -3.70016, 0.88", "-16.441, 198.345, -3.89892, 0.88", "-16.6775, 198.898, -4.02234, 1.03", "-17.042, 199.946, -4.24303, 0.74", "-17.3273, 200.815, -4.412, 0.74", "-17.7794, 202.075, -4.6182, 0.59", "-18.236, 203.104, -4.71971, 0.74", "-18.8095, 204.136, -4.6988, 0.74", "-19.2057, 204.759, -4.69455, 0.74", "-19.9677, 205.837, -4.72838, 0.88", "-20.5068, 206.539, -4.75046, 1.03", "-21.154, 207.297, -4.78003, 0.74", "-21.9354, 208.114, -4.91573, 0.59", "-23.322, 209.471, -5.2866, 0.59", "-24.1115, 210.215, -5.62675, 0.74", "-24.5897, 210.655, -5.87166, 0.96", "-25.208, 211.187, -6.21278, 0.88", "-25.986, 211.756, -6.61333, 0.74", "-27.1785, 212.563, -7.22561, 1.55", "-28.2328, 213.288, -7.74362, 1.99", "-29.2257, 214.084, -8.3177, 0.74", "-29.9061, 214.833, -8.82047, 0.59", "-30.5127, 215.869, -9.4185, 0.88", "-30.9507, 217.066, -9.97061, 0.81", "-31.1391, 217.898, -10.3187, 0.81", "-31.2826, 218.921, -10.8466, 0.74", "-31.3989, 220.016, -11.5053, 0.74", "-31.5374, 220.908, -12.1139, 0.66", "-31.6766, 221.618, -12.6443, 0.66", "-32.0209, 222.892, -13.6048, 1.47", "-32.7729, 225.268, -15.4267, 1.18", "-33.0698, 226.122, -16.073, 1.03", "-33.7003, 227.989, -17.4506, 1.03", "-34.0069, 229.023, -18.1249, 0.74", "-34.2885, 230.226, -18.7579, 1.03", "-34.3626, 230.67, -18.9111, 1.25", "-34.5416, 232.042, -19.1893, 0.66", "-34.6608, 233.161, -19.3791, 0.66", "-34.8065, 234.503, -19.5243, 0.81", "-34.982, 235.472, -19.6483, 0.66", "-35.2225, 236.373, -19.7939, 0.66", "-35.8053, 238.01, -20.0716, 0.66", "-36.1965, 238.903, -20.226, 0.52", "-36.5897, 239.702, -20.3676, 0.66", "-36.8715, 240.276, -20.4789, 0.81", "-37.3355, 241.31, -20.5683, 0.52", "-37.6626, 242.164, -20.5098, 0.52", "-37.9785, 243.182, -20.3304, 0.88", "-38.1751, 243.963, -20.1718, 0.88", "-38.3617, 244.898, -19.9909, 0.59", "-38.5568, 246.395, -19.7596, 0.74", "-38.6333, 247.592, -19.8647, 0.44", "-38.6648, 248.538, -20.2771, 0.44", "-38.6981, 249.257, -20.7413, 0.44", "-38.7464, 250.225, -21.47, 0.44", "-38.7889, 251.224, -22.3213, 1.11", "-38.935, 253.862, -24.6727, 0.88", "-39.001, 255.177, -25.8, 0.44", "-39.0575, 256.052, -26.4694, 0.66", "-39.1228, 256.726, -26.8941, 0.44", "-39.2659, 257.882, -27.3929, 0.44", "-39.3939, 259.027, -27.6457, 0.44", "-39.5084, 260.489, -27.6814, 0.59", "-39.6154, 261.868, -27.618, 0.59", "-39.7643, 263.171, -27.5231, 0.52", "-39.9732, 264.319, -27.3945, 0.37", "-40.2994, 265.495, -27.2021, 0.37", "-40.6076, 266.271, -27.0716, 0.37", "-41.1267, 267.106, -26.9221, 0.37", "-41.7458, 267.851, -26.7823, 0.37", "-42.3034, 268.408, -26.6877, 0.74", "-43.2001, 269.143, -26.5602, 0.66", "-43.9823, 269.69, -26.4627, 0.66", "-45.1612, 270.434, -26.332, 0.44", "-45.9801, 270.906, -26.25, 0.37", "-46.4546, 271.177, -26.2035, 0.37", "-47.3245, 271.638, -26.1333, 0.29", "-47.8069, 271.823, -26.1021, 0.29", "-48.477, 271.897, -26.0725, 1.03", "-49.1166, 271.731, -26.0822, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.11222, 149.922, 1.94509, 0.59", "1.5429, 151.039, 2.35589, 0.59", "1.76176, 151.83, 2.58687, 0.81", "1.92607, 152.94, 2.83453, 0.88", "1.97513, 153.74, 2.97697, 0.59", "1.9756, 154.336, 3.04551, 0.59", "1.9651, 155.19, 3.11137, 0.96", "1.92672, 155.663, 3.12663, 1.11", "1.82147, 156.67, 3.12, 0.66", "1.74242, 157.401, 3.07381, 0.66", "1.64229, 158.532, 3.06839, 0.66", "1.60522, 159.401, 3.11036, 0.59", "1.6131, 160.103, 3.19346, 0.59", "1.67526, 161.105, 3.36338, 0.59", "1.76712, 161.963, 3.53916, 0.59", "1.97287, 163.512, 3.90284, 0.66", "2.08019, 164.25, 4.09822, 0.66", "2.20067, 165.184, 4.34754, 0.52", "2.29679, 165.973, 4.55, 0.52", "2.37414, 166.784, 4.74769, 0.52", "2.41769, 167.4, 4.87771, 0.74", "2.4418, 167.955, 4.94546, 0.74", "2.47616, 168.615, 5.01376, 0.88", "2.52607, 169.072, 5.04836, 0.88", "2.7864, 170.2, 5.11246, 0.59", "3.00327, 170.714, 5.11121, 0.81", "3.39905, 171.33, 5.0726, 0.59", "3.95885, 172.009, 4.99914, 0.74", "4.54032, 172.624, 4.89636, 0.74", "5.14701, 173.219, 4.75485, 0.74", "5.82777, 173.873, 4.57071, 0.59", "6.44827, 174.465, 4.39753, 0.59", "7.09912, 175.104, 4.21093, 0.81", "7.67802, 175.718, 4.022, 0.81", "8.43592, 176.626, 3.74159, 0.59", "8.86709, 177.213, 3.5662, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-18.8233, -28.8523, -0.468012, 0.74", "-18.8931, -31.3992, -3.84867, 0.74", "-18.8861, -33.3218, -5.86557, 0.88", "-18.8717, -36.6848, -8.72168, 1.03", "-18.9001, -38.0743, -9.69252, 0.96", "-19.005, -39.8288, -10.7288, 0.66", "-19.1749, -41.4671, -11.5699, 0.88", "-19.3896, -42.9252, -11.9432, 0.81", "-19.7264, -44.256, -12.089, 0.81", "-20.2838, -45.7231, -12.1114, 0.66", "-20.9039, -46.9844, -12.1627, 0.66", "-21.5285, -48.1247, -12.2728, 0.74", "-22.4176, -49.682, -12.4962, 0.59", "-22.901, -50.611, -12.6373, 0.52", "-23.2913, -51.514, -12.7711, 0.52", "-23.9091, -53.3772, -13.0154, 0.88", "-24.2488, -54.7299, -13.1598, 0.88", "-24.5482, -56.18, -13.2754, 0.74", "-24.9589, -58.2514, -13.39, 0.74", "-25.2198, -59.422, -13.4399, 0.74", "-25.7219, -61.2447, -13.4905, 0.81", "-26.2516, -62.7363, -13.485, 0.81", "-26.9021, -64.2114, -13.4226, 0.66", "-27.6407, -65.6382, -13.3378, 0.74", "-28.4009, -66.935, -13.2472, 0.74", "-29.1862, -68.2051, -13.1798, 0.81", "-29.8928, -69.3507, -13.1393, 0.81", "-30.3906, -70.2013, -13.125, 0.74", "-31.0368, -71.473, -13.1312, 0.52", "-31.4889, -72.5483, -13.1595, 0.52", "-32.0228, -74.1018, -13.2321, 0.52", "-32.4422, -75.5557, -13.287, 1.03", "-32.6741, -76.4703, -13.3178, 1.03", "-32.9448, -77.588, -13.3236, 0.81", "-33.1709, -78.5336, -13.2981, 0.88", "-33.4269, -79.8018, -13.2154, 1.03", "-33.6856, -81.5068, -13.0493, 0.74", "-33.7935, -82.6243, -12.9902, 0.74", "-33.8681, -84.0471, -12.9729, 0.74", "-33.8848, -85.3379, -13.0741, 0.59", "-33.8568, -87.0655, -13.358, 0.66", "-33.8042, -88.0998, -13.6132, 0.66", "-33.6389, -90.0226, -14.2458, 0.66", "-33.5613, -91.0116, -14.6227, 0.52", "-33.4931, -92.9136, -15.4156, 0.59", "-33.543, -93.8833, -15.8292, 0.81", "-33.6801, -94.7505, -16.1838, 0.81", "-33.9237, -95.8151, -16.5543, 0.29", "-34.227, -96.8726, -16.8122, 0.29", "-34.683, -98.2193, -17.0617, 0.74", "-35.0865, -99.3299, -17.1816, 1.25", "-35.3649, -100.105, -17.2495, 1.47", "-35.5636, -100.682, -17.2846, 1.62", "-35.909, -101.784, -17.323, 1.25", "-36.2385, -103.043, -17.3652, 0.44", "-36.5648, -104.373, -17.4448, 0.29", "-37.0024, -106.142, -17.5393, 0.66", "-37.3026, -107.338, -17.5936, 0.96", "-37.4856, -108.059, -17.62, 1.25", "-37.682, -108.861, -17.6406, 1.47", "-37.9878, -110.147, -17.6558, 1.03", "-38.4233, -111.745, -17.6499, 0.29", "-38.7333, -112.746, -17.6253, 0.44", "-39.0544, -113.605, -17.5884, 0.74", "-39.4335, -114.499, -17.5303, 0.96", "-39.8243, -115.31, -17.4564, 1.25", "-40.2068, -115.972, -17.3922, 1.25", "-40.9507, -117.003, -17.3317, 1.03", "-41.7177, -117.861, -17.2413, 0.81", "-42.1021, -118.223, -17.2236, 0.81", "-42.5793, -118.638, -17.2283, 0.59", "-43.3361, -119.286, -17.2783, 0.52", "-43.7914, -119.72, -17.3341, 0.52", "-44.6653, -120.704, -17.4957, 0.59", "-45.7105, -122.201, -17.787, 0.44", "-46.2136, -123.145, -17.9975, 0.29", "-46.5061, -123.802, -18.1526, 0.29", "-46.9256, -124.836, -18.4043, 0.66", "-47.2534, -125.658, -18.6096, 1.03", "-47.5539, -126.396, -18.7982, 1.03", "-48.2107, -127.755, -19.1, 0.29", "-48.7936, -128.729, -19.3569, 0.29", "-49.2919, -129.412, -19.5449, 0.29", "-49.5116, -129.673, -19.6172, 0.44", "-49.9196, -130.15, -19.7347, 0.44", "-50.8613, -131.303, -19.9686, 0.66", "-51.2212, -131.774, -20.049, 0.66", "-52.1016, -132.983, -20.245, 0.29", "-52.5484, -133.594, -20.334, 0.29", "-53.2142, -134.495, -20.4399, 0.59", "-53.7708, -135.262, -20.502, 0.81", "-54.4498, -136.227, -20.5627, 0.29", "-55.0278, -137.104, -20.6338, 0.52", "-55.6129, -138.108, -20.7515, 0.52", "-56.0856, -139.144, -20.8924, 0.44", "-56.5187, -140.446, -21.0306, 0.74", "-56.7198, -141.408, -21.2966, 0.88", "-56.8384, -142.521, -21.7241, 0.88", "-56.8702, -143.493, -22.1314, 0.29", "-56.8059, -144.973, -22.9413, 0.29", "-56.7071, -146.201, -23.687, 0.29", "-56.3352, -150.37, -26.3429, 0.59", "-56.2648, -151.12, -26.8313, 0.81", "-56.1702, -152.064, -27.4683, 0.81", "-55.8252, -155.18, -29.6027, 0.29", "-55.6683, -156.293, -30.3563, 0.74", "-55.5561, -156.932, -30.7502, 0.74", "-55.2232, -158.983, -31.7093, 0.22", "-54.9931, -160.659, -32.4423, 1.11", "-54.8758, -161.657, -32.8345, 1.11", "-54.6881, -163.544, -33.3874, 0.22", "-54.5245, -164.931, -33.7508, 0.59", "-54.2337, -167.104, -34.2858, 0.22", "-54.104, -168.263, -34.525, 0.37", "-54.064, -168.806, -34.6404, 0.37", "-54.0624, -169.878, -34.8777, 0.22", "-54.1368, -171.222, -35.1814, 0.22", "-54.3015, -173.409, -35.6956, 1.47", "-54.4307, -174.703, -35.9948, 1.62", "-54.6945, -176.297, -36.332, 1.25", "-55.2441, -178.866, -36.8391, 0.15", "-55.643, -180.354, -37.1121, 0.22", "-55.8395, -180.998, -37.2005, 0.88", "-56.0575, -181.717, -37.2849, 1.03", "-56.5181, -183.35, -37.4892, 0.15", "-56.8122, -184.509, -37.6437, 0.52", "-57.0419, -185.425, -37.7858, 0.74", "-58.2483, -190.137, -38.5647, 0.22", "-58.6462, -191.677, -38.8291, 0.81", "-58.817, -192.342, -38.9477, 0.81", "-59.513, -195.158, -39.4631, 0.22", "-59.7886, -196.283, -39.6584, 0.59" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-18.8233, -28.8523, -0.468012, 0.59", "-18.6794, -29.7575, -0.466315, 0.59", "-18.5665, -30.2998, -0.460177, 0.59", "-18.4099, -30.9619, -0.491112, 0.81", "-18.2937, -31.4599, -0.523358, 0.81", "-18.1171, -32.3037, -0.598697, 1.03", "-18.0417, -32.7564, -0.647918, 1.03", "-17.9811, -33.2897, -0.69842, 0.88", "-17.9495, -34.2686, -0.74158, 0.88", "-18.0291, -34.9074, -0.718348, 1.03", "-18.2321, -35.4476, -0.635818, 1.03", "-18.6571, -36.0994, -0.45376, 0.52", "-19.4007, -36.992, -0.159417, 1.03", "-19.7906, -37.4075, -0.00654259, 1.03", "-20.2423, -37.883, 0.188197, 0.88", "-20.6825, -38.3792, 0.37639, 0.81", "-21.1708, -38.9884, 0.593293, 0.59", "-21.5687, -39.5641, 0.767119, 0.59", "-21.9658, -40.2694, 0.923746, 0.59", "-22.3698, -41.1037, 1.10622, 0.88", "-22.609, -41.6777, 1.24202, 0.88", "-22.7656, -42.1038, 1.35299, 0.74", "-22.9725, -42.6692, 1.51045, 0.96", "-23.1625, -43.1365, 1.64026, 1.03", "-23.3548, -43.5515, 1.75319, 1.03", "-23.7238, -44.2555, 1.93261, 0.59", "-24.0088, -44.7869, 2.0348, 0.37", "-24.3249, -45.3682, 2.10637, 0.37", "-24.6434, -45.9748, 2.15231, 0.81", "-24.9624, -46.6384, 2.18238, 0.81", "-25.1704, -47.1275, 2.19334, 0.81", "-25.469, -47.9226, 2.21896, 0.96", "-25.6934, -48.5846, 2.24994, 0.96", "-25.8867, -49.2239, 2.30025, 0.66", "-26.0725, -49.8688, 2.38226, 0.66", "-26.2477, -50.3878, 2.47478, 0.59", "-26.5287, -51.0178, 2.62776, 0.66", "-26.7201, -51.3133, 2.7359, 0.88", "-27.0274, -51.6771, 2.89187, 0.88", "-27.3657, -52.0103, 3.04557, 0.74", "-27.8531, -52.4603, 3.26544, 0.59", "-28.1602, -52.7576, 3.40663, 0.59", "-28.511, -53.1601, 3.57463, 0.59", "-28.9479, -53.7779, 3.79362, 0.44", "-29.2037, -54.2176, 3.91543, 0.66", "-29.4648, -54.7503, 4.03406, 0.81", "-29.6796, -55.2506, 4.13032, 0.88", "-29.9592, -55.9329, 4.24185, 0.88", "-30.2228, -56.5521, 4.31585, 0.88", "-30.5767, -57.2914, 4.38025, 0.66", "-30.8521, -57.7895, 4.405, 0.66", "-31.11, -58.1939, 4.40934, 0.81", "-31.4196, -58.6202, 4.40297, 0.96", "-31.7786, -59.0365, 4.39993, 0.96", "-32.1534, -59.4388, 4.41498, 0.88", "-32.6752, -60.0074, 4.47853, 0.88", "-33.0934, -60.4918, 4.57543, 1.03", "-33.3067, -60.7745, 4.66002, 1.03", "-33.7447, -61.4677, 4.91774, 0.59", "-33.9809, -61.9187, 5.10345, 0.74", "-34.2609, -62.5272, 5.35177, 0.88", "-34.4115, -62.8936, 5.49138, 0.88", "-34.6627, -63.5325, 5.70743, 0.74", "-34.896, -64.158, 5.89684, 0.88", "-35.0765, -64.6332, 6.00853, 0.88", "-35.3799, -65.3074, 6.13261, 0.66", "-35.633, -65.7938, 6.20296, 0.66", "-35.8466, -66.1712, 6.25276, 0.96", "-36.1904, -66.7355, 6.33173, 0.74", "-36.6725, -67.4647, 6.44222, 0.74", "-37.0131, -67.9537, 6.51634, 0.96", "-37.3062, -68.3581, 6.57459, 0.96", "-37.6611, -68.8177, 6.63549, 0.88", "-38.0507, -69.2849, 6.68456, 0.81", "-38.5862, -69.8596, 6.72312, 0.66", "-39.1817, -70.442, 6.751, 0.59", "-39.6138, -70.8317, 6.76312, 0.81", "-40.009, -71.1821, 6.76932, 0.81", "-40.5964, -71.6849, 6.76166, 0.66", "-41.1162, -72.1027, 6.74279, 0.88", "-41.561, -72.4139, 6.7195, 1.47", "-41.8692, -72.582, 6.69571, 1.62" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-12.9123, -18.1422, 1.15792, 0.66", "-14.3519, -17.9659, 1.19168, 0.66", "-15.2917, -17.7842, 1.18823, 0.81", "-16.3195, -17.5386, 1.16171, 1.11", "-17.2761, -17.2796, 1.12573, 1.11", "-18.0765, -17.0445, 1.09607, 1.11", "-19.1611, -16.712, 1.04469, 1.03", "-20.281, -16.3126, 0.94588, 1.18", "-20.9097, -16.0581, 0.893457, 1.18", "-21.5725, -15.7543, 0.855063, 1.18", "-22.4, -15.3205, 0.827207, 1.11", "-23.4257, -14.7172, 0.856212, 0.96", "-24.3565, -14.0885, 0.934779, 0.96", "-25.3497, -13.2865, 1.07228, 0.96", "-26.1711, -12.4669, 1.2278, 0.88", "-26.7972, -11.631, 1.41784, 0.88", "-27.4423, -10.3822, 1.70817, 0.88", "-27.7716, -9.40945, 1.92855, 0.81", "-27.9937, -8.3412, 2.14336, 0.88", "-28.1089, -7.43251, 2.29282, 0.88", "-28.2326, -5.96521, 2.47127, 0.81", "-28.3391, -4.59231, 2.57874, 0.88", "-28.4597, -3.28662, 2.61712, 0.88", "-28.6596, -1.68701, 2.64436, 0.96", "-28.8239, -0.719572, 2.65903, 0.96", "-29.0792, 0.464566, 2.67022, 1.11", "-29.4041, 1.6599, 2.67762, 1.11", "-29.8331, 2.96063, 2.7182, 1.03", "-30.2201, 3.91485, 2.78365, 0.88", "-30.795, 5.09111, 2.90117, 0.88", "-31.3392, 6.05665, 3.07634, 1.03", "-32.2726, 7.47151, 3.41161, 1.11", "-32.8478, 8.19597, 3.6227, 1.11", "-33.8602, 9.20739, 4.03594, 0.88", "-34.4591, 9.67689, 4.29569, 1.03", "-35.6069, 10.4178, 4.82942, 0.81", "-36.4358, 10.9036, 5.25414, 0.66", "-37.0188, 11.2456, 5.59633, 0.66", "-38.1497, 12.022, 6.36057, 0.81", "-38.7828, 12.5867, 6.80999, 0.81", "-39.3111, 13.2169, 7.16512, 0.74", "-39.6505, 13.7165, 7.30963, 0.74", "-40.1143, 14.3623, 7.43926, 0.74", "-40.6892, 15.0537, 7.46734, 0.74", "-41.3819, 15.6959, 7.36698, 0.88", "-42.295, 16.3303, 7.17309, 1.03", "-43.3142, 16.862, 6.89612, 1.18", "-44.6008, 17.3799, 6.44558, 0.81", "-45.3518, 17.6175, 6.1344, 0.81", "-46.5325, 17.9107, 5.53829, 0.81", "-47.5559, 18.1478, 4.94061, 1.03", "-48.5838, 18.424, 4.25669, 0.88", "-50.0415, 18.9057, 3.21169, 0.96", "-50.7349, 19.2079, 2.67643, 1.18", "-52.0046, 19.9048, 1.70642, 1.4", "-52.7267, 20.4179, 1.202, 1.18", "-53.7018, 21.2265, 0.556705, 0.88", "-54.3673, 21.8922, 0.174207, 0.88", "-55.0831, 22.7601, -0.138806, 1.03", "-55.541, 23.3956, -0.283705, 0.88", "-56.3033, 24.6158, -0.386643, 1.47" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-12.9123, -18.1422, 1.15792, 1.4", "-13.7026, -17.3834, 1.23194, 1.4", "-14.4038, -16.7342, 1.28501, 1.25", "-15.0251, -16.1598, 1.35029, 1.03", "-15.6359, -15.5738, 1.39576, 1.03", "-16.0744, -15.1277, 1.42701, 0.88", "-16.4964, -14.6616, 1.48017, 0.88", "-16.8614, -14.2077, 1.57427, 1.03", "-17.171, -13.7066, 1.68862, 1.03", "-17.4342, -13.1068, 1.83461, 0.74", "-17.5949, -12.6276, 1.94439, 0.74", "-17.8332, -11.6829, 2.13829, 0.88", "-17.9999, -10.7781, 2.33051, 1.03", "-18.1246, -9.86377, 2.52456, 1.03", "-18.1689, -9.31944, 2.6239, 1.03", "-18.1926, -8.58957, 2.77003, 0.74", "-18.1797, -7.8104, 2.89645, 1.11", "-18.1487, -7.17171, 2.99104, 0.96", "-18.1265, -6.70662, 3.06451, 0.88", "-18.0767, -5.82435, 3.22819, 0.81", "-18.035, -4.84676, 3.40196, 0.74", "-18.0081, -3.96891, 3.54007, 0.81", "-18.0202, -3.04192, 3.66612, 1.03", "-18.056, -2.1969, 3.74349, 1.03", "-18.1066, -1.30157, 3.79573, 0.88", "-18.1632, -0.511012, 3.81455, 0.88", "-18.2152, 0.242295, 3.78918, 1.11", "-18.2544, 0.786076, 3.74997, 1.11", "-18.3109, 1.518, 3.66435, 0.74", "-18.3579, 2.22478, 3.58417, 0.81", "-18.4246, 3.14658, 3.47127, 0.81", "-18.4664, 3.95214, 3.34254, 0.96", "-18.4962, 4.74652, 3.19203, 0.66", "-18.5066, 5.6175, 3.01111, 0.52", "-18.5124, 6.40914, 2.84106, 0.74", "-18.521, 6.8711, 2.74986, 0.74", "-18.5582, 7.90533, 2.55686, 0.74", "-18.6076, 8.7027, 2.41935, 0.74", "-18.7026, 9.51469, 2.29454, 0.74", "-18.8922, 10.4414, 2.16237, 0.66", "-19.1762, 11.3494, 2.03808, 0.96", "-19.3988, 11.9256, 1.9756, 0.96", "-19.628, 12.4412, 1.94622, 0.96", "-20.0939, 13.4404, 1.90099, 0.81", "-20.463, 14.2402, 1.87013, 0.96", "-20.7886, 15.0604, 1.84229, 1.11", "-21.016, 15.7661, 1.83525, 0.96", "-21.2365, 16.6253, 1.85485, 0.88", "-21.3897, 17.4626, 1.89075, 0.88", "-21.4663, 18.161, 1.93247, 0.88", "-21.5337, 19.1596, 1.98419, 1.03", "-21.5876, 20.1144, 2.01341, 0.74", "-21.6209, 20.5214, 2.01216, 0.74", "-21.7219, 21.2368, 1.98133, 0.88", "-21.8196, 21.7022, 1.95456, 0.88", "-22.059, 22.5282, 1.88924, 0.74", "-22.3387, 23.2596, 1.8165, 0.66", "-22.5633, 23.7297, 1.75825, 0.66", "-23.1666, 24.7436, 1.63576, 1.03", "-23.4535, 25.1645, 1.57629, 1.03", "-23.8716, 25.7524, 1.48068, 0.81", "-24.1756, 26.1938, 1.39749, 0.81", "-24.5569, 26.7727, 1.24456, 0.52", "-24.8182, 27.2038, 1.1024, 0.52", "-25.1646, 27.8407, 0.854189, 0.74", "-25.4519, 28.4511, 0.603606, 0.81", "-25.7114, 29.1184, 0.333881, 0.81", "-25.9284, 29.8011, 0.0793834, 0.88", "-26.0764, 30.3537, -0.102535, 1.03", "-26.2023, 30.8592, -0.249695, 1.03", "-26.3944, 31.5954, -0.440306, 0.88", "-26.6055, 32.3569, -0.64012, 0.74", "-26.8646, 33.2368, -0.873799, 0.96", "-27.0678, 33.8848, -1.04631, 1.03", "-27.284, 34.4896, -1.22108, 1.03", "-27.5592, 35.1436, -1.42371, 0.88", "-27.9882, 35.9683, -1.69878, 0.96", "-28.2839, 36.4145, -1.86926, 0.81", "-28.5363, 36.7162, -1.99805, 0.96", "-28.901, 37.0804, -2.1571, 1.18", "-29.2186, 37.3616, -2.26449, 1.18", "-29.5992, 37.6859, -2.36265, 1.11", "-29.984, 38.0419, -2.44005, 1.25", "-30.3625, 38.4685, -2.50824, 1.25", "-30.7448, 39.0266, -2.57963, 1.03", "-31.029, 39.5907, -2.6367, 0.88", "-31.2594, 40.2725, -2.69006, 0.74", "-31.3904, 40.9625, -2.73052, 0.74", "-31.4411, 41.8804, -2.77169, 0.81", "-31.4059, 42.5306, -2.81315, 0.81", "-31.3182, 43.1614, -2.87992, 0.96", "-31.2217, 43.7395, -2.97503, 0.96", "-31.1421, 44.2153, -3.07202, 0.88", "-31.0643, 44.8368, -3.20472, 0.88", "-31.0126, 45.584, -3.36271, 0.81", "-30.9949, 46.3075, -3.505, 0.74", "-31.004, 47.2375, -3.66066, 0.88", "-31.0223, 47.8433, -3.73618, 0.88", "-31.0278, 48.5047, -3.79372, 1.03", "-30.9945, 49.2165, -3.82618, 0.96", "-30.8994, 49.8106, -3.81811, 0.88", "-30.7439, 50.3006, -3.79837, 1.03", "-30.437, 50.9386, -3.75712, 0.96", "-30.14, 51.4662, -3.73049, 0.88", "-29.8574, 51.9273, -3.71964, 0.88", "-29.4661, 52.6061, -3.71264, 0.81", "-29.1055, 53.331, -3.7138, 0.74", "-28.7092, 54.2446, -3.7191, 0.81", "-28.4506, 54.9332, -3.73136, 1.03", "-28.3476, 55.2506, -3.73723, 1.03", "-28.0631, 56.2077, -3.76033, 0.81", "-27.8373, 57.0013, -3.78824, 0.88", "-27.621, 57.7016, -3.81812, 0.88", "-27.2984, 58.5672, -3.86924, 0.88", "-27.0526, 59.0985, -3.89512, 0.88", "-26.7693, 59.6054, -3.91199, 1.11", "-26.4253, 60.1542, -3.92308, 1.11", "-25.9766, 60.8657, -3.93542, 0.81", "-25.5876, 61.5216, -3.94544, 0.96", "-25.1284, 62.3418, -3.95062, 0.96", "-24.7323, 63.0792, -3.98027, 0.88", "-24.2306, 64.0667, -4.04495, 0.88", "-23.9218, 64.7292, -4.11478, 1.03", "-23.6501, 65.4239, -4.2158, 1.03", "-23.3589, 66.4218, -4.39477, 0.88", "-23.2132, 67.1426, -4.5433, 0.88", "-23.1347, 67.6797, -4.66728, 0.74", "-23.0645, 68.2865, -4.80991, 0.88", "-22.9948, 69.1425, -4.99922, 0.81", "-22.963, 70.214, -5.18981, 0.81", "-22.9846, 71.2478, -5.31309, 0.88", "-23.0156, 71.7255, -5.33863, 0.88", "-23.1372, 72.8939, -5.3609, 0.81", "-23.3021, 73.9689, -5.34898, 0.74", "-23.5398, 75.0449, -5.30979, 0.88", "-23.7702, 75.774, -5.26978, 0.96", "-24.1816, 76.8292, -5.20142, 1.03", "-24.5192, 77.6494, -5.12966, 0.88", "-24.9237, 78.6169, -5.0387, 1.11", "-25.1553, 79.2134, -4.9865, 1.25", "-25.445, 80.1159, -4.92738, 0.81", "-25.6729, 81.0535, -4.8768, 0.66", "-25.9179, 82.4678, -4.79434, 0.66", "-26.0145, 83.2065, -4.75709, 0.96", "-26.0723, 83.7535, -4.74028, 0.96", "-26.1415, 84.4287, -4.74901, 0.96", "-26.2259, 85.0158, -4.79042, 0.81", "-26.376, 85.5813, -4.87969, 0.59", "-26.6209, 86.193, -5.03581, 0.66", "-26.8285, 86.6273, -5.15611, 0.96", "-27.0043, 86.9722, -5.25281, 0.96", "-27.4713, 87.8834, -5.48685, 0.74", "-27.7706, 88.5294, -5.61413, 0.66", "-27.9489, 88.9742, -5.66173, 0.88", "-28.1206, 89.4549, -5.67214, 0.88", "-28.3336, 90.0495, -5.65965, 0.74", "-28.5233, 90.5546, -5.61912, 0.74", "-28.7993, 91.3268, -5.52425, 0.81", "-29.0562, 92.0866, -5.42462, 0.66", "-29.3335, 92.9411, -5.31839, 0.81", "-29.6344, 93.8771, -5.20782, 0.96", "-29.9082, 94.7256, -5.12474, 1.11", "-30.1769, 95.5839, -5.06952, 0.81", "-30.4194, 96.3704, -5.03795, 0.59", "-30.6121, 96.9963, -5.02461, 0.81", "-30.8847, 97.8657, -5.00567, 0.59", "-31.128, 98.6383, -4.99343, 0.74", "-31.3758, 99.3881, -4.99785, 1.03", "-31.6399, 100.159, -5.01822, 1.03", "-31.8856, 100.953, -5.07717, 0.74", "-32.0477, 101.57, -5.15677, 0.74", "-32.2495, 102.452, -5.32248, 0.74", "-32.4342, 103.341, -5.49933, 0.59", "-32.5405, 103.895, -5.60696, 0.59", "-32.7317, 104.832, -5.78518, 0.66", "-32.8871, 105.444, -5.89274, 0.52", "-33.1142, 106.123, -5.99944, 0.74", "-33.403, 106.809, -6.08619, 0.96", "-33.7281, 107.477, -6.13201, 0.74", "-34.2696, 108.436, -6.16777, 0.74", "-34.7156, 109.129, -6.19618, 0.88", "-35.0696, 109.633, -6.24701, 0.88", "-35.575, 110.309, -6.36444, 0.74", "-36.2282, 111.129, -6.56881, 0.74", "-36.8442, 111.881, -6.78301, 0.81", "-37.3874, 112.577, -6.98453, 0.96", "-37.9007, 113.301, -7.18928, 0.88", "-38.2992, 113.943, -7.3613, 0.88", "-38.782, 114.889, -7.59384, 0.81", "-39.0588, 115.588, -7.75873, 0.81", "-39.3598, 116.597, -7.9779, 0.96", "-39.5952, 117.516, -8.1647, 1.11", "-39.8147, 118.398, -8.34019, 0.81", "-40.0513, 119.299, -8.52757, 0.81", "-40.2425, 119.941, -8.669, 0.81", "-40.543, 120.751, -8.85761, 0.81", "-41.1566, 122.031, -9.17058, 0.96", "-41.6065, 122.759, -9.35495, 0.96", "-42.1344, 123.455, -9.5326, 1.03", "-42.6617, 124.064, -9.68192, 1.11", "-43.2458, 124.702, -9.82155, 0.88", "-43.8182, 125.316, -9.94448, 0.66", "-44.4842, 126.04, -10.0867, 0.66", "-45.2124, 126.905, -10.2248, 0.74", "-45.6969, 127.567, -10.2998, 0.88", "-46.087, 128.182, -10.3441, 0.81", "-46.388, 128.728, -10.3647, 0.81", "-46.6132, 129.197, -10.3773, 0.81", "-47.0694, 130.22, -10.4078, 0.59", "-47.4066, 130.942, -10.4432, 0.74", "-47.6903, 131.47, -10.4972, 0.52", "-47.9791, 131.913, -10.5788, 0.74", "-48.432, 132.47, -10.738, 0.88", "-48.8472, 132.877, -10.9074, 0.88", "-49.4138, 133.32, -11.1658, 0.74", "-50.055, 133.772, -11.4787, 0.88", "-50.5985, 134.166, -11.7589, 0.66", "-51.0715, 134.525, -12.0033, 0.66", "-51.4415, 134.82, -12.1797, 0.66", "-51.8679, 135.175, -12.361, 0.59", "-52.309, 135.569, -12.5138, 0.44", "-52.9347, 136.18, -12.6664, 0.88", "-53.4451, 136.756, -12.7667, 1.03", "-53.9169, 137.382, -12.8475, 0.74", "-54.3813, 138.084, -12.92, 0.74", "-54.7998, 138.766, -12.9844, 0.74", "-55.1526, 139.327, -13.0375, 0.74", "-55.6095, 140.064, -13.1235, 0.44", "-56.0145, 140.751, -13.2089, 0.66", "-56.5787, 141.743, -13.3389, 0.81", "-57.0546, 142.595, -13.4505, 0.81", "-57.5716, 143.5, -13.5707, 0.66", "-58.043, 144.315, -13.6696, 0.66", "-58.538, 145.123, -13.7382, 0.66", "-58.9368, 145.739, -13.7998, 0.74", "-59.4024, 146.42, -13.8973, 0.74", "-59.9056, 147.121, -14.0383, 0.59", "-60.3141, 147.662, -14.1944, 0.81", "-60.8211, 148.275, -14.4334, 0.59", "-61.3144, 148.856, -14.724, 0.74", "-61.7232, 149.39, -15.0081, 0.81", "-61.9275, 149.697, -15.1745, 0.81", "-62.2825, 150.32, -15.4594, 0.81", "-62.5141, 150.774, -15.6222, 0.81", "-62.7929, 151.372, -15.7647, 0.59", "-63.1708, 152.175, -15.858, 0.59", "-63.5823, 152.964, -15.8954, 0.66", "-64.0354, 153.701, -15.8699, 0.66", "-64.5328, 154.348, -15.7652, 0.59", "-65.1754, 155.042, -15.5652, 0.81", "-65.7361, 155.584, -15.3728, 0.81", "-66.5441, 156.307, -15.0845, 0.52", "-67.238, 156.926, -14.8481, 0.52", "-68.1752, 157.799, -14.6417, 0.74", "-68.6727, 158.305, -14.5983, 0.74", "-69.2074, 158.886, -14.642, 1.25", "-69.6226, 159.36, -14.755, 1.25", "-70.1528, 159.958, -15.0271, 0.96", "-70.8927, 160.744, -15.5406, 0.81", "-71.366, 161.174, -15.9029, 0.74", "-71.9169, 161.551, -16.2817, 0.52", "-72.3796, 161.769, -16.5437, 0.52", "-73.418, 162.07, -17.0521, 0.44", "-74.2411, 162.173, -17.3845, 0.52", "-75.0416, 162.141, -17.6356, 0.66", "-75.8305, 161.999, -17.8407, 0.66", "-76.5033, 161.805, -17.997, 0.66", "-77.0265, 161.612, -18.0864, 0.66", "-77.4758, 161.406, -18.1438, 0.52", "-78.2192, 161.029, -18.2463, 0.44", "-78.8207, 160.714, -18.3423, 0.37", "-79.6311, 160.268, -18.4763, 0.37", "-80.2557, 159.9, -18.5832, 0.37", "-81.0708, 159.362, -18.7264, 0.74", "-81.6136, 158.951, -18.8256, 0.74", "-82.1879, 158.446, -18.9389, 0.74", "-82.702, 157.933, -19.0358, 0.44", "-83.1477, 157.46, -19.111, 0.44", "-83.5021, 157.105, -19.1424, 0.66", "-84.1154, 156.541, -19.1015, 0.66", "-84.6513, 156.06, -19.0359, 0.52", "-85.1384, 155.608, -18.9881, 0.52", "-85.5645, 155.166, -18.9633, 0.52", "-86.0304, 154.585, -18.9456, 0.66", "-86.5506, 153.75, -18.9448, 0.59", "-86.9204, 152.935, -18.9693, 0.37", "-87.1975, 152.163, -19.008, 0.37", "-87.4168, 151.425, -19.0815, 0.29", "-87.5694, 150.829, -19.1598, 0.29", "-87.7777, 149.966, -19.3248, 0.44", "-87.947, 149.372, -19.4745, 0.44", "-88.1882, 148.711, -19.6226, 0.66", "-88.4914, 148.084, -19.7569, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-62.714, 97.4706, 20.5687, 0.66", "-61.5273, 98.24, 22.3423, 0.66", "-60.8882, 98.7324, 23.2297, 0.66", "-59.4166, 100.109, 25.2577, 0.66", "-58.8299, 100.765, 26.116, 0.66", "-58.1347, 101.698, 27.2128, 0.44", "-57.8651, 102.152, 27.6851, 0.44", "-57.5017, 102.761, 28.2122, 0.74", "-57.2785, 103.313, 28.5864, 0.74", "-57.1573, 104.233, 28.9553, 0.66", "-57.1114, 104.845, 29.1869, 0.44", "-57.0309, 105.683, 29.4934, 0.37", "-56.8929, 106.266, 29.7509, 0.37", "-56.5276, 106.994, 30.206, 0.81", "-56.2906, 107.369, 30.4318, 0.81", "-55.7857, 108.091, 30.8174, 0.44", "-55.3604, 108.747, 31.1356, 0.44", "-55.046, 109.396, 31.399, 0.44", "-54.6984, 111.094, 31.862, 0.52", "-54.7376, 112.616, 32.1186, 0.81", "-54.8511, 113.224, 32.1808, 0.81", "-55.2739, 114.661, 32.2554, 0.52", "-55.7131, 116.059, 32.2719, 0.52", "-56.1753, 117.537, 32.2644, 0.52", "-56.4261, 118.398, 32.2308, 0.81", "-56.656, 119.395, 32.2411, 0.81", "-56.8813, 120.766, 32.2721, 0.44", "-56.9809, 122.093, 32.3066, 0.44", "-56.9699, 122.884, 32.3447, 0.44", "-56.8801, 124.164, 32.4312, 0.44", "-56.7788, 125.195, 32.5324, 0.74", "-56.7169, 125.785, 32.6096, 0.74", "-56.6657, 126.475, 32.7205, 0.44", "-56.6536, 127.377, 32.8728, 0.29", "-56.6572, 128.307, 33.0359, 0.88", "-56.6583, 129.231, 33.2268, 0.88", "-56.6575, 129.882, 33.3425, 0.88", "-56.6524, 130.602, 33.4709, 0.66", "-56.649, 131.743, 33.6535, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-62.714, 97.4706, 20.5687, 0.52", "-63.8105, 97.8562, 21.1043, 0.52", "-65.0163, 98.454, 21.6635, 0.52", "-66.0392, 99.0951, 22.1209, 0.66", "-67.3494, 100.102, 22.6829, 0.81", "-67.9011, 100.604, 22.9092, 0.81", "-68.9568, 101.714, 23.3231, 0.66", "-69.757, 102.788, 23.6949, 0.88", "-70.2009, 103.498, 23.8952, 0.88", "-70.7344, 104.436, 24.0884, 0.66", "-71.1982, 105.329, 24.251, 0.66", "-71.6359, 106.23, 24.4371, 0.66", "-72.2269, 107.566, 24.7548, 0.66", "-72.5447, 108.372, 24.9826, 0.59", "-72.9723, 109.578, 25.4423, 0.52", "-73.2868, 110.566, 25.9432, 0.52", "-73.5055, 111.314, 26.3943, 0.44", "-73.802, 112.365, 27.1061, 0.44", "-74.0231, 113.217, 27.7108, 0.44", "-74.3571, 114.601, 28.7227, 0.59", "-74.629, 115.747, 29.526, 0.74", "-74.7998, 116.405, 29.9425, 0.59", "-75.1148, 117.479, 30.5471, 0.81", "-75.2885, 117.961, 30.7694, 0.81", "-75.6814, 118.871, 31.0407, 0.81", "-76.2578, 119.971, 31.234, 0.37", "-76.6683, 120.647, 31.3181, 0.37", "-77.2144, 121.481, 31.382, 0.37", "-77.8436, 122.362, 31.4189, 0.37", "-78.4698, 123.159, 31.4205, 0.37", "-79.5976, 124.378, 31.3991, 0.96", "-80.2229, 124.957, 31.4156, 1.11", "-81.3783, 125.946, 31.4513, 0.59", "-82.2187, 126.637, 31.4799, 0.52", "-83.1019, 127.369, 31.5086, 0.52", "-84.3345, 128.433, 31.542, 0.66", "-85.419, 129.403, 31.5607, 1.25", "-85.915, 129.885, 31.585, 1.4", "-87.1236, 131.18, 31.6895, 0.52", "-87.8653, 132.077, 31.7588, 0.52", "-89.0443, 133.671, 31.8736, 0.52", "-89.6919, 134.649, 31.9114, 0.52", "-90.4136, 135.806, 31.9198, 0.52", "-91.1914, 137.106, 31.9664, 0.66", "-91.6877, 137.995, 32.0211, 0.74", "-92.3802, 139.275, 32.13, 0.88", "-92.968, 140.386, 32.252, 0.37", "-93.4925, 141.419, 32.356, 0.29", "-94.0206, 142.464, 32.4527, 0.37", "-94.439, 143.333, 32.5228, 0.52", "-94.6874, 143.837, 32.5414, 0.74", "-95.098, 144.606, 32.5935, 0.74", "-95.7296, 145.566, 32.6792, 0.44", "-96.3264, 146.289, 32.75, 0.44", "-97.0232, 147.019, 32.8183, 0.29", "-97.6975, 147.688, 32.9388, 0.29", "-99.2584, 149.266, 33.3253, 0.37", "-100.114, 150.19, 33.6056, 0.37", "-101.014, 151.267, 33.975, 0.37", "-101.354, 151.724, 34.122, 0.37", "-101.999, 152.651, 34.3998, 0.29", "-102.39, 153.218, 34.5474, 0.29", "-102.823, 153.819, 34.647, 0.29", "-103.586, 154.812, 34.8696, 0.29", "-104.385, 155.726, 35.1151, 0.37", "-105.074, 156.394, 35.316, 0.37", "-106.093, 157.209, 35.5775, 0.37", "-107.026, 157.833, 35.8401, 0.29", "-108.242, 158.559, 36.2232, 0.29", "-108.838, 158.885, 36.4565, 0.29", "-109.829, 159.414, 36.9548, 0.88", "-110.011, 158.701, 37.2052, 1.18", "-110.125, 158.136, 37.3833, 1.18" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.1043, 24.2577, 13.9182, 0.66", "-15.0923, 22.9557, 14.7004, 0.66", "-15.7711, 22.175, 15.2295, 0.66", "-16.224, 21.7225, 15.5538, 0.88", "-16.9742, 21.1008, 15.9985, 0.74", "-17.5415, 20.7114, 16.2956, 0.88", "-18.2696, 20.2948, 16.6424, 1.18", "-19.1408, 19.9915, 17.035, 1.18", "-19.7292, 19.8902, 17.2356, 1.18", "-21.0361, 19.8461, 17.5681, 0.66", "-21.8261, 19.88, 17.7365, 0.59", "-22.3812, 19.9127, 17.8489, 0.59", "-23.4027, 19.9329, 18.0242, 0.52", "-24.1157, 19.8891, 18.1425, 0.52", "-24.9758, 19.7956, 18.3203, 0.52", "-26.2872, 19.6543, 18.6292, 0.52", "-27.3, 19.5596, 18.8752, 0.74", "-28.4386, 19.5027, 19.1585, 0.44", "-29.5537, 19.5264, 19.4363, 0.44", "-30.9249, 19.6193, 19.7803, 0.66", "-31.8261, 19.7587, 19.9792, 0.81", "-32.6015, 19.9607, 20.0952, 0.96", "-33.0842, 20.1166, 20.1457, 0.96", "-33.6955, 20.3291, 20.1667, 0.59", "-34.2286, 20.4881, 20.138, 0.44", "-34.9211, 20.5998, 20.1073, 0.44", "-35.8597, 20.7121, 20.1433, 0.29", "-36.5017, 20.7965, 20.2177, 0.29", "-37.2612, 20.9035, 20.3565, 0.59", "-37.7584, 20.9749, 20.509, 0.59", "-39.0829, 21.0978, 21.1617, 0.74", "-39.8878, 21.1969, 21.6748, 0.59", "-40.5784, 21.3079, 22.2108, 0.59", "-41.1649, 21.4144, 22.7232, 0.66", "-41.9629, 21.5851, 23.4582, 0.66", "-43.1431, 21.8735, 24.5535, 0.96", "-44.0881, 22.0875, 25.3857, 0.52", "-44.6759, 22.1681, 25.9078, 0.52", "-45.1849, 22.2168, 26.3529, 0.59", "-46.0709, 22.3141, 27.0673, 0.37", "-46.6161, 22.3448, 27.4227, 0.37", "-47.4646, 22.3019, 27.8821, 0.37", "-48.5397, 22.1169, 28.4215, 0.59", "-49.0647, 22.022, 28.6508, 0.59", "-49.5153, 21.9496, 28.8238, 0.59", "-50.6253, 21.8199, 29.1707, 0.29", "-51.4257, 21.7806, 29.3571, 0.29", "-51.9749, 21.7962, 29.4501, 0.59", "-52.8619, 21.8645, 29.5602, 0.59", "-53.5609, 21.9089, 29.6417, 0.52", "-54.4993, 21.9345, 29.7586, 0.52", "-55.4096, 21.917, 29.8929, 0.52", "-56.0931, 21.8831, 29.9858, 0.52", "-57.1211, 21.7617, 30.1226, 0.74", "-57.8171, 21.6205, 30.2289, 0.88", "-58.3219, 21.4939, 30.3197, 0.88", "-59.1851, 21.2497, 30.523, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.1043, 24.2577, 13.9182, 1.18", "-13.1845, 25.8196, 14.0549, 1.18", "-12.2756, 27.2347, 14.166, 1.18", "-11.3315, 28.6086, 14.2607, 1.18", "-10.2202, 30.1812, 14.4289, 1.18", "-9.1871, 31.6789, 14.6166, 1.03", "-8.35384, 32.9816, 14.7869, 1.25", "-7.85996, 33.7844, 14.9173, 1.25", "-7.06463, 35.3492, 15.0112, 0.96", "-6.44638, 37.0366, 14.9489, 1.55", "-6.20974, 38.0373, 14.8093, 1.55", "-6.01886, 39.8133, 14.4502, 1.25", "-6.03914, 41.6122, 14.023, 1.11", "-6.59898, 45.8489, 12.9109, 0.81", "-6.93824, 47.0819, 12.5451, 1.03", "-7.45306, 48.2377, 12.1459, 1.03", "-8.32101, 49.5797, 11.7784, 0.88", "-9.33617, 50.6167, 11.6841, 0.88", "-10.584, 51.5481, 12.0861, 0.96", "-11.4558, 52.1725, 12.6556, 0.96", "-12.769, 53.0188, 13.6049, 1.03", "-14.8145, 54.2673, 15.3363, 1.25", "-15.746, 54.8508, 16.3019, 1.18", "-17.7372, 56.3054, 18.9262, 1.25", "-18.5447, 57.0687, 20.3943, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-49.1166, 271.731, -26.0822, 0.22", "-49.9033, 272.09, -25.9659, 0.22", "-50.6663, 272.439, -25.8532, 0.44", "-51.3425, 272.748, -25.7533, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-49.1166, 271.731, -26.0822, 0.22", "-50.522, 271.526, -26.6909, 0.22", "-51.7832, 271.343, -27.2371, 0.22", "-52.7699, 271.199, -27.6645, 0.22", "-53.2335, 271.132, -27.8652, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.86709, 177.213, 3.5662, 0.37", "9.13246, 178.354, 3.63429, 0.37", "9.37386, 179.12, 3.68838, 0.66", "9.62397, 179.885, 3.74877, 0.66", "9.96596, 180.999, 3.84235, 0.44", "10.1677, 181.733, 3.91108, 0.44", "10.5274, 183.267, 4.06703, 0.88", "10.5642, 183.444, 4.08925, 1.03", "10.7233, 184.475, 4.22685, 0.66", "10.8233, 185.436, 4.34913, 0.88", "10.8469, 186.018, 4.4198, 0.88", "10.8358, 186.776, 4.50186, 0.66", "10.7649, 187.768, 4.59696, 0.37", "10.7031, 188.501, 4.68468, 0.37", "10.576, 189.769, 4.86064, 0.59", "10.4956, 190.557, 4.97836, 0.81", "10.3742, 191.976, 5.19212, 0.37", "10.2999, 192.887, 5.33045, 0.37", "10.1953, 194.13, 5.51896, 0.81", "10.1324, 194.757, 5.61141, 0.96", "10.0058, 195.958, 5.77092, 0.37", "9.8965, 196.982, 5.88544, 0.29", "9.76958, 198.16, 5.99173, 0.52", "9.58977, 199.618, 6.09843, 0.74", "9.45326, 200.492, 6.15295, 0.88", "9.2953, 201.373, 6.21472, 0.66", "9.09962, 202.432, 6.29411, 0.59", "8.92004, 203.466, 6.37627, 0.74", "8.78089, 204.418, 6.45447, 0.74", "8.67083, 205.591, 6.53007, 0.59", "8.64893, 206.446, 6.5714, 0.44", "8.69008, 207.706, 6.61038, 0.29", "8.78543, 208.626, 6.62248, 0.37", "9.05787, 210.162, 6.61829, 0.52", "9.37171, 211.511, 6.60099, 0.66", "9.60465, 212.434, 6.58797, 0.66", "9.78648, 213.221, 6.61208, 0.37", "9.97225, 214.133, 6.67793, 0.52", "10.2513, 215.414, 6.80509, 0.37", "10.5508, 216.717, 6.97001, 0.52", "10.7088, 217.531, 7.09827, 0.59", "10.9584, 219.217, 7.37941, 0.81", "11.0631, 220.293, 7.55933, 0.29", "11.0734, 221.093, 7.69266, 0.29", "11.0231, 221.832, 7.83175, 0.59", "10.9035, 222.795, 8.02143, 0.59", "10.6593, 224.2, 8.29495, 0.44", "10.314, 225.758, 8.58084, 0.29", "9.94356, 227.174, 8.85761, 0.37", "9.7014, 228.015, 9.02797, 0.66", "9.37852, 229.142, 9.25533, 0.29", "8.9903, 230.547, 9.53308, 0.29", "8.49722, 232.328, 9.88595, 0.29", "8.23609, 233.298, 10.0722, 0.44", "8.169, 233.574, 10.1194, 0.44", "7.94265, 234.522, 10.2516, 0.22", "7.81299, 235.082, 10.3286, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "8.86709, 177.213, 3.5662, 0.52", "9.61582, 176.737, 3.27613, 0.52", "10.118, 176.364, 3.08442, 0.52", "10.7545, 175.902, 2.85338, 0.81", "11.2903, 175.54, 2.67276, 0.88", "12.1297, 175.024, 2.4113, 0.37", "13.0541, 174.456, 2.12339, 0.29", "14.2508, 173.689, 1.74706, 0.29", "14.8768, 173.307, 1.55562, 0.44", "15.8941, 172.724, 1.26332, 0.44", "17.0432, 172.096, 0.976473, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-41.8692, -72.582, 6.69571, 0.74", "-43.2472, -72.1144, 7.30026, 0.74", "-44.4481, -71.8237, 7.84603, 0.88", "-45.55, -71.7021, 8.34174, 1.03", "-46.7136, -71.699, 8.89095, 0.88", "-48.9307, -71.8654, 9.95566, 1.03", "-49.392, -71.9258, 10.1586, 1.03", "-50.5852, -72.2676, 10.6768, 0.81", "-51.885, -72.84, 11.1902, 0.66", "-52.7649, -73.4401, 11.4918, 0.66", "-53.424, -74.0138, 11.7132, 0.52", "-54.5316, -75.1176, 12.0601, 0.52", "-55.3973, -76.0151, 12.3711, 0.52", "-56.1717, -76.8314, 12.6942, 0.52", "-58.0855, -78.8291, 13.5408, 0.52", "-59.2213, -80.0112, 14.0488, 0.52", "-60.1198, -80.9059, 14.4517, 0.52", "-61.3285, -81.9813, 14.9576, 0.74", "-62.1033, -82.5177, 15.2224, 0.96", "-63.0887, -82.9993, 15.4382, 0.66", "-63.7391, -83.2089, 15.4921, 0.66", "-65.0399, -83.5406, 15.4558, 0.59", "-66.6241, -83.8349, 15.2971, 0.44", "-67.7911, -83.9524, 15.1145, 0.44", "-68.9998, -84.0046, 14.8723, 0.44", "-70.0756, -84.012, 14.6443, 0.44", "-71.3455, -84.0146, 14.3595, 0.44", "-72.0958, -84.0052, 14.1818, 0.44", "-73.2907, -84.0098, 13.8386, 0.59", "-73.9299, -84.0276, 13.6143, 0.52", "-74.9674, -84.0699, 13.2221, 0.37", "-76.1371, -84.1687, 12.7616, 0.52", "-76.7867, -84.2726, 12.5014, 0.52", "-78.1321, -84.5605, 11.8902, 0.74", "-78.9847, -84.7584, 11.4523, 0.59", "-79.6927, -84.8977, 11.0654, 0.59", "-80.4509, -85.0129, 10.6024, 0.37", "-81.1816, -85.113, 10.1434, 0.29", "-82.193, -85.2565, 9.54751, 0.29", "-82.9036, -85.3305, 9.16535, 0.37", "-83.4663, -85.4038, 8.88516, 0.37", "-84.206, -85.5196, 8.55141, 0.37", "-85.0342, -85.6882, 8.17749, 0.59", "-85.7301, -85.8937, 7.87728, 0.74", "-86.1131, -86.0476, 7.70532, 0.74", "-86.8644, -86.3999, 7.31778, 0.44", "-87.7026, -86.7785, 6.83756, 0.59", "-88.591, -87.1701, 6.29682, 0.74", "-89.6171, -87.6079, 5.66012, 0.29", "-90.4751, -87.9681, 5.13051, 0.29", "-91.6643, -88.5145, 4.44037, 0.37", "-92.438, -88.9264, 3.98732, 0.37", "-93.1542, -89.3152, 3.5847, 0.29", "-94.0792, -89.7781, 3.10139, 0.29", "-94.7332, -90.0474, 2.77035, 0.29", "-95.6142, -90.3418, 2.35566, 0.29", "-96.6931, -90.6332, 1.89257, 0.29", "-97.8305, -90.8628, 1.42738, 0.29", "-98.7006, -90.9445, 1.07497, 0.29", "-100.131, -90.9545, 0.46611, 0.74", "-101.016, -90.8843, 0.0785952, 0.81", "-102.174, -90.717, -0.467656, 0.29", "-102.677, -90.6474, -0.704567, 0.29", "-103.596, -90.5574, -1.18414, 0.88", "-104.252, -90.5095, -1.56167, 1.03", "-104.769, -90.4744, -1.89106, 0.52", "-105.698, -90.4145, -2.51463, 0.29", "-106.768, -90.3576, -3.23045, 0.29", "-107.211, -90.3347, -3.49564, 0.52", "-107.649, -90.302, -3.7296, 0.52", "-108.616, -90.1871, -4.20479, 0.44", "-109.475, -90.0421, -4.63101, 0.59", "-110.489, -89.795, -5.13461, 0.81", "-111.162, -89.5969, -5.48553, 0.81", "-112.061, -89.3308, -5.96033, 0.81", "-112.733, -89.1374, -6.32969, 0.74", "-113.771, -88.8509, -6.85269, 0.66", "-114.805, -88.6056, -7.35285, 0.81", "-115.58, -88.4761, -7.70494, 0.81", "-116.599, -88.394, -8.12736, 0.59", "-117.688, -88.403, -8.53247, 0.44", "-119.15, -88.5291, -9.02623, 0.37", "-120.241, -88.6809, -9.32428, 0.59", "-121.21, -88.8306, -9.53773, 0.66", "-122.056, -88.9503, -9.70189, 0.66", "-122.545, -89.0061, -9.79191, 0.59", "-123.437, -89.0637, -9.96094, 0.59", "-124.511, -89.0771, -10.2373, 0.29", "-125.417, -89.0565, -10.4195, 0.29", "-126.124, -89.0498, -10.5491, 0.29", "-126.991, -89.0861, -10.6997, 0.81", "-127.598, -89.1627, -10.7841, 0.96", "-128.367, -89.3473, -10.8647, 0.96", "-129.744, -89.8851, -11.082, 0.22", "-130.066, -90.0434, -11.1301, 0.44", "-130.579, -90.3171, -11.1824, 0.44", "-131.341, -90.7276, -11.2212, 0.59", "-131.706, -90.9117, -11.2298, 0.81", "-133.148, -91.5257, -11.1866, 0.22", "-134.02, -91.8191, -11.1391, 0.81", "-134.838, -92.0455, -11.0874, 0.96", "-135.515, -92.2016, -11.029, 0.96", "-136.521, -92.387, -10.9336, 0.52", "-138.556, -92.6959, -10.7343, 1.92", "-139.591, -92.8143, -10.6, 2.58", "-140.498, -92.9027, -10.5001, 2.73", "-141.887, -93.0447, -10.3899, 1.92", "-143.384, -93.2367, -10.353, 1.11", "-144.446, -93.3997, -10.3767, 0.74", "-145.811, -93.6513, -10.5202, 0.74", "-146.879, -93.9005, -10.7088, 1.18", "-148.222, -94.2664, -11.0319, 0.37", "-149.548, -94.6805, -11.4873, 0.44", "-150.329, -94.9718, -11.8202, 0.88", "-151.223, -95.3732, -12.2541, 0.88", "-152.183, -95.9022, -12.7705, 0.81", "-152.645, -96.1868, -13.0074, 0.88", "-153.234, -96.5301, -13.2534, 0.74", "-154.019, -96.9279, -13.4841, 0.44", "-154.78, -97.2328, -13.6224, 0.74", "-155.916, -97.5495, -13.7103, 0.29", "-156.439, -97.6447, -13.7252, 0.29", "-157.782, -97.8509, -13.7253, 0.66", "-158.362, -97.9635, -13.7112, 0.66", "-159.22, -98.1729, -13.7699, 0.59", "-159.763, -98.3585, -13.8721, 0.37", "-160.486, -98.6733, -14.0879, 0.29", "-161.288, -99.1045, -14.3895, 0.29", "-162.423, -99.8221, -14.8862, 0.29", "-163.773, -100.729, -15.5141, 0.29", "-164.885, -101.496, -16.0463, 0.29", "-165.688, -102.048, -16.4387, 0.22", "-166.359, -102.476, -16.7778, 0.22", "-166.359, -102.476, -16.7778, 0.52", "-166.798, -102.667, -16.9879, 0.52", "-167.723, -103.031, -17.2463, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-41.8692, -72.582, 6.69571, 0.66", "-42.5968, -74.6134, 7.33594, 0.66", "-43.2185, -76.2411, 7.98185, 0.59", "-43.6099, -77.1655, 8.37174, 0.74", "-44.1505, -78.295, 8.83823, 0.37", "-44.6139, -79.1294, 9.16267, 0.59", "-45.3666, -80.2959, 9.62476, 0.52", "-46.0793, -81.2326, 10.0197, 0.59", "-46.7764, -82.0812, 10.3681, 0.29", "-47.3449, -82.7926, 10.6376, 0.29", "-48.0248, -83.7424, 10.9445, 0.52", "-48.7987, -85.1379, 11.3129, 0.52", "-49.3611, -86.5243, 11.6387, 0.52", "-49.7217, -87.6456, 11.9712, 0.74", "-50.0518, -88.7573, 12.3553, 0.59", "-50.4723, -90.1698, 12.87, 0.52", "-50.8732, -91.4204, 13.3415, 0.44", "-51.2552, -92.3653, 13.6855, 0.44", "-52.2902, -94.1769, 14.3792, 0.66", "-53.0354, -95.1881, 14.7574, 0.29", "-53.6011, -95.8299, 14.9743, 0.29", "-54.1604, -96.4175, 15.148, 0.29", "-54.8085, -97.1081, 15.326, 0.66", "-55.315, -97.703, 15.4704, 0.88", "-55.7836, -98.3613, 15.6185, 0.88", "-56.4861, -99.5505, 15.9217, 0.59", "-57.0431, -100.666, 16.1952, 0.52", "-57.3454, -101.351, 16.3455, 0.52", "-57.8233, -102.588, 16.549, 0.74", "-58.1798, -103.538, 16.6514, 0.88", "-58.5396, -104.445, 16.7096, 0.74", "-59.0276, -105.662, 16.7657, 0.44", "-59.3927, -106.564, 16.8075, 0.66", "-60.0537, -108.248, 16.9225, 0.44", "-60.3909, -109.142, 17.0094, 0.44", "-60.7719, -110.132, 17.1539, 0.74", "-61.1815, -111.153, 17.3472, 0.74", "-61.6758, -112.347, 17.6044, 0.74", "-62.3828, -114.004, 17.971, 0.52", "-63.0503, -115.494, 18.3048, 0.66", "-63.6332, -116.75, 18.5405, 0.66", "-64.1071, -117.706, 18.686, 0.74", "-64.6258, -118.726, 18.7552, 0.52", "-65.1829, -119.839, 18.7534, 0.29", "-65.4726, -120.457, 18.7248, 0.29", "-65.7616, -121.151, 18.6701, 0.29", "-66.0642, -121.982, 18.5962, 0.59", "-66.7229, -123.912, 18.4345, 0.66", "-67.0631, -124.992, 18.4086, 0.52", "-67.3997, -126.024, 18.508, 0.96", "-67.6889, -127.111, 18.6457, 0.66", "-68.0649, -128.581, 18.9699, 0.44", "-68.2941, -129.374, 19.2753, 0.44", "-68.7148, -130.532, 20.1163, 0.44", "-69.1413, -131.795, 21.4092, 0.66", "-69.5682, -133.31, 23.3022, 0.96", "-69.818, -134.506, 24.9704, 0.81", "-69.9797, -135.596, 26.5322, 0.88", "-70.114, -136.714, 28.0371, 0.66", "-70.2518, -137.645, 29.1351, 0.66", "-70.4079, -138.494, 29.9468, 0.59", "-70.6339, -139.363, 30.662, 0.44", "-70.8182, -140.228, 31.1631, 0.81", "-70.9661, -141.045, 31.525, 0.81", "-71.1942, -142.296, 31.9997, 0.44", "-71.4493, -143.386, 32.3836, 0.44", "-71.7352, -144.502, 32.7752, 0.66", "-72.0966, -145.833, 33.2575, 0.59", "-72.3266, -146.893, 33.6772, 0.52", "-72.3811, -147.381, 33.8892, 0.74", "-72.4119, -149.403, 34.8591, 0.29", "-72.3719, -150.129, 35.2339, 0.29", "-72.2564, -151.248, 35.8264, 0.29", "-72.0582, -152.958, 36.728, 0.52", "-71.8081, -154.814, 37.7188, 0.37", "-71.6393, -155.84, 38.2936, 0.59", "-71.5075, -156.585, 38.7704, 0.59", "-71.3697, -157.554, 39.4771, 0.44", "-71.2767, -158.526, 40.3242, 0.44", "-71.2673, -159.056, 40.8467, 0.81", "-71.2666, -159.624, 41.4628, 0.81", "-71.2237, -160.726, 42.6711, 0.59", "-71.1749, -161.553, 43.5561, 0.52", "-71.1277, -162.361, 44.4407, 0.52", "-71.1206, -163.271, 45.3853, 0.52", "-71.1713, -163.921, 45.9445, 0.29", "-71.3003, -164.71, 46.4678, 0.29", "-71.4828, -165.502, 46.8809, 0.52", "-71.7236, -166.373, 47.293, 0.52", "-72.0959, -167.619, 47.9218, 0.29", "-72.4736, -168.799, 48.6081, 0.29", "-72.7539, -169.719, 49.1687, 0.52", "-72.9396, -170.373, 49.5659, 0.52", "-73.2361, -171.379, 50.1602, 0.29", "-73.5538, -172.447, 50.7583, 0.52", "-73.7427, -172.986, 51.0662, 0.52", "-74.1637, -174.056, 51.71, 0.52", "-74.6834, -175.23, 52.4681, 0.74", "-75.4507, -176.82, 53.4752, 0.22", "-76.0211, -177.895, 54.1333, 0.22", "-76.5903, -178.906, 54.7364, 0.22", "-77.1959, -179.972, 55.4139, 0.52", "-77.7349, -180.921, 56.1402, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-56.3033, 24.6158, -0.386643, 0.81", "-57.5398, 24.9416, 0.00104341, 0.81", "-58.319, 25.0819, 0.232879, 0.81", "-59.5925, 25.2642, 0.591125, 0.74", "-60.2996, 25.3817, 0.784886, 0.74", "-60.9412, 25.5139, 0.958423, 0.81", "-62.013, 25.8007, 1.2478, 0.96", "-62.6891, 26.0373, 1.44503, 0.52", "-63.1991, 26.2788, 1.59502, 0.52", "-64.0348, 26.9011, 1.78406, 0.74", "-64.5028, 27.3905, 1.8499, 0.74", "-65.0902, 28.1672, 1.87987, 0.44", "-65.6392, 29.016, 1.87754, 0.44", "-66.0489, 29.6505, 1.8576, 0.44", "-66.9002, 30.8458, 1.79324, 0.81", "-67.3802, 31.4188, 1.74256, 0.96", "-68.1264, 32.135, 1.64881, 0.96", "-68.6923, 32.5562, 1.57807, 0.88", "-69.5168, 33.01, 1.4956, 0.96", "-70.3107, 33.3166, 1.44637, 1.11", "-70.8906, 33.4656, 1.43789, 1.11", "-71.4888, 33.5752, 1.44338, 1.11", "-72.0233, 33.6328, 1.46648, 0.74", "-72.6557, 33.6605, 1.50761, 0.29", "-73.5731, 33.645, 1.61846, 0.29", "-74.3744, 33.6279, 1.75696, 0.88", "-74.9875, 33.6322, 1.90698, 1.03", "-75.659, 33.6552, 2.12057, 1.03", "-76.3247, 33.6805, 2.36015, 1.11", "-77.4641, 33.7429, 2.81811, 0.37", "-78.2966, 33.8006, 3.16796, 0.29", "-79.2411, 33.8674, 3.53548, 0.29", "-80.0226, 33.9189, 3.79665, 0.96", "-80.7699, 33.9525, 4.02498, 1.18", "-81.1619, 33.9432, 4.12617, 1.33", "-82.3032, 33.8207, 4.35744, 0.44", "-83.5529, 33.5852, 4.58287, 0.44", "-84.1696, 33.4481, 4.68075, 0.37", "-84.6855, 33.3507, 4.76118, 0.37", "-85.6468, 33.2318, 4.92835, 0.37", "-86.4143, 33.2035, 5.07741, 0.59", "-87.1374, 33.2537, 5.23858, 0.74", "-88.0113, 33.367, 5.44274, 0.88", "-88.7414, 33.5148, 5.62179, 0.88", "-89.3588, 33.6831, 5.79411, 0.74", "-90.2417, 33.9779, 6.06887, 0.29", "-90.7145, 34.142, 6.25586, 0.22", "-91.7013, 34.4724, 6.70067, 0.22", "-92.6734, 34.7609, 7.19175, 0.59", "-93.3074, 34.9227, 7.52866, 0.81", "-94.2514, 35.1372, 8.03949, 0.81", "-95.4313, 35.3488, 8.70118, 0.96", "-96.321, 35.4962, 9.1925, 0.59", "-97.128, 35.6693, 9.62348, 0.22", "-97.7908, 35.8238, 9.94379, 0.22", "-98.3334, 35.9924, 10.2034, 0.44", "-99.1856, 36.3532, 10.6162, 0.59", "-99.957, 36.7342, 10.9744, 0.52", "-101.099, 37.3297, 11.514, 0.66", "-101.717, 37.6487, 11.7885, 0.66", "-102.974, 38.2586, 12.3028, 0.66", "-103.76, 38.6134, 12.5988, 0.59", "-104.478, 38.8914, 12.7872, 0.44", "-105.4, 39.1155, 12.9336, 0.37", "-106.236, 39.1915, 13.0083, 0.29", "-106.87, 39.1768, 13.0313, 0.29", "-107.515, 39.1021, 13.0212, 0.44", "-108.846, 38.9062, 13.0062, 0.59", "-109.263, 38.8578, 13.0108, 0.59", "-110.514, 38.7377, 13.0752, 0.37", "-111.556, 38.6394, 13.1544, 0.29", "-112.223, 38.5868, 13.214, 0.29", "-112.556, 38.5672, 13.2591, 0.29", "-113.451, 38.5333, 13.4448, 0.59", "-113.908, 38.5253, 13.5403, 0.59", "-114.369, 38.5487, 13.6309, 0.52", "-114.917, 38.6252, 13.7587, 0.66", "-115.866, 38.7852, 14.0057, 0.29", "-116.295, 38.8391, 14.1268, 0.29", "-116.8, 38.8629, 14.2906, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-56.3033, 24.6158, -0.386643, 0.74", "-56.318, 25.6026, -0.462077, 0.74", "-56.3567, 26.7906, -0.570221, 0.74", "-56.4496, 28.2332, -0.70614, 0.74", "-56.5618, 29.0754, -0.806335, 0.74", "-56.9398, 30.9359, -1.03184, 0.88", "-57.1639, 31.786, -1.13863, 0.88", "-57.4452, 32.5432, -1.26357, 0.96", "-57.8489, 33.381, -1.42296, 0.81", "-58.6937, 34.8227, -1.71498, 0.74", "-59.4188, 35.9615, -1.99331, 0.96", "-60.0036, 36.8372, -2.23439, 0.96", "-60.7167, 37.9251, -2.56223, 0.81", "-61.2444, 38.7902, -2.85793, 0.74", "-61.5998, 39.4572, -3.11382, 0.74", "-62.1732, 40.727, -3.62211, 0.74", "-62.488, 41.4936, -3.94038, 0.88", "-62.7923, 42.2285, -4.21722, 0.88", "-63.0966, 42.9107, -4.43465, 0.66", "-63.4678, 43.6073, -4.64852, 0.66", "-63.9203, 44.3301, -4.84952, 0.81", "-64.4211, 45.0248, -5.01674, 0.81", "-65.0918, 45.8797, -5.26847, 0.66", "-65.5918, 46.4776, -5.44686, 0.81", "-66.1695, 47.1536, -5.66626, 0.81", "-66.6021, 47.7069, -5.86499, 0.59", "-66.851, 48.104, -6.01195, 0.59", "-67.2666, 48.9425, -6.28346, 0.59", "-67.5763, 49.7436, -6.48276, 0.59", "-67.8349, 50.4852, -6.64926, 0.74", "-68.1114, 51.2512, -6.8342, 0.88", "-68.5514, 52.2791, -7.11187, 1.25", "-69.0034, 53.1536, -7.37911, 0.66", "-69.463, 53.9094, -7.63272, 0.66", "-70.2704, 55.042, -8.08637, 0.81", "-70.9377, 55.8245, -8.42518, 0.81", "-71.5854, 56.4518, -8.72258, 0.96", "-72.2118, 56.96, -8.95731, 0.66", "-72.8667, 57.4283, -9.13355, 0.52", "-73.836, 58.0717, -9.28187, 0.52", "-74.6291, 58.5827, -9.30152, 1.11", "-75.14, 58.9384, -9.25448, 1.33", "-75.8695, 59.5118, -9.11964, 0.66", "-76.5274, 60.1007, -8.95006, 0.52", "-76.9861, 60.5656, -8.81082, 0.66", "-77.2236, 60.8461, -8.72979, 0.66", "-77.8582, 61.7016, -8.53941, 0.44", "-78.342, 62.449, -8.41714, 0.81", "-78.6812, 63.0343, -8.36672, 0.81", "-79.1463, 63.8934, -8.33347, 0.88", "-79.6485, 64.8424, -8.32657, 0.88", "-80.1761, 65.8133, -8.34191, 0.59", "-80.5756, 66.5049, -8.36999, 0.81", "-81.1448, 67.416, -8.40874, 0.96", "-81.5678, 68.0153, -8.41894, 0.96", "-82.0483, 68.643, -8.43714, 0.96", "-82.8571, 69.6955, -8.46772, 0.96", "-83.5563, 70.6586, -8.48745, 0.88", "-84.1095, 71.496, -8.51905, 0.88", "-84.8861, 72.861, -8.62809, 0.81", "-85.3945, 73.9504, -8.76039, 0.52", "-85.7178, 74.878, -8.91661, 0.74", "-85.9185, 75.7859, -9.1148, 0.74", "-86.0325, 76.6465, -9.34168, 0.88", "-86.123, 77.6282, -9.61942, 0.66", "-86.1988, 78.4578, -9.86849, 0.88", "-86.3343, 79.2198, -10.1103, 0.88", "-86.6001, 79.9961, -10.3897, 0.66", "-87.0545, 80.8302, -10.7062, 0.66", "-87.6032, 81.5501, -10.9682, 0.96", "-88.0734, 82.0499, -11.1107, 0.96", "-88.7277, 82.6753, -11.2537, 0.74", "-89.4673, 83.4044, -11.3596, 0.66", "-89.885, 83.8671, -11.3894, 0.66", "-90.3762, 84.479, -11.3947, 0.66", "-91.1592, 85.5606, -11.3838, 1.03", "-91.5392, 86.1638, -11.3706, 1.03", "-92.2181, 87.3475, -11.3899, 0.74", "-92.9799, 88.7535, -11.5198, 0.88", "-93.4715, 89.6267, -11.6443, 0.74", "-94.0741, 90.6104, -11.8287, 0.96", "-94.8999, 91.8153, -12.0985, 0.59", "-95.856, 93.0909, -12.4149, 0.52", "-96.5093, 93.912, -12.6499, 0.66", "-97.341, 94.9987, -12.9934, 0.81", "-97.8552, 95.733, -13.2374, 1.03", "-98.3546, 96.5178, -13.466, 0.74", "-98.6399, 96.9968, -13.5669, 0.96", "-99.0443, 97.742, -13.6374, 0.96", "-99.5588, 98.734, -13.666, 0.59", "-99.9166, 99.4601, -13.6697, 0.59", "-100.457, 100.513, -13.6406, 0.74", "-100.943, 101.349, -13.5893, 0.81", "-101.599, 102.259, -13.4898, 0.96", "-102.31, 103.066, -13.3555, 1.18", "-103.081, 103.795, -13.1958, 0.59", "-103.731, 104.349, -13.1135, 0.66", "-104.368, 104.866, -13.0934, 0.66", "-105.316, 105.631, -13.1214, 0.52", "-105.971, 106.172, -13.1788, 0.81", "-106.707, 106.779, -13.2688, 0.81", "-108.178, 107.938, -13.4715, 0.88", "-108.964, 108.523, -13.5956, 0.59", "-109.719, 109.045, -13.7247, 0.81", "-110.529, 109.576, -13.8714, 0.81", "-111.542, 110.208, -14.0451, 0.81", "-112.146, 110.573, -14.1257, 0.81", "-112.905, 111.012, -14.1638, 0.74", "-113.661, 111.456, -14.2161, 0.59", "-114.391, 111.936, -14.2793, 0.59", "-115.077, 112.494, -14.3522, 0.74", "-115.829, 113.311, -14.46, 0.81", "-116.32, 114.038, -14.5381, 0.88", "-116.615, 114.617, -14.5677, 0.88", "-116.891, 115.272, -14.578, 0.74", "-117.207, 116.096, -14.5622, 0.74", "-117.475, 116.828, -14.5367, 0.52", "-117.875, 118.011, -14.4888, 0.44", "-118.211, 118.99, -14.4368, 0.74", "-118.405, 119.483, -14.4044, 0.74", "-118.809, 120.309, -14.374, 0.59", "-119.155, 120.846, -14.3893, 0.59", "-119.539, 121.316, -14.4317, 0.59", "-120.295, 122.043, -14.539, 0.66", "-121.269, 122.823, -14.6955, 0.37", "-122.354, 123.562, -14.8581, 0.37", "-123.595, 124.27, -15.0106, 0.52", "-124.146, 124.553, -15.0602, 0.52", "-125.068, 125.009, -15.1227, 0.29", "-125.749, 125.353, -15.169, 0.66", "-126.328, 125.683, -15.1979, 0.66", "-127.154, 126.256, -15.2134, 0.37", "-127.847, 126.851, -15.2144, 0.44", "-128.535, 127.537, -15.2289, 0.29", "-129.158, 128.245, -15.268, 0.29", "-129.745, 128.968, -15.3184, 0.29", "-130.28, 129.641, -15.3723, 0.74", "-130.54, 129.941, -15.4001, 0.74", "-130.925, 130.297, -15.4278, 0.37", "-131.663, 130.818, -15.4576, 0.29", "-132.187, 131.116, -15.47, 0.29", "-132.612, 131.328, -15.4945, 0.29", "-133.346, 131.649, -15.5438, 0.29", "-134.032, 131.912, -15.5897, 0.66", "-134.528, 132.072, -15.6192, 0.66", "-135.253, 132.269, -15.6436, 0.37", "-136.03, 132.496, -15.7, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-18.5447, 57.0687, 20.3943, 0.96", "-18.74, 58.6933, 20.8455, 0.96", "-18.9995, 59.9012, 21.1227, 0.81", "-19.2818, 60.8691, 21.314, 0.74", "-19.6525, 61.8773, 21.4816, 0.74", "-20.2295, 63.1988, 21.664, 0.81", "-20.8064, 64.3635, 21.7985, 0.66", "-21.2527, 65.1014, 21.8561, 0.81", "-21.7112, 65.7863, 21.8915, 0.81", "-22.4315, 66.785, 21.9584, 0.66", "-23.246, 67.8308, 22.0572, 0.81", "-23.824, 68.5552, 22.1497, 0.96", "-24.3845, 69.3363, 22.2622, 1.03", "-24.9878, 70.2651, 22.3985, 0.59", "-25.502, 71.1641, 22.4845, 0.59", "-26.0032, 72.1401, 22.5354, 0.44", "-26.3843, 72.9247, 22.5522, 0.44", "-27.1326, 74.4353, 22.5479, 0.81", "-27.5461, 75.1938, 22.5191, 1.03", "-28.4478, 76.5791, 22.531, 0.66", "-28.9185, 77.1591, 22.571, 0.66", "-29.4971, 77.7449, 22.6801, 0.81", "-30.1122, 78.2956, 22.8517, 0.59", "-30.8738, 78.9239, 23.1797, 0.44", "-32.2969, 80.1718, 24.0061, 0.44", "-33.2897, 81.1521, 24.7457, 0.37", "-34.119, 82.1295, 25.4238, 0.37", "-34.687, 82.9907, 25.9197, 0.37", "-35.4401, 84.5122, 26.5768, 0.44", "-35.7202, 85.4035, 27.1224, 0.29", "-35.8938, 86.1505, 27.4707, 0.29", "-36.1439, 87.2982, 27.8945, 0.29", "-36.4407, 88.4456, 28.2127, 0.96", "-36.7449, 89.3928, 28.4198, 1.11", "-38.6144, 94.708, 29.4212, 1.11", "-40.4153, 99.1818, 30.629, 0.44", "-40.6903, 99.9151, 30.9851, 0.29", "-40.902, 100.726, 31.7282, 0.29", "-40.8881, 101.065, 32.3998, 0.29", "-40.7237, 101.215, 33.2298, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-18.5447, 57.0687, 20.3943, 0.74", "-17.8626, 57.8545, 21.2376, 0.74", "-17.555, 58.2088, 21.6178, 0.74", "-16.9656, 58.8878, 22.3465, 0.74", "-16.443, 59.4899, 22.9925, 1.03", "-15.9071, 60.1073, 23.6551, 1.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.9071, 60.1073, 23.6551, 0.66", "-15.703, 61.089, 23.688, 0.66", "-15.6092, 61.8402, 23.7457, 0.66", "-15.5505, 62.7417, 23.8231, 0.74", "-15.527, 63.7681, 23.9233, 0.74", "-15.5319, 65.078, 24.0675, 1.18", "-15.5512, 66.2559, 24.2201, 0.96", "-15.5773, 67.236, 24.3895, 0.81", "-15.6068, 68.2643, 24.581, 0.52", "-15.6179, 69.1044, 24.7665, 0.52", "-15.6229, 70.0093, 24.997, 0.96", "-15.6294, 70.5101, 25.1269, 0.96", "-15.6433, 71.2371, 25.3618, 0.96", "-15.6595, 71.8691, 25.5794, 0.59", "-15.686, 72.6137, 25.8027, 0.37", "-15.6544, 73.3139, 26.0502, 0.37", "-15.5743, 73.904, 26.2671, 0.37", "-15.3335, 74.8637, 26.5573, 0.37", "-14.8723, 76.0005, 26.8123, 0.37", "-14.3419, 76.8555, 26.935, 0.74", "-13.1029, 78.5321, 27.0972, 0.22", "-12.633, 79.0712, 27.1329, 0.22", "-11.7036, 79.976, 27.1616, 0.22", "-10.7679, 80.7105, 27.1585, 0.22", "-10.0726, 81.1564, 27.1538, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.9071, 60.1073, 23.6551, 0.74", "-15.088, 60.353, 24.4637, 0.74", "-14.514, 60.7696, 25.1248, 0.44", "-14.0166, 61.2994, 25.7485, 0.44", "-13.6712, 61.7469, 26.1904, 0.59", "-13.2877, 62.2724, 26.6766, 0.29", "-12.8105, 62.9191, 27.3362, 0.29", "-12.5163, 63.4526, 27.8052, 0.44", "-12.3784, 63.7642, 28.0493, 0.44", "-12.1108, 64.4668, 28.5832, 0.66", "-11.8609, 65.0709, 29.0221, 0.74", "-11.3888, 65.9847, 29.7781, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "axon_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "axon_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_ChC_a7e068ee2e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, axon_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, axon_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.45000043190095856)
    connect dend_37(0), soma_0(0.45000043190095856)
    connect dend_24(0), soma_0(0.45000043190095856)
    connect dend_9(0), soma_0(0.45000043190095856)
    connect dend_0(0), soma_0(0.45000043190095856)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.247476, -12.3185, -1.01707, 2.36383 ) }
    soma_0 { pt3dadd( 0.272374, -11.1472, -0.92957, 3.66321 ) }
    soma_0 { pt3dadd( 0.297273, -9.97598, -0.842075, 5.22974 ) }
    soma_0 { pt3dadd( 0.322171, -8.80474, -0.75458, 6.26105 ) }
    soma_0 { pt3dadd( 0.34707, -7.63351, -0.667085, 6.92536 ) }
    soma_0 { pt3dadd( 0.371968, -6.46227, -0.57959, 7.55364 ) }
    soma_0 { pt3dadd( 0.396866, -5.29103, -0.492094, 8.36178 ) }
    soma_0 { pt3dadd( 0.421765, -4.1198, -0.404599, 9.09467 ) }
    soma_0 { pt3dadd( 0.446663, -2.94856, -0.317104, 9.82452 ) }
    soma_0 { pt3dadd( 0.471562, -1.77733, -0.229609, 10.5969 ) }
    soma_0 { pt3dadd( 0.49646, -0.606089, -0.142114, 10.9527 ) }
    soma_0 { pt3dadd( 0.521359, 0.565147, -0.0546186, 11.1935 ) }
    soma_0 { pt3dadd( 0.546257, 1.73638, 0.0328765, 11.3346 ) }
    soma_0 { pt3dadd( 0.571156, 2.90762, 0.120372, 11.3156 ) }
    soma_0 { pt3dadd( 0.596054, 4.07886, 0.207867, 11.2804 ) }
    soma_0 { pt3dadd( 0.620953, 5.25009, 0.295362, 11.0098 ) }
    soma_0 { pt3dadd( 0.645851, 6.42133, 0.382857, 10.6994 ) }
    soma_0 { pt3dadd( 0.67075, 7.59256, 0.470352, 10.2417 ) }
    soma_0 { pt3dadd( 0.695648, 8.7638, 0.557847, 9.96532 ) }
    soma_0 { pt3dadd( 0.720546, 9.93504, 0.645343, 4.49434 ) }
    soma_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 2.79989 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 5.17534, 7.60086, -4.88165, 0.29 ) }
    dend_38 { pt3dadd( 5.58986, 8.25164, -4.6502, 0.29 ) }
    dend_38 { pt3dadd( 6.03482, 8.96095, -4.43048, 0.37 ) }
    dend_38 { pt3dadd( 6.51276, 9.73489, -4.22341, 0.52 ) }
    dend_38 { pt3dadd( 6.79192, 10.195, -4.11649, 0.52 ) }
    dend_38 { pt3dadd( 7.18856, 10.8335, -3.98608, 0.81 ) }
    dend_38 { pt3dadd( 7.42148, 11.2269, -3.91701, 0.81 ) }
    dend_38 { pt3dadd( 7.67873, 11.7172, -3.83212, 0.29 ) }
    dend_38 { pt3dadd( 7.90814, 12.2431, -3.7541, 0.59 ) }
    dend_38 { pt3dadd( 8.09606, 12.7381, -3.69913, 0.59 ) }
    dend_38 { pt3dadd( 8.2911, 13.3014, -3.63388, 0.59 ) }
    dend_38 { pt3dadd( 8.54712, 14.0646, -3.54028, 0.29 ) }
    dend_38 { pt3dadd( 8.91568, 15.1542, -3.41172, 0.29 ) }
    dend_38 { pt3dadd( 9.15756, 15.826, -3.33675, 0.81 ) }
    dend_38 { pt3dadd( 9.32116, 16.2421, -3.29457, 0.81 ) }
    dend_38 { pt3dadd( 9.55412, 16.7904, -3.24956, 0.52 ) }
    dend_38 { pt3dadd( 9.92129, 17.5218, -3.20694, 0.29 ) }
    dend_38 { pt3dadd( 10.4469, 18.4542, -3.17185, 0.22 ) }
    dend_38 { pt3dadd( 10.7635, 18.9606, -3.17156, 0.29 ) }
    dend_38 { pt3dadd( 11.1069, 19.4819, -3.17168, 0.29 ) }
    dend_38 { pt3dadd( 11.8171, 20.5342, -3.17233, 0.22 ) }
    dend_38 { pt3dadd( 12.5024, 21.5143, -3.17352, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.00466, -10.0701, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.00466, -10.0701, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.45982, -10.6973, 5.49699, 1.11 ) }
    dend_37 { pt3dadd( -2.0325, -11.5755, 5.52117, 0.88 ) }
    dend_37 { pt3dadd( -2.44595, -12.273, 5.59264, 0.88 ) }
    dend_37 { pt3dadd( -3.03373, -13.3968, 5.79341, 1.18 ) }
    dend_37 { pt3dadd( -3.40493, -14.2358, 6.02471, 1.18 ) }
    dend_37 { pt3dadd( -3.81722, -15.5425, 6.51152, 0.81 ) }
    dend_37 { pt3dadd( -3.90726, -16.1424, 6.79413, 1.11 ) }
    dend_37 { pt3dadd( -3.83764, -17.0664, 7.28932, 1.11 ) }
    dend_37 { pt3dadd( -3.62684, -17.8446, 7.76438, 0.96 ) }
    dend_37 { pt3dadd( -3.20185, -18.8524, 8.43149, 1.11 ) }
    dend_37 { pt3dadd( -2.85767, -19.5537, 8.90268, 1.25 ) }
    dend_37 { pt3dadd( -2.56635, -20.0995, 9.25878, 0.96 ) }
    dend_37 { pt3dadd( -2.13043, -21.093, 9.80625, 1.03 ) }
    dend_37 { pt3dadd( -1.88455, -21.8927, 10.1403, 1.03 ) }
    dend_37 { pt3dadd( -1.82059, -22.405, 10.3112, 0.59 ) }
    dend_37 { pt3dadd( -1.86712, -23.0945, 10.5359, 0.88 ) }
    dend_37 { pt3dadd( -1.95313, -23.4145, 10.6561, 0.88 ) }
    dend_37 { pt3dadd( -2.38979, -24.3887, 11.0614, 0.66 ) }
    dend_37 { pt3dadd( -2.65812, -24.7951, 11.2665, 0.74 ) }
    dend_37 { pt3dadd( -3.09848, -25.4072, 11.5898, 0.66 ) }
    dend_37 { pt3dadd( -3.63015, -26.2054, 12.0266, 0.88 ) }
    dend_37 { pt3dadd( -3.98416, -26.8317, 12.3548, 0.81 ) }
    dend_37 { pt3dadd( -4.20186, -27.3116, 12.5996, 0.44 ) }
    dend_37 { pt3dadd( -4.53031, -28.2935, 13.086, 0.81 ) }
    dend_37 { pt3dadd( -4.75583, -29.2005, 13.4807, 0.81 ) }
    dend_37 { pt3dadd( -4.90893, -30.1788, 13.8099, 0.59 ) }
    dend_37 { pt3dadd( -4.97798, -31.0695, 14.0318, 1.11 ) }
    dend_37 { pt3dadd( -4.98282, -31.8133, 14.1594, 1.33 ) }
    dend_37 { pt3dadd( -4.95413, -32.4512, 14.2447, 1.11 ) }
    dend_37 { pt3dadd( -4.8742, -33.3227, 14.3414, 0.81 ) }
    dend_37 { pt3dadd( -4.78048, -34.1349, 14.482, 0.66 ) }
    dend_37 { pt3dadd( -4.68415, -34.6794, 14.6496, 1.18 ) }
    dend_37 { pt3dadd( -4.45357, -35.5431, 15.0661, 0.96 ) }
    dend_37 { pt3dadd( -4.26258, -36.1294, 15.4256, 0.74 ) }
    dend_37 { pt3dadd( -3.9978, -36.8696, 15.9693, 0.66 ) }
    dend_37 { pt3dadd( -3.70196, -37.6772, 16.6354, 0.88 ) }
    dend_37 { pt3dadd( -3.38662, -38.6356, 17.5192, 1.18 ) }
    dend_37 { pt3dadd( -3.18319, -39.436, 18.2914, 0.66 ) }
    dend_37 { pt3dadd( -3.10974, -39.9678, 18.7961, 0.59 ) }
    dend_37 { pt3dadd( -3.09748, -40.4637, 19.1916, 0.74 ) }
    dend_37 { pt3dadd( -3.14047, -41.0311, 19.5515, 0.44 ) }
    dend_37 { pt3dadd( -3.27633, -41.8604, 19.9212, 0.44 ) }
    dend_37 { pt3dadd( -3.3993, -42.3754, 20.0513, 0.44 ) }
    dend_37 { pt3dadd( -3.61336, -43.1688, 20.1302, 0.37 ) }
    dend_37 { pt3dadd( -3.78029, -43.9622, 20.3041, 0.37 ) }
    dend_37 { pt3dadd( -3.88311, -44.5046, 20.5278, 0.96 ) }
    dend_37 { pt3dadd( -3.95092, -44.865, 20.7387, 0.96 ) }
    dend_37 { pt3dadd( -4.0977, -45.5447, 21.2626, 0.44 ) }
    dend_37 { pt3dadd( -4.27948, -46.1898, 21.8478, 0.81 ) }
    dend_37 { pt3dadd( -4.93155, -48.3064, 23.9041, 0.88 ) }
    dend_37 { pt3dadd( -5.17634, -49.0922, 24.6762, 0.88 ) }
    dend_37 { pt3dadd( -5.2683, -49.4445, 25.0007, 0.88 ) }
    dend_37 { pt3dadd( -5.39936, -50.1058, 25.5427, 0.66 ) }
    dend_37 { pt3dadd( -5.54236, -51.0856, 26.245, 0.52 ) }
    dend_37 { pt3dadd( -5.60625, -51.7939, 26.6015, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( -5.62423, -52.5024, 26.7691, 0.59 ) }
    dend_37 { pt3dadd( -5.55112, -53.3877, 26.9652, 0.74 ) }
    dend_37 { pt3dadd( -5.48361, -53.9045, 27.09, 0.74 ) }
    dend_37 { pt3dadd( -5.29033, -55.2112, 27.4549, 0.74 ) }
    dend_37 { pt3dadd( -5.15505, -56.031, 27.767, 0.52 ) }
    dend_37 { pt3dadd( -5.06635, -56.5509, 28.0028, 0.66 ) }
    dend_37 { pt3dadd( -4.96386, -57.0885, 28.2556, 0.66 ) }
    dend_37 { pt3dadd( -4.78354, -57.8003, 28.5987, 0.37 ) }
    dend_37 { pt3dadd( -4.62166, -58.276, 28.7931, 0.37 ) }
    dend_37 { pt3dadd( -4.36901, -58.8895, 28.9648, 0.37 ) }
    dend_37 { pt3dadd( -4.09664, -59.5681, 29.1199, 0.37 ) }
    dend_37 { pt3dadd( -3.87878, -60.1296, 29.2245, 0.37 ) }
    dend_37 { pt3dadd( -3.49792, -61.0309, 29.3672, 0.37 ) }
    dend_37 { pt3dadd( -3.26522, -61.5134, 29.4489, 0.52 ) }
    dend_37 { pt3dadd( -3.09996, -61.859, 29.5048, 0.66 ) }
    dend_37 { pt3dadd( -2.87763, -62.3803, 29.5924, 0.52 ) }
    dend_37 { pt3dadd( -2.61903, -63.0786, 29.725, 0.52 ) }
    dend_37 { pt3dadd( -2.36868, -63.7881, 29.8723, 0.74 ) }
    dend_37 { pt3dadd( -2.15702, -64.3911, 29.9816, 0.88 ) }
    dend_37 { pt3dadd( -1.92997, -65.0225, 30.1036, 0.96 ) }
    dend_37 { pt3dadd( -1.78808, -65.4104, 30.1816, 0.96 ) }
    dend_37 { pt3dadd( -1.64247, -65.8049, 30.2627, 0.81 ) }
    dend_37 { pt3dadd( -1.41471, -66.5116, 30.3989, 1.18 ) }
    dend_37 { pt3dadd( -1.2922, -67.0138, 30.4962, 1.4 ) }
    dend_37 { pt3dadd( -1.21056, -67.412, 30.5622, 1.4 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.87466, -11.8024, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -2.87466, -11.8024, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -3.34927, -12.2962, -0.216853, 2.87 ) }
    dend_24 { pt3dadd( -4.26215, -13.2615, -0.149413, 2.21 ) }
    dend_24 { pt3dadd( -5.05947, -14.1047, -0.0905114, 2.21 ) }
    dend_24 { pt3dadd( -5.63774, -14.7162, -0.0477913, 2.21 ) }
    dend_24 { pt3dadd( -6.37115, -15.4917, 0.00638996, 2.21 ) }
    dend_24 { pt3dadd( -7.13428, -16.2936, 0.0571794, 2.21 ) }
    dend_24 { pt3dadd( -7.91929, -17.1068, 0.0963994, 2.36 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.71466, 9.84559, 3.05835, 3.83 ) }
    dend_9 { pt3dadd( -4.05868, 10.3775, 3.38383, 3.83 ) }
    dend_9 { pt3dadd( -4.86419, 11.6228, 4.14591, 3.32 ) }
    dend_9 { pt3dadd( -5.54756, 12.6793, 4.79244, 3.32 ) }
    dend_9 { pt3dadd( -6.16219, 13.6296, 5.37393, 3.39 ) }
    dend_9 { pt3dadd( -7.00212, 14.9281, 6.16858, 3.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.19534, 8.27736, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.19534, 8.27736, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.32644, 9.01483, -3.72099, 1.03 ) }
    dend_0 { pt3dadd( 4.43178, 9.68679, -3.36262, 1.03 ) }
    dend_0 { pt3dadd( 4.55653, 10.6289, -2.82408, 1.03 ) }
    dend_0 { pt3dadd( 4.62615, 11.2418, -2.46899, 1.03 ) }
    dend_0 { pt3dadd( 4.69513, 11.9449, -2.06946, 1.03 ) }
    dend_0 { pt3dadd( 4.77888, 12.976, -1.49111, 1.11 ) }
    dend_0 { pt3dadd( 4.81506, 13.551, -1.1444, 1.33 ) }
    dend_0 { pt3dadd( 4.84521, 14.2311, -0.728059, 1.33 ) }
    dend_0 { pt3dadd( 4.8626, 14.582, -0.520515, 1.47 ) }
    dend_0 { pt3dadd( 4.90075, 15.0123, -0.277231, 1.47 ) }
    dend_0 { pt3dadd( 4.98279, 15.706, 0.0697434, 1.25 ) }
    dend_0 { pt3dadd( 5.1489, 16.779, 0.518618, 1.25 ) }
    dend_0 { pt3dadd( 5.25751, 17.3181, 0.71243, 1.4 ) }
    dend_0 { pt3dadd( 5.46409, 18.1235, 0.972113, 1.4 ) }
    dend_0 { pt3dadd( 5.73789, 19.0912, 1.21339, 1.18 ) }
    dend_0 { pt3dadd( 5.96213, 19.8786, 1.33018, 1.25 ) }
    dend_0 { pt3dadd( 6.1455, 20.5555, 1.36387, 1.11 ) }
    dend_0 { pt3dadd( 6.37728, 21.5202, 1.292, 0.88 ) }
    dend_0 { pt3dadd( 6.56222, 22.4068, 1.16791, 0.88 ) }
    dend_0 { pt3dadd( 6.75794, 23.6224, 0.939338, 0.88 ) }
    dend_0 { pt3dadd( 6.87992, 24.8071, 0.675114, 1.4 ) }
    dend_0 { pt3dadd( 6.93424, 25.7954, 0.444132, 1.55 ) }
    dend_0 { pt3dadd( 6.94414, 27.1135, 0.160661, 1.84 ) }
    dend_0 { pt3dadd( 6.92742, 27.6534, 0.0583754, 1.84 ) }
    dend_0 { pt3dadd( 6.88691, 28.6597, -0.0971772, 1.33 ) }
    dend_0 { pt3dadd( 6.86135, 29.838, -0.210671, 0.96 ) }
    dend_0 { pt3dadd( 6.88603, 30.8351, -0.265256, 0.96 ) }
    dend_0 { pt3dadd( 7.00531, 32.1791, -0.299036, 1.03 ) }
    dend_0 { pt3dadd( 7.12177, 32.8171, -0.290667, 1.25 ) }
    dend_0 { pt3dadd( 7.39161, 33.7414, -0.265882, 1.47 ) }
    dend_0 { pt3dadd( 7.65551, 34.357, -0.243962, 1.47 ) }
    dend_0 { pt3dadd( 8.14811, 35.2123, -0.208241, 1.03 ) }
    dend_0 { pt3dadd( 8.59712, 35.8329, -0.196395, 1.03 ) }
    dend_0 { pt3dadd( 9.17443, 36.518, -0.18837, 1.47 ) }
    dend_0 { pt3dadd( 9.72767, 37.127, -0.165665, 1.25 ) }
    dend_0 { pt3dadd( 10.0964, 37.5114, -0.134361, 1.55 ) }
    dend_0 { pt3dadd( 10.8062, 38.2351, -0.0645692, 0.81 ) }
    dend_0 { pt3dadd( 11.4732, 38.9108, 0.0147997, 0.81 ) }
    dend_0 { pt3dadd( 11.992, 39.4409, 0.0900464, 1.25 ) }
    dend_0 { pt3dadd( 12.455, 39.9303, 0.175337, 1.47 ) }
    dend_0 { pt3dadd( 12.8905, 40.4121, 0.277928, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 0.885242 ) }
    axon_0 { pt3dadd( 1.06425, 26.1029, 0.732838, 0.885242 ) }
    axon_0 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.885242 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 86/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -7.91929, -17.1068, 0.0963994, 0.96 ) }
    dend_36 { pt3dadd( -8.07644, -17.5822, 0.606899, 0.96 ) }
    dend_36 { pt3dadd( -8.48794, -18.7178, 1.7726, 0.74 ) }
    dend_36 { pt3dadd( -9.24485, -20.7699, 3.75233, 1.11 ) }
    dend_36 { pt3dadd( -9.71629, -21.9835, 4.83452, 0.81 ) }
    dend_36 { pt3dadd( -10.0407, -22.7717, 5.4646, 0.66 ) }
    dend_36 { pt3dadd( -10.3168, -23.4044, 5.91536, 0.44 ) }
    dend_36 { pt3dadd( -10.6575, -24.0959, 6.35995, 0.66 ) }
    dend_36 { pt3dadd( -10.9238, -24.5683, 6.58107, 1.03 ) }
    dend_36 { pt3dadd( -11.3087, -25.3011, 6.69536, 1.03 ) }
    dend_36 { pt3dadd( -11.8196, -26.3295, 6.71714, 0.81 ) }
    dend_36 { pt3dadd( -12.1872, -27.2026, 6.69183, 0.81 ) }
    dend_36 { pt3dadd( -12.4621, -28.0452, 6.63422, 0.96 ) }
    dend_36 { pt3dadd( -12.8015, -29.5591, 6.49242, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -13.083, -31.5477, 6.28771, 0.52 ) }
    dend_36 { pt3dadd( -13.1355, -32.3847, 6.17707, 0.88 ) }
    dend_36 { pt3dadd( -13.132, -33.7125, 5.93048, 0.74 ) }
    dend_36 { pt3dadd( -13.039, -35.3631, 5.53991, 0.59 ) }
    dend_36 { pt3dadd( -12.8893, -36.8775, 5.11339, 0.74 ) }
    dend_36 { pt3dadd( -12.7094, -38.39, 4.67633, 0.59 ) }
    dend_36 { pt3dadd( -12.5107, -40.3397, 4.11209, 0.74 ) }
    dend_36 { pt3dadd( -12.4254, -41.9494, 3.64865, 0.81 ) }
    dend_36 { pt3dadd( -12.4307, -43.2453, 3.2924, 0.52 ) }
    dend_36 { pt3dadd( -12.486, -44.2868, 3.03906, 0.66 ) }
    dend_36 { pt3dadd( -12.6126, -45.5888, 2.78403, 0.59 ) }
    dend_36 { pt3dadd( -12.8084, -46.9875, 2.62731, 0.74 ) }
    dend_36 { pt3dadd( -13.0269, -48.0899, 2.61866, 0.74 ) }
    dend_36 { pt3dadd( -13.3618, -49.3943, 2.71062, 0.52 ) }
    dend_36 { pt3dadd( -13.6794, -50.3949, 2.81217, 0.96 ) }
    dend_36 { pt3dadd( -13.8835, -51.014, 2.87613, 1.11 ) }
    dend_36 { pt3dadd( -14.1175, -51.8176, 2.94493, 1.25 ) }
    dend_36 { pt3dadd( -14.3418, -52.6502, 3.0098, 0.96 ) }
    dend_36 { pt3dadd( -14.6119, -53.6873, 3.07293, 0.96 ) }
    dend_36 { pt3dadd( -14.9659, -55.0334, 3.1006, 0.52 ) }
    dend_36 { pt3dadd( -15.2243, -56.1407, 3.08924, 0.59 ) }
    dend_36 { pt3dadd( -15.4407, -57.2626, 3.05517, 0.81 ) }
    dend_36 { pt3dadd( -15.5855, -58.3395, 2.97197, 0.96 ) }
    dend_36 { pt3dadd( -15.6462, -59.3428, 2.84788, 0.96 ) }
    dend_36 { pt3dadd( -15.65, -60.759, 2.60156, 0.74 ) }
    dend_36 { pt3dadd( -15.6009, -62.3151, 2.27406, 0.74 ) }
    dend_36 { pt3dadd( -15.5753, -63.3484, 2.02236, 1.03 ) }
    dend_36 { pt3dadd( -15.5572, -64.7402, 1.65539, 1.25 ) }
    dend_36 { pt3dadd( -15.5259, -65.9518, 1.29907, 0.66 ) }
    dend_36 { pt3dadd( -15.5048, -66.7866, 1.09554, 0.52 ) }
    dend_36 { pt3dadd( -15.4971, -67.7161, 0.930696, 0.74 ) }
    dend_36 { pt3dadd( -15.5159, -68.897, 0.818658, 0.74 ) }
    dend_36 { pt3dadd( -15.5389, -69.9921, 0.844667, 0.66 ) }
    dend_36 { pt3dadd( -15.5663, -71.1177, 0.993243, 0.66 ) }
    dend_36 { pt3dadd( -15.5864, -73.3513, 1.46309, 0.66 ) }
    dend_36 { pt3dadd( -15.5547, -74.5383, 1.77592, 0.74 ) }
    dend_36 { pt3dadd( -15.4634, -76.1286, 2.2408, 0.74 ) }
    dend_36 { pt3dadd( -15.3445, -77.9373, 2.829, 0.88 ) }
    dend_36 { pt3dadd( -15.3033, -79.0219, 3.19453, 1.11 ) }
    dend_36 { pt3dadd( -15.2994, -80.2976, 3.62329, 1.11 ) }
    dend_36 { pt3dadd( -15.3052, -81.8324, 4.08469, 0.88 ) }
    dend_36 { pt3dadd( -15.3195, -83.308, 4.55446, 0.74 ) }
    dend_36 { pt3dadd( -15.3196, -85.0379, 5.05477, 0.59 ) }
    dend_36 { pt3dadd( -15.2605, -86.478, 5.36497, 0.44 ) }
    dend_36 { pt3dadd( -15.2069, -87.0283, 5.45128, 0.74 ) }
    dend_36 { pt3dadd( -15.0323, -88.0864, 5.56264, 0.88 ) }
    dend_36 { pt3dadd( -14.7627, -89.1443, 5.67717, 0.88 ) }
    dend_36 { pt3dadd( -14.2297, -90.7917, 5.87809, 0.66 ) }
    dend_36 { pt3dadd( -13.8512, -91.8367, 6.04839, 0.81 ) }
    dend_36 { pt3dadd( -13.5416, -92.7987, 6.27145, 0.81 ) }
    dend_36 { pt3dadd( -13.3668, -93.7385, 6.52115, 0.59 ) }
    dend_36 { pt3dadd( -13.3031, -95.2743, 6.91618, 0.74 ) }
    dend_36 { pt3dadd( -13.3791, -96.2083, 7.1094, 0.96 ) }
    dend_36 { pt3dadd( -13.531, -97.1149, 7.22094, 0.96 ) }
    dend_36 { pt3dadd( -13.802, -98.3574, 7.20956, 0.66 ) }
    dend_36 { pt3dadd( -14.1561, -99.8983, 7.00648, 0.44 ) }
    dend_36 { pt3dadd( -14.4154, -101.078, 6.72102, 0.81 ) }
    dend_36 { pt3dadd( -14.6691, -102.459, 6.28962, 0.81 ) }
    dend_36 { pt3dadd( -14.9216, -104.282, 5.67402, 0.37 ) }
    dend_36 { pt3dadd( -15.0336, -105.431, 5.26682, 0.81 ) }
    dend_36 { pt3dadd( -15.0841, -106.438, 4.92131, 1.03 ) }
    dend_36 { pt3dadd( -15.0809, -107.433, 4.64137, 0.52 ) }
    dend_36 { pt3dadd( -15.009, -108.623, 4.43789, 0.29 ) }
    dend_36 { pt3dadd( -14.9367, -109.211, 4.39287, 0.88 ) }
    dend_36 { pt3dadd( -14.8703, -109.648, 4.39069, 1.11 ) }
    dend_36 { pt3dadd( -14.7581, -110.266, 4.37849, 1.18 ) }
    dend_36 { pt3dadd( -14.586, -111.202, 4.33946, 0.81 ) }
    dend_36 { pt3dadd( -14.3503, -112.593, 4.24932, 0.44 ) }
    dend_36 { pt3dadd( -14.2136, -113.497, 4.13804, 0.29 ) }
    dend_36 { pt3dadd( -14.1058, -114.362, 4.02354, 0.29 ) }
    dend_36 { pt3dadd( -14.0349, -115.317, 3.89412, 0.59 ) }
    dend_36 { pt3dadd( -14.0278, -115.682, 3.84877, 0.88 ) }
    dend_36 { pt3dadd( -14.0529, -116.259, 3.80017, 0.88 ) }
    dend_36 { pt3dadd( -14.1311, -116.994, 3.80633, 0.59 ) }
    dend_36 { pt3dadd( -14.2548, -118.025, 3.95101, 0.29 ) }
    dend_36 { pt3dadd( -14.333, -118.625, 4.08781, 0.66 ) }
    dend_36 { pt3dadd( -14.4296, -119.306, 4.3067, 0.81 ) }
    dend_36 { pt3dadd( -14.5322, -120.05, 4.5667, 1.03 ) }
    dend_36 { pt3dadd( -14.6266, -120.655, 4.77879, 1.18 ) }
    dend_36 { pt3dadd( -14.7636, -121.338, 5.01549, 1.18 ) }
    dend_36 { pt3dadd( -14.8603, -121.752, 5.14382, 1.25 ) }
    dend_36 { pt3dadd( -15.1027, -122.688, 5.38248, 0.96 ) }
    dend_36 { pt3dadd( -15.3518, -123.582, 5.55613, 0.59 ) }
    dend_36 { pt3dadd( -15.65, -124.684, 5.70634, 0.37 ) }
    dend_36 { pt3dadd( -15.8854, -125.593, 5.7756, 0.22 ) }
    dend_36 { pt3dadd( -16.012, -126.103, 5.78909, 0.29 ) }
    dend_36 { pt3dadd( -16.2449, -127.118, 5.78149, 0.44 ) }
    dend_36 { pt3dadd( -16.3862, -127.763, 5.75436, 1.03 ) }
    dend_36 { pt3dadd( -16.5608, -128.664, 5.71242, 1.18 ) }
    dend_36 { pt3dadd( -16.6727, -129.333, 5.67226, 1.18 ) }
    dend_36 { pt3dadd( -16.877, -130.595, 5.58976, 0.59 ) }
    dend_36 { pt3dadd( -17.0564, -131.543, 5.55893, 0.59 ) }
    dend_36 { pt3dadd( -17.2437, -132.413, 5.5499, 0.59 ) }
    dend_36 { pt3dadd( -17.5477, -133.788, 5.51082, 0.81 ) }
    dend_36 { pt3dadd( -17.6965, -134.454, 5.48293, 0.88 ) }
    dend_36 { pt3dadd( -18.0286, -135.907, 5.41652, 0.52 ) }
    dend_36 { pt3dadd( -18.3692, -137.466, 5.34298, 0.52 ) }
    dend_36 { pt3dadd( -18.6619, -138.903, 5.30236, 0.59 ) }
    dend_36 { pt3dadd( -18.8686, -140.027, 5.26242, 0.29 ) }
    dend_36 { pt3dadd( -18.9779, -140.739, 5.22169, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -19.0692, -141.483, 5.16857, 0.88 ) }
    dend_36 { pt3dadd( -19.2108, -142.933, 5.02524, 0.29 ) }
    dend_36 { pt3dadd( -19.3151, -144.008, 4.88978, 1.03 ) }
    dend_36 { pt3dadd( -19.4247, -145.004, 4.73351, 1.25 ) }
    dend_36 { pt3dadd( -19.5392, -145.978, 4.54172, 1.03 ) }
    dend_36 { pt3dadd( -19.6973, -147.531, 4.13723, 0.44 ) }
    dend_36 { pt3dadd( -19.7924, -148.576, 3.7831, 0.44 ) }
    dend_36 { pt3dadd( -19.9191, -149.71, 3.32124, 0.44 ) }
    dend_36 { pt3dadd( -20.1227, -151.168, 2.64434, 0.44 ) }
    dend_36 { pt3dadd( -20.3487, -152.587, 1.97678, 0.66 ) }
    dend_36 { pt3dadd( -20.55, -153.826, 1.35679, 1.55 ) }
    dend_36 { pt3dadd( -20.7248, -154.88, 0.802964, 1.92 ) }
    dend_36 { pt3dadd( -20.9386, -156.198, 0.1507, 0.66 ) }
    dend_36 { pt3dadd( -21.2107, -157.688, -0.509497, 0.59 ) }
    dend_36 { pt3dadd( -21.4444, -158.73, -0.88956, 0.29 ) }
    dend_36 { pt3dadd( -21.7796, -159.976, -1.24538, 0.29 ) }
    dend_36 { pt3dadd( -22.089, -161.022, -1.46399, 0.29 ) }
    dend_36 { pt3dadd( -22.6187, -162.747, -1.70638, 0.29 ) }
    dend_36 { pt3dadd( -22.9523, -163.825, -1.80003, 1.25 ) }
    dend_36 { pt3dadd( -23.2871, -164.958, -1.84404, 1.33 ) }
    dend_36 { pt3dadd( -23.7294, -166.528, -1.87594, 0.52 ) }
    dend_36 { pt3dadd( -23.9015, -167.214, -1.87309, 0.52 ) }
    dend_36 { pt3dadd( -24.0779, -168.164, -1.87082, 0.66 ) }
    dend_36 { pt3dadd( -24.1933, -169.1, -1.86734, 0.37 ) }
    dend_36 { pt3dadd( -24.2281, -169.931, -1.85722, 0.29 ) }
    dend_36 { pt3dadd( -24.2021, -170.655, -1.83778, 0.81 ) }
    dend_36 { pt3dadd( -24.1148, -171.462, -1.80135, 0.96 ) }
    dend_36 { pt3dadd( -23.9704, -172.435, -1.7397, 0.59 ) }
    dend_36 { pt3dadd( -23.828, -173.24, -1.65052, 0.44 ) }
    dend_36 { pt3dadd( -23.7967, -173.404, -1.62607, 0.37 ) }
    dend_36 { pt3dadd( -23.5406, -174.852, -1.38013, 0.22 ) }
    dend_36 { pt3dadd( -23.426, -175.487, -1.25932, 0.52 ) }
    dend_36 { pt3dadd( -23.3832, -175.729, -1.20976, 0.52 ) }
    dend_36 { pt3dadd( -23.043, -177.649, -0.775413, 0.22 ) }
    dend_36 { pt3dadd( -22.9694, -178.047, -0.676203, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.91929, -17.1068, 0.0963994, 1.62 ) }
    dend_25 { pt3dadd( -8.96407, -17.6626, 0.444978, 1.62 ) }
    dend_25 { pt3dadd( -9.73794, -18.0742, 0.70317, 1.62 ) }
    dend_25 { pt3dadd( -10.3333, -18.3909, 0.901812, 1.84 ) }
    dend_25 { pt3dadd( -10.878, -18.6806, 1.08352, 2.06 ) }
    dend_25 { pt3dadd( -11.4252, -18.9717, 1.2661, 2.36 ) }
    dend_25 { pt3dadd( -11.7858, -19.1635, 1.38643, 2.8 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.00212, 14.9281, 6.16858, 1.25 ) }
    dend_19 { pt3dadd( -7.42544, 16.6102, 6.21424, 1.25 ) }
    dend_19 { pt3dadd( -7.64713, 17.5718, 6.42313, 1.4 ) }
    dend_19 { pt3dadd( -7.80972, 18.3172, 6.65974, 1.4 ) }
    dend_19 { pt3dadd( -8.01924, 19.3655, 7.04714, 1.47 ) }
    dend_19 { pt3dadd( -8.0999, 19.769, 7.19628, 1.69 ) }
    dend_19 { pt3dadd( -8.22595, 20.3996, 7.42935, 1.69 ) }
    dend_19 { pt3dadd( -8.42444, 21.539, 8.08583, 1.62 ) }
    dend_19 { pt3dadd( -8.51706, 22.2161, 8.5706, 1.55 ) }
    dend_19 { pt3dadd( -8.59566, 22.8338, 9.07428, 1.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.00212, 14.9281, 6.16858, 1.77 ) }
    dend_10 { pt3dadd( -8.4882, 15.9182, 8.22215, 1.77 ) }
    dend_10 { pt3dadd( -9.91271, 16.8671, 10.1907, 1.62 ) }
    dend_10 { pt3dadd( -10.7985, 17.4572, 11.4147, 1.55 ) }
    dend_10 { pt3dadd( -11.6289, 18.0105, 12.5623, 1.77 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.8905, 40.4121, 0.277928, 0.59 ) }
    dend_8 { pt3dadd( 13.1898, 41.7148, -0.0439731, 0.59 ) }
    dend_8 { pt3dadd( 13.3381, 42.2289, -0.161896, 0.59 ) }
    dend_8 { pt3dadd( 13.5362, 42.7244, -0.276596, 0.74 ) }
    dend_8 { pt3dadd( 13.7817, 43.1779, -0.385184, 0.74 ) }
    dend_8 { pt3dadd( 14.0736, 43.6193, -0.505464, 0.88 ) }
    dend_8 { pt3dadd( 14.3208, 43.9649, -0.604236, 1.03 ) }
    dend_8 { pt3dadd( 14.7598, 44.5167, -0.743872, 0.59 ) }
    dend_8 { pt3dadd( 15.1458, 45.016, -0.866881, 0.88 ) }
    dend_8 { pt3dadd( 15.5125, 45.5427, -1.00661, 0.88 ) }
    dend_8 { pt3dadd( 15.8319, 46.078, -1.16437, 0.66 ) }
    dend_8 { pt3dadd( 16.0651, 46.6277, -1.35749, 0.52 ) }
    dend_8 { pt3dadd( 16.1206, 47.0976, -1.61021, 0.52 ) }
    dend_8 { pt3dadd( 16.0785, 47.7263, -2.07163, 0.52 ) }
    dend_8 { pt3dadd( 15.9384, 48.3411, -2.59599, 0.96 ) }
    dend_8 { pt3dadd( 15.8193, 48.6513, -2.88641, 1.18 ) }
    dend_8 { pt3dadd( 15.6532, 48.9719, -3.20553, 1.18 ) }
    dend_8 { pt3dadd( 14.9994, 50.0061, -4.30319, 0.81 ) }
    dend_8 { pt3dadd( 14.7066, 50.472, -4.79025, 0.59 ) }
    dend_8 { pt3dadd( 14.3792, 51.0679, -5.3973, 0.74 ) }
    dend_8 { pt3dadd( 14.204, 51.4844, -5.77649, 0.66 ) }
    dend_8 { pt3dadd( 14.1084, 51.8597, -6.061, 0.66 ) }
    dend_8 { pt3dadd( 14.0817, 52.3679, -6.40976, 0.66 ) }
    dend_8 { pt3dadd( 14.1791, 53.1287, -6.86188, 0.81 ) }
    dend_8 { pt3dadd( 14.3568, 53.8567, -7.31099, 1.03 ) }
    dend_8 { pt3dadd( 14.5371, 54.3492, -7.62932, 0.96 ) }
    dend_8 { pt3dadd( 14.7535, 54.8785, -7.97693, 0.81 ) }
    dend_8 { pt3dadd( 15.1765, 55.9498, -8.65784, 0.81 ) }
    dend_8 { pt3dadd( 15.3107, 56.3447, -8.87586, 1.03 ) }
    dend_8 { pt3dadd( 15.4318, 56.8701, -9.11134, 1.03 ) }
    dend_8 { pt3dadd( 15.4908, 57.3245, -9.259, 1.11 ) }
    dend_8 { pt3dadd( 15.5162, 57.9073, -9.4023, 1.11 ) }
    dend_8 { pt3dadd( 15.5017, 58.5337, -9.50152, 0.81 ) }
    dend_8 { pt3dadd( 15.4472, 59.5161, -9.56826, 0.74 ) }
    dend_8 { pt3dadd( 15.413, 60.2289, -9.60471, 0.88 ) }
    dend_8 { pt3dadd( 15.3994, 60.8455, -9.63706, 0.88 ) }
    dend_8 { pt3dadd( 15.4129, 61.277, -9.66613, 0.52 ) }
    dend_8 { pt3dadd( 15.4846, 61.9787, -9.72365, 0.37 ) }
    dend_8 { pt3dadd( 15.5208, 62.178, -9.7461, 0.37 ) }
    dend_8 { pt3dadd( 15.6592, 62.7395, -9.83996, 0.37 ) }
    dend_8 { pt3dadd( 15.9212, 63.5526, -10.0031, 0.74 ) }
    dend_8 { pt3dadd( 16.0896, 64.0479, -10.102, 0.96 ) }
    dend_8 { pt3dadd( 16.2182, 64.4815, -10.1875, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 16.2746, 64.7497, -10.2359, 1.18 ) }
    dend_8 { pt3dadd( 16.3219, 65.4296, -10.323, 0.88 ) }
    dend_8 { pt3dadd( 16.2804, 66.0776, -10.3696, 0.29 ) }
    dend_8 { pt3dadd( 16.1412, 66.8949, -10.3828, 0.88 ) }
    dend_8 { pt3dadd( 15.9792, 67.504, -10.3734, 0.88 ) }
    dend_8 { pt3dadd( 15.764, 68.1399, -10.3437, 0.88 ) }
    dend_8 { pt3dadd( 15.4399, 68.975, -10.3008, 0.59 ) }
    dend_8 { pt3dadd( 15.2229, 69.4991, -10.2682, 0.59 ) }
    dend_8 { pt3dadd( 15.0335, 69.9927, -10.2451, 0.96 ) }
    dend_8 { pt3dadd( 14.82, 70.7211, -10.2302, 0.88 ) }
    dend_8 { pt3dadd( 14.7072, 71.3634, -10.2634, 0.52 ) }
    dend_8 { pt3dadd( 14.6612, 72.1956, -10.3684, 0.52 ) }
    dend_8 { pt3dadd( 14.6891, 72.8502, -10.5155, 0.52 ) }
    dend_8 { pt3dadd( 14.7761, 73.5852, -10.7267, 0.81 ) }
    dend_8 { pt3dadd( 14.8849, 74.172, -10.9143, 0.81 ) }
    dend_8 { pt3dadd( 15.1224, 75.0753, -11.2332, 0.81 ) }
    dend_8 { pt3dadd( 15.2621, 75.5675, -11.4118, 0.59 ) }
    dend_8 { pt3dadd( 15.4466, 76.2894, -11.6701, 0.74 ) }
    dend_8 { pt3dadd( 15.5267, 76.755, -11.8445, 0.88 ) }
    dend_8 { pt3dadd( 15.5659, 77.4805, -12.1125, 0.37 ) }
    dend_8 { pt3dadd( 15.5524, 78.1478, -12.3375, 0.37 ) }
    dend_8 { pt3dadd( 15.5361, 78.626, -12.4735, 0.37 ) }
    dend_8 { pt3dadd( 15.5278, 79.1591, -12.6356, 0.37 ) }
    dend_8 { pt3dadd( 15.5472, 79.5376, -12.7675, 0.37 ) }
    dend_8 { pt3dadd( 15.6141, 80.0236, -12.9794, 0.52 ) }
    dend_8 { pt3dadd( 15.707, 80.3983, -13.1606, 0.81 ) }
    dend_8 { pt3dadd( 15.8451, 80.8165, -13.3489, 0.81 ) }
    dend_8 { pt3dadd( 15.9856, 81.1752, -13.4957, 0.81 ) }
    dend_8 { pt3dadd( 16.1867, 81.6995, -13.6848, 0.74 ) }
    dend_8 { pt3dadd( 16.3398, 82.1549, -13.8198, 0.59 ) }
    dend_8 { pt3dadd( 16.4618, 82.6464, -13.9394, 0.52 ) }
    dend_8 { pt3dadd( 16.5263, 83.0782, -14.0306, 0.88 ) }
    dend_8 { pt3dadd( 16.554, 83.592, -14.1268, 0.88 ) }
    dend_8 { pt3dadd( 16.5408, 84.2368, -14.2374, 0.44 ) }
    dend_8 { pt3dadd( 16.4956, 84.8057, -14.3458, 0.44 ) }
    dend_8 { pt3dadd( 16.441, 85.3033, -14.4682, 0.44 ) }
    dend_8 { pt3dadd( 16.3721, 85.8947, -14.6666, 0.81 ) }
    dend_8 { pt3dadd( 16.3159, 86.4568, -14.8917, 0.81 ) }
    dend_8 { pt3dadd( 16.2773, 87.0121, -15.1387, 0.59 ) }
    dend_8 { pt3dadd( 16.2549, 87.6703, -15.4478, 0.59 ) }
    dend_8 { pt3dadd( 16.2555, 88.0716, -15.6376, 0.88 ) }
    dend_8 { pt3dadd( 16.2737, 88.6596, -15.9095, 0.88 ) }
    dend_8 { pt3dadd( 16.2912, 89.2814, -16.1708, 0.88 ) }
    dend_8 { pt3dadd( 16.2869, 89.6671, -16.2999, 0.96 ) }
    dend_8 { pt3dadd( 16.2521, 90.0695, -16.3899, 0.96 ) }
    dend_8 { pt3dadd( 16.1604, 90.5622, -16.4355, 0.44 ) }
    dend_8 { pt3dadd( 16.0141, 91.0999, -16.4433, 0.44 ) }
    dend_8 { pt3dadd( 15.9079, 91.4662, -16.4296, 0.44 ) }
    dend_8 { pt3dadd( 15.7133, 92.1475, -16.4183, 0.81 ) }
    dend_8 { pt3dadd( 15.5815, 92.6675, -16.4272, 0.81 ) }
    dend_8 { pt3dadd( 15.4096, 93.3998, -16.4521, 1.11 ) }
    dend_8 { pt3dadd( 15.3333, 93.757, -16.4655, 1.11 ) }
    dend_8 { pt3dadd( 15.1937, 94.4763, -16.4876, 0.37 ) }
    dend_8 { pt3dadd( 15.1093, 94.9909, -16.5078, 0.37 ) }
    dend_8 { pt3dadd( 14.9795, 95.8231, -16.5423, 0.52 ) }
    dend_8 { pt3dadd( 14.8986, 96.3396, -16.5588, 0.52 ) }
    dend_8 { pt3dadd( 14.7914, 97.0835, -16.608, 0.88 ) }
    dend_8 { pt3dadd( 14.7288, 97.5573, -16.6641, 0.88 ) }
    dend_8 { pt3dadd( 14.6542, 98.2369, -16.7752, 0.88 ) }
    dend_8 { pt3dadd( 14.6413, 98.6185, -16.8598, 0.96 ) }
    dend_8 { pt3dadd( 14.6975, 99.3161, -17.1067, 0.66 ) }
    dend_8 { pt3dadd( 14.8577, 100.253, -17.5556, 0.66 ) }
    dend_8 { pt3dadd( 14.9826, 100.839, -17.9031, 0.66 ) }
    dend_8 { pt3dadd( 15.0629, 101.242, -18.1716, 0.59 ) }
    dend_8 { pt3dadd( 15.1461, 101.764, -18.5524, 0.74 ) }
    dend_8 { pt3dadd( 15.2084, 102.348, -18.9908, 0.59 ) }
    dend_8 { pt3dadd( 15.241, 102.831, -19.3531, 0.88 ) }
    dend_8 { pt3dadd( 15.2517, 103.332, -19.702, 0.88 ) }
    dend_8 { pt3dadd( 15.2714, 103.835, -20.0599, 0.88 ) }
    dend_8 { pt3dadd( 15.2923, 104.074, -20.2339, 0.88 ) }
    dend_8 { pt3dadd( 15.4001, 104.681, -20.6423, 0.37 ) }
    dend_8 { pt3dadd( 15.5386, 105.125, -20.9026, 0.81 ) }
    dend_8 { pt3dadd( 15.6799, 105.419, -21.0647, 0.81 ) }
    dend_8 { pt3dadd( 16.0855, 106.097, -21.3843, 0.37 ) }
    dend_8 { pt3dadd( 16.3454, 106.502, -21.541, 0.37 ) }
    dend_8 { pt3dadd( 16.6084, 106.927, -21.6626, 0.81 ) }
    dend_8 { pt3dadd( 16.8329, 107.35, -21.7485, 0.81 ) }
    dend_8 { pt3dadd( 16.9704, 107.7, -21.7975, 0.81 ) }
    dend_8 { pt3dadd( 17.0957, 108.169, -21.864, 0.52 ) }
    dend_8 { pt3dadd( 17.1407, 108.503, -21.9183, 0.59 ) }
    dend_8 { pt3dadd( 17.1697, 108.992, -22.0398, 0.44 ) }
    dend_8 { pt3dadd( 17.1852, 109.512, -22.203, 0.59 ) }
    dend_8 { pt3dadd( 17.1947, 110.019, -22.3803, 0.66 ) }
    dend_8 { pt3dadd( 17.2002, 110.839, -22.6715, 0.44 ) }
    dend_8 { pt3dadd( 17.2038, 111.521, -22.9117, 1.33 ) }
    dend_8 { pt3dadd( 17.2089, 111.924, -23.0436, 1.33 ) }
    dend_8 { pt3dadd( 17.2151, 112.632, -23.2454, 0.37 ) }
    dend_8 { pt3dadd( 17.2329, 113.218, -23.3767, 0.29 ) }
    dend_8 { pt3dadd( 17.2519, 113.748, -23.4652, 0.52 ) }
    dend_8 { pt3dadd( 17.2543, 114.029, -23.4857, 0.74 ) }
    dend_8 { pt3dadd( 17.2147, 114.576, -23.4929, 0.44 ) }
    dend_8 { pt3dadd( 17.124, 115.018, -23.4717, 0.74 ) }
    dend_8 { pt3dadd( 16.982, 115.366, -23.4412, 0.74 ) }
    dend_8 { pt3dadd( 16.7267, 115.813, -23.3959, 0.44 ) }
    dend_8 { pt3dadd( 16.4203, 116.254, -23.3836, 0.74 ) }
    dend_8 { pt3dadd( 16.1215, 116.626, -23.4031, 0.74 ) }
    dend_8 { pt3dadd( 15.8939, 116.884, -23.4547, 0.88 ) }
    dend_8 { pt3dadd( 15.5286, 117.294, -23.586, 0.59 ) }
    dend_8 { pt3dadd( 15.2625, 117.605, -23.7102, 0.44 ) }
    dend_8 { pt3dadd( 14.8978, 118.095, -23.9306, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 14.6923, 118.433, -24.0826, 0.59 ) }
    dend_8 { pt3dadd( 14.3176, 119.162, -24.378, 1.25 ) }
    dend_8 { pt3dadd( 14.2022, 119.408, -24.466, 1.4 ) }
    dend_8 { pt3dadd( 13.9978, 119.848, -24.5932, 0.88 ) }
    dend_8 { pt3dadd( 13.7307, 120.35, -24.6971, 0.59 ) }
    dend_8 { pt3dadd( 13.4693, 120.781, -24.7471, 0.59 ) }
    dend_8 { pt3dadd( 13.1411, 121.25, -24.7693, 0.66 ) }
    dend_8 { pt3dadd( 12.7998, 121.628, -24.747, 0.52 ) }
    dend_8 { pt3dadd( 12.4157, 121.991, -24.7169, 0.37 ) }
    dend_8 { pt3dadd( 12.0108, 122.345, -24.6839, 0.52 ) }
    dend_8 { pt3dadd( 11.8022, 122.521, -24.6676, 0.66 ) }
    dend_8 { pt3dadd( 11.5764, 122.722, -24.6612, 0.66 ) }
    dend_8 { pt3dadd( 11.2321, 123.197, -24.7352, 0.29 ) }
    dend_8 { pt3dadd( 11.0502, 123.682, -24.9207, 0.29 ) }
    dend_8 { pt3dadd( 10.929, 124.128, -25.1765, 0.66 ) }
    dend_8 { pt3dadd( 10.8385, 124.424, -25.4049, 0.66 ) }
    dend_8 { pt3dadd( 10.6872, 124.723, -25.7109, 0.52 ) }
    dend_8 { pt3dadd( 10.3736, 125.047, -26.1816, 0.66 ) }
    dend_8 { pt3dadd( 9.98107, 125.251, -26.6218, 0.81 ) }
    dend_8 { pt3dadd( 9.6157, 125.357, -26.9281, 0.96 ) }
    dend_8 { pt3dadd( 9.189, 125.444, -27.2161, 0.96 ) }
    dend_8 { pt3dadd( 8.59219, 125.556, -27.5441, 0.81 ) }
    dend_8 { pt3dadd( 7.97508, 125.679, -27.8175, 0.74 ) }
    dend_8 { pt3dadd( 7.40857, 125.846, -28.011, 0.52 ) }
    dend_8 { pt3dadd( 6.96889, 126.047, -28.1193, 0.66 ) }
    dend_8 { pt3dadd( 6.67046, 126.241, -28.1641, 0.66 ) }
    dend_8 { pt3dadd( 6.14773, 126.684, -28.1886, 0.37 ) }
    dend_8 { pt3dadd( 5.81573, 127.025, -28.1816, 0.37 ) }
    dend_8 { pt3dadd( 5.19247, 127.757, -28.1632, 0.29 ) }
    dend_8 { pt3dadd( 4.90685, 128.13, -28.1721, 0.52 ) }
    dend_8 { pt3dadd( 4.69103, 128.439, -28.2017, 0.52 ) }
    dend_8 { pt3dadd( 4.40954, 128.867, -28.2682, 0.29 ) }
    dend_8 { pt3dadd( 4.181, 129.216, -28.3349, 0.29 ) }
    dend_8 { pt3dadd( 3.80492, 129.771, -28.4769, 0.59 ) }
    dend_8 { pt3dadd( 3.45821, 130.243, -28.6526, 0.52 ) }
    dend_8 { pt3dadd( 3.16411, 130.667, -28.8425, 0.74 ) }
    dend_8 { pt3dadd( 3.04339, 130.859, -28.9409, 0.74 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 12.8905, 40.4121, 0.277928, 0.96 ) }
    dend_1 { pt3dadd( 13.3392, 42.1348, 0.878523, 0.96 ) }
    dend_1 { pt3dadd( 13.5542, 42.9243, 1.10029, 0.96 ) }
    dend_1 { pt3dadd( 13.7275, 43.5373, 1.21025, 0.81 ) }
    dend_1 { pt3dadd( 14.0499, 44.807, 1.3076, 0.88 ) }
    dend_1 { pt3dadd( 14.2455, 45.7054, 1.29623, 0.88 ) }
    dend_1 { pt3dadd( 14.3895, 46.5769, 1.24523, 0.81 ) }
    dend_1 { pt3dadd( 14.4763, 47.6131, 1.0745, 0.96 ) }
    dend_1 { pt3dadd( 14.513, 48.6998, 0.8667, 0.74 ) }
    dend_1 { pt3dadd( 14.5288, 49.7967, 0.627592, 0.88 ) }
    dend_1 { pt3dadd( 14.486, 50.782, 0.411332, 0.88 ) }
    dend_1 { pt3dadd( 14.3629, 51.9462, 0.199189, 0.88 ) }
    dend_1 { pt3dadd( 14.1714, 53.0166, 0.0611553, 1.03 ) }
    dend_1 { pt3dadd( 13.8843, 54.0516, 0.0104024, 1.03 ) }
    dend_1 { pt3dadd( 13.5702, 54.8933, 0.0582263, 0.88 ) }
    dend_1 { pt3dadd( 13.0089, 56.0413, 0.225564, 0.96 ) }
    dend_1 { pt3dadd( 12.5955, 56.7138, 0.360846, 1.11 ) }
    dend_1 { pt3dadd( 12.1185, 57.3839, 0.509696, 1.11 ) }
    dend_1 { pt3dadd( 11.459, 58.2531, 0.711532, 1.11 ) }
    dend_1 { pt3dadd( 10.8141, 59.087, 0.907831, 1.11 ) }
    dend_1 { pt3dadd( 9.95395, 60.2459, 1.16354, 1.03 ) }
    dend_1 { pt3dadd( 9.33205, 61.2019, 1.33834, 1.03 ) }
    dend_1 { pt3dadd( 8.69289, 62.3441, 1.51234, 0.96 ) }
    dend_1 { pt3dadd( 8.16302, 63.5283, 1.60927, 1.03 ) }
    dend_1 { pt3dadd( 7.79535, 64.6178, 1.61005, 0.88 ) }
    dend_1 { pt3dadd( 7.6061, 65.4106, 1.55922, 0.88 ) }
    dend_1 { pt3dadd( 7.46093, 66.4158, 1.44722, 1.11 ) }
    dend_1 { pt3dadd( 7.40411, 67.0344, 1.35534, 1.11 ) }
    dend_1 { pt3dadd( 7.31767, 68.7586, 1.14474, 1.03 ) }
    dend_1 { pt3dadd( 7.26786, 70.1134, 1.03283, 0.88 ) }
    dend_1 { pt3dadd( 7.21756, 71.3524, 1.01161, 0.88 ) }
    dend_1 { pt3dadd( 7.141, 72.6785, 1.1164, 0.88 ) }
    dend_1 { pt3dadd( 7.04632, 73.797, 1.32182, 1.03 ) }
    dend_1 { pt3dadd( 6.86184, 75.4641, 1.78525, 0.88 ) }
    dend_1 { pt3dadd( 6.73081, 76.53, 2.19691, 0.96 ) }
    dend_1 { pt3dadd( 6.62134, 77.4755, 2.61012, 1.03 ) }
    dend_1 { pt3dadd( 6.52771, 78.4316, 3.00108, 1.33 ) }
    dend_1 { pt3dadd( 6.46654, 79.4644, 3.35861, 0.74 ) }
    dend_1 { pt3dadd( 6.46585, 80.0974, 3.48965, 0.74 ) }
    dend_1 { pt3dadd( 6.51069, 80.9219, 3.51493, 0.88 ) }
    dend_1 { pt3dadd( 6.65467, 81.9712, 3.43931, 0.88 ) }
    dend_1 { pt3dadd( 6.91364, 83.2264, 3.24597, 0.81 ) }
    dend_1 { pt3dadd( 7.16043, 84.158, 3.05516, 0.88 ) }
    dend_1 { pt3dadd( 7.5328, 85.346, 2.76251, 0.74 ) }
    dend_1 { pt3dadd( 7.80665, 86.1394, 2.55512, 0.74 ) }
    dend_1 { pt3dadd( 8.16927, 87.1815, 2.28213, 0.81 ) }
    dend_1 { pt3dadd( 8.48752, 88.113, 2.03356, 0.81 ) }
    dend_1 { pt3dadd( 8.71107, 88.811, 1.86572, 0.81 ) }
    dend_1 { pt3dadd( 8.96995, 89.8128, 1.62117, 0.81 ) }
    dend_1 { pt3dadd( 9.12035, 90.7166, 1.41722, 0.96 ) }
    dend_1 { pt3dadd( 9.18028, 91.6433, 1.22201, 0.96 ) }
    dend_1 { pt3dadd( 9.1749, 92.5943, 1.04827, 1.03 ) }
    dend_1 { pt3dadd( 9.12815, 93.7761, 0.816769, 0.96 ) }
    dend_1 { pt3dadd( 9.08932, 94.9274, 0.575263, 0.96 ) }
    dend_1 { pt3dadd( 9.05472, 96.3078, 0.294801, 0.96 ) }
    dend_1 { pt3dadd( 9.03119, 97.4753, 0.0365492, 0.96 ) }
    dend_1 { pt3dadd( 9.02577, 98.7196, -0.251517, 0.88 ) }
    dend_1 { pt3dadd( 9.02089, 100.273, -0.606681, 0.81 ) }
    dend_1 { pt3dadd( 9.00298, 101.24, -0.826152, 0.81 ) }
    dend_1 { pt3dadd( 8.95871, 102.227, -1.0348, 0.74 ) }
    dend_1 { pt3dadd( 8.81635, 103.358, -1.25059, 1.03 ) }
    dend_1 { pt3dadd( 8.61772, 104.249, -1.38582, 1.03 ) }
    dend_1 { pt3dadd( 8.24454, 105.392, -1.47799, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 7.85484, 106.413, -1.47956, 1.11 ) }
    dend_1 { pt3dadd( 7.57948, 107.089, -1.46118, 1.11 ) }
    dend_1 { pt3dadd( 7.06575, 108.407, -1.37668, 0.96 ) }
    dend_1 { pt3dadd( 6.69951, 109.459, -1.27755, 0.96 ) }
    dend_1 { pt3dadd( 6.36478, 110.623, -1.15756, 0.96 ) }
    dend_1 { pt3dadd( 6.02511, 112.139, -0.996025, 0.88 ) }
    dend_1 { pt3dadd( 5.8321, 113.276, -0.877228, 1.18 ) }
    dend_1 { pt3dadd( 5.64393, 114.582, -0.733824, 0.96 ) }
    dend_1 { pt3dadd( 5.49266, 115.659, -0.607044, 0.88 ) }
    dend_1 { pt3dadd( 5.33719, 116.765, -0.456805, 0.88 ) }
    dend_1 { pt3dadd( 5.18297, 117.893, -0.277382, 0.88 ) }
    dend_1 { pt3dadd( 5.06468, 118.779, -0.121777, 0.96 ) }
    dend_1 { pt3dadd( 4.91647, 119.91, 0.0838414, 0.96 ) }
    dend_1 { pt3dadd( 4.76408, 121.043, 0.278223, 0.96 ) }
    dend_1 { pt3dadd( 4.6162, 122.282, 0.461476, 1.03 ) }
    dend_1 { pt3dadd( 4.52439, 123.332, 0.58705, 0.96 ) }
    dend_1 { pt3dadd( 4.48123, 124.624, 0.688773, 0.88 ) }
    dend_1 { pt3dadd( 4.51938, 125.777, 0.730022, 0.81 ) }
    dend_1 { pt3dadd( 4.61754, 126.809, 0.722507, 0.96 ) }
    dend_1 { pt3dadd( 4.80717, 128.314, 0.659234, 0.81 ) }
    dend_1 { pt3dadd( 4.89203, 128.996, 0.62249, 0.81 ) }
    dend_1 { pt3dadd( 4.9724, 129.787, 0.599115, 0.81 ) }
    dend_1 { pt3dadd( 5.02571, 130.957, 0.627091, 0.88 ) }
    dend_1 { pt3dadd( 5.00204, 131.787, 0.699043, 0.88 ) }
    dend_1 { pt3dadd( 4.8903, 132.581, 0.829812, 0.88 ) }
    dend_1 { pt3dadd( 4.68135, 133.345, 1.01577, 0.74 ) }
    dend_1 { pt3dadd( 4.28001, 134.41, 1.30835, 0.88 ) }
    dend_1 { pt3dadd( 3.69935, 135.712, 1.71513, 1.33 ) }
    dend_1 { pt3dadd( 3.37743, 136.4, 1.93454, 1.33 ) }
    dend_1 { pt3dadd( 2.98492, 137.316, 2.20631, 1.11 ) }
    dend_1 { pt3dadd( 2.69663, 138.112, 2.39588, 0.96 ) }
    dend_1 { pt3dadd( 2.49288, 138.83, 2.51663, 0.96 ) }
    dend_1 { pt3dadd( 2.24364, 140.048, 2.66353, 0.74 ) }
    dend_1 { pt3dadd( 2.12292, 140.953, 2.72567, 0.74 ) }
    dend_1 { pt3dadd( 2.03799, 141.905, 2.7444, 0.74 ) }
    dend_1 { pt3dadd( 1.97133, 142.922, 2.72434, 0.74 ) }
    dend_1 { pt3dadd( 1.89716, 144.129, 2.66109, 1.03 ) }
    dend_1 { pt3dadd( 1.82593, 145.051, 2.57508, 1.03 ) }
    dend_1 { pt3dadd( 1.73237, 145.975, 2.4619, 1.03 ) }
    dend_1 { pt3dadd( 1.62063, 146.785, 2.35949, 0.88 ) }
    dend_1 { pt3dadd( 1.44092, 147.874, 2.22161, 0.88 ) }
    dend_1 { pt3dadd( 1.27569, 148.846, 2.1047, 1.03 ) }
    dend_1 { pt3dadd( 1.11222, 149.922, 1.94509, 0.88 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 1.70185, 56.0961, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 2.02065, 71.0928, 0.732838, 0.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 46/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -11.7858, -19.1635, 1.38643, 0.96 ) }
    dend_31 { pt3dadd( -12.6418, -20.3791, 1.70575, 0.96 ) }
    dend_31 { pt3dadd( -13.377, -21.3221, 1.93078, 0.96 ) }
    dend_31 { pt3dadd( -13.9795, -22.0373, 2.0807, 1.11 ) }
    dend_31 { pt3dadd( -14.3907, -22.5184, 2.11825, 1.25 ) }
    dend_31 { pt3dadd( -14.7425, -22.9367, 2.10267, 1.25 ) }
    dend_31 { pt3dadd( -15.3976, -23.7509, 2.01591, 1.03 ) }
    dend_31 { pt3dadd( -15.9262, -24.3875, 1.86738, 0.96 ) }
    dend_31 { pt3dadd( -16.402, -25.013, 1.63498, 1.18 ) }
    dend_31 { pt3dadd( -17.2197, -26.1444, 1.12583, 1.03 ) }
    dend_31 { pt3dadd( -17.6965, -26.8427, 0.7757, 1.03 ) }
    dend_31 { pt3dadd( -18.1344, -27.5367, 0.391728, 0.88 ) }
    dend_31 { pt3dadd( -18.4609, -28.1193, 0.0252774, 1.11 ) }
    dend_31 { pt3dadd( -18.8233, -28.8523, -0.468012, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.7858, -19.1635, 1.38643, 1.92 ) }
    dend_26 { pt3dadd( -12.9123, -18.1422, 1.15792, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -8.59566, 22.8338, 9.07428, 0.88 ) }
    dend_23 { pt3dadd( -8.89093, 23.4147, 8.48484, 0.88 ) }
    dend_23 { pt3dadd( -9.09064, 23.9481, 7.90644, 0.81 ) }
    dend_23 { pt3dadd( -9.20562, 24.3454, 7.49995, 0.81 ) }
    dend_23 { pt3dadd( -9.37259, 25.0967, 6.76352, 0.66 ) }
    dend_23 { pt3dadd( -9.49142, 25.6339, 6.24923, 1.11 ) }
    dend_23 { pt3dadd( -9.61077, 26.0642, 5.83843, 1.11 ) }
    dend_23 { pt3dadd( -9.9246, 27.0184, 4.9465, 0.88 ) }
    dend_23 { pt3dadd( -10.1329, 27.4789, 4.52626, 1.03 ) }
    dend_23 { pt3dadd( -10.5749, 28.1672, 3.88676, 1.11 ) }
    dend_23 { pt3dadd( -11.0429, 28.6689, 3.46294, 0.88 ) }
    dend_23 { pt3dadd( -11.785, 29.1542, 3.08155, 0.88 ) }
    dend_23 { pt3dadd( -12.5708, 29.462, 2.89599, 0.81 ) }
    dend_23 { pt3dadd( -13.291, 29.6372, 2.85312, 0.88 ) }
    dend_23 { pt3dadd( -14.0078, 29.747, 2.83936, 1.11 ) }
    dend_23 { pt3dadd( -15.3217, 29.8935, 2.86506, 1.33 ) }
    dend_23 { pt3dadd( -16.0066, 29.9808, 2.84916, 0.96 ) }
    dend_23 { pt3dadd( -16.687, 30.1142, 2.77205, 1.11 ) }
    dend_23 { pt3dadd( -17.0531, 30.2226, 2.66539, 0.88 ) }
    dend_23 { pt3dadd( -17.7705, 30.5214, 2.34171, 0.74 ) }
    dend_23 { pt3dadd( -18.3338, 30.832, 2.00174, 1.03 ) }
    dend_23 { pt3dadd( -19.1007, 31.3493, 1.3995, 1.11 ) }
    dend_23 { pt3dadd( -19.5131, 31.7143, 1.01532, 1.11 ) }
    dend_23 { pt3dadd( -19.9053, 32.1614, 0.567829, 1.11 ) }
    dend_23 { pt3dadd( -20.1474, 32.5806, 0.162155, 1.25 ) }
    dend_23 { pt3dadd( -20.3698, 33.2542, -0.503089, 1.25 ) }
    dend_23 { pt3dadd( -20.4843, 33.9454, -1.25391, 0.88 ) }
    dend_23 { pt3dadd( -20.5368, 34.5412, -1.93886, 0.81 ) }
    dend_23 { pt3dadd( -20.5798, 35.0015, -2.48199, 0.81 ) }
    dend_23 { pt3dadd( -20.7036, 36.001, -3.68232, 1.03 ) }
    dend_23 { pt3dadd( -20.8528, 36.7899, -4.66729, 1.18 ) }
    dend_23 { pt3dadd( -21.0592, 37.4382, -5.49298, 1.33 ) }
    dend_23 { pt3dadd( -21.3627, 37.9819, -6.18134, 1.18 ) }
    dend_23 { pt3dadd( -21.8371, 38.5088, -6.83632, 1.18 ) }
    dend_23 { pt3dadd( -22.1757, 38.791, -7.14831, 1.18 ) }
    dend_23 { pt3dadd( -22.6355, 39.1177, -7.42854, 1.03 ) }
    dend_23 { pt3dadd( -23.0474, 39.4179, -7.618, 0.96 ) }
    dend_23 { pt3dadd( -23.5711, 39.8095, -7.80991, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -24.1231, 40.2646, -8.09618, 1.11 ) }
    dend_23 { pt3dadd( -24.5085, 40.6614, -8.42671, 1.11 ) }
    dend_23 { pt3dadd( -24.9915, 41.2545, -8.94284, 1.03 ) }
    dend_23 { pt3dadd( -25.4306, 41.846, -9.47301, 1.47 ) }
    dend_23 { pt3dadd( -25.7695, 42.3114, -9.88477, 1.84 ) }
    dend_23 { pt3dadd( -26.9095, 43.8173, -11.188, 1.33 ) }
    dend_23 { pt3dadd( -27.8207, 44.9214, -12.1245, 0.88 ) }
    dend_23 { pt3dadd( -28.4828, 45.6196, -12.7038, 1.03 ) }
    dend_23 { pt3dadd( -29.0104, 46.0919, -13.0756, 0.88 ) }
    dend_23 { pt3dadd( -29.7124, 46.6138, -13.4124, 0.81 ) }
    dend_23 { pt3dadd( -30.541, 47.1158, -13.6243, 0.88 ) }
    dend_23 { pt3dadd( -31.1674, 47.4187, -13.6875, 1.25 ) }
    dend_23 { pt3dadd( -31.8083, 47.6931, -13.7535, 1.4 ) }
    dend_23 { pt3dadd( -32.2391, 47.8904, -13.8363, 1.62 ) }
    dend_23 { pt3dadd( -32.7541, 48.1866, -14.0054, 1.33 ) }
    dend_23 { pt3dadd( -33.2628, 48.5738, -14.2713, 1.03 ) }
    dend_23 { pt3dadd( -34.3637, 49.6882, -15.1047, 0.88 ) }
    dend_23 { pt3dadd( -34.7262, 50.1831, -15.476, 0.88 ) }
    dend_23 { pt3dadd( -35.0304, 50.7691, -15.8977, 0.81 ) }
    dend_23 { pt3dadd( -35.334, 51.6532, -16.4949, 0.96 ) }
    dend_23 { pt3dadd( -35.4593, 52.4055, -16.9523, 0.96 ) }
    dend_23 { pt3dadd( -35.4545, 53.0304, -17.2689, 1.11 ) }
    dend_23 { pt3dadd( -35.3487, 53.6242, -17.4855, 1.11 ) }
    dend_23 { pt3dadd( -35.2055, 54.1753, -17.6363, 1.11 ) }
    dend_23 { pt3dadd( -35.0787, 54.6128, -17.7266, 1.18 ) }
    dend_23 { pt3dadd( -34.9479, 55.1273, -17.7913, 1.11 ) }
    dend_23 { pt3dadd( -34.8168, 55.8637, -17.8667, 0.88 ) }
    dend_23 { pt3dadd( -34.7645, 56.6032, -17.96, 0.81 ) }
    dend_23 { pt3dadd( -34.8204, 57.0756, -18.0593, 0.81 ) }
    dend_23 { pt3dadd( -35.0826, 57.6415, -18.2512, 0.81 ) }
    dend_23 { pt3dadd( -35.512, 58.0502, -18.4866, 0.96 ) }
    dend_23 { pt3dadd( -35.8914, 58.2472, -18.6702, 0.96 ) }
    dend_23 { pt3dadd( -36.5771, 58.4722, -18.9605, 0.74 ) }
    dend_23 { pt3dadd( -37.0026, 58.5768, -19.1331, 0.74 ) }
    dend_23 { pt3dadd( -37.4299, 58.6775, -19.3031, 1.03 ) }
    dend_23 { pt3dadd( -37.9268, 58.8155, -19.5022, 1.25 ) }
    dend_23 { pt3dadd( -38.278, 58.9558, -19.6388, 1.4 ) }
    dend_23 { pt3dadd( -38.9203, 59.3317, -19.8641, 1.18 ) }
    dend_23 { pt3dadd( -39.6008, 59.8677, -20.0873, 0.88 ) }
    dend_23 { pt3dadd( -40.0982, 60.3579, -20.2491, 0.81 ) }
    dend_23 { pt3dadd( -40.4768, 60.814, -20.3426, 0.81 ) }
    dend_23 { pt3dadd( -41.0861, 61.6604, -20.4286, 0.81 ) }
    dend_23 { pt3dadd( -41.6262, 62.4806, -20.4594, 1.03 ) }
    dend_23 { pt3dadd( -41.9002, 62.925, -20.4511, 1.25 ) }
    dend_23 { pt3dadd( -42.2011, 63.4342, -20.4128, 1.4 ) }
    dend_23 { pt3dadd( -42.7057, 64.2922, -20.3277, 1.03 ) }
    dend_23 { pt3dadd( -43.1824, 65.0868, -20.2451, 0.88 ) }
    dend_23 { pt3dadd( -43.4651, 65.5457, -20.206, 1.11 ) }
    dend_23 { pt3dadd( -43.8398, 66.1565, -20.1693, 1.11 ) }
    dend_23 { pt3dadd( -44.2714, 66.877, -20.1477, 0.96 ) }
    dend_23 { pt3dadd( -44.6186, 67.4674, -20.1529, 1.33 ) }
    dend_23 { pt3dadd( -44.8851, 67.9266, -20.1907, 1.33 ) }
    dend_23 { pt3dadd( -45.1999, 68.486, -20.2639, 1.11 ) }
    dend_23 { pt3dadd( -45.5762, 69.1382, -20.3877, 0.88 ) }
    dend_23 { pt3dadd( -45.9488, 69.7293, -20.5311, 0.88 ) }
    dend_23 { pt3dadd( -46.2748, 70.1872, -20.6572, 1.11 ) }
    dend_23 { pt3dadd( -46.6542, 70.6764, -20.7889, 1.11 ) }
    dend_23 { pt3dadd( -47.1074, 71.2298, -20.9281, 0.59 ) }
    dend_23 { pt3dadd( -47.4985, 71.693, -21.0343, 0.52 ) }
    dend_23 { pt3dadd( -47.9999, 72.2797, -21.1498, 0.81 ) }
    dend_23 { pt3dadd( -48.6895, 73.1023, -21.2754, 0.96 ) }
    dend_23 { pt3dadd( -49.2166, 73.7448, -21.3359, 1.25 ) }
    dend_23 { pt3dadd( -49.5746, 74.1854, -21.3523, 1.47 ) }
    dend_23 { pt3dadd( -49.9393, 74.6326, -21.352, 1.47 ) }
    dend_23 { pt3dadd( -50.4499, 75.2734, -21.3424, 1.03 ) }
    dend_23 { pt3dadd( -50.7895, 75.7187, -21.3381, 1.03 ) }
    dend_23 { pt3dadd( -51.4473, 76.6471, -21.335, 1.03 ) }
    dend_23 { pt3dadd( -51.9148, 77.4004, -21.3377, 0.96 ) }
    dend_23 { pt3dadd( -52.31, 78.1833, -21.3398, 0.74 ) }
    dend_23 { pt3dadd( -52.5991, 79.0295, -21.3413, 0.74 ) }
    dend_23 { pt3dadd( -52.726, 79.858, -21.3398, 1.03 ) }
    dend_23 { pt3dadd( -52.713, 80.5193, -21.3368, 1.03 ) }
    dend_23 { pt3dadd( -52.5261, 81.4589, -21.33, 0.81 ) }
    dend_23 { pt3dadd( -52.2554, 82.3018, -21.3225, 0.81 ) }
    dend_23 { pt3dadd( -51.8012, 83.4104, -21.3114, 0.74 ) }
    dend_23 { pt3dadd( -51.4256, 84.2144, -21.3029, 1.03 ) }
    dend_23 { pt3dadd( -51.1467, 84.7762, -21.2923, 1.03 ) }
    dend_23 { pt3dadd( -50.7161, 85.6622, -21.2697, 0.96 ) }
    dend_23 { pt3dadd( -50.4068, 86.3729, -21.2544, 1.4 ) }
    dend_23 { pt3dadd( -50.1612, 87.0524, -21.2386, 1.25 ) }
    dend_23 { pt3dadd( -49.9556, 87.8197, -21.2292, 0.81 ) }
    dend_23 { pt3dadd( -49.8528, 88.4197, -21.23, 0.59 ) }
    dend_23 { pt3dadd( -49.7811, 89.1917, -21.2388, 0.59 ) }
    dend_23 { pt3dadd( -49.769, 90.2502, -21.2429, 0.74 ) }
    dend_23 { pt3dadd( -49.7952, 90.9382, -21.2367, 0.81 ) }
    dend_23 { pt3dadd( -49.8582, 91.6472, -21.2142, 0.81 ) }
    dend_23 { pt3dadd( -49.9602, 92.4497, -21.1757, 0.66 ) }
    dend_23 { pt3dadd( -50.1049, 93.3149, -21.1243, 0.88 ) }
    dend_23 { pt3dadd( -50.3146, 94.2709, -21.0507, 0.96 ) }
    dend_23 { pt3dadd( -50.5322, 95.0552, -20.9755, 0.74 ) }
    dend_23 { pt3dadd( -50.8158, 95.8678, -20.8935, 0.96 ) }
    dend_23 { pt3dadd( -51.1106, 96.5606, -20.8127, 0.96 ) }
    dend_23 { pt3dadd( -51.4613, 97.2388, -20.731, 0.88 ) }
    dend_23 { pt3dadd( -51.9823, 98.0752, -20.64, 0.88 ) }
    dend_23 { pt3dadd( -52.3782, 98.649, -20.5916, 0.74 ) }
    dend_23 { pt3dadd( -52.767, 99.1929, -20.552, 1.03 ) }
    dend_23 { pt3dadd( -52.9746, 99.4951, -20.5335, 1.03 ) }
    dend_23 { pt3dadd( -53.3996, 100.167, -20.4853, 0.81 ) }
    dend_23 { pt3dadd( -53.9979, 101.261, -20.4307, 1.03 ) }
    dend_23 { pt3dadd( -54.2823, 101.883, -20.4129, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_23 { pt3dadd( -54.5108, 102.495, -20.4086, 0.88 ) }
    dend_23 { pt3dadd( -54.7517, 103.289, -20.4157, 1.11 ) }
    dend_23 { pt3dadd( -54.9503, 104.059, -20.4339, 0.96 ) }
    dend_23 { pt3dadd( -55.1239, 104.887, -20.4629, 0.81 ) }
    dend_23 { pt3dadd( -55.2512, 105.643, -20.4929, 0.81 ) }
    dend_23 { pt3dadd( -55.4332, 106.92, -20.5432, 0.88 ) }
    dend_23 { pt3dadd( -55.5477, 107.798, -20.5762, 1.11 ) }
    dend_23 { pt3dadd( -55.6245, 108.4, -20.5946, 1.11 ) }
    dend_23 { pt3dadd( -55.7009, 108.947, -20.606, 0.96 ) }
    dend_23 { pt3dadd( -55.8, 109.545, -20.6051, 0.96 ) }
    dend_23 { pt3dadd( -55.9469, 110.275, -20.6029, 0.66 ) }
    dend_23 { pt3dadd( -56.1464, 111.091, -20.5995, 0.81 ) }
    dend_23 { pt3dadd( -56.4873, 112.244, -20.5941, 0.88 ) }
    dend_23 { pt3dadd( -56.8816, 113.396, -20.5884, 1.11 ) }
    dend_23 { pt3dadd( -57.1355, 114.041, -20.584, 1.03 ) }
    dend_23 { pt3dadd( -57.3258, 114.468, -20.5688, 1.03 ) }
    dend_23 { pt3dadd( -57.6763, 115.181, -20.521, 0.96 ) }
    dend_23 { pt3dadd( -57.9796, 115.772, -20.4609, 0.96 ) }
    dend_23 { pt3dadd( -58.3814, 116.554, -20.3408, 1.18 ) }
    dend_23 { pt3dadd( -58.6494, 117.157, -20.2244, 1.03 ) }
    dend_23 { pt3dadd( -58.9199, 117.935, -20.0513, 0.96 ) }
    dend_23 { pt3dadd( -59.0387, 118.452, -19.919, 0.59 ) }
    dend_23 { pt3dadd( -59.0994, 119.026, -19.7559, 0.59 ) }
    dend_23 { pt3dadd( -59.0925, 119.571, -19.595, 0.81 ) }
    dend_23 { pt3dadd( -58.9827, 120.451, -19.3441, 1.11 ) }
    dend_23 { pt3dadd( -58.8918, 120.887, -19.2184, 1.11 ) }
    dend_23 { pt3dadd( -58.7135, 121.527, -19.0409, 0.81 ) }
    dend_23 { pt3dadd( -58.5227, 122.124, -18.871, 0.96 ) }
    dend_23 { pt3dadd( -58.2791, 122.842, -18.6676, 0.81 ) }
    dend_23 { pt3dadd( -58.0649, 123.457, -18.4996, 0.96 ) }
    dend_23 { pt3dadd( -57.8208, 124.129, -18.3077, 0.96 ) }
    dend_23 { pt3dadd( -57.6071, 124.671, -18.1607, 1.03 ) }
    dend_23 { pt3dadd( -57.4586, 125.042, -18.0658, 1.03 ) }
    dend_23 { pt3dadd( -57.2928, 125.492, -17.9614, 0.96 ) }
    dend_23 { pt3dadd( -57.1498, 126.007, -17.8592, 0.96 ) }
    dend_23 { pt3dadd( -57.0245, 126.742, -17.7326, 0.74 ) }
    dend_23 { pt3dadd( -56.981, 127.443, -17.6397, 0.74 ) }
    dend_23 { pt3dadd( -57.0084, 128.105, -17.5675, 0.96 ) }
    dend_23 { pt3dadd( -57.1204, 128.951, -17.4951, 0.96 ) }
    dend_23 { pt3dadd( -57.3199, 129.843, -17.4429, 1.11 ) }
    dend_23 { pt3dadd( -57.4387, 130.244, -17.4327, 1.11 ) }
    dend_23 { pt3dadd( -57.6986, 131.019, -17.44, 0.74 ) }
    dend_23 { pt3dadd( -57.9291, 131.686, -17.444, 0.74 ) }
    dend_23 { pt3dadd( -58.232, 132.621, -17.4377, 0.74 ) }
    dend_23 { pt3dadd( -58.524, 133.629, -17.4163, 0.81 ) }
    dend_23 { pt3dadd( -58.7418, 134.5, -17.3884, 0.96 ) }
    dend_23 { pt3dadd( -58.9295, 135.382, -17.3521, 1.03 ) }
    dend_23 { pt3dadd( -59.1125, 136.328, -17.3006, 1.11 ) }
    dend_23 { pt3dadd( -59.2412, 137.111, -17.22, 0.88 ) }
    dend_23 { pt3dadd( -59.3508, 137.919, -17.1079, 0.88 ) }
    dend_23 { pt3dadd( -59.4282, 138.587, -16.9956, 0.81 ) }
    dend_23 { pt3dadd( -59.4799, 139.086, -16.9041, 0.81 ) }
    dend_23 { pt3dadd( -59.5722, 139.95, -16.751, 0.66 ) }
    dend_23 { pt3dadd( -59.7019, 141.093, -16.5488, 0.66 ) }
    dend_23 { pt3dadd( -59.8025, 141.887, -16.3968, 0.88 ) }
    dend_23 { pt3dadd( -59.8878, 142.491, -16.2752, 1.11 ) }
    dend_23 { pt3dadd( -60.0317, 143.377, -16.0957, 0.96 ) }
    dend_23 { pt3dadd( -60.1913, 144.2, -15.9247, 0.96 ) }
    dend_23 { pt3dadd( -60.3328, 144.819, -15.7963, 0.66 ) }
    dend_23 { pt3dadd( -60.5924, 145.731, -15.6135, 0.59 ) }
    dend_23 { pt3dadd( -60.8521, 146.537, -15.4298, 0.59 ) }
    dend_23 { pt3dadd( -61.1161, 147.334, -15.2448, 0.74 ) }
    dend_23 { pt3dadd( -61.338, 148.024, -15.0882, 0.74 ) }
    dend_23 { pt3dadd( -61.4805, 148.532, -14.9964, 0.81 ) }
    dend_23 { pt3dadd( -61.596, 148.992, -14.9376, 0.81 ) }
    dend_23 { pt3dadd( -61.7799, 149.812, -14.842, 0.59 ) }
    dend_23 { pt3dadd( -61.9939, 150.883, -14.6854, 0.74 ) }
    dend_23 { pt3dadd( -62.1102, 151.504, -14.5708, 0.74 ) }
    dend_23 { pt3dadd( -62.309, 152.62, -14.3325, 1.03 ) }
    dend_23 { pt3dadd( -62.4165, 153.269, -14.1659, 0.52 ) }
    dend_23 { pt3dadd( -62.5064, 153.878, -13.9818, 0.52 ) }
    dend_23 { pt3dadd( -62.6116, 154.715, -13.6839, 0.88 ) }
    dend_23 { pt3dadd( -62.7016, 155.574, -13.3453, 0.59 ) }
    dend_23 { pt3dadd( -62.7519, 156.25, -13.0513, 0.44 ) }
    dend_23 { pt3dadd( -62.7744, 156.861, -12.7752, 0.74 ) }
    dend_23 { pt3dadd( -62.7845, 157.464, -12.5257, 0.74 ) }
    dend_23 { pt3dadd( -62.8137, 158.299, -12.2108, 0.66 ) }
    dend_23 { pt3dadd( -62.8567, 159.003, -11.978, 0.59 ) }
    dend_23 { pt3dadd( -62.9526, 159.787, -11.7197, 0.59 ) }
    dend_23 { pt3dadd( -63.0714, 160.346, -11.5136, 0.59 ) }
    dend_23 { pt3dadd( -63.3079, 161.099, -11.2204, 0.59 ) }
    dend_23 { pt3dadd( -63.6395, 161.955, -10.8782, 0.81 ) }
    dend_23 { pt3dadd( -63.8737, 162.512, -10.6578, 0.81 ) }
    dend_23 { pt3dadd( -64.2693, 163.448, -10.2896, 0.74 ) }
    dend_23 { pt3dadd( -64.6428, 164.393, -9.89787, 0.66 ) }
    dend_23 { pt3dadd( -64.8352, 164.931, -9.64738, 0.59 ) }
    dend_23 { pt3dadd( -65.0881, 165.742, -9.25713, 0.59 ) }
    dend_23 { pt3dadd( -65.2913, 166.482, -8.89957, 0.96 ) }
    dend_23 { pt3dadd( -65.4269, 166.997, -8.64749, 0.96 ) }
    dend_23 { pt3dadd( -65.7664, 168.241, -8.07132, 0.88 ) }
    dend_23 { pt3dadd( -65.983, 168.938, -7.75994, 0.66 ) }
    dend_23 { pt3dadd( -66.1886, 169.5, -7.50929, 0.37 ) }
    dend_23 { pt3dadd( -66.3572, 169.909, -7.34046, 0.44 ) }
    dend_23 { pt3dadd( -66.5832, 170.419, -7.1693, 0.44 ) }
    dend_23 { pt3dadd( -66.8687, 171.023, -7.02911, 0.44 ) }
    dend_23 { pt3dadd( -67.2535, 171.746, -6.93427, 0.44 ) }
    dend_23 { pt3dadd( -67.715, 172.508, -6.8598, 0.44 ) }
    dend_23 { pt3dadd( -68.2114, 173.24, -6.78492, 0.44 ) }
    dend_23 { pt3dadd( -68.6837, 173.929, -6.7123, 0.52 ) }
    dend_23 { pt3dadd( -68.9577, 174.375, -6.66627, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -69.2379, 174.929, -6.61658, 0.52 ) }
    dend_23 { pt3dadd( -69.5114, 175.579, -6.58688, 0.59 ) }
    dend_23 { pt3dadd( -69.6786, 176.006, -6.57355, 0.59 ) }
    dend_23 { pt3dadd( -69.9971, 176.738, -6.5604, 0.59 ) }
    dend_23 { pt3dadd( -70.4474, 177.71, -6.55207, 0.44 ) }
    dend_23 { pt3dadd( -70.9211, 178.652, -6.55194, 0.44 ) }
    dend_23 { pt3dadd( -71.5682, 179.744, -6.56703, 0.44 ) }
    dend_23 { pt3dadd( -71.8892, 180.15, -6.58331, 0.44 ) }
    dend_23 { pt3dadd( -72.7721, 180.621, -6.65214, 0.44 ) }
    dend_23 { pt3dadd( -73.4832, 180.63, -6.70858, 0.37 ) }
    dend_23 { pt3dadd( -74.2411, 180.456, -6.76393, 0.37 ) }
    dend_23 { pt3dadd( -74.9784, 180.169, -6.81306, 1.25 ) }
    dend_23 { pt3dadd( -75.7771, 179.783, -6.86345, 0.37 ) }
    dend_23 { pt3dadd( -76.2866, 179.525, -6.87128, 0.37 ) }
    dend_23 { pt3dadd( -76.5167, 179.411, -6.85573, 0.59 ) }
    dend_23 { pt3dadd( -76.9727, 179.207, -6.77984, 0.59 ) }
    dend_23 { pt3dadd( -77.3595, 179.039, -6.6677, 0.29 ) }
    dend_23 { pt3dadd( -77.9745, 178.78, -6.44635, 0.29 ) }
    dend_23 { pt3dadd( -78.6764, 178.556, -6.14241, 0.66 ) }
    dend_23 { pt3dadd( -79.174, 178.419, -5.88727, 1.11 ) }
    dend_23 { pt3dadd( -79.5933, 178.316, -5.64349, 1.33 ) }
    dend_23 { pt3dadd( -80.0956, 178.205, -5.29524, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.59566, 22.8338, 9.07428, 0.81 ) }
    dend_20 { pt3dadd( -8.68846, 24.8113, 8.9606, 0.81 ) }
    dend_20 { pt3dadd( -8.80092, 26.3425, 8.83407, 0.96 ) }
    dend_20 { pt3dadd( -8.97387, 27.8781, 8.69552, 0.88 ) }
    dend_20 { pt3dadd( -9.10058, 28.6468, 8.6269, 0.88 ) }
    dend_20 { pt3dadd( -9.35222, 29.8239, 8.52651, 1.03 ) }
    dend_20 { pt3dadd( -9.55375, 30.5684, 8.46789, 1.03 ) }
    dend_20 { pt3dadd( -10.0756, 31.9219, 8.34595, 0.96 ) }
    dend_20 { pt3dadd( -10.6338, 33.0453, 8.26506, 0.96 ) }
    dend_20 { pt3dadd( -11.3195, 34.133, 8.18903, 1.11 ) }
    dend_20 { pt3dadd( -11.9526, 34.9407, 8.12962, 1.18 ) }
    dend_20 { pt3dadd( -12.9262, 35.9749, 8.0559, 1.18 ) }
    dend_20 { pt3dadd( -13.6265, 36.6409, 8.01399, 1.4 ) }
    dend_20 { pt3dadd( -14.1272, 37.0952, 8.01271, 1.25 ) }
    dend_20 { pt3dadd( -14.9127, 37.8118, 8.04225, 0.88 ) }
    dend_20 { pt3dadd( -15.681, 38.5585, 8.09562, 1.18 ) }
    dend_20 { pt3dadd( -16.1078, 39.0272, 8.16454, 1.47 ) }
    dend_20 { pt3dadd( -16.5929, 39.6346, 8.28761, 1.33 ) }
    dend_20 { pt3dadd( -17.5613, 40.9498, 8.60194, 0.96 ) }
    dend_20 { pt3dadd( -18.0281, 41.6254, 8.77911, 1.18 ) }
    dend_20 { pt3dadd( -18.462, 42.2755, 8.96538, 1.18 ) }
    dend_20 { pt3dadd( -19.3211, 43.4989, 9.30721, 1.18 ) }
    dend_20 { pt3dadd( -19.6265, 43.8919, 9.41024, 1.33 ) }
    dend_20 { pt3dadd( -20.192, 44.5288, 9.55643, 0.96 ) }
    dend_20 { pt3dadd( -20.6607, 44.9858, 9.63295, 0.81 ) }
    dend_20 { pt3dadd( -21.1853, 45.4503, 9.70544, 0.81 ) }
    dend_20 { pt3dadd( -21.95, 46.0696, 9.78225, 1.11 ) }
    dend_20 { pt3dadd( -22.411, 46.4379, 9.80035, 1.11 ) }
    dend_20 { pt3dadd( -22.9093, 46.8908, 9.80072, 0.88 ) }
    dend_20 { pt3dadd( -23.2021, 47.2356, 9.78663, 0.88 ) }
    dend_20 { pt3dadd( -23.5038, 47.7347, 9.7511, 0.88 ) }
    dend_20 { pt3dadd( -23.9001, 48.7701, 9.63891, 1.11 ) }
    dend_20 { pt3dadd( -24.0172, 49.3948, 9.51641, 1.11 ) }
    dend_20 { pt3dadd( -24.109, 50.4582, 9.26352, 1.11 ) }
    dend_20 { pt3dadd( -24.1547, 51.545, 8.94275, 1.03 ) }
    dend_20 { pt3dadd( -24.1812, 52.5174, 8.62457, 1.4 ) }
    dend_20 { pt3dadd( -24.2102, 53.3637, 8.29894, 1.62 ) }
    dend_20 { pt3dadd( -24.292, 54.8309, 7.67696, 0.88 ) }
    dend_20 { pt3dadd( -24.3988, 55.7569, 7.26724, 0.88 ) }
    dend_20 { pt3dadd( -24.6148, 56.8487, 6.83024, 0.88 ) }
    dend_20 { pt3dadd( -24.8708, 57.7332, 6.53966, 1.03 ) }
    dend_20 { pt3dadd( -25.2763, 58.7643, 6.30015, 0.81 ) }
    dend_20 { pt3dadd( -25.5978, 59.3555, 6.30983, 0.96 ) }
    dend_20 { pt3dadd( -25.9977, 59.8525, 6.51544, 0.81 ) }
    dend_20 { pt3dadd( -26.9299, 60.681, 7.2319, 1.25 ) }
    dend_20 { pt3dadd( -27.9217, 61.3567, 8.1449, 1.25 ) }
    dend_20 { pt3dadd( -28.4104, 61.6251, 8.59779, 0.96 ) }
    dend_20 { pt3dadd( -29.3523, 62.085, 9.45279, 0.96 ) }
    dend_20 { pt3dadd( -30.0726, 62.4132, 10.036, 0.96 ) }
    dend_20 { pt3dadd( -30.5814, 62.6599, 10.3767, 0.96 ) }
    dend_20 { pt3dadd( -31.358, 63.1116, 10.7496, 0.81 ) }
    dend_20 { pt3dadd( -31.9602, 63.5733, 10.9566, 0.96 ) }
    dend_20 { pt3dadd( -32.7434, 64.3256, 11.1757, 0.96 ) }
    dend_20 { pt3dadd( -33.0894, 64.7008, 11.2479, 1.11 ) }
    dend_20 { pt3dadd( -33.7556, 65.4706, 11.379, 1.11 ) }
    dend_20 { pt3dadd( -34.4378, 66.3163, 11.4729, 0.96 ) }
    dend_20 { pt3dadd( -35.1629, 67.2803, 11.5378, 0.81 ) }
    dend_20 { pt3dadd( -35.9732, 68.449, 11.5712, 1.03 ) }
    dend_20 { pt3dadd( -36.5673, 69.3878, 11.6122, 1.18 ) }
    dend_20 { pt3dadd( -37.2232, 70.5055, 11.6934, 1.18 ) }
    dend_20 { pt3dadd( -37.9185, 71.8721, 11.8304, 1.03 ) }
    dend_20 { pt3dadd( -38.2558, 72.6785, 11.948, 1.11 ) }
    dend_20 { pt3dadd( -38.4998, 73.5181, 12.1365, 1.11 ) }
    dend_20 { pt3dadd( -38.7252, 74.9371, 12.6035, 0.96 ) }
    dend_20 { pt3dadd( -38.7757, 75.5709, 12.8741, 0.96 ) }
    dend_20 { pt3dadd( -38.8229, 76.4258, 13.3216, 0.74 ) }
    dend_20 { pt3dadd( -38.9054, 77.1797, 13.7895, 0.74 ) }
    dend_20 { pt3dadd( -39.1923, 78.3154, 14.5364, 0.96 ) }
    dend_20 { pt3dadd( -39.5294, 78.9944, 14.9787, 0.88 ) }
    dend_20 { pt3dadd( -40.0631, 79.5413, 15.2607, 0.74 ) }
    dend_20 { pt3dadd( -40.76, 79.9388, 15.3982, 0.74 ) }
    dend_20 { pt3dadd( -41.5322, 80.2523, 15.4135, 0.81 ) }
    dend_20 { pt3dadd( -42.5559, 80.6192, 15.3219, 0.88 ) }
    dend_20 { pt3dadd( -43.1874, 80.8413, 15.2248, 0.88 ) }
    dend_20 { pt3dadd( -43.7907, 81.0721, 15.1122, 1.03 ) }
    dend_20 { pt3dadd( -44.6461, 81.4268, 14.9537, 1.03 ) }
    dend_20 { pt3dadd( -45.8473, 81.9348, 14.8188, 0.96 ) }
    dend_20 { pt3dadd( -46.6158, 82.2491, 14.7929, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( -47.5486, 82.6006, 14.8413, 0.81 ) }
    dend_20 { pt3dadd( -48.1951, 82.8214, 14.9107, 0.81 ) }
    dend_20 { pt3dadd( -49.0538, 83.0884, 15.0399, 0.81 ) }
    dend_20 { pt3dadd( -50.3135, 83.4454, 15.277, 0.88 ) }
    dend_20 { pt3dadd( -51.0289, 83.6377, 15.4088, 0.88 ) }
    dend_20 { pt3dadd( -52.0133, 83.9341, 15.5779, 0.88 ) }
    dend_20 { pt3dadd( -52.8012, 84.2388, 15.712, 0.96 ) }
    dend_20 { pt3dadd( -53.4373, 84.5717, 15.836, 0.96 ) }
    dend_20 { pt3dadd( -54.0705, 84.994, 15.9738, 0.81 ) }
    dend_20 { pt3dadd( -54.6113, 85.4212, 16.0972, 0.96 ) }
    dend_20 { pt3dadd( -55.1682, 85.9103, 16.2655, 0.96 ) }
    dend_20 { pt3dadd( -55.7925, 86.5125, 16.5463, 0.88 ) }
    dend_20 { pt3dadd( -56.3872, 87.106, 16.9175, 0.88 ) }
    dend_20 { pt3dadd( -56.8109, 87.5597, 17.2544, 0.96 ) }
    dend_20 { pt3dadd( -57.213, 88.0349, 17.6692, 0.96 ) }
    dend_20 { pt3dadd( -57.7432, 88.768, 18.3492, 0.81 ) }
    dend_20 { pt3dadd( -58.2309, 89.514, 19.0636, 0.81 ) }
    dend_20 { pt3dadd( -58.6255, 90.1496, 19.6112, 0.88 ) }
    dend_20 { pt3dadd( -58.9597, 90.7261, 20.0228, 0.81 ) }
    dend_20 { pt3dadd( -59.3711, 91.5145, 20.4658, 0.81 ) }
    dend_20 { pt3dadd( -59.8215, 92.4351, 20.8077, 0.96 ) }
    dend_20 { pt3dadd( -60.166, 93.1293, 20.9438, 0.81 ) }
    dend_20 { pt3dadd( -60.8068, 94.3405, 21.0385, 0.74 ) }
    dend_20 { pt3dadd( -61.2591, 95.1434, 21.0228, 0.74 ) }
    dend_20 { pt3dadd( -61.8078, 96.0315, 20.9282, 0.74 ) }
    dend_20 { pt3dadd( -62.416, 96.9894, 20.7145, 0.88 ) }
    dend_20 { pt3dadd( -62.714, 97.4706, 20.5687, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.6289, 18.0105, 12.5623, 0.74 ) }
    dend_18 { pt3dadd( -12.967, 17.1091, 13.6246, 0.74 ) }
    dend_18 { pt3dadd( -13.348, 16.8048, 13.9456, 0.88 ) }
    dend_18 { pt3dadd( -14.1046, 16.1757, 14.5339, 0.81 ) }
    dend_18 { pt3dadd( -15.0359, 15.2277, 15.3641, 0.52 ) }
    dend_18 { pt3dadd( -15.4119, 14.8632, 15.6275, 0.44 ) }
    dend_18 { pt3dadd( -15.9466, 14.3865, 15.9073, 0.44 ) }
    dend_18 { pt3dadd( -16.3555, 14.0384, 15.9334, 0.29 ) }
    dend_18 { pt3dadd( -16.7812, 13.811, 15.83, 0.29 ) }
    dend_18 { pt3dadd( -18.0111, 13.5899, 15.16, 1.4 ) }
    dend_18 { pt3dadd( -19.5824, 13.4391, 14.1155, 0.29 ) }
    dend_18 { pt3dadd( -20.0818, 13.4174, 13.7684, 0.29 ) }
    dend_18 { pt3dadd( -20.8676, 13.438, 13.1738, 0.37 ) }
    dend_18 { pt3dadd( -21.3555, 13.4985, 12.7768, 0.44 ) }
    dend_18 { pt3dadd( -21.8969, 13.6192, 12.3018, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.6289, 18.0105, 12.5623, 2.28 ) }
    dend_11 { pt3dadd( -12.3036, 19.7131, 12.9318, 2.28 ) }
    dend_11 { pt3dadd( -12.7626, 20.8716, 13.1832, 1.4 ) }
    dend_11 { pt3dadd( -13.0608, 21.6241, 13.3466, 1.4 ) }
    dend_11 { pt3dadd( -13.5119, 22.7625, 13.5937, 1.4 ) }
    dend_11 { pt3dadd( -13.8038, 23.4994, 13.7536, 1.4 ) }
    dend_11 { pt3dadd( -14.1043, 24.2577, 13.9182, 1.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.11222, 149.922, 1.94509, 0.59 ) }
    dend_5 { pt3dadd( 1.29814, 151.82, 1.17049, 0.59 ) }
    dend_5 { pt3dadd( 1.35168, 152.84, 0.827256, 0.59 ) }
    dend_5 { pt3dadd( 1.38527, 154.235, 0.474332, 0.59 ) }
    dend_5 { pt3dadd( 1.39217, 154.773, 0.368902, 0.59 ) }
    dend_5 { pt3dadd( 1.40087, 155.765, 0.165604, 0.81 ) }
    dend_5 { pt3dadd( 1.4069, 156.633, -0.00479829, 0.88 ) }
    dend_5 { pt3dadd( 1.40633, 157.498, -0.109161, 0.88 ) }
    dend_5 { pt3dadd( 1.36072, 158.823, -0.249553, 0.66 ) }
    dend_5 { pt3dadd( 1.30296, 159.726, -0.306845, 0.88 ) }
    dend_5 { pt3dadd( 1.19296, 160.93, -0.339737, 0.96 ) }
    dend_5 { pt3dadd( 1.07218, 161.89, -0.342616, 0.81 ) }
    dend_5 { pt3dadd( 0.961515, 162.484, -0.324651, 0.81 ) }
    dend_5 { pt3dadd( 0.67223, 163.496, -0.256301, 0.66 ) }
    dend_5 { pt3dadd( 0.299587, 164.345, -0.152284, 0.74 ) }
    dend_5 { pt3dadd( -0.315874, 165.327, 0.0757814, 0.44 ) }
    dend_5 { pt3dadd( -0.848393, 165.953, 0.307739, 0.44 ) }
    dend_5 { pt3dadd( -1.20638, 166.294, 0.453612, 0.81 ) }
    dend_5 { pt3dadd( -1.61573, 166.66, 0.615073, 0.96 ) }
    dend_5 { pt3dadd( -2.02864, 167.042, 0.77433, 0.74 ) }
    dend_5 { pt3dadd( -2.5578, 167.622, 0.997023, 0.74 ) }
    dend_5 { pt3dadd( -3.0479, 168.286, 1.12855, 0.88 ) }
    dend_5 { pt3dadd( -3.61862, 169.249, 1.19252, 1.03 ) }
    dend_5 { pt3dadd( -4.05901, 170.115, 1.12893, 0.88 ) }
    dend_5 { pt3dadd( -4.48605, 171.054, 0.987483, 0.74 ) }
    dend_5 { pt3dadd( -4.87346, 171.987, 0.805461, 0.88 ) }
    dend_5 { pt3dadd( -5.66969, 174.076, 0.340431, 0.66 ) }
    dend_5 { pt3dadd( -6.15692, 175.466, 0.0293293, 1.03 ) }
    dend_5 { pt3dadd( -6.61709, 176.899, -0.279865, 0.88 ) }
    dend_5 { pt3dadd( -7.00738, 178.292, -0.503973, 1.03 ) }
    dend_5 { pt3dadd( -7.24224, 179.261, -0.600103, 1.03 ) }
    dend_5 { pt3dadd( -7.46261, 180.374, -0.624906, 0.88 ) }
    dend_5 { pt3dadd( -7.63414, 181.426, -0.53098, 0.81 ) }
    dend_5 { pt3dadd( -7.79673, 182.406, -0.412892, 0.81 ) }
    dend_5 { pt3dadd( -8.10116, 183.927, -0.195627, 0.66 ) }
    dend_5 { pt3dadd( -8.30405, 184.718, -0.100023, 0.66 ) }
    dend_5 { pt3dadd( -8.6691, 185.798, -0.0166317, 1.03 ) }
    dend_5 { pt3dadd( -8.95718, 186.484, 0.00670271, 0.81 ) }
    dend_5 { pt3dadd( -9.41705, 187.46, -0.0213685, 0.59 ) }
    dend_5 { pt3dadd( -9.95013, 188.513, -0.141867, 0.59 ) }
    dend_5 { pt3dadd( -10.2896, 189.154, -0.296738, 0.59 ) }
    dend_5 { pt3dadd( -10.7108, 189.895, -0.563406, 0.59 ) }
    dend_5 { pt3dadd( -11.1314, 190.582, -0.869603, 0.59 ) }
    dend_5 { pt3dadd( -11.8582, 191.709, -1.40975, 0.59 ) }
    dend_5 { pt3dadd( -12.6074, 192.831, -1.92069, 1.18 ) }
    dend_5 { pt3dadd( -13.2445, 193.737, -2.31118, 1.33 ) }
    dend_5 { pt3dadd( -14.1584, 194.973, -2.82198, 0.74 ) }
    dend_5 { pt3dadd( -14.6759, 195.661, -3.06742, 0.74 ) }
    dend_5 { pt3dadd( -15.2233, 196.402, -3.31561, 0.74 ) }
    dend_5 { pt3dadd( -16.0345, 197.596, -3.70016, 0.88 ) }
    dend_5 { pt3dadd( -16.441, 198.345, -3.89892, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_5 { pt3dadd( -16.6775, 198.898, -4.02234, 1.03 ) }
    dend_5 { pt3dadd( -17.042, 199.946, -4.24303, 0.74 ) }
    dend_5 { pt3dadd( -17.3273, 200.815, -4.412, 0.74 ) }
    dend_5 { pt3dadd( -17.7794, 202.075, -4.6182, 0.59 ) }
    dend_5 { pt3dadd( -18.236, 203.104, -4.71971, 0.74 ) }
    dend_5 { pt3dadd( -18.8095, 204.136, -4.6988, 0.74 ) }
    dend_5 { pt3dadd( -19.2057, 204.759, -4.69455, 0.74 ) }
    dend_5 { pt3dadd( -19.9677, 205.837, -4.72838, 0.88 ) }
    dend_5 { pt3dadd( -20.5068, 206.539, -4.75046, 1.03 ) }
    dend_5 { pt3dadd( -21.154, 207.297, -4.78003, 0.74 ) }
    dend_5 { pt3dadd( -21.9354, 208.114, -4.91573, 0.59 ) }
    dend_5 { pt3dadd( -23.322, 209.471, -5.2866, 0.59 ) }
    dend_5 { pt3dadd( -24.1115, 210.215, -5.62675, 0.74 ) }
    dend_5 { pt3dadd( -24.5897, 210.655, -5.87166, 0.96 ) }
    dend_5 { pt3dadd( -25.208, 211.187, -6.21278, 0.88 ) }
    dend_5 { pt3dadd( -25.986, 211.756, -6.61333, 0.74 ) }
    dend_5 { pt3dadd( -27.1785, 212.563, -7.22561, 1.55 ) }
    dend_5 { pt3dadd( -28.2328, 213.288, -7.74362, 1.99 ) }
    dend_5 { pt3dadd( -29.2257, 214.084, -8.3177, 0.74 ) }
    dend_5 { pt3dadd( -29.9061, 214.833, -8.82047, 0.59 ) }
    dend_5 { pt3dadd( -30.5127, 215.869, -9.4185, 0.88 ) }
    dend_5 { pt3dadd( -30.9507, 217.066, -9.97061, 0.81 ) }
    dend_5 { pt3dadd( -31.1391, 217.898, -10.3187, 0.81 ) }
    dend_5 { pt3dadd( -31.2826, 218.921, -10.8466, 0.74 ) }
    dend_5 { pt3dadd( -31.3989, 220.016, -11.5053, 0.74 ) }
    dend_5 { pt3dadd( -31.5374, 220.908, -12.1139, 0.66 ) }
    dend_5 { pt3dadd( -31.6766, 221.618, -12.6443, 0.66 ) }
    dend_5 { pt3dadd( -32.0209, 222.892, -13.6048, 1.47 ) }
    dend_5 { pt3dadd( -32.7729, 225.268, -15.4267, 1.18 ) }
    dend_5 { pt3dadd( -33.0698, 226.122, -16.073, 1.03 ) }
    dend_5 { pt3dadd( -33.7003, 227.989, -17.4506, 1.03 ) }
    dend_5 { pt3dadd( -34.0069, 229.023, -18.1249, 0.74 ) }
    dend_5 { pt3dadd( -34.2885, 230.226, -18.7579, 1.03 ) }
    dend_5 { pt3dadd( -34.3626, 230.67, -18.9111, 1.25 ) }
    dend_5 { pt3dadd( -34.5416, 232.042, -19.1893, 0.66 ) }
    dend_5 { pt3dadd( -34.6608, 233.161, -19.3791, 0.66 ) }
    dend_5 { pt3dadd( -34.8065, 234.503, -19.5243, 0.81 ) }
    dend_5 { pt3dadd( -34.982, 235.472, -19.6483, 0.66 ) }
    dend_5 { pt3dadd( -35.2225, 236.373, -19.7939, 0.66 ) }
    dend_5 { pt3dadd( -35.8053, 238.01, -20.0716, 0.66 ) }
    dend_5 { pt3dadd( -36.1965, 238.903, -20.226, 0.52 ) }
    dend_5 { pt3dadd( -36.5897, 239.702, -20.3676, 0.66 ) }
    dend_5 { pt3dadd( -36.8715, 240.276, -20.4789, 0.81 ) }
    dend_5 { pt3dadd( -37.3355, 241.31, -20.5683, 0.52 ) }
    dend_5 { pt3dadd( -37.6626, 242.164, -20.5098, 0.52 ) }
    dend_5 { pt3dadd( -37.9785, 243.182, -20.3304, 0.88 ) }
    dend_5 { pt3dadd( -38.1751, 243.963, -20.1718, 0.88 ) }
    dend_5 { pt3dadd( -38.3617, 244.898, -19.9909, 0.59 ) }
    dend_5 { pt3dadd( -38.5568, 246.395, -19.7596, 0.74 ) }
    dend_5 { pt3dadd( -38.6333, 247.592, -19.8647, 0.44 ) }
    dend_5 { pt3dadd( -38.6648, 248.538, -20.2771, 0.44 ) }
    dend_5 { pt3dadd( -38.6981, 249.257, -20.7413, 0.44 ) }
    dend_5 { pt3dadd( -38.7464, 250.225, -21.47, 0.44 ) }
    dend_5 { pt3dadd( -38.7889, 251.224, -22.3213, 1.11 ) }
    dend_5 { pt3dadd( -38.935, 253.862, -24.6727, 0.88 ) }
    dend_5 { pt3dadd( -39.001, 255.177, -25.8, 0.44 ) }
    dend_5 { pt3dadd( -39.0575, 256.052, -26.4694, 0.66 ) }
    dend_5 { pt3dadd( -39.1228, 256.726, -26.8941, 0.44 ) }
    dend_5 { pt3dadd( -39.2659, 257.882, -27.3929, 0.44 ) }
    dend_5 { pt3dadd( -39.3939, 259.027, -27.6457, 0.44 ) }
    dend_5 { pt3dadd( -39.5084, 260.489, -27.6814, 0.59 ) }
    dend_5 { pt3dadd( -39.6154, 261.868, -27.618, 0.59 ) }
    dend_5 { pt3dadd( -39.7643, 263.171, -27.5231, 0.52 ) }
    dend_5 { pt3dadd( -39.9732, 264.319, -27.3945, 0.37 ) }
    dend_5 { pt3dadd( -40.2994, 265.495, -27.2021, 0.37 ) }
    dend_5 { pt3dadd( -40.6076, 266.271, -27.0716, 0.37 ) }
    dend_5 { pt3dadd( -41.1267, 267.106, -26.9221, 0.37 ) }
    dend_5 { pt3dadd( -41.7458, 267.851, -26.7823, 0.37 ) }
    dend_5 { pt3dadd( -42.3034, 268.408, -26.6877, 0.74 ) }
    dend_5 { pt3dadd( -43.2001, 269.143, -26.5602, 0.66 ) }
    dend_5 { pt3dadd( -43.9823, 269.69, -26.4627, 0.66 ) }
    dend_5 { pt3dadd( -45.1612, 270.434, -26.332, 0.44 ) }
    dend_5 { pt3dadd( -45.9801, 270.906, -26.25, 0.37 ) }
    dend_5 { pt3dadd( -46.4546, 271.177, -26.2035, 0.37 ) }
    dend_5 { pt3dadd( -47.3245, 271.638, -26.1333, 0.29 ) }
    dend_5 { pt3dadd( -47.8069, 271.823, -26.1021, 0.29 ) }
    dend_5 { pt3dadd( -48.477, 271.897, -26.0725, 1.03 ) }
    dend_5 { pt3dadd( -49.1166, 271.731, -26.0822, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 78/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.11222, 149.922, 1.94509, 0.59 ) }
    dend_2 { pt3dadd( 1.5429, 151.039, 2.35589, 0.59 ) }
    dend_2 { pt3dadd( 1.76176, 151.83, 2.58687, 0.81 ) }
    dend_2 { pt3dadd( 1.92607, 152.94, 2.83453, 0.88 ) }
    dend_2 { pt3dadd( 1.97513, 153.74, 2.97697, 0.59 ) }
    dend_2 { pt3dadd( 1.9756, 154.336, 3.04551, 0.59 ) }
    dend_2 { pt3dadd( 1.9651, 155.19, 3.11137, 0.96 ) }
    dend_2 { pt3dadd( 1.92672, 155.663, 3.12663, 1.11 ) }
    dend_2 { pt3dadd( 1.82147, 156.67, 3.12, 0.66 ) }
    dend_2 { pt3dadd( 1.74242, 157.401, 3.07381, 0.66 ) }
    dend_2 { pt3dadd( 1.64229, 158.532, 3.06839, 0.66 ) }
    dend_2 { pt3dadd( 1.60522, 159.401, 3.11036, 0.59 ) }
    dend_2 { pt3dadd( 1.6131, 160.103, 3.19346, 0.59 ) }
    dend_2 { pt3dadd( 1.67526, 161.105, 3.36338, 0.59 ) }
    dend_2 { pt3dadd( 1.76712, 161.963, 3.53916, 0.59 ) }
    dend_2 { pt3dadd( 1.97287, 163.512, 3.90284, 0.66 ) }
    dend_2 { pt3dadd( 2.08019, 164.25, 4.09822, 0.66 ) }
    dend_2 { pt3dadd( 2.20067, 165.184, 4.34754, 0.52 ) }
    dend_2 { pt3dadd( 2.29679, 165.973, 4.55, 0.52 ) }
    dend_2 { pt3dadd( 2.37414, 166.784, 4.74769, 0.52 ) }
    dend_2 { pt3dadd( 2.41769, 167.4, 4.87771, 0.74 ) }
    dend_2 { pt3dadd( 2.4418, 167.955, 4.94546, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 2.47616, 168.615, 5.01376, 0.88 ) }
    dend_2 { pt3dadd( 2.52607, 169.072, 5.04836, 0.88 ) }
    dend_2 { pt3dadd( 2.7864, 170.2, 5.11246, 0.59 ) }
    dend_2 { pt3dadd( 3.00327, 170.714, 5.11121, 0.81 ) }
    dend_2 { pt3dadd( 3.39905, 171.33, 5.0726, 0.59 ) }
    dend_2 { pt3dadd( 3.95885, 172.009, 4.99914, 0.74 ) }
    dend_2 { pt3dadd( 4.54032, 172.624, 4.89636, 0.74 ) }
    dend_2 { pt3dadd( 5.14701, 173.219, 4.75485, 0.74 ) }
    dend_2 { pt3dadd( 5.82777, 173.873, 4.57071, 0.59 ) }
    dend_2 { pt3dadd( 6.44827, 174.465, 4.39753, 0.59 ) }
    dend_2 { pt3dadd( 7.09912, 175.104, 4.21093, 0.81 ) }
    dend_2 { pt3dadd( 7.67802, 175.718, 4.022, 0.81 ) }
    dend_2 { pt3dadd( 8.43592, 176.626, 3.74159, 0.59 ) }
    dend_2 { pt3dadd( 8.86709, 177.213, 3.5662, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -18.8233, -28.8523, -0.468012, 0.74 ) }
    dend_35 { pt3dadd( -18.8931, -31.3992, -3.84867, 0.74 ) }
    dend_35 { pt3dadd( -18.8861, -33.3218, -5.86557, 0.88 ) }
    dend_35 { pt3dadd( -18.8717, -36.6848, -8.72168, 1.03 ) }
    dend_35 { pt3dadd( -18.9001, -38.0743, -9.69252, 0.96 ) }
    dend_35 { pt3dadd( -19.005, -39.8288, -10.7288, 0.66 ) }
    dend_35 { pt3dadd( -19.1749, -41.4671, -11.5699, 0.88 ) }
    dend_35 { pt3dadd( -19.3896, -42.9252, -11.9432, 0.81 ) }
    dend_35 { pt3dadd( -19.7264, -44.256, -12.089, 0.81 ) }
    dend_35 { pt3dadd( -20.2838, -45.7231, -12.1114, 0.66 ) }
    dend_35 { pt3dadd( -20.9039, -46.9844, -12.1627, 0.66 ) }
    dend_35 { pt3dadd( -21.5285, -48.1247, -12.2728, 0.74 ) }
    dend_35 { pt3dadd( -22.4176, -49.682, -12.4962, 0.59 ) }
    dend_35 { pt3dadd( -22.901, -50.611, -12.6373, 0.52 ) }
    dend_35 { pt3dadd( -23.2913, -51.514, -12.7711, 0.52 ) }
    dend_35 { pt3dadd( -23.9091, -53.3772, -13.0154, 0.88 ) }
    dend_35 { pt3dadd( -24.2488, -54.7299, -13.1598, 0.88 ) }
    dend_35 { pt3dadd( -24.5482, -56.18, -13.2754, 0.74 ) }
    dend_35 { pt3dadd( -24.9589, -58.2514, -13.39, 0.74 ) }
    dend_35 { pt3dadd( -25.2198, -59.422, -13.4399, 0.74 ) }
    dend_35 { pt3dadd( -25.7219, -61.2447, -13.4905, 0.81 ) }
    dend_35 { pt3dadd( -26.2516, -62.7363, -13.485, 0.81 ) }
    dend_35 { pt3dadd( -26.9021, -64.2114, -13.4226, 0.66 ) }
    dend_35 { pt3dadd( -27.6407, -65.6382, -13.3378, 0.74 ) }
    dend_35 { pt3dadd( -28.4009, -66.935, -13.2472, 0.74 ) }
    dend_35 { pt3dadd( -29.1862, -68.2051, -13.1798, 0.81 ) }
    dend_35 { pt3dadd( -29.8928, -69.3507, -13.1393, 0.81 ) }
    dend_35 { pt3dadd( -30.3906, -70.2013, -13.125, 0.74 ) }
    dend_35 { pt3dadd( -31.0368, -71.473, -13.1312, 0.52 ) }
    dend_35 { pt3dadd( -31.4889, -72.5483, -13.1595, 0.52 ) }
    dend_35 { pt3dadd( -32.0228, -74.1018, -13.2321, 0.52 ) }
    dend_35 { pt3dadd( -32.4422, -75.5557, -13.287, 1.03 ) }
    dend_35 { pt3dadd( -32.6741, -76.4703, -13.3178, 1.03 ) }
    dend_35 { pt3dadd( -32.9448, -77.588, -13.3236, 0.81 ) }
    dend_35 { pt3dadd( -33.1709, -78.5336, -13.2981, 0.88 ) }
    dend_35 { pt3dadd( -33.4269, -79.8018, -13.2154, 1.03 ) }
    dend_35 { pt3dadd( -33.6856, -81.5068, -13.0493, 0.74 ) }
    dend_35 { pt3dadd( -33.7935, -82.6243, -12.9902, 0.74 ) }
    dend_35 { pt3dadd( -33.8681, -84.0471, -12.9729, 0.74 ) }
    dend_35 { pt3dadd( -33.8848, -85.3379, -13.0741, 0.59 ) }
    dend_35 { pt3dadd( -33.8568, -87.0655, -13.358, 0.66 ) }
    dend_35 { pt3dadd( -33.8042, -88.0998, -13.6132, 0.66 ) }
    dend_35 { pt3dadd( -33.6389, -90.0226, -14.2458, 0.66 ) }
    dend_35 { pt3dadd( -33.5613, -91.0116, -14.6227, 0.52 ) }
    dend_35 { pt3dadd( -33.4931, -92.9136, -15.4156, 0.59 ) }
    dend_35 { pt3dadd( -33.543, -93.8833, -15.8292, 0.81 ) }
    dend_35 { pt3dadd( -33.6801, -94.7505, -16.1838, 0.81 ) }
    dend_35 { pt3dadd( -33.9237, -95.8151, -16.5543, 0.29 ) }
    dend_35 { pt3dadd( -34.227, -96.8726, -16.8122, 0.29 ) }
    dend_35 { pt3dadd( -34.683, -98.2193, -17.0617, 0.74 ) }
    dend_35 { pt3dadd( -35.0865, -99.3299, -17.1816, 1.25 ) }
    dend_35 { pt3dadd( -35.3649, -100.105, -17.2495, 1.47 ) }
    dend_35 { pt3dadd( -35.5636, -100.682, -17.2846, 1.62 ) }
    dend_35 { pt3dadd( -35.909, -101.784, -17.323, 1.25 ) }
    dend_35 { pt3dadd( -36.2385, -103.043, -17.3652, 0.44 ) }
    dend_35 { pt3dadd( -36.5648, -104.373, -17.4448, 0.29 ) }
    dend_35 { pt3dadd( -37.0024, -106.142, -17.5393, 0.66 ) }
    dend_35 { pt3dadd( -37.3026, -107.338, -17.5936, 0.96 ) }
    dend_35 { pt3dadd( -37.4856, -108.059, -17.62, 1.25 ) }
    dend_35 { pt3dadd( -37.682, -108.861, -17.6406, 1.47 ) }
    dend_35 { pt3dadd( -37.9878, -110.147, -17.6558, 1.03 ) }
    dend_35 { pt3dadd( -38.4233, -111.745, -17.6499, 0.29 ) }
    dend_35 { pt3dadd( -38.7333, -112.746, -17.6253, 0.44 ) }
    dend_35 { pt3dadd( -39.0544, -113.605, -17.5884, 0.74 ) }
    dend_35 { pt3dadd( -39.4335, -114.499, -17.5303, 0.96 ) }
    dend_35 { pt3dadd( -39.8243, -115.31, -17.4564, 1.25 ) }
    dend_35 { pt3dadd( -40.2068, -115.972, -17.3922, 1.25 ) }
    dend_35 { pt3dadd( -40.9507, -117.003, -17.3317, 1.03 ) }
    dend_35 { pt3dadd( -41.7177, -117.861, -17.2413, 0.81 ) }
    dend_35 { pt3dadd( -42.1021, -118.223, -17.2236, 0.81 ) }
    dend_35 { pt3dadd( -42.5793, -118.638, -17.2283, 0.59 ) }
    dend_35 { pt3dadd( -43.3361, -119.286, -17.2783, 0.52 ) }
    dend_35 { pt3dadd( -43.7914, -119.72, -17.3341, 0.52 ) }
    dend_35 { pt3dadd( -44.6653, -120.704, -17.4957, 0.59 ) }
    dend_35 { pt3dadd( -45.7105, -122.201, -17.787, 0.44 ) }
    dend_35 { pt3dadd( -46.2136, -123.145, -17.9975, 0.29 ) }
    dend_35 { pt3dadd( -46.5061, -123.802, -18.1526, 0.29 ) }
    dend_35 { pt3dadd( -46.9256, -124.836, -18.4043, 0.66 ) }
    dend_35 { pt3dadd( -47.2534, -125.658, -18.6096, 1.03 ) }
    dend_35 { pt3dadd( -47.5539, -126.396, -18.7982, 1.03 ) }
    dend_35 { pt3dadd( -48.2107, -127.755, -19.1, 0.29 ) }
    dend_35 { pt3dadd( -48.7936, -128.729, -19.3569, 0.29 ) }
    dend_35 { pt3dadd( -49.2919, -129.412, -19.5449, 0.29 ) }
    dend_35 { pt3dadd( -49.5116, -129.673, -19.6172, 0.44 ) }
    dend_35 { pt3dadd( -49.9196, -130.15, -19.7347, 0.44 ) }
    dend_35 { pt3dadd( -50.8613, -131.303, -19.9686, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( -51.2212, -131.774, -20.049, 0.66 ) }
    dend_35 { pt3dadd( -52.1016, -132.983, -20.245, 0.29 ) }
    dend_35 { pt3dadd( -52.5484, -133.594, -20.334, 0.29 ) }
    dend_35 { pt3dadd( -53.2142, -134.495, -20.4399, 0.59 ) }
    dend_35 { pt3dadd( -53.7708, -135.262, -20.502, 0.81 ) }
    dend_35 { pt3dadd( -54.4498, -136.227, -20.5627, 0.29 ) }
    dend_35 { pt3dadd( -55.0278, -137.104, -20.6338, 0.52 ) }
    dend_35 { pt3dadd( -55.6129, -138.108, -20.7515, 0.52 ) }
    dend_35 { pt3dadd( -56.0856, -139.144, -20.8924, 0.44 ) }
    dend_35 { pt3dadd( -56.5187, -140.446, -21.0306, 0.74 ) }
    dend_35 { pt3dadd( -56.7198, -141.408, -21.2966, 0.88 ) }
    dend_35 { pt3dadd( -56.8384, -142.521, -21.7241, 0.88 ) }
    dend_35 { pt3dadd( -56.8702, -143.493, -22.1314, 0.29 ) }
    dend_35 { pt3dadd( -56.8059, -144.973, -22.9413, 0.29 ) }
    dend_35 { pt3dadd( -56.7071, -146.201, -23.687, 0.29 ) }
    dend_35 { pt3dadd( -56.3352, -150.37, -26.3429, 0.59 ) }
    dend_35 { pt3dadd( -56.2648, -151.12, -26.8313, 0.81 ) }
    dend_35 { pt3dadd( -56.1702, -152.064, -27.4683, 0.81 ) }
    dend_35 { pt3dadd( -55.8252, -155.18, -29.6027, 0.29 ) }
    dend_35 { pt3dadd( -55.6683, -156.293, -30.3563, 0.74 ) }
    dend_35 { pt3dadd( -55.5561, -156.932, -30.7502, 0.74 ) }
    dend_35 { pt3dadd( -55.2232, -158.983, -31.7093, 0.22 ) }
    dend_35 { pt3dadd( -54.9931, -160.659, -32.4423, 1.11 ) }
    dend_35 { pt3dadd( -54.8758, -161.657, -32.8345, 1.11 ) }
    dend_35 { pt3dadd( -54.6881, -163.544, -33.3874, 0.22 ) }
    dend_35 { pt3dadd( -54.5245, -164.931, -33.7508, 0.59 ) }
    dend_35 { pt3dadd( -54.2337, -167.104, -34.2858, 0.22 ) }
    dend_35 { pt3dadd( -54.104, -168.263, -34.525, 0.37 ) }
    dend_35 { pt3dadd( -54.064, -168.806, -34.6404, 0.37 ) }
    dend_35 { pt3dadd( -54.0624, -169.878, -34.8777, 0.22 ) }
    dend_35 { pt3dadd( -54.1368, -171.222, -35.1814, 0.22 ) }
    dend_35 { pt3dadd( -54.3015, -173.409, -35.6956, 1.47 ) }
    dend_35 { pt3dadd( -54.4307, -174.703, -35.9948, 1.62 ) }
    dend_35 { pt3dadd( -54.6945, -176.297, -36.332, 1.25 ) }
    dend_35 { pt3dadd( -55.2441, -178.866, -36.8391, 0.15 ) }
    dend_35 { pt3dadd( -55.643, -180.354, -37.1121, 0.22 ) }
    dend_35 { pt3dadd( -55.8395, -180.998, -37.2005, 0.88 ) }
    dend_35 { pt3dadd( -56.0575, -181.717, -37.2849, 1.03 ) }
    dend_35 { pt3dadd( -56.5181, -183.35, -37.4892, 0.15 ) }
    dend_35 { pt3dadd( -56.8122, -184.509, -37.6437, 0.52 ) }
    dend_35 { pt3dadd( -57.0419, -185.425, -37.7858, 0.74 ) }
    dend_35 { pt3dadd( -58.2483, -190.137, -38.5647, 0.22 ) }
    dend_35 { pt3dadd( -58.6462, -191.677, -38.8291, 0.81 ) }
    dend_35 { pt3dadd( -58.817, -192.342, -38.9477, 0.81 ) }
    dend_35 { pt3dadd( -59.513, -195.158, -39.4631, 0.22 ) }
    dend_35 { pt3dadd( -59.7886, -196.283, -39.6584, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 46/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -18.8233, -28.8523, -0.468012, 0.59 ) }
    dend_32 { pt3dadd( -18.6794, -29.7575, -0.466315, 0.59 ) }
    dend_32 { pt3dadd( -18.5665, -30.2998, -0.460177, 0.59 ) }
    dend_32 { pt3dadd( -18.4099, -30.9619, -0.491112, 0.81 ) }
    dend_32 { pt3dadd( -18.2937, -31.4599, -0.523358, 0.81 ) }
    dend_32 { pt3dadd( -18.1171, -32.3037, -0.598697, 1.03 ) }
    dend_32 { pt3dadd( -18.0417, -32.7564, -0.647918, 1.03 ) }
    dend_32 { pt3dadd( -17.9811, -33.2897, -0.69842, 0.88 ) }
    dend_32 { pt3dadd( -17.9495, -34.2686, -0.74158, 0.88 ) }
    dend_32 { pt3dadd( -18.0291, -34.9074, -0.718348, 1.03 ) }
    dend_32 { pt3dadd( -18.2321, -35.4476, -0.635818, 1.03 ) }
    dend_32 { pt3dadd( -18.6571, -36.0994, -0.45376, 0.52 ) }
    dend_32 { pt3dadd( -19.4007, -36.992, -0.159417, 1.03 ) }
    dend_32 { pt3dadd( -19.7906, -37.4075, -0.00654259, 1.03 ) }
    dend_32 { pt3dadd( -20.2423, -37.883, 0.188197, 0.88 ) }
    dend_32 { pt3dadd( -20.6825, -38.3792, 0.37639, 0.81 ) }
    dend_32 { pt3dadd( -21.1708, -38.9884, 0.593293, 0.59 ) }
    dend_32 { pt3dadd( -21.5687, -39.5641, 0.767119, 0.59 ) }
    dend_32 { pt3dadd( -21.9658, -40.2694, 0.923746, 0.59 ) }
    dend_32 { pt3dadd( -22.3698, -41.1037, 1.10622, 0.88 ) }
    dend_32 { pt3dadd( -22.609, -41.6777, 1.24202, 0.88 ) }
    dend_32 { pt3dadd( -22.7656, -42.1038, 1.35299, 0.74 ) }
    dend_32 { pt3dadd( -22.9725, -42.6692, 1.51045, 0.96 ) }
    dend_32 { pt3dadd( -23.1625, -43.1365, 1.64026, 1.03 ) }
    dend_32 { pt3dadd( -23.3548, -43.5515, 1.75319, 1.03 ) }
    dend_32 { pt3dadd( -23.7238, -44.2555, 1.93261, 0.59 ) }
    dend_32 { pt3dadd( -24.0088, -44.7869, 2.0348, 0.37 ) }
    dend_32 { pt3dadd( -24.3249, -45.3682, 2.10637, 0.37 ) }
    dend_32 { pt3dadd( -24.6434, -45.9748, 2.15231, 0.81 ) }
    dend_32 { pt3dadd( -24.9624, -46.6384, 2.18238, 0.81 ) }
    dend_32 { pt3dadd( -25.1704, -47.1275, 2.19334, 0.81 ) }
    dend_32 { pt3dadd( -25.469, -47.9226, 2.21896, 0.96 ) }
    dend_32 { pt3dadd( -25.6934, -48.5846, 2.24994, 0.96 ) }
    dend_32 { pt3dadd( -25.8867, -49.2239, 2.30025, 0.66 ) }
    dend_32 { pt3dadd( -26.0725, -49.8688, 2.38226, 0.66 ) }
    dend_32 { pt3dadd( -26.2477, -50.3878, 2.47478, 0.59 ) }
    dend_32 { pt3dadd( -26.5287, -51.0178, 2.62776, 0.66 ) }
    dend_32 { pt3dadd( -26.7201, -51.3133, 2.7359, 0.88 ) }
    dend_32 { pt3dadd( -27.0274, -51.6771, 2.89187, 0.88 ) }
    dend_32 { pt3dadd( -27.3657, -52.0103, 3.04557, 0.74 ) }
    dend_32 { pt3dadd( -27.8531, -52.4603, 3.26544, 0.59 ) }
    dend_32 { pt3dadd( -28.1602, -52.7576, 3.40663, 0.59 ) }
    dend_32 { pt3dadd( -28.511, -53.1601, 3.57463, 0.59 ) }
    dend_32 { pt3dadd( -28.9479, -53.7779, 3.79362, 0.44 ) }
    dend_32 { pt3dadd( -29.2037, -54.2176, 3.91543, 0.66 ) }
    dend_32 { pt3dadd( -29.4648, -54.7503, 4.03406, 0.81 ) }
    dend_32 { pt3dadd( -29.6796, -55.2506, 4.13032, 0.88 ) }
    dend_32 { pt3dadd( -29.9592, -55.9329, 4.24185, 0.88 ) }
    dend_32 { pt3dadd( -30.2228, -56.5521, 4.31585, 0.88 ) }
    dend_32 { pt3dadd( -30.5767, -57.2914, 4.38025, 0.66 ) }
    dend_32 { pt3dadd( -30.8521, -57.7895, 4.405, 0.66 ) }
    dend_32 { pt3dadd( -31.11, -58.1939, 4.40934, 0.81 ) }
    dend_32 { pt3dadd( -31.4196, -58.6202, 4.40297, 0.96 ) }
    dend_32 { pt3dadd( -31.7786, -59.0365, 4.39993, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -32.1534, -59.4388, 4.41498, 0.88 ) }
    dend_32 { pt3dadd( -32.6752, -60.0074, 4.47853, 0.88 ) }
    dend_32 { pt3dadd( -33.0934, -60.4918, 4.57543, 1.03 ) }
    dend_32 { pt3dadd( -33.3067, -60.7745, 4.66002, 1.03 ) }
    dend_32 { pt3dadd( -33.7447, -61.4677, 4.91774, 0.59 ) }
    dend_32 { pt3dadd( -33.9809, -61.9187, 5.10345, 0.74 ) }
    dend_32 { pt3dadd( -34.2609, -62.5272, 5.35177, 0.88 ) }
    dend_32 { pt3dadd( -34.4115, -62.8936, 5.49138, 0.88 ) }
    dend_32 { pt3dadd( -34.6627, -63.5325, 5.70743, 0.74 ) }
    dend_32 { pt3dadd( -34.896, -64.158, 5.89684, 0.88 ) }
    dend_32 { pt3dadd( -35.0765, -64.6332, 6.00853, 0.88 ) }
    dend_32 { pt3dadd( -35.3799, -65.3074, 6.13261, 0.66 ) }
    dend_32 { pt3dadd( -35.633, -65.7938, 6.20296, 0.66 ) }
    dend_32 { pt3dadd( -35.8466, -66.1712, 6.25276, 0.96 ) }
    dend_32 { pt3dadd( -36.1904, -66.7355, 6.33173, 0.74 ) }
    dend_32 { pt3dadd( -36.6725, -67.4647, 6.44222, 0.74 ) }
    dend_32 { pt3dadd( -37.0131, -67.9537, 6.51634, 0.96 ) }
    dend_32 { pt3dadd( -37.3062, -68.3581, 6.57459, 0.96 ) }
    dend_32 { pt3dadd( -37.6611, -68.8177, 6.63549, 0.88 ) }
    dend_32 { pt3dadd( -38.0507, -69.2849, 6.68456, 0.81 ) }
    dend_32 { pt3dadd( -38.5862, -69.8596, 6.72312, 0.66 ) }
    dend_32 { pt3dadd( -39.1817, -70.442, 6.751, 0.59 ) }
    dend_32 { pt3dadd( -39.6138, -70.8317, 6.76312, 0.81 ) }
    dend_32 { pt3dadd( -40.009, -71.1821, 6.76932, 0.81 ) }
    dend_32 { pt3dadd( -40.5964, -71.6849, 6.76166, 0.66 ) }
    dend_32 { pt3dadd( -41.1162, -72.1027, 6.74279, 0.88 ) }
    dend_32 { pt3dadd( -41.561, -72.4139, 6.7195, 1.47 ) }
    dend_32 { pt3dadd( -41.8692, -72.582, 6.69571, 1.62 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -12.9123, -18.1422, 1.15792, 0.66 ) }
    dend_28 { pt3dadd( -14.3519, -17.9659, 1.19168, 0.66 ) }
    dend_28 { pt3dadd( -15.2917, -17.7842, 1.18823, 0.81 ) }
    dend_28 { pt3dadd( -16.3195, -17.5386, 1.16171, 1.11 ) }
    dend_28 { pt3dadd( -17.2761, -17.2796, 1.12573, 1.11 ) }
    dend_28 { pt3dadd( -18.0765, -17.0445, 1.09607, 1.11 ) }
    dend_28 { pt3dadd( -19.1611, -16.712, 1.04469, 1.03 ) }
    dend_28 { pt3dadd( -20.281, -16.3126, 0.94588, 1.18 ) }
    dend_28 { pt3dadd( -20.9097, -16.0581, 0.893457, 1.18 ) }
    dend_28 { pt3dadd( -21.5725, -15.7543, 0.855063, 1.18 ) }
    dend_28 { pt3dadd( -22.4, -15.3205, 0.827207, 1.11 ) }
    dend_28 { pt3dadd( -23.4257, -14.7172, 0.856212, 0.96 ) }
    dend_28 { pt3dadd( -24.3565, -14.0885, 0.934779, 0.96 ) }
    dend_28 { pt3dadd( -25.3497, -13.2865, 1.07228, 0.96 ) }
    dend_28 { pt3dadd( -26.1711, -12.4669, 1.2278, 0.88 ) }
    dend_28 { pt3dadd( -26.7972, -11.631, 1.41784, 0.88 ) }
    dend_28 { pt3dadd( -27.4423, -10.3822, 1.70817, 0.88 ) }
    dend_28 { pt3dadd( -27.7716, -9.40945, 1.92855, 0.81 ) }
    dend_28 { pt3dadd( -27.9937, -8.3412, 2.14336, 0.88 ) }
    dend_28 { pt3dadd( -28.1089, -7.43251, 2.29282, 0.88 ) }
    dend_28 { pt3dadd( -28.2326, -5.96521, 2.47127, 0.81 ) }
    dend_28 { pt3dadd( -28.3391, -4.59231, 2.57874, 0.88 ) }
    dend_28 { pt3dadd( -28.4597, -3.28662, 2.61712, 0.88 ) }
    dend_28 { pt3dadd( -28.6596, -1.68701, 2.64436, 0.96 ) }
    dend_28 { pt3dadd( -28.8239, -0.719572, 2.65903, 0.96 ) }
    dend_28 { pt3dadd( -29.0792, 0.464566, 2.67022, 1.11 ) }
    dend_28 { pt3dadd( -29.4041, 1.6599, 2.67762, 1.11 ) }
    dend_28 { pt3dadd( -29.8331, 2.96063, 2.7182, 1.03 ) }
    dend_28 { pt3dadd( -30.2201, 3.91485, 2.78365, 0.88 ) }
    dend_28 { pt3dadd( -30.795, 5.09111, 2.90117, 0.88 ) }
    dend_28 { pt3dadd( -31.3392, 6.05665, 3.07634, 1.03 ) }
    dend_28 { pt3dadd( -32.2726, 7.47151, 3.41161, 1.11 ) }
    dend_28 { pt3dadd( -32.8478, 8.19597, 3.6227, 1.11 ) }
    dend_28 { pt3dadd( -33.8602, 9.20739, 4.03594, 0.88 ) }
    dend_28 { pt3dadd( -34.4591, 9.67689, 4.29569, 1.03 ) }
    dend_28 { pt3dadd( -35.6069, 10.4178, 4.82942, 0.81 ) }
    dend_28 { pt3dadd( -36.4358, 10.9036, 5.25414, 0.66 ) }
    dend_28 { pt3dadd( -37.0188, 11.2456, 5.59633, 0.66 ) }
    dend_28 { pt3dadd( -38.1497, 12.022, 6.36057, 0.81 ) }
    dend_28 { pt3dadd( -38.7828, 12.5867, 6.80999, 0.81 ) }
    dend_28 { pt3dadd( -39.3111, 13.2169, 7.16512, 0.74 ) }
    dend_28 { pt3dadd( -39.6505, 13.7165, 7.30963, 0.74 ) }
    dend_28 { pt3dadd( -40.1143, 14.3623, 7.43926, 0.74 ) }
    dend_28 { pt3dadd( -40.6892, 15.0537, 7.46734, 0.74 ) }
    dend_28 { pt3dadd( -41.3819, 15.6959, 7.36698, 0.88 ) }
    dend_28 { pt3dadd( -42.295, 16.3303, 7.17309, 1.03 ) }
    dend_28 { pt3dadd( -43.3142, 16.862, 6.89612, 1.18 ) }
    dend_28 { pt3dadd( -44.6008, 17.3799, 6.44558, 0.81 ) }
    dend_28 { pt3dadd( -45.3518, 17.6175, 6.1344, 0.81 ) }
    dend_28 { pt3dadd( -46.5325, 17.9107, 5.53829, 0.81 ) }
    dend_28 { pt3dadd( -47.5559, 18.1478, 4.94061, 1.03 ) }
    dend_28 { pt3dadd( -48.5838, 18.424, 4.25669, 0.88 ) }
    dend_28 { pt3dadd( -50.0415, 18.9057, 3.21169, 0.96 ) }
    dend_28 { pt3dadd( -50.7349, 19.2079, 2.67643, 1.18 ) }
    dend_28 { pt3dadd( -52.0046, 19.9048, 1.70642, 1.4 ) }
    dend_28 { pt3dadd( -52.7267, 20.4179, 1.202, 1.18 ) }
    dend_28 { pt3dadd( -53.7018, 21.2265, 0.556705, 0.88 ) }
    dend_28 { pt3dadd( -54.3673, 21.8922, 0.174207, 0.88 ) }
    dend_28 { pt3dadd( -55.0831, 22.7601, -0.138806, 1.03 ) }
    dend_28 { pt3dadd( -55.541, 23.3956, -0.283705, 0.88 ) }
    dend_28 { pt3dadd( -56.3033, 24.6158, -0.386643, 1.47 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 89/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -12.9123, -18.1422, 1.15792, 1.4 ) }
    dend_27 { pt3dadd( -13.7026, -17.3834, 1.23194, 1.4 ) }
    dend_27 { pt3dadd( -14.4038, -16.7342, 1.28501, 1.25 ) }
    dend_27 { pt3dadd( -15.0251, -16.1598, 1.35029, 1.03 ) }
    dend_27 { pt3dadd( -15.6359, -15.5738, 1.39576, 1.03 ) }
    dend_27 { pt3dadd( -16.0744, -15.1277, 1.42701, 0.88 ) }
    dend_27 { pt3dadd( -16.4964, -14.6616, 1.48017, 0.88 ) }
    dend_27 { pt3dadd( -16.8614, -14.2077, 1.57427, 1.03 ) }
    dend_27 { pt3dadd( -17.171, -13.7066, 1.68862, 1.03 ) }
    dend_27 { pt3dadd( -17.4342, -13.1068, 1.83461, 0.74 ) }
    dend_27 { pt3dadd( -17.5949, -12.6276, 1.94439, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -17.8332, -11.6829, 2.13829, 0.88 ) }
    dend_27 { pt3dadd( -17.9999, -10.7781, 2.33051, 1.03 ) }
    dend_27 { pt3dadd( -18.1246, -9.86377, 2.52456, 1.03 ) }
    dend_27 { pt3dadd( -18.1689, -9.31944, 2.6239, 1.03 ) }
    dend_27 { pt3dadd( -18.1926, -8.58957, 2.77003, 0.74 ) }
    dend_27 { pt3dadd( -18.1797, -7.8104, 2.89645, 1.11 ) }
    dend_27 { pt3dadd( -18.1487, -7.17171, 2.99104, 0.96 ) }
    dend_27 { pt3dadd( -18.1265, -6.70662, 3.06451, 0.88 ) }
    dend_27 { pt3dadd( -18.0767, -5.82435, 3.22819, 0.81 ) }
    dend_27 { pt3dadd( -18.035, -4.84676, 3.40196, 0.74 ) }
    dend_27 { pt3dadd( -18.0081, -3.96891, 3.54007, 0.81 ) }
    dend_27 { pt3dadd( -18.0202, -3.04192, 3.66612, 1.03 ) }
    dend_27 { pt3dadd( -18.056, -2.1969, 3.74349, 1.03 ) }
    dend_27 { pt3dadd( -18.1066, -1.30157, 3.79573, 0.88 ) }
    dend_27 { pt3dadd( -18.1632, -0.511012, 3.81455, 0.88 ) }
    dend_27 { pt3dadd( -18.2152, 0.242295, 3.78918, 1.11 ) }
    dend_27 { pt3dadd( -18.2544, 0.786076, 3.74997, 1.11 ) }
    dend_27 { pt3dadd( -18.3109, 1.518, 3.66435, 0.74 ) }
    dend_27 { pt3dadd( -18.3579, 2.22478, 3.58417, 0.81 ) }
    dend_27 { pt3dadd( -18.4246, 3.14658, 3.47127, 0.81 ) }
    dend_27 { pt3dadd( -18.4664, 3.95214, 3.34254, 0.96 ) }
    dend_27 { pt3dadd( -18.4962, 4.74652, 3.19203, 0.66 ) }
    dend_27 { pt3dadd( -18.5066, 5.6175, 3.01111, 0.52 ) }
    dend_27 { pt3dadd( -18.5124, 6.40914, 2.84106, 0.74 ) }
    dend_27 { pt3dadd( -18.521, 6.8711, 2.74986, 0.74 ) }
    dend_27 { pt3dadd( -18.5582, 7.90533, 2.55686, 0.74 ) }
    dend_27 { pt3dadd( -18.6076, 8.7027, 2.41935, 0.74 ) }
    dend_27 { pt3dadd( -18.7026, 9.51469, 2.29454, 0.74 ) }
    dend_27 { pt3dadd( -18.8922, 10.4414, 2.16237, 0.66 ) }
    dend_27 { pt3dadd( -19.1762, 11.3494, 2.03808, 0.96 ) }
    dend_27 { pt3dadd( -19.3988, 11.9256, 1.9756, 0.96 ) }
    dend_27 { pt3dadd( -19.628, 12.4412, 1.94622, 0.96 ) }
    dend_27 { pt3dadd( -20.0939, 13.4404, 1.90099, 0.81 ) }
    dend_27 { pt3dadd( -20.463, 14.2402, 1.87013, 0.96 ) }
    dend_27 { pt3dadd( -20.7886, 15.0604, 1.84229, 1.11 ) }
    dend_27 { pt3dadd( -21.016, 15.7661, 1.83525, 0.96 ) }
    dend_27 { pt3dadd( -21.2365, 16.6253, 1.85485, 0.88 ) }
    dend_27 { pt3dadd( -21.3897, 17.4626, 1.89075, 0.88 ) }
    dend_27 { pt3dadd( -21.4663, 18.161, 1.93247, 0.88 ) }
    dend_27 { pt3dadd( -21.5337, 19.1596, 1.98419, 1.03 ) }
    dend_27 { pt3dadd( -21.5876, 20.1144, 2.01341, 0.74 ) }
    dend_27 { pt3dadd( -21.6209, 20.5214, 2.01216, 0.74 ) }
    dend_27 { pt3dadd( -21.7219, 21.2368, 1.98133, 0.88 ) }
    dend_27 { pt3dadd( -21.8196, 21.7022, 1.95456, 0.88 ) }
    dend_27 { pt3dadd( -22.059, 22.5282, 1.88924, 0.74 ) }
    dend_27 { pt3dadd( -22.3387, 23.2596, 1.8165, 0.66 ) }
    dend_27 { pt3dadd( -22.5633, 23.7297, 1.75825, 0.66 ) }
    dend_27 { pt3dadd( -23.1666, 24.7436, 1.63576, 1.03 ) }
    dend_27 { pt3dadd( -23.4535, 25.1645, 1.57629, 1.03 ) }
    dend_27 { pt3dadd( -23.8716, 25.7524, 1.48068, 0.81 ) }
    dend_27 { pt3dadd( -24.1756, 26.1938, 1.39749, 0.81 ) }
    dend_27 { pt3dadd( -24.5569, 26.7727, 1.24456, 0.52 ) }
    dend_27 { pt3dadd( -24.8182, 27.2038, 1.1024, 0.52 ) }
    dend_27 { pt3dadd( -25.1646, 27.8407, 0.854189, 0.74 ) }
    dend_27 { pt3dadd( -25.4519, 28.4511, 0.603606, 0.81 ) }
    dend_27 { pt3dadd( -25.7114, 29.1184, 0.333881, 0.81 ) }
    dend_27 { pt3dadd( -25.9284, 29.8011, 0.0793834, 0.88 ) }
    dend_27 { pt3dadd( -26.0764, 30.3537, -0.102535, 1.03 ) }
    dend_27 { pt3dadd( -26.2023, 30.8592, -0.249695, 1.03 ) }
    dend_27 { pt3dadd( -26.3944, 31.5954, -0.440306, 0.88 ) }
    dend_27 { pt3dadd( -26.6055, 32.3569, -0.64012, 0.74 ) }
    dend_27 { pt3dadd( -26.8646, 33.2368, -0.873799, 0.96 ) }
    dend_27 { pt3dadd( -27.0678, 33.8848, -1.04631, 1.03 ) }
    dend_27 { pt3dadd( -27.284, 34.4896, -1.22108, 1.03 ) }
    dend_27 { pt3dadd( -27.5592, 35.1436, -1.42371, 0.88 ) }
    dend_27 { pt3dadd( -27.9882, 35.9683, -1.69878, 0.96 ) }
    dend_27 { pt3dadd( -28.2839, 36.4145, -1.86926, 0.81 ) }
    dend_27 { pt3dadd( -28.5363, 36.7162, -1.99805, 0.96 ) }
    dend_27 { pt3dadd( -28.901, 37.0804, -2.1571, 1.18 ) }
    dend_27 { pt3dadd( -29.2186, 37.3616, -2.26449, 1.18 ) }
    dend_27 { pt3dadd( -29.5992, 37.6859, -2.36265, 1.11 ) }
    dend_27 { pt3dadd( -29.984, 38.0419, -2.44005, 1.25 ) }
    dend_27 { pt3dadd( -30.3625, 38.4685, -2.50824, 1.25 ) }
    dend_27 { pt3dadd( -30.7448, 39.0266, -2.57963, 1.03 ) }
    dend_27 { pt3dadd( -31.029, 39.5907, -2.6367, 0.88 ) }
    dend_27 { pt3dadd( -31.2594, 40.2725, -2.69006, 0.74 ) }
    dend_27 { pt3dadd( -31.3904, 40.9625, -2.73052, 0.74 ) }
    dend_27 { pt3dadd( -31.4411, 41.8804, -2.77169, 0.81 ) }
    dend_27 { pt3dadd( -31.4059, 42.5306, -2.81315, 0.81 ) }
    dend_27 { pt3dadd( -31.3182, 43.1614, -2.87992, 0.96 ) }
    dend_27 { pt3dadd( -31.2217, 43.7395, -2.97503, 0.96 ) }
    dend_27 { pt3dadd( -31.1421, 44.2153, -3.07202, 0.88 ) }
    dend_27 { pt3dadd( -31.0643, 44.8368, -3.20472, 0.88 ) }
    dend_27 { pt3dadd( -31.0126, 45.584, -3.36271, 0.81 ) }
    dend_27 { pt3dadd( -30.9949, 46.3075, -3.505, 0.74 ) }
    dend_27 { pt3dadd( -31.004, 47.2375, -3.66066, 0.88 ) }
    dend_27 { pt3dadd( -31.0223, 47.8433, -3.73618, 0.88 ) }
    dend_27 { pt3dadd( -31.0278, 48.5047, -3.79372, 1.03 ) }
    dend_27 { pt3dadd( -30.9945, 49.2165, -3.82618, 0.96 ) }
    dend_27 { pt3dadd( -30.8994, 49.8106, -3.81811, 0.88 ) }
    dend_27 { pt3dadd( -30.7439, 50.3006, -3.79837, 1.03 ) }
    dend_27 { pt3dadd( -30.437, 50.9386, -3.75712, 0.96 ) }
    dend_27 { pt3dadd( -30.14, 51.4662, -3.73049, 0.88 ) }
    dend_27 { pt3dadd( -29.8574, 51.9273, -3.71964, 0.88 ) }
    dend_27 { pt3dadd( -29.4661, 52.6061, -3.71264, 0.81 ) }
    dend_27 { pt3dadd( -29.1055, 53.331, -3.7138, 0.74 ) }
    dend_27 { pt3dadd( -28.7092, 54.2446, -3.7191, 0.81 ) }
    dend_27 { pt3dadd( -28.4506, 54.9332, -3.73136, 1.03 ) }
    dend_27 { pt3dadd( -28.3476, 55.2506, -3.73723, 1.03 ) }
    dend_27 { pt3dadd( -28.0631, 56.2077, -3.76033, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -27.8373, 57.0013, -3.78824, 0.88 ) }
    dend_27 { pt3dadd( -27.621, 57.7016, -3.81812, 0.88 ) }
    dend_27 { pt3dadd( -27.2984, 58.5672, -3.86924, 0.88 ) }
    dend_27 { pt3dadd( -27.0526, 59.0985, -3.89512, 0.88 ) }
    dend_27 { pt3dadd( -26.7693, 59.6054, -3.91199, 1.11 ) }
    dend_27 { pt3dadd( -26.4253, 60.1542, -3.92308, 1.11 ) }
    dend_27 { pt3dadd( -25.9766, 60.8657, -3.93542, 0.81 ) }
    dend_27 { pt3dadd( -25.5876, 61.5216, -3.94544, 0.96 ) }
    dend_27 { pt3dadd( -25.1284, 62.3418, -3.95062, 0.96 ) }
    dend_27 { pt3dadd( -24.7323, 63.0792, -3.98027, 0.88 ) }
    dend_27 { pt3dadd( -24.2306, 64.0667, -4.04495, 0.88 ) }
    dend_27 { pt3dadd( -23.9218, 64.7292, -4.11478, 1.03 ) }
    dend_27 { pt3dadd( -23.6501, 65.4239, -4.2158, 1.03 ) }
    dend_27 { pt3dadd( -23.3589, 66.4218, -4.39477, 0.88 ) }
    dend_27 { pt3dadd( -23.2132, 67.1426, -4.5433, 0.88 ) }
    dend_27 { pt3dadd( -23.1347, 67.6797, -4.66728, 0.74 ) }
    dend_27 { pt3dadd( -23.0645, 68.2865, -4.80991, 0.88 ) }
    dend_27 { pt3dadd( -22.9948, 69.1425, -4.99922, 0.81 ) }
    dend_27 { pt3dadd( -22.963, 70.214, -5.18981, 0.81 ) }
    dend_27 { pt3dadd( -22.9846, 71.2478, -5.31309, 0.88 ) }
    dend_27 { pt3dadd( -23.0156, 71.7255, -5.33863, 0.88 ) }
    dend_27 { pt3dadd( -23.1372, 72.8939, -5.3609, 0.81 ) }
    dend_27 { pt3dadd( -23.3021, 73.9689, -5.34898, 0.74 ) }
    dend_27 { pt3dadd( -23.5398, 75.0449, -5.30979, 0.88 ) }
    dend_27 { pt3dadd( -23.7702, 75.774, -5.26978, 0.96 ) }
    dend_27 { pt3dadd( -24.1816, 76.8292, -5.20142, 1.03 ) }
    dend_27 { pt3dadd( -24.5192, 77.6494, -5.12966, 0.88 ) }
    dend_27 { pt3dadd( -24.9237, 78.6169, -5.0387, 1.11 ) }
    dend_27 { pt3dadd( -25.1553, 79.2134, -4.9865, 1.25 ) }
    dend_27 { pt3dadd( -25.445, 80.1159, -4.92738, 0.81 ) }
    dend_27 { pt3dadd( -25.6729, 81.0535, -4.8768, 0.66 ) }
    dend_27 { pt3dadd( -25.9179, 82.4678, -4.79434, 0.66 ) }
    dend_27 { pt3dadd( -26.0145, 83.2065, -4.75709, 0.96 ) }
    dend_27 { pt3dadd( -26.0723, 83.7535, -4.74028, 0.96 ) }
    dend_27 { pt3dadd( -26.1415, 84.4287, -4.74901, 0.96 ) }
    dend_27 { pt3dadd( -26.2259, 85.0158, -4.79042, 0.81 ) }
    dend_27 { pt3dadd( -26.376, 85.5813, -4.87969, 0.59 ) }
    dend_27 { pt3dadd( -26.6209, 86.193, -5.03581, 0.66 ) }
    dend_27 { pt3dadd( -26.8285, 86.6273, -5.15611, 0.96 ) }
    dend_27 { pt3dadd( -27.0043, 86.9722, -5.25281, 0.96 ) }
    dend_27 { pt3dadd( -27.4713, 87.8834, -5.48685, 0.74 ) }
    dend_27 { pt3dadd( -27.7706, 88.5294, -5.61413, 0.66 ) }
    dend_27 { pt3dadd( -27.9489, 88.9742, -5.66173, 0.88 ) }
    dend_27 { pt3dadd( -28.1206, 89.4549, -5.67214, 0.88 ) }
    dend_27 { pt3dadd( -28.3336, 90.0495, -5.65965, 0.74 ) }
    dend_27 { pt3dadd( -28.5233, 90.5546, -5.61912, 0.74 ) }
    dend_27 { pt3dadd( -28.7993, 91.3268, -5.52425, 0.81 ) }
    dend_27 { pt3dadd( -29.0562, 92.0866, -5.42462, 0.66 ) }
    dend_27 { pt3dadd( -29.3335, 92.9411, -5.31839, 0.81 ) }
    dend_27 { pt3dadd( -29.6344, 93.8771, -5.20782, 0.96 ) }
    dend_27 { pt3dadd( -29.9082, 94.7256, -5.12474, 1.11 ) }
    dend_27 { pt3dadd( -30.1769, 95.5839, -5.06952, 0.81 ) }
    dend_27 { pt3dadd( -30.4194, 96.3704, -5.03795, 0.59 ) }
    dend_27 { pt3dadd( -30.6121, 96.9963, -5.02461, 0.81 ) }
    dend_27 { pt3dadd( -30.8847, 97.8657, -5.00567, 0.59 ) }
    dend_27 { pt3dadd( -31.128, 98.6383, -4.99343, 0.74 ) }
    dend_27 { pt3dadd( -31.3758, 99.3881, -4.99785, 1.03 ) }
    dend_27 { pt3dadd( -31.6399, 100.159, -5.01822, 1.03 ) }
    dend_27 { pt3dadd( -31.8856, 100.953, -5.07717, 0.74 ) }
    dend_27 { pt3dadd( -32.0477, 101.57, -5.15677, 0.74 ) }
    dend_27 { pt3dadd( -32.2495, 102.452, -5.32248, 0.74 ) }
    dend_27 { pt3dadd( -32.4342, 103.341, -5.49933, 0.59 ) }
    dend_27 { pt3dadd( -32.5405, 103.895, -5.60696, 0.59 ) }
    dend_27 { pt3dadd( -32.7317, 104.832, -5.78518, 0.66 ) }
    dend_27 { pt3dadd( -32.8871, 105.444, -5.89274, 0.52 ) }
    dend_27 { pt3dadd( -33.1142, 106.123, -5.99944, 0.74 ) }
    dend_27 { pt3dadd( -33.403, 106.809, -6.08619, 0.96 ) }
    dend_27 { pt3dadd( -33.7281, 107.477, -6.13201, 0.74 ) }
    dend_27 { pt3dadd( -34.2696, 108.436, -6.16777, 0.74 ) }
    dend_27 { pt3dadd( -34.7156, 109.129, -6.19618, 0.88 ) }
    dend_27 { pt3dadd( -35.0696, 109.633, -6.24701, 0.88 ) }
    dend_27 { pt3dadd( -35.575, 110.309, -6.36444, 0.74 ) }
    dend_27 { pt3dadd( -36.2282, 111.129, -6.56881, 0.74 ) }
    dend_27 { pt3dadd( -36.8442, 111.881, -6.78301, 0.81 ) }
    dend_27 { pt3dadd( -37.3874, 112.577, -6.98453, 0.96 ) }
    dend_27 { pt3dadd( -37.9007, 113.301, -7.18928, 0.88 ) }
    dend_27 { pt3dadd( -38.2992, 113.943, -7.3613, 0.88 ) }
    dend_27 { pt3dadd( -38.782, 114.889, -7.59384, 0.81 ) }
    dend_27 { pt3dadd( -39.0588, 115.588, -7.75873, 0.81 ) }
    dend_27 { pt3dadd( -39.3598, 116.597, -7.9779, 0.96 ) }
    dend_27 { pt3dadd( -39.5952, 117.516, -8.1647, 1.11 ) }
    dend_27 { pt3dadd( -39.8147, 118.398, -8.34019, 0.81 ) }
    dend_27 { pt3dadd( -40.0513, 119.299, -8.52757, 0.81 ) }
    dend_27 { pt3dadd( -40.2425, 119.941, -8.669, 0.81 ) }
    dend_27 { pt3dadd( -40.543, 120.751, -8.85761, 0.81 ) }
    dend_27 { pt3dadd( -41.1566, 122.031, -9.17058, 0.96 ) }
    dend_27 { pt3dadd( -41.6065, 122.759, -9.35495, 0.96 ) }
    dend_27 { pt3dadd( -42.1344, 123.455, -9.5326, 1.03 ) }
    dend_27 { pt3dadd( -42.6617, 124.064, -9.68192, 1.11 ) }
    dend_27 { pt3dadd( -43.2458, 124.702, -9.82155, 0.88 ) }
    dend_27 { pt3dadd( -43.8182, 125.316, -9.94448, 0.66 ) }
    dend_27 { pt3dadd( -44.4842, 126.04, -10.0867, 0.66 ) }
    dend_27 { pt3dadd( -45.2124, 126.905, -10.2248, 0.74 ) }
    dend_27 { pt3dadd( -45.6969, 127.567, -10.2998, 0.88 ) }
    dend_27 { pt3dadd( -46.087, 128.182, -10.3441, 0.81 ) }
    dend_27 { pt3dadd( -46.388, 128.728, -10.3647, 0.81 ) }
    dend_27 { pt3dadd( -46.6132, 129.197, -10.3773, 0.81 ) }
    dend_27 { pt3dadd( -47.0694, 130.22, -10.4078, 0.59 ) }
    dend_27 { pt3dadd( -47.4066, 130.942, -10.4432, 0.74 ) }
    dend_27 { pt3dadd( -47.6903, 131.47, -10.4972, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( -47.9791, 131.913, -10.5788, 0.74 ) }
    dend_27 { pt3dadd( -48.432, 132.47, -10.738, 0.88 ) }
    dend_27 { pt3dadd( -48.8472, 132.877, -10.9074, 0.88 ) }
    dend_27 { pt3dadd( -49.4138, 133.32, -11.1658, 0.74 ) }
    dend_27 { pt3dadd( -50.055, 133.772, -11.4787, 0.88 ) }
    dend_27 { pt3dadd( -50.5985, 134.166, -11.7589, 0.66 ) }
    dend_27 { pt3dadd( -51.0715, 134.525, -12.0033, 0.66 ) }
    dend_27 { pt3dadd( -51.4415, 134.82, -12.1797, 0.66 ) }
    dend_27 { pt3dadd( -51.8679, 135.175, -12.361, 0.59 ) }
    dend_27 { pt3dadd( -52.309, 135.569, -12.5138, 0.44 ) }
    dend_27 { pt3dadd( -52.9347, 136.18, -12.6664, 0.88 ) }
    dend_27 { pt3dadd( -53.4451, 136.756, -12.7667, 1.03 ) }
    dend_27 { pt3dadd( -53.9169, 137.382, -12.8475, 0.74 ) }
    dend_27 { pt3dadd( -54.3813, 138.084, -12.92, 0.74 ) }
    dend_27 { pt3dadd( -54.7998, 138.766, -12.9844, 0.74 ) }
    dend_27 { pt3dadd( -55.1526, 139.327, -13.0375, 0.74 ) }
    dend_27 { pt3dadd( -55.6095, 140.064, -13.1235, 0.44 ) }
    dend_27 { pt3dadd( -56.0145, 140.751, -13.2089, 0.66 ) }
    dend_27 { pt3dadd( -56.5787, 141.743, -13.3389, 0.81 ) }
    dend_27 { pt3dadd( -57.0546, 142.595, -13.4505, 0.81 ) }
    dend_27 { pt3dadd( -57.5716, 143.5, -13.5707, 0.66 ) }
    dend_27 { pt3dadd( -58.043, 144.315, -13.6696, 0.66 ) }
    dend_27 { pt3dadd( -58.538, 145.123, -13.7382, 0.66 ) }
    dend_27 { pt3dadd( -58.9368, 145.739, -13.7998, 0.74 ) }
    dend_27 { pt3dadd( -59.4024, 146.42, -13.8973, 0.74 ) }
    dend_27 { pt3dadd( -59.9056, 147.121, -14.0383, 0.59 ) }
    dend_27 { pt3dadd( -60.3141, 147.662, -14.1944, 0.81 ) }
    dend_27 { pt3dadd( -60.8211, 148.275, -14.4334, 0.59 ) }
    dend_27 { pt3dadd( -61.3144, 148.856, -14.724, 0.74 ) }
    dend_27 { pt3dadd( -61.7232, 149.39, -15.0081, 0.81 ) }
    dend_27 { pt3dadd( -61.9275, 149.697, -15.1745, 0.81 ) }
    dend_27 { pt3dadd( -62.2825, 150.32, -15.4594, 0.81 ) }
    dend_27 { pt3dadd( -62.5141, 150.774, -15.6222, 0.81 ) }
    dend_27 { pt3dadd( -62.7929, 151.372, -15.7647, 0.59 ) }
    dend_27 { pt3dadd( -63.1708, 152.175, -15.858, 0.59 ) }
    dend_27 { pt3dadd( -63.5823, 152.964, -15.8954, 0.66 ) }
    dend_27 { pt3dadd( -64.0354, 153.701, -15.8699, 0.66 ) }
    dend_27 { pt3dadd( -64.5328, 154.348, -15.7652, 0.59 ) }
    dend_27 { pt3dadd( -65.1754, 155.042, -15.5652, 0.81 ) }
    dend_27 { pt3dadd( -65.7361, 155.584, -15.3728, 0.81 ) }
    dend_27 { pt3dadd( -66.5441, 156.307, -15.0845, 0.52 ) }
    dend_27 { pt3dadd( -67.238, 156.926, -14.8481, 0.52 ) }
    dend_27 { pt3dadd( -68.1752, 157.799, -14.6417, 0.74 ) }
    dend_27 { pt3dadd( -68.6727, 158.305, -14.5983, 0.74 ) }
    dend_27 { pt3dadd( -69.2074, 158.886, -14.642, 1.25 ) }
    dend_27 { pt3dadd( -69.6226, 159.36, -14.755, 1.25 ) }
    dend_27 { pt3dadd( -70.1528, 159.958, -15.0271, 0.96 ) }
    dend_27 { pt3dadd( -70.8927, 160.744, -15.5406, 0.81 ) }
    dend_27 { pt3dadd( -71.366, 161.174, -15.9029, 0.74 ) }
    dend_27 { pt3dadd( -71.9169, 161.551, -16.2817, 0.52 ) }
    dend_27 { pt3dadd( -72.3796, 161.769, -16.5437, 0.52 ) }
    dend_27 { pt3dadd( -73.418, 162.07, -17.0521, 0.44 ) }
    dend_27 { pt3dadd( -74.2411, 162.173, -17.3845, 0.52 ) }
    dend_27 { pt3dadd( -75.0416, 162.141, -17.6356, 0.66 ) }
    dend_27 { pt3dadd( -75.8305, 161.999, -17.8407, 0.66 ) }
    dend_27 { pt3dadd( -76.5033, 161.805, -17.997, 0.66 ) }
    dend_27 { pt3dadd( -77.0265, 161.612, -18.0864, 0.66 ) }
    dend_27 { pt3dadd( -77.4758, 161.406, -18.1438, 0.52 ) }
    dend_27 { pt3dadd( -78.2192, 161.029, -18.2463, 0.44 ) }
    dend_27 { pt3dadd( -78.8207, 160.714, -18.3423, 0.37 ) }
    dend_27 { pt3dadd( -79.6311, 160.268, -18.4763, 0.37 ) }
    dend_27 { pt3dadd( -80.2557, 159.9, -18.5832, 0.37 ) }
    dend_27 { pt3dadd( -81.0708, 159.362, -18.7264, 0.74 ) }
    dend_27 { pt3dadd( -81.6136, 158.951, -18.8256, 0.74 ) }
    dend_27 { pt3dadd( -82.1879, 158.446, -18.9389, 0.74 ) }
    dend_27 { pt3dadd( -82.702, 157.933, -19.0358, 0.44 ) }
    dend_27 { pt3dadd( -83.1477, 157.46, -19.111, 0.44 ) }
    dend_27 { pt3dadd( -83.5021, 157.105, -19.1424, 0.66 ) }
    dend_27 { pt3dadd( -84.1154, 156.541, -19.1015, 0.66 ) }
    dend_27 { pt3dadd( -84.6513, 156.06, -19.0359, 0.52 ) }
    dend_27 { pt3dadd( -85.1384, 155.608, -18.9881, 0.52 ) }
    dend_27 { pt3dadd( -85.5645, 155.166, -18.9633, 0.52 ) }
    dend_27 { pt3dadd( -86.0304, 154.585, -18.9456, 0.66 ) }
    dend_27 { pt3dadd( -86.5506, 153.75, -18.9448, 0.59 ) }
    dend_27 { pt3dadd( -86.9204, 152.935, -18.9693, 0.37 ) }
    dend_27 { pt3dadd( -87.1975, 152.163, -19.008, 0.37 ) }
    dend_27 { pt3dadd( -87.4168, 151.425, -19.0815, 0.29 ) }
    dend_27 { pt3dadd( -87.5694, 150.829, -19.1598, 0.29 ) }
    dend_27 { pt3dadd( -87.7777, 149.966, -19.3248, 0.44 ) }
    dend_27 { pt3dadd( -87.947, 149.372, -19.4745, 0.44 ) }
    dend_27 { pt3dadd( -88.1882, 148.711, -19.6226, 0.66 ) }
    dend_27 { pt3dadd( -88.4914, 148.084, -19.7569, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 82/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -62.714, 97.4706, 20.5687, 0.66 ) }
    dend_22 { pt3dadd( -61.5273, 98.24, 22.3423, 0.66 ) }
    dend_22 { pt3dadd( -60.8882, 98.7324, 23.2297, 0.66 ) }
    dend_22 { pt3dadd( -59.4166, 100.109, 25.2577, 0.66 ) }
    dend_22 { pt3dadd( -58.8299, 100.765, 26.116, 0.66 ) }
    dend_22 { pt3dadd( -58.1347, 101.698, 27.2128, 0.44 ) }
    dend_22 { pt3dadd( -57.8651, 102.152, 27.6851, 0.44 ) }
    dend_22 { pt3dadd( -57.5017, 102.761, 28.2122, 0.74 ) }
    dend_22 { pt3dadd( -57.2785, 103.313, 28.5864, 0.74 ) }
    dend_22 { pt3dadd( -57.1573, 104.233, 28.9553, 0.66 ) }
    dend_22 { pt3dadd( -57.1114, 104.845, 29.1869, 0.44 ) }
    dend_22 { pt3dadd( -57.0309, 105.683, 29.4934, 0.37 ) }
    dend_22 { pt3dadd( -56.8929, 106.266, 29.7509, 0.37 ) }
    dend_22 { pt3dadd( -56.5276, 106.994, 30.206, 0.81 ) }
    dend_22 { pt3dadd( -56.2906, 107.369, 30.4318, 0.81 ) }
    dend_22 { pt3dadd( -55.7857, 108.091, 30.8174, 0.44 ) }
    dend_22 { pt3dadd( -55.3604, 108.747, 31.1356, 0.44 ) }
    dend_22 { pt3dadd( -55.046, 109.396, 31.399, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( -54.6984, 111.094, 31.862, 0.52 ) }
    dend_22 { pt3dadd( -54.7376, 112.616, 32.1186, 0.81 ) }
    dend_22 { pt3dadd( -54.8511, 113.224, 32.1808, 0.81 ) }
    dend_22 { pt3dadd( -55.2739, 114.661, 32.2554, 0.52 ) }
    dend_22 { pt3dadd( -55.7131, 116.059, 32.2719, 0.52 ) }
    dend_22 { pt3dadd( -56.1753, 117.537, 32.2644, 0.52 ) }
    dend_22 { pt3dadd( -56.4261, 118.398, 32.2308, 0.81 ) }
    dend_22 { pt3dadd( -56.656, 119.395, 32.2411, 0.81 ) }
    dend_22 { pt3dadd( -56.8813, 120.766, 32.2721, 0.44 ) }
    dend_22 { pt3dadd( -56.9809, 122.093, 32.3066, 0.44 ) }
    dend_22 { pt3dadd( -56.9699, 122.884, 32.3447, 0.44 ) }
    dend_22 { pt3dadd( -56.8801, 124.164, 32.4312, 0.44 ) }
    dend_22 { pt3dadd( -56.7788, 125.195, 32.5324, 0.74 ) }
    dend_22 { pt3dadd( -56.7169, 125.785, 32.6096, 0.74 ) }
    dend_22 { pt3dadd( -56.6657, 126.475, 32.7205, 0.44 ) }
    dend_22 { pt3dadd( -56.6536, 127.377, 32.8728, 0.29 ) }
    dend_22 { pt3dadd( -56.6572, 128.307, 33.0359, 0.88 ) }
    dend_22 { pt3dadd( -56.6583, 129.231, 33.2268, 0.88 ) }
    dend_22 { pt3dadd( -56.6575, 129.882, 33.3425, 0.88 ) }
    dend_22 { pt3dadd( -56.6524, 130.602, 33.4709, 0.66 ) }
    dend_22 { pt3dadd( -56.649, 131.743, 33.6535, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -62.714, 97.4706, 20.5687, 0.52 ) }
    dend_21 { pt3dadd( -63.8105, 97.8562, 21.1043, 0.52 ) }
    dend_21 { pt3dadd( -65.0163, 98.454, 21.6635, 0.52 ) }
    dend_21 { pt3dadd( -66.0392, 99.0951, 22.1209, 0.66 ) }
    dend_21 { pt3dadd( -67.3494, 100.102, 22.6829, 0.81 ) }
    dend_21 { pt3dadd( -67.9011, 100.604, 22.9092, 0.81 ) }
    dend_21 { pt3dadd( -68.9568, 101.714, 23.3231, 0.66 ) }
    dend_21 { pt3dadd( -69.757, 102.788, 23.6949, 0.88 ) }
    dend_21 { pt3dadd( -70.2009, 103.498, 23.8952, 0.88 ) }
    dend_21 { pt3dadd( -70.7344, 104.436, 24.0884, 0.66 ) }
    dend_21 { pt3dadd( -71.1982, 105.329, 24.251, 0.66 ) }
    dend_21 { pt3dadd( -71.6359, 106.23, 24.4371, 0.66 ) }
    dend_21 { pt3dadd( -72.2269, 107.566, 24.7548, 0.66 ) }
    dend_21 { pt3dadd( -72.5447, 108.372, 24.9826, 0.59 ) }
    dend_21 { pt3dadd( -72.9723, 109.578, 25.4423, 0.52 ) }
    dend_21 { pt3dadd( -73.2868, 110.566, 25.9432, 0.52 ) }
    dend_21 { pt3dadd( -73.5055, 111.314, 26.3943, 0.44 ) }
    dend_21 { pt3dadd( -73.802, 112.365, 27.1061, 0.44 ) }
    dend_21 { pt3dadd( -74.0231, 113.217, 27.7108, 0.44 ) }
    dend_21 { pt3dadd( -74.3571, 114.601, 28.7227, 0.59 ) }
    dend_21 { pt3dadd( -74.629, 115.747, 29.526, 0.74 ) }
    dend_21 { pt3dadd( -74.7998, 116.405, 29.9425, 0.59 ) }
    dend_21 { pt3dadd( -75.1148, 117.479, 30.5471, 0.81 ) }
    dend_21 { pt3dadd( -75.2885, 117.961, 30.7694, 0.81 ) }
    dend_21 { pt3dadd( -75.6814, 118.871, 31.0407, 0.81 ) }
    dend_21 { pt3dadd( -76.2578, 119.971, 31.234, 0.37 ) }
    dend_21 { pt3dadd( -76.6683, 120.647, 31.3181, 0.37 ) }
    dend_21 { pt3dadd( -77.2144, 121.481, 31.382, 0.37 ) }
    dend_21 { pt3dadd( -77.8436, 122.362, 31.4189, 0.37 ) }
    dend_21 { pt3dadd( -78.4698, 123.159, 31.4205, 0.37 ) }
    dend_21 { pt3dadd( -79.5976, 124.378, 31.3991, 0.96 ) }
    dend_21 { pt3dadd( -80.2229, 124.957, 31.4156, 1.11 ) }
    dend_21 { pt3dadd( -81.3783, 125.946, 31.4513, 0.59 ) }
    dend_21 { pt3dadd( -82.2187, 126.637, 31.4799, 0.52 ) }
    dend_21 { pt3dadd( -83.1019, 127.369, 31.5086, 0.52 ) }
    dend_21 { pt3dadd( -84.3345, 128.433, 31.542, 0.66 ) }
    dend_21 { pt3dadd( -85.419, 129.403, 31.5607, 1.25 ) }
    dend_21 { pt3dadd( -85.915, 129.885, 31.585, 1.4 ) }
    dend_21 { pt3dadd( -87.1236, 131.18, 31.6895, 0.52 ) }
    dend_21 { pt3dadd( -87.8653, 132.077, 31.7588, 0.52 ) }
    dend_21 { pt3dadd( -89.0443, 133.671, 31.8736, 0.52 ) }
    dend_21 { pt3dadd( -89.6919, 134.649, 31.9114, 0.52 ) }
    dend_21 { pt3dadd( -90.4136, 135.806, 31.9198, 0.52 ) }
    dend_21 { pt3dadd( -91.1914, 137.106, 31.9664, 0.66 ) }
    dend_21 { pt3dadd( -91.6877, 137.995, 32.0211, 0.74 ) }
    dend_21 { pt3dadd( -92.3802, 139.275, 32.13, 0.88 ) }
    dend_21 { pt3dadd( -92.968, 140.386, 32.252, 0.37 ) }
    dend_21 { pt3dadd( -93.4925, 141.419, 32.356, 0.29 ) }
    dend_21 { pt3dadd( -94.0206, 142.464, 32.4527, 0.37 ) }
    dend_21 { pt3dadd( -94.439, 143.333, 32.5228, 0.52 ) }
    dend_21 { pt3dadd( -94.6874, 143.837, 32.5414, 0.74 ) }
    dend_21 { pt3dadd( -95.098, 144.606, 32.5935, 0.74 ) }
    dend_21 { pt3dadd( -95.7296, 145.566, 32.6792, 0.44 ) }
    dend_21 { pt3dadd( -96.3264, 146.289, 32.75, 0.44 ) }
    dend_21 { pt3dadd( -97.0232, 147.019, 32.8183, 0.29 ) }
    dend_21 { pt3dadd( -97.6975, 147.688, 32.9388, 0.29 ) }
    dend_21 { pt3dadd( -99.2584, 149.266, 33.3253, 0.37 ) }
    dend_21 { pt3dadd( -100.114, 150.19, 33.6056, 0.37 ) }
    dend_21 { pt3dadd( -101.014, 151.267, 33.975, 0.37 ) }
    dend_21 { pt3dadd( -101.354, 151.724, 34.122, 0.37 ) }
    dend_21 { pt3dadd( -101.999, 152.651, 34.3998, 0.29 ) }
    dend_21 { pt3dadd( -102.39, 153.218, 34.5474, 0.29 ) }
    dend_21 { pt3dadd( -102.823, 153.819, 34.647, 0.29 ) }
    dend_21 { pt3dadd( -103.586, 154.812, 34.8696, 0.29 ) }
    dend_21 { pt3dadd( -104.385, 155.726, 35.1151, 0.37 ) }
    dend_21 { pt3dadd( -105.074, 156.394, 35.316, 0.37 ) }
    dend_21 { pt3dadd( -106.093, 157.209, 35.5775, 0.37 ) }
    dend_21 { pt3dadd( -107.026, 157.833, 35.8401, 0.29 ) }
    dend_21 { pt3dadd( -108.242, 158.559, 36.2232, 0.29 ) }
    dend_21 { pt3dadd( -108.838, 158.885, 36.4565, 0.29 ) }
    dend_21 { pt3dadd( -109.829, 159.414, 36.9548, 0.88 ) }
    dend_21 { pt3dadd( -110.011, 158.701, 37.2052, 1.18 ) }
    dend_21 { pt3dadd( -110.125, 158.136, 37.3833, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.1043, 24.2577, 13.9182, 0.66 ) }
    dend_17 { pt3dadd( -15.0923, 22.9557, 14.7004, 0.66 ) }
    dend_17 { pt3dadd( -15.7711, 22.175, 15.2295, 0.66 ) }
    dend_17 { pt3dadd( -16.224, 21.7225, 15.5538, 0.88 ) }
    dend_17 { pt3dadd( -16.9742, 21.1008, 15.9985, 0.74 ) }
    dend_17 { pt3dadd( -17.5415, 20.7114, 16.2956, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_17 { pt3dadd( -18.2696, 20.2948, 16.6424, 1.18 ) }
    dend_17 { pt3dadd( -19.1408, 19.9915, 17.035, 1.18 ) }
    dend_17 { pt3dadd( -19.7292, 19.8902, 17.2356, 1.18 ) }
    dend_17 { pt3dadd( -21.0361, 19.8461, 17.5681, 0.66 ) }
    dend_17 { pt3dadd( -21.8261, 19.88, 17.7365, 0.59 ) }
    dend_17 { pt3dadd( -22.3812, 19.9127, 17.8489, 0.59 ) }
    dend_17 { pt3dadd( -23.4027, 19.9329, 18.0242, 0.52 ) }
    dend_17 { pt3dadd( -24.1157, 19.8891, 18.1425, 0.52 ) }
    dend_17 { pt3dadd( -24.9758, 19.7956, 18.3203, 0.52 ) }
    dend_17 { pt3dadd( -26.2872, 19.6543, 18.6292, 0.52 ) }
    dend_17 { pt3dadd( -27.3, 19.5596, 18.8752, 0.74 ) }
    dend_17 { pt3dadd( -28.4386, 19.5027, 19.1585, 0.44 ) }
    dend_17 { pt3dadd( -29.5537, 19.5264, 19.4363, 0.44 ) }
    dend_17 { pt3dadd( -30.9249, 19.6193, 19.7803, 0.66 ) }
    dend_17 { pt3dadd( -31.8261, 19.7587, 19.9792, 0.81 ) }
    dend_17 { pt3dadd( -32.6015, 19.9607, 20.0952, 0.96 ) }
    dend_17 { pt3dadd( -33.0842, 20.1166, 20.1457, 0.96 ) }
    dend_17 { pt3dadd( -33.6955, 20.3291, 20.1667, 0.59 ) }
    dend_17 { pt3dadd( -34.2286, 20.4881, 20.138, 0.44 ) }
    dend_17 { pt3dadd( -34.9211, 20.5998, 20.1073, 0.44 ) }
    dend_17 { pt3dadd( -35.8597, 20.7121, 20.1433, 0.29 ) }
    dend_17 { pt3dadd( -36.5017, 20.7965, 20.2177, 0.29 ) }
    dend_17 { pt3dadd( -37.2612, 20.9035, 20.3565, 0.59 ) }
    dend_17 { pt3dadd( -37.7584, 20.9749, 20.509, 0.59 ) }
    dend_17 { pt3dadd( -39.0829, 21.0978, 21.1617, 0.74 ) }
    dend_17 { pt3dadd( -39.8878, 21.1969, 21.6748, 0.59 ) }
    dend_17 { pt3dadd( -40.5784, 21.3079, 22.2108, 0.59 ) }
    dend_17 { pt3dadd( -41.1649, 21.4144, 22.7232, 0.66 ) }
    dend_17 { pt3dadd( -41.9629, 21.5851, 23.4582, 0.66 ) }
    dend_17 { pt3dadd( -43.1431, 21.8735, 24.5535, 0.96 ) }
    dend_17 { pt3dadd( -44.0881, 22.0875, 25.3857, 0.52 ) }
    dend_17 { pt3dadd( -44.6759, 22.1681, 25.9078, 0.52 ) }
    dend_17 { pt3dadd( -45.1849, 22.2168, 26.3529, 0.59 ) }
    dend_17 { pt3dadd( -46.0709, 22.3141, 27.0673, 0.37 ) }
    dend_17 { pt3dadd( -46.6161, 22.3448, 27.4227, 0.37 ) }
    dend_17 { pt3dadd( -47.4646, 22.3019, 27.8821, 0.37 ) }
    dend_17 { pt3dadd( -48.5397, 22.1169, 28.4215, 0.59 ) }
    dend_17 { pt3dadd( -49.0647, 22.022, 28.6508, 0.59 ) }
    dend_17 { pt3dadd( -49.5153, 21.9496, 28.8238, 0.59 ) }
    dend_17 { pt3dadd( -50.6253, 21.8199, 29.1707, 0.29 ) }
    dend_17 { pt3dadd( -51.4257, 21.7806, 29.3571, 0.29 ) }
    dend_17 { pt3dadd( -51.9749, 21.7962, 29.4501, 0.59 ) }
    dend_17 { pt3dadd( -52.8619, 21.8645, 29.5602, 0.59 ) }
    dend_17 { pt3dadd( -53.5609, 21.9089, 29.6417, 0.52 ) }
    dend_17 { pt3dadd( -54.4993, 21.9345, 29.7586, 0.52 ) }
    dend_17 { pt3dadd( -55.4096, 21.917, 29.8929, 0.52 ) }
    dend_17 { pt3dadd( -56.0931, 21.8831, 29.9858, 0.52 ) }
    dend_17 { pt3dadd( -57.1211, 21.7617, 30.1226, 0.74 ) }
    dend_17 { pt3dadd( -57.8171, 21.6205, 30.2289, 0.88 ) }
    dend_17 { pt3dadd( -58.3219, 21.4939, 30.3197, 0.88 ) }
    dend_17 { pt3dadd( -59.1851, 21.2497, 30.523, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.1043, 24.2577, 13.9182, 1.18 ) }
    dend_12 { pt3dadd( -13.1845, 25.8196, 14.0549, 1.18 ) }
    dend_12 { pt3dadd( -12.2756, 27.2347, 14.166, 1.18 ) }
    dend_12 { pt3dadd( -11.3315, 28.6086, 14.2607, 1.18 ) }
    dend_12 { pt3dadd( -10.2202, 30.1812, 14.4289, 1.18 ) }
    dend_12 { pt3dadd( -9.1871, 31.6789, 14.6166, 1.03 ) }
    dend_12 { pt3dadd( -8.35384, 32.9816, 14.7869, 1.25 ) }
    dend_12 { pt3dadd( -7.85996, 33.7844, 14.9173, 1.25 ) }
    dend_12 { pt3dadd( -7.06463, 35.3492, 15.0112, 0.96 ) }
    dend_12 { pt3dadd( -6.44638, 37.0366, 14.9489, 1.55 ) }
    dend_12 { pt3dadd( -6.20974, 38.0373, 14.8093, 1.55 ) }
    dend_12 { pt3dadd( -6.01886, 39.8133, 14.4502, 1.25 ) }
    dend_12 { pt3dadd( -6.03914, 41.6122, 14.023, 1.11 ) }
    dend_12 { pt3dadd( -6.59898, 45.8489, 12.9109, 0.81 ) }
    dend_12 { pt3dadd( -6.93824, 47.0819, 12.5451, 1.03 ) }
    dend_12 { pt3dadd( -7.45306, 48.2377, 12.1459, 1.03 ) }
    dend_12 { pt3dadd( -8.32101, 49.5797, 11.7784, 0.88 ) }
    dend_12 { pt3dadd( -9.33617, 50.6167, 11.6841, 0.88 ) }
    dend_12 { pt3dadd( -10.584, 51.5481, 12.0861, 0.96 ) }
    dend_12 { pt3dadd( -11.4558, 52.1725, 12.6556, 0.96 ) }
    dend_12 { pt3dadd( -12.769, 53.0188, 13.6049, 1.03 ) }
    dend_12 { pt3dadd( -14.8145, 54.2673, 15.3363, 1.25 ) }
    dend_12 { pt3dadd( -15.746, 54.8508, 16.3019, 1.18 ) }
    dend_12 { pt3dadd( -17.7372, 56.3054, 18.9262, 1.25 ) }
    dend_12 { pt3dadd( -18.5447, 57.0687, 20.3943, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -49.1166, 271.731, -26.0822, 0.22 ) }
    dend_7 { pt3dadd( -49.9033, 272.09, -25.9659, 0.22 ) }
    dend_7 { pt3dadd( -50.6663, 272.439, -25.8532, 0.44 ) }
    dend_7 { pt3dadd( -51.3425, 272.748, -25.7533, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -49.1166, 271.731, -26.0822, 0.22 ) }
    dend_6 { pt3dadd( -50.522, 271.526, -26.6909, 0.22 ) }
    dend_6 { pt3dadd( -51.7832, 271.343, -27.2371, 0.22 ) }
    dend_6 { pt3dadd( -52.7699, 271.199, -27.6645, 0.22 ) }
    dend_6 { pt3dadd( -53.2335, 271.132, -27.8652, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.86709, 177.213, 3.5662, 0.37 ) }
    dend_4 { pt3dadd( 9.13246, 178.354, 3.63429, 0.37 ) }
    dend_4 { pt3dadd( 9.37386, 179.12, 3.68838, 0.66 ) }
    dend_4 { pt3dadd( 9.62397, 179.885, 3.74877, 0.66 ) }
    dend_4 { pt3dadd( 9.96596, 180.999, 3.84235, 0.44 ) }
    dend_4 { pt3dadd( 10.1677, 181.733, 3.91108, 0.44 ) }
    dend_4 { pt3dadd( 10.5274, 183.267, 4.06703, 0.88 ) }
    dend_4 { pt3dadd( 10.5642, 183.444, 4.08925, 1.03 ) }
    dend_4 { pt3dadd( 10.7233, 184.475, 4.22685, 0.66 ) }
    dend_4 { pt3dadd( 10.8233, 185.436, 4.34913, 0.88 ) }
    dend_4 { pt3dadd( 10.8469, 186.018, 4.4198, 0.88 ) }
    dend_4 { pt3dadd( 10.8358, 186.776, 4.50186, 0.66 ) }
    dend_4 { pt3dadd( 10.7649, 187.768, 4.59696, 0.37 ) }
    dend_4 { pt3dadd( 10.7031, 188.501, 4.68468, 0.37 ) }
    dend_4 { pt3dadd( 10.576, 189.769, 4.86064, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( 10.4956, 190.557, 4.97836, 0.81 ) }
    dend_4 { pt3dadd( 10.3742, 191.976, 5.19212, 0.37 ) }
    dend_4 { pt3dadd( 10.2999, 192.887, 5.33045, 0.37 ) }
    dend_4 { pt3dadd( 10.1953, 194.13, 5.51896, 0.81 ) }
    dend_4 { pt3dadd( 10.1324, 194.757, 5.61141, 0.96 ) }
    dend_4 { pt3dadd( 10.0058, 195.958, 5.77092, 0.37 ) }
    dend_4 { pt3dadd( 9.8965, 196.982, 5.88544, 0.29 ) }
    dend_4 { pt3dadd( 9.76958, 198.16, 5.99173, 0.52 ) }
    dend_4 { pt3dadd( 9.58977, 199.618, 6.09843, 0.74 ) }
    dend_4 { pt3dadd( 9.45326, 200.492, 6.15295, 0.88 ) }
    dend_4 { pt3dadd( 9.2953, 201.373, 6.21472, 0.66 ) }
    dend_4 { pt3dadd( 9.09962, 202.432, 6.29411, 0.59 ) }
    dend_4 { pt3dadd( 8.92004, 203.466, 6.37627, 0.74 ) }
    dend_4 { pt3dadd( 8.78089, 204.418, 6.45447, 0.74 ) }
    dend_4 { pt3dadd( 8.67083, 205.591, 6.53007, 0.59 ) }
    dend_4 { pt3dadd( 8.64893, 206.446, 6.5714, 0.44 ) }
    dend_4 { pt3dadd( 8.69008, 207.706, 6.61038, 0.29 ) }
    dend_4 { pt3dadd( 8.78543, 208.626, 6.62248, 0.37 ) }
    dend_4 { pt3dadd( 9.05787, 210.162, 6.61829, 0.52 ) }
    dend_4 { pt3dadd( 9.37171, 211.511, 6.60099, 0.66 ) }
    dend_4 { pt3dadd( 9.60465, 212.434, 6.58797, 0.66 ) }
    dend_4 { pt3dadd( 9.78648, 213.221, 6.61208, 0.37 ) }
    dend_4 { pt3dadd( 9.97225, 214.133, 6.67793, 0.52 ) }
    dend_4 { pt3dadd( 10.2513, 215.414, 6.80509, 0.37 ) }
    dend_4 { pt3dadd( 10.5508, 216.717, 6.97001, 0.52 ) }
    dend_4 { pt3dadd( 10.7088, 217.531, 7.09827, 0.59 ) }
    dend_4 { pt3dadd( 10.9584, 219.217, 7.37941, 0.81 ) }
    dend_4 { pt3dadd( 11.0631, 220.293, 7.55933, 0.29 ) }
    dend_4 { pt3dadd( 11.0734, 221.093, 7.69266, 0.29 ) }
    dend_4 { pt3dadd( 11.0231, 221.832, 7.83175, 0.59 ) }
    dend_4 { pt3dadd( 10.9035, 222.795, 8.02143, 0.59 ) }
    dend_4 { pt3dadd( 10.6593, 224.2, 8.29495, 0.44 ) }
    dend_4 { pt3dadd( 10.314, 225.758, 8.58084, 0.29 ) }
    dend_4 { pt3dadd( 9.94356, 227.174, 8.85761, 0.37 ) }
    dend_4 { pt3dadd( 9.7014, 228.015, 9.02797, 0.66 ) }
    dend_4 { pt3dadd( 9.37852, 229.142, 9.25533, 0.29 ) }
    dend_4 { pt3dadd( 8.9903, 230.547, 9.53308, 0.29 ) }
    dend_4 { pt3dadd( 8.49722, 232.328, 9.88595, 0.29 ) }
    dend_4 { pt3dadd( 8.23609, 233.298, 10.0722, 0.44 ) }
    dend_4 { pt3dadd( 8.169, 233.574, 10.1194, 0.44 ) }
    dend_4 { pt3dadd( 7.94265, 234.522, 10.2516, 0.22 ) }
    dend_4 { pt3dadd( 7.81299, 235.082, 10.3286, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 8.86709, 177.213, 3.5662, 0.52 ) }
    dend_3 { pt3dadd( 9.61582, 176.737, 3.27613, 0.52 ) }
    dend_3 { pt3dadd( 10.118, 176.364, 3.08442, 0.52 ) }
    dend_3 { pt3dadd( 10.7545, 175.902, 2.85338, 0.81 ) }
    dend_3 { pt3dadd( 11.2903, 175.54, 2.67276, 0.88 ) }
    dend_3 { pt3dadd( 12.1297, 175.024, 2.4113, 0.37 ) }
    dend_3 { pt3dadd( 13.0541, 174.456, 2.12339, 0.29 ) }
    dend_3 { pt3dadd( 14.2508, 173.689, 1.74706, 0.29 ) }
    dend_3 { pt3dadd( 14.8768, 173.307, 1.55562, 0.44 ) }
    dend_3 { pt3dadd( 15.8941, 172.724, 1.26332, 0.44 ) }
    dend_3 { pt3dadd( 17.0432, 172.096, 0.976473, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 53/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -41.8692, -72.582, 6.69571, 0.74 ) }
    dend_34 { pt3dadd( -43.2472, -72.1144, 7.30026, 0.74 ) }
    dend_34 { pt3dadd( -44.4481, -71.8237, 7.84603, 0.88 ) }
    dend_34 { pt3dadd( -45.55, -71.7021, 8.34174, 1.03 ) }
    dend_34 { pt3dadd( -46.7136, -71.699, 8.89095, 0.88 ) }
    dend_34 { pt3dadd( -48.9307, -71.8654, 9.95566, 1.03 ) }
    dend_34 { pt3dadd( -49.392, -71.9258, 10.1586, 1.03 ) }
    dend_34 { pt3dadd( -50.5852, -72.2676, 10.6768, 0.81 ) }
    dend_34 { pt3dadd( -51.885, -72.84, 11.1902, 0.66 ) }
    dend_34 { pt3dadd( -52.7649, -73.4401, 11.4918, 0.66 ) }
    dend_34 { pt3dadd( -53.424, -74.0138, 11.7132, 0.52 ) }
    dend_34 { pt3dadd( -54.5316, -75.1176, 12.0601, 0.52 ) }
    dend_34 { pt3dadd( -55.3973, -76.0151, 12.3711, 0.52 ) }
    dend_34 { pt3dadd( -56.1717, -76.8314, 12.6942, 0.52 ) }
    dend_34 { pt3dadd( -58.0855, -78.8291, 13.5408, 0.52 ) }
    dend_34 { pt3dadd( -59.2213, -80.0112, 14.0488, 0.52 ) }
    dend_34 { pt3dadd( -60.1198, -80.9059, 14.4517, 0.52 ) }
    dend_34 { pt3dadd( -61.3285, -81.9813, 14.9576, 0.74 ) }
    dend_34 { pt3dadd( -62.1033, -82.5177, 15.2224, 0.96 ) }
    dend_34 { pt3dadd( -63.0887, -82.9993, 15.4382, 0.66 ) }
    dend_34 { pt3dadd( -63.7391, -83.2089, 15.4921, 0.66 ) }
    dend_34 { pt3dadd( -65.0399, -83.5406, 15.4558, 0.59 ) }
    dend_34 { pt3dadd( -66.6241, -83.8349, 15.2971, 0.44 ) }
    dend_34 { pt3dadd( -67.7911, -83.9524, 15.1145, 0.44 ) }
    dend_34 { pt3dadd( -68.9998, -84.0046, 14.8723, 0.44 ) }
    dend_34 { pt3dadd( -70.0756, -84.012, 14.6443, 0.44 ) }
    dend_34 { pt3dadd( -71.3455, -84.0146, 14.3595, 0.44 ) }
    dend_34 { pt3dadd( -72.0958, -84.0052, 14.1818, 0.44 ) }
    dend_34 { pt3dadd( -73.2907, -84.0098, 13.8386, 0.59 ) }
    dend_34 { pt3dadd( -73.9299, -84.0276, 13.6143, 0.52 ) }
    dend_34 { pt3dadd( -74.9674, -84.0699, 13.2221, 0.37 ) }
    dend_34 { pt3dadd( -76.1371, -84.1687, 12.7616, 0.52 ) }
    dend_34 { pt3dadd( -76.7867, -84.2726, 12.5014, 0.52 ) }
    dend_34 { pt3dadd( -78.1321, -84.5605, 11.8902, 0.74 ) }
    dend_34 { pt3dadd( -78.9847, -84.7584, 11.4523, 0.59 ) }
    dend_34 { pt3dadd( -79.6927, -84.8977, 11.0654, 0.59 ) }
    dend_34 { pt3dadd( -80.4509, -85.0129, 10.6024, 0.37 ) }
    dend_34 { pt3dadd( -81.1816, -85.113, 10.1434, 0.29 ) }
    dend_34 { pt3dadd( -82.193, -85.2565, 9.54751, 0.29 ) }
    dend_34 { pt3dadd( -82.9036, -85.3305, 9.16535, 0.37 ) }
    dend_34 { pt3dadd( -83.4663, -85.4038, 8.88516, 0.37 ) }
    dend_34 { pt3dadd( -84.206, -85.5196, 8.55141, 0.37 ) }
    dend_34 { pt3dadd( -85.0342, -85.6882, 8.17749, 0.59 ) }
    dend_34 { pt3dadd( -85.7301, -85.8937, 7.87728, 0.74 ) }
    dend_34 { pt3dadd( -86.1131, -86.0476, 7.70532, 0.74 ) }
    dend_34 { pt3dadd( -86.8644, -86.3999, 7.31778, 0.44 ) }
    dend_34 { pt3dadd( -87.7026, -86.7785, 6.83756, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_34 { pt3dadd( -88.591, -87.1701, 6.29682, 0.74 ) }
    dend_34 { pt3dadd( -89.6171, -87.6079, 5.66012, 0.29 ) }
    dend_34 { pt3dadd( -90.4751, -87.9681, 5.13051, 0.29 ) }
    dend_34 { pt3dadd( -91.6643, -88.5145, 4.44037, 0.37 ) }
    dend_34 { pt3dadd( -92.438, -88.9264, 3.98732, 0.37 ) }
    dend_34 { pt3dadd( -93.1542, -89.3152, 3.5847, 0.29 ) }
    dend_34 { pt3dadd( -94.0792, -89.7781, 3.10139, 0.29 ) }
    dend_34 { pt3dadd( -94.7332, -90.0474, 2.77035, 0.29 ) }
    dend_34 { pt3dadd( -95.6142, -90.3418, 2.35566, 0.29 ) }
    dend_34 { pt3dadd( -96.6931, -90.6332, 1.89257, 0.29 ) }
    dend_34 { pt3dadd( -97.8305, -90.8628, 1.42738, 0.29 ) }
    dend_34 { pt3dadd( -98.7006, -90.9445, 1.07497, 0.29 ) }
    dend_34 { pt3dadd( -100.131, -90.9545, 0.46611, 0.74 ) }
    dend_34 { pt3dadd( -101.016, -90.8843, 0.0785952, 0.81 ) }
    dend_34 { pt3dadd( -102.174, -90.717, -0.467656, 0.29 ) }
    dend_34 { pt3dadd( -102.677, -90.6474, -0.704567, 0.29 ) }
    dend_34 { pt3dadd( -103.596, -90.5574, -1.18414, 0.88 ) }
    dend_34 { pt3dadd( -104.252, -90.5095, -1.56167, 1.03 ) }
    dend_34 { pt3dadd( -104.769, -90.4744, -1.89106, 0.52 ) }
    dend_34 { pt3dadd( -105.698, -90.4145, -2.51463, 0.29 ) }
    dend_34 { pt3dadd( -106.768, -90.3576, -3.23045, 0.29 ) }
    dend_34 { pt3dadd( -107.211, -90.3347, -3.49564, 0.52 ) }
    dend_34 { pt3dadd( -107.649, -90.302, -3.7296, 0.52 ) }
    dend_34 { pt3dadd( -108.616, -90.1871, -4.20479, 0.44 ) }
    dend_34 { pt3dadd( -109.475, -90.0421, -4.63101, 0.59 ) }
    dend_34 { pt3dadd( -110.489, -89.795, -5.13461, 0.81 ) }
    dend_34 { pt3dadd( -111.162, -89.5969, -5.48553, 0.81 ) }
    dend_34 { pt3dadd( -112.061, -89.3308, -5.96033, 0.81 ) }
    dend_34 { pt3dadd( -112.733, -89.1374, -6.32969, 0.74 ) }
    dend_34 { pt3dadd( -113.771, -88.8509, -6.85269, 0.66 ) }
    dend_34 { pt3dadd( -114.805, -88.6056, -7.35285, 0.81 ) }
    dend_34 { pt3dadd( -115.58, -88.4761, -7.70494, 0.81 ) }
    dend_34 { pt3dadd( -116.599, -88.394, -8.12736, 0.59 ) }
    dend_34 { pt3dadd( -117.688, -88.403, -8.53247, 0.44 ) }
    dend_34 { pt3dadd( -119.15, -88.5291, -9.02623, 0.37 ) }
    dend_34 { pt3dadd( -120.241, -88.6809, -9.32428, 0.59 ) }
    dend_34 { pt3dadd( -121.21, -88.8306, -9.53773, 0.66 ) }
    dend_34 { pt3dadd( -122.056, -88.9503, -9.70189, 0.66 ) }
    dend_34 { pt3dadd( -122.545, -89.0061, -9.79191, 0.59 ) }
    dend_34 { pt3dadd( -123.437, -89.0637, -9.96094, 0.59 ) }
    dend_34 { pt3dadd( -124.511, -89.0771, -10.2373, 0.29 ) }
    dend_34 { pt3dadd( -125.417, -89.0565, -10.4195, 0.29 ) }
    dend_34 { pt3dadd( -126.124, -89.0498, -10.5491, 0.29 ) }
    dend_34 { pt3dadd( -126.991, -89.0861, -10.6997, 0.81 ) }
    dend_34 { pt3dadd( -127.598, -89.1627, -10.7841, 0.96 ) }
    dend_34 { pt3dadd( -128.367, -89.3473, -10.8647, 0.96 ) }
    dend_34 { pt3dadd( -129.744, -89.8851, -11.082, 0.22 ) }
    dend_34 { pt3dadd( -130.066, -90.0434, -11.1301, 0.44 ) }
    dend_34 { pt3dadd( -130.579, -90.3171, -11.1824, 0.44 ) }
    dend_34 { pt3dadd( -131.341, -90.7276, -11.2212, 0.59 ) }
    dend_34 { pt3dadd( -131.706, -90.9117, -11.2298, 0.81 ) }
    dend_34 { pt3dadd( -133.148, -91.5257, -11.1866, 0.22 ) }
    dend_34 { pt3dadd( -134.02, -91.8191, -11.1391, 0.81 ) }
    dend_34 { pt3dadd( -134.838, -92.0455, -11.0874, 0.96 ) }
    dend_34 { pt3dadd( -135.515, -92.2016, -11.029, 0.96 ) }
    dend_34 { pt3dadd( -136.521, -92.387, -10.9336, 0.52 ) }
    dend_34 { pt3dadd( -138.556, -92.6959, -10.7343, 1.92 ) }
    dend_34 { pt3dadd( -139.591, -92.8143, -10.6, 2.58 ) }
    dend_34 { pt3dadd( -140.498, -92.9027, -10.5001, 2.73 ) }
    dend_34 { pt3dadd( -141.887, -93.0447, -10.3899, 1.92 ) }
    dend_34 { pt3dadd( -143.384, -93.2367, -10.353, 1.11 ) }
    dend_34 { pt3dadd( -144.446, -93.3997, -10.3767, 0.74 ) }
    dend_34 { pt3dadd( -145.811, -93.6513, -10.5202, 0.74 ) }
    dend_34 { pt3dadd( -146.879, -93.9005, -10.7088, 1.18 ) }
    dend_34 { pt3dadd( -148.222, -94.2664, -11.0319, 0.37 ) }
    dend_34 { pt3dadd( -149.548, -94.6805, -11.4873, 0.44 ) }
    dend_34 { pt3dadd( -150.329, -94.9718, -11.8202, 0.88 ) }
    dend_34 { pt3dadd( -151.223, -95.3732, -12.2541, 0.88 ) }
    dend_34 { pt3dadd( -152.183, -95.9022, -12.7705, 0.81 ) }
    dend_34 { pt3dadd( -152.645, -96.1868, -13.0074, 0.88 ) }
    dend_34 { pt3dadd( -153.234, -96.5301, -13.2534, 0.74 ) }
    dend_34 { pt3dadd( -154.019, -96.9279, -13.4841, 0.44 ) }
    dend_34 { pt3dadd( -154.78, -97.2328, -13.6224, 0.74 ) }
    dend_34 { pt3dadd( -155.916, -97.5495, -13.7103, 0.29 ) }
    dend_34 { pt3dadd( -156.439, -97.6447, -13.7252, 0.29 ) }
    dend_34 { pt3dadd( -157.782, -97.8509, -13.7253, 0.66 ) }
    dend_34 { pt3dadd( -158.362, -97.9635, -13.7112, 0.66 ) }
    dend_34 { pt3dadd( -159.22, -98.1729, -13.7699, 0.59 ) }
    dend_34 { pt3dadd( -159.763, -98.3585, -13.8721, 0.37 ) }
    dend_34 { pt3dadd( -160.486, -98.6733, -14.0879, 0.29 ) }
    dend_34 { pt3dadd( -161.288, -99.1045, -14.3895, 0.29 ) }
    dend_34 { pt3dadd( -162.423, -99.8221, -14.8862, 0.29 ) }
    dend_34 { pt3dadd( -163.773, -100.729, -15.5141, 0.29 ) }
    dend_34 { pt3dadd( -164.885, -101.496, -16.0463, 0.29 ) }
    dend_34 { pt3dadd( -165.688, -102.048, -16.4387, 0.22 ) }
    dend_34 { pt3dadd( -166.359, -102.476, -16.7778, 0.22 ) }
    dend_34 { pt3dadd( -166.359, -102.476, -16.7778, 0.52 ) }
    dend_34 { pt3dadd( -166.798, -102.667, -16.9879, 0.52 ) }
    dend_34 { pt3dadd( -167.723, -103.031, -17.2463, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -41.8692, -72.582, 6.69571, 0.66 ) }
    dend_33 { pt3dadd( -42.5968, -74.6134, 7.33594, 0.66 ) }
    dend_33 { pt3dadd( -43.2185, -76.2411, 7.98185, 0.59 ) }
    dend_33 { pt3dadd( -43.6099, -77.1655, 8.37174, 0.74 ) }
    dend_33 { pt3dadd( -44.1505, -78.295, 8.83823, 0.37 ) }
    dend_33 { pt3dadd( -44.6139, -79.1294, 9.16267, 0.59 ) }
    dend_33 { pt3dadd( -45.3666, -80.2959, 9.62476, 0.52 ) }
    dend_33 { pt3dadd( -46.0793, -81.2326, 10.0197, 0.59 ) }
    dend_33 { pt3dadd( -46.7764, -82.0812, 10.3681, 0.29 ) }
    dend_33 { pt3dadd( -47.3449, -82.7926, 10.6376, 0.29 ) }
    dend_33 { pt3dadd( -48.0248, -83.7424, 10.9445, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_33 { pt3dadd( -48.7987, -85.1379, 11.3129, 0.52 ) }
    dend_33 { pt3dadd( -49.3611, -86.5243, 11.6387, 0.52 ) }
    dend_33 { pt3dadd( -49.7217, -87.6456, 11.9712, 0.74 ) }
    dend_33 { pt3dadd( -50.0518, -88.7573, 12.3553, 0.59 ) }
    dend_33 { pt3dadd( -50.4723, -90.1698, 12.87, 0.52 ) }
    dend_33 { pt3dadd( -50.8732, -91.4204, 13.3415, 0.44 ) }
    dend_33 { pt3dadd( -51.2552, -92.3653, 13.6855, 0.44 ) }
    dend_33 { pt3dadd( -52.2902, -94.1769, 14.3792, 0.66 ) }
    dend_33 { pt3dadd( -53.0354, -95.1881, 14.7574, 0.29 ) }
    dend_33 { pt3dadd( -53.6011, -95.8299, 14.9743, 0.29 ) }
    dend_33 { pt3dadd( -54.1604, -96.4175, 15.148, 0.29 ) }
    dend_33 { pt3dadd( -54.8085, -97.1081, 15.326, 0.66 ) }
    dend_33 { pt3dadd( -55.315, -97.703, 15.4704, 0.88 ) }
    dend_33 { pt3dadd( -55.7836, -98.3613, 15.6185, 0.88 ) }
    dend_33 { pt3dadd( -56.4861, -99.5505, 15.9217, 0.59 ) }
    dend_33 { pt3dadd( -57.0431, -100.666, 16.1952, 0.52 ) }
    dend_33 { pt3dadd( -57.3454, -101.351, 16.3455, 0.52 ) }
    dend_33 { pt3dadd( -57.8233, -102.588, 16.549, 0.74 ) }
    dend_33 { pt3dadd( -58.1798, -103.538, 16.6514, 0.88 ) }
    dend_33 { pt3dadd( -58.5396, -104.445, 16.7096, 0.74 ) }
    dend_33 { pt3dadd( -59.0276, -105.662, 16.7657, 0.44 ) }
    dend_33 { pt3dadd( -59.3927, -106.564, 16.8075, 0.66 ) }
    dend_33 { pt3dadd( -60.0537, -108.248, 16.9225, 0.44 ) }
    dend_33 { pt3dadd( -60.3909, -109.142, 17.0094, 0.44 ) }
    dend_33 { pt3dadd( -60.7719, -110.132, 17.1539, 0.74 ) }
    dend_33 { pt3dadd( -61.1815, -111.153, 17.3472, 0.74 ) }
    dend_33 { pt3dadd( -61.6758, -112.347, 17.6044, 0.74 ) }
    dend_33 { pt3dadd( -62.3828, -114.004, 17.971, 0.52 ) }
    dend_33 { pt3dadd( -63.0503, -115.494, 18.3048, 0.66 ) }
    dend_33 { pt3dadd( -63.6332, -116.75, 18.5405, 0.66 ) }
    dend_33 { pt3dadd( -64.1071, -117.706, 18.686, 0.74 ) }
    dend_33 { pt3dadd( -64.6258, -118.726, 18.7552, 0.52 ) }
    dend_33 { pt3dadd( -65.1829, -119.839, 18.7534, 0.29 ) }
    dend_33 { pt3dadd( -65.4726, -120.457, 18.7248, 0.29 ) }
    dend_33 { pt3dadd( -65.7616, -121.151, 18.6701, 0.29 ) }
    dend_33 { pt3dadd( -66.0642, -121.982, 18.5962, 0.59 ) }
    dend_33 { pt3dadd( -66.7229, -123.912, 18.4345, 0.66 ) }
    dend_33 { pt3dadd( -67.0631, -124.992, 18.4086, 0.52 ) }
    dend_33 { pt3dadd( -67.3997, -126.024, 18.508, 0.96 ) }
    dend_33 { pt3dadd( -67.6889, -127.111, 18.6457, 0.66 ) }
    dend_33 { pt3dadd( -68.0649, -128.581, 18.9699, 0.44 ) }
    dend_33 { pt3dadd( -68.2941, -129.374, 19.2753, 0.44 ) }
    dend_33 { pt3dadd( -68.7148, -130.532, 20.1163, 0.44 ) }
    dend_33 { pt3dadd( -69.1413, -131.795, 21.4092, 0.66 ) }
    dend_33 { pt3dadd( -69.5682, -133.31, 23.3022, 0.96 ) }
    dend_33 { pt3dadd( -69.818, -134.506, 24.9704, 0.81 ) }
    dend_33 { pt3dadd( -69.9797, -135.596, 26.5322, 0.88 ) }
    dend_33 { pt3dadd( -70.114, -136.714, 28.0371, 0.66 ) }
    dend_33 { pt3dadd( -70.2518, -137.645, 29.1351, 0.66 ) }
    dend_33 { pt3dadd( -70.4079, -138.494, 29.9468, 0.59 ) }
    dend_33 { pt3dadd( -70.6339, -139.363, 30.662, 0.44 ) }
    dend_33 { pt3dadd( -70.8182, -140.228, 31.1631, 0.81 ) }
    dend_33 { pt3dadd( -70.9661, -141.045, 31.525, 0.81 ) }
    dend_33 { pt3dadd( -71.1942, -142.296, 31.9997, 0.44 ) }
    dend_33 { pt3dadd( -71.4493, -143.386, 32.3836, 0.44 ) }
    dend_33 { pt3dadd( -71.7352, -144.502, 32.7752, 0.66 ) }
    dend_33 { pt3dadd( -72.0966, -145.833, 33.2575, 0.59 ) }
    dend_33 { pt3dadd( -72.3266, -146.893, 33.6772, 0.52 ) }
    dend_33 { pt3dadd( -72.3811, -147.381, 33.8892, 0.74 ) }
    dend_33 { pt3dadd( -72.4119, -149.403, 34.8591, 0.29 ) }
    dend_33 { pt3dadd( -72.3719, -150.129, 35.2339, 0.29 ) }
    dend_33 { pt3dadd( -72.2564, -151.248, 35.8264, 0.29 ) }
    dend_33 { pt3dadd( -72.0582, -152.958, 36.728, 0.52 ) }
    dend_33 { pt3dadd( -71.8081, -154.814, 37.7188, 0.37 ) }
    dend_33 { pt3dadd( -71.6393, -155.84, 38.2936, 0.59 ) }
    dend_33 { pt3dadd( -71.5075, -156.585, 38.7704, 0.59 ) }
    dend_33 { pt3dadd( -71.3697, -157.554, 39.4771, 0.44 ) }
    dend_33 { pt3dadd( -71.2767, -158.526, 40.3242, 0.44 ) }
    dend_33 { pt3dadd( -71.2673, -159.056, 40.8467, 0.81 ) }
    dend_33 { pt3dadd( -71.2666, -159.624, 41.4628, 0.81 ) }
    dend_33 { pt3dadd( -71.2237, -160.726, 42.6711, 0.59 ) }
    dend_33 { pt3dadd( -71.1749, -161.553, 43.5561, 0.52 ) }
    dend_33 { pt3dadd( -71.1277, -162.361, 44.4407, 0.52 ) }
    dend_33 { pt3dadd( -71.1206, -163.271, 45.3853, 0.52 ) }
    dend_33 { pt3dadd( -71.1713, -163.921, 45.9445, 0.29 ) }
    dend_33 { pt3dadd( -71.3003, -164.71, 46.4678, 0.29 ) }
    dend_33 { pt3dadd( -71.4828, -165.502, 46.8809, 0.52 ) }
    dend_33 { pt3dadd( -71.7236, -166.373, 47.293, 0.52 ) }
    dend_33 { pt3dadd( -72.0959, -167.619, 47.9218, 0.29 ) }
    dend_33 { pt3dadd( -72.4736, -168.799, 48.6081, 0.29 ) }
    dend_33 { pt3dadd( -72.7539, -169.719, 49.1687, 0.52 ) }
    dend_33 { pt3dadd( -72.9396, -170.373, 49.5659, 0.52 ) }
    dend_33 { pt3dadd( -73.2361, -171.379, 50.1602, 0.29 ) }
    dend_33 { pt3dadd( -73.5538, -172.447, 50.7583, 0.52 ) }
    dend_33 { pt3dadd( -73.7427, -172.986, 51.0662, 0.52 ) }
    dend_33 { pt3dadd( -74.1637, -174.056, 51.71, 0.52 ) }
    dend_33 { pt3dadd( -74.6834, -175.23, 52.4681, 0.74 ) }
    dend_33 { pt3dadd( -75.4507, -176.82, 53.4752, 0.22 ) }
    dend_33 { pt3dadd( -76.0211, -177.895, 54.1333, 0.22 ) }
    dend_33 { pt3dadd( -76.5903, -178.906, 54.7364, 0.22 ) }
    dend_33 { pt3dadd( -77.1959, -179.972, 55.4139, 0.52 ) }
    dend_33 { pt3dadd( -77.7349, -180.921, 56.1402, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -56.3033, 24.6158, -0.386643, 0.81 ) }
    dend_30 { pt3dadd( -57.5398, 24.9416, 0.00104341, 0.81 ) }
    dend_30 { pt3dadd( -58.319, 25.0819, 0.232879, 0.81 ) }
    dend_30 { pt3dadd( -59.5925, 25.2642, 0.591125, 0.74 ) }
    dend_30 { pt3dadd( -60.2996, 25.3817, 0.784886, 0.74 ) }
    dend_30 { pt3dadd( -60.9412, 25.5139, 0.958423, 0.81 ) }
    dend_30 { pt3dadd( -62.013, 25.8007, 1.2478, 0.96 ) }
    dend_30 { pt3dadd( -62.6891, 26.0373, 1.44503, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_30 { pt3dadd( -63.1991, 26.2788, 1.59502, 0.52 ) }
    dend_30 { pt3dadd( -64.0348, 26.9011, 1.78406, 0.74 ) }
    dend_30 { pt3dadd( -64.5028, 27.3905, 1.8499, 0.74 ) }
    dend_30 { pt3dadd( -65.0902, 28.1672, 1.87987, 0.44 ) }
    dend_30 { pt3dadd( -65.6392, 29.016, 1.87754, 0.44 ) }
    dend_30 { pt3dadd( -66.0489, 29.6505, 1.8576, 0.44 ) }
    dend_30 { pt3dadd( -66.9002, 30.8458, 1.79324, 0.81 ) }
    dend_30 { pt3dadd( -67.3802, 31.4188, 1.74256, 0.96 ) }
    dend_30 { pt3dadd( -68.1264, 32.135, 1.64881, 0.96 ) }
    dend_30 { pt3dadd( -68.6923, 32.5562, 1.57807, 0.88 ) }
    dend_30 { pt3dadd( -69.5168, 33.01, 1.4956, 0.96 ) }
    dend_30 { pt3dadd( -70.3107, 33.3166, 1.44637, 1.11 ) }
    dend_30 { pt3dadd( -70.8906, 33.4656, 1.43789, 1.11 ) }
    dend_30 { pt3dadd( -71.4888, 33.5752, 1.44338, 1.11 ) }
    dend_30 { pt3dadd( -72.0233, 33.6328, 1.46648, 0.74 ) }
    dend_30 { pt3dadd( -72.6557, 33.6605, 1.50761, 0.29 ) }
    dend_30 { pt3dadd( -73.5731, 33.645, 1.61846, 0.29 ) }
    dend_30 { pt3dadd( -74.3744, 33.6279, 1.75696, 0.88 ) }
    dend_30 { pt3dadd( -74.9875, 33.6322, 1.90698, 1.03 ) }
    dend_30 { pt3dadd( -75.659, 33.6552, 2.12057, 1.03 ) }
    dend_30 { pt3dadd( -76.3247, 33.6805, 2.36015, 1.11 ) }
    dend_30 { pt3dadd( -77.4641, 33.7429, 2.81811, 0.37 ) }
    dend_30 { pt3dadd( -78.2966, 33.8006, 3.16796, 0.29 ) }
    dend_30 { pt3dadd( -79.2411, 33.8674, 3.53548, 0.29 ) }
    dend_30 { pt3dadd( -80.0226, 33.9189, 3.79665, 0.96 ) }
    dend_30 { pt3dadd( -80.7699, 33.9525, 4.02498, 1.18 ) }
    dend_30 { pt3dadd( -81.1619, 33.9432, 4.12617, 1.33 ) }
    dend_30 { pt3dadd( -82.3032, 33.8207, 4.35744, 0.44 ) }
    dend_30 { pt3dadd( -83.5529, 33.5852, 4.58287, 0.44 ) }
    dend_30 { pt3dadd( -84.1696, 33.4481, 4.68075, 0.37 ) }
    dend_30 { pt3dadd( -84.6855, 33.3507, 4.76118, 0.37 ) }
    dend_30 { pt3dadd( -85.6468, 33.2318, 4.92835, 0.37 ) }
    dend_30 { pt3dadd( -86.4143, 33.2035, 5.07741, 0.59 ) }
    dend_30 { pt3dadd( -87.1374, 33.2537, 5.23858, 0.74 ) }
    dend_30 { pt3dadd( -88.0113, 33.367, 5.44274, 0.88 ) }
    dend_30 { pt3dadd( -88.7414, 33.5148, 5.62179, 0.88 ) }
    dend_30 { pt3dadd( -89.3588, 33.6831, 5.79411, 0.74 ) }
    dend_30 { pt3dadd( -90.2417, 33.9779, 6.06887, 0.29 ) }
    dend_30 { pt3dadd( -90.7145, 34.142, 6.25586, 0.22 ) }
    dend_30 { pt3dadd( -91.7013, 34.4724, 6.70067, 0.22 ) }
    dend_30 { pt3dadd( -92.6734, 34.7609, 7.19175, 0.59 ) }
    dend_30 { pt3dadd( -93.3074, 34.9227, 7.52866, 0.81 ) }
    dend_30 { pt3dadd( -94.2514, 35.1372, 8.03949, 0.81 ) }
    dend_30 { pt3dadd( -95.4313, 35.3488, 8.70118, 0.96 ) }
    dend_30 { pt3dadd( -96.321, 35.4962, 9.1925, 0.59 ) }
    dend_30 { pt3dadd( -97.128, 35.6693, 9.62348, 0.22 ) }
    dend_30 { pt3dadd( -97.7908, 35.8238, 9.94379, 0.22 ) }
    dend_30 { pt3dadd( -98.3334, 35.9924, 10.2034, 0.44 ) }
    dend_30 { pt3dadd( -99.1856, 36.3532, 10.6162, 0.59 ) }
    dend_30 { pt3dadd( -99.957, 36.7342, 10.9744, 0.52 ) }
    dend_30 { pt3dadd( -101.099, 37.3297, 11.514, 0.66 ) }
    dend_30 { pt3dadd( -101.717, 37.6487, 11.7885, 0.66 ) }
    dend_30 { pt3dadd( -102.974, 38.2586, 12.3028, 0.66 ) }
    dend_30 { pt3dadd( -103.76, 38.6134, 12.5988, 0.59 ) }
    dend_30 { pt3dadd( -104.478, 38.8914, 12.7872, 0.44 ) }
    dend_30 { pt3dadd( -105.4, 39.1155, 12.9336, 0.37 ) }
    dend_30 { pt3dadd( -106.236, 39.1915, 13.0083, 0.29 ) }
    dend_30 { pt3dadd( -106.87, 39.1768, 13.0313, 0.29 ) }
    dend_30 { pt3dadd( -107.515, 39.1021, 13.0212, 0.44 ) }
    dend_30 { pt3dadd( -108.846, 38.9062, 13.0062, 0.59 ) }
    dend_30 { pt3dadd( -109.263, 38.8578, 13.0108, 0.59 ) }
    dend_30 { pt3dadd( -110.514, 38.7377, 13.0752, 0.37 ) }
    dend_30 { pt3dadd( -111.556, 38.6394, 13.1544, 0.29 ) }
    dend_30 { pt3dadd( -112.223, 38.5868, 13.214, 0.29 ) }
    dend_30 { pt3dadd( -112.556, 38.5672, 13.2591, 0.29 ) }
    dend_30 { pt3dadd( -113.451, 38.5333, 13.4448, 0.59 ) }
    dend_30 { pt3dadd( -113.908, 38.5253, 13.5403, 0.59 ) }
    dend_30 { pt3dadd( -114.369, 38.5487, 13.6309, 0.52 ) }
    dend_30 { pt3dadd( -114.917, 38.6252, 13.7587, 0.66 ) }
    dend_30 { pt3dadd( -115.866, 38.7852, 14.0057, 0.29 ) }
    dend_30 { pt3dadd( -116.295, 38.8391, 14.1268, 0.29 ) }
    dend_30 { pt3dadd( -116.8, 38.8629, 14.2906, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 72/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -56.3033, 24.6158, -0.386643, 0.74 ) }
    dend_29 { pt3dadd( -56.318, 25.6026, -0.462077, 0.74 ) }
    dend_29 { pt3dadd( -56.3567, 26.7906, -0.570221, 0.74 ) }
    dend_29 { pt3dadd( -56.4496, 28.2332, -0.70614, 0.74 ) }
    dend_29 { pt3dadd( -56.5618, 29.0754, -0.806335, 0.74 ) }
    dend_29 { pt3dadd( -56.9398, 30.9359, -1.03184, 0.88 ) }
    dend_29 { pt3dadd( -57.1639, 31.786, -1.13863, 0.88 ) }
    dend_29 { pt3dadd( -57.4452, 32.5432, -1.26357, 0.96 ) }
    dend_29 { pt3dadd( -57.8489, 33.381, -1.42296, 0.81 ) }
    dend_29 { pt3dadd( -58.6937, 34.8227, -1.71498, 0.74 ) }
    dend_29 { pt3dadd( -59.4188, 35.9615, -1.99331, 0.96 ) }
    dend_29 { pt3dadd( -60.0036, 36.8372, -2.23439, 0.96 ) }
    dend_29 { pt3dadd( -60.7167, 37.9251, -2.56223, 0.81 ) }
    dend_29 { pt3dadd( -61.2444, 38.7902, -2.85793, 0.74 ) }
    dend_29 { pt3dadd( -61.5998, 39.4572, -3.11382, 0.74 ) }
    dend_29 { pt3dadd( -62.1732, 40.727, -3.62211, 0.74 ) }
    dend_29 { pt3dadd( -62.488, 41.4936, -3.94038, 0.88 ) }
    dend_29 { pt3dadd( -62.7923, 42.2285, -4.21722, 0.88 ) }
    dend_29 { pt3dadd( -63.0966, 42.9107, -4.43465, 0.66 ) }
    dend_29 { pt3dadd( -63.4678, 43.6073, -4.64852, 0.66 ) }
    dend_29 { pt3dadd( -63.9203, 44.3301, -4.84952, 0.81 ) }
    dend_29 { pt3dadd( -64.4211, 45.0248, -5.01674, 0.81 ) }
    dend_29 { pt3dadd( -65.0918, 45.8797, -5.26847, 0.66 ) }
    dend_29 { pt3dadd( -65.5918, 46.4776, -5.44686, 0.81 ) }
    dend_29 { pt3dadd( -66.1695, 47.1536, -5.66626, 0.81 ) }
    dend_29 { pt3dadd( -66.6021, 47.7069, -5.86499, 0.59 ) }
    dend_29 { pt3dadd( -66.851, 48.104, -6.01195, 0.59 ) }
    dend_29 { pt3dadd( -67.2666, 48.9425, -6.28346, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_29 { pt3dadd( -67.5763, 49.7436, -6.48276, 0.59 ) }
    dend_29 { pt3dadd( -67.8349, 50.4852, -6.64926, 0.74 ) }
    dend_29 { pt3dadd( -68.1114, 51.2512, -6.8342, 0.88 ) }
    dend_29 { pt3dadd( -68.5514, 52.2791, -7.11187, 1.25 ) }
    dend_29 { pt3dadd( -69.0034, 53.1536, -7.37911, 0.66 ) }
    dend_29 { pt3dadd( -69.463, 53.9094, -7.63272, 0.66 ) }
    dend_29 { pt3dadd( -70.2704, 55.042, -8.08637, 0.81 ) }
    dend_29 { pt3dadd( -70.9377, 55.8245, -8.42518, 0.81 ) }
    dend_29 { pt3dadd( -71.5854, 56.4518, -8.72258, 0.96 ) }
    dend_29 { pt3dadd( -72.2118, 56.96, -8.95731, 0.66 ) }
    dend_29 { pt3dadd( -72.8667, 57.4283, -9.13355, 0.52 ) }
    dend_29 { pt3dadd( -73.836, 58.0717, -9.28187, 0.52 ) }
    dend_29 { pt3dadd( -74.6291, 58.5827, -9.30152, 1.11 ) }
    dend_29 { pt3dadd( -75.14, 58.9384, -9.25448, 1.33 ) }
    dend_29 { pt3dadd( -75.8695, 59.5118, -9.11964, 0.66 ) }
    dend_29 { pt3dadd( -76.5274, 60.1007, -8.95006, 0.52 ) }
    dend_29 { pt3dadd( -76.9861, 60.5656, -8.81082, 0.66 ) }
    dend_29 { pt3dadd( -77.2236, 60.8461, -8.72979, 0.66 ) }
    dend_29 { pt3dadd( -77.8582, 61.7016, -8.53941, 0.44 ) }
    dend_29 { pt3dadd( -78.342, 62.449, -8.41714, 0.81 ) }
    dend_29 { pt3dadd( -78.6812, 63.0343, -8.36672, 0.81 ) }
    dend_29 { pt3dadd( -79.1463, 63.8934, -8.33347, 0.88 ) }
    dend_29 { pt3dadd( -79.6485, 64.8424, -8.32657, 0.88 ) }
    dend_29 { pt3dadd( -80.1761, 65.8133, -8.34191, 0.59 ) }
    dend_29 { pt3dadd( -80.5756, 66.5049, -8.36999, 0.81 ) }
    dend_29 { pt3dadd( -81.1448, 67.416, -8.40874, 0.96 ) }
    dend_29 { pt3dadd( -81.5678, 68.0153, -8.41894, 0.96 ) }
    dend_29 { pt3dadd( -82.0483, 68.643, -8.43714, 0.96 ) }
    dend_29 { pt3dadd( -82.8571, 69.6955, -8.46772, 0.96 ) }
    dend_29 { pt3dadd( -83.5563, 70.6586, -8.48745, 0.88 ) }
    dend_29 { pt3dadd( -84.1095, 71.496, -8.51905, 0.88 ) }
    dend_29 { pt3dadd( -84.8861, 72.861, -8.62809, 0.81 ) }
    dend_29 { pt3dadd( -85.3945, 73.9504, -8.76039, 0.52 ) }
    dend_29 { pt3dadd( -85.7178, 74.878, -8.91661, 0.74 ) }
    dend_29 { pt3dadd( -85.9185, 75.7859, -9.1148, 0.74 ) }
    dend_29 { pt3dadd( -86.0325, 76.6465, -9.34168, 0.88 ) }
    dend_29 { pt3dadd( -86.123, 77.6282, -9.61942, 0.66 ) }
    dend_29 { pt3dadd( -86.1988, 78.4578, -9.86849, 0.88 ) }
    dend_29 { pt3dadd( -86.3343, 79.2198, -10.1103, 0.88 ) }
    dend_29 { pt3dadd( -86.6001, 79.9961, -10.3897, 0.66 ) }
    dend_29 { pt3dadd( -87.0545, 80.8302, -10.7062, 0.66 ) }
    dend_29 { pt3dadd( -87.6032, 81.5501, -10.9682, 0.96 ) }
    dend_29 { pt3dadd( -88.0734, 82.0499, -11.1107, 0.96 ) }
    dend_29 { pt3dadd( -88.7277, 82.6753, -11.2537, 0.74 ) }
    dend_29 { pt3dadd( -89.4673, 83.4044, -11.3596, 0.66 ) }
    dend_29 { pt3dadd( -89.885, 83.8671, -11.3894, 0.66 ) }
    dend_29 { pt3dadd( -90.3762, 84.479, -11.3947, 0.66 ) }
    dend_29 { pt3dadd( -91.1592, 85.5606, -11.3838, 1.03 ) }
    dend_29 { pt3dadd( -91.5392, 86.1638, -11.3706, 1.03 ) }
    dend_29 { pt3dadd( -92.2181, 87.3475, -11.3899, 0.74 ) }
    dend_29 { pt3dadd( -92.9799, 88.7535, -11.5198, 0.88 ) }
    dend_29 { pt3dadd( -93.4715, 89.6267, -11.6443, 0.74 ) }
    dend_29 { pt3dadd( -94.0741, 90.6104, -11.8287, 0.96 ) }
    dend_29 { pt3dadd( -94.8999, 91.8153, -12.0985, 0.59 ) }
    dend_29 { pt3dadd( -95.856, 93.0909, -12.4149, 0.52 ) }
    dend_29 { pt3dadd( -96.5093, 93.912, -12.6499, 0.66 ) }
    dend_29 { pt3dadd( -97.341, 94.9987, -12.9934, 0.81 ) }
    dend_29 { pt3dadd( -97.8552, 95.733, -13.2374, 1.03 ) }
    dend_29 { pt3dadd( -98.3546, 96.5178, -13.466, 0.74 ) }
    dend_29 { pt3dadd( -98.6399, 96.9968, -13.5669, 0.96 ) }
    dend_29 { pt3dadd( -99.0443, 97.742, -13.6374, 0.96 ) }
    dend_29 { pt3dadd( -99.5588, 98.734, -13.666, 0.59 ) }
    dend_29 { pt3dadd( -99.9166, 99.4601, -13.6697, 0.59 ) }
    dend_29 { pt3dadd( -100.457, 100.513, -13.6406, 0.74 ) }
    dend_29 { pt3dadd( -100.943, 101.349, -13.5893, 0.81 ) }
    dend_29 { pt3dadd( -101.599, 102.259, -13.4898, 0.96 ) }
    dend_29 { pt3dadd( -102.31, 103.066, -13.3555, 1.18 ) }
    dend_29 { pt3dadd( -103.081, 103.795, -13.1958, 0.59 ) }
    dend_29 { pt3dadd( -103.731, 104.349, -13.1135, 0.66 ) }
    dend_29 { pt3dadd( -104.368, 104.866, -13.0934, 0.66 ) }
    dend_29 { pt3dadd( -105.316, 105.631, -13.1214, 0.52 ) }
    dend_29 { pt3dadd( -105.971, 106.172, -13.1788, 0.81 ) }
    dend_29 { pt3dadd( -106.707, 106.779, -13.2688, 0.81 ) }
    dend_29 { pt3dadd( -108.178, 107.938, -13.4715, 0.88 ) }
    dend_29 { pt3dadd( -108.964, 108.523, -13.5956, 0.59 ) }
    dend_29 { pt3dadd( -109.719, 109.045, -13.7247, 0.81 ) }
    dend_29 { pt3dadd( -110.529, 109.576, -13.8714, 0.81 ) }
    dend_29 { pt3dadd( -111.542, 110.208, -14.0451, 0.81 ) }
    dend_29 { pt3dadd( -112.146, 110.573, -14.1257, 0.81 ) }
    dend_29 { pt3dadd( -112.905, 111.012, -14.1638, 0.74 ) }
    dend_29 { pt3dadd( -113.661, 111.456, -14.2161, 0.59 ) }
    dend_29 { pt3dadd( -114.391, 111.936, -14.2793, 0.59 ) }
    dend_29 { pt3dadd( -115.077, 112.494, -14.3522, 0.74 ) }
    dend_29 { pt3dadd( -115.829, 113.311, -14.46, 0.81 ) }
    dend_29 { pt3dadd( -116.32, 114.038, -14.5381, 0.88 ) }
    dend_29 { pt3dadd( -116.615, 114.617, -14.5677, 0.88 ) }
    dend_29 { pt3dadd( -116.891, 115.272, -14.578, 0.74 ) }
    dend_29 { pt3dadd( -117.207, 116.096, -14.5622, 0.74 ) }
    dend_29 { pt3dadd( -117.475, 116.828, -14.5367, 0.52 ) }
    dend_29 { pt3dadd( -117.875, 118.011, -14.4888, 0.44 ) }
    dend_29 { pt3dadd( -118.211, 118.99, -14.4368, 0.74 ) }
    dend_29 { pt3dadd( -118.405, 119.483, -14.4044, 0.74 ) }
    dend_29 { pt3dadd( -118.809, 120.309, -14.374, 0.59 ) }
    dend_29 { pt3dadd( -119.155, 120.846, -14.3893, 0.59 ) }
    dend_29 { pt3dadd( -119.539, 121.316, -14.4317, 0.59 ) }
    dend_29 { pt3dadd( -120.295, 122.043, -14.539, 0.66 ) }
    dend_29 { pt3dadd( -121.269, 122.823, -14.6955, 0.37 ) }
    dend_29 { pt3dadd( -122.354, 123.562, -14.8581, 0.37 ) }
    dend_29 { pt3dadd( -123.595, 124.27, -15.0106, 0.52 ) }
    dend_29 { pt3dadd( -124.146, 124.553, -15.0602, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_29 { pt3dadd( -125.068, 125.009, -15.1227, 0.29 ) }
    dend_29 { pt3dadd( -125.749, 125.353, -15.169, 0.66 ) }
    dend_29 { pt3dadd( -126.328, 125.683, -15.1979, 0.66 ) }
    dend_29 { pt3dadd( -127.154, 126.256, -15.2134, 0.37 ) }
    dend_29 { pt3dadd( -127.847, 126.851, -15.2144, 0.44 ) }
    dend_29 { pt3dadd( -128.535, 127.537, -15.2289, 0.29 ) }
    dend_29 { pt3dadd( -129.158, 128.245, -15.268, 0.29 ) }
    dend_29 { pt3dadd( -129.745, 128.968, -15.3184, 0.29 ) }
    dend_29 { pt3dadd( -130.28, 129.641, -15.3723, 0.74 ) }
    dend_29 { pt3dadd( -130.54, 129.941, -15.4001, 0.74 ) }
    dend_29 { pt3dadd( -130.925, 130.297, -15.4278, 0.37 ) }
    dend_29 { pt3dadd( -131.663, 130.818, -15.4576, 0.29 ) }
    dend_29 { pt3dadd( -132.187, 131.116, -15.47, 0.29 ) }
    dend_29 { pt3dadd( -132.612, 131.328, -15.4945, 0.29 ) }
    dend_29 { pt3dadd( -133.346, 131.649, -15.5438, 0.29 ) }
    dend_29 { pt3dadd( -134.032, 131.912, -15.5897, 0.66 ) }
    dend_29 { pt3dadd( -134.528, 132.072, -15.6192, 0.66 ) }
    dend_29 { pt3dadd( -135.253, 132.269, -15.6436, 0.37 ) }
    dend_29 { pt3dadd( -136.03, 132.496, -15.7, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 19/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -18.5447, 57.0687, 20.3943, 0.96 ) }
    dend_16 { pt3dadd( -18.74, 58.6933, 20.8455, 0.96 ) }
    dend_16 { pt3dadd( -18.9995, 59.9012, 21.1227, 0.81 ) }
    dend_16 { pt3dadd( -19.2818, 60.8691, 21.314, 0.74 ) }
    dend_16 { pt3dadd( -19.6525, 61.8773, 21.4816, 0.74 ) }
    dend_16 { pt3dadd( -20.2295, 63.1988, 21.664, 0.81 ) }
    dend_16 { pt3dadd( -20.8064, 64.3635, 21.7985, 0.66 ) }
    dend_16 { pt3dadd( -21.2527, 65.1014, 21.8561, 0.81 ) }
    dend_16 { pt3dadd( -21.7112, 65.7863, 21.8915, 0.81 ) }
    dend_16 { pt3dadd( -22.4315, 66.785, 21.9584, 0.66 ) }
    dend_16 { pt3dadd( -23.246, 67.8308, 22.0572, 0.81 ) }
    dend_16 { pt3dadd( -23.824, 68.5552, 22.1497, 0.96 ) }
    dend_16 { pt3dadd( -24.3845, 69.3363, 22.2622, 1.03 ) }
    dend_16 { pt3dadd( -24.9878, 70.2651, 22.3985, 0.59 ) }
    dend_16 { pt3dadd( -25.502, 71.1641, 22.4845, 0.59 ) }
    dend_16 { pt3dadd( -26.0032, 72.1401, 22.5354, 0.44 ) }
    dend_16 { pt3dadd( -26.3843, 72.9247, 22.5522, 0.44 ) }
    dend_16 { pt3dadd( -27.1326, 74.4353, 22.5479, 0.81 ) }
    dend_16 { pt3dadd( -27.5461, 75.1938, 22.5191, 1.03 ) }
    dend_16 { pt3dadd( -28.4478, 76.5791, 22.531, 0.66 ) }
    dend_16 { pt3dadd( -28.9185, 77.1591, 22.571, 0.66 ) }
    dend_16 { pt3dadd( -29.4971, 77.7449, 22.6801, 0.81 ) }
    dend_16 { pt3dadd( -30.1122, 78.2956, 22.8517, 0.59 ) }
    dend_16 { pt3dadd( -30.8738, 78.9239, 23.1797, 0.44 ) }
    dend_16 { pt3dadd( -32.2969, 80.1718, 24.0061, 0.44 ) }
    dend_16 { pt3dadd( -33.2897, 81.1521, 24.7457, 0.37 ) }
    dend_16 { pt3dadd( -34.119, 82.1295, 25.4238, 0.37 ) }
    dend_16 { pt3dadd( -34.687, 82.9907, 25.9197, 0.37 ) }
    dend_16 { pt3dadd( -35.4401, 84.5122, 26.5768, 0.44 ) }
    dend_16 { pt3dadd( -35.7202, 85.4035, 27.1224, 0.29 ) }
    dend_16 { pt3dadd( -35.8938, 86.1505, 27.4707, 0.29 ) }
    dend_16 { pt3dadd( -36.1439, 87.2982, 27.8945, 0.29 ) }
    dend_16 { pt3dadd( -36.4407, 88.4456, 28.2127, 0.96 ) }
    dend_16 { pt3dadd( -36.7449, 89.3928, 28.4198, 1.11 ) }
    dend_16 { pt3dadd( -38.6144, 94.708, 29.4212, 1.11 ) }
    dend_16 { pt3dadd( -40.4153, 99.1818, 30.629, 0.44 ) }
    dend_16 { pt3dadd( -40.6903, 99.9151, 30.9851, 0.29 ) }
    dend_16 { pt3dadd( -40.902, 100.726, 31.7282, 0.29 ) }
    dend_16 { pt3dadd( -40.8881, 101.065, 32.3998, 0.29 ) }
    dend_16 { pt3dadd( -40.7237, 101.215, 33.2298, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -18.5447, 57.0687, 20.3943, 0.74 ) }
    dend_13 { pt3dadd( -17.8626, 57.8545, 21.2376, 0.74 ) }
    dend_13 { pt3dadd( -17.555, 58.2088, 21.6178, 0.74 ) }
    dend_13 { pt3dadd( -16.9656, 58.8878, 22.3465, 0.74 ) }
    dend_13 { pt3dadd( -16.443, 59.4899, 22.9925, 1.03 ) }
    dend_13 { pt3dadd( -15.9071, 60.1073, 23.6551, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.9071, 60.1073, 23.6551, 0.66 ) }
    dend_15 { pt3dadd( -15.703, 61.089, 23.688, 0.66 ) }
    dend_15 { pt3dadd( -15.6092, 61.8402, 23.7457, 0.66 ) }
    dend_15 { pt3dadd( -15.5505, 62.7417, 23.8231, 0.74 ) }
    dend_15 { pt3dadd( -15.527, 63.7681, 23.9233, 0.74 ) }
    dend_15 { pt3dadd( -15.5319, 65.078, 24.0675, 1.18 ) }
    dend_15 { pt3dadd( -15.5512, 66.2559, 24.2201, 0.96 ) }
    dend_15 { pt3dadd( -15.5773, 67.236, 24.3895, 0.81 ) }
    dend_15 { pt3dadd( -15.6068, 68.2643, 24.581, 0.52 ) }
    dend_15 { pt3dadd( -15.6179, 69.1044, 24.7665, 0.52 ) }
    dend_15 { pt3dadd( -15.6229, 70.0093, 24.997, 0.96 ) }
    dend_15 { pt3dadd( -15.6294, 70.5101, 25.1269, 0.96 ) }
    dend_15 { pt3dadd( -15.6433, 71.2371, 25.3618, 0.96 ) }
    dend_15 { pt3dadd( -15.6595, 71.8691, 25.5794, 0.59 ) }
    dend_15 { pt3dadd( -15.686, 72.6137, 25.8027, 0.37 ) }
    dend_15 { pt3dadd( -15.6544, 73.3139, 26.0502, 0.37 ) }
    dend_15 { pt3dadd( -15.5743, 73.904, 26.2671, 0.37 ) }
    dend_15 { pt3dadd( -15.3335, 74.8637, 26.5573, 0.37 ) }
    dend_15 { pt3dadd( -14.8723, 76.0005, 26.8123, 0.37 ) }
    dend_15 { pt3dadd( -14.3419, 76.8555, 26.935, 0.74 ) }
    dend_15 { pt3dadd( -13.1029, 78.5321, 27.0972, 0.22 ) }
    dend_15 { pt3dadd( -12.633, 79.0712, 27.1329, 0.22 ) }
    dend_15 { pt3dadd( -11.7036, 79.976, 27.1616, 0.22 ) }
    dend_15 { pt3dadd( -10.7679, 80.7105, 27.1585, 0.22 ) }
    dend_15 { pt3dadd( -10.0726, 81.1564, 27.1538, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.9071, 60.1073, 23.6551, 0.74 ) }
    dend_14 { pt3dadd( -15.088, 60.353, 24.4637, 0.74 ) }
    dend_14 { pt3dadd( -14.514, 60.7696, 25.1248, 0.44 ) }
    dend_14 { pt3dadd( -14.0166, 61.2994, 25.7485, 0.44 ) }
    dend_14 { pt3dadd( -13.6712, 61.7469, 26.1904, 0.59 ) }
    dend_14 { pt3dadd( -13.2877, 62.2724, 26.6766, 0.29 ) }
    dend_14 { pt3dadd( -12.8105, 62.9191, 27.3362, 0.29 ) }
    dend_14 { pt3dadd( -12.5163, 63.4526, 27.8052, 0.44 ) }
    dend_14 { pt3dadd( -12.3784, 63.7642, 28.0493, 0.44 ) }
    dend_14 { pt3dadd( -12.1108, 64.4668, 28.5832, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -11.8609, 65.0709, 29.0221, 0.74 ) }
    dend_14 { pt3dadd( -11.3888, 65.9847, 29.7781, 0.52 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, axon_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, axon_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_5 = new SectionList()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_8 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_30 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_29 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_19 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 3
    dend_36 nseg = 9
    dend_8 nseg = 5
    dend_1 nseg = 5
    dend_23 nseg = 11
    dend_20 nseg = 5
    dend_5 nseg = 7
    dend_35 nseg = 9
    dend_32 nseg = 3
    dend_28 nseg = 3
    dend_27 nseg = 11
    dend_22 nseg = 3
    dend_21 nseg = 5
    dend_17 nseg = 3
    dend_12 nseg = 3
    dend_4 nseg = 3
    dend_34 nseg = 7
    dend_33 nseg = 7
    dend_30 nseg = 3
    dend_29 nseg = 7
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_ChC_a7e068ee2e_0_0


