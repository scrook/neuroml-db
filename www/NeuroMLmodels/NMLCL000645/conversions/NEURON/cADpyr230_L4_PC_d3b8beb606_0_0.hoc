// Cell: cADpyr230_L4_PC_d3b8beb606_0_0
/*
{
  "id" : "cADpyr230_L4_PC_d3b8beb606_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.70898, 5.85738, -0.120344, 3.27839", "-4.33196, 5.21658, -0.129082, 5.86961", "-3.95495, 4.57578, -0.137819, 7.57673", "-3.57794, 3.93498, -0.146557, 9.06802", "-3.20092, 3.29418, -0.155294, 10.0599", "-2.82391, 2.65338, -0.164032, 10.9956", "-2.4469, 2.01258, -0.17277, 12.0571", "-2.06988, 1.37178, -0.181507, 12.9693", "-1.69287, 0.730981, -0.190245, 12.9054", "-1.31586, 0.0901812, -0.198982, 12.8202", "-0.938844, -0.550618, -0.20772, 12.319", "-0.561831, -1.19142, -0.216458, 11.7275", "-0.184817, -1.83222, -0.225195, 11.136", "0.192196, -2.47302, -0.233933, 10.5445", "0.56921, -3.11382, -0.24267, 9.93876", "0.946223, -3.75461, -0.251408, 9.25799", "1.32324, -4.39541, -0.260145, 8.69202", "1.70025, -5.03621, -0.268883, 8.25824", "2.07726, -5.67701, -0.277621, 7.9083", "2.45428, -6.31781, -0.286358, 7.39739", "2.83129, -6.95861, -0.295096, 4.06054" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-0.080289, 6.36868, -3.98721, 2.0", "-0.036712, 8.52952, -5.41873, 2.0", "0.101209, 14.8701, -1.7964, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.033, -2.87637, -6.34901, 1.33", "2.24241, -6.02954, -12.572, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.133118, -4.43262, -5.42184, 0.67", "-0.120685, -5.29702, -6.40405, 0.67", "3.12336, -1.92349, -5.72017, 0.67", "6.75229, 1.8503, -4.95515, 0.67", "8.79032, 3.96968, -4.52551, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.715615, 1.01649, -7.17452, 1.33", "-0.62712, 0.900498, -5.93802, 1.33", "-8.07736, 2.20617, -8.15951, 1.33", "-10.2292, 2.5833, -8.80115, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.44863, -0.464346, -3.54272, 2.0", "-7.99552, -0.664275, -4.42116, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.98108, -4.42422, -3.90035, 0.67", "-4.36786, -4.92963, -4.31886, 0.67", "-4.72488, -6.97346, -3.8847, 0.67", "-5.26381, -9.94399, -3.16128, 0.67", "-5.82344, -14.3901, -1.91545, 0.67", "-5.97068, -16.4637, -1.36713, 0.67", "-6.06308, -18.8483, -0.724075, 0.33", "-5.9024, -23.0735, 0.530504, 0.67", "-5.78199, -25.1885, 1.13081, 0.67", "-5.34355, -30.2004, 2.58174, 0.67", "-4.74381, -34.8778, 3.84837, 0.33", "-3.95926, -39.8455, 5.06099, 0.33", "-2.84797, -45.5927, 6.41954, 0.33", "-2.29652, -48.189, 6.96229, 0.33", "-0.835103, -54.7503, 8.35047, 0.33", "-0.170768, -57.7497, 8.95923, 0.33", "0.684915, -61.2861, 9.72997, 0.33", "1.95256, -65.8362, 10.5719, 0.67", "2.6903, -75.6431, 14.0688, 0.67", "3.80903, -85.3366, 17.7746, 0.67", "4.47292, -94.6285, 22.4828, 0.67", "3.72515, -103.74, 27.5205, 0.67", "3.61445, -112.6, 33.0362, 0.67", "1.16751, -121.145, 38.5085, 0.67", "-3.00448, -129.072, 43.8669, 0.67", "-5.33709, -137.163, 50.0347, 0.67", "-8.64895, -144.894, 56.2157, 0.67", "-10.7306, -153.717, 61.3898, 0.67", "-11.9532, -162.772, 66.4351, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.575, -6.63986, -0.579361, 1.33", "1.35938, -5.79245, -0.508485, 1.33", "8.4871, -14.2564, 2.28261, 0.67", "9.86219, -15.9283, 2.71687, 0.67", "13.0512, -20.3746, 3.37483, 0.67", "14.3598, -22.3883, 3.50521, 0.67", "15.5706, -24.6982, 3.54359, 0.67", "17.5179, -29.2902, 3.32101, 0.67", "18.7919, -33.0669, 3.1772, 0.67", "20.6503, -39.7087, 2.98519, 0.67", "21.1496, -42.2162, 2.85383, 0.67", "22.0013, -47.8148, 2.6094, 0.67", "22.1539, -49.0697, 2.5787, 0.67", "22.1961, -53.576, 2.66684, 0.67", "22.185, -55.7585, 3.00023, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.48781, -2.34256, 5.61119, 1.33", "4.02221, -2.73153, 6.42324, 1.33", "5.94724, -4.89768, 8.03485, 1.33", "6.92834, -6.00167, 8.85622, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000013979116643
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.83129, -6.95861, -0.295096, 0.562123", "10.4377, -19.887, -0.295096, 0.562123", "18.0441, -32.8154, -0.295096, 0.562123" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "0.101209, 14.8701, -1.7964, 2.0", "-10.016, 18.413, -5.83678, 0.67", "-16.8066, 20.3526, -7.14448, 0.67", "-18.1347, 20.6499, -7.28258, 0.67", "-20.6888, 20.983, -7.43438, 0.67", "-22.6248, 21.0602, -7.47676, 0.67", "-25.0296, 21.0502, -7.53557, 0.67", "-27.2261, 20.7864, -7.0239, 0.67", "-28.4882, 20.6169, -6.82003, 0.67", "-30.7451, 20.3154, -6.26675, 0.67", "-32.3566, 20.1854, -5.69698, 0.67", "-35.8369, 20.0913, -4.28711, 0.67", "-41.2643, 20.3733, -2.27771, 0.67", "-42.9226, 20.5519, -1.49537, 0.67", "-45.9986, 21.1486, 0.175522, 0.67", "-48.3172, 21.8645, 1.55786, 0.67", "-49.8207, 22.3695, 2.50952, 0.67", "-53.4327, 23.8249, 5.15835, 0.67", "-59.6312, 26.6024, 9.51445, 0.67", "-61.192, 27.4032, 10.5616, 0.67", "-63.5432, 28.7564, 11.9967, 0.67", "-66.2487, 30.4512, 13.515, 0.67", "-69.5307, 32.6446, 15.3449, 0.67", "-71.8053, 34.2986, 16.5717, 0.67", "-75.3969, 37.1647, 17.9466, 0.67", "-77.3456, 38.8557, 18.685, 0.67", "-79.0089, 40.314, 19.2802, 0.67", "-80.9923, 42.2227, 19.8998, 0.67", "-82.5399, 43.5726, 20.3567, 0.67", "-84.3064, 45.0722, 20.9558, 0.67", "-86.0047, 46.3183, 21.5702, 0.67", "-88.0873, 47.7201, 22.3206, 0.67", "-91.4958, 49.8894, 23.5159, 0.67", "-94.9355, 52.1228, 24.7733, 0.67", "-97.442, 53.7303, 25.4969, 0.33", "-98.4987, 54.4462, 25.726, 0.67", "-99.8689, 55.4548, 25.893, 0.33", "-101.136, 56.4493, 25.9192, 0.33", "-103.68, 58.3788, 25.9098, 0.33", "-107.981, 61.6296, 25.9078, 0.33", "-108.726, 62.1683, 25.9598, 0.67", "-111.331, 64.0716, 26.1912, 0.33", "-113.415, 65.5309, 26.4559, 0.33", "-116.399, 67.4262, 27.0243, 0.67", "-120.5, 69.8174, 28.3088, 0.33", "-121.138, 70.1549, 28.6571, 0.67", "-126.011, 74.726, 32.3512, 0.67", "-130.531, 79.2629, 36.507, 0.67", "-134.861, 83.3408, 41.2932, 0.67", "-139.19, 87.3728, 46.1185, 0.67", "-144.447, 91.4909, 49.8184, 0.67", "-149.374, 96.6407, 52.5552, 0.67", "-154.471, 101.428, 55.619, 0.67", "-158.964, 106.886, 58.5006, 0.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.101209, 14.8701, -1.7964, 2.0", "3.58119, 24.6658, -6.27245, 1.33", "4.70523, 27.8298, -7.71821, 1.33", "6.70391, 33.4558, -10.2889, 1.33", "8.00741, 37.125, -11.9655, 1.33" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "2.24241, -6.02954, -12.572, 1.33", "11.6419, -7.71371, -14.5627, 0.67", "14.4333, -7.98702, -14.7743, 0.67", "20.4472, -8.74232, -15.5559, 0.67", "22.613, -9.2302, -15.858, 0.67", "25.3211, -9.90529, -16.2664, 0.67", "32.6498, -11.4723, -17.9172, 0.67", "39.9159, -13.08, -20.2506, 0.67", "46.0892, -14.4663, -22.2773, 0.67", "51.9831, -15.7696, -24.1369, 0.67", "58.6673, -17.6574, -26.2595, 0.67", "66.2546, -20.1019, -29.0857, 0.67", "68.1617, -20.8298, -29.887, 0.67", "72.6538, -22.6333, -32.1727, 0.67", "77.9275, -24.8434, -34.7929, 0.67", "81.4745, -26.2336, -36.4944, 0.67", "88.2259, -29.2423, -39.3069, 0.67", "92.9144, -31.2513, -40.9232, 0.67", "97.3531, -32.7262, -42.3522, 0.67", "104.252, -34.3906, -44.4111, 0.67", "112.209, -36.1947, -46.6429, 0.67", "120.503, -37.874, -49.0171, 0.67", "125.922, -38.982, -50.4851, 0.67", "132.499, -40.205, -52.3723, 0.67", "135.846, -40.8821, -53.3569, 0.67", "143.986, -42.3151, -55.9969, 0.67", "152.933, -43.973, -58.5052, 0.67", "155.402, -44.44, -59.0761, 0.67", "160.329, -45.6691, -59.8946, 0.67", "162.415, -46.3373, -60.0839, 0.67", "169.216, -48.6853, -59.9437, 0.67", "178.951, -52.0719, -58.3562, 0.67", "181.274, -53.0446, -57.5658, 0.67", "184.151, -54.4911, -56.3443, 0.67", "186.492, -55.8832, -55.1955, 0.67", "189.069, -57.6215, -53.8357, 0.67", "192.62, -60.6234, -51.8624, 0.33", "195.885, -63.4726, -50.7782, 0.67", "197.832, -65.0088, -50.1016, 0.33", "201.306, -67.5222, -48.8153, 0.33", "201.665, -67.7384, -48.6983, 0.67", "203.66, -68.894, -48.1978, 0.33", "205.916, -70.286, -47.8332, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "2.24241, -6.02954, -12.572, 1.33", "3.53987, -8.39984, -12.4707, 0.67", "4.19451, -9.59578, -12.4196, 0.67", "6.829, -14.4087, -12.214, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.79032, 3.96968, -4.52551, 0.67", "10.4851, 1.93264, -12.5431, 0.67", "11.3493, 1.2079, -15.5844, 0.67", "12.3686, 0.34582, -19.0618, 0.67", "12.9369, -0.165466, -20.8912, 0.67", "16.8141, -2.62069, -30.3473, 0.67", "17.7619, -3.09854, -32.2463, 0.67", "18.8675, -3.59091, -33.9487, 0.67", "21.8564, -5.03041, -38.5816, 0.67", "22.969, -5.5233, -40.1995, 0.67", "26.4638, -7.16615, -44.7632, 0.67", "27.9497, -7.92571, -46.3307, 0.67", "28.7902, -8.38552, -47.6747, 0.67", "30.073, -9.3868, -50.5599, 0.67", "31.3001, -10.1945, -53.2224, 0.67", "32.2443, -10.7336, -55.611, 0.67", "33.0627, -11.1404, -58.5088, 0.67", "35.3398, -11.2271, -65.7049, 0.67", "36.4653, -11.1098, -68.4201, 0.67", "38.8688, -10.4232, -72.6124, 0.67", "40.1955, -10.0654, -75.0135, 0.67", "41.935, -9.62389, -77.8363, 0.67", "43.3822, -9.36596, -79.7852, 0.67", "45.5492, -9.03722, -82.4322, 0.67", "49.146, -8.72523, -87.384, 0.67", "53.286, -8.55748, -93.9222, 0.67", "55.7797, -8.66899, -97.6789, 0.67", "56.6954, -8.73563, -99.01, 0.33", "58.3888, -8.73211, -101.81, 1.33", "60.9115, -8.3617, -106.773, 0.67", "62.1546, -8.03047, -109.687, 0.67", "63.1678, -7.37201, -112.175, 0.67", "63.9049, -6.71115, -114.343, 0.67", "65.0845, -5.56966, -117.584, 0.67", "66.4661, -4.28071, -120.783, 1.33", "68.0506, -3.19872, -124.533, 0.33", "68.2987, -3.18904, -125.225, 0.67", "68.5499, -3.41249, -126.211, 0.33", "69.082, -4.34509, -128.592, 0.33", "69.4415, -5.04932, -130.131, 1.33", "70.3795, -7.10911, -134.575, 0.67", "71.3688, -9.11432, -139.175, 1.33", "72.8436, -11.7042, -145.6, 0.33", "73.332, -12.5006, -147.677, 0.67", "74.3119, -13.8903, -151.776, 0.33", "75.1483, -14.9219, -154.957, 1.33", "76.4447, -16.1064, -159.214, 0.33", "76.8799, -16.389, -160.447, 0.67", "77.4273, -16.646, -161.945, 0.33", "78.9481, -17.2257, -166.095, 1.33", "80.4329, -17.7019, -170.246, 0.33", "81.3497, -17.8554, -172.828, 0.67", "82.169, -17.7607, -175.496, 0.33", "82.4743, -17.5768, -176.603, 0.33", "82.8406, -17.0818, -177.833, 0.67", "83.1693, -16.0963, -178.692, 0.33", "83.2894, -15.1789, -178.992, 0.67", "83.3335, -13.7448, -179.119, 0.33", "83.2281, -12.7205, -179.074, 0.67", "83.1587, -12.0023, -179.042, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.79032, 3.96968, -4.52551, 0.67", "11.0777, 3.846, -5.31426, 0.67", "12.9089, 3.61895, -6.35997, 0.67", "14.9138, 3.17903, -7.68008, 0.67", "17.8249, 2.41219, -9.59182, 0.67", "18.9219, 2.14766, -10.2363, 0.67", "21.3532, 1.56533, -11.508, 0.67", "23.7931, 0.816582, -12.8759, 0.67", "24.9564, 0.40788, -13.6453, 0.67", "26.1926, -0.192639, -14.508, 0.67", "28.387, -1.24903, -15.8719, 0.67", "29.7433, -1.98896, -16.703, 0.67", "31.2469, -2.69517, -17.4888, 0.67", "35.2257, -4.52754, -19.5901, 0.67", "36.8517, -5.33319, -20.5237, 0.67", "40.2184, -7.11329, -22.5084, 0.67", "43.0873, -8.70523, -24.1729, 0.67", "46.6129, -10.3896, -26.0237, 0.67", "49.7083, -11.6707, -27.4896, 0.67", "53.4056, -13.002, -29.1185, 0.67", "55.0558, -13.5011, -29.8878, 0.67", "56.359, -13.8398, -30.4948, 1.33", "59.4523, -14.4525, -31.8703, 0.67", "63.2177, -15.176, -33.5002, 0.67", "66.3502, -15.4613, -34.6326, 0.33", "68.023, -15.4939, -35.1351, 1.33", "70.2523, -15.4826, -35.7269, 0.33", "70.9249, -15.456, -35.8708, 1.33", "72.9906, -15.3623, -36.1128, 0.33", "74.6913, -15.1085, -36.0719, 0.67", "76.3024, -14.7841, -35.8933, 0.33", "77.7011, -14.3552, -35.7358, 0.33", "78.7579, -13.9208, -35.6235, 0.67", "80.3877, -13.0601, -35.4969, 0.33", "81.0964, -12.6426, -35.4741, 0.33", "81.4909, -12.4174, -35.4792, 0.67", "82.3124, -11.9309, -35.4907, 0.33", "83.2003, -11.4254, -35.5022, 1.33", "85.0311, -10.3992, -35.725, 0.67", "87.2785, -9.25309, -35.8516, 0.67", "88.3653, -8.811, -35.8005, 0.67", "89.5804, -8.36969, -35.7282, 0.33", "90.0195, -8.23349, -35.6924, 1.33", "93.0062, -7.43451, -35.3174, 0.67", "97.3665, -6.64299, -34.2421, 0.33", "99.207, -6.40882, -33.1635, 0.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-10.2292, 2.5833, -8.80115, 1.33", "-11.9666, 4.07873, -11.5721, 0.67", "-12.7898, 4.41809, -12.8498, 0.67", "-14.7985, 5.43161, -16.0424, 0.67", "-19.0933, 7.83352, -22.1808, 0.67", "-20.7817, 9.15233, -25.3769, 0.67", "-22.0074, 10.0811, -27.8069, 0.67", "-24.656, 12.3836, -33.3156, 0.67", "-26.6651, 14.3346, -37.3213, 0.67", "-29.1414, 16.8974, -42.3551, 0.67", "-33.1679, 20.41, -50.1404, 0.67", "-34.648, 21.7147, -53.2405, 0.67", "-36.7047, 23.6663, -57.4533, 0.67", "-40.4511, 26.7541, -63.5407, 0.67", "-42.7405, 28.0677, -66.4402, 0.67", "-45.2887, 28.9468, -68.7806, 0.67", "-47.6186, 29.2441, -70.4487, 0.67", "-50.2997, 29.0319, -72.4458, 0.67", "-55.3034, 27.559, -76.0477, 0.67", "-58.4876, 26.4008, -78.0054, 0.67", "-63.0233, 24.6662, -80.8879, 0.67", "-67.8756, 22.3836, -84.3252, 0.67", "-72.1279, 19.7303, -87.5961, 0.67", "-73.387, 18.733, -88.7018, 0.67", "-75.8707, 16.1786, -91.3455, 0.67", "-79.2136, 12.1505, -95.1979, 0.67", "-80.6343, 10.4533, -96.8349, 0.67", "-83.4265, 7.74512, -99.9364, 0.67", "-84.6573, 6.50535, -101.378, 0.67", "-86.7209, 4.70749, -104.423, 0.67", "-87.7808, 3.8341, -106.497, 0.33", "-88.9336, 3.05517, -108.997, 0.67", "-91.1136, 2.00004, -114.334, 0.67", "-91.8017, 1.73771, -116.137, 0.67", "-96.0033, 0.0886509, -127.074, 0.67", "-97.8981, -0.678685, -131.949, 0.67", "-98.6374, -1.04523, -133.801, 1.33", "-101.54, -2.71921, -140.407, 0.33", "-102.227, -3.15406, -141.55, 0.33", "-103.927, -4.20599, -143.564, 0.67", "-106.266, -5.70312, -145.022, 0.33", "-109.188, -7.54617, -146.27, 0.67", "-111.793, -9.15384, -147.143, 0.33", "-115.787, -11.7175, -147.812, 0.67", "-117.905, -13.0193, -148.085, 0.33", "-118.966, -13.6368, -148.209, 0.67", "-120.888, -14.8272, -148.418, 0.33", "-122.575, -15.9213, -148.565, 1.33", "-125.859, -18.4053, -148.753, 0.33", "-127.272, -19.396, -148.585, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.2292, 2.5833, -8.80115, 1.33", "-12.4742, -0.0560681, -10.2, 0.67", "-13.4603, -1.33182, -10.8746, 0.67", "-14.9586, -3.69685, -12.0598, 0.67", "-16.2839, -5.7347, -13.1236, 0.67", "-17.971, -8.84925, -14.6816, 0.67", "-19.503, -11.6644, -16.0436, 0.67", "-20.3229, -13.2795, -16.843, 0.67", "-21.2481, -15.3495, -17.8211, 0.67", "-22.4951, -18.732, -19.5218, 0.67", "-23.8013, -22.1576, -21.397, 0.67", "-24.9024, -24.7148, -22.8356, 0.67", "-26.4616, -27.7935, -24.9348, 0.67", "-27.8787, -30.3306, -26.8461, 0.67", "-29.8521, -33.6297, -29.4954, 0.67", "-31.5626, -36.5563, -31.9817, 0.67", "-32.4441, -37.8333, -33.2248, 0.67", "-34.0167, -40.2925, -35.8473, 0.67", "-34.5317, -40.9391, -36.6761, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.99552, -0.664275, -4.42116, 2.0", "-8.65118, 1.80065, -3.11738, 0.67", "-10.2146, 6.98376, -0.57505, 0.67", "-11.5369, 10.2988, 0.664086, 0.67", "-12.784, 13.0538, 1.39546, 0.67", "-14.5714, 16.4343, 1.9935, 0.67", "-16.8467, 20.74, 2.40884, 0.67", "-20.036, 26.3647, 2.19413, 0.67", "-23.2626, 31.8128, 1.21803, 0.67", "-24.7515, 34.4036, 0.540093, 0.67", "-27.6811, 39.4447, -1.03677, 0.67", "-29.4754, 42.5297, -2.08536, 0.67", "-32.8099, 47.9975, -3.84093, 0.67", "-33.8427, 49.8567, -4.48933, 0.67", "-34.9383, 51.971, -4.97727, 0.67", "-35.8174, 53.6717, -5.30904, 0.67", "-36.3825, 54.7295, -5.47347, 0.67", "-38.1933, 57.6281, -5.78561, 0.67", "-39.8499, 60.089, -6.02764, 0.67", "-42.6031, 64.1576, -6.37945, 0.67", "-44.164, 66.4079, -6.55072, 0.67", "-45.6518, 68.651, -6.70991, 0.67", "-48.1193, 72.4842, -6.9877, 0.67", "-49.148, 74.0083, -7.11381, 0.33" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.99552, -0.664275, -4.42116, 2.0", "-8.2795, -3.08272, -5.7984, 0.67", "-8.59491, -4.35612, -6.3955, 0.67", "-9.11374, -6.49319, -7.2846, 0.67", "-9.66357, -8.2409, -8.10487, 0.67", "-10.3956, -10.329, -9.14113, 0.67", "-11.1884, -12.4825, -10.3233, 0.67", "-12.7002, -15.9817, -12.4464, 0.67", "-13.5234, -17.7061, -13.6269, 0.67", "-15.1377, -20.2304, -15.6285, 0.67", "-15.1377, -20.2304, -15.6285, 0.67", "-17.211, -22.2639, -17.7795, 0.67", "-18.4903, -23.382, -19.1041, 0.67", "-19.9304, -24.4868, -20.6365, 0.67", "-22.4099, -26.0706, -23.0415, 0.67", "-24.1234, -27.1533, -24.6699, 0.67", "-25.8722, -28.2715, -26.3554, 0.67", "-26.8596, -28.8196, -27.2555, 0.67", "-28.09, -29.5366, -28.3936, 0.67", "-30.5612, -30.8307, -30.3798, 0.67", "-31.4698, -31.3148, -31.1078, 0.67", "-33.5794, -32.4487, -32.5908, 0.67", "-36.4588, -34.0024, -34.3114, 0.67", "-37.8906, -34.7242, -34.9925, 0.67", "-40.0661, -35.6926, -35.7656, 0.67", "-42.0586, -36.3886, -36.2253, 0.67", "-44.7727, -37.1726, -36.8355, 0.67", "-46.67, -37.5833, -37.2791, 0.67", "-50.4079, -38.2258, -38.4268, 0.67", "-52.9353, -38.5487, -39.4567, 0.67", "-53.9018, -38.6529, -39.9601, 0.67", "-56.9044, -38.8375, -41.7631, 0.67", "-58.7911, -38.9114, -43.2601, 0.67", "-60.5952, -39.0614, -45.1002, 0.67", "-61.9028, -39.2449, -46.8496, 0.67", "-62.9472, -39.5595, -48.7824, 0.67", "-63.1566, -39.6832, -49.2162, 0.67", "-64.0024, -40.3787, -51.075, 0.67", "-64.3966, -40.8554, -52.0464, 0.67", "-64.9949, -41.7119, -53.7154, 0.67", "-66.3327, -43.8094, -57.8885, 0.67", "-67.3441, -45.5119, -61.2098, 0.33", "-67.4878, -45.7204, -61.6195, 1.33", "-67.9868, -46.3112, -62.7553, 0.33", "-69.0169, -47.5621, -65.0681, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "22.185, -55.7585, 3.00023, 0.67", "23.6674, -61.1301, 5.72872, 0.67", "25.1655, -66.5584, 8.48605, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "22.185, -55.7585, 3.00023, 0.67", "25.0414, -55.1739, 3.73066, 0.33", "28.5581, -54.454, 4.62998, 0.33", "30.2956, -54.0983, 5.07431, 0.33", "33.2479, -53.494, 5.82926, 0.33", "38.0633, -52.5084, 7.06069, 0.33", "46.6073, -50.7595, 9.2456, 0.33", "57.5979, -46.5015, 12.538, 0.33", "68.6112, -43.167, 16.7035, 0.33", "79.5051, -40.591, 21.6482, 0.33", "100.241, -32.7669, 31.6139, 0.33", "109.102, -24.7478, 34.2472, 0.33", "119.895, -18.9812, 34.4093, 0.33", "131.291, -14.7741, 32.9317, 0.33", "142.318, -9.82829, 31.0042, 0.33", "153.214, -4.66851, 28.9064, 0.33", "163.702, 1.53186, 27.7567, 0.33", "174.559, 7.11502, 28.6084, 0.33", "186.18, 10.3552, 30.6632, 0.33", "197.182, 14.6577, 33.8581, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "6.92834, -6.00167, 8.85622, 1.33", "10.3409, -9.36015, 9.04147, 0.67", "12.8333, -11.9934, 9.08899, 0.67", "16.0684, -15.23, 9.1315, 0.67", "20.464, -19.4616, 9.30765, 0.67", "22.8544, -21.6448, 9.44342, 0.67", "30.5745, -28.6011, 9.87853, 0.67", "34.4742, -31.9115, 10.1565, 0.67", "37.671, -34.5574, 10.339, 0.67", "40.9108, -37.1059, 10.4247, 0.33", "42.4463, -38.3746, 10.4819, 0.33", "44.9815, -40.2867, 10.6648, 0.33", "53.6515, -45.2413, 12.9509, 0.33", "61.0176, -51.4779, 16.3845, 0.33", "68.7724, -56.8741, 20.3455, 0.33", "75.6841, -62.4131, 25.4926, 0.33", "82.1847, -67.5942, 31.4795, 0.33", "87.6363, -74.084, 37.2334, 0.33", "92.1022, -81.7287, 42.3869, 0.33", "97.3359, -88.0577, 48.5103, 0.33", "102.63, -94.881, 54.0197, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.92834, -6.00167, 8.85622, 1.33", "11.4474, -1.88041, 8.65487, 0.67", "14.4, 0.955838, 8.75302, 0.67", "20.8144, 7.38469, 9.19427, 0.67", "29.1775, 15.8459, 9.92353, 0.67", "32.5262, 19.316, 10.2442, 0.67", "38.5767, 25.7125, 10.8378, 0.33", "39.3328, 26.6466, 10.9783, 0.67", "40.1312, 27.7063, 11.2888, 0.33", "40.5753, 28.3544, 11.6104, 0.67", "41.7569, 30.7765, 12.632, 0.33", "42.4665, 32.672, 13.3118, 0.67", "43.9295, 37.1619, 14.1385, 0.33", "44.2101, 38.0731, 14.2572, 0.67", "45.52, 42.5634, 14.6643, 0.33", "46.5162, 46.5841, 15.1956, 0.67", "47.968, 52.649, 15.3934, 0.67", "48.5763, 55.3472, 15.3412, 0.67", "49.5364, 59.5391, 15.0566, 0.67", "49.8594, 60.7819, 14.9821, 1.33", "51.8975, 69.0962, 14.5392, 0.67", "53.8181, 76.6998, 14.5165, 1.33", "55.3508, 82.0626, 14.3299, 0.67", "56.3064, 85.0364, 14.1441, 1.33", "59.6718, 93.6324, 13.396, 0.67", "62.1314, 99.3345, 12.6618, 0.67", "64.1076, 103.562, 11.7973, 0.67", "67.098, 109.82, 10.5148, 0.67", "68.1287, 111.923, 9.90658, 2.0", "70.269, 116.431, 8.33135, 0.67", "72.1116, 120.414, 6.59689, 0.67", "73.7859, 124.249, 4.84306, 0.33", "74.027, 124.998, 4.52524, 1.33", "74.708, 127.85, 3.84399, 0.33", "75.0153, 129.094, 3.72839, 1.33", "75.7051, 131.367, 4.13778, 0.33", "76.1644, 132.566, 4.57395, 1.33", "77.2675, 135.211, 5.7301, 0.33", "79.1174, 139.479, 7.72504, 4.67", "81.3485, 144.403, 10.2264, 0.33", "83.5714, 149.292, 12.8256, 2.67", "84.8911, 152.278, 14.4742, 0.33", "85.3572, 153.3, 15.0376, 1.33", "91.7896, 164.437, 14.9427, 1.33", "96.8014, 176.281, 14.7682, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "18.0441, -32.8154, -0.295096, 0.562123", "25.6505, -45.7437, -0.295096, 0.562123", "33.2568, -58.6721, -0.295096, 0.562123" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "8.00741, 37.125, -11.9655, 1.33", "4.84084, 39.5526, -15.7656, 0.67", "3.27774, 40.5524, -17.6472, 0.67", "0.355145, 42.4327, -21.3913, 0.67", "-0.222967, 42.7815, -22.0701, 0.67", "-3.93789, 44.747, -26.155, 0.67", "-6.05318, 45.7693, -28.4242, 0.67", "-9.45864, 47.0761, -31.5842, 0.67", "-11.7778, 47.67, -33.6795, 0.67", "-15.1763, 48.2949, -36.5907, 0.67", "-17.3663, 48.5748, -38.2895, 0.67", "-21.9477, 48.5871, -41.3711, 0.67", "-27.1144, 48.1261, -44.7838, 0.67", "-30.3271, 47.5587, -46.737, 0.67", "-32.6712, 46.7905, -48.214, 0.67", "-34.9867, 45.6152, -49.9371, 0.67", "-37.798, 43.7657, -52.2268, 0.67", "-40.0986, 41.6482, -54.2158, 0.67", "-42.0251, 39.2583, -56.314, 0.67", "-43.9287, 36.9919, -58.3696, 0.67", "-45.532, 35.0859, -60.301, 0.67", "-46.9495, 33.6563, -62.0531, 0.67", "-48.642, 32.1191, -64.1656, 0.67", "-50.756, 30.3577, -66.8051, 0.67", "-54.0022, 28.1889, -70.4978, 0.67", "-56.1985, 27.2512, -72.4962, 0.67", "-60.29, 25.7599, -76.2963, 0.67", "-62.8727, 24.8882, -78.7784, 0.67", "-66.7321, 23.9352, -82.5688, 0.67", "-69.6524, 23.4925, -85.364, 0.67", "-73.4617, 22.7212, -89.1247, 0.67", "-77.7464, 21.614, -93.2574, 0.67", "-79.4937, 21.3152, -95.0811, 0.67", "-82.4402, 20.9125, -98.1645, 0.67", "-84.0467, 20.6314, -99.8777, 0.67", "-87.0769, 20.0228, -103.389, 0.67", "-91.5603, 19.3546, -108.44, 0.67", "-94.6488, 19.1202, -111.65, 0.67", "-96.6203, 18.9831, -113.763, 0.67", "-98.474, 18.8396, -115.752, 0.67", "-102.283, 18.7998, -120.05, 0.67", "-105.348, 19.0099, -123.564, 0.33", "-108.467, 19.146, -126.949, 0.33", "-109.746, 19.1401, -128.161, 0.67", "-111.451, 19.1902, -129.642, 0.33", "-115.353, 19.3994, -132.267, 0.33", "-118.193, 19.2566, -133.536, 0.33", "-121.574, 18.7501, -134.547, 0.67", "-124.879, 18.2541, -135.083, 0.33", "-126.479, 17.941, -135.237, 0.67", "-129.118, 17.3558, -135.478, 0.33", "-132.172, 16.5331, -136.004, 0.33", "-134.315, 15.9804, -136.703, 1.33", "-136.266, 15.4296, -137.561, 0.33", "-137.997, 14.8579, -138.395, 0.67", "-140.991, 13.9156, -139.819, 0.33", "-144.82, 12.6157, -141.852, 0.33", "-145.205, 12.488, -142.053, 0.67", "-147.893, 11.4131, -143.653, 0.33", "-149.828, 10.5743, -144.727, 0.33", "-150.929, 10.0917, -145.255, 0.67", "-154.328, 8.4691, -146.561, 0.33", "-155.615, 7.87681, -146.931, 0.67", "-160.085, 5.6499, -148.151, 0.33", "-162.655, 4.22324, -148.771, 1.33", "-165.747, 2.39439, -149.336, 0.33", "-168.015, 1.11736, -149.881, 0.33", "-169.707, 0.195646, -150.303, 0.33", "-170.454, -0.248773, -150.629, 0.67", "-172.626, -1.65571, -152.021, 0.33", "-173.282, -2.10045, -152.517, 0.67", "-178.059, -5.51113, -156.613, 0.33", "-179.426, -6.44692, -157.905, 0.67", "-182.685, -8.8487, -161.423, 0.33", "-183.975, -9.82789, -162.979, 1.33" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "8.00741, 37.125, -11.9655, 1.33", "8.10059, 44.3378, -13.5096, 1.33", "8.19059, 51.304, -15.0009, 1.33" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.829, -14.4087, -12.214, 1.33", "9.27946, -15.5399, -13.3087, 0.67", "14.1913, -17.7462, -14.7649, 0.67", "17.0506, -19.2343, -15.5779, 0.67", "19.237, -20.5479, -16.2641, 0.67", "22.6258, -22.4565, -17.3014, 0.67", "26.1011, -24.4414, -18.3832, 0.67", "29.5471, -26.3763, -19.6649, 0.67", "32.6275, -27.9624, -20.8061, 0.67", "36.5731, -30.0217, -22.6412, 0.67", "39.6244, -31.5945, -24.3859, 0.67", "43.7439, -33.8436, -27.1943, 0.67", "48.4009, -36.5672, -30.9072, 0.67", "51.3027, -38.1943, -33.446, 0.67", "53.6482, -39.4029, -35.7446, 0.67", "56.1613, -40.5461, -38.6584, 0.67", "57.5605, -41.14, -40.5974, 0.67", "58.8436, -41.5813, -42.5321, 0.67", "60.1764, -42.0208, -44.5866, 0.67", "62.7789, -42.6115, -49.4374, 0.67", "65.2739, -42.5296, -54.2011, 0.67", "66.3318, -42.2577, -56.4767, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.829, -14.4087, -12.214, 1.33", "5.151, -17.2003, -15.8708, 0.67", "4.43353, -19.0343, -18.4462, 0.67", "4.03163, -20.5369, -20.618, 0.67", "3.01448, -24.4155, -26.6785, 0.67", "2.42064, -26.3459, -29.9333, 0.67", "1.31936, -29.5739, -35.6307, 0.67", "0.760231, -32.2788, -40.2908, 0.67", "0.699014, -33.0821, -41.7148, 0.67", "0.800654, -34.7007, -44.5974, 0.67", "1.10219, -35.6244, -46.6052, 0.67", "1.40412, -36.3015, -47.7616, 0.67", "2.3201, -37.8265, -50.1676, 0.67", "2.91556, -39.0923, -51.5565, 0.67", "3.58344, -40.5588, -52.9523, 0.67", "5.31654, -45.1611, -57.2885, 0.67", "6.3474, -47.9086, -59.9579, 0.67", "6.72052, -48.911, -60.9608, 0.67", "7.62373, -51.7365, -63.9396, 0.67", "8.14562, -53.7574, -66.2904, 0.67", "8.9802, -58.2662, -71.482, 0.67", "9.13254, -59.7882, -73.312, 0.67", "9.19017, -60.7033, -74.4994, 0.67", "9.26555, -62.2067, -76.8392, 0.67", "9.41815, -63.78, -79.8931, 0.67", "9.48039, -65.2996, -82.8858, 0.67", "9.64411, -67.8599, -87.3431, 0.67", "9.60763, -69.962, -91.4027, 0.67", "9.48545, -71.8242, -95.2501, 0.67", "9.34436, -73.8576, -99.5106, 0.67", "9.19117, -74.7934, -101.551, 0.67", "8.75613, -76.0622, -104.669, 1.33", "7.54947, -78.3537, -109.867, 0.67", "7.27041, -78.8618, -110.971, 0.33", "6.94619, -79.5186, -112.073, 1.33", "5.72162, -81.5704, -115.348, 0.67", "5.12314, -82.6538, -117.175, 0.33", "4.47346, -83.8778, -119.095, 0.33", "4.2913, -84.2879, -119.584, 0.67", "3.87846, -85.2578, -120.76, 0.33", "3.61795, -85.8729, -121.504, 0.67", "2.51134, -88.5702, -124.414, 0.33", "2.19382, -89.194, -125.029, 0.67", "1.51265, -90.6495, -126.414, 0.33", "1.37577, -90.938, -126.684, 0.67", "-0.15432, -94.0656, -129.477, 0.33", "-0.534656, -94.8055, -130.049, 0.67", "-2.01465, -97.36, -131.656, 0.33", "-2.75083, -98.7684, -132.596, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "99.207, -6.40882, -33.1635, 0.33", "100.073, -6.14922, -33.7443, 0.67", "101.439, -5.6707, -34.6683, 0.33", "102.358, -5.33003, -35.2544, 1.33", "103.465, -4.83213, -36.0164, 0.33", "105.521, -4.02857, -37.3457, 0.67", "106.652, -3.63989, -38.0993, 0.33", "107.24, -3.46751, -38.5167, 0.33", "107.963, -3.3185, -39.1093, 0.67", "109.473, -3.11228, -40.3312, 0.33", "111.127, -2.96379, -41.6427, 0.33", "112.114, -3.02885, -42.3187, 0.67", "113.05, -3.24377, -43.023, 0.33", "114.456, -3.72659, -44.2272, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "99.207, -6.40882, -33.1635, 0.33", "100.974, -8.46507, -35.4293, 0.33", "102.384, -9.23909, -36.8793, 0.67", "104.139, -10.0361, -38.4105, 0.67", "105.242, -10.6641, -39.2677, 0.67", "109.63, -13.1989, -42.2188, 0.67", "112.72, -15.0691, -44.0155, 0.67", "115.157, -16.5294, -45.2346, 0.67", "117.025, -17.8829, -46.0913, 0.67", "119.777, -20.1431, -47.5759, 0.67", "121.294, -21.6492, -48.4332, 0.67", "122.704, -23.4937, -49.2246, 0.67", "124.43, -26.3773, -50.3237, 0.67", "126.684, -30.887, -51.9307, 0.67", "128.727, -35.8699, -53.9593, 0.67", "129.466, -37.8701, -54.8291, 0.33", "129.929, -39.2108, -55.4364, 1.33", "130.79, -41.3632, -56.787, 0.33", "131.786, -43.6115, -58.5052, 1.33", "133.632, -48.1279, -61.9314, 0.33", "134.253, -49.6431, -62.9529, 0.33", "135.112, -51.4291, -64.169, 1.33", "138.398, -57.6125, -68.2487, 0.67", "139.134, -58.7987, -69.103, 0.67", "141.201, -61.8349, -71.2208, 0.33", "142.76, -63.9788, -72.5416, 1.33", "144.499, -66.4642, -73.8629, 0.33", "145.338, -67.7021, -74.3833, 0.33", "148.402, -71.8484, -75.6833, 1.33", "150.02, -73.727, -76.4157, 0.33", "151.38, -75.1433, -77.1558, 0.67", "153.622, -77.4557, -78.6451, 0.33", "153.864, -77.6931, -78.8167, 0.67", "155.171, -78.902, -79.6264, 0.33", "155.547, -79.2624, -79.7186, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-34.5317, -40.9391, -36.6761, 0.67", "-35.6407, -41.9194, -38.6117, 0.67", "-36.8204, -42.8391, -40.4209, 0.67", "-38.7142, -44.3157, -42.9812, 0.67", "-42.0274, -46.8682, -47.6382, 0.67", "-44.5487, -49.5864, -51.9487, 0.67", "-46.075, -51.5718, -54.8158, 0.67", "-46.8375, -52.8478, -56.5849, 0.67", "-47.6152, -54.6316, -58.8813, 0.67", "-48.6784, -57.4839, -62.5591, 0.67", "-50.1569, -61.7642, -67.8589, 0.67", "-51.4864, -65.4033, -72.0985, 0.67", "-52.6993, -68.7168, -76.1929, 0.67", "-53.4726, -70.8272, -78.8311, 0.33", "-54.3861, -73.085, -81.5082, 0.67", "-55.1547, -74.6435, -83.2271, 0.33", "-56.0315, -75.9959, -84.8112, 1.33", "-57.2107, -77.8976, -86.9046, 0.33", "-58.0116, -79.2075, -88.2209, 0.67", "-59.6896, -82.0889, -91.0852, 0.33", "-61.1295, -85.256, -93.7827, 1.33", "-62.2546, -88.2834, -96.1974, 0.33", "-62.4685, -88.9649, -96.672, 0.67", "-62.8119, -90.3033, -97.433, 0.33", "-62.9768, -91.0661, -97.7767, 0.67", "-63.3069, -93.5219, -98.911, 0.33", "-63.3069, -93.5219, -98.911, 0.67", "-63.4647, -97.704, -99.9363, 0.33", "-63.5143, -99.5687, -100.43, 0.33", "-63.5746, -101.131, -100.905, 0.67", "-63.7448, -106.396, -102.735, 0.33", "-64.0059, -109.626, -104.237, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-34.5317, -40.9391, -36.6761, 0.67", "-37.3378, -43.5097, -36.9828, 0.67", "-41.9957, -47.3807, -37.1209, 0.33", "-48.1232, -51.5623, -37.221, 0.33", "-49.237, -52.254, -37.1864, 0.67", "-54.0296, -55.1789, -36.959, 0.33", "-56.6462, -56.7784, -36.8172, 0.33", "-61.4713, -59.3253, -36.5588, 0.33", "-65.7895, -61.2369, -36.125, 0.33", "-71.9362, -63.7721, -35.2177, 0.33", "-74.6357, -64.9739, -34.7388, 0.33", "-75.2862, -65.2972, -34.6098, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-49.148, 74.0083, -7.11381, 0.33", "-52.3316, 73.6221, -8.63743, 0.67", "-54.3035, 73.3829, -9.58115, 0.33", "-55.664, 73.2178, -10.2323, 0.67", "-65.7424, 71.254, -16.8808, 0.67", "-74.956, 69.3546, -24.6997, 0.67", "-83.3053, 65.3918, -32.7132, 0.67", "-90.433, 61.239, -41.7456, 0.67", "-97.2222, 56.8982, -50.9487, 0.67", "-104.694, 54.1434, -60.2342, 0.67", "-112.809, 50.2188, -68.5026, 0.67", "-122.627, 47.8594, -75.4081, 0.67", "-130.749, 44.8907, -84.0596, 0.67", "-140.589, 43.1004, -91.1026, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-49.148, 74.0083, -7.11381, 0.33", "-49.3138, 77.0631, -10.4272, 0.33", "-49.5102, 80.6821, -14.3526, 0.33", "-49.8114, 86.2314, -20.3718, 0.33", "-49.957, 88.9136, -23.281, 0.67", "-48.9657, 95.7952, -29.8432, 0.67", "-49.2249, 103.178, -35.9117, 0.67", "-50.2554, 110.559, -41.901, 0.67", "-51.8408, 118.845, -46.3978, 0.67", "-52.7141, 126.619, -51.8944, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.1655, -66.5584, 8.48605, 0.67", "25.5925, -70.1318, 7.437, 0.67", "26.1039, -72.4291, 6.63809, 0.67", "26.47, -73.4904, 6.26285, 0.67", "27.8432, -77.4156, 4.71242, 0.67", "28.7712, -80.1165, 3.71623, 0.67", "30.0956, -84.3716, 2.25912, 0.67", "31.0589, -88.1382, 0.953806, 0.67", "32.0213, -92.1714, -0.342321, 0.67", "32.7444, -96.0023, -1.61413, 0.67", "33.4787, -101.438, -3.31943, 0.67", "33.6143, -103.519, -3.94914, 0.67", "33.5828, -105.386, -4.49722, 0.67", "33.2987, -107.752, -5.17878, 0.67", "32.3757, -113.126, -6.51362, 0.67", "32.0616, -115.531, -7.00119, 0.67", "32.0496, -118.404, -7.51176, 0.67", "32.5216, -120.982, -7.83098, 0.33", "33.2632, -123.441, -8.04535, 1.33", "34.4156, -126.359, -8.12673, 0.67", "35.4117, -128.467, -8.03436, 0.67", "38.2679, -133.913, -7.785, 0.67", "40.2163, -137.124, -7.64441, 0.33", "40.6525, -137.781, -7.61128, 1.33", "42.457, -140.43, -7.65772, 0.33", "42.9642, -141.195, -7.74704, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "25.1655, -66.5584, 8.48605, 0.67", "27.0317, -68.6974, 8.24702, 0.67", "29.4029, -71.5601, 8.3287, 0.67", "34.6385, -77.2618, 8.61033, 0.67", "41.2369, -83.7223, 9.08627, 0.33", "41.6102, -84.0665, 9.12633, 0.67", "45.1376, -87.3574, 9.81053, 0.67", "49.0625, -91.3587, 11.1879, 0.33", "51.2454, -93.7046, 12.4601, 0.33", "51.9361, -94.487, 13.0327, 0.67", "54.1227, -96.998, 14.3714, 0.33", "55.7298, -99.0798, 15.4718, 0.67", "57.381, -101.645, 16.8599, 0.33", "58.6264, -103.807, 17.664, 0.33", "59.4339, -105.706, 18.404, 0.33", "59.8269, -106.854, 18.789, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "102.63, -94.881, 54.0197, 0.33", "111.234, -100.654, 57.6592, 0.67", "120.65, -105.468, 60.6191, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "102.63, -94.881, 54.0197, 0.33", "109.086, -104.296, 57.9415, 0.67", "113.348, -114.928, 61.7497, 0.67", "117.032, -126.317, 63.3113, 0.67", "120.558, -137.583, 65.8294, 0.67", "125.01, -148.396, 68.8227, 0.67", "131.105, -158.246, 72.2175, 0.67", "136.835, -167.821, 76.8214, 0.67", "141.084, -177.899, 81.9295, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "96.8014, 176.281, 14.7682, 1.33", "102.771, 183.293, 8.17399, 0.67", "110.033, 189.78, 2.38646, 0.67", "118.096, 196.242, -2.25372, 0.67", "124.047, 204.229, -7.6476, 0.67", "129.521, 213.655, -10.7287, 0.67", "136.571, 222.142, -13.2919, 0.67", "143.643, 230.984, -13.6353, 0.67", "149.261, 240.819, -13.722, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "96.8014, 176.281, 14.7682, 1.33", "98.7275, 188.029, 20.9581, 0.67", "101.58, 198.883, 28.3135, 0.67", "105.447, 210.031, 34.703, 0.67", "109.349, 220.848, 41.6191, 0.67", "113.846, 229.78, 50.566, 0.67", "119.123, 237.52, 60.1731, 0.67", "121.854, 244.448, 71.3351, 0.67", "122.437, 250.218, 83.4357, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "8.19059, 51.304, -15.0009, 1.33", "13.3058, 51.7406, -18.2542, 0.67", "18.0511, 52.1355, -20.7254, 0.67", "19.685, 52.3297, -21.4237, 0.67", "25.3743, 53.0353, -23.4939, 0.67", "29.5717, 53.6247, -24.7581, 0.67", "32.9673, 54.1067, -25.5995, 0.67", "35.9402, 54.4025, -25.8033, 0.67", "39.207, 54.8676, -25.6357, 0.67", "40.7167, 55.0802, -25.5377, 0.67", "43.7163, 55.5866, -25.2745, 0.67", "45.9362, 55.9872, -25.1265, 0.67", "50.1509, 56.9451, -25.0673, 0.67", "56.5313, 58.6889, -25.2355, 0.67", "60.7514, 59.7793, -25.3679, 0.67", "63.6824, 60.6663, -25.4539, 0.67", "65.3778, 61.2213, -25.4924, 0.67", "70.1389, 62.6884, -25.514, 0.67", "71.8564, 63.1685, -25.4535, 0.67", "74.9039, 63.6291, -25.251, 0.67", "78.6896, 63.9733, -24.881, 0.67", "80.8252, 64.1324, -24.6935, 0.67", "85.1281, 64.4088, -24.3337, 0.67", "89.6458, 64.5529, -23.9731, 0.67", "96.4178, 64.8207, -23.4423, 0.67", "102.924, 65.2493, -22.9406, 0.67", "106.288, 65.5121, -22.6831, 0.67", "108.756, 65.9172, -22.5452, 0.67", "111.734, 66.6301, -22.45, 0.67", "113.9, 67.169, -22.1156, 0.67", "116.011, 67.8114, -21.4742, 0.67", "117.627, 68.3962, -20.8337, 0.67", "123.614, 70.9208, -18.0613, 0.67", "126.066, 72.1447, -16.8402, 0.67", "134.019, 76.4913, -12.5591, 0.67", "136.901, 78.0174, -10.8028, 0.33", "138.013, 78.5619, -10.0154, 0.33", "140.658, 79.7389, -7.71484, 0.33", "142.035, 80.4194, -5.63617, 0.67" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "8.19059, 51.304, -15.0009, 1.33", "6.56156, 59.8784, -14.974, 1.33", "4.82809, 68.4832, -15.0272, 1.33", "2.73393, 80.348, -14.4192, 1.33", "0.40245, 92.0613, -13.5227, 1.33", "-0.528843, 96.5952, -13.1499, 1.33", "-1.63808, 101.995, -12.7058, 1.33", "-2.22375, 104.54, -12.4689, 1.33", "-5.05047, 114.85, -11.4103, 1.33", "-6.70258, 121.237, -10.4944, 1.33", "-9.99423, 136.396, -7.14045, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "66.3318, -42.2577, -56.4767, 0.67", "68.3797, -41.3149, -59.5036, 0.67", "70.1283, -40.4143, -61.8434, 0.67", "71.83, -39.3735, -64.0034, 0.67", "74.9685, -37.4116, -67.7011, 0.67", "77.4126, -35.5898, -71.2549, 0.67", "81.3132, -32.1765, -77.5109, 0.67", "82.413, -31.1594, -79.4755, 0.33", "83.4025, -30.1521, -81.3865, 0.67", "84.0829, -29.3722, -82.7825, 0.67", "87.9349, -24.0268, -91.3939, 0.67", "88.6468, -22.7647, -93.1683, 0.33", "89.2682, -21.5816, -94.9152, 1.33", "89.8623, -20.5165, -96.5807, 0.67", "91.7751, -17.5386, -101.286, 0.67", "93.523, -15.0156, -104.617, 0.33", "93.8048, -14.7226, -104.834, 0.67", "95.3458, -13.2083, -105.732, 0.33", "95.8241, -12.7512, -105.911, 0.67", "96.7208, -11.8924, -106.305, 0.33", "98.517, -10.2499, -106.991, 0.67", "101.047, -8.11708, -108.026, 0.33", "103.785, -5.67718, -109.244, 1.33", "106.147, -3.3755, -110.424, 0.33", "109.682, 0.0891131, -112.366, 0.33", "110.942, 1.39856, -113.215, 2.0" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "66.3318, -42.2577, -56.4767, 0.67", "70.3774, -40.4644, -56.6572, 0.67", "73.1226, -39.2135, -56.815, 0.67", "76.3137, -37.9373, -57.0, 0.67", "79.7533, -36.4093, -57.1746, 0.67", "84.2426, -34.542, -57.2862, 0.67", "86.75, -33.6136, -57.3177, 0.67", "89.2663, -32.8008, -57.4341, 0.67", "91.6741, -32.0442, -57.6229, 0.67", "95.732, -31.0145, -57.8741, 0.67", "100.215, -30.3618, -58.0826, 0.67", "102.599, -30.3535, -58.2545, 0.67", "106.219, -30.6485, -58.6699, 0.67", "109.198, -31.3704, -59.1132, 0.67", "113.662, -32.8696, -59.8645, 0.67", "116.764, -34.2325, -60.506, 0.67", "119.275, -35.3528, -61.0654, 0.67", "123.732, -37.4151, -62.0106, 0.67", "128.564, -39.7473, -62.9099, 0.67", "131.521, -41.1712, -63.359, 0.67", "138.464, -44.4434, -64.2742, 0.67", "141.368, -45.8878, -64.5823, 0.33", "144.473, -47.3763, -64.8118, 0.33", "146.11, -48.1864, -64.851, 0.67", "147.938, -48.9777, -64.8282, 0.33", "149.585, -49.7432, -64.7199, 0.67", "152.829, -51.1266, -64.1988, 0.33", "153.108, -51.2339, -64.1596, 0.67", "155.273, -51.8534, -64.1115, 0.33", "157.023, -52.2258, -64.2688, 0.67", "159.102, -52.506, -64.6406, 0.33", "160.28, -52.6434, -64.9355, 0.67", "162.671, -52.9458, -65.7093, 0.33", "166.175, -53.3549, -67.0263, 0.67", "167.487, -53.4657, -67.6862, 0.33", "168.187, -53.5148, -68.1615, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-64.0059, -109.626, -104.237, 0.67", "-70.8464, -109.216, -108.301, 0.33", "-73.0895, -109.082, -109.634, 0.33", "-74.9212, -108.972, -110.722, 0.67", "-78.1858, -108.776, -112.661, 0.33", "-81.8613, -108.556, -114.845, 0.67" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-64.0059, -109.626, -104.237, 0.67", "-63.6938, -112.171, -105.663, 0.33", "-62.8288, -119.224, -109.613, 0.33" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "120.65, -105.468, 60.6191, 0.67", "128.677, -106.068, 66.4146, 0.67", "135.589, -105.486, 73.5052, 0.67", "141.73, -103.181, 80.9452, 0.67", "148.198, -99.0995, 87.2617, 0.67", "154.111, -94.8552, 94.0001, 0.67", "161.959, -91.8564, 99.2733, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "120.65, -105.468, 60.6191, 0.67", "128.423, -111.864, 61.3298, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-9.99423, 136.396, -7.14045, 1.33", "-6.17169, 139.981, -2.81393, 0.67", "-4.75038, 142.122, -0.163181, 0.67", "-3.25488, 144.737, 3.02123, 0.67", "-0.770772, 150.789, 9.74853, 0.67", "-0.118882, 152.849, 11.8402, 0.67", "0.914364, 157.359, 15.8736, 0.33", "1.18037, 161.389, 19.3421, 0.33", "1.16928, 162.793, 20.5223, 0.33", "0.943934, 166.947, 23.9007, 0.33", "0.610341, 169.768, 25.5186, 0.33", "0.166727, 173.643, 27.528, 0.33", "0.0590269, 174.41, 27.7825, 0.67", "-3.39505, 184.548, 29.157, 0.67", "-4.84791, 194.904, 31.8458, 0.67", "-6.20172, 204.904, 35.6882, 0.67", "-6.69466, 215.506, 37.6787, 0.67", "-5.75864, 225.946, 40.2729, 0.67", "-3.89049, 236.418, 42.1302, 0.67", "-3.57343, 246.685, 45.4581, 0.67", "-4.05954, 256.214, 50.5146, 0.67", "-3.93626, 265.987, 55.1043, 0.67", "-2.54728, 274.862, 61.0966, 0.67", "-0.450732, 283.108, 67.7452, 0.67", "0.0219799, 291.411, 74.6323, 0.67", "2.00295, 299.949, 80.9385, 0.67", "3.02002, 309.378, 86.102, 0.67", "3.02279, 318.881, 91.2288, 0.67", "2.61742, 327.197, 98.1047, 0.67", "0.653953, 334.882, 105.432, 0.67", "0.553762, 343.296, 112.199, 0.67", "-0.0358391, 351.851, 118.761, 0.67", "-1.76776, 359.162, 126.517, 0.67", "-2.22989, 365.189, 135.464, 0.67", "-4.55559, 373.23, 142.286, 0.67" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-9.99423, 136.396, -7.14045, 1.33", "-12.2713, 147.51, -5.12816, 1.33", "-13.6398, 154.177, -4.22453, 1.33", "-14.12, 156.298, -4.05426, 1.33", "-14.6764, 159.559, -3.87984, 1.33", "-14.9968, 161.331, -3.82485, 1.33", "-15.8637, 165.897, -3.7677, 1.33", "-16.6658, 170.628, -3.88097, 1.33", "-18.66, 181.143, -4.4982, 1.33", "-19.956, 187.299, -4.67584, 1.33", "-21.2907, 193.828, -4.71111, 1.33", "-21.8793, 197.824, -4.63766, 1.33", "-22.3916, 203.523, -4.41605, 1.33", "-22.5577, 208.222, -4.15827, 1.33", "-22.5198, 213.507, -3.82439, 1.33", "-22.3154, 217.007, -3.41457, 1.33", "-21.5469, 225.303, -2.23209, 1.33", "-20.877, 230.579, -1.41997, 1.33", "-20.244, 236.154, -0.603231, 1.33", "-19.6347, 241.48, 0.0643875, 1.33", "-18.5323, 255.947, 1.41224, 1.33", "-18.3471, 260.796, 1.69016, 1.33", "-18.1828, 265.664, 1.81915, 1.33", "-17.8935, 272.543, 1.77889, 1.33", "-17.4745, 279.737, 1.47698, 1.33", "-17.0691, 284.981, 1.04277, 1.33", "-16.5776, 295.572, -0.182194, 0.67", "-16.2915, 301.593, -0.747033, 0.67", "-16.2175, 305.966, -1.03783, 0.67", "-16.1225, 313.247, -1.38727, 0.67", "-16.1975, 317.613, -1.51267, 0.67", "-16.4632, 324.93, -1.5571, 0.67", "-16.9476, 332.107, -1.40817, 0.67", "-17.4598, 337.791, -1.41579, 0.67", "-17.9102, 342.06, -1.60144, 0.67", "-18.5263, 346.992, -1.90438, 0.67", "-18.9668, 351.382, -2.29218, 0.67", "-19.2817, 357.387, -3.11931, 0.67", "-19.6822, 365.234, -4.41041, 0.67", "-19.7175, 369.422, -5.22287, 0.67" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "110.942, 1.39856, -113.215, 2.0", "113.203, 6.62882, -116.389, 0.67", "114.895, 10.5431, -118.764, 0.33", "115.365, 11.6296, -119.424, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "110.942, 1.39856, -113.215, 2.0", "114.024, -0.941654, -112.75, 0.33", "115.156, -1.80045, -112.579, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-19.7175, 369.422, -5.22287, 0.67", "-20.7448, 370.531, -5.34126, 0.67", "-21.5099, 371.395, -5.6259, 0.67", "-22.0431, 372.059, -5.87134, 0.67", "-22.8912, 373.104, -6.2747, 0.67", "-23.5675, 373.922, -6.59045, 0.67", "-24.9481, 375.447, -7.16759, 0.67", "-27.1828, 377.795, -8.05705, 0.67", "-27.9544, 378.479, -8.3422, 0.67", "-29.3156, 379.551, -8.81404, 0.67", "-30.546, 380.482, -9.22339, 0.67", "-31.9751, 381.478, -9.66528, 0.67", "-32.2995, 381.707, -9.74899, 0.67", "-34.492, 383.154, -10.2652, 0.67", "-36.1919, 384.287, -10.7256, 0.67", "-37.3776, 385.108, -11.0712, 0.67", "-38.8822, 386.206, -11.5525, 0.67", "-40.7731, 387.742, -12.2405, 0.67", "-41.9072, 388.711, -12.671, 0.67", "-42.4017, 389.226, -12.8906, 0.67" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-19.7175, 369.422, -5.22287, 0.67", "-18.0845, 373.957, -7.71145, 0.67", "-16.8669, 377.318, -9.62375, 0.67", "-13.8509, 385.576, -14.2609, 0.67", "-12.1181, 389.851, -16.7982, 0.67", "-7.87102, 399.646, -22.707, 0.67", "-6.22547, 403.415, -24.9437, 0.67", "-5.25767, 405.773, -26.2736, 0.67", "-3.9866, 408.83, -28.1747, 0.67", "-2.33938, 413.143, -30.984, 0.67", "-1.60813, 414.847, -32.0164, 0.67", "-0.434237, 417.562, -33.6865, 0.67", "0.773809, 421.077, -35.8248, 0.67", "4.13363, 430.62, -41.561, 0.67" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-42.4017, 389.226, -12.8906, 0.67", "-41.2387, 391.365, -14.7687, 0.33", "-39.4554, 394.558, -17.8243, 0.33", "-38.6687, 396.512, -19.4598, 0.33", "-37.2111, 399.725, -21.8465, 0.33", "-36.581, 401.167, -22.8547, 0.67", "-35.197, 404.217, -24.7847, 0.67", "-34.3552, 405.799, -25.701, 0.67", "-31.7508, 410.266, -27.8694, 0.67", "-29.5857, 413.772, -29.417, 0.67", "-27.8183, 416.44, -30.4507, 0.67", "-25.3461, 420.519, -31.6721, 0.67", "-23.596, 423.768, -32.3812, 0.67", "-22.3833, 426.158, -32.7849, 0.67", "-21.3534, 428.398, -33.0934, 0.67", "-20.194, 431.345, -33.442, 0.67", "-18.4872, 436.147, -33.907, 0.67", "-16.8893, 441.846, -34.4389, 0.67", "-15.7825, 446.818, -34.9179, 0.67", "-15.4459, 448.53, -35.0873, 0.67", "-14.9571, 451.331, -35.3161, 0.67", "-14.7153, 453.042, -35.4259, 0.67", "-14.5273, 455.241, -35.5256, 0.67", "-14.3797, 458.895, -35.6362, 0.67", "-14.3618, 460.627, -35.66, 0.67", "-14.3849, 464.849, -35.6619, 0.67", "-14.5605, 468.412, -35.6096, 0.33", "-14.5951, 469.231, -35.5824, 0.67" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-42.4017, 389.226, -12.8906, 0.67", "-45.8396, 391.214, -13.4305, 0.67", "-47.5922, 392.228, -13.7058, 0.67", "-52.5744, 395.481, -14.5128, 0.67", "-54.5061, 396.915, -14.8371, 0.67", "-55.4553, 397.757, -15.0054, 0.67", "-56.0205, 398.333, -15.1486, 0.67", "-57.0864, 399.543, -15.4897, 0.67", "-58.7901, 401.709, -16.1647, 0.67", "-60.9709, 404.848, -17.3867, 0.67", "-62.9689, 407.91, -18.7213, 0.67", "-65.7962, 412.271, -20.8773, 0.67", "-66.9134, 414.063, -21.8232, 0.67", "-67.4002, 414.82, -22.2756, 0.67", "-68.9619, 417.171, -23.8302, 0.67", "-69.8808, 418.707, -24.8855, 0.67", "-70.6073, 420.122, -25.976, 0.33", "-71.492, 422.245, -27.6121, 0.67", "-72.3158, 424.408, -29.3158, 0.67", "-72.8122, 425.58, -30.2021, 0.67", "-73.4166, 426.866, -31.148, 0.67", "-75.579, 430.877, -34.4974, 0.67", "-75.9992, 431.578, -35.1292, 0.67", "-77.7823, 433.861, -37.3963, 0.67", "-80.6284, 436.898, -40.1947, 0.67", "-81.3111, 437.512, -40.7073, 0.67", "-83.7673, 439.363, -42.0357, 0.67", "-85.6111, 440.571, -42.785, 0.67", "-89.7074, 442.975, -44.3422, 0.67", "-93.308, 444.612, -45.4772, 0.33", "-95.2178, 445.25, -46.0107, 0.33", "-96.8926, 445.825, -46.4233, 0.33", "-99.8799, 446.878, -46.9403, 0.67", "-101.118, 447.169, -47.1609, 0.67", "-103.293, 447.29, -47.9921, 0.33", "-104.424, 447.197, -48.7753, 0.33" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "4.13363, 430.62, -41.561, 0.67", "0.658315, 434.897, -45.1535, 0.67", "-1.22984, 437.322, -47.2017, 0.67", "-4.30773, 441.075, -50.46, 0.67", "-6.52613, 443.837, -52.9052, 0.67", "-9.46683, 447.14, -55.8522, 0.67", "-10.3542, 448.081, -56.6988, 0.67", "-13.9437, 451.665, -60.0455, 0.67", "-14.9895, 452.749, -60.9645, 0.67", "-18.7359, 456.239, -63.7612, 0.67", "-21.6878, 458.795, -65.7384, 0.67", "-24.9222, 461.442, -68.058, 0.67", "-25.7428, 462.081, -68.64, 0.67", "-27.4317, 463.438, -70.0781, 0.67", "-28.8271, 464.648, -71.5008, 0.67", "-30.488, 466.217, -73.6866, 0.67", "-33.1093, 469.133, -78.1279, 0.67", "-35.8646, 472.103, -83.3284, 0.67", "-38.1187, 474.641, -87.9062, 0.33", "-38.477, 475.007, -88.6581, 0.67", "-40.1927, 476.687, -92.3513, 0.33", "-40.3585, 476.821, -92.7094, 0.67", "-41.0149, 477.251, -94.1391, 0.33", "-42.1312, 477.47, -96.8131, 0.33", "-43.3916, 477.406, -99.1611, 0.67", "-44.2231, 477.285, -100.709, 0.67", "-46.1544, 476.803, -104.242, 1.33", "-48.95, 476.042, -109.748, 0.33", "-49.7905, 475.797, -111.586, 0.67", "-50.8001, 475.384, -114.032, 0.33" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "4.13363, 430.62, -41.561, 0.67", "6.35262, 434.066, -41.7371, 0.67", "7.39333, 435.331, -41.7987, 0.67", "8.28035, 436.486, -41.9035, 0.67", "10.3608, 439.276, -42.1944, 0.67", "12.5171, 442.012, -42.4925, 0.67", "13.9762, 443.83, -42.691, 0.67", "15.5925, 445.704, -42.8024, 0.67", "20.0109, 450.645, -42.8919, 0.67", "23.2004, 454.114, -42.7338, 0.67", "24.9659, 456.061, -42.5418, 0.67", "26.8242, 458.268, -42.2345, 0.67", "29.4328, 461.522, -41.6687, 0.67", "31.2511, 463.836, -41.168, 0.67", "32.9525, 465.642, -40.5961, 0.67", "34.7288, 467.477, -39.9955, 0.67", "35.7396, 468.487, -39.6944, 0.67", "37.0458, 469.576, -39.3575, 0.67", "38.3347, 470.437, -39.1367, 0.67", "41.0347, 471.748, -38.7145, 0.67", "43.1126, 472.616, -38.4454, 0.67", "44.3344, 473.054, -38.2834, 0.67", "47.7513, 474.522, -37.8436, 0.67", "49.5854, 475.412, -37.5323, 0.67", "51.7367, 476.651, -37.4985, 0.67", "53.1694, 477.805, -37.7556, 0.67", "54.8034, 479.363, -38.314, 0.67", "57.2389, 482.122, -39.4938, 0.67", "59.2337, 484.768, -40.7383, 0.67", "64.1135, 491.574, -43.9193, 0.67", "66.461, 495.034, -45.6862, 0.67", "67.6897, 496.778, -46.6397, 0.67", "68.5071, 497.932, -47.2922, 0.67", "70.2868, 500.171, -48.5857, 0.67", "71.6116, 501.902, -49.457, 0.67", "73.845, 504.569, -50.4288, 0.67", "75.2352, 506.296, -51.2031, 0.33", "75.891, 507.214, -51.6251, 0.33", "77.1671, 509.284, -52.541, 0.33", "78.4818, 511.935, -53.7513, 0.33", "79.7026, 514.834, -54.946, 0.33", "80.6093, 517.206, -55.7873, 0.33", "81.4042, 519.437, -56.5427, 0.33", "82.1294, 521.278, -57.1003, 0.67", "83.1288, 523.823, -57.7957, 0.67", "84.7391, 527.755, -58.5784, 0.67", "85.7491, 530.208, -58.9291, 0.67", "86.9604, 532.956, -59.3031, 0.67", "88.3154, 535.889, -59.6419, 0.33", "89.0022, 537.218, -59.7334, 0.33", "90.332, 539.692, -59.6155, 0.67" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_14", "apic_1", "axon_1", "apic_13", "apic_2", "apic_12", "apic_3", "apic_11", "apic_4", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_32", "dend_27", "dend_20", "dend_15", "dend_14", "dend_9", "dend_0", "apic_14", "apic_1", "dend_40", "dend_33", "dend_31", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_1", "apic_13", "apic_2", "dend_35", "dend_34", "dend_30", "dend_29", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_3", "dend_2", "apic_12", "apic_3", "dend_37", "dend_36", "dend_25", "dend_24", "dend_8", "dend_7", "apic_11", "apic_4", "dend_39", "dend_38", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_14", "apic_1", "apic_13", "apic_2", "apic_12", "apic_3", "apic_11", "apic_4", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_14", "apic_1", "apic_13", "apic_2", "apic_12", "apic_3", "apic_11", "apic_4", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_32", "dend_27", "dend_20", "dend_15", "dend_14", "dend_9", "dend_0", "apic_14", "apic_1", "dend_40", "dend_33", "dend_31", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_1", "apic_13", "apic_2", "dend_35", "dend_34", "dend_30", "dend_29", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_3", "dend_2", "apic_12", "apic_3", "dend_37", "dend_36", "dend_25", "dend_24", "dend_8", "dend_7", "apic_11", "apic_4", "dend_39", "dend_38", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_27", "dend_20", "dend_15", "dend_14", "dend_9", "dend_0", "dend_40", "dend_33", "dend_31", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_1", "dend_35", "dend_34", "dend_30", "dend_29", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_3", "dend_2", "dend_37", "dend_36", "dend_25", "dend_24", "dend_8", "dend_7", "dend_39", "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_1", "apic_1", "apic_1", "apic_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_2", "apic_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_PC_d3b8beb606_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_14, id: apic_14, parent: apic_0
create apic_14
public apic_14
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_13, id: apic_13, parent: apic_1
create apic_13
public apic_13
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_12, id: apic_12, parent: apic_2
create apic_12
public apic_12
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_11, id: apic_11, parent: apic_3
create apic_11
public apic_11
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_14, apic_1, axon_1, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_32, dend_27, dend_20, dend_15, dend_14, dend_9, dend_0, apic_14, apic_1, dend_40, dend_33, dend_31, dend_28, dend_26, dend_21, dend_17, dend_16, dend_11, dend_10, dend_4, dend_1, apic_13, apic_2, dend_35, dend_34, dend_30, dend_29, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_3, dend_2, apic_12, apic_3, dend_37, dend_36, dend_25, dend_24, dend_8, dend_7, apic_11, apic_4, dend_39, dend_38, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_14, apic_1, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_14, apic_1, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_32, dend_27, dend_20, dend_15, dend_14, dend_9, dend_0, apic_14, apic_1, dend_40, dend_33, dend_31, dend_28, dend_26, dend_21, dend_17, dend_16, dend_11, dend_10, dend_4, dend_1, apic_13, apic_2, dend_35, dend_34, dend_30, dend_29, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_3, dend_2, apic_12, apic_3, dend_37, dend_36, dend_25, dend_24, dend_8, dend_7, apic_11, apic_4, dend_39, dend_38, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_32, dend_27, dend_20, dend_15, dend_14, dend_9, dend_0, dend_40, dend_33, dend_31, dend_28, dend_26, dend_21, dend_17, dend_16, dend_11, dend_10, dend_4, dend_1, dend_35, dend_34, dend_30, dend_29, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_3, dend_2, dend_37, dend_36, dend_25, dend_24, dend_8, dend_7, dend_39, dend_38]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_32, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_39, dend_39, dend_39, dend_38, dend_38, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.45000013979116643)
    connect dend_32(0), soma_0(0.45000013979116643)
    connect dend_27(0), soma_0(0.45000013979116643)
    connect dend_20(0), soma_0(0.45000013979116643)
    connect dend_15(0), soma_0(0.45000013979116643)
    connect dend_14(0), soma_0(0.45000013979116643)
    connect dend_9(0), soma_0(0.45000013979116643)
    connect dend_0(0), soma_0(0.45000013979116643)
    connect axon_0(0), soma_0(1.0)
    connect apic_14(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_13(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_12(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_11(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.70898, 5.85738, -0.120344, 3.27839 ) }
    soma_0 { pt3dadd( -4.33196, 5.21658, -0.129082, 5.86961 ) }
    soma_0 { pt3dadd( -3.95495, 4.57578, -0.137819, 7.57673 ) }
    soma_0 { pt3dadd( -3.57794, 3.93498, -0.146557, 9.06802 ) }
    soma_0 { pt3dadd( -3.20092, 3.29418, -0.155294, 10.0599 ) }
    soma_0 { pt3dadd( -2.82391, 2.65338, -0.164032, 10.9956 ) }
    soma_0 { pt3dadd( -2.4469, 2.01258, -0.17277, 12.0571 ) }
    soma_0 { pt3dadd( -2.06988, 1.37178, -0.181507, 12.9693 ) }
    soma_0 { pt3dadd( -1.69287, 0.730981, -0.190245, 12.9054 ) }
    soma_0 { pt3dadd( -1.31586, 0.0901812, -0.198982, 12.8202 ) }
    soma_0 { pt3dadd( -0.938844, -0.550618, -0.20772, 12.319 ) }
    soma_0 { pt3dadd( -0.561831, -1.19142, -0.216458, 11.7275 ) }
    soma_0 { pt3dadd( -0.184817, -1.83222, -0.225195, 11.136 ) }
    soma_0 { pt3dadd( 0.192196, -2.47302, -0.233933, 10.5445 ) }
    soma_0 { pt3dadd( 0.56921, -3.11382, -0.24267, 9.93876 ) }
    soma_0 { pt3dadd( 0.946223, -3.75461, -0.251408, 9.25799 ) }
    soma_0 { pt3dadd( 1.32324, -4.39541, -0.260145, 8.69202 ) }
    soma_0 { pt3dadd( 1.70025, -5.03621, -0.268883, 8.25824 ) }
    soma_0 { pt3dadd( 2.07726, -5.67701, -0.277621, 7.9083 ) }
    soma_0 { pt3dadd( 2.45428, -6.31781, -0.286358, 7.39739 ) }
    soma_0 { pt3dadd( 2.83129, -6.95861, -0.295096, 4.06054 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -0.080289, 6.36868, -3.98721, 2.0 ) }
    apic_0 { pt3dadd( -0.036712, 8.52952, -5.41873, 2.0 ) }
    apic_0 { pt3dadd( 0.101209, 14.8701, -1.7964, 2.0 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 24/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.033, -2.87637, -6.34901, 1.33 ) }
    dend_32 { pt3dadd( 2.24241, -6.02954, -12.572, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.133118, -4.43262, -5.42184, 0.67 ) }
    dend_27 { pt3dadd( -0.120685, -5.29702, -6.40405, 0.67 ) }
    dend_27 { pt3dadd( 3.12336, -1.92349, -5.72017, 0.67 ) }
    dend_27 { pt3dadd( 6.75229, 1.8503, -4.95515, 0.67 ) }
    dend_27 { pt3dadd( 8.79032, 3.96968, -4.52551, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.715615, 1.01649, -7.17452, 1.33 ) }
    dend_20 { pt3dadd( -0.62712, 0.900498, -5.93802, 1.33 ) }
    dend_20 { pt3dadd( -8.07736, 2.20617, -8.15951, 1.33 ) }
    dend_20 { pt3dadd( -10.2292, 2.5833, -8.80115, 1.33 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.44863, -0.464346, -3.54272, 2.0 ) }
    dend_15 { pt3dadd( -7.99552, -0.664275, -4.42116, 2.0 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 37/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.98108, -4.42422, -3.90035, 0.67 ) }
    dend_14 { pt3dadd( -4.36786, -4.92963, -4.31886, 0.67 ) }
    dend_14 { pt3dadd( -4.72488, -6.97346, -3.8847, 0.67 ) }
    dend_14 { pt3dadd( -5.26381, -9.94399, -3.16128, 0.67 ) }
    dend_14 { pt3dadd( -5.82344, -14.3901, -1.91545, 0.67 ) }
    dend_14 { pt3dadd( -5.97068, -16.4637, -1.36713, 0.67 ) }
    dend_14 { pt3dadd( -6.06308, -18.8483, -0.724075, 0.33 ) }
    dend_14 { pt3dadd( -5.9024, -23.0735, 0.530504, 0.67 ) }
    dend_14 { pt3dadd( -5.78199, -25.1885, 1.13081, 0.67 ) }
    dend_14 { pt3dadd( -5.34355, -30.2004, 2.58174, 0.67 ) }
    dend_14 { pt3dadd( -4.74381, -34.8778, 3.84837, 0.33 ) }
    dend_14 { pt3dadd( -3.95926, -39.8455, 5.06099, 0.33 ) }
    dend_14 { pt3dadd( -2.84797, -45.5927, 6.41954, 0.33 ) }
    dend_14 { pt3dadd( -2.29652, -48.189, 6.96229, 0.33 ) }
    dend_14 { pt3dadd( -0.835103, -54.7503, 8.35047, 0.33 ) }
    dend_14 { pt3dadd( -0.170768, -57.7497, 8.95923, 0.33 ) }
    dend_14 { pt3dadd( 0.684915, -61.2861, 9.72997, 0.33 ) }
    dend_14 { pt3dadd( 1.95256, -65.8362, 10.5719, 0.67 ) }
    dend_14 { pt3dadd( 2.6903, -75.6431, 14.0688, 0.67 ) }
    dend_14 { pt3dadd( 3.80903, -85.3366, 17.7746, 0.67 ) }
    dend_14 { pt3dadd( 4.47292, -94.6285, 22.4828, 0.67 ) }
    dend_14 { pt3dadd( 3.72515, -103.74, 27.5205, 0.67 ) }
    dend_14 { pt3dadd( 3.61445, -112.6, 33.0362, 0.67 ) }
    dend_14 { pt3dadd( 1.16751, -121.145, 38.5085, 0.67 ) }
    dend_14 { pt3dadd( -3.00448, -129.072, 43.8669, 0.67 ) }
    dend_14 { pt3dadd( -5.33709, -137.163, 50.0347, 0.67 ) }
    dend_14 { pt3dadd( -8.64895, -144.894, 56.2157, 0.67 ) }
    dend_14 { pt3dadd( -10.7306, -153.717, 61.3898, 0.67 ) }
    dend_14 { pt3dadd( -11.9532, -162.772, 66.4351, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 66/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.575, -6.63986, -0.579361, 1.33 ) }
    dend_9 { pt3dadd( 1.35938, -5.79245, -0.508485, 1.33 ) }
    dend_9 { pt3dadd( 8.4871, -14.2564, 2.28261, 0.67 ) }
    dend_9 { pt3dadd( 9.86219, -15.9283, 2.71687, 0.67 ) }
    dend_9 { pt3dadd( 13.0512, -20.3746, 3.37483, 0.67 ) }
    dend_9 { pt3dadd( 14.3598, -22.3883, 3.50521, 0.67 ) }
    dend_9 { pt3dadd( 15.5706, -24.6982, 3.54359, 0.67 ) }
    dend_9 { pt3dadd( 17.5179, -29.2902, 3.32101, 0.67 ) }
    dend_9 { pt3dadd( 18.7919, -33.0669, 3.1772, 0.67 ) }
    dend_9 { pt3dadd( 20.6503, -39.7087, 2.98519, 0.67 ) }
    dend_9 { pt3dadd( 21.1496, -42.2162, 2.85383, 0.67 ) }
    dend_9 { pt3dadd( 22.0013, -47.8148, 2.6094, 0.67 ) }
    dend_9 { pt3dadd( 22.1539, -49.0697, 2.5787, 0.67 ) }
    dend_9 { pt3dadd( 22.1961, -53.576, 2.66684, 0.67 ) }
    dend_9 { pt3dadd( 22.185, -55.7585, 3.00023, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 81/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.48781, -2.34256, 5.61119, 1.33 ) }
    dend_0 { pt3dadd( 4.02221, -2.73153, 6.42324, 1.33 ) }
    dend_0 { pt3dadd( 5.94724, -4.89768, 8.03485, 1.33 ) }
    dend_0 { pt3dadd( 6.92834, -6.00167, 8.85622, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.83129, -6.95861, -0.295096, 0.562123 ) }
    axon_0 { pt3dadd( 10.4377, -19.887, -0.295096, 0.562123 ) }
    axon_0 { pt3dadd( 18.0441, -32.8154, -0.295096, 0.562123 ) }
    // Section: apic_14, id: apic_14, parent: apic_0 (entry count 88/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 0.101209, 14.8701, -1.7964, 2.0 ) }
    apic_14 { pt3dadd( -10.016, 18.413, -5.83678, 0.67 ) }
    apic_14 { pt3dadd( -16.8066, 20.3526, -7.14448, 0.67 ) }
    apic_14 { pt3dadd( -18.1347, 20.6499, -7.28258, 0.67 ) }
    apic_14 { pt3dadd( -20.6888, 20.983, -7.43438, 0.67 ) }
    apic_14 { pt3dadd( -22.6248, 21.0602, -7.47676, 0.67 ) }
    apic_14 { pt3dadd( -25.0296, 21.0502, -7.53557, 0.67 ) }
    apic_14 { pt3dadd( -27.2261, 20.7864, -7.0239, 0.67 ) }
    apic_14 { pt3dadd( -28.4882, 20.6169, -6.82003, 0.67 ) }
    apic_14 { pt3dadd( -30.7451, 20.3154, -6.26675, 0.67 ) }
    apic_14 { pt3dadd( -32.3566, 20.1854, -5.69698, 0.67 ) }
    apic_14 { pt3dadd( -35.8369, 20.0913, -4.28711, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_14 { pt3dadd( -41.2643, 20.3733, -2.27771, 0.67 ) }
    apic_14 { pt3dadd( -42.9226, 20.5519, -1.49537, 0.67 ) }
    apic_14 { pt3dadd( -45.9986, 21.1486, 0.175522, 0.67 ) }
    apic_14 { pt3dadd( -48.3172, 21.8645, 1.55786, 0.67 ) }
    apic_14 { pt3dadd( -49.8207, 22.3695, 2.50952, 0.67 ) }
    apic_14 { pt3dadd( -53.4327, 23.8249, 5.15835, 0.67 ) }
    apic_14 { pt3dadd( -59.6312, 26.6024, 9.51445, 0.67 ) }
    apic_14 { pt3dadd( -61.192, 27.4032, 10.5616, 0.67 ) }
    apic_14 { pt3dadd( -63.5432, 28.7564, 11.9967, 0.67 ) }
    apic_14 { pt3dadd( -66.2487, 30.4512, 13.515, 0.67 ) }
    apic_14 { pt3dadd( -69.5307, 32.6446, 15.3449, 0.67 ) }
    apic_14 { pt3dadd( -71.8053, 34.2986, 16.5717, 0.67 ) }
    apic_14 { pt3dadd( -75.3969, 37.1647, 17.9466, 0.67 ) }
    apic_14 { pt3dadd( -77.3456, 38.8557, 18.685, 0.67 ) }
    apic_14 { pt3dadd( -79.0089, 40.314, 19.2802, 0.67 ) }
    apic_14 { pt3dadd( -80.9923, 42.2227, 19.8998, 0.67 ) }
    apic_14 { pt3dadd( -82.5399, 43.5726, 20.3567, 0.67 ) }
    apic_14 { pt3dadd( -84.3064, 45.0722, 20.9558, 0.67 ) }
    apic_14 { pt3dadd( -86.0047, 46.3183, 21.5702, 0.67 ) }
    apic_14 { pt3dadd( -88.0873, 47.7201, 22.3206, 0.67 ) }
    apic_14 { pt3dadd( -91.4958, 49.8894, 23.5159, 0.67 ) }
    apic_14 { pt3dadd( -94.9355, 52.1228, 24.7733, 0.67 ) }
    apic_14 { pt3dadd( -97.442, 53.7303, 25.4969, 0.33 ) }
    apic_14 { pt3dadd( -98.4987, 54.4462, 25.726, 0.67 ) }
    apic_14 { pt3dadd( -99.8689, 55.4548, 25.893, 0.33 ) }
    apic_14 { pt3dadd( -101.136, 56.4493, 25.9192, 0.33 ) }
    apic_14 { pt3dadd( -103.68, 58.3788, 25.9098, 0.33 ) }
    apic_14 { pt3dadd( -107.981, 61.6296, 25.9078, 0.33 ) }
    apic_14 { pt3dadd( -108.726, 62.1683, 25.9598, 0.67 ) }
    apic_14 { pt3dadd( -111.331, 64.0716, 26.1912, 0.33 ) }
    apic_14 { pt3dadd( -113.415, 65.5309, 26.4559, 0.33 ) }
    apic_14 { pt3dadd( -116.399, 67.4262, 27.0243, 0.67 ) }
    apic_14 { pt3dadd( -120.5, 69.8174, 28.3088, 0.33 ) }
    apic_14 { pt3dadd( -121.138, 70.1549, 28.6571, 0.67 ) }
    apic_14 { pt3dadd( -126.011, 74.726, 32.3512, 0.67 ) }
    apic_14 { pt3dadd( -130.531, 79.2629, 36.507, 0.67 ) }
    apic_14 { pt3dadd( -134.861, 83.3408, 41.2932, 0.67 ) }
    apic_14 { pt3dadd( -139.19, 87.3728, 46.1185, 0.67 ) }
    apic_14 { pt3dadd( -144.447, 91.4909, 49.8184, 0.67 ) }
    apic_14 { pt3dadd( -149.374, 96.6407, 52.5552, 0.67 ) }
    apic_14 { pt3dadd( -154.471, 101.428, 55.619, 0.67 ) }
    apic_14 { pt3dadd( -158.964, 106.886, 58.5006, 0.67 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 42/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.101209, 14.8701, -1.7964, 2.0 ) }
    apic_1 { pt3dadd( 3.58119, 24.6658, -6.27245, 1.33 ) }
    apic_1 { pt3dadd( 4.70523, 27.8298, -7.71821, 1.33 ) }
    apic_1 { pt3dadd( 6.70391, 33.4558, -10.2889, 1.33 ) }
    apic_1 { pt3dadd( 8.00741, 37.125, -11.9655, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 47/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 2.24241, -6.02954, -12.572, 1.33 ) }
    dend_40 { pt3dadd( 11.6419, -7.71371, -14.5627, 0.67 ) }
    dend_40 { pt3dadd( 14.4333, -7.98702, -14.7743, 0.67 ) }
    dend_40 { pt3dadd( 20.4472, -8.74232, -15.5559, 0.67 ) }
    dend_40 { pt3dadd( 22.613, -9.2302, -15.858, 0.67 ) }
    dend_40 { pt3dadd( 25.3211, -9.90529, -16.2664, 0.67 ) }
    dend_40 { pt3dadd( 32.6498, -11.4723, -17.9172, 0.67 ) }
    dend_40 { pt3dadd( 39.9159, -13.08, -20.2506, 0.67 ) }
    dend_40 { pt3dadd( 46.0892, -14.4663, -22.2773, 0.67 ) }
    dend_40 { pt3dadd( 51.9831, -15.7696, -24.1369, 0.67 ) }
    dend_40 { pt3dadd( 58.6673, -17.6574, -26.2595, 0.67 ) }
    dend_40 { pt3dadd( 66.2546, -20.1019, -29.0857, 0.67 ) }
    dend_40 { pt3dadd( 68.1617, -20.8298, -29.887, 0.67 ) }
    dend_40 { pt3dadd( 72.6538, -22.6333, -32.1727, 0.67 ) }
    dend_40 { pt3dadd( 77.9275, -24.8434, -34.7929, 0.67 ) }
    dend_40 { pt3dadd( 81.4745, -26.2336, -36.4944, 0.67 ) }
    dend_40 { pt3dadd( 88.2259, -29.2423, -39.3069, 0.67 ) }
    dend_40 { pt3dadd( 92.9144, -31.2513, -40.9232, 0.67 ) }
    dend_40 { pt3dadd( 97.3531, -32.7262, -42.3522, 0.67 ) }
    dend_40 { pt3dadd( 104.252, -34.3906, -44.4111, 0.67 ) }
    dend_40 { pt3dadd( 112.209, -36.1947, -46.6429, 0.67 ) }
    dend_40 { pt3dadd( 120.503, -37.874, -49.0171, 0.67 ) }
    dend_40 { pt3dadd( 125.922, -38.982, -50.4851, 0.67 ) }
    dend_40 { pt3dadd( 132.499, -40.205, -52.3723, 0.67 ) }
    dend_40 { pt3dadd( 135.846, -40.8821, -53.3569, 0.67 ) }
    dend_40 { pt3dadd( 143.986, -42.3151, -55.9969, 0.67 ) }
    dend_40 { pt3dadd( 152.933, -43.973, -58.5052, 0.67 ) }
    dend_40 { pt3dadd( 155.402, -44.44, -59.0761, 0.67 ) }
    dend_40 { pt3dadd( 160.329, -45.6691, -59.8946, 0.67 ) }
    dend_40 { pt3dadd( 162.415, -46.3373, -60.0839, 0.67 ) }
    dend_40 { pt3dadd( 169.216, -48.6853, -59.9437, 0.67 ) }
    dend_40 { pt3dadd( 178.951, -52.0719, -58.3562, 0.67 ) }
    dend_40 { pt3dadd( 181.274, -53.0446, -57.5658, 0.67 ) }
    dend_40 { pt3dadd( 184.151, -54.4911, -56.3443, 0.67 ) }
    dend_40 { pt3dadd( 186.492, -55.8832, -55.1955, 0.67 ) }
    dend_40 { pt3dadd( 189.069, -57.6215, -53.8357, 0.67 ) }
    dend_40 { pt3dadd( 192.62, -60.6234, -51.8624, 0.33 ) }
    dend_40 { pt3dadd( 195.885, -63.4726, -50.7782, 0.67 ) }
    dend_40 { pt3dadd( 197.832, -65.0088, -50.1016, 0.33 ) }
    dend_40 { pt3dadd( 201.306, -67.5222, -48.8153, 0.33 ) }
    dend_40 { pt3dadd( 201.665, -67.7384, -48.6983, 0.67 ) }
    dend_40 { pt3dadd( 203.66, -68.894, -48.1978, 0.33 ) }
    dend_40 { pt3dadd( 205.916, -70.286, -47.8332, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 90/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 2.24241, -6.02954, -12.572, 1.33 ) }
    dend_33 { pt3dadd( 3.53987, -8.39984, -12.4707, 0.67 ) }
    dend_33 { pt3dadd( 4.19451, -9.59578, -12.4196, 0.67 ) }
    dend_33 { pt3dadd( 6.829, -14.4087, -12.214, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 94/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.79032, 3.96968, -4.52551, 0.67 ) }
    dend_31 { pt3dadd( 10.4851, 1.93264, -12.5431, 0.67 ) }
    dend_31 { pt3dadd( 11.3493, 1.2079, -15.5844, 0.67 ) }
    dend_31 { pt3dadd( 12.3686, 0.34582, -19.0618, 0.67 ) }
    dend_31 { pt3dadd( 12.9369, -0.165466, -20.8912, 0.67 ) }
    dend_31 { pt3dadd( 16.8141, -2.62069, -30.3473, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( 17.7619, -3.09854, -32.2463, 0.67 ) }
    dend_31 { pt3dadd( 18.8675, -3.59091, -33.9487, 0.67 ) }
    dend_31 { pt3dadd( 21.8564, -5.03041, -38.5816, 0.67 ) }
    dend_31 { pt3dadd( 22.969, -5.5233, -40.1995, 0.67 ) }
    dend_31 { pt3dadd( 26.4638, -7.16615, -44.7632, 0.67 ) }
    dend_31 { pt3dadd( 27.9497, -7.92571, -46.3307, 0.67 ) }
    dend_31 { pt3dadd( 28.7902, -8.38552, -47.6747, 0.67 ) }
    dend_31 { pt3dadd( 30.073, -9.3868, -50.5599, 0.67 ) }
    dend_31 { pt3dadd( 31.3001, -10.1945, -53.2224, 0.67 ) }
    dend_31 { pt3dadd( 32.2443, -10.7336, -55.611, 0.67 ) }
    dend_31 { pt3dadd( 33.0627, -11.1404, -58.5088, 0.67 ) }
    dend_31 { pt3dadd( 35.3398, -11.2271, -65.7049, 0.67 ) }
    dend_31 { pt3dadd( 36.4653, -11.1098, -68.4201, 0.67 ) }
    dend_31 { pt3dadd( 38.8688, -10.4232, -72.6124, 0.67 ) }
    dend_31 { pt3dadd( 40.1955, -10.0654, -75.0135, 0.67 ) }
    dend_31 { pt3dadd( 41.935, -9.62389, -77.8363, 0.67 ) }
    dend_31 { pt3dadd( 43.3822, -9.36596, -79.7852, 0.67 ) }
    dend_31 { pt3dadd( 45.5492, -9.03722, -82.4322, 0.67 ) }
    dend_31 { pt3dadd( 49.146, -8.72523, -87.384, 0.67 ) }
    dend_31 { pt3dadd( 53.286, -8.55748, -93.9222, 0.67 ) }
    dend_31 { pt3dadd( 55.7797, -8.66899, -97.6789, 0.67 ) }
    dend_31 { pt3dadd( 56.6954, -8.73563, -99.01, 0.33 ) }
    dend_31 { pt3dadd( 58.3888, -8.73211, -101.81, 1.33 ) }
    dend_31 { pt3dadd( 60.9115, -8.3617, -106.773, 0.67 ) }
    dend_31 { pt3dadd( 62.1546, -8.03047, -109.687, 0.67 ) }
    dend_31 { pt3dadd( 63.1678, -7.37201, -112.175, 0.67 ) }
    dend_31 { pt3dadd( 63.9049, -6.71115, -114.343, 0.67 ) }
    dend_31 { pt3dadd( 65.0845, -5.56966, -117.584, 0.67 ) }
    dend_31 { pt3dadd( 66.4661, -4.28071, -120.783, 1.33 ) }
    dend_31 { pt3dadd( 68.0506, -3.19872, -124.533, 0.33 ) }
    dend_31 { pt3dadd( 68.2987, -3.18904, -125.225, 0.67 ) }
    dend_31 { pt3dadd( 68.5499, -3.41249, -126.211, 0.33 ) }
    dend_31 { pt3dadd( 69.082, -4.34509, -128.592, 0.33 ) }
    dend_31 { pt3dadd( 69.4415, -5.04932, -130.131, 1.33 ) }
    dend_31 { pt3dadd( 70.3795, -7.10911, -134.575, 0.67 ) }
    dend_31 { pt3dadd( 71.3688, -9.11432, -139.175, 1.33 ) }
    dend_31 { pt3dadd( 72.8436, -11.7042, -145.6, 0.33 ) }
    dend_31 { pt3dadd( 73.332, -12.5006, -147.677, 0.67 ) }
    dend_31 { pt3dadd( 74.3119, -13.8903, -151.776, 0.33 ) }
    dend_31 { pt3dadd( 75.1483, -14.9219, -154.957, 1.33 ) }
    dend_31 { pt3dadd( 76.4447, -16.1064, -159.214, 0.33 ) }
    dend_31 { pt3dadd( 76.8799, -16.389, -160.447, 0.67 ) }
    dend_31 { pt3dadd( 77.4273, -16.646, -161.945, 0.33 ) }
    dend_31 { pt3dadd( 78.9481, -17.2257, -166.095, 1.33 ) }
    dend_31 { pt3dadd( 80.4329, -17.7019, -170.246, 0.33 ) }
    dend_31 { pt3dadd( 81.3497, -17.8554, -172.828, 0.67 ) }
    dend_31 { pt3dadd( 82.169, -17.7607, -175.496, 0.33 ) }
    dend_31 { pt3dadd( 82.4743, -17.5768, -176.603, 0.33 ) }
    dend_31 { pt3dadd( 82.8406, -17.0818, -177.833, 0.67 ) }
    dend_31 { pt3dadd( 83.1693, -16.0963, -178.692, 0.33 ) }
    dend_31 { pt3dadd( 83.2894, -15.1789, -178.992, 0.67 ) }
    dend_31 { pt3dadd( 83.3335, -13.7448, -179.119, 0.33 ) }
    dend_31 { pt3dadd( 83.2281, -12.7205, -179.074, 0.67 ) }
    dend_31 { pt3dadd( 83.1587, -12.0023, -179.042, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.79032, 3.96968, -4.52551, 0.67 ) }
    dend_28 { pt3dadd( 11.0777, 3.846, -5.31426, 0.67 ) }
    dend_28 { pt3dadd( 12.9089, 3.61895, -6.35997, 0.67 ) }
    dend_28 { pt3dadd( 14.9138, 3.17903, -7.68008, 0.67 ) }
    dend_28 { pt3dadd( 17.8249, 2.41219, -9.59182, 0.67 ) }
    dend_28 { pt3dadd( 18.9219, 2.14766, -10.2363, 0.67 ) }
    dend_28 { pt3dadd( 21.3532, 1.56533, -11.508, 0.67 ) }
    dend_28 { pt3dadd( 23.7931, 0.816582, -12.8759, 0.67 ) }
    dend_28 { pt3dadd( 24.9564, 0.40788, -13.6453, 0.67 ) }
    dend_28 { pt3dadd( 26.1926, -0.192639, -14.508, 0.67 ) }
    dend_28 { pt3dadd( 28.387, -1.24903, -15.8719, 0.67 ) }
    dend_28 { pt3dadd( 29.7433, -1.98896, -16.703, 0.67 ) }
    dend_28 { pt3dadd( 31.2469, -2.69517, -17.4888, 0.67 ) }
    dend_28 { pt3dadd( 35.2257, -4.52754, -19.5901, 0.67 ) }
    dend_28 { pt3dadd( 36.8517, -5.33319, -20.5237, 0.67 ) }
    dend_28 { pt3dadd( 40.2184, -7.11329, -22.5084, 0.67 ) }
    dend_28 { pt3dadd( 43.0873, -8.70523, -24.1729, 0.67 ) }
    dend_28 { pt3dadd( 46.6129, -10.3896, -26.0237, 0.67 ) }
    dend_28 { pt3dadd( 49.7083, -11.6707, -27.4896, 0.67 ) }
    dend_28 { pt3dadd( 53.4056, -13.002, -29.1185, 0.67 ) }
    dend_28 { pt3dadd( 55.0558, -13.5011, -29.8878, 0.67 ) }
    dend_28 { pt3dadd( 56.359, -13.8398, -30.4948, 1.33 ) }
    dend_28 { pt3dadd( 59.4523, -14.4525, -31.8703, 0.67 ) }
    dend_28 { pt3dadd( 63.2177, -15.176, -33.5002, 0.67 ) }
    dend_28 { pt3dadd( 66.3502, -15.4613, -34.6326, 0.33 ) }
    dend_28 { pt3dadd( 68.023, -15.4939, -35.1351, 1.33 ) }
    dend_28 { pt3dadd( 70.2523, -15.4826, -35.7269, 0.33 ) }
    dend_28 { pt3dadd( 70.9249, -15.456, -35.8708, 1.33 ) }
    dend_28 { pt3dadd( 72.9906, -15.3623, -36.1128, 0.33 ) }
    dend_28 { pt3dadd( 74.6913, -15.1085, -36.0719, 0.67 ) }
    dend_28 { pt3dadd( 76.3024, -14.7841, -35.8933, 0.33 ) }
    dend_28 { pt3dadd( 77.7011, -14.3552, -35.7358, 0.33 ) }
    dend_28 { pt3dadd( 78.7579, -13.9208, -35.6235, 0.67 ) }
    dend_28 { pt3dadd( 80.3877, -13.0601, -35.4969, 0.33 ) }
    dend_28 { pt3dadd( 81.0964, -12.6426, -35.4741, 0.33 ) }
    dend_28 { pt3dadd( 81.4909, -12.4174, -35.4792, 0.67 ) }
    dend_28 { pt3dadd( 82.3124, -11.9309, -35.4907, 0.33 ) }
    dend_28 { pt3dadd( 83.2003, -11.4254, -35.5022, 1.33 ) }
    dend_28 { pt3dadd( 85.0311, -10.3992, -35.725, 0.67 ) }
    dend_28 { pt3dadd( 87.2785, -9.25309, -35.8516, 0.67 ) }
    dend_28 { pt3dadd( 88.3653, -8.811, -35.8005, 0.67 ) }
    dend_28 { pt3dadd( 89.5804, -8.36969, -35.7282, 0.33 ) }
    dend_28 { pt3dadd( 90.0195, -8.23349, -35.6924, 1.33 ) }
    dend_28 { pt3dadd( 93.0062, -7.43451, -35.3174, 0.67 ) }
    dend_28 { pt3dadd( 97.3665, -6.64299, -34.2421, 0.33 ) }
    dend_28 { pt3dadd( 99.207, -6.40882, -33.1635, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 0/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -10.2292, 2.5833, -8.80115, 1.33 ) }
    dend_26 { pt3dadd( -11.9666, 4.07873, -11.5721, 0.67 ) }
    dend_26 { pt3dadd( -12.7898, 4.41809, -12.8498, 0.67 ) }
    dend_26 { pt3dadd( -14.7985, 5.43161, -16.0424, 0.67 ) }
    dend_26 { pt3dadd( -19.0933, 7.83352, -22.1808, 0.67 ) }
    dend_26 { pt3dadd( -20.7817, 9.15233, -25.3769, 0.67 ) }
    dend_26 { pt3dadd( -22.0074, 10.0811, -27.8069, 0.67 ) }
    dend_26 { pt3dadd( -24.656, 12.3836, -33.3156, 0.67 ) }
    dend_26 { pt3dadd( -26.6651, 14.3346, -37.3213, 0.67 ) }
    dend_26 { pt3dadd( -29.1414, 16.8974, -42.3551, 0.67 ) }
    dend_26 { pt3dadd( -33.1679, 20.41, -50.1404, 0.67 ) }
    dend_26 { pt3dadd( -34.648, 21.7147, -53.2405, 0.67 ) }
    dend_26 { pt3dadd( -36.7047, 23.6663, -57.4533, 0.67 ) }
    dend_26 { pt3dadd( -40.4511, 26.7541, -63.5407, 0.67 ) }
    dend_26 { pt3dadd( -42.7405, 28.0677, -66.4402, 0.67 ) }
    dend_26 { pt3dadd( -45.2887, 28.9468, -68.7806, 0.67 ) }
    dend_26 { pt3dadd( -47.6186, 29.2441, -70.4487, 0.67 ) }
    dend_26 { pt3dadd( -50.2997, 29.0319, -72.4458, 0.67 ) }
    dend_26 { pt3dadd( -55.3034, 27.559, -76.0477, 0.67 ) }
    dend_26 { pt3dadd( -58.4876, 26.4008, -78.0054, 0.67 ) }
    dend_26 { pt3dadd( -63.0233, 24.6662, -80.8879, 0.67 ) }
    dend_26 { pt3dadd( -67.8756, 22.3836, -84.3252, 0.67 ) }
    dend_26 { pt3dadd( -72.1279, 19.7303, -87.5961, 0.67 ) }
    dend_26 { pt3dadd( -73.387, 18.733, -88.7018, 0.67 ) }
    dend_26 { pt3dadd( -75.8707, 16.1786, -91.3455, 0.67 ) }
    dend_26 { pt3dadd( -79.2136, 12.1505, -95.1979, 0.67 ) }
    dend_26 { pt3dadd( -80.6343, 10.4533, -96.8349, 0.67 ) }
    dend_26 { pt3dadd( -83.4265, 7.74512, -99.9364, 0.67 ) }
    dend_26 { pt3dadd( -84.6573, 6.50535, -101.378, 0.67 ) }
    dend_26 { pt3dadd( -86.7209, 4.70749, -104.423, 0.67 ) }
    dend_26 { pt3dadd( -87.7808, 3.8341, -106.497, 0.33 ) }
    dend_26 { pt3dadd( -88.9336, 3.05517, -108.997, 0.67 ) }
    dend_26 { pt3dadd( -91.1136, 2.00004, -114.334, 0.67 ) }
    dend_26 { pt3dadd( -91.8017, 1.73771, -116.137, 0.67 ) }
    dend_26 { pt3dadd( -96.0033, 0.0886509, -127.074, 0.67 ) }
    dend_26 { pt3dadd( -97.8981, -0.678685, -131.949, 0.67 ) }
    dend_26 { pt3dadd( -98.6374, -1.04523, -133.801, 1.33 ) }
    dend_26 { pt3dadd( -101.54, -2.71921, -140.407, 0.33 ) }
    dend_26 { pt3dadd( -102.227, -3.15406, -141.55, 0.33 ) }
    dend_26 { pt3dadd( -103.927, -4.20599, -143.564, 0.67 ) }
    dend_26 { pt3dadd( -106.266, -5.70312, -145.022, 0.33 ) }
    dend_26 { pt3dadd( -109.188, -7.54617, -146.27, 0.67 ) }
    dend_26 { pt3dadd( -111.793, -9.15384, -147.143, 0.33 ) }
    dend_26 { pt3dadd( -115.787, -11.7175, -147.812, 0.67 ) }
    dend_26 { pt3dadd( -117.905, -13.0193, -148.085, 0.33 ) }
    dend_26 { pt3dadd( -118.966, -13.6368, -148.209, 0.67 ) }
    dend_26 { pt3dadd( -120.888, -14.8272, -148.418, 0.33 ) }
    dend_26 { pt3dadd( -122.575, -15.9213, -148.565, 1.33 ) }
    dend_26 { pt3dadd( -125.859, -18.4053, -148.753, 0.33 ) }
    dend_26 { pt3dadd( -127.272, -19.396, -148.585, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 50/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.2292, 2.5833, -8.80115, 1.33 ) }
    dend_21 { pt3dadd( -12.4742, -0.0560681, -10.2, 0.67 ) }
    dend_21 { pt3dadd( -13.4603, -1.33182, -10.8746, 0.67 ) }
    dend_21 { pt3dadd( -14.9586, -3.69685, -12.0598, 0.67 ) }
    dend_21 { pt3dadd( -16.2839, -5.7347, -13.1236, 0.67 ) }
    dend_21 { pt3dadd( -17.971, -8.84925, -14.6816, 0.67 ) }
    dend_21 { pt3dadd( -19.503, -11.6644, -16.0436, 0.67 ) }
    dend_21 { pt3dadd( -20.3229, -13.2795, -16.843, 0.67 ) }
    dend_21 { pt3dadd( -21.2481, -15.3495, -17.8211, 0.67 ) }
    dend_21 { pt3dadd( -22.4951, -18.732, -19.5218, 0.67 ) }
    dend_21 { pt3dadd( -23.8013, -22.1576, -21.397, 0.67 ) }
    dend_21 { pt3dadd( -24.9024, -24.7148, -22.8356, 0.67 ) }
    dend_21 { pt3dadd( -26.4616, -27.7935, -24.9348, 0.67 ) }
    dend_21 { pt3dadd( -27.8787, -30.3306, -26.8461, 0.67 ) }
    dend_21 { pt3dadd( -29.8521, -33.6297, -29.4954, 0.67 ) }
    dend_21 { pt3dadd( -31.5626, -36.5563, -31.9817, 0.67 ) }
    dend_21 { pt3dadd( -32.4441, -37.8333, -33.2248, 0.67 ) }
    dend_21 { pt3dadd( -34.0167, -40.2925, -35.8473, 0.67 ) }
    dend_21 { pt3dadd( -34.5317, -40.9391, -36.6761, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.99552, -0.664275, -4.42116, 2.0 ) }
    dend_17 { pt3dadd( -8.65118, 1.80065, -3.11738, 0.67 ) }
    dend_17 { pt3dadd( -10.2146, 6.98376, -0.57505, 0.67 ) }
    dend_17 { pt3dadd( -11.5369, 10.2988, 0.664086, 0.67 ) }
    dend_17 { pt3dadd( -12.784, 13.0538, 1.39546, 0.67 ) }
    dend_17 { pt3dadd( -14.5714, 16.4343, 1.9935, 0.67 ) }
    dend_17 { pt3dadd( -16.8467, 20.74, 2.40884, 0.67 ) }
    dend_17 { pt3dadd( -20.036, 26.3647, 2.19413, 0.67 ) }
    dend_17 { pt3dadd( -23.2626, 31.8128, 1.21803, 0.67 ) }
    dend_17 { pt3dadd( -24.7515, 34.4036, 0.540093, 0.67 ) }
    dend_17 { pt3dadd( -27.6811, 39.4447, -1.03677, 0.67 ) }
    dend_17 { pt3dadd( -29.4754, 42.5297, -2.08536, 0.67 ) }
    dend_17 { pt3dadd( -32.8099, 47.9975, -3.84093, 0.67 ) }
    dend_17 { pt3dadd( -33.8427, 49.8567, -4.48933, 0.67 ) }
    dend_17 { pt3dadd( -34.9383, 51.971, -4.97727, 0.67 ) }
    dend_17 { pt3dadd( -35.8174, 53.6717, -5.30904, 0.67 ) }
    dend_17 { pt3dadd( -36.3825, 54.7295, -5.47347, 0.67 ) }
    dend_17 { pt3dadd( -38.1933, 57.6281, -5.78561, 0.67 ) }
    dend_17 { pt3dadd( -39.8499, 60.089, -6.02764, 0.67 ) }
    dend_17 { pt3dadd( -42.6031, 64.1576, -6.37945, 0.67 ) }
    dend_17 { pt3dadd( -44.164, 66.4079, -6.55072, 0.67 ) }
    dend_17 { pt3dadd( -45.6518, 68.651, -6.70991, 0.67 ) }
    dend_17 { pt3dadd( -48.1193, 72.4842, -6.9877, 0.67 ) }
    dend_17 { pt3dadd( -49.148, 74.0083, -7.11381, 0.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 93/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.99552, -0.664275, -4.42116, 2.0 ) }
    dend_16 { pt3dadd( -8.2795, -3.08272, -5.7984, 0.67 ) }
    dend_16 { pt3dadd( -8.59491, -4.35612, -6.3955, 0.67 ) }
    dend_16 { pt3dadd( -9.11374, -6.49319, -7.2846, 0.67 ) }
    dend_16 { pt3dadd( -9.66357, -8.2409, -8.10487, 0.67 ) }
    dend_16 { pt3dadd( -10.3956, -10.329, -9.14113, 0.67 ) }
    dend_16 { pt3dadd( -11.1884, -12.4825, -10.3233, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -12.7002, -15.9817, -12.4464, 0.67 ) }
    dend_16 { pt3dadd( -13.5234, -17.7061, -13.6269, 0.67 ) }
    dend_16 { pt3dadd( -15.1377, -20.2304, -15.6285, 0.67 ) }
    dend_16 { pt3dadd( -15.1377, -20.2304, -15.6285, 0.67 ) }
    dend_16 { pt3dadd( -17.211, -22.2639, -17.7795, 0.67 ) }
    dend_16 { pt3dadd( -18.4903, -23.382, -19.1041, 0.67 ) }
    dend_16 { pt3dadd( -19.9304, -24.4868, -20.6365, 0.67 ) }
    dend_16 { pt3dadd( -22.4099, -26.0706, -23.0415, 0.67 ) }
    dend_16 { pt3dadd( -24.1234, -27.1533, -24.6699, 0.67 ) }
    dend_16 { pt3dadd( -25.8722, -28.2715, -26.3554, 0.67 ) }
    dend_16 { pt3dadd( -26.8596, -28.8196, -27.2555, 0.67 ) }
    dend_16 { pt3dadd( -28.09, -29.5366, -28.3936, 0.67 ) }
    dend_16 { pt3dadd( -30.5612, -30.8307, -30.3798, 0.67 ) }
    dend_16 { pt3dadd( -31.4698, -31.3148, -31.1078, 0.67 ) }
    dend_16 { pt3dadd( -33.5794, -32.4487, -32.5908, 0.67 ) }
    dend_16 { pt3dadd( -36.4588, -34.0024, -34.3114, 0.67 ) }
    dend_16 { pt3dadd( -37.8906, -34.7242, -34.9925, 0.67 ) }
    dend_16 { pt3dadd( -40.0661, -35.6926, -35.7656, 0.67 ) }
    dend_16 { pt3dadd( -42.0586, -36.3886, -36.2253, 0.67 ) }
    dend_16 { pt3dadd( -44.7727, -37.1726, -36.8355, 0.67 ) }
    dend_16 { pt3dadd( -46.67, -37.5833, -37.2791, 0.67 ) }
    dend_16 { pt3dadd( -50.4079, -38.2258, -38.4268, 0.67 ) }
    dend_16 { pt3dadd( -52.9353, -38.5487, -39.4567, 0.67 ) }
    dend_16 { pt3dadd( -53.9018, -38.6529, -39.9601, 0.67 ) }
    dend_16 { pt3dadd( -56.9044, -38.8375, -41.7631, 0.67 ) }
    dend_16 { pt3dadd( -58.7911, -38.9114, -43.2601, 0.67 ) }
    dend_16 { pt3dadd( -60.5952, -39.0614, -45.1002, 0.67 ) }
    dend_16 { pt3dadd( -61.9028, -39.2449, -46.8496, 0.67 ) }
    dend_16 { pt3dadd( -62.9472, -39.5595, -48.7824, 0.67 ) }
    dend_16 { pt3dadd( -63.1566, -39.6832, -49.2162, 0.67 ) }
    dend_16 { pt3dadd( -64.0024, -40.3787, -51.075, 0.67 ) }
    dend_16 { pt3dadd( -64.3966, -40.8554, -52.0464, 0.67 ) }
    dend_16 { pt3dadd( -64.9949, -41.7119, -53.7154, 0.67 ) }
    dend_16 { pt3dadd( -66.3327, -43.8094, -57.8885, 0.67 ) }
    dend_16 { pt3dadd( -67.3441, -45.5119, -61.2098, 0.33 ) }
    dend_16 { pt3dadd( -67.4878, -45.7204, -61.6195, 1.33 ) }
    dend_16 { pt3dadd( -67.9868, -46.3112, -62.7553, 0.33 ) }
    dend_16 { pt3dadd( -69.0169, -47.5621, -65.0681, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 38/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 22.185, -55.7585, 3.00023, 0.67 ) }
    dend_11 { pt3dadd( 23.6674, -61.1301, 5.72872, 0.67 ) }
    dend_11 { pt3dadd( 25.1655, -66.5584, 8.48605, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 22.185, -55.7585, 3.00023, 0.67 ) }
    dend_10 { pt3dadd( 25.0414, -55.1739, 3.73066, 0.33 ) }
    dend_10 { pt3dadd( 28.5581, -54.454, 4.62998, 0.33 ) }
    dend_10 { pt3dadd( 30.2956, -54.0983, 5.07431, 0.33 ) }
    dend_10 { pt3dadd( 33.2479, -53.494, 5.82926, 0.33 ) }
    dend_10 { pt3dadd( 38.0633, -52.5084, 7.06069, 0.33 ) }
    dend_10 { pt3dadd( 46.6073, -50.7595, 9.2456, 0.33 ) }
    dend_10 { pt3dadd( 57.5979, -46.5015, 12.538, 0.33 ) }
    dend_10 { pt3dadd( 68.6112, -43.167, 16.7035, 0.33 ) }
    dend_10 { pt3dadd( 79.5051, -40.591, 21.6482, 0.33 ) }
    dend_10 { pt3dadd( 100.241, -32.7669, 31.6139, 0.33 ) }
    dend_10 { pt3dadd( 109.102, -24.7478, 34.2472, 0.33 ) }
    dend_10 { pt3dadd( 119.895, -18.9812, 34.4093, 0.33 ) }
    dend_10 { pt3dadd( 131.291, -14.7741, 32.9317, 0.33 ) }
    dend_10 { pt3dadd( 142.318, -9.82829, 31.0042, 0.33 ) }
    dend_10 { pt3dadd( 153.214, -4.66851, 28.9064, 0.33 ) }
    dend_10 { pt3dadd( 163.702, 1.53186, 27.7567, 0.33 ) }
    dend_10 { pt3dadd( 174.559, 7.11502, 28.6084, 0.33 ) }
    dend_10 { pt3dadd( 186.18, 10.3552, 30.6632, 0.33 ) }
    dend_10 { pt3dadd( 197.182, 14.6577, 33.8581, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 6.92834, -6.00167, 8.85622, 1.33 ) }
    dend_4 { pt3dadd( 10.3409, -9.36015, 9.04147, 0.67 ) }
    dend_4 { pt3dadd( 12.8333, -11.9934, 9.08899, 0.67 ) }
    dend_4 { pt3dadd( 16.0684, -15.23, 9.1315, 0.67 ) }
    dend_4 { pt3dadd( 20.464, -19.4616, 9.30765, 0.67 ) }
    dend_4 { pt3dadd( 22.8544, -21.6448, 9.44342, 0.67 ) }
    dend_4 { pt3dadd( 30.5745, -28.6011, 9.87853, 0.67 ) }
    dend_4 { pt3dadd( 34.4742, -31.9115, 10.1565, 0.67 ) }
    dend_4 { pt3dadd( 37.671, -34.5574, 10.339, 0.67 ) }
    dend_4 { pt3dadd( 40.9108, -37.1059, 10.4247, 0.33 ) }
    dend_4 { pt3dadd( 42.4463, -38.3746, 10.4819, 0.33 ) }
    dend_4 { pt3dadd( 44.9815, -40.2867, 10.6648, 0.33 ) }
    dend_4 { pt3dadd( 53.6515, -45.2413, 12.9509, 0.33 ) }
    dend_4 { pt3dadd( 61.0176, -51.4779, 16.3845, 0.33 ) }
    dend_4 { pt3dadd( 68.7724, -56.8741, 20.3455, 0.33 ) }
    dend_4 { pt3dadd( 75.6841, -62.4131, 25.4926, 0.33 ) }
    dend_4 { pt3dadd( 82.1847, -67.5942, 31.4795, 0.33 ) }
    dend_4 { pt3dadd( 87.6363, -74.084, 37.2334, 0.33 ) }
    dend_4 { pt3dadd( 92.1022, -81.7287, 42.3869, 0.33 ) }
    dend_4 { pt3dadd( 97.3359, -88.0577, 48.5103, 0.33 ) }
    dend_4 { pt3dadd( 102.63, -94.881, 54.0197, 0.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 82/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.92834, -6.00167, 8.85622, 1.33 ) }
    dend_1 { pt3dadd( 11.4474, -1.88041, 8.65487, 0.67 ) }
    dend_1 { pt3dadd( 14.4, 0.955838, 8.75302, 0.67 ) }
    dend_1 { pt3dadd( 20.8144, 7.38469, 9.19427, 0.67 ) }
    dend_1 { pt3dadd( 29.1775, 15.8459, 9.92353, 0.67 ) }
    dend_1 { pt3dadd( 32.5262, 19.316, 10.2442, 0.67 ) }
    dend_1 { pt3dadd( 38.5767, 25.7125, 10.8378, 0.33 ) }
    dend_1 { pt3dadd( 39.3328, 26.6466, 10.9783, 0.67 ) }
    dend_1 { pt3dadd( 40.1312, 27.7063, 11.2888, 0.33 ) }
    dend_1 { pt3dadd( 40.5753, 28.3544, 11.6104, 0.67 ) }
    dend_1 { pt3dadd( 41.7569, 30.7765, 12.632, 0.33 ) }
    dend_1 { pt3dadd( 42.4665, 32.672, 13.3118, 0.67 ) }
    dend_1 { pt3dadd( 43.9295, 37.1619, 14.1385, 0.33 ) }
    dend_1 { pt3dadd( 44.2101, 38.0731, 14.2572, 0.67 ) }
    dend_1 { pt3dadd( 45.52, 42.5634, 14.6643, 0.33 ) }
    dend_1 { pt3dadd( 46.5162, 46.5841, 15.1956, 0.67 ) }
    dend_1 { pt3dadd( 47.968, 52.649, 15.3934, 0.67 ) }
    dend_1 { pt3dadd( 48.5763, 55.3472, 15.3412, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( 49.5364, 59.5391, 15.0566, 0.67 ) }
    dend_1 { pt3dadd( 49.8594, 60.7819, 14.9821, 1.33 ) }
    dend_1 { pt3dadd( 51.8975, 69.0962, 14.5392, 0.67 ) }
    dend_1 { pt3dadd( 53.8181, 76.6998, 14.5165, 1.33 ) }
    dend_1 { pt3dadd( 55.3508, 82.0626, 14.3299, 0.67 ) }
    dend_1 { pt3dadd( 56.3064, 85.0364, 14.1441, 1.33 ) }
    dend_1 { pt3dadd( 59.6718, 93.6324, 13.396, 0.67 ) }
    dend_1 { pt3dadd( 62.1314, 99.3345, 12.6618, 0.67 ) }
    dend_1 { pt3dadd( 64.1076, 103.562, 11.7973, 0.67 ) }
    dend_1 { pt3dadd( 67.098, 109.82, 10.5148, 0.67 ) }
    dend_1 { pt3dadd( 68.1287, 111.923, 9.90658, 2.0 ) }
    dend_1 { pt3dadd( 70.269, 116.431, 8.33135, 0.67 ) }
    dend_1 { pt3dadd( 72.1116, 120.414, 6.59689, 0.67 ) }
    dend_1 { pt3dadd( 73.7859, 124.249, 4.84306, 0.33 ) }
    dend_1 { pt3dadd( 74.027, 124.998, 4.52524, 1.33 ) }
    dend_1 { pt3dadd( 74.708, 127.85, 3.84399, 0.33 ) }
    dend_1 { pt3dadd( 75.0153, 129.094, 3.72839, 1.33 ) }
    dend_1 { pt3dadd( 75.7051, 131.367, 4.13778, 0.33 ) }
    dend_1 { pt3dadd( 76.1644, 132.566, 4.57395, 1.33 ) }
    dend_1 { pt3dadd( 77.2675, 135.211, 5.7301, 0.33 ) }
    dend_1 { pt3dadd( 79.1174, 139.479, 7.72504, 4.67 ) }
    dend_1 { pt3dadd( 81.3485, 144.403, 10.2264, 0.33 ) }
    dend_1 { pt3dadd( 83.5714, 149.292, 12.8256, 2.67 ) }
    dend_1 { pt3dadd( 84.8911, 152.278, 14.4742, 0.33 ) }
    dend_1 { pt3dadd( 85.3572, 153.3, 15.0376, 1.33 ) }
    dend_1 { pt3dadd( 91.7896, 164.437, 14.9427, 1.33 ) }
    dend_1 { pt3dadd( 96.8014, 176.281, 14.7682, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 27/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 18.0441, -32.8154, -0.295096, 0.562123 ) }
    axon_1 { pt3dadd( 25.6505, -45.7437, -0.295096, 0.562123 ) }
    axon_1 { pt3dadd( 33.2568, -58.6721, -0.295096, 0.562123 ) }
    // Section: apic_13, id: apic_13, parent: apic_1 (entry count 30/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 8.00741, 37.125, -11.9655, 1.33 ) }
    apic_13 { pt3dadd( 4.84084, 39.5526, -15.7656, 0.67 ) }
    apic_13 { pt3dadd( 3.27774, 40.5524, -17.6472, 0.67 ) }
    apic_13 { pt3dadd( 0.355145, 42.4327, -21.3913, 0.67 ) }
    apic_13 { pt3dadd( -0.222967, 42.7815, -22.0701, 0.67 ) }
    apic_13 { pt3dadd( -3.93789, 44.747, -26.155, 0.67 ) }
    apic_13 { pt3dadd( -6.05318, 45.7693, -28.4242, 0.67 ) }
    apic_13 { pt3dadd( -9.45864, 47.0761, -31.5842, 0.67 ) }
    apic_13 { pt3dadd( -11.7778, 47.67, -33.6795, 0.67 ) }
    apic_13 { pt3dadd( -15.1763, 48.2949, -36.5907, 0.67 ) }
    apic_13 { pt3dadd( -17.3663, 48.5748, -38.2895, 0.67 ) }
    apic_13 { pt3dadd( -21.9477, 48.5871, -41.3711, 0.67 ) }
    apic_13 { pt3dadd( -27.1144, 48.1261, -44.7838, 0.67 ) }
    apic_13 { pt3dadd( -30.3271, 47.5587, -46.737, 0.67 ) }
    apic_13 { pt3dadd( -32.6712, 46.7905, -48.214, 0.67 ) }
    apic_13 { pt3dadd( -34.9867, 45.6152, -49.9371, 0.67 ) }
    apic_13 { pt3dadd( -37.798, 43.7657, -52.2268, 0.67 ) }
    apic_13 { pt3dadd( -40.0986, 41.6482, -54.2158, 0.67 ) }
    apic_13 { pt3dadd( -42.0251, 39.2583, -56.314, 0.67 ) }
    apic_13 { pt3dadd( -43.9287, 36.9919, -58.3696, 0.67 ) }
    apic_13 { pt3dadd( -45.532, 35.0859, -60.301, 0.67 ) }
    apic_13 { pt3dadd( -46.9495, 33.6563, -62.0531, 0.67 ) }
    apic_13 { pt3dadd( -48.642, 32.1191, -64.1656, 0.67 ) }
    apic_13 { pt3dadd( -50.756, 30.3577, -66.8051, 0.67 ) }
    apic_13 { pt3dadd( -54.0022, 28.1889, -70.4978, 0.67 ) }
    apic_13 { pt3dadd( -56.1985, 27.2512, -72.4962, 0.67 ) }
    apic_13 { pt3dadd( -60.29, 25.7599, -76.2963, 0.67 ) }
    apic_13 { pt3dadd( -62.8727, 24.8882, -78.7784, 0.67 ) }
    apic_13 { pt3dadd( -66.7321, 23.9352, -82.5688, 0.67 ) }
    apic_13 { pt3dadd( -69.6524, 23.4925, -85.364, 0.67 ) }
    apic_13 { pt3dadd( -73.4617, 22.7212, -89.1247, 0.67 ) }
    apic_13 { pt3dadd( -77.7464, 21.614, -93.2574, 0.67 ) }
    apic_13 { pt3dadd( -79.4937, 21.3152, -95.0811, 0.67 ) }
    apic_13 { pt3dadd( -82.4402, 20.9125, -98.1645, 0.67 ) }
    apic_13 { pt3dadd( -84.0467, 20.6314, -99.8777, 0.67 ) }
    apic_13 { pt3dadd( -87.0769, 20.0228, -103.389, 0.67 ) }
    apic_13 { pt3dadd( -91.5603, 19.3546, -108.44, 0.67 ) }
    apic_13 { pt3dadd( -94.6488, 19.1202, -111.65, 0.67 ) }
    apic_13 { pt3dadd( -96.6203, 18.9831, -113.763, 0.67 ) }
    apic_13 { pt3dadd( -98.474, 18.8396, -115.752, 0.67 ) }
    apic_13 { pt3dadd( -102.283, 18.7998, -120.05, 0.67 ) }
    apic_13 { pt3dadd( -105.348, 19.0099, -123.564, 0.33 ) }
    apic_13 { pt3dadd( -108.467, 19.146, -126.949, 0.33 ) }
    apic_13 { pt3dadd( -109.746, 19.1401, -128.161, 0.67 ) }
    apic_13 { pt3dadd( -111.451, 19.1902, -129.642, 0.33 ) }
    apic_13 { pt3dadd( -115.353, 19.3994, -132.267, 0.33 ) }
    apic_13 { pt3dadd( -118.193, 19.2566, -133.536, 0.33 ) }
    apic_13 { pt3dadd( -121.574, 18.7501, -134.547, 0.67 ) }
    apic_13 { pt3dadd( -124.879, 18.2541, -135.083, 0.33 ) }
    apic_13 { pt3dadd( -126.479, 17.941, -135.237, 0.67 ) }
    apic_13 { pt3dadd( -129.118, 17.3558, -135.478, 0.33 ) }
    apic_13 { pt3dadd( -132.172, 16.5331, -136.004, 0.33 ) }
    apic_13 { pt3dadd( -134.315, 15.9804, -136.703, 1.33 ) }
    apic_13 { pt3dadd( -136.266, 15.4296, -137.561, 0.33 ) }
    apic_13 { pt3dadd( -137.997, 14.8579, -138.395, 0.67 ) }
    apic_13 { pt3dadd( -140.991, 13.9156, -139.819, 0.33 ) }
    apic_13 { pt3dadd( -144.82, 12.6157, -141.852, 0.33 ) }
    apic_13 { pt3dadd( -145.205, 12.488, -142.053, 0.67 ) }
    apic_13 { pt3dadd( -147.893, 11.4131, -143.653, 0.33 ) }
    apic_13 { pt3dadd( -149.828, 10.5743, -144.727, 0.33 ) }
    apic_13 { pt3dadd( -150.929, 10.0917, -145.255, 0.67 ) }
    apic_13 { pt3dadd( -154.328, 8.4691, -146.561, 0.33 ) }
    apic_13 { pt3dadd( -155.615, 7.87681, -146.931, 0.67 ) }
    apic_13 { pt3dadd( -160.085, 5.6499, -148.151, 0.33 ) }
    apic_13 { pt3dadd( -162.655, 4.22324, -148.771, 1.33 ) }
    apic_13 { pt3dadd( -165.747, 2.39439, -149.336, 0.33 ) }
    apic_13 { pt3dadd( -168.015, 1.11736, -149.881, 0.33 ) }
    apic_13 { pt3dadd( -169.707, 0.195646, -150.303, 0.33 ) }
    apic_13 { pt3dadd( -170.454, -0.248773, -150.629, 0.67 ) }
    apic_13 { pt3dadd( -172.626, -1.65571, -152.021, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_13 { pt3dadd( -173.282, -2.10045, -152.517, 0.67 ) }
    apic_13 { pt3dadd( -178.059, -5.51113, -156.613, 0.33 ) }
    apic_13 { pt3dadd( -179.426, -6.44692, -157.905, 0.67 ) }
    apic_13 { pt3dadd( -182.685, -8.8487, -161.423, 0.33 ) }
    apic_13 { pt3dadd( -183.975, -9.82789, -162.979, 1.33 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 5/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 8.00741, 37.125, -11.9655, 1.33 ) }
    apic_2 { pt3dadd( 8.10059, 44.3378, -13.5096, 1.33 ) }
    apic_2 { pt3dadd( 8.19059, 51.304, -15.0009, 1.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 8/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.829, -14.4087, -12.214, 1.33 ) }
    dend_35 { pt3dadd( 9.27946, -15.5399, -13.3087, 0.67 ) }
    dend_35 { pt3dadd( 14.1913, -17.7462, -14.7649, 0.67 ) }
    dend_35 { pt3dadd( 17.0506, -19.2343, -15.5779, 0.67 ) }
    dend_35 { pt3dadd( 19.237, -20.5479, -16.2641, 0.67 ) }
    dend_35 { pt3dadd( 22.6258, -22.4565, -17.3014, 0.67 ) }
    dend_35 { pt3dadd( 26.1011, -24.4414, -18.3832, 0.67 ) }
    dend_35 { pt3dadd( 29.5471, -26.3763, -19.6649, 0.67 ) }
    dend_35 { pt3dadd( 32.6275, -27.9624, -20.8061, 0.67 ) }
    dend_35 { pt3dadd( 36.5731, -30.0217, -22.6412, 0.67 ) }
    dend_35 { pt3dadd( 39.6244, -31.5945, -24.3859, 0.67 ) }
    dend_35 { pt3dadd( 43.7439, -33.8436, -27.1943, 0.67 ) }
    dend_35 { pt3dadd( 48.4009, -36.5672, -30.9072, 0.67 ) }
    dend_35 { pt3dadd( 51.3027, -38.1943, -33.446, 0.67 ) }
    dend_35 { pt3dadd( 53.6482, -39.4029, -35.7446, 0.67 ) }
    dend_35 { pt3dadd( 56.1613, -40.5461, -38.6584, 0.67 ) }
    dend_35 { pt3dadd( 57.5605, -41.14, -40.5974, 0.67 ) }
    dend_35 { pt3dadd( 58.8436, -41.5813, -42.5321, 0.67 ) }
    dend_35 { pt3dadd( 60.1764, -42.0208, -44.5866, 0.67 ) }
    dend_35 { pt3dadd( 62.7789, -42.6115, -49.4374, 0.67 ) }
    dend_35 { pt3dadd( 65.2739, -42.5296, -54.2011, 0.67 ) }
    dend_35 { pt3dadd( 66.3318, -42.2577, -56.4767, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 30/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.829, -14.4087, -12.214, 1.33 ) }
    dend_34 { pt3dadd( 5.151, -17.2003, -15.8708, 0.67 ) }
    dend_34 { pt3dadd( 4.43353, -19.0343, -18.4462, 0.67 ) }
    dend_34 { pt3dadd( 4.03163, -20.5369, -20.618, 0.67 ) }
    dend_34 { pt3dadd( 3.01448, -24.4155, -26.6785, 0.67 ) }
    dend_34 { pt3dadd( 2.42064, -26.3459, -29.9333, 0.67 ) }
    dend_34 { pt3dadd( 1.31936, -29.5739, -35.6307, 0.67 ) }
    dend_34 { pt3dadd( 0.760231, -32.2788, -40.2908, 0.67 ) }
    dend_34 { pt3dadd( 0.699014, -33.0821, -41.7148, 0.67 ) }
    dend_34 { pt3dadd( 0.800654, -34.7007, -44.5974, 0.67 ) }
    dend_34 { pt3dadd( 1.10219, -35.6244, -46.6052, 0.67 ) }
    dend_34 { pt3dadd( 1.40412, -36.3015, -47.7616, 0.67 ) }
    dend_34 { pt3dadd( 2.3201, -37.8265, -50.1676, 0.67 ) }
    dend_34 { pt3dadd( 2.91556, -39.0923, -51.5565, 0.67 ) }
    dend_34 { pt3dadd( 3.58344, -40.5588, -52.9523, 0.67 ) }
    dend_34 { pt3dadd( 5.31654, -45.1611, -57.2885, 0.67 ) }
    dend_34 { pt3dadd( 6.3474, -47.9086, -59.9579, 0.67 ) }
    dend_34 { pt3dadd( 6.72052, -48.911, -60.9608, 0.67 ) }
    dend_34 { pt3dadd( 7.62373, -51.7365, -63.9396, 0.67 ) }
    dend_34 { pt3dadd( 8.14562, -53.7574, -66.2904, 0.67 ) }
    dend_34 { pt3dadd( 8.9802, -58.2662, -71.482, 0.67 ) }
    dend_34 { pt3dadd( 9.13254, -59.7882, -73.312, 0.67 ) }
    dend_34 { pt3dadd( 9.19017, -60.7033, -74.4994, 0.67 ) }
    dend_34 { pt3dadd( 9.26555, -62.2067, -76.8392, 0.67 ) }
    dend_34 { pt3dadd( 9.41815, -63.78, -79.8931, 0.67 ) }
    dend_34 { pt3dadd( 9.48039, -65.2996, -82.8858, 0.67 ) }
    dend_34 { pt3dadd( 9.64411, -67.8599, -87.3431, 0.67 ) }
    dend_34 { pt3dadd( 9.60763, -69.962, -91.4027, 0.67 ) }
    dend_34 { pt3dadd( 9.48545, -71.8242, -95.2501, 0.67 ) }
    dend_34 { pt3dadd( 9.34436, -73.8576, -99.5106, 0.67 ) }
    dend_34 { pt3dadd( 9.19117, -74.7934, -101.551, 0.67 ) }
    dend_34 { pt3dadd( 8.75613, -76.0622, -104.669, 1.33 ) }
    dend_34 { pt3dadd( 7.54947, -78.3537, -109.867, 0.67 ) }
    dend_34 { pt3dadd( 7.27041, -78.8618, -110.971, 0.33 ) }
    dend_34 { pt3dadd( 6.94619, -79.5186, -112.073, 1.33 ) }
    dend_34 { pt3dadd( 5.72162, -81.5704, -115.348, 0.67 ) }
    dend_34 { pt3dadd( 5.12314, -82.6538, -117.175, 0.33 ) }
    dend_34 { pt3dadd( 4.47346, -83.8778, -119.095, 0.33 ) }
    dend_34 { pt3dadd( 4.2913, -84.2879, -119.584, 0.67 ) }
    dend_34 { pt3dadd( 3.87846, -85.2578, -120.76, 0.33 ) }
    dend_34 { pt3dadd( 3.61795, -85.8729, -121.504, 0.67 ) }
    dend_34 { pt3dadd( 2.51134, -88.5702, -124.414, 0.33 ) }
    dend_34 { pt3dadd( 2.19382, -89.194, -125.029, 0.67 ) }
    dend_34 { pt3dadd( 1.51265, -90.6495, -126.414, 0.33 ) }
    dend_34 { pt3dadd( 1.37577, -90.938, -126.684, 0.67 ) }
    dend_34 { pt3dadd( -0.15432, -94.0656, -129.477, 0.33 ) }
    dend_34 { pt3dadd( -0.534656, -94.8055, -130.049, 0.67 ) }
    dend_34 { pt3dadd( -2.01465, -97.36, -131.656, 0.33 ) }
    dend_34 { pt3dadd( -2.75083, -98.7684, -132.596, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 99.207, -6.40882, -33.1635, 0.33 ) }
    dend_30 { pt3dadd( 100.073, -6.14922, -33.7443, 0.67 ) }
    dend_30 { pt3dadd( 101.439, -5.6707, -34.6683, 0.33 ) }
    dend_30 { pt3dadd( 102.358, -5.33003, -35.2544, 1.33 ) }
    dend_30 { pt3dadd( 103.465, -4.83213, -36.0164, 0.33 ) }
    dend_30 { pt3dadd( 105.521, -4.02857, -37.3457, 0.67 ) }
    dend_30 { pt3dadd( 106.652, -3.63989, -38.0993, 0.33 ) }
    dend_30 { pt3dadd( 107.24, -3.46751, -38.5167, 0.33 ) }
    dend_30 { pt3dadd( 107.963, -3.3185, -39.1093, 0.67 ) }
    dend_30 { pt3dadd( 109.473, -3.11228, -40.3312, 0.33 ) }
    dend_30 { pt3dadd( 111.127, -2.96379, -41.6427, 0.33 ) }
    dend_30 { pt3dadd( 112.114, -3.02885, -42.3187, 0.67 ) }
    dend_30 { pt3dadd( 113.05, -3.24377, -43.023, 0.33 ) }
    dend_30 { pt3dadd( 114.456, -3.72659, -44.2272, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 99.207, -6.40882, -33.1635, 0.33 ) }
    dend_29 { pt3dadd( 100.974, -8.46507, -35.4293, 0.33 ) }
    dend_29 { pt3dadd( 102.384, -9.23909, -36.8793, 0.67 ) }
    dend_29 { pt3dadd( 104.139, -10.0361, -38.4105, 0.67 ) }
    dend_29 { pt3dadd( 105.242, -10.6641, -39.2677, 0.67 ) }
    dend_29 { pt3dadd( 109.63, -13.1989, -42.2188, 0.67 ) }
    dend_29 { pt3dadd( 112.72, -15.0691, -44.0155, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 115.157, -16.5294, -45.2346, 0.67 ) }
    dend_29 { pt3dadd( 117.025, -17.8829, -46.0913, 0.67 ) }
    dend_29 { pt3dadd( 119.777, -20.1431, -47.5759, 0.67 ) }
    dend_29 { pt3dadd( 121.294, -21.6492, -48.4332, 0.67 ) }
    dend_29 { pt3dadd( 122.704, -23.4937, -49.2246, 0.67 ) }
    dend_29 { pt3dadd( 124.43, -26.3773, -50.3237, 0.67 ) }
    dend_29 { pt3dadd( 126.684, -30.887, -51.9307, 0.67 ) }
    dend_29 { pt3dadd( 128.727, -35.8699, -53.9593, 0.67 ) }
    dend_29 { pt3dadd( 129.466, -37.8701, -54.8291, 0.33 ) }
    dend_29 { pt3dadd( 129.929, -39.2108, -55.4364, 1.33 ) }
    dend_29 { pt3dadd( 130.79, -41.3632, -56.787, 0.33 ) }
    dend_29 { pt3dadd( 131.786, -43.6115, -58.5052, 1.33 ) }
    dend_29 { pt3dadd( 133.632, -48.1279, -61.9314, 0.33 ) }
    dend_29 { pt3dadd( 134.253, -49.6431, -62.9529, 0.33 ) }
    dend_29 { pt3dadd( 135.112, -51.4291, -64.169, 1.33 ) }
    dend_29 { pt3dadd( 138.398, -57.6125, -68.2487, 0.67 ) }
    dend_29 { pt3dadd( 139.134, -58.7987, -69.103, 0.67 ) }
    dend_29 { pt3dadd( 141.201, -61.8349, -71.2208, 0.33 ) }
    dend_29 { pt3dadd( 142.76, -63.9788, -72.5416, 1.33 ) }
    dend_29 { pt3dadd( 144.499, -66.4642, -73.8629, 0.33 ) }
    dend_29 { pt3dadd( 145.338, -67.7021, -74.3833, 0.33 ) }
    dend_29 { pt3dadd( 148.402, -71.8484, -75.6833, 1.33 ) }
    dend_29 { pt3dadd( 150.02, -73.727, -76.4157, 0.33 ) }
    dend_29 { pt3dadd( 151.38, -75.1433, -77.1558, 0.67 ) }
    dend_29 { pt3dadd( 153.622, -77.4557, -78.6451, 0.33 ) }
    dend_29 { pt3dadd( 153.864, -77.6931, -78.8167, 0.67 ) }
    dend_29 { pt3dadd( 155.171, -78.902, -79.6264, 0.33 ) }
    dend_29 { pt3dadd( 155.547, -79.2624, -79.7186, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 28/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -34.5317, -40.9391, -36.6761, 0.67 ) }
    dend_23 { pt3dadd( -35.6407, -41.9194, -38.6117, 0.67 ) }
    dend_23 { pt3dadd( -36.8204, -42.8391, -40.4209, 0.67 ) }
    dend_23 { pt3dadd( -38.7142, -44.3157, -42.9812, 0.67 ) }
    dend_23 { pt3dadd( -42.0274, -46.8682, -47.6382, 0.67 ) }
    dend_23 { pt3dadd( -44.5487, -49.5864, -51.9487, 0.67 ) }
    dend_23 { pt3dadd( -46.075, -51.5718, -54.8158, 0.67 ) }
    dend_23 { pt3dadd( -46.8375, -52.8478, -56.5849, 0.67 ) }
    dend_23 { pt3dadd( -47.6152, -54.6316, -58.8813, 0.67 ) }
    dend_23 { pt3dadd( -48.6784, -57.4839, -62.5591, 0.67 ) }
    dend_23 { pt3dadd( -50.1569, -61.7642, -67.8589, 0.67 ) }
    dend_23 { pt3dadd( -51.4864, -65.4033, -72.0985, 0.67 ) }
    dend_23 { pt3dadd( -52.6993, -68.7168, -76.1929, 0.67 ) }
    dend_23 { pt3dadd( -53.4726, -70.8272, -78.8311, 0.33 ) }
    dend_23 { pt3dadd( -54.3861, -73.085, -81.5082, 0.67 ) }
    dend_23 { pt3dadd( -55.1547, -74.6435, -83.2271, 0.33 ) }
    dend_23 { pt3dadd( -56.0315, -75.9959, -84.8112, 1.33 ) }
    dend_23 { pt3dadd( -57.2107, -77.8976, -86.9046, 0.33 ) }
    dend_23 { pt3dadd( -58.0116, -79.2075, -88.2209, 0.67 ) }
    dend_23 { pt3dadd( -59.6896, -82.0889, -91.0852, 0.33 ) }
    dend_23 { pt3dadd( -61.1295, -85.256, -93.7827, 1.33 ) }
    dend_23 { pt3dadd( -62.2546, -88.2834, -96.1974, 0.33 ) }
    dend_23 { pt3dadd( -62.4685, -88.9649, -96.672, 0.67 ) }
    dend_23 { pt3dadd( -62.8119, -90.3033, -97.433, 0.33 ) }
    dend_23 { pt3dadd( -62.9768, -91.0661, -97.7767, 0.67 ) }
    dend_23 { pt3dadd( -63.3069, -93.5219, -98.911, 0.33 ) }
    dend_23 { pt3dadd( -63.3069, -93.5219, -98.911, 0.67 ) }
    dend_23 { pt3dadd( -63.4647, -97.704, -99.9363, 0.33 ) }
    dend_23 { pt3dadd( -63.5143, -99.5687, -100.43, 0.33 ) }
    dend_23 { pt3dadd( -63.5746, -101.131, -100.905, 0.67 ) }
    dend_23 { pt3dadd( -63.7448, -106.396, -102.735, 0.33 ) }
    dend_23 { pt3dadd( -64.0059, -109.626, -104.237, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 60/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -34.5317, -40.9391, -36.6761, 0.67 ) }
    dend_22 { pt3dadd( -37.3378, -43.5097, -36.9828, 0.67 ) }
    dend_22 { pt3dadd( -41.9957, -47.3807, -37.1209, 0.33 ) }
    dend_22 { pt3dadd( -48.1232, -51.5623, -37.221, 0.33 ) }
    dend_22 { pt3dadd( -49.237, -52.254, -37.1864, 0.67 ) }
    dend_22 { pt3dadd( -54.0296, -55.1789, -36.959, 0.33 ) }
    dend_22 { pt3dadd( -56.6462, -56.7784, -36.8172, 0.33 ) }
    dend_22 { pt3dadd( -61.4713, -59.3253, -36.5588, 0.33 ) }
    dend_22 { pt3dadd( -65.7895, -61.2369, -36.125, 0.33 ) }
    dend_22 { pt3dadd( -71.9362, -63.7721, -35.2177, 0.33 ) }
    dend_22 { pt3dadd( -74.6357, -64.9739, -34.7388, 0.33 ) }
    dend_22 { pt3dadd( -75.2862, -65.2972, -34.6098, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 72/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -49.148, 74.0083, -7.11381, 0.33 ) }
    dend_19 { pt3dadd( -52.3316, 73.6221, -8.63743, 0.67 ) }
    dend_19 { pt3dadd( -54.3035, 73.3829, -9.58115, 0.33 ) }
    dend_19 { pt3dadd( -55.664, 73.2178, -10.2323, 0.67 ) }
    dend_19 { pt3dadd( -65.7424, 71.254, -16.8808, 0.67 ) }
    dend_19 { pt3dadd( -74.956, 69.3546, -24.6997, 0.67 ) }
    dend_19 { pt3dadd( -83.3053, 65.3918, -32.7132, 0.67 ) }
    dend_19 { pt3dadd( -90.433, 61.239, -41.7456, 0.67 ) }
    dend_19 { pt3dadd( -97.2222, 56.8982, -50.9487, 0.67 ) }
    dend_19 { pt3dadd( -104.694, 54.1434, -60.2342, 0.67 ) }
    dend_19 { pt3dadd( -112.809, 50.2188, -68.5026, 0.67 ) }
    dend_19 { pt3dadd( -122.627, 47.8594, -75.4081, 0.67 ) }
    dend_19 { pt3dadd( -130.749, 44.8907, -84.0596, 0.67 ) }
    dend_19 { pt3dadd( -140.589, 43.1004, -91.1026, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 86/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -49.148, 74.0083, -7.11381, 0.33 ) }
    dend_18 { pt3dadd( -49.3138, 77.0631, -10.4272, 0.33 ) }
    dend_18 { pt3dadd( -49.5102, 80.6821, -14.3526, 0.33 ) }
    dend_18 { pt3dadd( -49.8114, 86.2314, -20.3718, 0.33 ) }
    dend_18 { pt3dadd( -49.957, 88.9136, -23.281, 0.67 ) }
    dend_18 { pt3dadd( -48.9657, 95.7952, -29.8432, 0.67 ) }
    dend_18 { pt3dadd( -49.2249, 103.178, -35.9117, 0.67 ) }
    dend_18 { pt3dadd( -50.2554, 110.559, -41.901, 0.67 ) }
    dend_18 { pt3dadd( -51.8408, 118.845, -46.3978, 0.67 ) }
    dend_18 { pt3dadd( -52.7141, 126.619, -51.8944, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.1655, -66.5584, 8.48605, 0.67 ) }
    dend_13 { pt3dadd( 25.5925, -70.1318, 7.437, 0.67 ) }
    dend_13 { pt3dadd( 26.1039, -72.4291, 6.63809, 0.67 ) }
    dend_13 { pt3dadd( 26.47, -73.4904, 6.26285, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_13 { pt3dadd( 27.8432, -77.4156, 4.71242, 0.67 ) }
    dend_13 { pt3dadd( 28.7712, -80.1165, 3.71623, 0.67 ) }
    dend_13 { pt3dadd( 30.0956, -84.3716, 2.25912, 0.67 ) }
    dend_13 { pt3dadd( 31.0589, -88.1382, 0.953806, 0.67 ) }
    dend_13 { pt3dadd( 32.0213, -92.1714, -0.342321, 0.67 ) }
    dend_13 { pt3dadd( 32.7444, -96.0023, -1.61413, 0.67 ) }
    dend_13 { pt3dadd( 33.4787, -101.438, -3.31943, 0.67 ) }
    dend_13 { pt3dadd( 33.6143, -103.519, -3.94914, 0.67 ) }
    dend_13 { pt3dadd( 33.5828, -105.386, -4.49722, 0.67 ) }
    dend_13 { pt3dadd( 33.2987, -107.752, -5.17878, 0.67 ) }
    dend_13 { pt3dadd( 32.3757, -113.126, -6.51362, 0.67 ) }
    dend_13 { pt3dadd( 32.0616, -115.531, -7.00119, 0.67 ) }
    dend_13 { pt3dadd( 32.0496, -118.404, -7.51176, 0.67 ) }
    dend_13 { pt3dadd( 32.5216, -120.982, -7.83098, 0.33 ) }
    dend_13 { pt3dadd( 33.2632, -123.441, -8.04535, 1.33 ) }
    dend_13 { pt3dadd( 34.4156, -126.359, -8.12673, 0.67 ) }
    dend_13 { pt3dadd( 35.4117, -128.467, -8.03436, 0.67 ) }
    dend_13 { pt3dadd( 38.2679, -133.913, -7.785, 0.67 ) }
    dend_13 { pt3dadd( 40.2163, -137.124, -7.64441, 0.33 ) }
    dend_13 { pt3dadd( 40.6525, -137.781, -7.61128, 1.33 ) }
    dend_13 { pt3dadd( 42.457, -140.43, -7.65772, 0.33 ) }
    dend_13 { pt3dadd( 42.9642, -141.195, -7.74704, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 22/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 25.1655, -66.5584, 8.48605, 0.67 ) }
    dend_12 { pt3dadd( 27.0317, -68.6974, 8.24702, 0.67 ) }
    dend_12 { pt3dadd( 29.4029, -71.5601, 8.3287, 0.67 ) }
    dend_12 { pt3dadd( 34.6385, -77.2618, 8.61033, 0.67 ) }
    dend_12 { pt3dadd( 41.2369, -83.7223, 9.08627, 0.33 ) }
    dend_12 { pt3dadd( 41.6102, -84.0665, 9.12633, 0.67 ) }
    dend_12 { pt3dadd( 45.1376, -87.3574, 9.81053, 0.67 ) }
    dend_12 { pt3dadd( 49.0625, -91.3587, 11.1879, 0.33 ) }
    dend_12 { pt3dadd( 51.2454, -93.7046, 12.4601, 0.33 ) }
    dend_12 { pt3dadd( 51.9361, -94.487, 13.0327, 0.67 ) }
    dend_12 { pt3dadd( 54.1227, -96.998, 14.3714, 0.33 ) }
    dend_12 { pt3dadd( 55.7298, -99.0798, 15.4718, 0.67 ) }
    dend_12 { pt3dadd( 57.381, -101.645, 16.8599, 0.33 ) }
    dend_12 { pt3dadd( 58.6264, -103.807, 17.664, 0.33 ) }
    dend_12 { pt3dadd( 59.4339, -105.706, 18.404, 0.33 ) }
    dend_12 { pt3dadd( 59.8269, -106.854, 18.789, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 102.63, -94.881, 54.0197, 0.33 ) }
    dend_6 { pt3dadd( 111.234, -100.654, 57.6592, 0.67 ) }
    dend_6 { pt3dadd( 120.65, -105.468, 60.6191, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 41/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 102.63, -94.881, 54.0197, 0.33 ) }
    dend_5 { pt3dadd( 109.086, -104.296, 57.9415, 0.67 ) }
    dend_5 { pt3dadd( 113.348, -114.928, 61.7497, 0.67 ) }
    dend_5 { pt3dadd( 117.032, -126.317, 63.3113, 0.67 ) }
    dend_5 { pt3dadd( 120.558, -137.583, 65.8294, 0.67 ) }
    dend_5 { pt3dadd( 125.01, -148.396, 68.8227, 0.67 ) }
    dend_5 { pt3dadd( 131.105, -158.246, 72.2175, 0.67 ) }
    dend_5 { pt3dadd( 136.835, -167.821, 76.8214, 0.67 ) }
    dend_5 { pt3dadd( 141.084, -177.899, 81.9295, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 50/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 96.8014, 176.281, 14.7682, 1.33 ) }
    dend_3 { pt3dadd( 102.771, 183.293, 8.17399, 0.67 ) }
    dend_3 { pt3dadd( 110.033, 189.78, 2.38646, 0.67 ) }
    dend_3 { pt3dadd( 118.096, 196.242, -2.25372, 0.67 ) }
    dend_3 { pt3dadd( 124.047, 204.229, -7.6476, 0.67 ) }
    dend_3 { pt3dadd( 129.521, 213.655, -10.7287, 0.67 ) }
    dend_3 { pt3dadd( 136.571, 222.142, -13.2919, 0.67 ) }
    dend_3 { pt3dadd( 143.643, 230.984, -13.6353, 0.67 ) }
    dend_3 { pt3dadd( 149.261, 240.819, -13.722, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 96.8014, 176.281, 14.7682, 1.33 ) }
    dend_2 { pt3dadd( 98.7275, 188.029, 20.9581, 0.67 ) }
    dend_2 { pt3dadd( 101.58, 198.883, 28.3135, 0.67 ) }
    dend_2 { pt3dadd( 105.447, 210.031, 34.703, 0.67 ) }
    dend_2 { pt3dadd( 109.349, 220.848, 41.6191, 0.67 ) }
    dend_2 { pt3dadd( 113.846, 229.78, 50.566, 0.67 ) }
    dend_2 { pt3dadd( 119.123, 237.52, 60.1731, 0.67 ) }
    dend_2 { pt3dadd( 121.854, 244.448, 71.3351, 0.67 ) }
    dend_2 { pt3dadd( 122.437, 250.218, 83.4357, 0.67 ) }
    // Section: apic_12, id: apic_12, parent: apic_2 (entry count 68/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 8.19059, 51.304, -15.0009, 1.33 ) }
    apic_12 { pt3dadd( 13.3058, 51.7406, -18.2542, 0.67 ) }
    apic_12 { pt3dadd( 18.0511, 52.1355, -20.7254, 0.67 ) }
    apic_12 { pt3dadd( 19.685, 52.3297, -21.4237, 0.67 ) }
    apic_12 { pt3dadd( 25.3743, 53.0353, -23.4939, 0.67 ) }
    apic_12 { pt3dadd( 29.5717, 53.6247, -24.7581, 0.67 ) }
    apic_12 { pt3dadd( 32.9673, 54.1067, -25.5995, 0.67 ) }
    apic_12 { pt3dadd( 35.9402, 54.4025, -25.8033, 0.67 ) }
    apic_12 { pt3dadd( 39.207, 54.8676, -25.6357, 0.67 ) }
    apic_12 { pt3dadd( 40.7167, 55.0802, -25.5377, 0.67 ) }
    apic_12 { pt3dadd( 43.7163, 55.5866, -25.2745, 0.67 ) }
    apic_12 { pt3dadd( 45.9362, 55.9872, -25.1265, 0.67 ) }
    apic_12 { pt3dadd( 50.1509, 56.9451, -25.0673, 0.67 ) }
    apic_12 { pt3dadd( 56.5313, 58.6889, -25.2355, 0.67 ) }
    apic_12 { pt3dadd( 60.7514, 59.7793, -25.3679, 0.67 ) }
    apic_12 { pt3dadd( 63.6824, 60.6663, -25.4539, 0.67 ) }
    apic_12 { pt3dadd( 65.3778, 61.2213, -25.4924, 0.67 ) }
    apic_12 { pt3dadd( 70.1389, 62.6884, -25.514, 0.67 ) }
    apic_12 { pt3dadd( 71.8564, 63.1685, -25.4535, 0.67 ) }
    apic_12 { pt3dadd( 74.9039, 63.6291, -25.251, 0.67 ) }
    apic_12 { pt3dadd( 78.6896, 63.9733, -24.881, 0.67 ) }
    apic_12 { pt3dadd( 80.8252, 64.1324, -24.6935, 0.67 ) }
    apic_12 { pt3dadd( 85.1281, 64.4088, -24.3337, 0.67 ) }
    apic_12 { pt3dadd( 89.6458, 64.5529, -23.9731, 0.67 ) }
    apic_12 { pt3dadd( 96.4178, 64.8207, -23.4423, 0.67 ) }
    apic_12 { pt3dadd( 102.924, 65.2493, -22.9406, 0.67 ) }
    apic_12 { pt3dadd( 106.288, 65.5121, -22.6831, 0.67 ) }
    apic_12 { pt3dadd( 108.756, 65.9172, -22.5452, 0.67 ) }
    apic_12 { pt3dadd( 111.734, 66.6301, -22.45, 0.67 ) }
    apic_12 { pt3dadd( 113.9, 67.169, -22.1156, 0.67 ) }
    apic_12 { pt3dadd( 116.011, 67.8114, -21.4742, 0.67 ) }
    apic_12 { pt3dadd( 117.627, 68.3962, -20.8337, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_12 { pt3dadd( 123.614, 70.9208, -18.0613, 0.67 ) }
    apic_12 { pt3dadd( 126.066, 72.1447, -16.8402, 0.67 ) }
    apic_12 { pt3dadd( 134.019, 76.4913, -12.5591, 0.67 ) }
    apic_12 { pt3dadd( 136.901, 78.0174, -10.8028, 0.33 ) }
    apic_12 { pt3dadd( 138.013, 78.5619, -10.0154, 0.33 ) }
    apic_12 { pt3dadd( 140.658, 79.7389, -7.71484, 0.33 ) }
    apic_12 { pt3dadd( 142.035, 80.4194, -5.63617, 0.67 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 7/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 8.19059, 51.304, -15.0009, 1.33 ) }
    apic_3 { pt3dadd( 6.56156, 59.8784, -14.974, 1.33 ) }
    apic_3 { pt3dadd( 4.82809, 68.4832, -15.0272, 1.33 ) }
    apic_3 { pt3dadd( 2.73393, 80.348, -14.4192, 1.33 ) }
    apic_3 { pt3dadd( 0.40245, 92.0613, -13.5227, 1.33 ) }
    apic_3 { pt3dadd( -0.528843, 96.5952, -13.1499, 1.33 ) }
    apic_3 { pt3dadd( -1.63808, 101.995, -12.7058, 1.33 ) }
    apic_3 { pt3dadd( -2.22375, 104.54, -12.4689, 1.33 ) }
    apic_3 { pt3dadd( -5.05047, 114.85, -11.4103, 1.33 ) }
    apic_3 { pt3dadd( -6.70258, 121.237, -10.4944, 1.33 ) }
    apic_3 { pt3dadd( -9.99423, 136.396, -7.14045, 1.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 18/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 66.3318, -42.2577, -56.4767, 0.67 ) }
    dend_37 { pt3dadd( 68.3797, -41.3149, -59.5036, 0.67 ) }
    dend_37 { pt3dadd( 70.1283, -40.4143, -61.8434, 0.67 ) }
    dend_37 { pt3dadd( 71.83, -39.3735, -64.0034, 0.67 ) }
    dend_37 { pt3dadd( 74.9685, -37.4116, -67.7011, 0.67 ) }
    dend_37 { pt3dadd( 77.4126, -35.5898, -71.2549, 0.67 ) }
    dend_37 { pt3dadd( 81.3132, -32.1765, -77.5109, 0.67 ) }
    dend_37 { pt3dadd( 82.413, -31.1594, -79.4755, 0.33 ) }
    dend_37 { pt3dadd( 83.4025, -30.1521, -81.3865, 0.67 ) }
    dend_37 { pt3dadd( 84.0829, -29.3722, -82.7825, 0.67 ) }
    dend_37 { pt3dadd( 87.9349, -24.0268, -91.3939, 0.67 ) }
    dend_37 { pt3dadd( 88.6468, -22.7647, -93.1683, 0.33 ) }
    dend_37 { pt3dadd( 89.2682, -21.5816, -94.9152, 1.33 ) }
    dend_37 { pt3dadd( 89.8623, -20.5165, -96.5807, 0.67 ) }
    dend_37 { pt3dadd( 91.7751, -17.5386, -101.286, 0.67 ) }
    dend_37 { pt3dadd( 93.523, -15.0156, -104.617, 0.33 ) }
    dend_37 { pt3dadd( 93.8048, -14.7226, -104.834, 0.67 ) }
    dend_37 { pt3dadd( 95.3458, -13.2083, -105.732, 0.33 ) }
    dend_37 { pt3dadd( 95.8241, -12.7512, -105.911, 0.67 ) }
    dend_37 { pt3dadd( 96.7208, -11.8924, -106.305, 0.33 ) }
    dend_37 { pt3dadd( 98.517, -10.2499, -106.991, 0.67 ) }
    dend_37 { pt3dadd( 101.047, -8.11708, -108.026, 0.33 ) }
    dend_37 { pt3dadd( 103.785, -5.67718, -109.244, 1.33 ) }
    dend_37 { pt3dadd( 106.147, -3.3755, -110.424, 0.33 ) }
    dend_37 { pt3dadd( 109.682, 0.0891131, -112.366, 0.33 ) }
    dend_37 { pt3dadd( 110.942, 1.39856, -113.215, 2.0 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 44/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 66.3318, -42.2577, -56.4767, 0.67 ) }
    dend_36 { pt3dadd( 70.3774, -40.4644, -56.6572, 0.67 ) }
    dend_36 { pt3dadd( 73.1226, -39.2135, -56.815, 0.67 ) }
    dend_36 { pt3dadd( 76.3137, -37.9373, -57.0, 0.67 ) }
    dend_36 { pt3dadd( 79.7533, -36.4093, -57.1746, 0.67 ) }
    dend_36 { pt3dadd( 84.2426, -34.542, -57.2862, 0.67 ) }
    dend_36 { pt3dadd( 86.75, -33.6136, -57.3177, 0.67 ) }
    dend_36 { pt3dadd( 89.2663, -32.8008, -57.4341, 0.67 ) }
    dend_36 { pt3dadd( 91.6741, -32.0442, -57.6229, 0.67 ) }
    dend_36 { pt3dadd( 95.732, -31.0145, -57.8741, 0.67 ) }
    dend_36 { pt3dadd( 100.215, -30.3618, -58.0826, 0.67 ) }
    dend_36 { pt3dadd( 102.599, -30.3535, -58.2545, 0.67 ) }
    dend_36 { pt3dadd( 106.219, -30.6485, -58.6699, 0.67 ) }
    dend_36 { pt3dadd( 109.198, -31.3704, -59.1132, 0.67 ) }
    dend_36 { pt3dadd( 113.662, -32.8696, -59.8645, 0.67 ) }
    dend_36 { pt3dadd( 116.764, -34.2325, -60.506, 0.67 ) }
    dend_36 { pt3dadd( 119.275, -35.3528, -61.0654, 0.67 ) }
    dend_36 { pt3dadd( 123.732, -37.4151, -62.0106, 0.67 ) }
    dend_36 { pt3dadd( 128.564, -39.7473, -62.9099, 0.67 ) }
    dend_36 { pt3dadd( 131.521, -41.1712, -63.359, 0.67 ) }
    dend_36 { pt3dadd( 138.464, -44.4434, -64.2742, 0.67 ) }
    dend_36 { pt3dadd( 141.368, -45.8878, -64.5823, 0.33 ) }
    dend_36 { pt3dadd( 144.473, -47.3763, -64.8118, 0.33 ) }
    dend_36 { pt3dadd( 146.11, -48.1864, -64.851, 0.67 ) }
    dend_36 { pt3dadd( 147.938, -48.9777, -64.8282, 0.33 ) }
    dend_36 { pt3dadd( 149.585, -49.7432, -64.7199, 0.67 ) }
    dend_36 { pt3dadd( 152.829, -51.1266, -64.1988, 0.33 ) }
    dend_36 { pt3dadd( 153.108, -51.2339, -64.1596, 0.67 ) }
    dend_36 { pt3dadd( 155.273, -51.8534, -64.1115, 0.33 ) }
    dend_36 { pt3dadd( 157.023, -52.2258, -64.2688, 0.67 ) }
    dend_36 { pt3dadd( 159.102, -52.506, -64.6406, 0.33 ) }
    dend_36 { pt3dadd( 160.28, -52.6434, -64.9355, 0.67 ) }
    dend_36 { pt3dadd( 162.671, -52.9458, -65.7093, 0.33 ) }
    dend_36 { pt3dadd( 166.175, -53.3549, -67.0263, 0.67 ) }
    dend_36 { pt3dadd( 167.487, -53.4657, -67.6862, 0.33 ) }
    dend_36 { pt3dadd( 168.187, -53.5148, -68.1615, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 80/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -64.0059, -109.626, -104.237, 0.67 ) }
    dend_25 { pt3dadd( -70.8464, -109.216, -108.301, 0.33 ) }
    dend_25 { pt3dadd( -73.0895, -109.082, -109.634, 0.33 ) }
    dend_25 { pt3dadd( -74.9212, -108.972, -110.722, 0.67 ) }
    dend_25 { pt3dadd( -78.1858, -108.776, -112.661, 0.33 ) }
    dend_25 { pt3dadd( -81.8613, -108.556, -114.845, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -64.0059, -109.626, -104.237, 0.67 ) }
    dend_24 { pt3dadd( -63.6938, -112.171, -105.663, 0.33 ) }
    dend_24 { pt3dadd( -62.8288, -119.224, -109.613, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 89/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 120.65, -105.468, 60.6191, 0.67 ) }
    dend_8 { pt3dadd( 128.677, -106.068, 66.4146, 0.67 ) }
    dend_8 { pt3dadd( 135.589, -105.486, 73.5052, 0.67 ) }
    dend_8 { pt3dadd( 141.73, -103.181, 80.9452, 0.67 ) }
    dend_8 { pt3dadd( 148.198, -99.0995, 87.2617, 0.67 ) }
    dend_8 { pt3dadd( 154.111, -94.8552, 94.0001, 0.67 ) }
    dend_8 { pt3dadd( 161.959, -91.8564, 99.2733, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 96/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 120.65, -105.468, 60.6191, 0.67 ) }
    dend_7 { pt3dadd( 128.423, -111.864, 61.3298, 0.67 ) }
    // Section: apic_11, id: apic_11, parent: apic_3 (entry count 98/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -9.99423, 136.396, -7.14045, 1.33 ) }
    apic_11 { pt3dadd( -6.17169, 139.981, -2.81393, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_11 { pt3dadd( -4.75038, 142.122, -0.163181, 0.67 ) }
    apic_11 { pt3dadd( -3.25488, 144.737, 3.02123, 0.67 ) }
    apic_11 { pt3dadd( -0.770772, 150.789, 9.74853, 0.67 ) }
    apic_11 { pt3dadd( -0.118882, 152.849, 11.8402, 0.67 ) }
    apic_11 { pt3dadd( 0.914364, 157.359, 15.8736, 0.33 ) }
    apic_11 { pt3dadd( 1.18037, 161.389, 19.3421, 0.33 ) }
    apic_11 { pt3dadd( 1.16928, 162.793, 20.5223, 0.33 ) }
    apic_11 { pt3dadd( 0.943934, 166.947, 23.9007, 0.33 ) }
    apic_11 { pt3dadd( 0.610341, 169.768, 25.5186, 0.33 ) }
    apic_11 { pt3dadd( 0.166727, 173.643, 27.528, 0.33 ) }
    apic_11 { pt3dadd( 0.0590269, 174.41, 27.7825, 0.67 ) }
    apic_11 { pt3dadd( -3.39505, 184.548, 29.157, 0.67 ) }
    apic_11 { pt3dadd( -4.84791, 194.904, 31.8458, 0.67 ) }
    apic_11 { pt3dadd( -6.20172, 204.904, 35.6882, 0.67 ) }
    apic_11 { pt3dadd( -6.69466, 215.506, 37.6787, 0.67 ) }
    apic_11 { pt3dadd( -5.75864, 225.946, 40.2729, 0.67 ) }
    apic_11 { pt3dadd( -3.89049, 236.418, 42.1302, 0.67 ) }
    apic_11 { pt3dadd( -3.57343, 246.685, 45.4581, 0.67 ) }
    apic_11 { pt3dadd( -4.05954, 256.214, 50.5146, 0.67 ) }
    apic_11 { pt3dadd( -3.93626, 265.987, 55.1043, 0.67 ) }
    apic_11 { pt3dadd( -2.54728, 274.862, 61.0966, 0.67 ) }
    apic_11 { pt3dadd( -0.450732, 283.108, 67.7452, 0.67 ) }
    apic_11 { pt3dadd( 0.0219799, 291.411, 74.6323, 0.67 ) }
    apic_11 { pt3dadd( 2.00295, 299.949, 80.9385, 0.67 ) }
    apic_11 { pt3dadd( 3.02002, 309.378, 86.102, 0.67 ) }
    apic_11 { pt3dadd( 3.02279, 318.881, 91.2288, 0.67 ) }
    apic_11 { pt3dadd( 2.61742, 327.197, 98.1047, 0.67 ) }
    apic_11 { pt3dadd( 0.653953, 334.882, 105.432, 0.67 ) }
    apic_11 { pt3dadd( 0.553762, 343.296, 112.199, 0.67 ) }
    apic_11 { pt3dadd( -0.0358391, 351.851, 118.761, 0.67 ) }
    apic_11 { pt3dadd( -1.76776, 359.162, 126.517, 0.67 ) }
    apic_11 { pt3dadd( -2.22989, 365.189, 135.464, 0.67 ) }
    apic_11 { pt3dadd( -4.55559, 373.23, 142.286, 0.67 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 33/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -9.99423, 136.396, -7.14045, 1.33 ) }
    apic_4 { pt3dadd( -12.2713, 147.51, -5.12816, 1.33 ) }
    apic_4 { pt3dadd( -13.6398, 154.177, -4.22453, 1.33 ) }
    apic_4 { pt3dadd( -14.12, 156.298, -4.05426, 1.33 ) }
    apic_4 { pt3dadd( -14.6764, 159.559, -3.87984, 1.33 ) }
    apic_4 { pt3dadd( -14.9968, 161.331, -3.82485, 1.33 ) }
    apic_4 { pt3dadd( -15.8637, 165.897, -3.7677, 1.33 ) }
    apic_4 { pt3dadd( -16.6658, 170.628, -3.88097, 1.33 ) }
    apic_4 { pt3dadd( -18.66, 181.143, -4.4982, 1.33 ) }
    apic_4 { pt3dadd( -19.956, 187.299, -4.67584, 1.33 ) }
    apic_4 { pt3dadd( -21.2907, 193.828, -4.71111, 1.33 ) }
    apic_4 { pt3dadd( -21.8793, 197.824, -4.63766, 1.33 ) }
    apic_4 { pt3dadd( -22.3916, 203.523, -4.41605, 1.33 ) }
    apic_4 { pt3dadd( -22.5577, 208.222, -4.15827, 1.33 ) }
    apic_4 { pt3dadd( -22.5198, 213.507, -3.82439, 1.33 ) }
    apic_4 { pt3dadd( -22.3154, 217.007, -3.41457, 1.33 ) }
    apic_4 { pt3dadd( -21.5469, 225.303, -2.23209, 1.33 ) }
    apic_4 { pt3dadd( -20.877, 230.579, -1.41997, 1.33 ) }
    apic_4 { pt3dadd( -20.244, 236.154, -0.603231, 1.33 ) }
    apic_4 { pt3dadd( -19.6347, 241.48, 0.0643875, 1.33 ) }
    apic_4 { pt3dadd( -18.5323, 255.947, 1.41224, 1.33 ) }
    apic_4 { pt3dadd( -18.3471, 260.796, 1.69016, 1.33 ) }
    apic_4 { pt3dadd( -18.1828, 265.664, 1.81915, 1.33 ) }
    apic_4 { pt3dadd( -17.8935, 272.543, 1.77889, 1.33 ) }
    apic_4 { pt3dadd( -17.4745, 279.737, 1.47698, 1.33 ) }
    apic_4 { pt3dadd( -17.0691, 284.981, 1.04277, 1.33 ) }
    apic_4 { pt3dadd( -16.5776, 295.572, -0.182194, 0.67 ) }
    apic_4 { pt3dadd( -16.2915, 301.593, -0.747033, 0.67 ) }
    apic_4 { pt3dadd( -16.2175, 305.966, -1.03783, 0.67 ) }
    apic_4 { pt3dadd( -16.1225, 313.247, -1.38727, 0.67 ) }
    apic_4 { pt3dadd( -16.1975, 317.613, -1.51267, 0.67 ) }
    apic_4 { pt3dadd( -16.4632, 324.93, -1.5571, 0.67 ) }
    apic_4 { pt3dadd( -16.9476, 332.107, -1.40817, 0.67 ) }
    apic_4 { pt3dadd( -17.4598, 337.791, -1.41579, 0.67 ) }
    apic_4 { pt3dadd( -17.9102, 342.06, -1.60144, 0.67 ) }
    apic_4 { pt3dadd( -18.5263, 346.992, -1.90438, 0.67 ) }
    apic_4 { pt3dadd( -18.9668, 351.382, -2.29218, 0.67 ) }
    apic_4 { pt3dadd( -19.2817, 357.387, -3.11931, 0.67 ) }
    apic_4 { pt3dadd( -19.6822, 365.234, -4.41041, 0.67 ) }
    apic_4 { pt3dadd( -19.7175, 369.422, -5.22287, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 110.942, 1.39856, -113.215, 2.0 ) }
    dend_39 { pt3dadd( 113.203, 6.62882, -116.389, 0.67 ) }
    dend_39 { pt3dadd( 114.895, 10.5431, -118.764, 0.33 ) }
    dend_39 { pt3dadd( 115.365, 11.6296, -119.424, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 77/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 110.942, 1.39856, -113.215, 2.0 ) }
    dend_38 { pt3dadd( 114.024, -0.941654, -112.75, 0.33 ) }
    dend_38 { pt3dadd( 115.156, -1.80045, -112.579, 0.67 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 80/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -19.7175, 369.422, -5.22287, 0.67 ) }
    apic_8 { pt3dadd( -20.7448, 370.531, -5.34126, 0.67 ) }
    apic_8 { pt3dadd( -21.5099, 371.395, -5.6259, 0.67 ) }
    apic_8 { pt3dadd( -22.0431, 372.059, -5.87134, 0.67 ) }
    apic_8 { pt3dadd( -22.8912, 373.104, -6.2747, 0.67 ) }
    apic_8 { pt3dadd( -23.5675, 373.922, -6.59045, 0.67 ) }
    apic_8 { pt3dadd( -24.9481, 375.447, -7.16759, 0.67 ) }
    apic_8 { pt3dadd( -27.1828, 377.795, -8.05705, 0.67 ) }
    apic_8 { pt3dadd( -27.9544, 378.479, -8.3422, 0.67 ) }
    apic_8 { pt3dadd( -29.3156, 379.551, -8.81404, 0.67 ) }
    apic_8 { pt3dadd( -30.546, 380.482, -9.22339, 0.67 ) }
    apic_8 { pt3dadd( -31.9751, 381.478, -9.66528, 0.67 ) }
    apic_8 { pt3dadd( -32.2995, 381.707, -9.74899, 0.67 ) }
    apic_8 { pt3dadd( -34.492, 383.154, -10.2652, 0.67 ) }
    apic_8 { pt3dadd( -36.1919, 384.287, -10.7256, 0.67 ) }
    apic_8 { pt3dadd( -37.3776, 385.108, -11.0712, 0.67 ) }
    apic_8 { pt3dadd( -38.8822, 386.206, -11.5525, 0.67 ) }
    apic_8 { pt3dadd( -40.7731, 387.742, -12.2405, 0.67 ) }
    apic_8 { pt3dadd( -41.9072, 388.711, -12.671, 0.67 ) }
    apic_8 { pt3dadd( -42.4017, 389.226, -12.8906, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 0/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -19.7175, 369.422, -5.22287, 0.67 ) }
    apic_5 { pt3dadd( -18.0845, 373.957, -7.71145, 0.67 ) }
    apic_5 { pt3dadd( -16.8669, 377.318, -9.62375, 0.67 ) }
    apic_5 { pt3dadd( -13.8509, 385.576, -14.2609, 0.67 ) }
    apic_5 { pt3dadd( -12.1181, 389.851, -16.7982, 0.67 ) }
    apic_5 { pt3dadd( -7.87102, 399.646, -22.707, 0.67 ) }
    apic_5 { pt3dadd( -6.22547, 403.415, -24.9437, 0.67 ) }
    apic_5 { pt3dadd( -5.25767, 405.773, -26.2736, 0.67 ) }
    apic_5 { pt3dadd( -3.9866, 408.83, -28.1747, 0.67 ) }
    apic_5 { pt3dadd( -2.33938, 413.143, -30.984, 0.67 ) }
    apic_5 { pt3dadd( -1.60813, 414.847, -32.0164, 0.67 ) }
    apic_5 { pt3dadd( -0.434237, 417.562, -33.6865, 0.67 ) }
    apic_5 { pt3dadd( 0.773809, 421.077, -35.8248, 0.67 ) }
    apic_5 { pt3dadd( 4.13363, 430.62, -41.561, 0.67 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 14/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -42.4017, 389.226, -12.8906, 0.67 ) }
    apic_10 { pt3dadd( -41.2387, 391.365, -14.7687, 0.33 ) }
    apic_10 { pt3dadd( -39.4554, 394.558, -17.8243, 0.33 ) }
    apic_10 { pt3dadd( -38.6687, 396.512, -19.4598, 0.33 ) }
    apic_10 { pt3dadd( -37.2111, 399.725, -21.8465, 0.33 ) }
    apic_10 { pt3dadd( -36.581, 401.167, -22.8547, 0.67 ) }
    apic_10 { pt3dadd( -35.197, 404.217, -24.7847, 0.67 ) }
    apic_10 { pt3dadd( -34.3552, 405.799, -25.701, 0.67 ) }
    apic_10 { pt3dadd( -31.7508, 410.266, -27.8694, 0.67 ) }
    apic_10 { pt3dadd( -29.5857, 413.772, -29.417, 0.67 ) }
    apic_10 { pt3dadd( -27.8183, 416.44, -30.4507, 0.67 ) }
    apic_10 { pt3dadd( -25.3461, 420.519, -31.6721, 0.67 ) }
    apic_10 { pt3dadd( -23.596, 423.768, -32.3812, 0.67 ) }
    apic_10 { pt3dadd( -22.3833, 426.158, -32.7849, 0.67 ) }
    apic_10 { pt3dadd( -21.3534, 428.398, -33.0934, 0.67 ) }
    apic_10 { pt3dadd( -20.194, 431.345, -33.442, 0.67 ) }
    apic_10 { pt3dadd( -18.4872, 436.147, -33.907, 0.67 ) }
    apic_10 { pt3dadd( -16.8893, 441.846, -34.4389, 0.67 ) }
    apic_10 { pt3dadd( -15.7825, 446.818, -34.9179, 0.67 ) }
    apic_10 { pt3dadd( -15.4459, 448.53, -35.0873, 0.67 ) }
    apic_10 { pt3dadd( -14.9571, 451.331, -35.3161, 0.67 ) }
    apic_10 { pt3dadd( -14.7153, 453.042, -35.4259, 0.67 ) }
    apic_10 { pt3dadd( -14.5273, 455.241, -35.5256, 0.67 ) }
    apic_10 { pt3dadd( -14.3797, 458.895, -35.6362, 0.67 ) }
    apic_10 { pt3dadd( -14.3618, 460.627, -35.66, 0.67 ) }
    apic_10 { pt3dadd( -14.3849, 464.849, -35.6619, 0.67 ) }
    apic_10 { pt3dadd( -14.5605, 468.412, -35.6096, 0.33 ) }
    apic_10 { pt3dadd( -14.5951, 469.231, -35.5824, 0.67 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 42/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -42.4017, 389.226, -12.8906, 0.67 ) }
    apic_9 { pt3dadd( -45.8396, 391.214, -13.4305, 0.67 ) }
    apic_9 { pt3dadd( -47.5922, 392.228, -13.7058, 0.67 ) }
    apic_9 { pt3dadd( -52.5744, 395.481, -14.5128, 0.67 ) }
    apic_9 { pt3dadd( -54.5061, 396.915, -14.8371, 0.67 ) }
    apic_9 { pt3dadd( -55.4553, 397.757, -15.0054, 0.67 ) }
    apic_9 { pt3dadd( -56.0205, 398.333, -15.1486, 0.67 ) }
    apic_9 { pt3dadd( -57.0864, 399.543, -15.4897, 0.67 ) }
    apic_9 { pt3dadd( -58.7901, 401.709, -16.1647, 0.67 ) }
    apic_9 { pt3dadd( -60.9709, 404.848, -17.3867, 0.67 ) }
    apic_9 { pt3dadd( -62.9689, 407.91, -18.7213, 0.67 ) }
    apic_9 { pt3dadd( -65.7962, 412.271, -20.8773, 0.67 ) }
    apic_9 { pt3dadd( -66.9134, 414.063, -21.8232, 0.67 ) }
    apic_9 { pt3dadd( -67.4002, 414.82, -22.2756, 0.67 ) }
    apic_9 { pt3dadd( -68.9619, 417.171, -23.8302, 0.67 ) }
    apic_9 { pt3dadd( -69.8808, 418.707, -24.8855, 0.67 ) }
    apic_9 { pt3dadd( -70.6073, 420.122, -25.976, 0.33 ) }
    apic_9 { pt3dadd( -71.492, 422.245, -27.6121, 0.67 ) }
    apic_9 { pt3dadd( -72.3158, 424.408, -29.3158, 0.67 ) }
    apic_9 { pt3dadd( -72.8122, 425.58, -30.2021, 0.67 ) }
    apic_9 { pt3dadd( -73.4166, 426.866, -31.148, 0.67 ) }
    apic_9 { pt3dadd( -75.579, 430.877, -34.4974, 0.67 ) }
    apic_9 { pt3dadd( -75.9992, 431.578, -35.1292, 0.67 ) }
    apic_9 { pt3dadd( -77.7823, 433.861, -37.3963, 0.67 ) }
    apic_9 { pt3dadd( -80.6284, 436.898, -40.1947, 0.67 ) }
    apic_9 { pt3dadd( -81.3111, 437.512, -40.7073, 0.67 ) }
    apic_9 { pt3dadd( -83.7673, 439.363, -42.0357, 0.67 ) }
    apic_9 { pt3dadd( -85.6111, 440.571, -42.785, 0.67 ) }
    apic_9 { pt3dadd( -89.7074, 442.975, -44.3422, 0.67 ) }
    apic_9 { pt3dadd( -93.308, 444.612, -45.4772, 0.33 ) }
    apic_9 { pt3dadd( -95.2178, 445.25, -46.0107, 0.33 ) }
    apic_9 { pt3dadd( -96.8926, 445.825, -46.4233, 0.33 ) }
    apic_9 { pt3dadd( -99.8799, 446.878, -46.9403, 0.67 ) }
    apic_9 { pt3dadd( -101.118, 447.169, -47.1609, 0.67 ) }
    apic_9 { pt3dadd( -103.293, 447.29, -47.9921, 0.33 ) }
    apic_9 { pt3dadd( -104.424, 447.197, -48.7753, 0.33 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 78/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 4.13363, 430.62, -41.561, 0.67 ) }
    apic_7 { pt3dadd( 0.658315, 434.897, -45.1535, 0.67 ) }
    apic_7 { pt3dadd( -1.22984, 437.322, -47.2017, 0.67 ) }
    apic_7 { pt3dadd( -4.30773, 441.075, -50.46, 0.67 ) }
    apic_7 { pt3dadd( -6.52613, 443.837, -52.9052, 0.67 ) }
    apic_7 { pt3dadd( -9.46683, 447.14, -55.8522, 0.67 ) }
    apic_7 { pt3dadd( -10.3542, 448.081, -56.6988, 0.67 ) }
    apic_7 { pt3dadd( -13.9437, 451.665, -60.0455, 0.67 ) }
    apic_7 { pt3dadd( -14.9895, 452.749, -60.9645, 0.67 ) }
    apic_7 { pt3dadd( -18.7359, 456.239, -63.7612, 0.67 ) }
    apic_7 { pt3dadd( -21.6878, 458.795, -65.7384, 0.67 ) }
    apic_7 { pt3dadd( -24.9222, 461.442, -68.058, 0.67 ) }
    apic_7 { pt3dadd( -25.7428, 462.081, -68.64, 0.67 ) }
    apic_7 { pt3dadd( -27.4317, 463.438, -70.0781, 0.67 ) }
    apic_7 { pt3dadd( -28.8271, 464.648, -71.5008, 0.67 ) }
    apic_7 { pt3dadd( -30.488, 466.217, -73.6866, 0.67 ) }
    apic_7 { pt3dadd( -33.1093, 469.133, -78.1279, 0.67 ) }
    apic_7 { pt3dadd( -35.8646, 472.103, -83.3284, 0.67 ) }
    apic_7 { pt3dadd( -38.1187, 474.641, -87.9062, 0.33 ) }
    apic_7 { pt3dadd( -38.477, 475.007, -88.6581, 0.67 ) }
    apic_7 { pt3dadd( -40.1927, 476.687, -92.3513, 0.33 ) }
    apic_7 { pt3dadd( -40.3585, 476.821, -92.7094, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_7 { pt3dadd( -41.0149, 477.251, -94.1391, 0.33 ) }
    apic_7 { pt3dadd( -42.1312, 477.47, -96.8131, 0.33 ) }
    apic_7 { pt3dadd( -43.3916, 477.406, -99.1611, 0.67 ) }
    apic_7 { pt3dadd( -44.2231, 477.285, -100.709, 0.67 ) }
    apic_7 { pt3dadd( -46.1544, 476.803, -104.242, 1.33 ) }
    apic_7 { pt3dadd( -48.95, 476.042, -109.748, 0.33 ) }
    apic_7 { pt3dadd( -49.7905, 475.797, -111.586, 0.67 ) }
    apic_7 { pt3dadd( -50.8001, 475.384, -114.032, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 8/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 4.13363, 430.62, -41.561, 0.67 ) }
    apic_6 { pt3dadd( 6.35262, 434.066, -41.7371, 0.67 ) }
    apic_6 { pt3dadd( 7.39333, 435.331, -41.7987, 0.67 ) }
    apic_6 { pt3dadd( 8.28035, 436.486, -41.9035, 0.67 ) }
    apic_6 { pt3dadd( 10.3608, 439.276, -42.1944, 0.67 ) }
    apic_6 { pt3dadd( 12.5171, 442.012, -42.4925, 0.67 ) }
    apic_6 { pt3dadd( 13.9762, 443.83, -42.691, 0.67 ) }
    apic_6 { pt3dadd( 15.5925, 445.704, -42.8024, 0.67 ) }
    apic_6 { pt3dadd( 20.0109, 450.645, -42.8919, 0.67 ) }
    apic_6 { pt3dadd( 23.2004, 454.114, -42.7338, 0.67 ) }
    apic_6 { pt3dadd( 24.9659, 456.061, -42.5418, 0.67 ) }
    apic_6 { pt3dadd( 26.8242, 458.268, -42.2345, 0.67 ) }
    apic_6 { pt3dadd( 29.4328, 461.522, -41.6687, 0.67 ) }
    apic_6 { pt3dadd( 31.2511, 463.836, -41.168, 0.67 ) }
    apic_6 { pt3dadd( 32.9525, 465.642, -40.5961, 0.67 ) }
    apic_6 { pt3dadd( 34.7288, 467.477, -39.9955, 0.67 ) }
    apic_6 { pt3dadd( 35.7396, 468.487, -39.6944, 0.67 ) }
    apic_6 { pt3dadd( 37.0458, 469.576, -39.3575, 0.67 ) }
    apic_6 { pt3dadd( 38.3347, 470.437, -39.1367, 0.67 ) }
    apic_6 { pt3dadd( 41.0347, 471.748, -38.7145, 0.67 ) }
    apic_6 { pt3dadd( 43.1126, 472.616, -38.4454, 0.67 ) }
    apic_6 { pt3dadd( 44.3344, 473.054, -38.2834, 0.67 ) }
    apic_6 { pt3dadd( 47.7513, 474.522, -37.8436, 0.67 ) }
    apic_6 { pt3dadd( 49.5854, 475.412, -37.5323, 0.67 ) }
    apic_6 { pt3dadd( 51.7367, 476.651, -37.4985, 0.67 ) }
    apic_6 { pt3dadd( 53.1694, 477.805, -37.7556, 0.67 ) }
    apic_6 { pt3dadd( 54.8034, 479.363, -38.314, 0.67 ) }
    apic_6 { pt3dadd( 57.2389, 482.122, -39.4938, 0.67 ) }
    apic_6 { pt3dadd( 59.2337, 484.768, -40.7383, 0.67 ) }
    apic_6 { pt3dadd( 64.1135, 491.574, -43.9193, 0.67 ) }
    apic_6 { pt3dadd( 66.461, 495.034, -45.6862, 0.67 ) }
    apic_6 { pt3dadd( 67.6897, 496.778, -46.6397, 0.67 ) }
    apic_6 { pt3dadd( 68.5071, 497.932, -47.2922, 0.67 ) }
    apic_6 { pt3dadd( 70.2868, 500.171, -48.5857, 0.67 ) }
    apic_6 { pt3dadd( 71.6116, 501.902, -49.457, 0.67 ) }
    apic_6 { pt3dadd( 73.845, 504.569, -50.4288, 0.67 ) }
    apic_6 { pt3dadd( 75.2352, 506.296, -51.2031, 0.33 ) }
    apic_6 { pt3dadd( 75.891, 507.214, -51.6251, 0.33 ) }
    apic_6 { pt3dadd( 77.1671, 509.284, -52.541, 0.33 ) }
    apic_6 { pt3dadd( 78.4818, 511.935, -53.7513, 0.33 ) }
    apic_6 { pt3dadd( 79.7026, 514.834, -54.946, 0.33 ) }
    apic_6 { pt3dadd( 80.6093, 517.206, -55.7873, 0.33 ) }
    apic_6 { pt3dadd( 81.4042, 519.437, -56.5427, 0.33 ) }
    apic_6 { pt3dadd( 82.1294, 521.278, -57.1003, 0.67 ) }
    apic_6 { pt3dadd( 83.1288, 523.823, -57.7957, 0.67 ) }
    apic_6 { pt3dadd( 84.7391, 527.755, -58.5784, 0.67 ) }
    apic_6 { pt3dadd( 85.7491, 530.208, -58.9291, 0.67 ) }
    apic_6 { pt3dadd( 86.9604, 532.956, -59.3031, 0.67 ) }
    apic_6 { pt3dadd( 88.3154, 535.889, -59.6419, 0.33 ) }
    apic_6 { pt3dadd( 89.0022, 537.218, -59.7334, 0.33 ) }
    apic_6 { pt3dadd( 90.332, 539.692, -59.6155, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_14, apic_1, axon_1, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_32, dend_27, dend_20, dend_15, dend_14, dend_9, dend_0, apic_14, apic_1, dend_40, dend_33, dend_31, dend_28, dend_26, dend_21, dend_17, dend_16, dend_11, dend_10, dend_4, dend_1, apic_13, apic_2, dend_35, dend_34, dend_30, dend_29, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_3, dend_2, apic_12, apic_3, dend_37, dend_36, dend_25, dend_24, dend_8, dend_7, apic_11, apic_4, dend_39, dend_38, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_14, apic_1, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_14, apic_1, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_2 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_32, dend_27, dend_20, dend_15, dend_14, dend_9, dend_0, apic_14, apic_1, dend_40, dend_33, dend_31, dend_28, dend_26, dend_21, dend_17, dend_16, dend_11, dend_10, dend_4, dend_1, apic_13, apic_2, dend_35, dend_34, dend_30, dend_29, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_3, dend_2, apic_12, apic_3, dend_37, dend_36, dend_25, dend_24, dend_8, dend_7, apic_11, apic_4, dend_39, dend_38, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_32, dend_27, dend_20, dend_15, dend_14, dend_9, dend_0, dend_40, dend_33, dend_31, dend_28, dend_26, dend_21, dend_17, dend_16, dend_11, dend_10, dend_4, dend_1, dend_35, dend_34, dend_30, dend_29, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_3, dend_2, dend_37, dend_36, dend_25, dend_24, dend_8, dend_7, dend_39, dend_38]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_33 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_2 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_13 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_3 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_11 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    apic_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_55 = new SectionList()
    apic_5 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_56 = new SectionList()
    apic_10 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_57 = new SectionList()
    apic_9 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    apic_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_54 = new SectionList()
    apic_8 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_32, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_39, dend_39, dend_39, dend_38, dend_38, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 9
    dend_9 nseg = 3
    apic_14 nseg = 11
    dend_40 nseg = 11
    dend_31 nseg = 11
    dend_28 nseg = 5
    dend_26 nseg = 11
    dend_21 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 5
    dend_10 nseg = 9
    dend_4 nseg = 7
    dend_1 nseg = 11
    apic_13 nseg = 13
    dend_35 nseg = 5
    dend_34 nseg = 7
    dend_29 nseg = 5
    dend_23 nseg = 5
    dend_22 nseg = 3
    dend_19 nseg = 7
    dend_18 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 3
    dend_5 nseg = 5
    dend_3 nseg = 5
    dend_2 nseg = 5
    apic_12 nseg = 7
    apic_3 nseg = 5
    dend_37 nseg = 5
    dend_36 nseg = 5
    dend_8 nseg = 3
    apic_11 nseg = 15
    apic_4 nseg = 11
    apic_5 nseg = 3
    apic_10 nseg = 5
    apic_9 nseg = 5
    apic_7 nseg = 5
    apic_6 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_PC_d3b8beb606_0_0


