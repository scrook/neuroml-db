// Cell: cACint209_L5_BTC_0a7f6392e3_0_0
/*
{
  "id" : "cACint209_L5_BTC_0a7f6392e3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.88047, -10.716, -1.11504, 1.92098", "-1.70946, -9.6452, -1.01124, 2.92873", "-1.53845, -8.57443, -0.907436, 4.88462", "-1.36745, -7.50365, -0.803634, 6.96834", "-1.19644, -6.43288, -0.699833, 8.71039", "-1.02543, -5.3621, -0.596031, 9.75846", "-0.854423, -4.29132, -0.492229, 10.7595", "-0.683416, -3.22055, -0.388427, 11.4328", "-0.512408, -2.14977, -0.284625, 11.7309", "-0.341401, -1.079, -0.180824, 11.6952", "-0.170393, -0.00821902, -0.0770218, 11.6235", "6.14341E-4, 1.06256, 0.0267799, 11.5198", "0.171622, 2.13333, 0.130582, 11.2257", "0.342629, 3.20411, 0.234383, 10.7284", "0.513637, 4.27489, 0.338185, 9.45222", "0.684644, 5.34566, 0.441987, 7.57235", "0.855652, 6.41644, 0.545789, 5.71519", "1.02666, 7.48721, 0.649591, 4.19151", "1.19767, 8.55799, 0.753392, 3.44771", "1.36867, 9.62877, 0.857194, 2.95035", "1.53968, 10.6995, 0.960996, 1.95307" ]
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "1.39356, 0.682199, -10.5931, 2.8", "1.39356, 0.682199, -10.5931, 2.8", "4.65809, 0.95143, -16.1693, 2.28", "5.2201, 0.971177, -17.1201, 2.28", "5.89662, 0.919654, -18.4699, 2.58", "7.07162, 0.773271, -21.2303, 2.8", "8.13073, 0.61703, -24.2435, 2.58", "8.46405, 0.558077, -25.5095, 2.43", "9.15174, 0.356022, -28.8828, 2.43", "10.027, -0.103678, -34.7288, 1.77", "10.1771, -0.288312, -36.7196, 1.77", "10.1235, -0.544821, -39.0725, 1.84", "9.8788, -0.737072, -40.8517, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.483558, 10.5939, 3.03697, 2.06", "0.483558, 10.5939, 3.03697, 2.06", "0.234476, 11.3241, 3.51722, 2.06", "-0.266518, 13.0797, 4.62884, 2.06", "-0.469242, 13.9986, 5.14005, 2.06", "-0.665237, 15.1662, 5.74293, 2.06", "-0.793793, 16.0631, 6.19402, 2.28", "-0.956684, 17.5367, 6.87635, 2.5", "-1.04287, 19.0023, 7.50739, 2.65", "-1.06895, 20.7232, 8.14653, 2.73", "-1.01876, 21.8809, 8.5884, 2.95", "-0.913993, 22.8379, 8.96371, 3.02", "-0.635334, 24.2153, 9.58658, 2.43", "-0.197472, 25.5477, 10.3062, 1.92", "0.0652058, 26.1168, 10.7129, 1.77", "0.57483, 27.0628, 11.5001, 1.77", "1.02334, 27.867, 12.2201, 1.92", "1.86964, 29.424, 13.6744, 1.69", "2.51311, 30.718, 14.9112, 1.92", "3.23193, 32.4508, 16.5705, 1.62", "3.48763, 33.2659, 17.3124, 1.62", "3.66557, 34.1639, 18.0542, 1.62", "3.761, 35.3103, 18.9243, 1.77", "3.76663, 36.2656, 19.596, 2.06", "3.76148, 37.3419, 20.3335, 2.06", "3.80454, 38.225, 20.9343, 2.06", "3.87418, 39.0422, 21.5215, 2.21", "4.11284, 40.7848, 22.7997, 1.92", "4.38524, 42.1919, 23.8723, 1.77", "4.58601, 42.9939, 24.5108, 1.77", "4.86428, 43.9008, 25.2235, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.95644, -10.3878, -0.843029, 1.84", "-1.95644, -10.3878, -0.843029, 1.84", "-2.08619, -11.3067, -0.758961, 1.4", "-2.18488, -12.989, -0.61702, 1.03", "-2.13195, -14.554, -0.448065, 0.96", "-2.05378, -15.2365, -0.36551, 1.18", "-1.90776, -16.0131, -0.266007, 1.25", "-1.65173, -16.7887, -0.159785, 1.25", "-1.23654, -17.5559, -0.0471926, 1.25", "-0.53277, -18.429, 0.0845777, 1.69", "-0.104365, -18.8776, 0.141032, 1.92", "0.312901, -19.3142, 0.215989, 1.92", "0.99991, -20.1058, 0.433077, 1.33", "1.42985, -20.7048, 0.64082, 1.03", "1.87322, -21.4908, 0.975744, 1.03", "2.2071, -22.2477, 1.31517, 1.4", "2.68816, -23.6272, 1.94037, 1.4", "3.10397, -25.2091, 2.6507, 1.4", "3.28994, -26.2307, 3.09159, 1.25", "3.43034, -27.5362, 3.61301, 0.66", "3.46648, -28.6661, 3.99746, 0.74", "3.44053, -29.8054, 4.27348, 1.03", "3.38945, -30.541, 4.33163, 1.25", "3.32465, -31.2054, 4.28656, 1.25", "3.22719, -31.9153, 4.15623, 1.25", "3.05478, -32.9093, 3.87448, 1.11", "2.81089, -34.0908, 3.49914, 1.11", "2.55589, -35.2748, 3.10426, 1.33", "2.3577, -36.2557, 2.77523, 1.33", "2.11524, -37.6356, 2.40278, 1.33", "1.95377, -38.8026, 2.14585, 0.88", "1.8563, -39.9259, 2.01518, 1.03", "1.81032, -41.5107, 2.06525, 0.66", "1.88518, -42.6087, 2.30388, 0.66", "2.27611, -44.3357, 3.10117, 0.66", "2.48767, -44.9541, 3.5021, 0.96", "3.07997, -46.4869, 4.64854, 1.18", "3.37421, -47.2496, 5.24116, 1.4", "3.51196, -47.6871, 5.56744, 1.4", "3.76542, -49.1034, 6.39767, 0.88", "3.77237, -50.3242, 6.85298, 0.88", "3.65798, -51.2896, 7.08919, 1.18", "3.45001, -52.3281, 7.21875, 1.03", "3.16334, -53.5085, 7.25923, 0.88", "2.84129, -54.6847, 7.22246, 0.88", "2.63363, -55.4181, 7.12925, 1.18", "2.44229, -56.306, 6.96656, 1.18", "2.37382, -57.0557, 6.80248, 1.18", "2.44014, -58.2595, 6.49693, 1.18", "2.56289, -58.9664, 6.28719, 1.18", "2.76752, -59.7752, 6.03465, 1.18", "3.14848, -61.0665, 5.64387, 0.74", "3.52169, -62.3349, 5.28756, 0.74", "3.85369, -63.6891, 4.95597, 1.03", "4.03076, -64.8032, 4.74357, 0.96", "4.07345, -65.5691, 4.63927, 0.88", "4.029, -66.494, 4.54182, 0.88", "3.87325, -67.5153, 4.46244, 0.96", "3.60333, -68.6801, 4.42438, 0.96", "3.26859, -69.9692, 4.47892, 0.96", "2.98762, -71.2577, 4.63192, 1.03", "2.86608, -72.1957, 4.82102, 0.81", "2.85097, -72.7819, 4.98191, 0.81", "2.8811, -73.5008, 5.21312, 0.81", "2.94362, -74.5598, 5.5798, 0.74", "2.94485, -75.6878, 5.97887, 0.66", "2.80838, -77.1468, 6.45772, 0.74", "2.63967, -78.0244, 6.71168, 0.74", "2.27878, -79.3157, 6.97641, 0.74", "1.89051, -80.3843, 7.10579, 0.66", "1.31177, -81.6619, 7.09192, 0.66", "0.790242, -82.6182, 6.97189, 0.66", "0.0503556, -83.7954, 6.6659, 0.81", "-0.525084, -84.6402, 6.33252, 1.18", "-0.822612, -85.0761, 6.10766, 1.4", "-1.53376, -86.1936, 5.44502, 1.25", "-1.80287, -86.6698, 5.1444, 0.96", "-2.10137, -87.3228, 4.75446, 0.96", "-2.39635, -88.4143, 4.2268, 0.66", "-2.4495, -89.2342, 3.96818, 0.74", "-2.39824, -90.0559, 3.81196, 0.81", "-2.25679, -91.0848, 3.69305, 0.81", "-2.01467, -92.4308, 3.58007, 0.81", "-1.63866, -94.2411, 3.48509, 0.66", "-1.21421, -96.176, 3.42433, 0.66", "-0.856321, -98.0285, 3.37246, 0.74", "-0.717565, -99.1139, 3.35295, 0.81", "-0.671157, -100.413, 3.34599, 0.88", "-0.726014, -101.041, 3.36716, 0.96", "-0.906588, -101.795, 3.43329, 0.96", "-1.43047, -103.083, 3.59464, 0.74", "-2.17483, -104.48, 3.80404, 0.74", "-2.63448, -105.301, 3.93585, 1.03", "-3.15465, -106.354, 4.09981, 1.33", "-3.41061, -107.021, 4.19868, 1.33", "-3.61405, -107.909, 4.335, 1.33", "-3.66259, -109.476, 4.59391, 0.81", "-3.50151, -110.625, 4.79367, 0.81", "-3.08157, -112.359, 5.09491, 0.81", "-2.79591, -113.351, 5.24895, 0.81", "-2.41992, -114.58, 5.44098, 0.81", "-2.05345, -115.812, 5.64284, 0.59", "-1.77068, -116.995, 5.8327, 0.52", "-1.6979, -117.678, 5.91705, 0.52", "-1.72438, -119.071, 5.98201, 0.52", "-1.8081, -119.872, 5.96765, 0.81", "-1.96979, -120.78, 5.90123, 0.81", "-2.28013, -122.101, 5.75967, 0.74", "-2.6772, -123.606, 5.56954, 0.81", "-3.11915, -125.127, 5.37486, 0.81", "-3.39453, -126.003, 5.25801, 0.96", "-3.66287, -126.793, 5.1816, 0.96", "-3.95685, -127.644, 5.18323, 1.03", "-4.17194, -128.283, 5.28842, 1.03", "-4.44737, -129.214, 5.59282, 0.81", "-4.66544, -130.118, 5.97013, 0.74", "-4.9271, -131.587, 6.59345, 0.66", "-5.13129, -133.322, 7.31596, 0.66", "-5.23138, -134.732, 7.86243, 0.52", "-5.29437, -136.316, 8.3921, 0.52", "-5.31478, -137.295, 8.64079, 0.74", "-5.35272, -138.593, 8.88017, 0.96", "-5.40778, -139.498, 8.98586, 1.03", "-5.52215, -140.503, 9.06434, 1.03", "-5.6892, -141.59, 9.15616, 0.74", "-5.89984, -142.75, 9.33336, 0.52", "-6.09509, -143.797, 9.56547, 0.52", "-6.38213, -145.28, 9.94574, 0.88", "-6.5779, -146.285, 10.1895, 0.74", "-6.78617, -147.545, 10.465, 0.44", "-6.89549, -148.417, 10.6187, 0.59", "-6.96662, -149.487, 10.7414, 0.59", "-6.94639, -151.105, 10.7752, 0.59", "-6.80644, -152.399, 10.7022, 0.81", "-6.54121, -153.641, 10.5921, 0.81", "-6.30412, -154.425, 10.5122, 0.96", "-6.01146, -155.202, 10.4241, 0.96", "-5.53885, -156.305, 10.3106, 0.74", "-5.07264, -157.463, 10.2193, 0.74", "-4.70298, -158.635, 10.1849, 0.74", "-4.47205, -159.627, 10.2206, 0.74", "-4.26723, -160.83, 10.3213, 0.74", "-4.10652, -162.191, 10.4848, 0.81", "-3.96389, -164.308, 10.771, 0.81", "-3.92216, -166.048, 11.0466, 0.74", "-3.93043, -167.469, 11.317, 0.81", "-3.94211, -168.077, 11.4601, 1.03", "-3.96156, -168.799, 11.6848, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.53968, 10.6995, 0.960996, 0.524308", "3.90527, 25.5118, 0.960996, 0.524308", "6.27086, 40.3241, 0.960996, 0.524308" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "9.8788, -0.737072, -40.8517, 0.88", "9.91051, -0.865608, -42.1285, 0.88", "9.81064, -1.61293, -48.3241, 0.88", "9.74946, -1.73199, -49.1732, 0.88", "9.46801, -2.09105, -51.3684, 1.25", "9.1074, -2.4433, -53.4604, 1.03", "8.69035, -2.78751, -55.5035, 0.81", "8.40536, -2.95544, -56.7224, 0.81", "7.97099, -3.1253, -58.1621, 1.03", "7.62372, -3.16671, -59.5334, 1.4", "7.23056, -3.14477, -61.4292, 1.4", "7.02326, -3.0893, -63.0434, 1.11", "6.97391, -3.03881, -64.3115, 0.88", "6.98504, -3.01474, -65.897, 1.11", "7.04175, -3.02602, -68.6063, 1.11", "7.0519, -3.0552, -70.7842, 0.88", "6.99144, -3.08382, -72.3792, 0.74", "6.90871, -3.09068, -73.2949, 0.88", "6.63597, -3.07239, -74.9267, 0.59", "6.24855, -2.95687, -76.4866, 0.52", "5.95541, -2.76959, -77.3519, 0.74", "5.44958, -2.25952, -78.7347, 0.88", "5.19436, -1.96004, -79.4428, 1.11", "4.85723, -1.56007, -80.3765, 1.25", "4.40099, -1.07619, -81.6848, 1.62", "3.9721, -0.763929, -83.0982, 1.4", "3.79868, -0.701443, -83.9495, 1.18", "3.66553, -0.729094, -85.1509, 0.66", "3.63539, -0.740875, -85.7848, 0.66", "3.6209, -0.676389, -86.9751, 0.66", "3.61986, -0.473208, -88.2504, 0.81", "3.62511, -0.0378502, -90.1341, 0.66", "3.60784, 0.285664, -91.3619, 0.81", "3.57742, 0.618198, -92.6711, 0.66", "3.53618, 0.989601, -94.6864, 0.66", "3.46931, 1.14432, -95.7409, 0.52", "3.36929, 1.25035, -96.6404, 0.88", "3.16782, 1.37773, -98.051, 1.03", "2.93435, 1.47731, -99.6426, 1.4", "2.45378, 1.63533, -103.175, 0.88", "2.21856, 1.75239, -104.936, 0.52", "2.0921, 1.88147, -105.817, 1.18", "2.00286, 2.03031, -106.381, 1.47", "1.91595, 2.22855, -106.859, 1.47", "1.68543, 2.872, -107.96, 1.03", "1.55094, 3.52136, -108.818, 1.25", "1.46906, 4.77057, -110.653, 0.96", "1.4604, 5.24307, -111.458, 0.81", "1.46243, 5.66783, -112.315, 1.03", "1.47314, 5.96664, -112.952, 1.03", "1.58308, 6.81624, -114.749, 1.18", "1.77485, 7.57113, -116.362, 0.96", "1.93901, 8.05471, -117.39, 1.33", "2.34957, 9.11948, -119.542, 1.47", "2.68538, 10.0264, -121.159, 1.33", "2.92478, 10.7306, -122.191, 0.52", "3.27706, 11.8744, -123.468, 1.33", "3.42998, 12.4048, -123.897, 1.33", "3.81042, 13.7949, -124.752, 0.88", "4.05733, 14.9619, -125.229, 0.66", "4.17909, 15.7006, -125.449, 0.96", "4.29203, 16.4644, -125.64, 1.18", "4.43557, 17.2814, -125.788, 1.33", "4.73357, 18.4316, -126.008, 0.88", "5.14681, 19.4382, -126.243, 0.52", "5.8469, 20.5969, -126.624, 0.52", "6.56492, 21.4396, -126.998, 0.52", "7.17963, 21.9005, -127.31, 1.18", "8.059, 22.2803, -127.744, 0.96", "8.75931, 22.4071, -128.11, 0.52", "9.32858, 22.4043, -128.48, 0.29", "10.1652, 22.2432, -129.243, 0.29", "11.119, 21.8921, -130.362, 0.37", "11.5601, 21.6839, -131.02, 0.52", "12.2745, 21.323, -132.205, 1.25", "13.0794, 20.8945, -133.66, 1.55", "14.172, 20.3016, -135.762, 1.18", "14.611, 20.0737, -136.638, 0.88", "15.7271, 19.5329, -138.827, 1.11", "16.0571, 19.399, -139.401, 1.11", "16.4447, 19.2891, -139.95, 0.59", "17.1594, 19.2062, -140.716, 0.37", "18.068, 19.2564, -141.525, 0.74", "18.4303, 19.3364, -141.855, 0.74", "18.9765, 19.5955, -142.426, 0.37", "19.3565, 19.9787, -143.038, 0.37", "19.4542, 20.4605, -143.693, 0.66", "19.2292, 21.1587, -144.752, 0.52", "18.9092, 21.6394, -145.552, 0.52", "18.5747, 22.0066, -146.237, 0.52", "18.4349, 22.1289, -146.495, 0.88", "17.5369, 22.8366, -148.34, 1.11", "16.7399, 23.4321, -150.196, 0.44", "16.58, 23.5585, -150.61, 0.59", "16.1214, 23.9814, -151.937, 1.25", "15.8428, 24.2778, -152.837, 1.4", "14.8373, 25.443, -156.284, 1.18", "14.2409, 26.1491, -158.44, 0.52", "14.0892, 26.3174, -159.019, 0.52", "13.8249, 26.5787, -160.015, 0.44", "13.352, 26.9912, -161.69, 0.66", "12.9365, 27.3229, -163.041, 0.88", "12.5088, 27.6397, -164.275, 0.66", "12.1114, 27.9942, -165.528, 0.44", "11.845, 28.3033, -166.443, 0.37", "11.7133, 28.5549, -166.958, 0.52", "11.6506, 28.9225, -167.342, 0.66", "11.6511, 29.6723, -167.879, 0.66", "11.7137, 30.9906, -168.662, 0.66", "11.7901, 31.7778, -169.072, 0.29", "11.9096, 32.6587, -169.53, 0.29", "12.0697, 33.7389, -170.108, 0.88", "12.2761, 35.1456, -170.832, 0.37" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "9.8788, -0.737072, -40.8517, 1.84", "10.6418, 0.713557, -41.7812, 1.84", "11.2047, 1.7731, -42.4411, 1.25", "11.4889, 2.37223, -42.808, 1.25", "11.8482, 3.2933, -43.3467, 1.18", "12.0794, 4.11294, -43.8266, 1.18", "12.2485, 4.98932, -44.3595, 1.33", "12.324, 5.71051, -44.7898, 1.69", "12.2973, 6.37594, -45.2802, 1.69", "12.1918, 6.95575, -45.7574, 1.55", "11.9073, 7.80213, -46.5772, 1.33", "11.5811, 8.48005, -47.5713, 1.25", "11.3381, 8.87279, -48.3403, 1.47", "10.9213, 9.4892, -49.7182, 1.92", "10.6302, 9.92127, -50.7226, 2.28", "10.2359, 10.5368, -52.1565, 2.73", "9.3172, 12.0963, -55.6375, 1.33", "9.09009, 12.5383, -56.5636, 1.18", "8.95559, 12.9479, -57.3636, 1.18", "8.89517, 13.3904, -58.1441, 1.4", "8.91748, 13.8306, -58.8842, 1.62", "9.11206, 14.6284, -60.1616, 1.69", "9.48528, 15.4719, -61.514, 1.69", "10.3989, 16.9627, -64.1976, 1.33", "10.9028, 17.6524, -65.5932, 1.55", "11.3571, 18.1667, -66.7661, 1.92", "11.7103, 18.4917, -67.6001, 2.21", "12.0585, 18.733, -68.3225, 2.43", "12.0835, 18.7456, -68.3657, 2.43" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.86428, 43.9008, 25.2235, 0.88", "5.91267, 43.6664, 24.749, 0.88", "6.41779, 43.5442, 24.5634, 0.88", "7.345, 43.3263, 24.3228, 0.88", "8.06778, 43.1839, 24.187, 0.88", "9.91409, 42.8906, 23.9599, 0.74", "10.8234, 42.7831, 23.8886, 0.96", "11.5333, 42.7148, 23.8883, 1.11", "12.3469, 42.7337, 23.9955, 1.25", "12.9657, 42.8232, 24.1642, 1.77", "13.4044, 42.957, 24.3628, 1.92", "13.6773, 43.0874, 24.5469, 2.06", "14.0779, 43.3525, 24.8075, 1.55", "14.6363, 43.8161, 25.1167, 1.25" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "4.86428, 43.9008, 25.2235, 0.96", "5.25985, 44.8221, 24.5084, 0.96", "5.60029, 45.4625, 24.0378, 0.88", "5.88867, 45.9286, 23.7076, 0.88", "6.29812, 46.5106, 23.3064, 1.18", "6.55537, 46.8409, 23.0861, 1.18", "6.92332, 47.3211, 22.7792, 1.18", "7.18798, 47.6342, 22.6066, 1.4", "7.38112, 47.8905, 22.4966, 1.4", "7.54421, 48.2219, 22.3905, 0.81", "7.61151, 48.6346, 22.3099, 0.81", "7.47646, 49.3896, 22.1992, 0.66", "7.1733, 50.0419, 22.1428, 0.66", "6.87868, 50.5223, 22.1194, 0.74", "6.55757, 50.9968, 22.0931, 0.74", "6.19745, 51.5194, 22.0452, 0.59", "5.82912, 52.0618, 21.9589, 0.59", "5.44771, 52.6893, 21.8262, 0.81", "5.21074, 53.1764, 21.6945, 1.03", "4.97978, 53.8282, 21.5238, 1.03", "4.78265, 54.6272, 21.3522, 0.74", "4.66083, 55.3382, 21.2279, 0.52", "4.58051, 55.9357, 21.1701, 0.52", "4.50624, 56.4362, 21.1726, 0.52", "4.36734, 57.1921, 21.2665, 0.88", "4.2385, 57.801, 21.3903, 1.18", "4.17432, 58.1205, 21.4638, 1.18", "4.09183, 58.7279, 21.5772, 0.88", "4.07419, 59.5463, 21.6235, 0.52", "4.15895, 60.0249, 21.5722, 0.52", "4.36916, 60.6272, 21.4291, 0.66", "4.64304, 61.2265, 21.2447, 0.66", "4.99958, 61.9331, 21.0135, 0.66", "5.31048, 62.5309, 20.8138, 0.66", "5.69297, 63.3148, 20.5764, 1.11", "5.79213, 63.5857, 20.5142, 1.11", "5.85995, 63.9774, 20.468, 1.11", "5.81348, 64.6641, 20.4513, 0.74", "5.66425, 65.1588, 20.4771, 0.74", "5.41452, 65.6774, 20.5215, 0.88", "5.14419, 66.1212, 20.5573, 1.11", "4.83701, 66.5959, 20.574, 1.11", "4.61887, 66.9411, 20.5709, 0.74", "4.35046, 67.4071, 20.5406, 0.74", "4.11747, 67.9073, 20.4752, 0.59", "3.91376, 68.5511, 20.3428, 0.44", "3.83359, 69.168, 20.169, 0.44", "3.86834, 69.7311, 19.9768, 0.66", "3.96282, 70.151, 19.8473, 0.81", "4.09599, 70.5267, 19.7493, 0.81", "4.30479, 71.0064, 19.6553, 0.81", "4.56633, 71.562, 19.5917, 0.52", "4.78098, 72.0626, 19.5735, 0.52", "5.08215, 72.9828, 19.5917, 1.11", "5.17643, 73.4019, 19.6312, 1.11", "5.23477, 73.7624, 19.6836, 1.11", "5.28623, 74.1545, 19.7502, 1.11", "5.3468, 74.739, 19.8119, 0.81", "5.39774, 75.4288, 19.8432, 0.81", "5.42157, 76.4482, 19.8364, 0.66", "5.39899, 77.1721, 19.8025, 0.74", "5.32634, 77.9944, 19.7427, 0.66", "5.11434, 79.3394, 19.5952, 0.81", "4.91056, 80.1366, 19.4872, 0.81", "4.55884, 80.9778, 19.3331, 0.81", "4.12706, 81.655, 19.1522, 0.81", "3.79751, 82.0444, 19.0199, 1.03", "3.45638, 82.3683, 18.8595, 1.03", "3.05138, 82.7221, 18.6508, 0.66", "2.51096, 83.2147, 18.3049, 0.96", "2.08101, 83.6721, 17.9774, 0.96", "1.78302, 84.0668, 17.7263, 1.03", "1.1126, 85.1182, 17.0906, 0.59", "0.799552, 85.6329, 16.7706, 0.66", "0.603499, 85.9359, 16.5635, 0.66", "0.261061, 86.4126, 16.2184, 0.66", "-0.0897455, 86.8268, 15.8941, 0.66", "-0.738841, 87.458, 15.3262, 0.66", "-1.5602, 88.1287, 14.6782, 0.66", "-2.24927, 88.6135, 14.1787, 0.81", "-2.84109, 88.9834, 13.7902, 0.81", "-3.46114, 89.3291, 13.434, 0.81", "-4.42831, 89.8489, 12.9748, 0.59", "-5.07811, 90.2287, 12.7509, 0.44", "-5.71713, 90.6481, 12.6263, 0.44", "-6.12066, 90.9305, 12.5984, 0.66", "-6.6344, 91.3051, 12.6167, 0.66", "-7.19894, 91.7362, 12.686, 0.66", "-7.80713, 92.2181, 12.7988, 0.88", "-8.45829, 92.7475, 12.9007, 0.81", "-8.963, 93.1703, 12.9668, 0.81", "-9.40471, 93.5614, 13.0172, 0.66", "-9.67886, 93.8159, 13.0454, 0.81", "-10.0903, 94.2345, 13.0854, 0.81", "-10.3884, 94.6031, 13.1139, 0.74", "-10.7082, 95.1463, 13.1373, 0.59", "-11.0025, 95.7858, 13.1598, 0.59", "-11.161, 96.1467, 13.1668, 0.59", "-11.4999, 96.8342, 13.1313, 0.59", "-11.943, 97.6047, 13.0254, 0.59", "-12.2938, 98.1221, 12.9176, 0.59", "-12.7145, 98.6254, 12.7656, 0.66", "-13.3186, 99.2019, 12.5661, 0.66", "-14.3065, 100.02, 12.2315, 0.96", "-14.9164, 100.435, 12.023, 1.11", "-15.256, 100.626, 11.9023, 0.81", "-15.7401, 100.867, 11.724, 0.59", "-16.7441, 101.357, 11.3366, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.96156, -168.799, 11.6848, 0.29", "-3.12069, -167.832, 11.1598, 0.29", "-2.65335, -167.176, 10.8526, 0.29", "-1.94477, -165.978, 10.3876, 0.29", "-1.28611, -164.653, 9.98026, 0.29", "-0.837217, -163.6, 9.70602, 0.44", "-0.404116, -162.399, 9.44758, 0.44", "-0.0782866, -161.075, 9.25995, 0.37", "0.204064, -159.59, 9.09563, 0.37", "0.443258, -157.586, 8.95242, 0.59", "0.515773, -156.517, 8.91613, 0.59", "0.551142, -155.386, 8.90222, 0.37", "0.535117, -154.419, 8.92364, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.96156, -168.799, 11.6848, 0.52", "-3.3046, -169.806, 11.6129, 0.52", "-2.68821, -170.882, 11.5103, 0.52", "-2.3705, -171.506, 11.4402, 0.52", "-2.00147, -172.321, 11.3601, 0.52", "-1.60643, -173.331, 11.2044, 0.74", "-1.35865, -174.082, 11.0578, 0.96", "-1.23136, -174.644, 10.9317, 1.18", "-1.16614, -175.222, 10.8036, 1.33", "-1.15229, -176.014, 10.669, 1.47", "-1.27285, -177.524, 10.5158, 0.74", "-1.49177, -178.709, 10.5219, 0.74", "-1.69289, -179.436, 10.6331, 0.59", "-1.9078, -180.154, 10.8335, 0.59", "-2.1725, -181.073, 11.1729, 0.59", "-2.32735, -181.733, 11.4499, 0.59", "-2.43443, -182.406, 11.7578, 0.59", "-2.50908, -183.39, 12.1457, 0.52", "-2.4946, -184.523, 12.4593, 0.59", "-2.42942, -185.264, 12.5913, 0.59", "-2.28393, -186.335, 12.6918, 0.88", "-2.15112, -187.15, 12.7193, 1.25", "-2.04288, -187.713, 12.7108, 1.25", "-1.90475, -188.382, 12.6946, 1.25", "-1.75324, -189.057, 12.7029, 0.96", "-1.55859, -189.796, 12.7378, 0.96", "-1.26494, -190.764, 12.8227, 0.74", "-0.896859, -191.912, 12.9598, 0.74", "-0.591123, -192.87, 13.0938, 0.66", "-0.247445, -193.975, 13.2659, 0.66", "-0.00498246, -194.802, 13.4061, 0.66", "0.294007, -195.959, 13.6236, 0.59", "0.41686, -196.601, 13.757, 0.81", "0.483298, -197.379, 13.9268, 0.81", "0.471801, -198.258, 14.1298, 0.81", "0.369477, -199.052, 14.3363, 0.66", "0.20326, -199.721, 14.5541, 0.66", "-0.0544391, -200.446, 14.8626, 0.66", "-0.349996, -201.16, 15.2208, 0.74", "-0.61954, -201.803, 15.5684, 0.88", "-0.83398, -202.405, 15.8835, 0.88", "-0.978123, -203.019, 16.1692, 0.74", "-1.04072, -204.197, 16.6271, 0.74", "-0.98073, -204.79, 16.8282, 0.74", "-0.7642, -205.835, 17.1257, 0.59", "-0.44144, -207.005, 17.3974, 0.59", "-0.171656, -207.81, 17.5534, 0.59", "0.189595, -208.855, 17.7211, 0.59", "0.353239, -209.39, 17.7926, 0.96", "0.460188, -209.94, 17.9137, 0.96", "0.476216, -210.434, 18.11, 0.96", "0.41374, -211.178, 18.4654, 0.52", "0.278684, -211.87, 18.845, 0.52", "0.0884902, -212.481, 19.2189, 0.52", "-0.372354, -213.708, 20.0568, 0.74", "-0.816989, -214.678, 20.8849, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.27086, 40.3241, 0.960996, 0.181933", "8.63644, 55.1364, 0.960996, 0.181933", "11.002, 69.9487, 0.960996, 0.181933" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "12.0835, 18.7456, -68.3657, 1.47", "11.2186, 18.919, -70.0819, 1.47", "9.55321, 19.5653, -73.0661, 1.03", "9.05856, 19.8576, -74.0285, 1.03", "8.74021, 20.1788, -74.98, 1.03", "8.49445, 20.5649, -76.063, 0.81", "8.39422, 20.8332, -76.8217, 0.66", "8.41391, 21.355, -78.1012, 1.03", "8.65502, 21.9041, -79.4014, 1.03", "9.75547, 23.1805, -82.8425, 0.96", "10.2061, 23.4784, -83.8614, 0.96", "10.9202, 23.717, -85.1796, 0.74", "11.4506, 23.7831, -86.1512, 0.59", "11.7965, 23.798, -86.7781, 0.81", "12.2042, 23.8074, -87.5372, 1.03", "12.8017, 23.8616, -88.7841, 1.18", "13.418, 24.0736, -90.7356, 1.47", "14.0238, 24.5922, -94.0794, 1.18", "14.1245, 24.8272, -95.3822, 1.11", "14.1226, 24.9664, -96.2151, 1.11", "13.9214, 25.362, -98.7945, 1.11", "13.5624, 25.6782, -101.087, 0.81", "13.3816, 25.7418, -101.839, 0.81", "13.1825, 25.7595, -102.57, 1.11", "12.3224, 25.7119, -105.815, 0.81", "12.0335, 25.6915, -106.966, 0.81", "11.6568, 25.6922, -108.399, 0.96", "11.2512, 25.7087, -110.068, 0.81", "10.8693, 25.786, -111.828, 0.52", "10.6973, 25.8696, -112.623, 0.52", "10.454, 26.136, -113.674, 0.74", "10.1813, 26.8519, -115.711, 1.33" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "12.0835, 18.7456, -68.3657, 2.43", "11.738, 19.0916, -68.6444, 2.43", "10.5724, 20.0733, -69.4318, 0.88", "9.57987, 20.8445, -70.014, 0.88", "8.91515, 21.3783, -70.3654, 0.88", "8.18226, 22.0223, -70.7368, 0.74", "7.4022, 22.821, -71.1634, 0.88", "6.93553, 23.3607, -71.4341, 1.03", "6.35289, 24.197, -71.8347, 1.03", "5.81342, 25.3224, -72.3093, 1.92", "5.55988, 26.0299, -72.6004, 1.55", "5.16617, 27.2976, -73.118, 1.11", "4.7962, 28.4814, -73.6013, 0.96", "4.40577, 29.5297, -74.0917, 0.96", "4.06805, 30.2302, -74.4615, 0.96", "3.71335, 30.7566, -74.7905, 0.96", "3.10522, 31.4213, -75.2495, 0.96", "2.51025, 31.937, -75.6243, 0.96", "1.59235, 32.6322, -76.1503, 0.88", "0.930972, 33.0865, -76.5321, 1.33", "0.374619, 33.4921, -76.899, 1.55", "0.0495583, 33.7767, -77.1528, 1.77", "-0.314113, 34.205, -77.507, 1.77", "-0.393333, 34.329, -77.5989, 1.77" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.6363, 43.8161, 25.1167, 0.29", "14.8623, 43.683, 26.0174, 0.29", "15.4293, 43.4691, 27.7186, 0.29", "15.9218, 43.2502, 29.049, 0.29", "16.375, 43.0324, 30.1347, 0.29", "17.2681, 42.7304, 32.1308, 0.29", "18.0046, 42.5769, 33.6689, 0.29", "18.8823, 42.4321, 35.3928, 0.29", "19.3295, 42.3572, 36.1791, 0.66", "19.9379, 42.2654, 37.1381, 0.29", "21.378, 42.2433, 39.1898, 0.29", "21.9635, 42.3602, 39.9805, 0.52", "22.769, 42.6372, 41.0645, 0.22", "23.3329, 42.9151, 41.8124, 0.22", "23.8735, 43.2539, 42.5177, 0.22", "24.8205, 43.9632, 43.7334, 0.22", "25.7817, 44.7486, 44.9489, 0.22", "26.2756, 45.2192, 45.6087, 0.29", "26.9172, 45.9851, 46.5202, 0.29", "27.2784, 46.4912, 47.0842, 0.29", "27.4864, 46.7989, 47.4403, 0.44", "28.097, 47.7211, 48.6287, 0.22", "28.4781, 48.3647, 49.4128, 0.37", "28.8451, 49.0131, 50.2315, 0.66", "29.3032, 49.854, 51.3277, 0.81", "29.7031, 50.6617, 52.3131, 0.44", "30.0025, 51.2817, 53.085, 0.52", "33.7106, 56.08, 61.273, 0.52", "36.1206, 61.5808, 69.523, 0.52", "39.765, 66.8067, 77.4867, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "14.6363, 43.8161, 25.1167, 1.47", "14.6396, 44.5689, 25.6138, 1.47", "14.6312, 45.5159, 26.2181, 0.66", "14.6445, 46.2825, 26.6772, 0.59", "14.6959, 46.9506, 27.0665, 0.59", "14.756, 47.7315, 27.5216, 0.74", "14.8005, 48.3098, 27.8586, 0.88", "14.8038, 48.6557, 28.0517, 1.11", "14.8008, 49.1636, 28.3774, 1.33", "14.8227, 49.6744, 28.6612, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-16.7441, 101.357, 11.3366, 0.37", "-17.2165, 102.273, 11.4861, 0.37", "-17.4844, 102.864, 11.5485, 0.44", "-17.8095, 103.723, 11.6016, 0.44", "-18.0672, 104.517, 11.6111, 0.44", "-18.4277, 105.827, 11.5835, 0.52", "-18.6116, 106.706, 11.5719, 0.52", "-18.656, 107.145, 11.5562, 0.66", "-18.654, 108.231, 11.4972, 0.66", "-18.5704, 109.179, 11.4405, 0.81", "-18.4574, 109.84, 11.4112, 0.88", "-18.2044, 110.872, 11.3373, 0.96", "-17.9784, 111.67, 11.2372, 0.96", "-17.6867, 112.645, 11.0014, 0.59", "-17.4273, 113.541, 10.6788, 0.44", "-17.2795, 114.197, 10.3862, 0.44", "-17.1136, 115.492, 9.73225, 0.66", "-17.1122, 115.96, 9.4844, 0.66", "-17.2893, 117.267, 8.80606, 0.44", "-17.5384, 118.152, 8.40694, 0.44", "-17.9413, 119.23, 8.02344, 0.59", "-18.2402, 119.958, 7.84854, 0.59", "-18.6363, 120.953, 7.7178, 0.37", "-18.9881, 121.919, 7.62609, 0.37", "-19.3746, 123.135, 7.54629, 0.52", "-19.6419, 124.161, 7.45398, 0.52", "-19.9391, 125.561, 7.3044, 0.52", "-20.1804, 126.805, 7.16962, 0.44", "-20.4453, 128.113, 7.05288, 0.66", "-20.5577, 128.579, 7.0337, 0.88", "-20.9049, 129.72, 7.03624, 0.52", "-21.1649, 130.433, 7.06628, 0.44", "-21.614, 131.568, 7.15744, 0.44", "-22.0181, 132.72, 7.25962, 0.66", "-22.2159, 133.513, 7.31209, 0.96", "-22.353, 134.383, 7.33367, 0.96", "-22.3821, 135.113, 7.33273, 0.96", "-22.3271, 136.484, 7.30529, 0.37", "-22.2428, 137.834, 7.28744, 0.29", "-22.1111, 139.032, 7.2491, 0.44", "-22.0335, 139.651, 7.23041, 0.44", "-21.9111, 140.858, 7.23008, 0.37", "-21.8688, 141.475, 7.25556, 0.37", "-21.8989, 143.301, 7.49808, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-16.7441, 101.357, 11.3366, 0.52", "-18.6573, 101.134, 11.1959, 0.52", "-20.8482, 101.222, 10.9644, 0.44", "-21.6937, 101.361, 10.8543, 0.37", "-22.3483, 101.5, 10.773, 0.37", "-23.554, 101.762, 10.6504, 0.59", "-24.0839, 101.847, 10.5851, 0.66", "-25.032, 101.987, 10.3934, 0.66", "-25.9881, 102.057, 10.1077, 0.59", "-26.8678, 102.045, 9.784, 0.59", "-27.8128, 101.994, 9.34998, 0.59", "-29.3069, 101.914, 8.55308, 0.44", "-30.7768, 101.897, 7.7165, 0.44", "-32.0145, 101.957, 6.9645, 0.44", "-32.9323, 102.031, 6.35224, 0.44", "-34.2245, 102.229, 5.40297, 0.59", "-35.1089, 102.474, 4.70885, 0.74", "-35.7434, 102.791, 4.2275, 0.88", "-36.2593, 103.157, 3.86512, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.535117, -154.419, 8.92364, 0.37", "0.315276, -152.972, 9.04833, 0.37", "0.17135, -151.253, 9.12886, 0.37", "0.0886326, -149.265, 9.13917, 0.37", "0.0370168, -147.802, 9.09092, 0.37", "-0.0362612, -146.284, 9.02129, 0.37", "-0.121038, -145.011, 8.9619, 0.37", "-0.221071, -143.777, 8.88801, 0.37", "-0.311707, -142.788, 8.80842, 0.37", "-0.368096, -141.716, 8.682, 0.37", "-0.401362, -140.701, 8.55004, 0.37", "-0.429128, -139.416, 8.38351, 0.37", "-0.4246, -138.123, 8.21987, 0.59", "-0.390816, -137.2, 8.08777, 0.81", "-0.203231, -135.198, 7.75937, 0.29", "-0.0734994, -134.227, 7.55959, 0.88", "0.0388288, -133.492, 7.36132, 0.96", "0.140719, -132.831, 7.117, 0.44", "0.30855, -131.561, 6.51899, 0.37", "0.363171, -130.509, 5.82193, 0.37", "0.323729, -129.695, 5.16131, 0.37", "0.270494, -129.054, 4.60592, 0.37", "0.15561, -127.965, 3.71209, 0.52", "0.082698, -127.433, 3.31774, 0.52", "-0.201667, -125.382, 2.02008, 0.52", "-0.388085, -124.269, 1.44023, 0.52", "-0.576421, -123.211, 1.00801, 0.59", "-0.802675, -121.981, 0.612174, 0.29", "-1.02681, -120.701, 0.274106, 0.29", "-1.21253, -119.582, -0.0309519, 0.37", "-1.40369, -118.292, -0.38531, 0.59", "-1.50406, -117.499, -0.691452, 0.74", "-1.55975, -116.777, -1.03173, 0.74", "-1.57836, -115.798, -1.54069, 0.66", "-1.52048, -114.407, -2.20842, 0.59", "-1.46255, -113.564, -2.5286, 0.59", "-1.37364, -112.513, -2.77046, 0.44", "-1.27992, -111.338, -2.91832, 0.37", "-1.17004, -110.048, -2.98, 0.37", "-1.0589, -108.893, -3.0035, 0.29", "-0.906505, -107.755, -3.02767, 0.29", "-0.644669, -106.16, -3.13041, 0.29", "-0.450339, -105.107, -3.31175, 0.74", "-0.323269, -104.46, -3.5281, 0.74", "-0.102896, -103.228, -4.13974, 0.37", "0.0222188, -102.216, -4.78017, 0.59", "0.0432306, -101.708, -5.13649, 0.59", "-0.00879756, -100.238, -6.21136, 0.37", "-0.0887844, -99.3824, -6.81233, 0.37", "-0.230641, -98.2657, -7.53159, 0.37", "-0.330107, -97.484, -7.95766, 0.52", "-0.42139, -96.618, -8.38491, 0.29", "-0.453557, -95.7134, -8.7578, 0.29", "-0.413014, -94.9749, -9.00144, 0.29", "-0.31775, -94.1763, -9.28916, 0.29", "-0.21073, -93.4531, -9.56987, 0.37", "-0.092036, -92.5794, -9.90763, 0.37", "-0.00552426, -91.6983, -10.2213, 0.44", "0.0562238, -90.7422, -10.5108, 0.44", "0.120041, -89.8975, -10.7541, 0.44", "0.229646, -88.8341, -11.0868, 0.29", "0.353044, -88.0966, -11.3788, 0.29", "0.625587, -86.9734, -11.9086, 0.29", "0.9127, -86.0748, -12.3753, 0.74", "1.2383, -85.2371, -12.8129, 0.74", "1.5921, -84.5073, -13.1949, 0.74", "2.13362, -83.5896, -13.7086, 0.52", "2.71586, -82.7093, -14.1992, 0.52", "3.62379, -81.4428, -14.9049, 0.52", "4.19208, -80.6243, -15.3217, 0.66", "4.73421, -79.7133, -15.7113, 0.44", "5.09649, -78.9845, -15.9635, 0.44", "5.39578, -78.1785, -16.1909, 0.81", "5.55407, -77.5166, -16.364, 0.81", "5.60258, -76.5117, -16.5821, 0.37", "5.43258, -75.3424, -16.8775, 0.37", "5.19717, -74.2392, -17.1524, 0.37", "4.95559, -73.2002, -17.4317, 0.37", "4.74926, -72.2514, -17.7095, 0.52", "4.5983, -71.4676, -17.9929, 0.52", "4.28346, -69.319, -18.9932, 0.37", "4.17085, -67.3174, -20.2057, 0.29", "4.20508, -66.3039, -20.943, 0.29", "4.2682, -65.7144, -21.4248, 0.29", "4.42211, -64.6328, -22.3485, 0.66", "4.53433, -64.0064, -22.868, 0.81", "4.8537, -62.7088, -23.838, 0.44", "5.08381, -61.9744, -24.3502, 0.59", "5.24827, -61.5179, -24.5901, 0.59", "5.60457, -60.577, -24.9693, 0.29", "6.00851, -59.6053, -25.2745, 0.29", "6.45504, -58.6408, -25.5576, 0.29", "7.21029, -57.0788, -26.0103, 0.29", "7.89819, -55.531, -26.444, 0.29", "8.44929, -54.2018, -26.8042, 0.29", "9.13572, -52.5313, -27.2644, 0.29", "9.98677, -50.4128, -27.8478, 0.29", "10.32, -49.493, -28.1119, 0.29", "10.8369, -47.7858, -28.6189, 0.29", "11.1786, -46.4315, -29.0761, 0.59", "11.2901, -45.8521, -29.2947, 0.59", "11.4362, -44.7321, -29.7537, 0.29", "11.5652, -43.4069, -30.3403, 0.66", "11.6561, -42.6134, -30.7498, 0.66", "11.7979, -41.6265, -31.3738, 0.37", "11.8968, -40.6355, -32.0723, 0.22", "11.9463, -39.9038, -32.5864, 0.22", "11.9819, -39.2743, -33.0199, 0.22", "12.0498, -38.4811, -33.541, 0.44", "12.1791, -37.3935, -34.2156, 0.29", "12.3744, -36.3045, -34.8691, 0.29", "12.5819, -35.203, -35.5359, 0.37", "12.7791, -34.489, -35.8926, 0.66", "12.967, -33.9989, -36.0279, 0.66", "13.5373, -32.7768, -36.1105, 0.29", "14.1439, -31.6863, -35.9941, 0.74", "14.5816, -30.9828, -35.7938, 0.88", "16.2421, -28.4285, -34.8151, 0.37", "17.2972, -26.8176, -34.1301, 0.29", "18.115, -25.6013, -33.5642, 0.29", "19.1523, -24.0888, -32.7799, 0.29", "20.419, -22.1897, -31.7165, 0.22", "20.9352, -21.3917, -31.2735, 0.22", "21.2895, -20.6834, -30.9533, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.535117, -154.419, 8.92364, 0.29", "-0.0890379, -154.039, 8.99596, 0.29", "-0.893138, -153.549, 9.08913, 0.29", "-2.32579, -152.677, 9.25513, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.816989, -214.678, 20.8849, 0.59", "-0.560241, -215.541, 21.2962, 0.59", "-0.374364, -216.511, 21.6777, 0.59", "-0.250965, -217.377, 21.9651, 1.03", "-0.203429, -217.847, 22.0921, 1.11", "-0.144282, -218.318, 22.2389, 1.11", "0.104502, -219.834, 22.7643, 0.81", "0.294733, -220.914, 23.1728, 0.74", "0.561788, -222.122, 23.6469, 0.59", "0.946293, -223.434, 24.1921, 0.59", "1.61676, -225.138, 25.0145, 0.66", "2.05515, -226.012, 25.4947, 0.74", "2.3356, -226.467, 25.7745, 1.03", "2.66067, -226.928, 26.0931, 0.81", "3.11892, -227.535, 26.5391, 0.52", "3.60957, -228.118, 26.9951, 0.81", "4.0997, -228.785, 27.4072, 0.59", "4.41806, -229.329, 27.7001, 0.52", "4.53218, -229.593, 27.823, 0.74", "4.62973, -229.99, 27.9955, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.816989, -214.678, 20.8849, 0.29", "-1.60183, -214.243, 20.902, 0.29", "-2.41882, -213.905, 20.8971, 0.29", "-3.28549, -213.657, 20.8822, 0.29", "-4.42064, -213.493, 20.855, 0.22", "-5.75407, -213.499, 20.8164, 0.22", "-6.70119, -213.67, 20.7845, 0.22", "-7.61211, -214.005, 20.7208, 0.22", "-8.40019, -214.547, 20.6539, 0.22", "-9.05729, -215.311, 20.5929, 0.22", "-9.39637, -215.841, 20.5585, 0.22", "-9.71241, -216.686, 20.5183, 0.22", "-18.4366, -219.511, 20.6176, 0.22", "-27.5033, -220.587, 19.9755, 0.22", "-36.5855, -221.707, 20.1808, 0.22", "-45.4961, -223.798, 19.7839, 0.22", "-54.3834, -224.588, 17.7483, 0.22", "-62.6589, -225.381, 13.9223, 0.22", "-70.6006, -224.773, 9.41698, 0.22", "-78.7683, -226.027, 5.47815, 0.22", "-87.5128, -228.201, 3.81817, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "10.1813, 26.8519, -115.711, 0.74", "9.92462, 27.2242, -115.95, 0.74", "9.25063, 28.6364, -116.589, 0.74", "7.99326, 31.2709, -117.78, 0.52", "7.61423, 32.065, -118.139, 1.03", "7.29299, 32.7381, -118.444, 1.03", "6.92652, 33.506, -118.791, 0.22", "6.30038, 35.199, -119.468, 0.22" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "10.1813, 26.8519, -115.711, 0.96", "10.4899, 26.7372, -117.543, 0.96", "10.5635, 26.722, -118.223, 0.66", "10.6089, 26.7517, -119.068, 0.44", "10.7271, 26.9126, -121.311, 0.29", "10.9275, 27.2254, -124.368, 1.18", "11.1469, 27.6645, -127.802, 0.59", "11.1823, 27.8527, -129.023, 0.44", "11.1981, 28.2263, -131.182, 1.03", "11.164, 28.7308, -133.549, 0.59", "11.1436, 28.9611, -134.345, 0.52", "11.1152, 29.7254, -136.362, 0.81", "11.1377, 30.1809, -137.483, 1.11" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-0.393333, 34.329, -77.5989, 0.96", "0.444583, 37.1354, -81.208, 0.96", "1.19203, 38.8672, -83.6097, 0.74", "1.59445, 39.4419, -84.6472, 0.74", "2.14349, 39.9485, -85.8689, 0.88", "2.92066, 40.4194, -87.413, 0.88", "3.71968, 40.7156, -88.8942, 1.03", "5.2409, 40.8866, -91.1314, 1.33", "7.18729, 40.8807, -93.6031, 1.03", "8.56922, 40.8613, -95.2283, 1.33", "9.88706, 40.8926, -96.7189, 1.55", "12.5405, 41.2234, -99.5883, 1.33", "13.7346, 41.5843, -100.821, 0.81", "14.766, 42.1955, -101.746, 0.81", "16.2876, 43.5457, -102.941, 1.03", "17.6056, 44.9275, -104.058, 1.03", "18.7391, 46.2848, -105.139, 1.25", "19.5168, 47.278, -105.977, 1.33", "20.4449, 48.4976, -107.104, 1.4", "20.9999, 49.204, -107.835, 1.4", "23.6911, 52.239, -111.481, 1.33", "24.8355, 53.3166, -113.047, 1.18", "26.0171, 54.2695, -114.805, 1.18" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-0.393333, 34.329, -77.5989, 1.55", "-0.753216, 35.1078, -77.7289, 1.55", "-1.03538, 35.925, -77.8926, 0.88", "-1.25663, 36.6841, -78.0174, 0.88", "-1.45405, 37.4472, -78.0838, 1.03", "-1.7089, 38.4927, -78.1273, 1.03", "-1.97994, 39.6041, -78.1454, 1.03", "-2.2156, 40.6755, -78.1292, 1.03", "-2.4306, 41.6222, -78.0977, 1.11", "-2.76877, 42.9729, -78.047, 1.18", "-3.0863, 44.0923, -78.0051, 0.74", "-3.43753, 45.1954, -77.9623, 0.74", "-3.73532, 46.1502, -77.9214, 0.74", "-4.11028, 47.4355, -77.8752, 0.88", "-4.34153, 48.2785, -77.8647, 1.11", "-4.52007, 48.9296, -77.8411, 1.33", "-4.68847, 49.5089, -77.7837, 1.47", "-4.97365, 50.3845, -77.6122, 0.81", "-5.21598, 51.0198, -77.4092, 0.81", "-5.50046, 51.7058, -77.1071, 1.03", "-5.91551, 52.7071, -76.5978, 1.11", "-6.20238, 53.4405, -76.2067, 0.88", "-6.44677, 54.1793, -75.8097, 0.74", "-6.62166, 54.9176, -75.4542, 0.59", "-6.65059, 55.7257, -75.1488, 0.88", "-6.52962, 56.4358, -74.9917, 0.96", "-6.37657, 56.9793, -74.9386, 0.96", "-6.17091, 57.6976, -74.9105, 0.88", "-5.9819, 58.459, -74.9265, 0.74", "-5.87741, 59.1422, -74.9685, 0.96", "-5.86265, 59.8986, -75.0261, 0.66", "-5.96667, 61.0461, -75.1139, 0.66", "-6.20794, 62.4814, -75.1731, 1.11", "-6.33838, 63.0747, -75.1637, 1.33", "-6.60881, 64.1389, -75.1209, 1.33", "-7.0265, 65.6081, -75.0385, 0.74", "-7.41779, 66.8857, -74.9349, 0.74", "-7.7539, 67.9336, -74.8192, 1.03", "-8.00711, 68.7591, -74.6968, 1.25" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "39.765, 66.8067, 77.4867, 0.44", "36.509, 69.0036, 83.3715, 0.44", "34.507, 72.1153, 89.4149, 0.44", "31.7673, 74.468, 95.5009, 0.44", "29.2104, 76.5775, 101.751, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "39.765, 66.8067, 77.4867, 0.22", "44.9786, 69.6493, 82.6424, 0.44", "49.4962, 72.065, 88.5987, 0.44", "54.7402, 75.4525, 93.398, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "14.8227, 49.6744, 28.6612, 1.18", "15.1863, 50.3324, 30.0957, 1.18", "15.7353, 51.8021, 32.6591, 0.59", "15.8306, 52.1046, 33.103, 0.59", "15.9516, 52.4762, 33.5866, 0.52", "16.1152, 52.9578, 34.1498, 0.74", "16.2951, 53.4894, 34.6909, 0.59", "16.4927, 54.1828, 35.143, 0.59", "16.6477, 54.7885, 35.418, 0.74", "16.8065, 55.2858, 35.65, 0.74", "17.3231, 56.5527, 36.2637, 1.62", "17.7477, 57.4002, 36.6866, 2.21", "18.1493, 58.1318, 37.0379, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.8227, 49.6744, 28.6612, 0.29", "15.2366, 49.0849, 28.1709, 0.29", "15.4896, 48.7247, 27.8713, 0.44", "15.6029, 48.5634, 27.7371, 0.59", "15.9235, 48.1068, 27.3573, 0.52", "17.8522, 44.4158, 24.2012, 0.52", "18.8098, 40.751, 20.6122, 0.52", "20.5399, 36.9468, 17.4712, 0.52" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-21.8989, 143.301, 7.49808, 0.37", "-22.0681, 143.885, 7.70831, 0.37", "-22.1063, 144.208, 7.80383, 0.29", "-22.1028, 144.605, 7.92304, 0.29", "-22.063, 145.071, 8.07919, 0.29", "-21.9998, 145.732, 8.31246, 0.29", "-21.9538, 146.269, 8.50742, 0.29", "-21.8839, 146.902, 8.72197, 0.29", "-21.8285, 147.625, 8.97799, 0.59", "-21.8246, 148.187, 9.20421, 0.37", "-21.8679, 148.559, 9.38042, 0.37", "-21.9282, 148.806, 9.51069, 0.74", "-22.0434, 149.132, 9.67702, 0.74", "-22.3355, 149.824, 9.99115, 0.44", "-22.5724, 150.349, 10.1957, 0.44", "-22.7866, 150.878, 10.3814, 0.44", "-22.895, 151.212, 10.5156, 0.44", "-23.0591, 151.776, 10.7686, 0.44", "-23.175, 152.2, 10.9732, 0.44", "-23.2815, 152.622, 11.1789, 0.37", "-23.4822, 153.425, 11.5607, 0.37", "-23.6899, 154.258, 11.9576, 0.29", "-23.8216, 154.766, 12.1997, 0.29", "-23.9549, 155.235, 12.4325, 0.29", "-24.1555, 155.821, 12.698, 0.29", "-24.3423, 156.286, 12.8808, 0.29", "-24.5939, 156.835, 13.0815, 0.29", "-24.8089, 157.279, 13.2478, 0.29", "-25.0423, 157.798, 13.4767, 0.29", "-25.3619, 158.545, 13.8669, 0.29", "-25.5009, 158.875, 14.0673, 0.29", "-25.7082, 159.39, 14.4075, 0.29", "-25.8613, 159.846, 14.7033, 0.29", "-26.0045, 160.425, 15.0287, 0.29", "-26.0844, 160.876, 15.2348, 0.29", "-26.1209, 161.086, 15.3141, 0.66", "-26.1787, 161.333, 15.3783, 0.66", "-26.3247, 161.839, 15.4729, 0.29", "-26.4725, 162.29, 15.5422, 0.29", "-26.6588, 162.85, 15.6206, 0.29", "-26.8616, 163.524, 15.7054, 0.29", "-26.9863, 163.951, 15.753, 0.29", "-27.1291, 164.441, 15.8075, 0.74", "-27.2114, 164.744, 15.8389, 0.74", "-27.3558, 165.402, 15.8927, 0.29", "-27.4319, 165.883, 15.92, 0.29", "-27.4893, 166.426, 15.9391, 0.29", "-27.5337, 166.904, 15.9537, 0.29", "-27.6067, 167.702, 15.9937, 0.29", "-27.6587, 168.165, 16.0273, 0.81", "-27.7238, 168.579, 16.045, 0.81", "-27.8158, 169.177, 16.0372, 0.37", "-27.8915, 169.757, 15.9932, 0.29", "-27.9626, 170.26, 15.9184, 0.29", "-28.0676, 170.736, 15.8164, 0.29", "-28.3259, 171.507, 15.6152, 0.44", "-28.4917, 171.86, 15.5022, 0.44", "-28.6688, 172.168, 15.3922, 0.44", "-28.9554, 172.625, 15.1962, 0.37", "-29.2242, 173.05, 14.9914, 0.29", "-29.443, 173.41, 14.8061, 0.29", "-29.6468, 173.759, 14.6041, 0.29", "-29.8305, 174.087, 14.3667, 0.59", "-30.0554, 174.587, 13.9306, 0.96", "-30.1194, 174.791, 13.7359, 0.96", "-30.2077, 175.206, 13.319, 0.81", "-30.3042, 175.827, 12.7027, 0.29", "-30.3438, 176.144, 12.4009, 0.29", "-30.4053, 176.613, 11.9878, 0.29", "-30.4472, 176.93, 11.7575, 0.52", "-30.5128, 177.438, 11.4539, 0.52", "-30.5436, 177.782, 11.29, 0.52", "-30.5515, 178.073, 11.1701, 0.44", "-30.5457, 178.689, 10.9312, 0.66", "-30.5298, 179.224, 10.7319, 0.37", "-30.5178, 179.619, 10.5859, 0.37", "-30.52, 180.064, 10.4318, 0.37", "-30.5963, 180.512, 10.2588, 0.29", "-30.7893, 180.973, 10.059, 0.29", "-31.035, 181.352, 9.90907, 0.37", "-31.3824, 181.817, 9.7475, 0.52", "-31.7289, 182.265, 9.61957, 0.59", "-32.2749, 182.977, 9.43383, 0.29", "-32.5705, 183.381, 9.31339, 0.29", "-33.1223, 184.205, 9.01704, 0.44", "-33.3392, 184.606, 8.85293, 0.59", "-33.4934, 184.986, 8.68809, 0.59", "-33.6115, 185.374, 8.51656, 0.29", "-33.8019, 186.099, 8.19595, 0.37", "-33.9415, 186.564, 8.00193, 0.37", "-34.1087, 187.079, 7.80573, 0.59", "-34.2253, 187.444, 7.68998, 0.59", "-34.3456, 187.836, 7.58832, 0.59", "-34.5703, 188.66, 7.43704, 0.37", "-34.7833, 189.574, 7.3296, 0.29", "-34.9157, 190.271, 7.26381, 0.29", "-34.9924, 190.744, 7.22208, 0.52", "-35.0579, 191.228, 7.17828, 0.52", "-35.0948, 191.591, 7.1493, 0.44", "-35.1325, 191.99, 7.12618, 0.29", "-35.1981, 192.386, 7.11093, 0.29", "-35.3252, 192.812, 7.1196, 0.44", "-35.5172, 193.252, 7.15202, 0.44", "-35.7329, 193.648, 7.19644, 0.52", "-36.0992, 194.234, 7.26665, 0.29", "-36.4153, 194.694, 7.33356, 0.29", "-36.729, 195.124, 7.39983, 0.29", "-36.9334, 195.402, 7.43863, 0.52", "-37.1613, 195.714, 7.46071, 0.52", "-37.3369, 195.97, 7.44455, 0.52", "-37.6087, 196.473, 7.33484, 0.37", "-37.7345, 196.779, 7.23638, 0.37", "-37.889, 197.248, 7.05837, 0.37", "-38.0855, 197.929, 6.78789, 0.22", "-38.2618, 198.535, 6.55663, 0.22", "-38.4924, 199.328, 6.2721, 0.22", "-38.632, 199.859, 6.10965, 0.37", "-38.7667, 200.378, 5.98831, 0.52", "-38.8363, 200.627, 5.94247, 0.52", "-39.0505, 201.32, 5.86425, 0.22", "-39.228, 201.832, 5.85682, 0.22", "-39.6174, 202.775, 5.94425, 0.66", "-39.7019, 202.979, 5.98413, 0.66", "-39.9276, 203.594, 6.14418, 0.52", "-40.052, 204.018, 6.26644, 0.74", "-40.1959, 204.703, 6.50323, 0.29", "-40.2749, 205.231, 6.73651, 0.29", "-40.323, 205.753, 7.01149, 0.29", "-40.3539, 206.227, 7.26971, 0.29", "-40.381, 206.694, 7.53586, 0.29", "-40.4235, 207.186, 7.79278, 0.44", "-40.4808, 207.694, 8.01334, 0.29", "-40.5216, 208.025, 8.13917, 0.29", "-40.6376, 208.656, 8.35873, 0.29", "-40.761, 209.135, 8.52008, 0.22", "-41.0246, 209.949, 8.75212, 0.22", "-41.3279, 210.729, 8.92653, 0.22", "-41.506, 211.141, 8.99672, 0.22", "-41.6909, 211.546, 9.04668, 0.29", "-42.0067, 212.175, 9.08643, 0.29", "-42.2911, 212.664, 9.07212, 0.29", "-42.5031, 212.997, 9.03322, 0.29", "-42.6901, 213.298, 8.98, 0.29", "-43.0046, 213.899, 8.8592, 0.29", "-43.3836, 214.739, 8.69308, 0.22", "-43.6325, 215.343, 8.57921, 0.37", "-43.8063, 215.777, 8.49822, 0.22", "-44.0739, 216.449, 8.36993, 0.22", "-44.3965, 217.217, 8.2314, 0.22", "-44.59, 217.647, 8.16485, 0.29", "-44.6807, 217.84, 8.13836, 0.29", "-45.0729, 218.581, 8.02154, 0.22", "-45.3435, 219.015, 7.93792, 0.22", "-45.6233, 219.409, 7.84778, 0.37", "-45.9236, 219.809, 7.73025, 0.37", "-46.236, 220.234, 7.56025, 0.22", "-46.6285, 220.777, 7.31564, 0.37", "-46.9425, 221.217, 7.1055, 0.22", "-47.2239, 221.638, 6.89104, 0.22", "-47.5184, 222.134, 6.63698, 0.52", "-47.945, 222.896, 6.23449, 0.29", "-48.1654, 223.284, 6.02613, 0.29", "-48.3679, 223.636, 5.84424, 0.29", "-48.5636, 223.979, 5.67216, 0.29", "-48.8278, 224.424, 5.48764, 0.29", "-49.1478, 224.923, 5.34464, 0.29", "-49.5054, 225.414, 5.28369, 0.29", "-49.8983, 225.87, 5.27335, 0.29", "-50.156, 226.126, 5.29944, 0.29", "-50.5381, 226.469, 5.3592, 0.29", "-50.6711, 226.577, 5.39003, 0.29", "-51.1932, 227.003, 5.55643, 0.29", "-51.532, 227.279, 5.67668, 1.33", "-51.7137, 227.427, 5.73868, 1.69", "-52.3619, 227.957, 5.95515, 0.22", "-52.6989, 228.227, 6.06069, 0.22", "-52.9324, 228.412, 6.13234, 0.37", "-53.3017, 228.689, 6.2495, 0.37", "-53.7079, 228.967, 6.39046, 0.37", "-53.9034, 229.079, 6.46746, 0.37", "-54.5282, 229.354, 6.75101, 0.22", "-54.8551, 229.456, 6.88252, 0.22", "-55.3516, 229.523, 7.1069, 0.22", "-55.7618, 229.506, 7.29383, 0.29", "-56.0575, 229.468, 7.43083, 0.29", "-56.4101, 229.395, 7.59936, 0.22", "-57.0146, 229.194, 7.91038, 0.22", "-57.7888, 228.853, 8.30414, 0.22", "-58.4864, 228.477, 8.65155, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.8989, 143.301, 7.49808, 0.22", "-20.7405, 144.12, 7.30811, 0.22", "-20.211, 144.464, 7.21986, 0.22", "-18.8667, 145.335, 6.9958, 0.22", "-18.1134, 145.824, 6.87024, 0.22", "-17.6662, 146.114, 6.79571, 0.22", "-17.0255, 146.529, 6.68892, 0.37", "-16.225, 146.924, 6.55553, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-36.2593, 103.157, 3.86512, 0.29", "-36.4708, 103.432, 2.31517, 0.29", "-36.6267, 103.561, 1.69914, 0.29", "-36.8195, 103.67, 1.22103, 0.44", "-37.4472, 104.007, -0.00181628, 0.59", "-38.0751, 104.394, -1.07423, 0.44", "-38.4599, 104.663, -1.65437, 0.37", "-38.8078, 104.9, -2.03261, 0.37", "-39.3306, 105.273, -2.48154, 0.37", "-39.6764, 105.528, -2.71422, 0.96", "-40.4744, 106.127, -3.11999, 0.52", "-40.9924, 106.495, -3.34668, 0.52", "-41.426, 106.799, -3.5463, 0.52", "-41.8372, 107.096, -3.73693, 0.52", "-42.3739, 107.491, -3.96796, 0.59", "-42.7582, 107.771, -4.13168, 0.44", "-43.3267, 108.21, -4.38088, 0.59", "-43.8727, 108.708, -4.67443, 0.66", "-44.1847, 109.07, -4.87879, 0.66", "-44.4329, 109.472, -5.10714, 0.37", "-44.6718, 109.899, -5.44656, 0.37", "-44.8934, 110.267, -5.79443, 0.37", "-45.036, 110.455, -6.02995, 0.81", "-45.1961, 110.597, -6.2819, 1.03", "-45.6007, 110.769, -6.84999, 1.03", "-46.839, 110.859, -8.33711, 0.37", "-47.2322, 110.816, -8.72618, 0.29", "-47.7289, 110.719, -9.14425, 0.29", "-48.061, 110.641, -9.38601, 0.44", "-48.7096, 110.489, -9.76266, 0.44", "-49.3089, 110.369, -9.99967, 0.44", "-49.8149, 110.332, -10.0992, 0.44", "-50.2274, 110.331, -10.1663, 0.59", "-50.5722, 110.329, -10.2061, 0.59", "-51.2752, 110.308, -10.2651, 0.37", "-51.8144, 110.282, -10.3015, 0.37", "-52.3909, 110.252, -10.341, 0.37", "-53.1504, 110.215, -10.3936, 0.37", "-53.9789, 110.189, -10.4421, 0.37", "-54.5304, 110.188, -10.4637, 0.37", "-55.3334, 110.199, -10.4693, 0.37", "-56.1108, 110.221, -10.4412, 0.37", "-56.8164, 110.26, -10.4103, 0.37", "-57.3089, 110.308, -10.3958, 0.74", "-57.7277, 110.364, -10.3873, 0.74", "-58.741, 110.512, -10.3827, 0.37", "-59.4259, 110.615, -10.3869, 0.37", "-60.158, 110.73, -10.4072, 0.37", "-60.6122, 110.826, -10.4296, 0.37", "-61.2584, 110.99, -10.4782, 0.29", "-61.7722, 111.17, -10.5316, 0.29", "-62.178, 111.402, -10.5879, 0.44", "-62.412, 111.583, -10.6145, 0.59", "-62.7033, 111.857, -10.6102, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-36.2593, 103.157, 3.86512, 0.59", "-37.8494, 103.476, 5.94346, 0.59", "-38.5675, 103.772, 6.75268, 0.59", "-39.4049, 104.173, 7.54443, 0.59", "-40.0788, 104.516, 8.09975, 0.59", "-40.8571, 104.905, 8.65262, 0.59", "-42.1331, 105.488, 9.42547, 0.52", "-43.0671, 105.932, 9.83555, 0.52", "-44.1742, 106.456, 10.2667, 0.66", "-44.7613, 106.722, 10.487, 0.66", "-45.6004, 107.064, 10.8197, 0.52", "-46.9442, 107.553, 11.4339, 0.52", "-47.7851, 107.865, 11.8802, 0.52", "-48.446, 108.17, 12.2823, 0.52", "-49.0285, 108.494, 12.6209, 0.74", "-49.6742, 108.854, 12.9486, 0.74", "-50.5941, 109.329, 13.3175, 0.37", "-51.3823, 109.647, 13.5008, 0.37", "-52.4805, 109.952, 13.6019, 0.37", "-54.2096, 110.292, 13.7276, 0.37", "-55.4875, 110.503, 13.8132, 0.29", "-56.6332, 110.703, 13.923, 0.37", "-57.7548, 110.931, 14.126, 0.44", "-58.5298, 111.122, 14.333, 0.66", "-59.6782, 111.469, 14.7175, 0.59", "-60.5194, 111.788, 15.0613, 0.44", "-61.6467, 112.277, 15.5225, 0.44", "-62.7917, 112.754, 15.9386, 0.44", "-63.8128, 113.106, 16.2497, 0.44", "-65.0727, 113.437, 16.6378, 0.37", "-65.9605, 113.612, 16.9007, 0.37", "-66.8195, 113.719, 17.1413, 0.37", "-68.7812, 113.858, 17.6339, 0.37", "-69.6795, 113.907, 17.7974, 0.37", "-71.4535, 114.088, 18.0467, 0.29", "-72.8369, 114.356, 18.1779, 0.29", "-74.4052, 114.796, 18.2411, 0.29", "-74.9684, 114.997, 18.2327, 0.81", "-76.4636, 115.591, 17.9743, 0.81", "-78.0108, 116.128, 17.5099, 0.37", "-79.6982, 116.596, 16.8602, 0.29", "-80.5055, 116.772, 16.5365, 0.29", "-81.3597, 116.909, 16.2247, 0.29", "-84.0586, 117.104, 15.3443, 0.29", "-86.3223, 117.007, 14.7193, 0.29", "-87.201, 116.87, 14.4854, 0.52", "-87.7169, 116.757, 14.3578, 0.52", "-88.924, 116.469, 14.0869, 0.29", "-90.1613, 116.164, 13.8912, 0.29", "-91.4941, 115.815, 13.8956, 0.29", "-92.536, 115.543, 13.9627, 0.52", "-92.8981, 115.444, 13.9785, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.32579, -152.677, 9.25513, 0.22", "-2.96823, -152.753, 8.89387, 0.22", "-3.76652, -152.847, 8.44497, 0.22", "-12.3476, -153.861, 4.3134, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.32579, -152.677, 9.25513, 0.22", "-3.4234, -152.685, 9.0787, 0.22", "-4.56285, -152.692, 8.89554, 0.22", "-5.60238, -152.7, 8.72844, 0.22", "-6.94234, -152.709, 8.51305, 0.22", "-8.81113, -152.722, 8.21265, 0.22", "-9.63783, -152.728, 8.07976, 0.22", "-21.9294, -153.997, 6.27847, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.62973, -229.99, 27.9955, 0.96", "4.78374, -232.053, 27.7684, 0.96", "4.91489, -233.568, 27.7862, 0.74", "5.01804, -234.797, 27.909, 0.66", "5.10909, -236.078, 28.1308, 1.11", "5.16061, -236.797, 28.3023, 1.25", "5.30638, -239.026, 28.9144, 0.88", "5.37454, -240.19, 29.3755, 0.29", "5.37861, -241.372, 29.9284, 0.29", "5.34949, -242.75, 30.7088, 0.29", "5.31912, -243.823, 31.3819, 0.59", "5.29488, -244.613, 31.8918, 0.66", "5.24347, -245.641, 32.533, 0.29", "5.23451, -246.255, 32.9335, 0.29", "5.29223, -248.174, 34.1365, 1.11", "5.36834, -249.094, 34.6991, 1.25", "5.53782, -250.728, 35.6775, 0.74", "5.61455, -251.254, 35.9904, 1.03", "5.78778, -252.12, 36.4806, 1.03", "6.06125, -253.324, 37.1088, 0.88", "6.38817, -254.959, 37.7688, 0.52" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.62973, -229.99, 27.9955, 0.22", "4.63467, -231.445, 27.8953, 0.22", "4.64814, -232.854, 27.8143, 0.22", "4.71342, -233.876, 27.772, 0.22", "4.85246, -235.053, 27.7319, 0.22", "5.13177, -236.628, 27.7106, 0.22", "5.34235, -237.74, 27.7399, 0.22", "5.60603, -238.872, 27.8474, 0.22", "5.86322, -239.899, 28.0365, 0.22", "5.96252, -240.527, 28.1769, 0.22", "5.88612, -242.045, 28.5664, 0.22", "5.41189, -243.133, 28.8668, 0.22", "4.74828, -244.014, 29.1066, 0.22", "4.1643, -244.502, 29.2171, 0.22", "2.45193, -245.639, 29.4121, 0.22", "0.946929, -246.434, 29.4771, 0.22", "-0.0740022, -246.771, 29.4044, 0.22", "-0.79938, -257.406, 30.205, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "26.0171, 54.2695, -114.805, 0.37", "26.1856, 53.7093, -114.567, 0.37", "26.6581, 52.2857, -113.959, 0.29", "26.9762, 51.3969, -113.594, 0.44", "27.2651, 50.6082, -113.293, 0.37", "28.0538, 48.5853, -112.413, 0.96", "28.4247, 47.7031, -111.999, 0.81", "28.7695, 46.9461, -111.59, 0.59", "29.1102, 46.3077, -111.198, 0.59", "29.5488, 45.5442, -110.727, 0.44", "30.4338, 44.0075, -109.771, 0.66", "30.729, 43.4954, -109.447, 0.66", "30.9998, 43.034, -109.107, 0.66", "31.4865, 42.2531, -108.505, 0.37", "32.0343, 41.3462, -107.84, 0.37", "32.8177, 39.9987, -106.953, 0.74", "33.4597, 38.8628, -106.314, 0.44", "34.2666, 37.4473, -105.585, 0.37", "34.991, 36.1954, -105.01, 0.29", "35.5711, 35.2029, -104.604, 0.44", "36.1662, 34.1991, -104.261, 0.52", "36.5718, 33.4676, -104.09, 0.59", "37.0518, 32.4791, -103.932, 0.59", "37.601, 31.2485, -103.775, 0.44", "38.0059, 30.2836, -103.637, 0.96", "38.1701, 29.8496, -103.602, 1.18", "38.3672, 29.277, -103.586, 1.18", "38.6397, 28.4145, -103.599, 0.81", "38.9192, 27.4743, -103.653, 0.66", "39.2272, 26.5238, -103.737, 0.66", "39.893, 24.6251, -103.951, 0.29", "40.2185, 23.7218, -104.078, 0.29", "40.2829, 23.5495, -104.11, 0.44", "40.5483, 22.8717, -104.28, 0.15", "40.818, 22.1502, -104.507, 0.15" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "26.0171, 54.2695, -114.805, 1.03", "26.5057, 54.6124, -115.899, 1.03", "26.8962, 55.0043, -116.951, 1.18", "27.3251, 55.5927, -118.286, 1.4", "28.2797, 57.0642, -121.255, 1.18", "28.689, 57.7337, -122.463, 1.03", "29.0315, 58.2906, -123.382, 1.03", "29.7609, 59.4135, -125.07, 0.96", "30.4012, 60.3863, -126.351, 0.88", "30.7187, 60.8797, -126.91, 0.88", "31.0655, 61.4994, -127.458, 1.33", "31.5825, 62.472, -128.331, 0.96", "32.0156, 63.3511, -129.185, 0.81", "32.5852, 64.643, -130.523, 0.81", "32.9277, 65.7251, -131.695, 0.81", "33.033, 66.3388, -132.373, 0.66", "33.0727, 67.3977, -133.494, 0.66", "32.973, 68.689, -134.79, 1.03", "32.8407, 69.4989, -135.572, 1.03", "32.601, 70.3632, -136.347, 0.74", "32.2081, 71.368, -137.195, 0.74", "31.8603, 72.1372, -137.84, 1.11", "31.3068, 73.2806, -138.713, 1.47", "31.1919, 73.5005, -138.892, 1.47", "30.3398, 74.9897, -140.132, 0.66", "29.7246, 76.0471, -141.084, 0.88", "29.251, 76.9418, -141.875, 0.96", "28.8537, 77.8169, -142.62, 1.18", "28.2296, 79.4199, -143.816, 1.4", "27.8983, 80.5149, -144.541, 0.66", "27.4811, 82.5457, -145.72, 0.96", "27.3359, 83.4951, -146.211, 0.52", "27.1639, 84.7578, -146.773, 0.52", "27.0077, 85.8619, -147.195, 0.81", "26.8348, 86.8723, -147.495, 0.96", "26.6435, 87.8653, -147.757, 0.96", "26.4416, 88.8982, -147.966, 0.74", "26.0724, 90.7347, -148.306, 0.66", "25.8921, 91.7633, -148.471, 0.66", "25.7302, 92.9527, -148.662, 0.74", "25.5982, 94.2914, -148.878, 0.74", "25.5161, 95.5564, -149.093, 0.74", "25.4559, 97.2411, -149.394, 1.11", "25.4346, 98.0938, -149.542, 1.18", "25.4111, 98.7338, -149.67, 1.18", "25.2901, 99.9717, -149.942, 0.96", "24.9403, 101.816, -150.371, 0.74", "24.6379, 102.905, -150.62, 0.66", "24.2459, 103.93, -150.846, 0.52", "23.8127, 104.807, -151.02, 0.52", "23.081, 106.003, -151.22, 0.81", "22.5672, 106.693, -151.303, 1.03", "22.0266, 107.311, -151.386, 0.66", "21.2235, 108.165, -151.529, 0.81", "20.569, 108.851, -151.658, 0.81", "19.8363, 109.635, -151.812, 0.81", "19.1914, 110.343, -151.949, 0.66", "18.5686, 111.009, -152.094, 0.66", "17.6062, 111.977, -152.33, 0.81", "16.991, 112.545, -152.482, 0.81", "16.0894, 113.307, -152.706, 0.66", "15.2638, 113.959, -152.962, 0.81", "14.4922, 114.541, -153.229, 0.66", "13.7655, 115.14, -153.602, 0.66", "13.0839, 115.785, -154.095, 0.66", "12.4573, 116.552, -154.723, 0.88", "11.9153, 117.62, -155.651, 0.88", "11.8224, 118.27, -156.228, 1.03", "12.1145, 120.16, -158.228, 0.37", "12.3097, 120.563, -158.88, 0.37", "12.603, 120.929, -159.663, 0.29", "12.9329, 121.253, -160.671, 0.29", "13.4161, 121.689, -162.368, 1.03", "14.1299, 122.39, -165.373, 1.62", "14.954, 123.338, -169.615, 1.18", "15.1807, 123.703, -171.185, 0.81", "15.6394, 125.035, -176.4, 0.52", "15.6747, 125.277, -177.218, 0.52", "15.6713, 125.775, -178.61, 0.52", "15.6034, 126.264, -179.555, 0.52", "15.4758, 126.931, -180.35, 0.52", "15.2611, 128.165, -181.382, 0.74", "15.1879, 129.05, -181.842, 0.44", "15.1468, 129.873, -182.25, 0.44", "15.1293, 130.618, -182.581, 0.66", "15.1181, 131.839, -183.054, 0.37", "15.1256, 132.659, -183.323, 0.37", "15.0791, 134.039, -183.717, 0.52", "14.8873, 135.578, -184.107, 0.52", "14.6749, 136.732, -184.328, 0.74", "14.5448, 137.354, -184.415, 0.74", "14.3057, 138.472, -184.508, 0.52", "14.088, 139.584, -184.517, 0.74", "13.7253, 141.436, -184.394, 0.29", "13.479, 142.584, -184.286, 0.52", "13.2134, 143.606, -184.174, 0.66", "13.0202, 144.308, -184.085, 0.66", "12.6837, 145.758, -183.867, 0.44", "12.5377, 146.729, -183.712, 0.44", "12.4594, 147.712, -183.57, 0.44", "12.4111, 149.096, -183.495, 0.59", "12.4146, 150.354, -183.579, 0.96", "12.4749, 151.743, -183.913, 0.37", "12.5774, 152.87, -184.357, 0.37", "12.7195, 153.841, -184.844, 0.81", "13.0435, 155.59, -185.831, 0.44", "13.2969, 156.906, -186.617, 0.44", "13.5321, 158.236, -187.51, 0.44", "13.6583, 159.211, -188.225, 0.74", "13.7436, 160.042, -188.859, 0.74", "13.8525, 161.064, -189.604, 0.22", "13.973, 162.068, -190.118, 0.22" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-8.00711, 68.7591, -74.6968, 0.44", "-7.63145, 70.0007, -74.6841, 0.44", "-7.3671, 71.0282, -74.7324, 0.44", "-7.01305, 72.6152, -74.9248, 0.81", "-6.83094, 73.4498, -75.0899, 0.81", "-6.66208, 74.2933, -75.3101, 0.81", "-6.57394, 74.8058, -75.4586, 1.03", "-6.49703, 75.7585, -75.7419, 0.88", "-6.47386, 76.5711, -76.0327, 0.74", "-6.45233, 77.4066, -76.3676, 0.96", "-6.4307, 78.1646, -76.6667, 0.96", "-6.40103, 79.1084, -77.0084, 0.52", "-6.35684, 79.9571, -77.2238, 0.52", "-6.32553, 80.3339, -77.2434, 0.74", "-6.22861, 81.0118, -77.1093, 0.44", "-6.09489, 81.7704, -76.8046, 0.81", "-5.96272, 82.4434, -76.4377, 0.81", "-5.77395, 83.5166, -75.737, 0.88", "-5.65307, 84.563, -74.9721, 1.11", "-5.61252, 85.6554, -74.1447, 1.11", "-5.64202, 86.4563, -73.5354, 0.52", "-5.66711, 86.8826, -73.2079, 0.52", "-5.70568, 87.4465, -72.793, 0.52", "-5.69782, 87.9806, -72.4469, 0.52", "-5.57593, 88.5711, -72.0986, 0.52", "-5.29481, 89.1643, -71.7608, 0.52", "-4.80378, 89.9025, -71.3395, 0.74", "-4.4056, 90.4556, -71.0576, 0.66", "-3.63732, 91.5493, -70.5771, 0.52", "-3.23513, 92.1923, -70.3389, 0.52", "-2.87825, 92.9144, -70.1113, 0.52", "-2.62538, 93.7499, -69.8895, 0.66", "-2.53376, 94.5458, -69.7016, 0.66", "-2.5491, 95.4125, -69.4796, 0.37", "-2.65799, 96.2928, -69.2373, 0.37", "-2.76751, 96.9465, -69.0296, 0.37", "-2.98491, 98.0466, -68.6272, 0.74", "-3.19757, 98.9918, -68.2285, 0.96", "-3.43402, 99.7886, -67.8559, 0.96", "-3.75942, 100.605, -67.3757, 0.44", "-4.09059, 101.254, -66.9191, 0.37", "-4.45201, 101.859, -66.4424, 0.74", "-4.82088, 102.38, -66.0019, 0.29", "-5.51094, 103.226, -65.2576, 0.29", "-6.62691, 104.395, -64.256, 1.03", "-7.19598, 104.92, -63.8264, 0.96", "-7.71417, 105.398, -63.4964, 0.44", "-8.04745, 105.743, -63.3151, 0.44", "-8.44286, 106.244, -63.1388, 0.44", "-9.15647, 107.389, -62.8062, 0.52", "-9.53845, 108.13, -62.6507, 0.74", "-10.0818, 109.444, -62.3597, 0.37", "-10.2839, 110.138, -62.1831, 0.37", "-10.4145, 110.944, -61.9555, 0.37", "-10.4736, 112.393, -61.5357, 0.52", "-10.4383, 113.099, -61.3156, 0.52", "-10.3856, 113.795, -61.1062, 0.52", "-10.311, 114.715, -60.8552, 0.52", "-10.2569, 115.708, -60.6253, 0.74", "-10.2477, 116.384, -60.492, 0.74", "-10.2843, 117.434, -60.3274, 0.44", "-10.3426, 118.305, -60.1615, 0.44", "-10.3924, 118.935, -60.0231, 0.59", "-10.4387, 119.859, -59.8081, 0.59", "-10.4422, 120.622, -59.6032, 0.74", "-10.4036, 121.524, -59.333, 0.81", "-10.2652, 122.618, -58.9587, 0.52", "-10.1288, 123.311, -58.6859, 0.52", "-9.88331, 124.267, -58.2769, 0.52", "-9.65771, 124.926, -57.9899, 0.52", "-9.46679, 125.379, -57.8307, 0.52", "-8.98459, 126.394, -57.6025, 0.74", "-8.48708, 127.441, -57.5082, 0.59", "-8.0795, 128.414, -57.528, 0.59", "-7.87786, 129.094, -57.6085, 0.96", "-7.70755, 130.147, -57.8151, 0.59", "-7.66805, 131.217, -58.0683, 0.59", "-7.7403, 132.1, -58.3098, 0.44", "-7.87226, 132.824, -58.5116, 0.44", "-8.11728, 133.78, -58.7653, 0.44", "-8.3544, 134.604, -58.9466, 0.37", "-8.64147, 135.628, -59.1055, 0.29", "-8.75518, 136.115, -59.1615, 0.44", "-8.9036, 137.147, -59.2515, 0.44", "-8.91993, 137.59, -59.2822, 0.29", "-8.85767, 138.352, -59.3201, 0.29", "-8.74688, 138.986, -59.3384, 0.44", "-8.56596, 139.644, -59.3418, 0.44", "-8.32033, 140.321, -59.3297, 0.44", "-7.9716, 141.134, -59.2907, 0.29", "-7.73352, 141.695, -59.2523, 0.29", "-7.56462, 142.117, -59.2347, 0.44", "-7.3208, 142.809, -59.2331, 0.44", "-7.12739, 143.496, -59.2688, 0.22", "-7.02576, 144.187, -59.3649, 0.29", "-7.04579, 144.683, -59.4823, 0.29", "-7.23548, 145.384, -59.7083, 0.29", "-7.42375, 145.864, -59.8959, 0.59", "-7.61093, 146.293, -60.0943, 0.59", "-7.89574, 146.962, -60.4694, 0.29", "-8.09067, 147.507, -60.8697, 0.29", "-8.23179, 148.058, -61.3402, 0.44", "-8.35232, 148.776, -61.9437, 0.44", "-8.43068, 149.547, -62.5666, 0.74", "-8.45419, 150.236, -63.1044, 1.11", "-8.4346, 151.509, -64.0789, 0.88", "-8.42798, 151.988, -64.44, 0.66", "-8.49831, 153.144, -65.3097, 0.44", "-8.59613, 153.783, -65.7927, 0.37", "-8.75605, 154.513, -66.313, 0.37", "-9.06514, 155.58, -67.0038, 0.96", "-9.24824, 156.112, -67.3071, 1.4", "-9.6858, 157.279, -67.953, 0.59", "-10.0902, 158.299, -68.4997, 0.37", "-10.3769, 159.004, -68.8179, 0.37", "-10.6419, 159.675, -69.0499, 0.29", "-10.9664, 160.609, -69.2285, 0.44", "-11.1437, 161.245, -69.2399, 0.44", "-11.3391, 162.155, -69.1017, 0.29", "-11.592, 163.389, -68.8185, 0.44", "-11.7448, 164.168, -68.5992, 0.44", "-11.9985, 165.64, -68.0972, 0.88", "-12.2622, 167.133, -67.45, 0.44", "-12.3906, 167.856, -67.0534, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-8.00711, 68.7591, -74.6968, 0.52", "-10.0505, 69.0469, -75.1603, 0.52", "-11.4519, 69.2211, -75.5367, 0.44", "-12.4413, 69.3964, -75.8623, 0.44", "-13.3642, 69.6268, -76.1923, 0.59", "-14.0911, 69.8567, -76.476, 0.74", "-15.1378, 70.2445, -76.9682, 0.44", "-16.0037, 70.6333, -77.514, 0.29", "-17.0714, 71.1636, -78.324, 0.44", "-17.7762, 71.514, -78.9145, 0.37", "-18.5997, 71.9616, -79.6789, 0.37", "-19.9502, 72.8281, -81.0529, 0.74", "-20.7691, 73.4547, -81.9484, 0.88", "-21.1068, 73.7412, -82.3173, 0.88", "-21.6859, 74.2665, -82.9346, 0.37", "-22.3066, 74.8993, -83.5627, 0.37", "-23.0062, 75.7141, -84.1316, 0.37", "-23.4083, 76.1975, -84.3426, 0.52", "-23.8949, 76.6985, -84.5264, 0.52", "-24.6668, 77.3047, -84.7707, 0.66", "-25.4174, 77.746, -84.998, 0.66", "-26.3725, 78.1469, -85.2529, 0.66", "-27.1114, 78.3861, -85.4475, 0.37", "-27.9771, 78.6127, -85.6741, 0.44", "-29.4207, 78.9494, -86.0571, 0.44", "-30.3753, 79.1424, -86.3151, 0.59", "-31.4641, 79.3378, -86.6256, 0.66", "-32.2196, 79.4742, -86.8554, 0.66", "-33.3165, 79.6743, -87.2047, 0.37", "-34.9067, 79.9718, -87.8034, 0.29", "-35.7929, 80.1241, -88.216, 0.29", "-36.6933, 80.2751, -88.7249, 0.29", "-37.4903, 80.3963, -89.3097, 0.37", "-38.1679, 80.4923, -89.9604, 0.52", "-39.0072, 80.5986, -90.9435, 0.52", "-39.6342, 80.7025, -91.7687, 0.66", "-40.1526, 80.855, -92.5057, 0.66", "-40.868, 81.1671, -93.5417, 0.44", "-41.6903, 81.6101, -94.6902, 0.29", "-42.2324, 81.9522, -95.3453, 0.29", "-43.0878, 82.5109, -96.1361, 0.29", "-43.997, 83.0819, -96.7671, 0.44", "-44.8547, 83.5731, -97.2086, 0.74", "-45.5141, 83.9136, -97.4441, 0.74", "-46.8515, 84.4922, -97.7454, 0.52", "-48.0295, 84.9042, -97.933, 0.52", "-49.3088, 85.2568, -98.0706, 0.74", "-50.2491, 85.4805, -98.1311, 0.74", "-50.9072, 85.6482, -98.1915, 0.88", "-51.8445, 85.9664, -98.2958, 0.88", "-53.1626, 86.6278, -98.4754, 0.37", "-53.8925, 87.1856, -98.6393, 0.37", "-54.2657, 87.5925, -98.7678, 0.66", "-55.1226, 88.8901, -99.1505, 0.44", "-55.5497, 89.7525, -99.4067, 0.74", "-55.9078, 90.6538, -99.6885, 0.74", "-56.3075, 91.7137, -100.018, 1.03", "-56.5609, 92.335, -100.169, 0.74", "-57.0504, 93.3588, -100.338, 0.59", "-57.5924, 94.2654, -100.414, 0.52", "-58.127, 94.9713, -100.46, 0.44", "-59.0997, 96.016, -100.515, 0.44", "-60.4173, 97.2553, -100.555, 0.52", "-61.3345, 98.0427, -100.584, 0.52", "-62.2846, 98.8044, -100.585, 0.52", "-63.2997, 99.5807, -100.536, 0.52", "-64.1411, 100.171, -100.474, 0.52", "-64.6095, 100.452, -100.444, 0.66", "-65.6192, 100.924, -100.403, 0.66", "-67.0835, 101.474, -100.164, 0.37", "-67.9783, 101.783, -99.9073, 0.37", "-69.0426, 102.139, -99.4885, 0.37", "-69.9001, 102.446, -99.091, 0.37", "-70.6463, 102.745, -98.7234, 0.37", "-72.6013, 103.705, -97.7047, 0.74", "-73.6023, 104.312, -97.2325, 0.59", "-73.8776, 104.511, -97.1209, 1.03", "-74.625, 105.12, -96.8585, 0.74", "-75.4397, 105.767, -96.628, 0.74", "-76.5294, 106.537, -96.45, 0.37", "-77.5233, 107.111, -96.3727, 0.52", "-78.2891, 107.435, -96.2856, 0.52", "-78.5646, 107.532, -96.2363, 0.37", "-79.8495, 107.901, -95.9752, 0.37", "-81.0169, 108.175, -95.7038, 1.55", "-81.9131, 108.334, -95.4688, 1.55", "-82.9379, 108.496, -95.134, 0.81", "-84.3819, 108.72, -94.602, 0.59" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "29.2104, 76.5775, 101.751, 0.44", "26.0769, 79.318, 109.893, 0.44", "22.4108, 81.2276, 118.041, 0.44", "20.6483, 82.6076, 126.897, 0.44", "18.8091, 82.2541, 135.838, 0.44", "17.8668, 80.8305, 144.822, 0.44", "17.7718, 77.8298, 153.485, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "29.2104, 76.5775, 101.751, 0.22", "26.4459, 78.3862, 112.504, 0.44", "24.9643, 78.7558, 123.642, 0.44", "24.7202, 80.5034, 134.748, 0.44", "24.6128, 80.416, 145.991, 0.44", "23.7045, 82.0258, 157.084, 0.44", "23.2624, 84.9121, 167.953, 0.44", "22.2608, 87.1169, 178.938, 0.44", "19.9372, 87.5009, 189.931, 0.44", "18.1318, 87.2905, 201.027, 0.44", "15.3076, 86.7205, 211.895, 0.44", "11.8574, 86.8088, 222.595, 0.44", "7.19828, 88.3753, 232.713, 0.44", "1.38647, 89.956, 242.215, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "54.7402, 75.4525, 93.398, 0.44", "63.4292, 80.5974, 102.222, 0.44", "71.7722, 85.8983, 111.289, 0.44", "80.3716, 89.075, 121.044, 0.44", "89.597, 90.8866, 130.559, 0.44", "97.2754, 94.431, 140.941, 0.44", "103.353, 97.2485, 152.529, 0.44", "109.768, 98.7667, 164.169, 0.44", "114.853, 98.5522, 176.537, 0.44", "122.111, 97.4947, 187.726, 0.44", "128.14, 98.6926, 199.606, 0.44", "134.792, 97.9216, 211.186, 0.44", "141.439, 99.484, 222.689, 0.44", "146.454, 102.462, 234.739, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "54.7402, 75.4525, 93.398, 0.22", "58.211, 77.4641, 96.9585, 0.44", "61.4042, 80.8085, 99.7404, 0.44", "63.7928, 83.6043, 103.664, 0.44", "65.7275, 86.0932, 108.009, 0.44", "68.1773, 88.1097, 112.331, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "18.1493, 58.1318, 37.0379, 1.03", "18.384, 58.9895, 37.6936, 1.03", "18.7417, 60.0386, 38.5587, 0.44", "19.221, 61.0018, 39.372, 0.52", "20.0055, 62.1583, 40.3582, 0.96", "21.3752, 63.6549, 41.6743, 1.25", "22.0379, 64.1797, 42.1325, 1.4", "22.6669, 64.5325, 42.4585, 1.18", "24.2839, 65.2135, 43.0321, 0.29", "25.5137, 65.6673, 43.3523, 0.29", "26.9476, 66.2132, 43.5822, 0.66", "28.894, 67.0402, 43.7677, 0.37", "29.9711, 67.6785, 43.9028, 0.37", "30.8474, 68.5034, 44.1242, 0.37", "31.5409, 69.7329, 44.5376, 0.37", "31.9924, 71.0392, 45.0423, 0.74", "32.1827, 71.9656, 45.4247, 1.11", "32.3058, 72.977, 45.8875, 1.11", "32.359, 73.672, 46.212, 1.11", "32.4058, 74.44, 46.5494, 1.11", "32.4661, 75.5442, 46.9475, 0.88", "32.5727, 76.9171, 47.4265, 1.18", "32.6766, 77.9743, 47.765, 1.18", "32.8154, 79.0281, 48.0664, 1.03", "33.0095, 80.2047, 48.3923, 0.59", "33.2076, 81.391, 48.7014, 0.37", "33.6098, 83.316, 49.148, 0.29", "33.9672, 84.4057, 49.4484, 0.52", "34.2307, 84.9917, 49.6523, 0.66", "35.0345, 86.3284, 50.2152, 0.37", "36.0155, 87.654, 50.8499, 0.37", "36.9206, 88.7167, 51.3831, 0.59", "38.4446, 90.3876, 52.1883, 1.18", "39.4568, 91.4637, 52.6886, 0.88", "40.436, 92.4836, 53.1125, 0.29", "41.0076, 93.0529, 53.3216, 0.29", "41.8114, 93.8895, 53.5894, 0.52", "42.2853, 94.4992, 53.7338, 0.59", "42.9502, 95.7262, 53.9203, 0.52", "43.3509, 96.9382, 54.0851, 0.81", "43.5364, 98.0021, 54.3013, 0.96", "43.7219, 99.4075, 54.6589, 1.11", "43.8787, 100.352, 54.9702, 1.33", "44.2664, 101.832, 55.569, 1.99", "44.8713, 103.284, 56.3003, 2.21", "46.1982, 105.34, 57.5318, 0.96", "47.0762, 106.253, 58.1326, 0.66", "48.7235, 107.586, 59.122, 0.29", "50.1576, 108.463, 59.8567, 0.29", "51.7504, 109.161, 60.54, 0.29", "52.6615, 109.415, 60.8787, 0.29", "53.864, 109.552, 61.2061, 0.22", "62.6317, 119.973, 65.0181, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "18.1493, 58.1318, 37.0379, 0.96", "16.9932, 60.0618, 38.7021, 0.96", "16.6246, 60.5702, 39.1387, 0.44", "16.1592, 61.0988, 39.8047, 0.37", "15.8098, 61.4507, 40.4318, 0.29", "15.5433, 61.7109, 40.9281, 0.37", "15.3293, 61.9155, 41.3109, 0.37", "14.9959, 62.2117, 41.8475, 0.37", "13.8278, 63.1611, 43.6871, 1.18", "12.8925, 63.875, 45.0853, 1.18", "12.4232, 64.2173, 45.7428, 0.88", "11.9341, 64.592, 46.3342, 0.88", "11.4797, 64.9567, 46.7757, 0.81", "11.0605, 65.3041, 47.0456, 1.18", "10.4745, 65.7871, 47.2207, 1.18", "9.69023, 66.4359, 47.3318, 0.74", "8.68515, 67.2105, 47.3747, 0.52", "8.07934, 67.626, 47.3561, 0.29", "7.46997, 67.9871, 47.2978, 0.29", "7.11201, 68.178, 47.2303, 0.96", "6.73969, 68.363, 47.1182, 1.18", "5.70066, 68.8411, 46.6489, 0.22", "5.01894, 69.0973, 46.2947, 0.22", "4.45541, 69.2802, 45.9606, 0.59", "3.90295, 69.4426, 45.6189, 0.52", "3.37703, 69.5909, 45.2997, 0.52", "2.63446, 69.8188, 44.8595, 0.66", "2.38792, 69.9142, 44.7159, 0.66", "1.78026, 70.1796, 44.3346, 0.29", "1.53095, 70.2885, 44.1948, 0.29", "1.02613, 70.5175, 43.9602, 0.29", "0.804164, 70.6272, 43.8683, 0.74", "0.212539, 70.951, 43.5895, 0.74", "-0.181146, 71.1866, 43.3209, 0.59", "-0.601882, 71.4488, 42.9104, 0.29", "-0.98837, 71.6871, 42.4902, 1.03", "-1.29494, 71.8722, 42.138, 1.03", "-1.95454, 72.2953, 41.3526, 0.88", "-2.65641, 72.7896, 40.4867, 0.88", "-3.61467, 73.518, 39.3151, 0.37", "-3.93151, 73.7829, 38.8507, 0.88", "-4.14629, 73.986, 38.5085, 1.33", "-4.56602, 74.432, 37.8357, 0.37", "-4.72253, 74.6204, 37.5948, 0.22", "-5.04532, 75.0701, 37.0986, 0.22", "-6.42377, 77.2358, 34.8696, 0.66", "-6.63423, 77.5947, 34.4041, 0.29", "-6.8185, 77.9336, 33.9209, 0.22", "-6.92497, 78.1245, 33.6258, 0.22", "-7.25859, 78.6993, 32.7141, 1.11", "-7.44885, 79.0181, 32.2149, 1.11", "-8.33715, 80.4946, 30.3656, 0.37", "-8.50144, 80.7535, 30.0393, 0.29", "-8.69192, 81.0605, 29.6903, 0.29", "-8.96689, 81.4939, 29.28, 0.29", "-9.39547, 82.1286, 28.8475, 0.29", "-9.83641, 82.7647, 28.5502, 0.29", "-10.0355, 83.0412, 28.4877, 0.29", "-10.4623, 83.6397, 28.3321, 0.66", "-10.6804, 83.9885, 28.2462, 0.81", "-10.9084, 84.4318, 28.1565, 0.96" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-62.7033, 111.857, -10.6102, 0.29", "-63.0299, 114.612, -11.4357, 0.29", "-63.1089, 115.719, -11.9278, 0.29", "-63.1739, 116.968, -12.5604, 0.29", "-63.2332, 118.006, -13.0924, 0.52", "-63.3385, 119.298, -13.757, 0.52", "-63.4864, 120.542, -14.3866, 0.66", "-63.8607, 122.236, -15.2739, 0.29", "-64.1159, 122.996, -15.7407, 0.29", "-64.5307, 123.929, -16.4049, 0.37", "-64.855, 124.563, -16.8917, 0.37", "-65.1975, 125.165, -17.4278, 0.29", "-66.0215, 126.457, -18.6586, 0.29", "-66.4165, 127.016, -19.2129, 0.29", "-66.9453, 127.714, -19.9948, 0.29", "-67.5441, 128.435, -20.9025, 0.74", "-69.0566, 130.048, -23.2549, 0.37", "-69.4614, 130.43, -23.9835, 0.29", "-69.79, 130.719, -24.6268, 0.29", "-70.2793, 131.189, -25.6433, 0.29", "-70.6271, 131.562, -26.3887, 0.29", "-71.2116, 132.228, -27.6193, 0.52", "-72.7207, 134.141, -30.8022, 0.44", "-72.9337, 134.478, -31.3639, 0.29", "-73.592, 135.661, -33.2719, 0.81", "-74.2881, 137.156, -35.5073, 0.29", "-74.5067, 137.721, -36.2866, 0.29", "-74.9007, 138.926, -37.753, 0.96", "-75.5988, 141.098, -40.0988, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-62.7033, 111.857, -10.6102, 0.29", "-64.4399, 111.376, -9.6191, 0.29", "-65.6576, 111.34, -8.92185, 0.29", "-66.7548, 111.532, -8.32078, 0.29", "-67.6292, 111.739, -7.8772, 0.29", "-69.0393, 112.043, -7.22982, 0.29", "-69.9826, 112.193, -6.87257, 0.29", "-71.352, 112.421, -6.51707, 0.29", "-72.65, 112.649, -6.24797, 0.66", "-73.7979, 112.833, -6.06789, 0.66", "-75.4406, 113.034, -5.90825, 0.29", "-77.1875, 113.167, -5.86308, 0.29", "-78.1688, 113.219, -5.8791, 0.29", "-79.0795, 113.283, -5.9807, 0.29", "-79.7563, 113.401, -6.12494, 0.29", "-80.4044, 113.664, -6.33829, 0.29", "-80.8996, 113.997, -6.54535, 0.44", "-81.3985, 114.42, -6.80639, 0.29", "-82.7013, 115.371, -7.77484, 0.29", "-83.1833, 115.67, -8.16013, 0.29", "-83.8534, 116.017, -8.66732, 0.29", "-84.3477, 116.224, -9.0059, 0.29", "-85.806, 116.725, -9.88691, 0.74", "-88.5836, 117.487, -11.1851, 0.29", "-90.2011, 117.859, -11.6953, 0.29", "-91.4462, 118.142, -11.9483, 0.29", "-92.4084, 118.381, -12.0186, 0.29", "-94.0113, 118.831, -11.8786, 0.29", "-95.907, 119.454, -11.244, 0.29", "-96.7068, 119.795, -10.7362, 0.37", "-97.5832, 120.241, -9.99957, 0.37", "-98.282, 120.678, -9.29858, 0.37", "-98.7053, 121.031, -8.73611, 0.81", "-99.2844, 121.658, -7.74442, 0.52", "-100.022, 122.62, -6.3278, 0.29", "-100.434, 123.189, -5.51293, 0.29", "-100.868, 123.78, -4.66023, 0.74", "-101.885, 125.083, -2.79978, 0.37", "-102.287, 125.589, -2.11658, 0.29", "-102.717, 126.107, -1.50055, 0.22", "-103.49, 126.942, -0.674151, 0.22", "-103.921, 127.378, -0.329318, 0.22", "-104.521, 127.922, -0.0277233, 0.44", "-104.868, 128.194, 0.0565167, 0.44", "-105.676, 128.788, 0.189679, 0.29", "-106.896, 129.643, 0.338225, 0.29", "-107.821, 130.258, 0.363073, 0.29", "-108.34, 130.583, 0.35185, 0.29", "-109.114, 131.004, 0.31602, 0.22", "-109.937, 131.376, 0.209254, 0.22", "-110.936, 131.742, -0.0416088, 0.22", "-112.376, 132.188, -0.627438, 0.44", "-112.95, 132.372, -0.98579, 0.44", "-113.547, 132.572, -1.4378, 0.22", "-114.961, 133.082, -2.69728, 0.22", "-116.127, 133.587, -3.92751, 0.66", "-116.634, 133.855, -4.56165, 1.03", "-118.061, 134.664, -6.53094, 0.88", "-118.496, 134.931, -7.13039, 0.59", "-119.241, 135.437, -8.2286, 0.59", "-120.302, 136.221, -9.91777, 0.74", "-121.884, 137.575, -12.7396, 0.66", "-122.893, 138.549, -14.6052, 0.52", "-123.502, 139.215, -15.7611, 0.74", "-124.477, 140.439, -17.6636, 1.55", "-125.014, 141.231, -18.7179, 1.77", "-125.467, 142.001, -19.5544, 1.92", "-126.318, 143.898, -20.9923, 0.88", "-126.512, 144.427, -21.2818, 0.44", "-126.867, 145.408, -21.7019, 0.29", "-127.364, 146.61, -22.026, 0.96", "-127.777, 147.582, -22.2188, 0.96", "-128.512, 149.342, -22.4772, 0.37", "-128.903, 150.462, -22.5757, 0.37", "-129.193, 151.28, -22.6506, 0.37", "-129.592, 152.239, -22.7285, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-92.8981, 115.444, 13.9785, 0.22", "-94.4086, 114.431, 13.4177, 0.22", "-95.0361, 113.991, 13.3254, 0.22", "-95.6878, 113.549, 13.3168, 0.22", "-96.3328, 113.158, 13.3602, 0.29", "-97.281, 112.647, 13.4612, 0.29", "-97.892, 112.328, 13.5343, 0.22", "-99.2078, 111.666, 13.8322, 0.59", "-99.8294, 111.391, 13.9889, 0.66", "-100.884, 111.018, 14.2331, 0.22", "-102.079, 110.78, 14.4519, 0.22", "-103.445, 110.73, 14.6214, 0.44", "-104.307, 110.818, 14.6658, 0.22", "-105.342, 111.052, 14.62, 0.22", "-106.499, 111.425, 14.5169, 0.22", "-107.896, 111.948, 14.3295, 0.22", "-108.523, 112.188, 14.2214, 0.22", "-109.114, 112.383, 14.1119, 0.44", "-109.416, 112.436, 14.0503, 0.44", "-110.701, 112.469, 13.8045, 0.22", "-111.757, 112.41, 13.6669, 0.22", "-112.501, 112.339, 13.6087, 0.22", "-113.41, 112.261, 13.5845, 0.22", "-114.845, 112.158, 13.6507, 0.22", "-115.714, 112.115, 13.7544, 0.22", "-116.612, 112.09, 13.9523, 0.22", "-117.712, 112.117, 14.2924, 0.22", "-118.549, 112.167, 14.6434, 0.22", "-119.686, 112.282, 15.2809, 0.22", "-120.395, 112.39, 15.7812, 0.37", "-121.086, 112.527, 16.3226, 0.22", "-121.598, 112.655, 16.7728, 0.44", "-122.414, 112.897, 17.5594, 0.37", "-123.125, 113.174, 18.3577, 0.22", "-123.4, 113.329, 18.717, 0.37", "-123.777, 113.577, 19.2256, 0.29", "-124.417, 114.033, 19.9897, 0.44", "-125.206, 114.608, 20.9247, 0.22", "-125.666, 114.942, 21.4055, 0.22", "-126.279, 115.354, 21.9813, 0.22", "-126.708, 115.625, 22.3624, 0.22", "-127.528, 116.17, 23.0289, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-92.8981, 115.444, 13.9785, 0.37", "-93.6206, 115.721, 13.0402, 0.37", "-94.6697, 116.21, 11.6603, 0.37", "-95.3675, 116.598, 10.7446, 0.37", "-95.9543, 117.006, 9.97196, 0.37", "-96.8508, 117.768, 8.75287, 0.37", "-97.2458, 118.185, 8.1794, 0.29", "-97.7618, 118.822, 7.24748, 0.66", "-97.9769, 119.129, 6.78501, 0.81", "-98.297, 119.665, 5.99401, 0.59", "-98.5433, 120.147, 5.30644, 0.59", "-98.847, 120.818, 4.39771, 0.74", "-99.8922, 123.355, 1.12556, 0.44", "-100.045, 123.784, 0.606585, 0.44", "-100.136, 124.123, 0.234361, 0.44", "-100.239, 124.772, -0.342153, 0.44", "-100.306, 125.828, -0.990065, 0.44", "-100.313, 127.095, -1.49525, 0.37", "-100.315, 128.312, -1.79718, 0.37", "-100.395, 129.376, -2.06683, 0.37", "-100.59, 130.728, -2.41983, 0.37", "-100.842, 131.909, -2.73392, 0.52", "-101.075, 132.787, -2.96689, 0.66", "-101.541, 134.376, -3.45599, 0.59", "-101.968, 135.98, -3.9556, 0.52", "-102.173, 136.967, -4.21745, 0.52", "-102.302, 137.994, -4.4187, 0.52", "-102.334, 139.433, -4.52345, 0.88", "-102.317, 140.755, -4.46821, 1.33", "-102.307, 142.327, -4.20367, 0.52", "-102.471, 144.295, -3.64813, 0.44", "-102.711, 145.253, -3.27407, 0.88", "-103.148, 146.349, -2.77225, 1.11", "-103.807, 147.679, -2.13254, 0.44", "-104.363, 148.743, -1.65896, 0.29", "-104.861, 149.697, -1.34174, 0.29", "-105.161, 150.386, -1.2409, 0.29", "-105.547, 151.732, -1.20133, 0.66", "-105.744, 152.857, -1.26411, 0.66", "-105.81, 153.912, -1.35126, 0.66", "-105.813, 155.055, -1.45939, 0.66", "-105.821, 156.013, -1.53501, 0.66", "-105.869, 157.289, -1.6051, 0.59", "-105.968, 158.696, -1.63408, 0.44", "-106.06, 159.559, -1.6334, 0.44", "-106.259, 161.022, -1.6208, 0.37", "-106.46, 162.404, -1.62142, 0.37", "-106.604, 163.428, -1.6276, 0.74", "-106.738, 164.365, -1.65273, 1.18", "-106.924, 165.564, -1.70967, 0.81", "-107.142, 166.601, -1.76584, 0.37", "-107.434, 167.573, -1.81698, 0.29", "-107.929, 168.754, -1.87896, 0.52", "-108.289, 169.285, -1.89932, 0.66", "-108.688, 169.661, -1.89928, 0.74", "-109.759, 170.315, -1.83445, 0.37", "-110.899, 170.8, -1.75025, 0.29", "-111.973, 171.1, -1.68573, 0.29", "-113.299, 171.308, -1.65002, 0.29", "-114.323, 171.38, -1.64722, 0.29", "-115.347, 171.382, -1.6639, 0.29", "-116.958, 171.275, -1.71856, 0.29", "-118.174, 171.133, -1.74198, 0.29", "-119.326, 170.974, -1.72461, 0.44", "-120.183, 170.838, -1.70751, 0.22", "-120.687, 170.744, -1.69454, 0.44", "-121.172, 170.624, -1.66819, 0.44", "-122.19, 170.292, -1.54069, 0.37", "-123.488, 169.98, -1.23242, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "6.38817, -254.959, 37.7688, 0.44", "5.90919, -256.303, 37.855, 0.44", "5.63045, -257.084, 37.9052, 0.44", "5.23368, -258.197, 37.9767, 0.52", "5.03793, -258.746, 38.012, 0.66", "4.78502, -259.455, 38.0575, 0.66", "4.51077, -260.224, 38.1069, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "6.38817, -254.959, 37.7688, 0.22", "7.64128, -255.541, 37.4262, 0.22", "9.30716, -256.313, 36.9708, 0.22", "17.5808, -261.455, 33.2707, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-12.3906, 167.856, -67.0534, 0.22", "-12.8034, 168.699, -65.8634, 0.22", "-13.0713, 169.245, -65.0911, 0.37", "-13.2502, 169.611, -64.5751, 0.44", "-13.4962, 170.113, -63.8661, 0.22", "-13.8255, 170.785, -62.9165, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-12.3906, 167.856, -67.0534, 0.29", "-11.963, 169.444, -66.3265, 0.29", "-11.5978, 170.799, -65.7059, 0.22", "-11.3774, 171.617, -65.3312, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-84.3819, 108.72, -94.602, 0.66", "-86.867, 109.12, -94.736, 0.66", "-88.0129, 109.477, -94.796, 0.44", "-89.0767, 109.942, -94.8474, 0.44", "-90.0491, 110.429, -94.9053, 0.44", "-91.1876, 111.083, -94.9626, 0.37", "-92.2348, 111.768, -95.0034, 0.37", "-93.5173, 112.841, -95.1129, 0.37", "-94.8934, 114.261, -95.1703, 0.29", "-95.6841, 115.21, -95.1467, 0.29", "-96.4882, 116.275, -95.0361, 0.66", "-97.0503, 117.08, -94.8863, 0.66", "-97.4271, 117.651, -94.747, 0.66", "-98.0999, 118.642, -94.4957, 0.37", "-98.9512, 119.79, -94.1765, 0.22", "-100.081, 121.047, -93.8456, 0.66", "-100.833, 121.673, -93.7263, 0.81", "-101.617, 122.136, -93.7144, 0.52", "-102.77, 122.644, -93.826, 0.74", "-103.622, 122.945, -93.9896, 0.74", "-104.796, 123.313, -94.3013, 0.29", "-106.083, 123.695, -94.6545, 0.29", "-108.418, 124.432, -95.2669, 0.29", "-110.119, 125.059, -95.6505, 0.29", "-111.101, 125.499, -95.8556, 0.52", "-111.588, 125.76, -95.9508, 0.52", "-113.139, 126.774, -96.2489, 0.37", "-114.021, 127.442, -96.4453, 0.37", "-115.09, 128.339, -96.7358, 0.37", "-116.21, 129.353, -97.0597, 0.44", "-116.947, 130.033, -97.3026, 0.29", "-117.917, 130.934, -97.7104, 0.29", "-118.836, 131.82, -98.274, 0.81", "-119.417, 132.344, -98.684, 0.96" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-84.3819, 108.72, -94.602, 0.22", "-85.1159, 107.982, -94.6793, 0.22", "-85.9072, 106.962, -94.7493, 0.22", "-87.039, 105.503, -94.8495, 0.22", "-87.2836, 105.188, -94.8712, 0.81", "-87.7396, 104.6, -94.9115, 0.81", "-88.6296, 103.453, -94.9903, 0.29", "-89.2548, 102.472, -95.0343, 0.29" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "17.7718, 77.8298, 153.485, 0.44", "17.0144, 77.5274, 161.879, 0.44", "17.6714, 77.2466, 170.284, 0.44" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "17.7718, 77.8298, 153.485, 0.22", "15.7427, 78.1983, 160.57, 0.44", "14.4148, 76.8147, 167.71, 0.44" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "68.1773, 88.1097, 112.331, 0.44", "72.8008, 93.0559, 121.191, 0.44", "77.9724, 99.2897, 128.906, 0.44" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "68.1773, 88.1097, 112.331, 0.22", "72.9961, 92.4171, 117.684, 0.44", "78.0659, 97.3985, 122.188, 0.44" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.9084, 84.4318, 28.1565, 0.37", "-12.1277, 84.6903, 28.2346, 0.37", "-12.683, 84.8117, 28.3038, 0.37", "-13.4165, 84.9908, 28.3153, 0.29", "-14.0251, 85.193, 28.2948, 0.29", "-14.3327, 85.3248, 28.2729, 0.29", "-14.7645, 85.5475, 28.2269, 0.29", "-15.2763, 85.8636, 28.1491, 0.44", "-16.1525, 86.51, 27.9299, 0.59", "-16.6958, 87.009, 27.7239, 0.74", "-17.054, 87.3973, 27.5393, 0.88", "-17.3049, 87.7024, 27.3757, 0.88", "-17.7045, 88.2692, 27.0325, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-10.9084, 84.4318, 28.1565, 0.22", "-12.1397, 83.9443, 28.029, 0.22", "-12.8382, 83.771, 27.8851, 0.22", "-13.9537, 83.5926, 27.5689, 0.22", "-14.74, 83.4274, 27.2588, 0.22", "-15.3206, 83.246, 26.9989, 0.22", "-16.0002, 83.0336, 26.6946, 0.22", "-17.2361, 82.6737, 26.048, 0.22", "-18.1442, 82.4139, 25.4855, 0.22", "-19.3342, 82.0849, 24.5814, 0.22", "-20.4095, 81.681, 23.6256, 0.22", "-31.3786, 78.394, 21.5933, 0.22", "-42.0182, 73.8549, 20.2523, 0.22", "-52.3235, 68.4445, 19.5719, 0.22", "-62.6012, 63.1253, 20.9668, 0.22", "-72.3657, 56.7167, 20.9467, 0.22", "-81.1552, 48.9852, 21.3973, 0.22", "-89.1233, 40.3999, 22.2223, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-75.5988, 141.098, -40.0988, 0.22", "-74.6532, 139.758, -40.3947, 0.22", "-74.0174, 138.857, -40.5936, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-75.5988, 141.098, -40.0988, 0.52", "-74.4463, 141.984, -40.0606, 0.52", "-73.608, 142.629, -40.0329, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-127.528, 116.17, 23.0289, 0.29", "-129.205, 117.637, 23.8429, 0.29", "-129.691, 117.958, 24.0687, 0.29", "-130.531, 118.378, 24.4184, 0.22", "-131.281, 118.705, 24.7107, 0.22", "-132.511, 119.232, 25.1772, 0.22", "-133.002, 119.453, 25.361, 0.22", "-134.093, 119.864, 25.6282, 0.22", "-134.831, 120.1, 25.7921, 0.22", "-135.623, 120.294, 25.9422, 0.29", "-136.096, 120.367, 26.0124, 0.29", "-136.722, 120.381, 26.0591, 0.29", "-137.839, 120.353, 26.0723, 0.29", "-139.252, 120.276, 26.0291, 0.29", "-140.404, 120.142, 25.9784, 0.29", "-141.378, 119.947, 25.9194, 0.22", "-142.841, 119.557, 25.8156, 0.22", "-143.608, 119.328, 25.7579, 0.37", "-144.627, 119.034, 25.6993, 0.37", "-145.418, 118.843, 25.6835, 0.37", "-146.287, 118.698, 25.627, 0.37", "-147.122, 118.633, 25.5245, 0.29", "-148.198, 118.63, 25.3238, 0.22", "-149.267, 118.701, 25.0644, 0.22", "-150.206, 118.853, 24.7754, 0.22", "-151.987, 119.247, 24.1627, 0.22", "-152.606, 119.381, 23.9286, 0.22", "-153.501, 119.508, 23.5451, 0.22", "-154.6, 119.518, 23.021, 0.22", "-155.467, 119.405, 22.5773, 0.22", "-157.074, 119.109, 21.7818, 0.22", "-158.254, 118.785, 21.2901, 0.22", "-159.419, 118.337, 20.7871, 0.22", "-160.295, 117.855, 20.3572, 0.37", "-160.725, 117.514, 20.1184, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-127.528, 116.17, 23.0289, 0.22", "-129.053, 115.703, 24.0913, 0.22", "-130.122, 115.352, 24.6749, 0.22", "-131.117, 114.987, 25.0976, 0.22", "-131.722, 114.762, 25.2951, 0.22", "-132.755, 114.39, 25.5734, 0.22", "-133.515, 114.117, 25.7783, 0.22", "-134.557, 113.717, 25.9276, 0.22", "-135.606, 113.355, 26.0104, 0.22", "-136.841, 112.96, 26.069, 0.22", "-137.499, 112.732, 26.0693, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.51077, -260.224, 38.1069, 0.37", "4.95569, -262.112, 38.3015, 0.37", "5.25916, -263.232, 38.4479, 0.37", "5.45816, -263.967, 38.5439, 0.52", "5.5833, -264.429, 38.6043, 0.52", "5.76417, -265.096, 38.6916, 0.59", "6.03132, -266.082, 38.8205, 0.96", "6.12563, -266.396, 38.7955, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.51077, -260.224, 38.1069, 0.22", "5.02956, -260.778, 37.8218, 0.22", "5.7227, -261.519, 37.4408, 0.29", "6.14017, -261.965, 37.2114, 0.29", "6.61868, -262.476, 36.9484, 0.29", "7.12578, -263.018, 36.6697, 0.37", "10.6432, -269.639, 33.3066, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-119.417, 132.344, -98.684, 0.29", "-119.946, 132.494, -100.507, 0.29", "-120.7, 132.802, -102.595, 0.29", "-121.317, 133.154, -104.154, 0.59", "-121.898, 133.536, -105.641, 0.44", "-122.114, 133.812, -106.481, 0.44", "-122.216, 134.156, -107.483, 0.37", "-122.18, 134.598, -108.65, 0.22", "-122.085, 135.082, -109.71, 0.81", "-121.859, 136.024, -111.551, 1.03", "-121.345, 137.833, -115.048, 1.03", "-120.596, 140.002, -119.343, 0.81", "-119.818, 141.834, -123.077, 0.29", "-119.504, 142.472, -124.415, 1.33", "-119.354, 142.767, -125.022, 1.55" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-119.417, 132.344, -98.684, 0.29", "-120.181, 131.378, -99.2747, 0.29", "-120.675, 130.836, -99.5669, 0.29", "-121.618, 129.883, -99.9474, 0.59", "-121.926, 129.583, -100.008, 0.59", "-122.741, 128.749, -100.077, 0.22", "-123.708, 127.699, -100.018, 0.22", "-124.232, 127.081, -99.8269, 0.22", "-125.037, 126.001, -99.3607, 0.22", "-125.949, 124.644, -98.6752, 0.66", "-126.373, 123.939, -98.3182, 0.96", "-127.044, 122.711, -97.7004, 0.96", "-127.803, 121.216, -97.0051, 0.22", "-128.214, 120.323, -96.5819, 0.22", "-128.422, 119.816, -96.3545, 0.52", "-128.735, 119.002, -96.0563, 0.22", "-129.007, 118.411, -95.8981, 0.22", "-129.594, 117.406, -95.9445, 0.52" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-89.2548, 102.472, -95.0343, 0.37", "-88.6622, 101.058, -93.8915, 0.37", "-88.289, 100.041, -93.1019, 0.52", "-87.7767, 98.549, -91.9722, 0.44", "-87.3512, 97.2793, -91.0489, 0.66", "-86.8664, 95.8775, -90.0065, 0.29", "-86.4756, 94.6755, -89.0745, 0.29", "-86.1433, 93.2528, -87.9254, 0.44", "-86.0307, 92.4664, -87.2808, 0.44", "-85.9825, 91.3482, -86.3388, 0.66", "-86.069, 89.46, -84.7369, 0.37", "-86.4139, 87.591, -83.0729, 0.37", "-86.9304, 86.042, -81.6503, 0.37", "-87.4188, 85.1143, -80.8555, 0.29", "-87.815, 84.5754, -80.4261, 0.74", "-88.6135, 83.7278, -79.8352, 0.22", "-89.7156, 82.718, -79.2742, 0.22", "-90.2688, 82.2384, -79.057, 0.22", "-91.8947, 80.7905, -78.4707, 0.22", "-93.0075, 79.7528, -78.0558, 0.22", "-94.172, 78.6731, -77.6164, 0.22", "-94.9864, 77.9441, -77.3143, 0.44", "-95.4502, 77.4772, -77.1345, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-89.2548, 102.472, -95.0343, 0.81", "-90.7006, 101.804, -95.7642, 0.81", "-91.2417, 101.525, -96.0065, 0.81", "-91.9044, 101.202, -96.3302, 0.66", "-92.8358, 100.773, -96.7818, 0.29", "-93.4399, 100.53, -97.0645, 0.37", "-94.0954, 100.293, -97.3614, 0.37", "-94.6443, 100.101, -97.5755, 0.29", "-95.7054, 99.6907, -98.0032, 0.44", "-96.4194, 99.4066, -98.3005, 0.59", "-97.0759, 99.1239, -98.5805, 0.29", "-97.9113, 98.7308, -98.943, 0.59", "-98.5979, 98.3589, -99.2505, 0.29", "-99.7166, 97.6527, -99.7563, 0.29", "-100.059, 97.4029, -99.9059, 0.22", "-101.42, 96.3124, -100.539, 0.22", "-101.585, 96.1657, -100.619, 0.44", "-101.916, 95.8541, -100.786, 0.44", "-102.576, 95.2266, -101.126, 0.22", "-103.095, 94.7214, -101.387, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "17.6714, 77.2466, 170.284, 0.44", "15.07, 76.6564, 176.373, 0.44", "13.4738, 75.162, 182.645, 0.44", "12.4938, 74.4494, 189.176, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "17.6714, 77.2466, 170.284, 0.22", "19.321, 75.983, 181.409, 0.44", "21.5934, 76.2837, 192.483, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "14.4148, 76.8147, 167.71, 0.44", "9.53566, 75.7865, 172.007, 0.44", "4.26904, 75.783, 175.953, 0.44", "-0.745704, 75.9099, 180.213, 0.44", "-5.15361, 75.4757, 185.08, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "14.4148, 76.8147, 167.71, 0.22", "18.0033, 74.7997, 177.633, 0.44", "20.2365, 70.3198, 187.185, 0.44", "23.845, 66.4589, 196.565, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "77.9724, 99.2897, 128.906, 0.44", "81.7732, 105.315, 136.881, 0.44", "85.3093, 112.848, 143.664, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "77.9724, 99.2897, 128.906, 0.22", "82.9441, 103.107, 135.511, 0.44", "86.9598, 107.28, 142.538, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "78.0659, 97.3985, 122.188, 0.44", "81.6548, 104.656, 125.659, 0.44", "84.0421, 112.799, 128.145, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "78.0659, 97.3985, 122.188, 0.22", "84.1798, 95.6238, 126.347, 0.44", "89.8586, 92.8388, 130.598, 0.44", "95.6879, 91.72, 135.34, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-17.7045, 88.2692, 27.0325, 0.37", "-18.4046, 88.8459, 26.8235, 0.37", "-19.2082, 89.4816, 26.6238, 0.37", "-19.812, 89.8758, 26.4986, 0.37", "-20.3758, 90.1664, 26.3641, 0.37", "-20.8514, 90.3871, 26.2107, 0.52", "-21.1985, 90.5474, 26.0802, 0.52", "-21.6451, 90.7583, 25.8763, 0.29", "-22.3089, 91.0294, 25.4718, 0.29", "-22.9384, 91.219, 24.9825, 0.29", "-23.6335, 91.356, 24.3577, 0.66", "-23.895, 91.3906, 24.104, 0.81", "-24.4437, 91.4522, 23.5643, 0.59", "-25.345, 91.5861, 22.7305, 0.29", "-25.9458, 91.7259, 22.215, 0.29", "-26.5219, 91.9167, 21.7672, 0.74", "-27.0263, 92.1344, 21.3884, 0.74", "-27.4182, 92.3433, 21.0868, 0.74", "-28.0671, 92.7535, 20.5963, 0.44", "-28.5484, 93.1258, 20.2571, 0.44", "-29.3345, 93.8186, 19.7486, 0.52", "-29.9056, 94.3756, 19.4022, 0.52", "-30.703, 95.2566, 18.8444, 0.44", "-31.0168, 95.6518, 18.5477, 0.44", "-31.3988, 96.1888, 18.0881, 0.66", "-31.8275, 96.8172, 17.5275, 0.81", "-32.0897, 97.2284, 17.1641, 0.81", "-32.4433, 97.9778, 16.3072, 0.29", "-32.6258, 98.684, 15.4041, 0.29", "-32.708, 99.2935, 14.5884, 0.52", "-32.7181, 99.528, 14.2816, 0.74", "-32.7036, 100.033, 13.6042, 0.74", "-32.5249, 101.653, 11.3941, 0.66", "-32.4586, 101.988, 10.9281, 0.29", "-32.3197, 102.44, 10.2777, 0.29", "-32.0643, 103.083, 9.35471, 0.29", "-31.7714, 103.679, 8.43185, 0.29", "-31.4188, 104.246, 7.51164, 0.37", "-31.0432, 104.792, 6.64135, 0.52", "-30.5872, 105.383, 5.60604, 0.74", "-30.2888, 105.73, 4.95316, 0.59", "-29.4175, 106.658, 3.1179, 0.37", "-29.1675, 106.921, 2.61763, 0.37", "-28.8608, 107.243, 2.03738, 0.37", "-28.5756, 107.569, 1.4538, 0.37", "-28.1084, 108.142, 0.416894, 0.74", "-27.9167, 108.441, -0.112332, 0.74", "-27.6619, 109.125, -1.10984, 0.37", "-27.5803, 109.501, -1.61245, 0.37", "-27.4759, 110.819, -3.2526, 0.44", "-27.4883, 111.076, -3.53152, 0.66", "-27.5707, 111.571, -3.95901, 0.66", "-27.7416, 112.263, -4.46619, 0.44", "-27.8538, 112.647, -4.6934, 0.29", "-28.0624, 113.346, -5.05491, 0.29", "-28.2018, 113.836, -5.26906, 0.37", "-28.5601, 115.098, -5.88964, 0.52", "-28.8133, 116.019, -6.33985, 0.29", "-29.0821, 116.976, -6.81839, 0.74", "-29.2278, 117.475, -7.06216, 0.74", "-29.4482, 118.242, -7.41207, 0.74", "-29.939, 119.815, -8.07047, 0.22", "-30.2228, 120.608, -8.35593, 0.22", "-30.2937, 120.79, -8.41213, 0.74", "-30.4881, 121.243, -8.61977, 0.44", "-30.7074, 121.776, -8.91449, 0.29", "-31.0092, 122.616, -9.44285, 0.22", "-31.1501, 123.076, -9.76006, 0.44", "-31.2775, 123.603, -10.1651, 0.29", "-31.6659, 125.531, -11.6227, 0.88", "-31.7496, 125.989, -11.9612, 0.88", "-31.8253, 126.384, -12.2362, 0.22", "-31.9013, 126.922, -12.5781, 0.22", "-31.9455, 127.289, -12.767, 0.22", "-32.0424, 127.899, -12.9944, 0.22", "-32.2032, 128.573, -13.1438, 0.22", "-32.3382, 128.998, -13.2981, 0.22", "-32.6418, 129.768, -13.7863, 0.22", "-32.8763, 130.323, -14.208, 0.22", "-33.069, 130.801, -14.578, 0.22", "-33.2769, 131.373, -15.0036, 0.22", "-33.5908, 132.347, -15.6701, 0.66", "-34.0538, 133.942, -16.6029, 0.88", "-34.3242, 134.944, -17.1078, 0.37", "-34.4953, 135.771, -17.5093, 0.37", "-34.6084, 136.555, -17.8788, 0.37", "-34.6573, 137.468, -18.3311, 0.29", "-34.6048, 138.892, -19.0421, 0.29", "-34.5095, 139.652, -19.4411, 0.29", "-34.2389, 140.877, -20.2888, 0.29", "-34.043, 141.473, -20.8671, 0.74", "-33.5996, 142.474, -22.2043, 0.37", "-33.4633, 142.745, -22.6564, 0.37", "-33.3009, 143.019, -23.1866, 0.37", "-32.8174, 143.768, -24.778, 0.88", "-32.234, 144.63, -26.7989, 0.59", "-31.7579, 145.29, -28.4964, 0.37", "-31.5567, 145.609, -29.3801, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-17.7045, 88.2692, 27.0325, 0.29", "-18.5098, 89.4347, 27.3295, 0.29", "-19.0827, 90.2296, 27.4821, 0.29", "-19.7448, 91.1302, 27.6198, 0.29", "-20.3428, 91.9459, 27.6872, 0.22", "-21.0115, 92.8869, 27.7252, 0.22", "-21.2512, 93.2439, 27.7301, 0.22", "-21.7595, 93.994, 27.681, 0.74", "-21.9859, 94.3142, 27.6573, 0.74", "-22.6237, 95.1925, 27.5962, 0.44", "-22.967, 95.6824, 27.5611, 0.59", "-23.3586, 96.2934, 27.5282, 0.59", "-24.0766, 97.4314, 27.4999, 0.29", "-24.6839, 98.4462, 27.5104, 0.29", "-25.0445, 99.0533, 27.5231, 0.29", "-25.5822, 99.8912, 27.5542, 0.29", "-26.2763, 100.897, 27.556, 0.81", "-26.4846, 101.188, 27.5343, 0.81", "-27.1085, 102.126, 27.387, 0.29", "-27.4674, 102.718, 27.2742, 0.29", "-27.9552, 103.512, 27.0614, 0.29", "-28.3037, 104.008, 26.8603, 0.29", "-28.7614, 104.598, 26.562, 0.29", "-29.3334, 105.3, 26.1792, 0.74", "-30.316, 106.456, 25.5306, 0.22", "-31.2155, 107.509, 24.965, 0.22", "-32.149, 108.614, 24.3856, 0.37", "-32.5395, 109.043, 24.1697, 0.37", "-33.0674, 109.603, 23.9054, 0.22", "-33.8634, 110.475, 23.522, 0.22", "-34.5743, 111.305, 23.2237, 0.52", "-35.4563, 112.387, 22.9313, 0.29", "-35.8164, 112.853, 22.8283, 0.29", "-36.3758, 113.561, 22.6312, 0.29", "-37.2855, 114.646, 22.2901, 0.29", "-37.9293, 115.363, 22.0371, 0.29", "-38.6585, 116.117, 21.7501, 0.29", "-39.3804, 116.79, 21.492, 0.29", "-40.4514, 117.721, 21.1477, 0.29", "-41.4632, 118.487, 20.8421, 0.29", "-41.8491, 118.756, 20.7225, 0.66", "-42.1123, 118.949, 20.6324, 0.66", "-42.8081, 119.503, 20.3873, 0.22", "-43.5764, 120.18, 20.1012, 0.22", "-44.4117, 120.984, 19.7932, 0.29", "-44.9949, 121.578, 19.5627, 0.29", "-45.8874, 122.534, 19.1735, 0.52", "-46.2285, 122.919, 19.0118, 0.52", "-46.8905, 123.694, 18.6936, 0.29", "-47.659, 124.602, 18.3639, 0.29", "-48.3671, 125.456, 18.1601, 0.29", "-49.0695, 126.316, 18.043, 0.29", "-49.5727, 126.946, 18.0115, 0.29", "-50.2485, 127.79, 17.9814, 0.29", "-50.9166, 128.652, 17.9277, 0.29", "-51.558, 129.55, 17.8608, 0.37", "-52.034, 130.273, 17.794, 0.37", "-52.6452, 131.201, 17.6029, 0.37", "-53.2442, 132.117, 17.3339, 0.29", "-53.9553, 133.211, 16.9212, 0.22", "-54.4098, 133.92, 16.6087, 0.44", "-55.1071, 135.065, 16.1016, 0.81", "-56.396, 137.271, 15.1704, 0.22", "-57.0449, 138.451, 14.7764, 0.22", "-57.4765, 139.352, 14.6029, 0.74", "-57.6803, 139.859, 14.5792, 0.74", "-58.1323, 141.354, 14.7083, 0.22", "-58.2881, 142.47, 14.9636, 0.22", "-58.2741, 144.071, 15.4587, 0.29", "-58.1608, 145.286, 15.7712, 0.29", "-58.0029, 146.334, 15.9776, 0.29", "-57.8127, 147.389, 16.1001, 0.29", "-57.4659, 149.083, 16.1882, 0.22", "-57.0391, 150.76, 16.192, 0.22", "-56.6752, 152.053, 16.0563, 0.22", "-56.4481, 152.811, 15.9251, 0.37", "-56.2013, 153.543, 15.7477, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-89.1233, 40.3999, 22.2223, 0.22", "-95.8713, 36.6406, 21.832, 0.22", "-102.742, 33.1587, 22.4676, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-89.1233, 40.3999, 22.2223, 0.22", "-99.6435, 34.6135, 20.3963, 0.22", "-110.238, 28.685, 20.0762, 0.22", "-121.603, 25.0701, 22.1654, 0.22", "-133.25, 23.5556, 25.0574, 0.22", "-144.31, 20.9134, 29.1897, 0.22", "-155.522, 17.053, 31.6446, 0.22", "-166.855, 12.8577, 32.4877, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "6.12563, -266.396, 38.7955, 0.22", "5.117, -266.468, 38.02, 0.22", "4.24334, -266.388, 37.3554, 0.22", "3.70308, -266.304, 36.9652, 0.22", "3.36221, -266.276, 36.7252, 0.22", "2.8419, -266.28, 36.3735, 0.22", "2.48529, -266.311, 36.146, 0.22", "2.06436, -266.372, 35.8868, 0.52", "1.22497, -266.507, 35.382, 0.22", "0.542215, -266.697, 34.9938, 0.22", "0.0646175, -266.893, 34.7436, 0.37", "-0.455019, -267.18, 34.4841, 0.37", "-1.12879, -267.634, 34.1371, 0.29", "-7.21917, -268.058, 29.0042, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.12563, -266.396, 38.7955, 0.96", "6.09461, -266.836, 38.9914, 0.96", "6.01011, -268.034, 39.5247, 0.59", "5.94093, -269.015, 39.9614, 0.59", "5.90112, -269.579, 40.2128, 0.59", "5.81331, -270.824, 40.7671, 0.52", "5.70285, -272.39, 41.4642, 0.74" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-119.354, 142.767, -125.022, 0.29", "-118.941, 143.978, -125.139, 0.29", "-118.691, 144.792, -125.232, 0.29", "-118.455, 145.934, -125.38, 0.74", "-118.333, 147.324, -125.55, 0.52", "-118.329, 148.027, -125.698, 0.29", "-118.371, 149.224, -126.006, 0.22", "-118.415, 149.691, -126.15, 0.22", "-118.595, 150.701, -126.521, 0.22", "-118.905, 151.818, -126.954, 0.74", "-119.529, 153.446, -127.581, 0.29", "-119.825, 154.086, -127.862, 0.29", "-120.201, 154.81, -128.197, 0.29", "-120.592, 155.531, -128.514, 0.29", "-120.952, 156.2, -128.787, 0.74", "-121.391, 156.964, -129.089, 0.74", "-122.004, 157.94, -129.409, 0.37", "-122.595, 158.827, -129.706, 0.29", "-123.268, 159.822, -130.04, 0.29", "-123.81, 160.696, -130.3, 0.29" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-119.354, 142.767, -125.022, 0.22", "-118.179, 141.081, -125.252, 0.22", "-117.537, 140.015, -125.447, 0.22", "-116.992, 139.063, -125.653, 0.37", "-116.623, 138.428, -125.813, 0.37", "-116.034, 137.395, -126.095, 0.29", "-115.465, 136.347, -126.394, 0.29", "-114.92, 135.32, -126.7, 0.29", "-114.552, 134.567, -126.95, 0.66", "-114.017, 133.303, -127.408, 0.22", "-113.63, 132.367, -127.778, 0.22", "-113.395, 131.844, -127.999, 0.37" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "12.4938, 74.4494, 189.176, 0.44", "5.22717, 74.8591, 200.069, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "12.4938, 74.4494, 189.176, 0.22", "13.9508, 71.1003, 199.631, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "21.5934, 76.2837, 192.483, 0.44", "13.7403, 78.3055, 194.453, 0.44", "5.65756, 80.1866, 195.35, 0.44", "-2.44835, 82.1399, 195.001, 0.44", "-10.7899, 82.5124, 194.418, 0.44", "-19.1644, 82.5866, 194.629, 0.44", "-27.4754, 83.4876, 194.818, 0.44", "-35.645, 84.4924, 196.283, 0.44" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "21.5934, 76.2837, 192.483, 0.22", "26.9779, 76.3498, 202.645, 0.44", "32.5922, 77.6603, 212.598, 0.44" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-5.15361, 75.4757, 185.08, 0.44", "-6.41728, 62.9794, 183.514, 0.44", "-9.3513, 51.0422, 180.641, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-5.15361, 75.4757, 185.08, 0.22", "-7.54767, 82.5903, 189.032, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "23.845, 66.4589, 196.565, 0.44", "28.9235, 64.5249, 204.736, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "23.845, 66.4589, 196.565, 0.22", "26.7877, 62.2149, 207.447, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "85.3093, 112.848, 143.664, 0.44", "92.9539, 121.829, 149.529, 0.44" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "85.3093, 112.848, 143.664, 0.22", "86.4365, 119.484, 154.219, 0.44" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "86.9598, 107.28, 142.538, 0.44", "89.635, 109.753, 147.314, 0.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "86.9598, 107.28, 142.538, 0.22", "93.494, 112.638, 150.011, 0.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "84.0421, 112.799, 128.145, 0.44", "93.4804, 113.587, 124.546, 0.44", "103.424, 114.726, 122.961, 0.44", "113.344, 116.545, 121.868, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "84.0421, 112.799, 128.145, 0.22", "79.8413, 118.091, 134.37, 0.44", "74.2763, 122.899, 139.858, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "95.6879, 91.72, 135.34, 0.44", "100.8, 89.1151, 141.885, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "95.6879, 91.72, 135.34, 0.22", "107.623, 92.7444, 132.039, 0.44", "119.598, 94.4959, 129.21, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.70285, -272.39, 41.4642, 0.52", "5.51647, -273.618, 41.5156, 0.52", "5.41313, -274.417, 41.4429, 0.74", "5.40949, -274.993, 41.4328, 0.81", "5.46484, -275.854, 41.4625, 1.03", "5.52892, -276.725, 41.5629, 0.74", "5.59203, -277.701, 41.7508, 0.44", "5.70894, -279.047, 42.0018, 0.29", "5.96569, -281.038, 42.4968, 0.29", "6.07248, -281.65, 42.6969, 0.29", "6.32719, -282.701, 43.1706, 1.47", "6.52241, -283.289, 43.5526, 1.47" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.70285, -272.39, 41.4642, 0.37", "6.44039, -272.87, 41.0621, 0.37", "7.13017, -273.319, 40.686, 0.37", "7.80779, -273.76, 40.3166, 0.29", "8.95741, -274.507, 39.6898, 0.29", "9.53351, -274.882, 39.3757, 0.29", "10.2981, -275.379, 38.9588, 0.29", "17.9048, -280.383, 36.5442, 0.29" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.52241, -283.289, 43.5526, 1.03", "6.37318, -283.822, 43.5857, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.52241, -283.289, 43.5526, 0.22", "5.44957, -282.249, 43.663, 0.22", "4.62681, -281.488, 43.6663, 0.22", "4.00984, -280.895, 43.6173, 0.22", "3.46071, -280.329, 43.5413, 0.22", "2.74541, -279.591, 43.4422, 0.22", "2.0834, -278.909, 43.3506, 0.22", "1.50295, -278.367, 43.2077, 0.22", "0.971203, -277.874, 43.0069, 0.22", "0.581616, -277.485, 42.8073, 0.22", "-6.71722, -270.86, 42.2122, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.37318, -283.822, 43.5857, 0.96", "6.42318, -285.368, 43.3998, 0.96", "6.45246, -286.273, 43.291, 0.96", "6.51022, -288.059, 43.0762, 1.33", "6.58952, -290.51, 42.7814, 0.22", "6.63751, -291.994, 42.603, 0.22", "6.69951, -293.91, 42.3725, 0.22", "8.94246, -307.731, 42.2982, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.37318, -283.822, 43.5857, 0.22", "4.91818, -283.629, 43.188, 0.22", "3.73782, -283.472, 42.8653, 0.22", "2.91043, -283.363, 42.639, 0.22", "1.33453, -283.153, 42.2082, 0.22", "0.973096, -283.105, 42.1094, 0.22", "-8.56946, -282.72, 38.5578, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_86", "dend_23", "dend_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_86", "dend_23", "dend_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_86", "dend_23", "dend_0", "axon_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "axon_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_69", "dend_69", "dend_69", "dend_69", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_79", "dend_79", "dend_72", "dend_72", "dend_61", "dend_61", "dend_54", "dend_54", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_76", "dend_76", "dend_76", "dend_76", "dend_73", "dend_73", "dend_73", "dend_65", "dend_65", "dend_62", "dend_62", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_85", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_78", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_57", "dend_56", "dend_56", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BTC_0a7f6392e3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_86, id: dend_86, parent: soma_0
create dend_86
public dend_86
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_108, id: dend_108, parent: dend_86
create dend_108
public dend_108
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_39, id: dend_39, parent: dend_23
create dend_39
public dend_39
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_0
create dend_18
public dend_18
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_105, id: dend_105, parent: dend_87
create dend_105
public dend_105
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_102, id: dend_102, parent: dend_88
create dend_102
public dend_102
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_69, id: dend_69, parent: dend_51
create dend_69
public dend_69
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_99, id: dend_99, parent: dend_89
create dend_99
public dend_99
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_42
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_94, id: dend_94, parent: dend_90
create dend_94
public dend_94
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_79, id: dend_79, parent: dend_71
create dend_79
public dend_79
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_76, id: dend_76, parent: dend_72
create dend_76
public dend_76
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_86, dend_23, dend_0, axon_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, axon_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_111
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_79, dend_79, dend_72, dend_72, dend_61, dend_61, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_80, dend_80, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_65, dend_65, dend_62, dend_62, dend_58, dend_58, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_85, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_78, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_60, dend_60, dend_59, dend_59, dend_57, dend_56, dend_56, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_86(0), soma_0(0.450001137941537)
    connect dend_23(0), soma_0(0.450001137941537)
    connect dend_0(0), soma_0(0.450001137941537)
    connect axon_0(0), soma_0(1.0)
    connect dend_108(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_39(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_105(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_102(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_69(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_99(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_94(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_79(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_76(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.88047, -10.716, -1.11504, 1.92098 ) }
    soma_0 { pt3dadd( -1.70946, -9.6452, -1.01124, 2.92873 ) }
    soma_0 { pt3dadd( -1.53845, -8.57443, -0.907436, 4.88462 ) }
    soma_0 { pt3dadd( -1.36745, -7.50365, -0.803634, 6.96834 ) }
    soma_0 { pt3dadd( -1.19644, -6.43288, -0.699833, 8.71039 ) }
    soma_0 { pt3dadd( -1.02543, -5.3621, -0.596031, 9.75846 ) }
    soma_0 { pt3dadd( -0.854423, -4.29132, -0.492229, 10.7595 ) }
    soma_0 { pt3dadd( -0.683416, -3.22055, -0.388427, 11.4328 ) }
    soma_0 { pt3dadd( -0.512408, -2.14977, -0.284625, 11.7309 ) }
    soma_0 { pt3dadd( -0.341401, -1.079, -0.180824, 11.6952 ) }
    soma_0 { pt3dadd( -0.170393, -0.00821902, -0.0770218, 11.6235 ) }
    soma_0 { pt3dadd( 6.14341E-4, 1.06256, 0.0267799, 11.5198 ) }
    soma_0 { pt3dadd( 0.171622, 2.13333, 0.130582, 11.2257 ) }
    soma_0 { pt3dadd( 0.342629, 3.20411, 0.234383, 10.7284 ) }
    soma_0 { pt3dadd( 0.513637, 4.27489, 0.338185, 9.45222 ) }
    soma_0 { pt3dadd( 0.684644, 5.34566, 0.441987, 7.57235 ) }
    soma_0 { pt3dadd( 0.855652, 6.41644, 0.545789, 5.71519 ) }
    soma_0 { pt3dadd( 1.02666, 7.48721, 0.649591, 4.19151 ) }
    soma_0 { pt3dadd( 1.19767, 8.55799, 0.753392, 3.44771 ) }
    soma_0 { pt3dadd( 1.36867, 9.62877, 0.857194, 2.95035 ) }
    soma_0 { pt3dadd( 1.53968, 10.6995, 0.960996, 1.95307 ) }
    // Section: dend_86, id: dend_86, parent: soma_0 (entry count 21/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 1.39356, 0.682199, -10.5931, 2.8 ) }
    dend_86 { pt3dadd( 1.39356, 0.682199, -10.5931, 2.8 ) }
    dend_86 { pt3dadd( 4.65809, 0.95143, -16.1693, 2.28 ) }
    dend_86 { pt3dadd( 5.2201, 0.971177, -17.1201, 2.28 ) }
    dend_86 { pt3dadd( 5.89662, 0.919654, -18.4699, 2.58 ) }
    dend_86 { pt3dadd( 7.07162, 0.773271, -21.2303, 2.8 ) }
    dend_86 { pt3dadd( 8.13073, 0.61703, -24.2435, 2.58 ) }
    dend_86 { pt3dadd( 8.46405, 0.558077, -25.5095, 2.43 ) }
    dend_86 { pt3dadd( 9.15174, 0.356022, -28.8828, 2.43 ) }
    dend_86 { pt3dadd( 10.027, -0.103678, -34.7288, 1.77 ) }
    dend_86 { pt3dadd( 10.1771, -0.288312, -36.7196, 1.77 ) }
    dend_86 { pt3dadd( 10.1235, -0.544821, -39.0725, 1.84 ) }
    dend_86 { pt3dadd( 9.8788, -0.737072, -40.8517, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.483558, 10.5939, 3.03697, 2.06 ) }
    dend_23 { pt3dadd( 0.483558, 10.5939, 3.03697, 2.06 ) }
    dend_23 { pt3dadd( 0.234476, 11.3241, 3.51722, 2.06 ) }
    dend_23 { pt3dadd( -0.266518, 13.0797, 4.62884, 2.06 ) }
    dend_23 { pt3dadd( -0.469242, 13.9986, 5.14005, 2.06 ) }
    dend_23 { pt3dadd( -0.665237, 15.1662, 5.74293, 2.06 ) }
    dend_23 { pt3dadd( -0.793793, 16.0631, 6.19402, 2.28 ) }
    dend_23 { pt3dadd( -0.956684, 17.5367, 6.87635, 2.5 ) }
    dend_23 { pt3dadd( -1.04287, 19.0023, 7.50739, 2.65 ) }
    dend_23 { pt3dadd( -1.06895, 20.7232, 8.14653, 2.73 ) }
    dend_23 { pt3dadd( -1.01876, 21.8809, 8.5884, 2.95 ) }
    dend_23 { pt3dadd( -0.913993, 22.8379, 8.96371, 3.02 ) }
    dend_23 { pt3dadd( -0.635334, 24.2153, 9.58658, 2.43 ) }
    dend_23 { pt3dadd( -0.197472, 25.5477, 10.3062, 1.92 ) }
    dend_23 { pt3dadd( 0.0652058, 26.1168, 10.7129, 1.77 ) }
    dend_23 { pt3dadd( 0.57483, 27.0628, 11.5001, 1.77 ) }
    dend_23 { pt3dadd( 1.02334, 27.867, 12.2201, 1.92 ) }
    dend_23 { pt3dadd( 1.86964, 29.424, 13.6744, 1.69 ) }
    dend_23 { pt3dadd( 2.51311, 30.718, 14.9112, 1.92 ) }
    dend_23 { pt3dadd( 3.23193, 32.4508, 16.5705, 1.62 ) }
    dend_23 { pt3dadd( 3.48763, 33.2659, 17.3124, 1.62 ) }
    dend_23 { pt3dadd( 3.66557, 34.1639, 18.0542, 1.62 ) }
    dend_23 { pt3dadd( 3.761, 35.3103, 18.9243, 1.77 ) }
    dend_23 { pt3dadd( 3.76663, 36.2656, 19.596, 2.06 ) }
    dend_23 { pt3dadd( 3.76148, 37.3419, 20.3335, 2.06 ) }
    dend_23 { pt3dadd( 3.80454, 38.225, 20.9343, 2.06 ) }
    dend_23 { pt3dadd( 3.87418, 39.0422, 21.5215, 2.21 ) }
    dend_23 { pt3dadd( 4.11284, 40.7848, 22.7997, 1.92 ) }
    dend_23 { pt3dadd( 4.38524, 42.1919, 23.8723, 1.77 ) }
    dend_23 { pt3dadd( 4.58601, 42.9939, 24.5108, 1.77 ) }
    dend_23 { pt3dadd( 4.86428, 43.9008, 25.2235, 1.99 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.95644, -10.3878, -0.843029, 1.84 ) }
    dend_0 { pt3dadd( -1.95644, -10.3878, -0.843029, 1.84 ) }
    dend_0 { pt3dadd( -2.08619, -11.3067, -0.758961, 1.4 ) }
    dend_0 { pt3dadd( -2.18488, -12.989, -0.61702, 1.03 ) }
    dend_0 { pt3dadd( -2.13195, -14.554, -0.448065, 0.96 ) }
    dend_0 { pt3dadd( -2.05378, -15.2365, -0.36551, 1.18 ) }
    dend_0 { pt3dadd( -1.90776, -16.0131, -0.266007, 1.25 ) }
    dend_0 { pt3dadd( -1.65173, -16.7887, -0.159785, 1.25 ) }
    dend_0 { pt3dadd( -1.23654, -17.5559, -0.0471926, 1.25 ) }
    dend_0 { pt3dadd( -0.53277, -18.429, 0.0845777, 1.69 ) }
    dend_0 { pt3dadd( -0.104365, -18.8776, 0.141032, 1.92 ) }
    dend_0 { pt3dadd( 0.312901, -19.3142, 0.215989, 1.92 ) }
    dend_0 { pt3dadd( 0.99991, -20.1058, 0.433077, 1.33 ) }
    dend_0 { pt3dadd( 1.42985, -20.7048, 0.64082, 1.03 ) }
    dend_0 { pt3dadd( 1.87322, -21.4908, 0.975744, 1.03 ) }
    dend_0 { pt3dadd( 2.2071, -22.2477, 1.31517, 1.4 ) }
    dend_0 { pt3dadd( 2.68816, -23.6272, 1.94037, 1.4 ) }
    dend_0 { pt3dadd( 3.10397, -25.2091, 2.6507, 1.4 ) }
    dend_0 { pt3dadd( 3.28994, -26.2307, 3.09159, 1.25 ) }
    dend_0 { pt3dadd( 3.43034, -27.5362, 3.61301, 0.66 ) }
    dend_0 { pt3dadd( 3.46648, -28.6661, 3.99746, 0.74 ) }
    dend_0 { pt3dadd( 3.44053, -29.8054, 4.27348, 1.03 ) }
    dend_0 { pt3dadd( 3.38945, -30.541, 4.33163, 1.25 ) }
    dend_0 { pt3dadd( 3.32465, -31.2054, 4.28656, 1.25 ) }
    dend_0 { pt3dadd( 3.22719, -31.9153, 4.15623, 1.25 ) }
    dend_0 { pt3dadd( 3.05478, -32.9093, 3.87448, 1.11 ) }
    dend_0 { pt3dadd( 2.81089, -34.0908, 3.49914, 1.11 ) }
    dend_0 { pt3dadd( 2.55589, -35.2748, 3.10426, 1.33 ) }
    dend_0 { pt3dadd( 2.3577, -36.2557, 2.77523, 1.33 ) }
    dend_0 { pt3dadd( 2.11524, -37.6356, 2.40278, 1.33 ) }
    dend_0 { pt3dadd( 1.95377, -38.8026, 2.14585, 0.88 ) }
    dend_0 { pt3dadd( 1.8563, -39.9259, 2.01518, 1.03 ) }
    dend_0 { pt3dadd( 1.81032, -41.5107, 2.06525, 0.66 ) }
    dend_0 { pt3dadd( 1.88518, -42.6087, 2.30388, 0.66 ) }
    dend_0 { pt3dadd( 2.27611, -44.3357, 3.10117, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 2.48767, -44.9541, 3.5021, 0.96 ) }
    dend_0 { pt3dadd( 3.07997, -46.4869, 4.64854, 1.18 ) }
    dend_0 { pt3dadd( 3.37421, -47.2496, 5.24116, 1.4 ) }
    dend_0 { pt3dadd( 3.51196, -47.6871, 5.56744, 1.4 ) }
    dend_0 { pt3dadd( 3.76542, -49.1034, 6.39767, 0.88 ) }
    dend_0 { pt3dadd( 3.77237, -50.3242, 6.85298, 0.88 ) }
    dend_0 { pt3dadd( 3.65798, -51.2896, 7.08919, 1.18 ) }
    dend_0 { pt3dadd( 3.45001, -52.3281, 7.21875, 1.03 ) }
    dend_0 { pt3dadd( 3.16334, -53.5085, 7.25923, 0.88 ) }
    dend_0 { pt3dadd( 2.84129, -54.6847, 7.22246, 0.88 ) }
    dend_0 { pt3dadd( 2.63363, -55.4181, 7.12925, 1.18 ) }
    dend_0 { pt3dadd( 2.44229, -56.306, 6.96656, 1.18 ) }
    dend_0 { pt3dadd( 2.37382, -57.0557, 6.80248, 1.18 ) }
    dend_0 { pt3dadd( 2.44014, -58.2595, 6.49693, 1.18 ) }
    dend_0 { pt3dadd( 2.56289, -58.9664, 6.28719, 1.18 ) }
    dend_0 { pt3dadd( 2.76752, -59.7752, 6.03465, 1.18 ) }
    dend_0 { pt3dadd( 3.14848, -61.0665, 5.64387, 0.74 ) }
    dend_0 { pt3dadd( 3.52169, -62.3349, 5.28756, 0.74 ) }
    dend_0 { pt3dadd( 3.85369, -63.6891, 4.95597, 1.03 ) }
    dend_0 { pt3dadd( 4.03076, -64.8032, 4.74357, 0.96 ) }
    dend_0 { pt3dadd( 4.07345, -65.5691, 4.63927, 0.88 ) }
    dend_0 { pt3dadd( 4.029, -66.494, 4.54182, 0.88 ) }
    dend_0 { pt3dadd( 3.87325, -67.5153, 4.46244, 0.96 ) }
    dend_0 { pt3dadd( 3.60333, -68.6801, 4.42438, 0.96 ) }
    dend_0 { pt3dadd( 3.26859, -69.9692, 4.47892, 0.96 ) }
    dend_0 { pt3dadd( 2.98762, -71.2577, 4.63192, 1.03 ) }
    dend_0 { pt3dadd( 2.86608, -72.1957, 4.82102, 0.81 ) }
    dend_0 { pt3dadd( 2.85097, -72.7819, 4.98191, 0.81 ) }
    dend_0 { pt3dadd( 2.8811, -73.5008, 5.21312, 0.81 ) }
    dend_0 { pt3dadd( 2.94362, -74.5598, 5.5798, 0.74 ) }
    dend_0 { pt3dadd( 2.94485, -75.6878, 5.97887, 0.66 ) }
    dend_0 { pt3dadd( 2.80838, -77.1468, 6.45772, 0.74 ) }
    dend_0 { pt3dadd( 2.63967, -78.0244, 6.71168, 0.74 ) }
    dend_0 { pt3dadd( 2.27878, -79.3157, 6.97641, 0.74 ) }
    dend_0 { pt3dadd( 1.89051, -80.3843, 7.10579, 0.66 ) }
    dend_0 { pt3dadd( 1.31177, -81.6619, 7.09192, 0.66 ) }
    dend_0 { pt3dadd( 0.790242, -82.6182, 6.97189, 0.66 ) }
    dend_0 { pt3dadd( 0.0503556, -83.7954, 6.6659, 0.81 ) }
    dend_0 { pt3dadd( -0.525084, -84.6402, 6.33252, 1.18 ) }
    dend_0 { pt3dadd( -0.822612, -85.0761, 6.10766, 1.4 ) }
    dend_0 { pt3dadd( -1.53376, -86.1936, 5.44502, 1.25 ) }
    dend_0 { pt3dadd( -1.80287, -86.6698, 5.1444, 0.96 ) }
    dend_0 { pt3dadd( -2.10137, -87.3228, 4.75446, 0.96 ) }
    dend_0 { pt3dadd( -2.39635, -88.4143, 4.2268, 0.66 ) }
    dend_0 { pt3dadd( -2.4495, -89.2342, 3.96818, 0.74 ) }
    dend_0 { pt3dadd( -2.39824, -90.0559, 3.81196, 0.81 ) }
    dend_0 { pt3dadd( -2.25679, -91.0848, 3.69305, 0.81 ) }
    dend_0 { pt3dadd( -2.01467, -92.4308, 3.58007, 0.81 ) }
    dend_0 { pt3dadd( -1.63866, -94.2411, 3.48509, 0.66 ) }
    dend_0 { pt3dadd( -1.21421, -96.176, 3.42433, 0.66 ) }
    dend_0 { pt3dadd( -0.856321, -98.0285, 3.37246, 0.74 ) }
    dend_0 { pt3dadd( -0.717565, -99.1139, 3.35295, 0.81 ) }
    dend_0 { pt3dadd( -0.671157, -100.413, 3.34599, 0.88 ) }
    dend_0 { pt3dadd( -0.726014, -101.041, 3.36716, 0.96 ) }
    dend_0 { pt3dadd( -0.906588, -101.795, 3.43329, 0.96 ) }
    dend_0 { pt3dadd( -1.43047, -103.083, 3.59464, 0.74 ) }
    dend_0 { pt3dadd( -2.17483, -104.48, 3.80404, 0.74 ) }
    dend_0 { pt3dadd( -2.63448, -105.301, 3.93585, 1.03 ) }
    dend_0 { pt3dadd( -3.15465, -106.354, 4.09981, 1.33 ) }
    dend_0 { pt3dadd( -3.41061, -107.021, 4.19868, 1.33 ) }
    dend_0 { pt3dadd( -3.61405, -107.909, 4.335, 1.33 ) }
    dend_0 { pt3dadd( -3.66259, -109.476, 4.59391, 0.81 ) }
    dend_0 { pt3dadd( -3.50151, -110.625, 4.79367, 0.81 ) }
    dend_0 { pt3dadd( -3.08157, -112.359, 5.09491, 0.81 ) }
    dend_0 { pt3dadd( -2.79591, -113.351, 5.24895, 0.81 ) }
    dend_0 { pt3dadd( -2.41992, -114.58, 5.44098, 0.81 ) }
    dend_0 { pt3dadd( -2.05345, -115.812, 5.64284, 0.59 ) }
    dend_0 { pt3dadd( -1.77068, -116.995, 5.8327, 0.52 ) }
    dend_0 { pt3dadd( -1.6979, -117.678, 5.91705, 0.52 ) }
    dend_0 { pt3dadd( -1.72438, -119.071, 5.98201, 0.52 ) }
    dend_0 { pt3dadd( -1.8081, -119.872, 5.96765, 0.81 ) }
    dend_0 { pt3dadd( -1.96979, -120.78, 5.90123, 0.81 ) }
    dend_0 { pt3dadd( -2.28013, -122.101, 5.75967, 0.74 ) }
    dend_0 { pt3dadd( -2.6772, -123.606, 5.56954, 0.81 ) }
    dend_0 { pt3dadd( -3.11915, -125.127, 5.37486, 0.81 ) }
    dend_0 { pt3dadd( -3.39453, -126.003, 5.25801, 0.96 ) }
    dend_0 { pt3dadd( -3.66287, -126.793, 5.1816, 0.96 ) }
    dend_0 { pt3dadd( -3.95685, -127.644, 5.18323, 1.03 ) }
    dend_0 { pt3dadd( -4.17194, -128.283, 5.28842, 1.03 ) }
    dend_0 { pt3dadd( -4.44737, -129.214, 5.59282, 0.81 ) }
    dend_0 { pt3dadd( -4.66544, -130.118, 5.97013, 0.74 ) }
    dend_0 { pt3dadd( -4.9271, -131.587, 6.59345, 0.66 ) }
    dend_0 { pt3dadd( -5.13129, -133.322, 7.31596, 0.66 ) }
    dend_0 { pt3dadd( -5.23138, -134.732, 7.86243, 0.52 ) }
    dend_0 { pt3dadd( -5.29437, -136.316, 8.3921, 0.52 ) }
    dend_0 { pt3dadd( -5.31478, -137.295, 8.64079, 0.74 ) }
    dend_0 { pt3dadd( -5.35272, -138.593, 8.88017, 0.96 ) }
    dend_0 { pt3dadd( -5.40778, -139.498, 8.98586, 1.03 ) }
    dend_0 { pt3dadd( -5.52215, -140.503, 9.06434, 1.03 ) }
    dend_0 { pt3dadd( -5.6892, -141.59, 9.15616, 0.74 ) }
    dend_0 { pt3dadd( -5.89984, -142.75, 9.33336, 0.52 ) }
    dend_0 { pt3dadd( -6.09509, -143.797, 9.56547, 0.52 ) }
    dend_0 { pt3dadd( -6.38213, -145.28, 9.94574, 0.88 ) }
    dend_0 { pt3dadd( -6.5779, -146.285, 10.1895, 0.74 ) }
    dend_0 { pt3dadd( -6.78617, -147.545, 10.465, 0.44 ) }
    dend_0 { pt3dadd( -6.89549, -148.417, 10.6187, 0.59 ) }
    dend_0 { pt3dadd( -6.96662, -149.487, 10.7414, 0.59 ) }
    dend_0 { pt3dadd( -6.94639, -151.105, 10.7752, 0.59 ) }
    dend_0 { pt3dadd( -6.80644, -152.399, 10.7022, 0.81 ) }
    dend_0 { pt3dadd( -6.54121, -153.641, 10.5921, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -6.30412, -154.425, 10.5122, 0.96 ) }
    dend_0 { pt3dadd( -6.01146, -155.202, 10.4241, 0.96 ) }
    dend_0 { pt3dadd( -5.53885, -156.305, 10.3106, 0.74 ) }
    dend_0 { pt3dadd( -5.07264, -157.463, 10.2193, 0.74 ) }
    dend_0 { pt3dadd( -4.70298, -158.635, 10.1849, 0.74 ) }
    dend_0 { pt3dadd( -4.47205, -159.627, 10.2206, 0.74 ) }
    dend_0 { pt3dadd( -4.26723, -160.83, 10.3213, 0.74 ) }
    dend_0 { pt3dadd( -4.10652, -162.191, 10.4848, 0.81 ) }
    dend_0 { pt3dadd( -3.96389, -164.308, 10.771, 0.81 ) }
    dend_0 { pt3dadd( -3.92216, -166.048, 11.0466, 0.74 ) }
    dend_0 { pt3dadd( -3.93043, -167.469, 11.317, 0.81 ) }
    dend_0 { pt3dadd( -3.94211, -168.077, 11.4601, 1.03 ) }
    dend_0 { pt3dadd( -3.96156, -168.799, 11.6848, 1.03 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 13/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.53968, 10.6995, 0.960996, 0.524308 ) }
    axon_0 { pt3dadd( 3.90527, 25.5118, 0.960996, 0.524308 ) }
    axon_0 { pt3dadd( 6.27086, 40.3241, 0.960996, 0.524308 ) }
    // Section: dend_108, id: dend_108, parent: dend_86 (entry count 16/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 9.8788, -0.737072, -40.8517, 0.88 ) }
    dend_108 { pt3dadd( 9.91051, -0.865608, -42.1285, 0.88 ) }
    dend_108 { pt3dadd( 9.81064, -1.61293, -48.3241, 0.88 ) }
    dend_108 { pt3dadd( 9.74946, -1.73199, -49.1732, 0.88 ) }
    dend_108 { pt3dadd( 9.46801, -2.09105, -51.3684, 1.25 ) }
    dend_108 { pt3dadd( 9.1074, -2.4433, -53.4604, 1.03 ) }
    dend_108 { pt3dadd( 8.69035, -2.78751, -55.5035, 0.81 ) }
    dend_108 { pt3dadd( 8.40536, -2.95544, -56.7224, 0.81 ) }
    dend_108 { pt3dadd( 7.97099, -3.1253, -58.1621, 1.03 ) }
    dend_108 { pt3dadd( 7.62372, -3.16671, -59.5334, 1.4 ) }
    dend_108 { pt3dadd( 7.23056, -3.14477, -61.4292, 1.4 ) }
    dend_108 { pt3dadd( 7.02326, -3.0893, -63.0434, 1.11 ) }
    dend_108 { pt3dadd( 6.97391, -3.03881, -64.3115, 0.88 ) }
    dend_108 { pt3dadd( 6.98504, -3.01474, -65.897, 1.11 ) }
    dend_108 { pt3dadd( 7.04175, -3.02602, -68.6063, 1.11 ) }
    dend_108 { pt3dadd( 7.0519, -3.0552, -70.7842, 0.88 ) }
    dend_108 { pt3dadd( 6.99144, -3.08382, -72.3792, 0.74 ) }
    dend_108 { pt3dadd( 6.90871, -3.09068, -73.2949, 0.88 ) }
    dend_108 { pt3dadd( 6.63597, -3.07239, -74.9267, 0.59 ) }
    dend_108 { pt3dadd( 6.24855, -2.95687, -76.4866, 0.52 ) }
    dend_108 { pt3dadd( 5.95541, -2.76959, -77.3519, 0.74 ) }
    dend_108 { pt3dadd( 5.44958, -2.25952, -78.7347, 0.88 ) }
    dend_108 { pt3dadd( 5.19436, -1.96004, -79.4428, 1.11 ) }
    dend_108 { pt3dadd( 4.85723, -1.56007, -80.3765, 1.25 ) }
    dend_108 { pt3dadd( 4.40099, -1.07619, -81.6848, 1.62 ) }
    dend_108 { pt3dadd( 3.9721, -0.763929, -83.0982, 1.4 ) }
    dend_108 { pt3dadd( 3.79868, -0.701443, -83.9495, 1.18 ) }
    dend_108 { pt3dadd( 3.66553, -0.729094, -85.1509, 0.66 ) }
    dend_108 { pt3dadd( 3.63539, -0.740875, -85.7848, 0.66 ) }
    dend_108 { pt3dadd( 3.6209, -0.676389, -86.9751, 0.66 ) }
    dend_108 { pt3dadd( 3.61986, -0.473208, -88.2504, 0.81 ) }
    dend_108 { pt3dadd( 3.62511, -0.0378502, -90.1341, 0.66 ) }
    dend_108 { pt3dadd( 3.60784, 0.285664, -91.3619, 0.81 ) }
    dend_108 { pt3dadd( 3.57742, 0.618198, -92.6711, 0.66 ) }
    dend_108 { pt3dadd( 3.53618, 0.989601, -94.6864, 0.66 ) }
    dend_108 { pt3dadd( 3.46931, 1.14432, -95.7409, 0.52 ) }
    dend_108 { pt3dadd( 3.36929, 1.25035, -96.6404, 0.88 ) }
    dend_108 { pt3dadd( 3.16782, 1.37773, -98.051, 1.03 ) }
    dend_108 { pt3dadd( 2.93435, 1.47731, -99.6426, 1.4 ) }
    dend_108 { pt3dadd( 2.45378, 1.63533, -103.175, 0.88 ) }
    dend_108 { pt3dadd( 2.21856, 1.75239, -104.936, 0.52 ) }
    dend_108 { pt3dadd( 2.0921, 1.88147, -105.817, 1.18 ) }
    dend_108 { pt3dadd( 2.00286, 2.03031, -106.381, 1.47 ) }
    dend_108 { pt3dadd( 1.91595, 2.22855, -106.859, 1.47 ) }
    dend_108 { pt3dadd( 1.68543, 2.872, -107.96, 1.03 ) }
    dend_108 { pt3dadd( 1.55094, 3.52136, -108.818, 1.25 ) }
    dend_108 { pt3dadd( 1.46906, 4.77057, -110.653, 0.96 ) }
    dend_108 { pt3dadd( 1.4604, 5.24307, -111.458, 0.81 ) }
    dend_108 { pt3dadd( 1.46243, 5.66783, -112.315, 1.03 ) }
    dend_108 { pt3dadd( 1.47314, 5.96664, -112.952, 1.03 ) }
    dend_108 { pt3dadd( 1.58308, 6.81624, -114.749, 1.18 ) }
    dend_108 { pt3dadd( 1.77485, 7.57113, -116.362, 0.96 ) }
    dend_108 { pt3dadd( 1.93901, 8.05471, -117.39, 1.33 ) }
    dend_108 { pt3dadd( 2.34957, 9.11948, -119.542, 1.47 ) }
    dend_108 { pt3dadd( 2.68538, 10.0264, -121.159, 1.33 ) }
    dend_108 { pt3dadd( 2.92478, 10.7306, -122.191, 0.52 ) }
    dend_108 { pt3dadd( 3.27706, 11.8744, -123.468, 1.33 ) }
    dend_108 { pt3dadd( 3.42998, 12.4048, -123.897, 1.33 ) }
    dend_108 { pt3dadd( 3.81042, 13.7949, -124.752, 0.88 ) }
    dend_108 { pt3dadd( 4.05733, 14.9619, -125.229, 0.66 ) }
    dend_108 { pt3dadd( 4.17909, 15.7006, -125.449, 0.96 ) }
    dend_108 { pt3dadd( 4.29203, 16.4644, -125.64, 1.18 ) }
    dend_108 { pt3dadd( 4.43557, 17.2814, -125.788, 1.33 ) }
    dend_108 { pt3dadd( 4.73357, 18.4316, -126.008, 0.88 ) }
    dend_108 { pt3dadd( 5.14681, 19.4382, -126.243, 0.52 ) }
    dend_108 { pt3dadd( 5.8469, 20.5969, -126.624, 0.52 ) }
    dend_108 { pt3dadd( 6.56492, 21.4396, -126.998, 0.52 ) }
    dend_108 { pt3dadd( 7.17963, 21.9005, -127.31, 1.18 ) }
    dend_108 { pt3dadd( 8.059, 22.2803, -127.744, 0.96 ) }
    dend_108 { pt3dadd( 8.75931, 22.4071, -128.11, 0.52 ) }
    dend_108 { pt3dadd( 9.32858, 22.4043, -128.48, 0.29 ) }
    dend_108 { pt3dadd( 10.1652, 22.2432, -129.243, 0.29 ) }
    dend_108 { pt3dadd( 11.119, 21.8921, -130.362, 0.37 ) }
    dend_108 { pt3dadd( 11.5601, 21.6839, -131.02, 0.52 ) }
    dend_108 { pt3dadd( 12.2745, 21.323, -132.205, 1.25 ) }
    dend_108 { pt3dadd( 13.0794, 20.8945, -133.66, 1.55 ) }
    dend_108 { pt3dadd( 14.172, 20.3016, -135.762, 1.18 ) }
    dend_108 { pt3dadd( 14.611, 20.0737, -136.638, 0.88 ) }
    dend_108 { pt3dadd( 15.7271, 19.5329, -138.827, 1.11 ) }
    dend_108 { pt3dadd( 16.0571, 19.399, -139.401, 1.11 ) }
    dend_108 { pt3dadd( 16.4447, 19.2891, -139.95, 0.59 ) }
    dend_108 { pt3dadd( 17.1594, 19.2062, -140.716, 0.37 ) }
    dend_108 { pt3dadd( 18.068, 19.2564, -141.525, 0.74 ) }
    dend_108 { pt3dadd( 18.4303, 19.3364, -141.855, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_108 { pt3dadd( 18.9765, 19.5955, -142.426, 0.37 ) }
    dend_108 { pt3dadd( 19.3565, 19.9787, -143.038, 0.37 ) }
    dend_108 { pt3dadd( 19.4542, 20.4605, -143.693, 0.66 ) }
    dend_108 { pt3dadd( 19.2292, 21.1587, -144.752, 0.52 ) }
    dend_108 { pt3dadd( 18.9092, 21.6394, -145.552, 0.52 ) }
    dend_108 { pt3dadd( 18.5747, 22.0066, -146.237, 0.52 ) }
    dend_108 { pt3dadd( 18.4349, 22.1289, -146.495, 0.88 ) }
    dend_108 { pt3dadd( 17.5369, 22.8366, -148.34, 1.11 ) }
    dend_108 { pt3dadd( 16.7399, 23.4321, -150.196, 0.44 ) }
    dend_108 { pt3dadd( 16.58, 23.5585, -150.61, 0.59 ) }
    dend_108 { pt3dadd( 16.1214, 23.9814, -151.937, 1.25 ) }
    dend_108 { pt3dadd( 15.8428, 24.2778, -152.837, 1.4 ) }
    dend_108 { pt3dadd( 14.8373, 25.443, -156.284, 1.18 ) }
    dend_108 { pt3dadd( 14.2409, 26.1491, -158.44, 0.52 ) }
    dend_108 { pt3dadd( 14.0892, 26.3174, -159.019, 0.52 ) }
    dend_108 { pt3dadd( 13.8249, 26.5787, -160.015, 0.44 ) }
    dend_108 { pt3dadd( 13.352, 26.9912, -161.69, 0.66 ) }
    dend_108 { pt3dadd( 12.9365, 27.3229, -163.041, 0.88 ) }
    dend_108 { pt3dadd( 12.5088, 27.6397, -164.275, 0.66 ) }
    dend_108 { pt3dadd( 12.1114, 27.9942, -165.528, 0.44 ) }
    dend_108 { pt3dadd( 11.845, 28.3033, -166.443, 0.37 ) }
    dend_108 { pt3dadd( 11.7133, 28.5549, -166.958, 0.52 ) }
    dend_108 { pt3dadd( 11.6506, 28.9225, -167.342, 0.66 ) }
    dend_108 { pt3dadd( 11.6511, 29.6723, -167.879, 0.66 ) }
    dend_108 { pt3dadd( 11.7137, 30.9906, -168.662, 0.66 ) }
    dend_108 { pt3dadd( 11.7901, 31.7778, -169.072, 0.29 ) }
    dend_108 { pt3dadd( 11.9096, 32.6587, -169.53, 0.29 ) }
    dend_108 { pt3dadd( 12.0697, 33.7389, -170.108, 0.88 ) }
    dend_108 { pt3dadd( 12.2761, 35.1456, -170.832, 0.37 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 29/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 9.8788, -0.737072, -40.8517, 1.84 ) }
    dend_87 { pt3dadd( 10.6418, 0.713557, -41.7812, 1.84 ) }
    dend_87 { pt3dadd( 11.2047, 1.7731, -42.4411, 1.25 ) }
    dend_87 { pt3dadd( 11.4889, 2.37223, -42.808, 1.25 ) }
    dend_87 { pt3dadd( 11.8482, 3.2933, -43.3467, 1.18 ) }
    dend_87 { pt3dadd( 12.0794, 4.11294, -43.8266, 1.18 ) }
    dend_87 { pt3dadd( 12.2485, 4.98932, -44.3595, 1.33 ) }
    dend_87 { pt3dadd( 12.324, 5.71051, -44.7898, 1.69 ) }
    dend_87 { pt3dadd( 12.2973, 6.37594, -45.2802, 1.69 ) }
    dend_87 { pt3dadd( 12.1918, 6.95575, -45.7574, 1.55 ) }
    dend_87 { pt3dadd( 11.9073, 7.80213, -46.5772, 1.33 ) }
    dend_87 { pt3dadd( 11.5811, 8.48005, -47.5713, 1.25 ) }
    dend_87 { pt3dadd( 11.3381, 8.87279, -48.3403, 1.47 ) }
    dend_87 { pt3dadd( 10.9213, 9.4892, -49.7182, 1.92 ) }
    dend_87 { pt3dadd( 10.6302, 9.92127, -50.7226, 2.28 ) }
    dend_87 { pt3dadd( 10.2359, 10.5368, -52.1565, 2.73 ) }
    dend_87 { pt3dadd( 9.3172, 12.0963, -55.6375, 1.33 ) }
    dend_87 { pt3dadd( 9.09009, 12.5383, -56.5636, 1.18 ) }
    dend_87 { pt3dadd( 8.95559, 12.9479, -57.3636, 1.18 ) }
    dend_87 { pt3dadd( 8.89517, 13.3904, -58.1441, 1.4 ) }
    dend_87 { pt3dadd( 8.91748, 13.8306, -58.8842, 1.62 ) }
    dend_87 { pt3dadd( 9.11206, 14.6284, -60.1616, 1.69 ) }
    dend_87 { pt3dadd( 9.48528, 15.4719, -61.514, 1.69 ) }
    dend_87 { pt3dadd( 10.3989, 16.9627, -64.1976, 1.33 ) }
    dend_87 { pt3dadd( 10.9028, 17.6524, -65.5932, 1.55 ) }
    dend_87 { pt3dadd( 11.3571, 18.1667, -66.7661, 1.92 ) }
    dend_87 { pt3dadd( 11.7103, 18.4917, -67.6001, 2.21 ) }
    dend_87 { pt3dadd( 12.0585, 18.733, -68.3225, 2.43 ) }
    dend_87 { pt3dadd( 12.0835, 18.7456, -68.3657, 2.43 ) }
    // Section: dend_39, id: dend_39, parent: dend_23 (entry count 58/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.86428, 43.9008, 25.2235, 0.88 ) }
    dend_39 { pt3dadd( 5.91267, 43.6664, 24.749, 0.88 ) }
    dend_39 { pt3dadd( 6.41779, 43.5442, 24.5634, 0.88 ) }
    dend_39 { pt3dadd( 7.345, 43.3263, 24.3228, 0.88 ) }
    dend_39 { pt3dadd( 8.06778, 43.1839, 24.187, 0.88 ) }
    dend_39 { pt3dadd( 9.91409, 42.8906, 23.9599, 0.74 ) }
    dend_39 { pt3dadd( 10.8234, 42.7831, 23.8886, 0.96 ) }
    dend_39 { pt3dadd( 11.5333, 42.7148, 23.8883, 1.11 ) }
    dend_39 { pt3dadd( 12.3469, 42.7337, 23.9955, 1.25 ) }
    dend_39 { pt3dadd( 12.9657, 42.8232, 24.1642, 1.77 ) }
    dend_39 { pt3dadd( 13.4044, 42.957, 24.3628, 1.92 ) }
    dend_39 { pt3dadd( 13.6773, 43.0874, 24.5469, 2.06 ) }
    dend_39 { pt3dadd( 14.0779, 43.3525, 24.8075, 1.55 ) }
    dend_39 { pt3dadd( 14.6363, 43.8161, 25.1167, 1.25 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 72/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 4.86428, 43.9008, 25.2235, 0.96 ) }
    dend_24 { pt3dadd( 5.25985, 44.8221, 24.5084, 0.96 ) }
    dend_24 { pt3dadd( 5.60029, 45.4625, 24.0378, 0.88 ) }
    dend_24 { pt3dadd( 5.88867, 45.9286, 23.7076, 0.88 ) }
    dend_24 { pt3dadd( 6.29812, 46.5106, 23.3064, 1.18 ) }
    dend_24 { pt3dadd( 6.55537, 46.8409, 23.0861, 1.18 ) }
    dend_24 { pt3dadd( 6.92332, 47.3211, 22.7792, 1.18 ) }
    dend_24 { pt3dadd( 7.18798, 47.6342, 22.6066, 1.4 ) }
    dend_24 { pt3dadd( 7.38112, 47.8905, 22.4966, 1.4 ) }
    dend_24 { pt3dadd( 7.54421, 48.2219, 22.3905, 0.81 ) }
    dend_24 { pt3dadd( 7.61151, 48.6346, 22.3099, 0.81 ) }
    dend_24 { pt3dadd( 7.47646, 49.3896, 22.1992, 0.66 ) }
    dend_24 { pt3dadd( 7.1733, 50.0419, 22.1428, 0.66 ) }
    dend_24 { pt3dadd( 6.87868, 50.5223, 22.1194, 0.74 ) }
    dend_24 { pt3dadd( 6.55757, 50.9968, 22.0931, 0.74 ) }
    dend_24 { pt3dadd( 6.19745, 51.5194, 22.0452, 0.59 ) }
    dend_24 { pt3dadd( 5.82912, 52.0618, 21.9589, 0.59 ) }
    dend_24 { pt3dadd( 5.44771, 52.6893, 21.8262, 0.81 ) }
    dend_24 { pt3dadd( 5.21074, 53.1764, 21.6945, 1.03 ) }
    dend_24 { pt3dadd( 4.97978, 53.8282, 21.5238, 1.03 ) }
    dend_24 { pt3dadd( 4.78265, 54.6272, 21.3522, 0.74 ) }
    dend_24 { pt3dadd( 4.66083, 55.3382, 21.2279, 0.52 ) }
    dend_24 { pt3dadd( 4.58051, 55.9357, 21.1701, 0.52 ) }
    dend_24 { pt3dadd( 4.50624, 56.4362, 21.1726, 0.52 ) }
    dend_24 { pt3dadd( 4.36734, 57.1921, 21.2665, 0.88 ) }
    dend_24 { pt3dadd( 4.2385, 57.801, 21.3903, 1.18 ) }
    dend_24 { pt3dadd( 4.17432, 58.1205, 21.4638, 1.18 ) }
    dend_24 { pt3dadd( 4.09183, 58.7279, 21.5772, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( 4.07419, 59.5463, 21.6235, 0.52 ) }
    dend_24 { pt3dadd( 4.15895, 60.0249, 21.5722, 0.52 ) }
    dend_24 { pt3dadd( 4.36916, 60.6272, 21.4291, 0.66 ) }
    dend_24 { pt3dadd( 4.64304, 61.2265, 21.2447, 0.66 ) }
    dend_24 { pt3dadd( 4.99958, 61.9331, 21.0135, 0.66 ) }
    dend_24 { pt3dadd( 5.31048, 62.5309, 20.8138, 0.66 ) }
    dend_24 { pt3dadd( 5.69297, 63.3148, 20.5764, 1.11 ) }
    dend_24 { pt3dadd( 5.79213, 63.5857, 20.5142, 1.11 ) }
    dend_24 { pt3dadd( 5.85995, 63.9774, 20.468, 1.11 ) }
    dend_24 { pt3dadd( 5.81348, 64.6641, 20.4513, 0.74 ) }
    dend_24 { pt3dadd( 5.66425, 65.1588, 20.4771, 0.74 ) }
    dend_24 { pt3dadd( 5.41452, 65.6774, 20.5215, 0.88 ) }
    dend_24 { pt3dadd( 5.14419, 66.1212, 20.5573, 1.11 ) }
    dend_24 { pt3dadd( 4.83701, 66.5959, 20.574, 1.11 ) }
    dend_24 { pt3dadd( 4.61887, 66.9411, 20.5709, 0.74 ) }
    dend_24 { pt3dadd( 4.35046, 67.4071, 20.5406, 0.74 ) }
    dend_24 { pt3dadd( 4.11747, 67.9073, 20.4752, 0.59 ) }
    dend_24 { pt3dadd( 3.91376, 68.5511, 20.3428, 0.44 ) }
    dend_24 { pt3dadd( 3.83359, 69.168, 20.169, 0.44 ) }
    dend_24 { pt3dadd( 3.86834, 69.7311, 19.9768, 0.66 ) }
    dend_24 { pt3dadd( 3.96282, 70.151, 19.8473, 0.81 ) }
    dend_24 { pt3dadd( 4.09599, 70.5267, 19.7493, 0.81 ) }
    dend_24 { pt3dadd( 4.30479, 71.0064, 19.6553, 0.81 ) }
    dend_24 { pt3dadd( 4.56633, 71.562, 19.5917, 0.52 ) }
    dend_24 { pt3dadd( 4.78098, 72.0626, 19.5735, 0.52 ) }
    dend_24 { pt3dadd( 5.08215, 72.9828, 19.5917, 1.11 ) }
    dend_24 { pt3dadd( 5.17643, 73.4019, 19.6312, 1.11 ) }
    dend_24 { pt3dadd( 5.23477, 73.7624, 19.6836, 1.11 ) }
    dend_24 { pt3dadd( 5.28623, 74.1545, 19.7502, 1.11 ) }
    dend_24 { pt3dadd( 5.3468, 74.739, 19.8119, 0.81 ) }
    dend_24 { pt3dadd( 5.39774, 75.4288, 19.8432, 0.81 ) }
    dend_24 { pt3dadd( 5.42157, 76.4482, 19.8364, 0.66 ) }
    dend_24 { pt3dadd( 5.39899, 77.1721, 19.8025, 0.74 ) }
    dend_24 { pt3dadd( 5.32634, 77.9944, 19.7427, 0.66 ) }
    dend_24 { pt3dadd( 5.11434, 79.3394, 19.5952, 0.81 ) }
    dend_24 { pt3dadd( 4.91056, 80.1366, 19.4872, 0.81 ) }
    dend_24 { pt3dadd( 4.55884, 80.9778, 19.3331, 0.81 ) }
    dend_24 { pt3dadd( 4.12706, 81.655, 19.1522, 0.81 ) }
    dend_24 { pt3dadd( 3.79751, 82.0444, 19.0199, 1.03 ) }
    dend_24 { pt3dadd( 3.45638, 82.3683, 18.8595, 1.03 ) }
    dend_24 { pt3dadd( 3.05138, 82.7221, 18.6508, 0.66 ) }
    dend_24 { pt3dadd( 2.51096, 83.2147, 18.3049, 0.96 ) }
    dend_24 { pt3dadd( 2.08101, 83.6721, 17.9774, 0.96 ) }
    dend_24 { pt3dadd( 1.78302, 84.0668, 17.7263, 1.03 ) }
    dend_24 { pt3dadd( 1.1126, 85.1182, 17.0906, 0.59 ) }
    dend_24 { pt3dadd( 0.799552, 85.6329, 16.7706, 0.66 ) }
    dend_24 { pt3dadd( 0.603499, 85.9359, 16.5635, 0.66 ) }
    dend_24 { pt3dadd( 0.261061, 86.4126, 16.2184, 0.66 ) }
    dend_24 { pt3dadd( -0.0897455, 86.8268, 15.8941, 0.66 ) }
    dend_24 { pt3dadd( -0.738841, 87.458, 15.3262, 0.66 ) }
    dend_24 { pt3dadd( -1.5602, 88.1287, 14.6782, 0.66 ) }
    dend_24 { pt3dadd( -2.24927, 88.6135, 14.1787, 0.81 ) }
    dend_24 { pt3dadd( -2.84109, 88.9834, 13.7902, 0.81 ) }
    dend_24 { pt3dadd( -3.46114, 89.3291, 13.434, 0.81 ) }
    dend_24 { pt3dadd( -4.42831, 89.8489, 12.9748, 0.59 ) }
    dend_24 { pt3dadd( -5.07811, 90.2287, 12.7509, 0.44 ) }
    dend_24 { pt3dadd( -5.71713, 90.6481, 12.6263, 0.44 ) }
    dend_24 { pt3dadd( -6.12066, 90.9305, 12.5984, 0.66 ) }
    dend_24 { pt3dadd( -6.6344, 91.3051, 12.6167, 0.66 ) }
    dend_24 { pt3dadd( -7.19894, 91.7362, 12.686, 0.66 ) }
    dend_24 { pt3dadd( -7.80713, 92.2181, 12.7988, 0.88 ) }
    dend_24 { pt3dadd( -8.45829, 92.7475, 12.9007, 0.81 ) }
    dend_24 { pt3dadd( -8.963, 93.1703, 12.9668, 0.81 ) }
    dend_24 { pt3dadd( -9.40471, 93.5614, 13.0172, 0.66 ) }
    dend_24 { pt3dadd( -9.67886, 93.8159, 13.0454, 0.81 ) }
    dend_24 { pt3dadd( -10.0903, 94.2345, 13.0854, 0.81 ) }
    dend_24 { pt3dadd( -10.3884, 94.6031, 13.1139, 0.74 ) }
    dend_24 { pt3dadd( -10.7082, 95.1463, 13.1373, 0.59 ) }
    dend_24 { pt3dadd( -11.0025, 95.7858, 13.1598, 0.59 ) }
    dend_24 { pt3dadd( -11.161, 96.1467, 13.1668, 0.59 ) }
    dend_24 { pt3dadd( -11.4999, 96.8342, 13.1313, 0.59 ) }
    dend_24 { pt3dadd( -11.943, 97.6047, 13.0254, 0.59 ) }
    dend_24 { pt3dadd( -12.2938, 98.1221, 12.9176, 0.59 ) }
    dend_24 { pt3dadd( -12.7145, 98.6254, 12.7656, 0.66 ) }
    dend_24 { pt3dadd( -13.3186, 99.2019, 12.5661, 0.66 ) }
    dend_24 { pt3dadd( -14.3065, 100.02, 12.2315, 0.96 ) }
    dend_24 { pt3dadd( -14.9164, 100.435, 12.023, 1.11 ) }
    dend_24 { pt3dadd( -15.256, 100.626, 11.9023, 0.81 ) }
    dend_24 { pt3dadd( -15.7401, 100.867, 11.724, 0.59 ) }
    dend_24 { pt3dadd( -16.7441, 101.357, 11.3366, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_0 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.96156, -168.799, 11.6848, 0.29 ) }
    dend_18 { pt3dadd( -3.12069, -167.832, 11.1598, 0.29 ) }
    dend_18 { pt3dadd( -2.65335, -167.176, 10.8526, 0.29 ) }
    dend_18 { pt3dadd( -1.94477, -165.978, 10.3876, 0.29 ) }
    dend_18 { pt3dadd( -1.28611, -164.653, 9.98026, 0.29 ) }
    dend_18 { pt3dadd( -0.837217, -163.6, 9.70602, 0.44 ) }
    dend_18 { pt3dadd( -0.404116, -162.399, 9.44758, 0.44 ) }
    dend_18 { pt3dadd( -0.0782866, -161.075, 9.25995, 0.37 ) }
    dend_18 { pt3dadd( 0.204064, -159.59, 9.09563, 0.37 ) }
    dend_18 { pt3dadd( 0.443258, -157.586, 8.95242, 0.59 ) }
    dend_18 { pt3dadd( 0.515773, -156.517, 8.91613, 0.59 ) }
    dend_18 { pt3dadd( 0.551142, -155.386, 8.90222, 0.37 ) }
    dend_18 { pt3dadd( 0.535117, -154.419, 8.92364, 0.37 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.96156, -168.799, 11.6848, 0.52 ) }
    dend_1 { pt3dadd( -3.3046, -169.806, 11.6129, 0.52 ) }
    dend_1 { pt3dadd( -2.68821, -170.882, 11.5103, 0.52 ) }
    dend_1 { pt3dadd( -2.3705, -171.506, 11.4402, 0.52 ) }
    dend_1 { pt3dadd( -2.00147, -172.321, 11.3601, 0.52 ) }
    dend_1 { pt3dadd( -1.60643, -173.331, 11.2044, 0.74 ) }
    dend_1 { pt3dadd( -1.35865, -174.082, 11.0578, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -1.23136, -174.644, 10.9317, 1.18 ) }
    dend_1 { pt3dadd( -1.16614, -175.222, 10.8036, 1.33 ) }
    dend_1 { pt3dadd( -1.15229, -176.014, 10.669, 1.47 ) }
    dend_1 { pt3dadd( -1.27285, -177.524, 10.5158, 0.74 ) }
    dend_1 { pt3dadd( -1.49177, -178.709, 10.5219, 0.74 ) }
    dend_1 { pt3dadd( -1.69289, -179.436, 10.6331, 0.59 ) }
    dend_1 { pt3dadd( -1.9078, -180.154, 10.8335, 0.59 ) }
    dend_1 { pt3dadd( -2.1725, -181.073, 11.1729, 0.59 ) }
    dend_1 { pt3dadd( -2.32735, -181.733, 11.4499, 0.59 ) }
    dend_1 { pt3dadd( -2.43443, -182.406, 11.7578, 0.59 ) }
    dend_1 { pt3dadd( -2.50908, -183.39, 12.1457, 0.52 ) }
    dend_1 { pt3dadd( -2.4946, -184.523, 12.4593, 0.59 ) }
    dend_1 { pt3dadd( -2.42942, -185.264, 12.5913, 0.59 ) }
    dend_1 { pt3dadd( -2.28393, -186.335, 12.6918, 0.88 ) }
    dend_1 { pt3dadd( -2.15112, -187.15, 12.7193, 1.25 ) }
    dend_1 { pt3dadd( -2.04288, -187.713, 12.7108, 1.25 ) }
    dend_1 { pt3dadd( -1.90475, -188.382, 12.6946, 1.25 ) }
    dend_1 { pt3dadd( -1.75324, -189.057, 12.7029, 0.96 ) }
    dend_1 { pt3dadd( -1.55859, -189.796, 12.7378, 0.96 ) }
    dend_1 { pt3dadd( -1.26494, -190.764, 12.8227, 0.74 ) }
    dend_1 { pt3dadd( -0.896859, -191.912, 12.9598, 0.74 ) }
    dend_1 { pt3dadd( -0.591123, -192.87, 13.0938, 0.66 ) }
    dend_1 { pt3dadd( -0.247445, -193.975, 13.2659, 0.66 ) }
    dend_1 { pt3dadd( -0.00498246, -194.802, 13.4061, 0.66 ) }
    dend_1 { pt3dadd( 0.294007, -195.959, 13.6236, 0.59 ) }
    dend_1 { pt3dadd( 0.41686, -196.601, 13.757, 0.81 ) }
    dend_1 { pt3dadd( 0.483298, -197.379, 13.9268, 0.81 ) }
    dend_1 { pt3dadd( 0.471801, -198.258, 14.1298, 0.81 ) }
    dend_1 { pt3dadd( 0.369477, -199.052, 14.3363, 0.66 ) }
    dend_1 { pt3dadd( 0.20326, -199.721, 14.5541, 0.66 ) }
    dend_1 { pt3dadd( -0.0544391, -200.446, 14.8626, 0.66 ) }
    dend_1 { pt3dadd( -0.349996, -201.16, 15.2208, 0.74 ) }
    dend_1 { pt3dadd( -0.61954, -201.803, 15.5684, 0.88 ) }
    dend_1 { pt3dadd( -0.83398, -202.405, 15.8835, 0.88 ) }
    dend_1 { pt3dadd( -0.978123, -203.019, 16.1692, 0.74 ) }
    dend_1 { pt3dadd( -1.04072, -204.197, 16.6271, 0.74 ) }
    dend_1 { pt3dadd( -0.98073, -204.79, 16.8282, 0.74 ) }
    dend_1 { pt3dadd( -0.7642, -205.835, 17.1257, 0.59 ) }
    dend_1 { pt3dadd( -0.44144, -207.005, 17.3974, 0.59 ) }
    dend_1 { pt3dadd( -0.171656, -207.81, 17.5534, 0.59 ) }
    dend_1 { pt3dadd( 0.189595, -208.855, 17.7211, 0.59 ) }
    dend_1 { pt3dadd( 0.353239, -209.39, 17.7926, 0.96 ) }
    dend_1 { pt3dadd( 0.460188, -209.94, 17.9137, 0.96 ) }
    dend_1 { pt3dadd( 0.476216, -210.434, 18.11, 0.96 ) }
    dend_1 { pt3dadd( 0.41374, -211.178, 18.4654, 0.52 ) }
    dend_1 { pt3dadd( 0.278684, -211.87, 18.845, 0.52 ) }
    dend_1 { pt3dadd( 0.0884902, -212.481, 19.2189, 0.52 ) }
    dend_1 { pt3dadd( -0.372354, -213.708, 20.0568, 0.74 ) }
    dend_1 { pt3dadd( -0.816989, -214.678, 20.8849, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.27086, 40.3241, 0.960996, 0.181933 ) }
    axon_1 { pt3dadd( 8.63644, 55.1364, 0.960996, 0.181933 ) }
    axon_1 { pt3dadd( 11.002, 69.9487, 0.960996, 0.181933 ) }
    // Section: dend_105, id: dend_105, parent: dend_87 (entry count 52/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 12.0835, 18.7456, -68.3657, 1.47 ) }
    dend_105 { pt3dadd( 11.2186, 18.919, -70.0819, 1.47 ) }
    dend_105 { pt3dadd( 9.55321, 19.5653, -73.0661, 1.03 ) }
    dend_105 { pt3dadd( 9.05856, 19.8576, -74.0285, 1.03 ) }
    dend_105 { pt3dadd( 8.74021, 20.1788, -74.98, 1.03 ) }
    dend_105 { pt3dadd( 8.49445, 20.5649, -76.063, 0.81 ) }
    dend_105 { pt3dadd( 8.39422, 20.8332, -76.8217, 0.66 ) }
    dend_105 { pt3dadd( 8.41391, 21.355, -78.1012, 1.03 ) }
    dend_105 { pt3dadd( 8.65502, 21.9041, -79.4014, 1.03 ) }
    dend_105 { pt3dadd( 9.75547, 23.1805, -82.8425, 0.96 ) }
    dend_105 { pt3dadd( 10.2061, 23.4784, -83.8614, 0.96 ) }
    dend_105 { pt3dadd( 10.9202, 23.717, -85.1796, 0.74 ) }
    dend_105 { pt3dadd( 11.4506, 23.7831, -86.1512, 0.59 ) }
    dend_105 { pt3dadd( 11.7965, 23.798, -86.7781, 0.81 ) }
    dend_105 { pt3dadd( 12.2042, 23.8074, -87.5372, 1.03 ) }
    dend_105 { pt3dadd( 12.8017, 23.8616, -88.7841, 1.18 ) }
    dend_105 { pt3dadd( 13.418, 24.0736, -90.7356, 1.47 ) }
    dend_105 { pt3dadd( 14.0238, 24.5922, -94.0794, 1.18 ) }
    dend_105 { pt3dadd( 14.1245, 24.8272, -95.3822, 1.11 ) }
    dend_105 { pt3dadd( 14.1226, 24.9664, -96.2151, 1.11 ) }
    dend_105 { pt3dadd( 13.9214, 25.362, -98.7945, 1.11 ) }
    dend_105 { pt3dadd( 13.5624, 25.6782, -101.087, 0.81 ) }
    dend_105 { pt3dadd( 13.3816, 25.7418, -101.839, 0.81 ) }
    dend_105 { pt3dadd( 13.1825, 25.7595, -102.57, 1.11 ) }
    dend_105 { pt3dadd( 12.3224, 25.7119, -105.815, 0.81 ) }
    dend_105 { pt3dadd( 12.0335, 25.6915, -106.966, 0.81 ) }
    dend_105 { pt3dadd( 11.6568, 25.6922, -108.399, 0.96 ) }
    dend_105 { pt3dadd( 11.2512, 25.7087, -110.068, 0.81 ) }
    dend_105 { pt3dadd( 10.8693, 25.786, -111.828, 0.52 ) }
    dend_105 { pt3dadd( 10.6973, 25.8696, -112.623, 0.52 ) }
    dend_105 { pt3dadd( 10.454, 26.136, -113.674, 0.74 ) }
    dend_105 { pt3dadd( 10.1813, 26.8519, -115.711, 1.33 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 84/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 12.0835, 18.7456, -68.3657, 2.43 ) }
    dend_88 { pt3dadd( 11.738, 19.0916, -68.6444, 2.43 ) }
    dend_88 { pt3dadd( 10.5724, 20.0733, -69.4318, 0.88 ) }
    dend_88 { pt3dadd( 9.57987, 20.8445, -70.014, 0.88 ) }
    dend_88 { pt3dadd( 8.91515, 21.3783, -70.3654, 0.88 ) }
    dend_88 { pt3dadd( 8.18226, 22.0223, -70.7368, 0.74 ) }
    dend_88 { pt3dadd( 7.4022, 22.821, -71.1634, 0.88 ) }
    dend_88 { pt3dadd( 6.93553, 23.3607, -71.4341, 1.03 ) }
    dend_88 { pt3dadd( 6.35289, 24.197, -71.8347, 1.03 ) }
    dend_88 { pt3dadd( 5.81342, 25.3224, -72.3093, 1.92 ) }
    dend_88 { pt3dadd( 5.55988, 26.0299, -72.6004, 1.55 ) }
    dend_88 { pt3dadd( 5.16617, 27.2976, -73.118, 1.11 ) }
    dend_88 { pt3dadd( 4.7962, 28.4814, -73.6013, 0.96 ) }
    dend_88 { pt3dadd( 4.40577, 29.5297, -74.0917, 0.96 ) }
    dend_88 { pt3dadd( 4.06805, 30.2302, -74.4615, 0.96 ) }
    dend_88 { pt3dadd( 3.71335, 30.7566, -74.7905, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_88 { pt3dadd( 3.10522, 31.4213, -75.2495, 0.96 ) }
    dend_88 { pt3dadd( 2.51025, 31.937, -75.6243, 0.96 ) }
    dend_88 { pt3dadd( 1.59235, 32.6322, -76.1503, 0.88 ) }
    dend_88 { pt3dadd( 0.930972, 33.0865, -76.5321, 1.33 ) }
    dend_88 { pt3dadd( 0.374619, 33.4921, -76.899, 1.55 ) }
    dend_88 { pt3dadd( 0.0495583, 33.7767, -77.1528, 1.77 ) }
    dend_88 { pt3dadd( -0.314113, 34.205, -77.507, 1.77 ) }
    dend_88 { pt3dadd( -0.393333, 34.329, -77.5989, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 8/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.6363, 43.8161, 25.1167, 0.29 ) }
    dend_51 { pt3dadd( 14.8623, 43.683, 26.0174, 0.29 ) }
    dend_51 { pt3dadd( 15.4293, 43.4691, 27.7186, 0.29 ) }
    dend_51 { pt3dadd( 15.9218, 43.2502, 29.049, 0.29 ) }
    dend_51 { pt3dadd( 16.375, 43.0324, 30.1347, 0.29 ) }
    dend_51 { pt3dadd( 17.2681, 42.7304, 32.1308, 0.29 ) }
    dend_51 { pt3dadd( 18.0046, 42.5769, 33.6689, 0.29 ) }
    dend_51 { pt3dadd( 18.8823, 42.4321, 35.3928, 0.29 ) }
    dend_51 { pt3dadd( 19.3295, 42.3572, 36.1791, 0.66 ) }
    dend_51 { pt3dadd( 19.9379, 42.2654, 37.1381, 0.29 ) }
    dend_51 { pt3dadd( 21.378, 42.2433, 39.1898, 0.29 ) }
    dend_51 { pt3dadd( 21.9635, 42.3602, 39.9805, 0.52 ) }
    dend_51 { pt3dadd( 22.769, 42.6372, 41.0645, 0.22 ) }
    dend_51 { pt3dadd( 23.3329, 42.9151, 41.8124, 0.22 ) }
    dend_51 { pt3dadd( 23.8735, 43.2539, 42.5177, 0.22 ) }
    dend_51 { pt3dadd( 24.8205, 43.9632, 43.7334, 0.22 ) }
    dend_51 { pt3dadd( 25.7817, 44.7486, 44.9489, 0.22 ) }
    dend_51 { pt3dadd( 26.2756, 45.2192, 45.6087, 0.29 ) }
    dend_51 { pt3dadd( 26.9172, 45.9851, 46.5202, 0.29 ) }
    dend_51 { pt3dadd( 27.2784, 46.4912, 47.0842, 0.29 ) }
    dend_51 { pt3dadd( 27.4864, 46.7989, 47.4403, 0.44 ) }
    dend_51 { pt3dadd( 28.097, 47.7211, 48.6287, 0.22 ) }
    dend_51 { pt3dadd( 28.4781, 48.3647, 49.4128, 0.37 ) }
    dend_51 { pt3dadd( 28.8451, 49.0131, 50.2315, 0.66 ) }
    dend_51 { pt3dadd( 29.3032, 49.854, 51.3277, 0.81 ) }
    dend_51 { pt3dadd( 29.7031, 50.6617, 52.3131, 0.44 ) }
    dend_51 { pt3dadd( 30.0025, 51.2817, 53.085, 0.52 ) }
    dend_51 { pt3dadd( 33.7106, 56.08, 61.273, 0.52 ) }
    dend_51 { pt3dadd( 36.1206, 61.5808, 69.523, 0.52 ) }
    dend_51 { pt3dadd( 39.765, 66.8067, 77.4867, 0.52 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 14.6363, 43.8161, 25.1167, 1.47 ) }
    dend_40 { pt3dadd( 14.6396, 44.5689, 25.6138, 1.47 ) }
    dend_40 { pt3dadd( 14.6312, 45.5159, 26.2181, 0.66 ) }
    dend_40 { pt3dadd( 14.6445, 46.2825, 26.6772, 0.59 ) }
    dend_40 { pt3dadd( 14.6959, 46.9506, 27.0665, 0.59 ) }
    dend_40 { pt3dadd( 14.756, 47.7315, 27.5216, 0.74 ) }
    dend_40 { pt3dadd( 14.8005, 48.3098, 27.8586, 0.88 ) }
    dend_40 { pt3dadd( 14.8038, 48.6557, 28.0517, 1.11 ) }
    dend_40 { pt3dadd( 14.8008, 49.1636, 28.3774, 1.33 ) }
    dend_40 { pt3dadd( 14.8227, 49.6744, 28.6612, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -16.7441, 101.357, 11.3366, 0.37 ) }
    dend_36 { pt3dadd( -17.2165, 102.273, 11.4861, 0.37 ) }
    dend_36 { pt3dadd( -17.4844, 102.864, 11.5485, 0.44 ) }
    dend_36 { pt3dadd( -17.8095, 103.723, 11.6016, 0.44 ) }
    dend_36 { pt3dadd( -18.0672, 104.517, 11.6111, 0.44 ) }
    dend_36 { pt3dadd( -18.4277, 105.827, 11.5835, 0.52 ) }
    dend_36 { pt3dadd( -18.6116, 106.706, 11.5719, 0.52 ) }
    dend_36 { pt3dadd( -18.656, 107.145, 11.5562, 0.66 ) }
    dend_36 { pt3dadd( -18.654, 108.231, 11.4972, 0.66 ) }
    dend_36 { pt3dadd( -18.5704, 109.179, 11.4405, 0.81 ) }
    dend_36 { pt3dadd( -18.4574, 109.84, 11.4112, 0.88 ) }
    dend_36 { pt3dadd( -18.2044, 110.872, 11.3373, 0.96 ) }
    dend_36 { pt3dadd( -17.9784, 111.67, 11.2372, 0.96 ) }
    dend_36 { pt3dadd( -17.6867, 112.645, 11.0014, 0.59 ) }
    dend_36 { pt3dadd( -17.4273, 113.541, 10.6788, 0.44 ) }
    dend_36 { pt3dadd( -17.2795, 114.197, 10.3862, 0.44 ) }
    dend_36 { pt3dadd( -17.1136, 115.492, 9.73225, 0.66 ) }
    dend_36 { pt3dadd( -17.1122, 115.96, 9.4844, 0.66 ) }
    dend_36 { pt3dadd( -17.2893, 117.267, 8.80606, 0.44 ) }
    dend_36 { pt3dadd( -17.5384, 118.152, 8.40694, 0.44 ) }
    dend_36 { pt3dadd( -17.9413, 119.23, 8.02344, 0.59 ) }
    dend_36 { pt3dadd( -18.2402, 119.958, 7.84854, 0.59 ) }
    dend_36 { pt3dadd( -18.6363, 120.953, 7.7178, 0.37 ) }
    dend_36 { pt3dadd( -18.9881, 121.919, 7.62609, 0.37 ) }
    dend_36 { pt3dadd( -19.3746, 123.135, 7.54629, 0.52 ) }
    dend_36 { pt3dadd( -19.6419, 124.161, 7.45398, 0.52 ) }
    dend_36 { pt3dadd( -19.9391, 125.561, 7.3044, 0.52 ) }
    dend_36 { pt3dadd( -20.1804, 126.805, 7.16962, 0.44 ) }
    dend_36 { pt3dadd( -20.4453, 128.113, 7.05288, 0.66 ) }
    dend_36 { pt3dadd( -20.5577, 128.579, 7.0337, 0.88 ) }
    dend_36 { pt3dadd( -20.9049, 129.72, 7.03624, 0.52 ) }
    dend_36 { pt3dadd( -21.1649, 130.433, 7.06628, 0.44 ) }
    dend_36 { pt3dadd( -21.614, 131.568, 7.15744, 0.44 ) }
    dend_36 { pt3dadd( -22.0181, 132.72, 7.25962, 0.66 ) }
    dend_36 { pt3dadd( -22.2159, 133.513, 7.31209, 0.96 ) }
    dend_36 { pt3dadd( -22.353, 134.383, 7.33367, 0.96 ) }
    dend_36 { pt3dadd( -22.3821, 135.113, 7.33273, 0.96 ) }
    dend_36 { pt3dadd( -22.3271, 136.484, 7.30529, 0.37 ) }
    dend_36 { pt3dadd( -22.2428, 137.834, 7.28744, 0.29 ) }
    dend_36 { pt3dadd( -22.1111, 139.032, 7.2491, 0.44 ) }
    dend_36 { pt3dadd( -22.0335, 139.651, 7.23041, 0.44 ) }
    dend_36 { pt3dadd( -21.9111, 140.858, 7.23008, 0.37 ) }
    dend_36 { pt3dadd( -21.8688, 141.475, 7.25556, 0.37 ) }
    dend_36 { pt3dadd( -21.8989, 143.301, 7.49808, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 92/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -16.7441, 101.357, 11.3366, 0.52 ) }
    dend_25 { pt3dadd( -18.6573, 101.134, 11.1959, 0.52 ) }
    dend_25 { pt3dadd( -20.8482, 101.222, 10.9644, 0.44 ) }
    dend_25 { pt3dadd( -21.6937, 101.361, 10.8543, 0.37 ) }
    dend_25 { pt3dadd( -22.3483, 101.5, 10.773, 0.37 ) }
    dend_25 { pt3dadd( -23.554, 101.762, 10.6504, 0.59 ) }
    dend_25 { pt3dadd( -24.0839, 101.847, 10.5851, 0.66 ) }
    dend_25 { pt3dadd( -25.032, 101.987, 10.3934, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( -25.9881, 102.057, 10.1077, 0.59 ) }
    dend_25 { pt3dadd( -26.8678, 102.045, 9.784, 0.59 ) }
    dend_25 { pt3dadd( -27.8128, 101.994, 9.34998, 0.59 ) }
    dend_25 { pt3dadd( -29.3069, 101.914, 8.55308, 0.44 ) }
    dend_25 { pt3dadd( -30.7768, 101.897, 7.7165, 0.44 ) }
    dend_25 { pt3dadd( -32.0145, 101.957, 6.9645, 0.44 ) }
    dend_25 { pt3dadd( -32.9323, 102.031, 6.35224, 0.44 ) }
    dend_25 { pt3dadd( -34.2245, 102.229, 5.40297, 0.59 ) }
    dend_25 { pt3dadd( -35.1089, 102.474, 4.70885, 0.74 ) }
    dend_25 { pt3dadd( -35.7434, 102.791, 4.2275, 0.88 ) }
    dend_25 { pt3dadd( -36.2593, 103.157, 3.86512, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 11/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.535117, -154.419, 8.92364, 0.37 ) }
    dend_22 { pt3dadd( 0.315276, -152.972, 9.04833, 0.37 ) }
    dend_22 { pt3dadd( 0.17135, -151.253, 9.12886, 0.37 ) }
    dend_22 { pt3dadd( 0.0886326, -149.265, 9.13917, 0.37 ) }
    dend_22 { pt3dadd( 0.0370168, -147.802, 9.09092, 0.37 ) }
    dend_22 { pt3dadd( -0.0362612, -146.284, 9.02129, 0.37 ) }
    dend_22 { pt3dadd( -0.121038, -145.011, 8.9619, 0.37 ) }
    dend_22 { pt3dadd( -0.221071, -143.777, 8.88801, 0.37 ) }
    dend_22 { pt3dadd( -0.311707, -142.788, 8.80842, 0.37 ) }
    dend_22 { pt3dadd( -0.368096, -141.716, 8.682, 0.37 ) }
    dend_22 { pt3dadd( -0.401362, -140.701, 8.55004, 0.37 ) }
    dend_22 { pt3dadd( -0.429128, -139.416, 8.38351, 0.37 ) }
    dend_22 { pt3dadd( -0.4246, -138.123, 8.21987, 0.59 ) }
    dend_22 { pt3dadd( -0.390816, -137.2, 8.08777, 0.81 ) }
    dend_22 { pt3dadd( -0.203231, -135.198, 7.75937, 0.29 ) }
    dend_22 { pt3dadd( -0.0734994, -134.227, 7.55959, 0.88 ) }
    dend_22 { pt3dadd( 0.0388288, -133.492, 7.36132, 0.96 ) }
    dend_22 { pt3dadd( 0.140719, -132.831, 7.117, 0.44 ) }
    dend_22 { pt3dadd( 0.30855, -131.561, 6.51899, 0.37 ) }
    dend_22 { pt3dadd( 0.363171, -130.509, 5.82193, 0.37 ) }
    dend_22 { pt3dadd( 0.323729, -129.695, 5.16131, 0.37 ) }
    dend_22 { pt3dadd( 0.270494, -129.054, 4.60592, 0.37 ) }
    dend_22 { pt3dadd( 0.15561, -127.965, 3.71209, 0.52 ) }
    dend_22 { pt3dadd( 0.082698, -127.433, 3.31774, 0.52 ) }
    dend_22 { pt3dadd( -0.201667, -125.382, 2.02008, 0.52 ) }
    dend_22 { pt3dadd( -0.388085, -124.269, 1.44023, 0.52 ) }
    dend_22 { pt3dadd( -0.576421, -123.211, 1.00801, 0.59 ) }
    dend_22 { pt3dadd( -0.802675, -121.981, 0.612174, 0.29 ) }
    dend_22 { pt3dadd( -1.02681, -120.701, 0.274106, 0.29 ) }
    dend_22 { pt3dadd( -1.21253, -119.582, -0.0309519, 0.37 ) }
    dend_22 { pt3dadd( -1.40369, -118.292, -0.38531, 0.59 ) }
    dend_22 { pt3dadd( -1.50406, -117.499, -0.691452, 0.74 ) }
    dend_22 { pt3dadd( -1.55975, -116.777, -1.03173, 0.74 ) }
    dend_22 { pt3dadd( -1.57836, -115.798, -1.54069, 0.66 ) }
    dend_22 { pt3dadd( -1.52048, -114.407, -2.20842, 0.59 ) }
    dend_22 { pt3dadd( -1.46255, -113.564, -2.5286, 0.59 ) }
    dend_22 { pt3dadd( -1.37364, -112.513, -2.77046, 0.44 ) }
    dend_22 { pt3dadd( -1.27992, -111.338, -2.91832, 0.37 ) }
    dend_22 { pt3dadd( -1.17004, -110.048, -2.98, 0.37 ) }
    dend_22 { pt3dadd( -1.0589, -108.893, -3.0035, 0.29 ) }
    dend_22 { pt3dadd( -0.906505, -107.755, -3.02767, 0.29 ) }
    dend_22 { pt3dadd( -0.644669, -106.16, -3.13041, 0.29 ) }
    dend_22 { pt3dadd( -0.450339, -105.107, -3.31175, 0.74 ) }
    dend_22 { pt3dadd( -0.323269, -104.46, -3.5281, 0.74 ) }
    dend_22 { pt3dadd( -0.102896, -103.228, -4.13974, 0.37 ) }
    dend_22 { pt3dadd( 0.0222188, -102.216, -4.78017, 0.59 ) }
    dend_22 { pt3dadd( 0.0432306, -101.708, -5.13649, 0.59 ) }
    dend_22 { pt3dadd( -0.00879756, -100.238, -6.21136, 0.37 ) }
    dend_22 { pt3dadd( -0.0887844, -99.3824, -6.81233, 0.37 ) }
    dend_22 { pt3dadd( -0.230641, -98.2657, -7.53159, 0.37 ) }
    dend_22 { pt3dadd( -0.330107, -97.484, -7.95766, 0.52 ) }
    dend_22 { pt3dadd( -0.42139, -96.618, -8.38491, 0.29 ) }
    dend_22 { pt3dadd( -0.453557, -95.7134, -8.7578, 0.29 ) }
    dend_22 { pt3dadd( -0.413014, -94.9749, -9.00144, 0.29 ) }
    dend_22 { pt3dadd( -0.31775, -94.1763, -9.28916, 0.29 ) }
    dend_22 { pt3dadd( -0.21073, -93.4531, -9.56987, 0.37 ) }
    dend_22 { pt3dadd( -0.092036, -92.5794, -9.90763, 0.37 ) }
    dend_22 { pt3dadd( -0.00552426, -91.6983, -10.2213, 0.44 ) }
    dend_22 { pt3dadd( 0.0562238, -90.7422, -10.5108, 0.44 ) }
    dend_22 { pt3dadd( 0.120041, -89.8975, -10.7541, 0.44 ) }
    dend_22 { pt3dadd( 0.229646, -88.8341, -11.0868, 0.29 ) }
    dend_22 { pt3dadd( 0.353044, -88.0966, -11.3788, 0.29 ) }
    dend_22 { pt3dadd( 0.625587, -86.9734, -11.9086, 0.29 ) }
    dend_22 { pt3dadd( 0.9127, -86.0748, -12.3753, 0.74 ) }
    dend_22 { pt3dadd( 1.2383, -85.2371, -12.8129, 0.74 ) }
    dend_22 { pt3dadd( 1.5921, -84.5073, -13.1949, 0.74 ) }
    dend_22 { pt3dadd( 2.13362, -83.5896, -13.7086, 0.52 ) }
    dend_22 { pt3dadd( 2.71586, -82.7093, -14.1992, 0.52 ) }
    dend_22 { pt3dadd( 3.62379, -81.4428, -14.9049, 0.52 ) }
    dend_22 { pt3dadd( 4.19208, -80.6243, -15.3217, 0.66 ) }
    dend_22 { pt3dadd( 4.73421, -79.7133, -15.7113, 0.44 ) }
    dend_22 { pt3dadd( 5.09649, -78.9845, -15.9635, 0.44 ) }
    dend_22 { pt3dadd( 5.39578, -78.1785, -16.1909, 0.81 ) }
    dend_22 { pt3dadd( 5.55407, -77.5166, -16.364, 0.81 ) }
    dend_22 { pt3dadd( 5.60258, -76.5117, -16.5821, 0.37 ) }
    dend_22 { pt3dadd( 5.43258, -75.3424, -16.8775, 0.37 ) }
    dend_22 { pt3dadd( 5.19717, -74.2392, -17.1524, 0.37 ) }
    dend_22 { pt3dadd( 4.95559, -73.2002, -17.4317, 0.37 ) }
    dend_22 { pt3dadd( 4.74926, -72.2514, -17.7095, 0.52 ) }
    dend_22 { pt3dadd( 4.5983, -71.4676, -17.9929, 0.52 ) }
    dend_22 { pt3dadd( 4.28346, -69.319, -18.9932, 0.37 ) }
    dend_22 { pt3dadd( 4.17085, -67.3174, -20.2057, 0.29 ) }
    dend_22 { pt3dadd( 4.20508, -66.3039, -20.943, 0.29 ) }
    dend_22 { pt3dadd( 4.2682, -65.7144, -21.4248, 0.29 ) }
    dend_22 { pt3dadd( 4.42211, -64.6328, -22.3485, 0.66 ) }
    dend_22 { pt3dadd( 4.53433, -64.0064, -22.868, 0.81 ) }
    dend_22 { pt3dadd( 4.8537, -62.7088, -23.838, 0.44 ) }
    dend_22 { pt3dadd( 5.08381, -61.9744, -24.3502, 0.59 ) }
    dend_22 { pt3dadd( 5.24827, -61.5179, -24.5901, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 5.60457, -60.577, -24.9693, 0.29 ) }
    dend_22 { pt3dadd( 6.00851, -59.6053, -25.2745, 0.29 ) }
    dend_22 { pt3dadd( 6.45504, -58.6408, -25.5576, 0.29 ) }
    dend_22 { pt3dadd( 7.21029, -57.0788, -26.0103, 0.29 ) }
    dend_22 { pt3dadd( 7.89819, -55.531, -26.444, 0.29 ) }
    dend_22 { pt3dadd( 8.44929, -54.2018, -26.8042, 0.29 ) }
    dend_22 { pt3dadd( 9.13572, -52.5313, -27.2644, 0.29 ) }
    dend_22 { pt3dadd( 9.98677, -50.4128, -27.8478, 0.29 ) }
    dend_22 { pt3dadd( 10.32, -49.493, -28.1119, 0.29 ) }
    dend_22 { pt3dadd( 10.8369, -47.7858, -28.6189, 0.29 ) }
    dend_22 { pt3dadd( 11.1786, -46.4315, -29.0761, 0.59 ) }
    dend_22 { pt3dadd( 11.2901, -45.8521, -29.2947, 0.59 ) }
    dend_22 { pt3dadd( 11.4362, -44.7321, -29.7537, 0.29 ) }
    dend_22 { pt3dadd( 11.5652, -43.4069, -30.3403, 0.66 ) }
    dend_22 { pt3dadd( 11.6561, -42.6134, -30.7498, 0.66 ) }
    dend_22 { pt3dadd( 11.7979, -41.6265, -31.3738, 0.37 ) }
    dend_22 { pt3dadd( 11.8968, -40.6355, -32.0723, 0.22 ) }
    dend_22 { pt3dadd( 11.9463, -39.9038, -32.5864, 0.22 ) }
    dend_22 { pt3dadd( 11.9819, -39.2743, -33.0199, 0.22 ) }
    dend_22 { pt3dadd( 12.0498, -38.4811, -33.541, 0.44 ) }
    dend_22 { pt3dadd( 12.1791, -37.3935, -34.2156, 0.29 ) }
    dend_22 { pt3dadd( 12.3744, -36.3045, -34.8691, 0.29 ) }
    dend_22 { pt3dadd( 12.5819, -35.203, -35.5359, 0.37 ) }
    dend_22 { pt3dadd( 12.7791, -34.489, -35.8926, 0.66 ) }
    dend_22 { pt3dadd( 12.967, -33.9989, -36.0279, 0.66 ) }
    dend_22 { pt3dadd( 13.5373, -32.7768, -36.1105, 0.29 ) }
    dend_22 { pt3dadd( 14.1439, -31.6863, -35.9941, 0.74 ) }
    dend_22 { pt3dadd( 14.5816, -30.9828, -35.7938, 0.88 ) }
    dend_22 { pt3dadd( 16.2421, -28.4285, -34.8151, 0.37 ) }
    dend_22 { pt3dadd( 17.2972, -26.8176, -34.1301, 0.29 ) }
    dend_22 { pt3dadd( 18.115, -25.6013, -33.5642, 0.29 ) }
    dend_22 { pt3dadd( 19.1523, -24.0888, -32.7799, 0.29 ) }
    dend_22 { pt3dadd( 20.419, -22.1897, -31.7165, 0.22 ) }
    dend_22 { pt3dadd( 20.9352, -21.3917, -31.2735, 0.22 ) }
    dend_22 { pt3dadd( 21.2895, -20.6834, -30.9533, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 35/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.535117, -154.419, 8.92364, 0.29 ) }
    dend_19 { pt3dadd( -0.0890379, -154.039, 8.99596, 0.29 ) }
    dend_19 { pt3dadd( -0.893138, -153.549, 9.08913, 0.29 ) }
    dend_19 { pt3dadd( -2.32579, -152.677, 9.25513, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 39/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.816989, -214.678, 20.8849, 0.59 ) }
    dend_3 { pt3dadd( -0.560241, -215.541, 21.2962, 0.59 ) }
    dend_3 { pt3dadd( -0.374364, -216.511, 21.6777, 0.59 ) }
    dend_3 { pt3dadd( -0.250965, -217.377, 21.9651, 1.03 ) }
    dend_3 { pt3dadd( -0.203429, -217.847, 22.0921, 1.11 ) }
    dend_3 { pt3dadd( -0.144282, -218.318, 22.2389, 1.11 ) }
    dend_3 { pt3dadd( 0.104502, -219.834, 22.7643, 0.81 ) }
    dend_3 { pt3dadd( 0.294733, -220.914, 23.1728, 0.74 ) }
    dend_3 { pt3dadd( 0.561788, -222.122, 23.6469, 0.59 ) }
    dend_3 { pt3dadd( 0.946293, -223.434, 24.1921, 0.59 ) }
    dend_3 { pt3dadd( 1.61676, -225.138, 25.0145, 0.66 ) }
    dend_3 { pt3dadd( 2.05515, -226.012, 25.4947, 0.74 ) }
    dend_3 { pt3dadd( 2.3356, -226.467, 25.7745, 1.03 ) }
    dend_3 { pt3dadd( 2.66067, -226.928, 26.0931, 0.81 ) }
    dend_3 { pt3dadd( 3.11892, -227.535, 26.5391, 0.52 ) }
    dend_3 { pt3dadd( 3.60957, -228.118, 26.9951, 0.81 ) }
    dend_3 { pt3dadd( 4.0997, -228.785, 27.4072, 0.59 ) }
    dend_3 { pt3dadd( 4.41806, -229.329, 27.7001, 0.52 ) }
    dend_3 { pt3dadd( 4.53218, -229.593, 27.823, 0.74 ) }
    dend_3 { pt3dadd( 4.62973, -229.99, 27.9955, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.816989, -214.678, 20.8849, 0.29 ) }
    dend_2 { pt3dadd( -1.60183, -214.243, 20.902, 0.29 ) }
    dend_2 { pt3dadd( -2.41882, -213.905, 20.8971, 0.29 ) }
    dend_2 { pt3dadd( -3.28549, -213.657, 20.8822, 0.29 ) }
    dend_2 { pt3dadd( -4.42064, -213.493, 20.855, 0.22 ) }
    dend_2 { pt3dadd( -5.75407, -213.499, 20.8164, 0.22 ) }
    dend_2 { pt3dadd( -6.70119, -213.67, 20.7845, 0.22 ) }
    dend_2 { pt3dadd( -7.61211, -214.005, 20.7208, 0.22 ) }
    dend_2 { pt3dadd( -8.40019, -214.547, 20.6539, 0.22 ) }
    dend_2 { pt3dadd( -9.05729, -215.311, 20.5929, 0.22 ) }
    dend_2 { pt3dadd( -9.39637, -215.841, 20.5585, 0.22 ) }
    dend_2 { pt3dadd( -9.71241, -216.686, 20.5183, 0.22 ) }
    dend_2 { pt3dadd( -18.4366, -219.511, 20.6176, 0.22 ) }
    dend_2 { pt3dadd( -27.5033, -220.587, 19.9755, 0.22 ) }
    dend_2 { pt3dadd( -36.5855, -221.707, 20.1808, 0.22 ) }
    dend_2 { pt3dadd( -45.4961, -223.798, 19.7839, 0.22 ) }
    dend_2 { pt3dadd( -54.3834, -224.588, 17.7483, 0.22 ) }
    dend_2 { pt3dadd( -62.6589, -225.381, 13.9223, 0.22 ) }
    dend_2 { pt3dadd( -70.6006, -224.773, 9.41698, 0.22 ) }
    dend_2 { pt3dadd( -78.7683, -226.027, 5.47815, 0.22 ) }
    dend_2 { pt3dadd( -87.5128, -228.201, 3.81817, 0.22 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 80/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 10.1813, 26.8519, -115.711, 0.74 ) }
    dend_107 { pt3dadd( 9.92462, 27.2242, -115.95, 0.74 ) }
    dend_107 { pt3dadd( 9.25063, 28.6364, -116.589, 0.74 ) }
    dend_107 { pt3dadd( 7.99326, 31.2709, -117.78, 0.52 ) }
    dend_107 { pt3dadd( 7.61423, 32.065, -118.139, 1.03 ) }
    dend_107 { pt3dadd( 7.29299, 32.7381, -118.444, 1.03 ) }
    dend_107 { pt3dadd( 6.92652, 33.506, -118.791, 0.22 ) }
    dend_107 { pt3dadd( 6.30038, 35.199, -119.468, 0.22 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 88/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 10.1813, 26.8519, -115.711, 0.96 ) }
    dend_106 { pt3dadd( 10.4899, 26.7372, -117.543, 0.96 ) }
    dend_106 { pt3dadd( 10.5635, 26.722, -118.223, 0.66 ) }
    dend_106 { pt3dadd( 10.6089, 26.7517, -119.068, 0.44 ) }
    dend_106 { pt3dadd( 10.7271, 26.9126, -121.311, 0.29 ) }
    dend_106 { pt3dadd( 10.9275, 27.2254, -124.368, 1.18 ) }
    dend_106 { pt3dadd( 11.1469, 27.6645, -127.802, 0.59 ) }
    dend_106 { pt3dadd( 11.1823, 27.8527, -129.023, 0.44 ) }
    dend_106 { pt3dadd( 11.1981, 28.2263, -131.182, 1.03 ) }
    dend_106 { pt3dadd( 11.164, 28.7308, -133.549, 0.59 ) }
    dend_106 { pt3dadd( 11.1436, 28.9611, -134.345, 0.52 ) }
    dend_106 { pt3dadd( 11.1152, 29.7254, -136.362, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_106 { pt3dadd( 11.1377, 30.1809, -137.483, 1.11 ) }
    // Section: dend_102, id: dend_102, parent: dend_88 (entry count 1/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -0.393333, 34.329, -77.5989, 0.96 ) }
    dend_102 { pt3dadd( 0.444583, 37.1354, -81.208, 0.96 ) }
    dend_102 { pt3dadd( 1.19203, 38.8672, -83.6097, 0.74 ) }
    dend_102 { pt3dadd( 1.59445, 39.4419, -84.6472, 0.74 ) }
    dend_102 { pt3dadd( 2.14349, 39.9485, -85.8689, 0.88 ) }
    dend_102 { pt3dadd( 2.92066, 40.4194, -87.413, 0.88 ) }
    dend_102 { pt3dadd( 3.71968, 40.7156, -88.8942, 1.03 ) }
    dend_102 { pt3dadd( 5.2409, 40.8866, -91.1314, 1.33 ) }
    dend_102 { pt3dadd( 7.18729, 40.8807, -93.6031, 1.03 ) }
    dend_102 { pt3dadd( 8.56922, 40.8613, -95.2283, 1.33 ) }
    dend_102 { pt3dadd( 9.88706, 40.8926, -96.7189, 1.55 ) }
    dend_102 { pt3dadd( 12.5405, 41.2234, -99.5883, 1.33 ) }
    dend_102 { pt3dadd( 13.7346, 41.5843, -100.821, 0.81 ) }
    dend_102 { pt3dadd( 14.766, 42.1955, -101.746, 0.81 ) }
    dend_102 { pt3dadd( 16.2876, 43.5457, -102.941, 1.03 ) }
    dend_102 { pt3dadd( 17.6056, 44.9275, -104.058, 1.03 ) }
    dend_102 { pt3dadd( 18.7391, 46.2848, -105.139, 1.25 ) }
    dend_102 { pt3dadd( 19.5168, 47.278, -105.977, 1.33 ) }
    dend_102 { pt3dadd( 20.4449, 48.4976, -107.104, 1.4 ) }
    dend_102 { pt3dadd( 20.9999, 49.204, -107.835, 1.4 ) }
    dend_102 { pt3dadd( 23.6911, 52.239, -111.481, 1.33 ) }
    dend_102 { pt3dadd( 24.8355, 53.3166, -113.047, 1.18 ) }
    dend_102 { pt3dadd( 26.0171, 54.2695, -114.805, 1.18 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 24/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -0.393333, 34.329, -77.5989, 1.55 ) }
    dend_89 { pt3dadd( -0.753216, 35.1078, -77.7289, 1.55 ) }
    dend_89 { pt3dadd( -1.03538, 35.925, -77.8926, 0.88 ) }
    dend_89 { pt3dadd( -1.25663, 36.6841, -78.0174, 0.88 ) }
    dend_89 { pt3dadd( -1.45405, 37.4472, -78.0838, 1.03 ) }
    dend_89 { pt3dadd( -1.7089, 38.4927, -78.1273, 1.03 ) }
    dend_89 { pt3dadd( -1.97994, 39.6041, -78.1454, 1.03 ) }
    dend_89 { pt3dadd( -2.2156, 40.6755, -78.1292, 1.03 ) }
    dend_89 { pt3dadd( -2.4306, 41.6222, -78.0977, 1.11 ) }
    dend_89 { pt3dadd( -2.76877, 42.9729, -78.047, 1.18 ) }
    dend_89 { pt3dadd( -3.0863, 44.0923, -78.0051, 0.74 ) }
    dend_89 { pt3dadd( -3.43753, 45.1954, -77.9623, 0.74 ) }
    dend_89 { pt3dadd( -3.73532, 46.1502, -77.9214, 0.74 ) }
    dend_89 { pt3dadd( -4.11028, 47.4355, -77.8752, 0.88 ) }
    dend_89 { pt3dadd( -4.34153, 48.2785, -77.8647, 1.11 ) }
    dend_89 { pt3dadd( -4.52007, 48.9296, -77.8411, 1.33 ) }
    dend_89 { pt3dadd( -4.68847, 49.5089, -77.7837, 1.47 ) }
    dend_89 { pt3dadd( -4.97365, 50.3845, -77.6122, 0.81 ) }
    dend_89 { pt3dadd( -5.21598, 51.0198, -77.4092, 0.81 ) }
    dend_89 { pt3dadd( -5.50046, 51.7058, -77.1071, 1.03 ) }
    dend_89 { pt3dadd( -5.91551, 52.7071, -76.5978, 1.11 ) }
    dend_89 { pt3dadd( -6.20238, 53.4405, -76.2067, 0.88 ) }
    dend_89 { pt3dadd( -6.44677, 54.1793, -75.8097, 0.74 ) }
    dend_89 { pt3dadd( -6.62166, 54.9176, -75.4542, 0.59 ) }
    dend_89 { pt3dadd( -6.65059, 55.7257, -75.1488, 0.88 ) }
    dend_89 { pt3dadd( -6.52962, 56.4358, -74.9917, 0.96 ) }
    dend_89 { pt3dadd( -6.37657, 56.9793, -74.9386, 0.96 ) }
    dend_89 { pt3dadd( -6.17091, 57.6976, -74.9105, 0.88 ) }
    dend_89 { pt3dadd( -5.9819, 58.459, -74.9265, 0.74 ) }
    dend_89 { pt3dadd( -5.87741, 59.1422, -74.9685, 0.96 ) }
    dend_89 { pt3dadd( -5.86265, 59.8986, -75.0261, 0.66 ) }
    dend_89 { pt3dadd( -5.96667, 61.0461, -75.1139, 0.66 ) }
    dend_89 { pt3dadd( -6.20794, 62.4814, -75.1731, 1.11 ) }
    dend_89 { pt3dadd( -6.33838, 63.0747, -75.1637, 1.33 ) }
    dend_89 { pt3dadd( -6.60881, 64.1389, -75.1209, 1.33 ) }
    dend_89 { pt3dadd( -7.0265, 65.6081, -75.0385, 0.74 ) }
    dend_89 { pt3dadd( -7.41779, 66.8857, -74.9349, 0.74 ) }
    dend_89 { pt3dadd( -7.7539, 67.9336, -74.8192, 1.03 ) }
    dend_89 { pt3dadd( -8.00711, 68.7591, -74.6968, 1.25 ) }
    // Section: dend_69, id: dend_69, parent: dend_51 (entry count 63/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 39.765, 66.8067, 77.4867, 0.44 ) }
    dend_69 { pt3dadd( 36.509, 69.0036, 83.3715, 0.44 ) }
    dend_69 { pt3dadd( 34.507, 72.1153, 89.4149, 0.44 ) }
    dend_69 { pt3dadd( 31.7673, 74.468, 95.5009, 0.44 ) }
    dend_69 { pt3dadd( 29.2104, 76.5775, 101.751, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 39.765, 66.8067, 77.4867, 0.22 ) }
    dend_52 { pt3dadd( 44.9786, 69.6493, 82.6424, 0.44 ) }
    dend_52 { pt3dadd( 49.4962, 72.065, 88.5987, 0.44 ) }
    dend_52 { pt3dadd( 54.7402, 75.4525, 93.398, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 72/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 14.8227, 49.6744, 28.6612, 1.18 ) }
    dend_42 { pt3dadd( 15.1863, 50.3324, 30.0957, 1.18 ) }
    dend_42 { pt3dadd( 15.7353, 51.8021, 32.6591, 0.59 ) }
    dend_42 { pt3dadd( 15.8306, 52.1046, 33.103, 0.59 ) }
    dend_42 { pt3dadd( 15.9516, 52.4762, 33.5866, 0.52 ) }
    dend_42 { pt3dadd( 16.1152, 52.9578, 34.1498, 0.74 ) }
    dend_42 { pt3dadd( 16.2951, 53.4894, 34.6909, 0.59 ) }
    dend_42 { pt3dadd( 16.4927, 54.1828, 35.143, 0.59 ) }
    dend_42 { pt3dadd( 16.6477, 54.7885, 35.418, 0.74 ) }
    dend_42 { pt3dadd( 16.8065, 55.2858, 35.65, 0.74 ) }
    dend_42 { pt3dadd( 17.3231, 56.5527, 36.2637, 1.62 ) }
    dend_42 { pt3dadd( 17.7477, 57.4002, 36.6866, 2.21 ) }
    dend_42 { pt3dadd( 18.1493, 58.1318, 37.0379, 2.06 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 85/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.8227, 49.6744, 28.6612, 0.29 ) }
    dend_41 { pt3dadd( 15.2366, 49.0849, 28.1709, 0.29 ) }
    dend_41 { pt3dadd( 15.4896, 48.7247, 27.8713, 0.44 ) }
    dend_41 { pt3dadd( 15.6029, 48.5634, 27.7371, 0.59 ) }
    dend_41 { pt3dadd( 15.9235, 48.1068, 27.3573, 0.52 ) }
    dend_41 { pt3dadd( 17.8522, 44.4158, 24.2012, 0.52 ) }
    dend_41 { pt3dadd( 18.8098, 40.751, 20.6122, 0.52 ) }
    dend_41 { pt3dadd( 20.5399, 36.9468, 17.4712, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 93/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -21.8989, 143.301, 7.49808, 0.37 ) }
    dend_38 { pt3dadd( -22.0681, 143.885, 7.70831, 0.37 ) }
    dend_38 { pt3dadd( -22.1063, 144.208, 7.80383, 0.29 ) }
    dend_38 { pt3dadd( -22.1028, 144.605, 7.92304, 0.29 ) }
    dend_38 { pt3dadd( -22.063, 145.071, 8.07919, 0.29 ) }
    dend_38 { pt3dadd( -21.9998, 145.732, 8.31246, 0.29 ) }
    dend_38 { pt3dadd( -21.9538, 146.269, 8.50742, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -21.8839, 146.902, 8.72197, 0.29 ) }
    dend_38 { pt3dadd( -21.8285, 147.625, 8.97799, 0.59 ) }
    dend_38 { pt3dadd( -21.8246, 148.187, 9.20421, 0.37 ) }
    dend_38 { pt3dadd( -21.8679, 148.559, 9.38042, 0.37 ) }
    dend_38 { pt3dadd( -21.9282, 148.806, 9.51069, 0.74 ) }
    dend_38 { pt3dadd( -22.0434, 149.132, 9.67702, 0.74 ) }
    dend_38 { pt3dadd( -22.3355, 149.824, 9.99115, 0.44 ) }
    dend_38 { pt3dadd( -22.5724, 150.349, 10.1957, 0.44 ) }
    dend_38 { pt3dadd( -22.7866, 150.878, 10.3814, 0.44 ) }
    dend_38 { pt3dadd( -22.895, 151.212, 10.5156, 0.44 ) }
    dend_38 { pt3dadd( -23.0591, 151.776, 10.7686, 0.44 ) }
    dend_38 { pt3dadd( -23.175, 152.2, 10.9732, 0.44 ) }
    dend_38 { pt3dadd( -23.2815, 152.622, 11.1789, 0.37 ) }
    dend_38 { pt3dadd( -23.4822, 153.425, 11.5607, 0.37 ) }
    dend_38 { pt3dadd( -23.6899, 154.258, 11.9576, 0.29 ) }
    dend_38 { pt3dadd( -23.8216, 154.766, 12.1997, 0.29 ) }
    dend_38 { pt3dadd( -23.9549, 155.235, 12.4325, 0.29 ) }
    dend_38 { pt3dadd( -24.1555, 155.821, 12.698, 0.29 ) }
    dend_38 { pt3dadd( -24.3423, 156.286, 12.8808, 0.29 ) }
    dend_38 { pt3dadd( -24.5939, 156.835, 13.0815, 0.29 ) }
    dend_38 { pt3dadd( -24.8089, 157.279, 13.2478, 0.29 ) }
    dend_38 { pt3dadd( -25.0423, 157.798, 13.4767, 0.29 ) }
    dend_38 { pt3dadd( -25.3619, 158.545, 13.8669, 0.29 ) }
    dend_38 { pt3dadd( -25.5009, 158.875, 14.0673, 0.29 ) }
    dend_38 { pt3dadd( -25.7082, 159.39, 14.4075, 0.29 ) }
    dend_38 { pt3dadd( -25.8613, 159.846, 14.7033, 0.29 ) }
    dend_38 { pt3dadd( -26.0045, 160.425, 15.0287, 0.29 ) }
    dend_38 { pt3dadd( -26.0844, 160.876, 15.2348, 0.29 ) }
    dend_38 { pt3dadd( -26.1209, 161.086, 15.3141, 0.66 ) }
    dend_38 { pt3dadd( -26.1787, 161.333, 15.3783, 0.66 ) }
    dend_38 { pt3dadd( -26.3247, 161.839, 15.4729, 0.29 ) }
    dend_38 { pt3dadd( -26.4725, 162.29, 15.5422, 0.29 ) }
    dend_38 { pt3dadd( -26.6588, 162.85, 15.6206, 0.29 ) }
    dend_38 { pt3dadd( -26.8616, 163.524, 15.7054, 0.29 ) }
    dend_38 { pt3dadd( -26.9863, 163.951, 15.753, 0.29 ) }
    dend_38 { pt3dadd( -27.1291, 164.441, 15.8075, 0.74 ) }
    dend_38 { pt3dadd( -27.2114, 164.744, 15.8389, 0.74 ) }
    dend_38 { pt3dadd( -27.3558, 165.402, 15.8927, 0.29 ) }
    dend_38 { pt3dadd( -27.4319, 165.883, 15.92, 0.29 ) }
    dend_38 { pt3dadd( -27.4893, 166.426, 15.9391, 0.29 ) }
    dend_38 { pt3dadd( -27.5337, 166.904, 15.9537, 0.29 ) }
    dend_38 { pt3dadd( -27.6067, 167.702, 15.9937, 0.29 ) }
    dend_38 { pt3dadd( -27.6587, 168.165, 16.0273, 0.81 ) }
    dend_38 { pt3dadd( -27.7238, 168.579, 16.045, 0.81 ) }
    dend_38 { pt3dadd( -27.8158, 169.177, 16.0372, 0.37 ) }
    dend_38 { pt3dadd( -27.8915, 169.757, 15.9932, 0.29 ) }
    dend_38 { pt3dadd( -27.9626, 170.26, 15.9184, 0.29 ) }
    dend_38 { pt3dadd( -28.0676, 170.736, 15.8164, 0.29 ) }
    dend_38 { pt3dadd( -28.3259, 171.507, 15.6152, 0.44 ) }
    dend_38 { pt3dadd( -28.4917, 171.86, 15.5022, 0.44 ) }
    dend_38 { pt3dadd( -28.6688, 172.168, 15.3922, 0.44 ) }
    dend_38 { pt3dadd( -28.9554, 172.625, 15.1962, 0.37 ) }
    dend_38 { pt3dadd( -29.2242, 173.05, 14.9914, 0.29 ) }
    dend_38 { pt3dadd( -29.443, 173.41, 14.8061, 0.29 ) }
    dend_38 { pt3dadd( -29.6468, 173.759, 14.6041, 0.29 ) }
    dend_38 { pt3dadd( -29.8305, 174.087, 14.3667, 0.59 ) }
    dend_38 { pt3dadd( -30.0554, 174.587, 13.9306, 0.96 ) }
    dend_38 { pt3dadd( -30.1194, 174.791, 13.7359, 0.96 ) }
    dend_38 { pt3dadd( -30.2077, 175.206, 13.319, 0.81 ) }
    dend_38 { pt3dadd( -30.3042, 175.827, 12.7027, 0.29 ) }
    dend_38 { pt3dadd( -30.3438, 176.144, 12.4009, 0.29 ) }
    dend_38 { pt3dadd( -30.4053, 176.613, 11.9878, 0.29 ) }
    dend_38 { pt3dadd( -30.4472, 176.93, 11.7575, 0.52 ) }
    dend_38 { pt3dadd( -30.5128, 177.438, 11.4539, 0.52 ) }
    dend_38 { pt3dadd( -30.5436, 177.782, 11.29, 0.52 ) }
    dend_38 { pt3dadd( -30.5515, 178.073, 11.1701, 0.44 ) }
    dend_38 { pt3dadd( -30.5457, 178.689, 10.9312, 0.66 ) }
    dend_38 { pt3dadd( -30.5298, 179.224, 10.7319, 0.37 ) }
    dend_38 { pt3dadd( -30.5178, 179.619, 10.5859, 0.37 ) }
    dend_38 { pt3dadd( -30.52, 180.064, 10.4318, 0.37 ) }
    dend_38 { pt3dadd( -30.5963, 180.512, 10.2588, 0.29 ) }
    dend_38 { pt3dadd( -30.7893, 180.973, 10.059, 0.29 ) }
    dend_38 { pt3dadd( -31.035, 181.352, 9.90907, 0.37 ) }
    dend_38 { pt3dadd( -31.3824, 181.817, 9.7475, 0.52 ) }
    dend_38 { pt3dadd( -31.7289, 182.265, 9.61957, 0.59 ) }
    dend_38 { pt3dadd( -32.2749, 182.977, 9.43383, 0.29 ) }
    dend_38 { pt3dadd( -32.5705, 183.381, 9.31339, 0.29 ) }
    dend_38 { pt3dadd( -33.1223, 184.205, 9.01704, 0.44 ) }
    dend_38 { pt3dadd( -33.3392, 184.606, 8.85293, 0.59 ) }
    dend_38 { pt3dadd( -33.4934, 184.986, 8.68809, 0.59 ) }
    dend_38 { pt3dadd( -33.6115, 185.374, 8.51656, 0.29 ) }
    dend_38 { pt3dadd( -33.8019, 186.099, 8.19595, 0.37 ) }
    dend_38 { pt3dadd( -33.9415, 186.564, 8.00193, 0.37 ) }
    dend_38 { pt3dadd( -34.1087, 187.079, 7.80573, 0.59 ) }
    dend_38 { pt3dadd( -34.2253, 187.444, 7.68998, 0.59 ) }
    dend_38 { pt3dadd( -34.3456, 187.836, 7.58832, 0.59 ) }
    dend_38 { pt3dadd( -34.5703, 188.66, 7.43704, 0.37 ) }
    dend_38 { pt3dadd( -34.7833, 189.574, 7.3296, 0.29 ) }
    dend_38 { pt3dadd( -34.9157, 190.271, 7.26381, 0.29 ) }
    dend_38 { pt3dadd( -34.9924, 190.744, 7.22208, 0.52 ) }
    dend_38 { pt3dadd( -35.0579, 191.228, 7.17828, 0.52 ) }
    dend_38 { pt3dadd( -35.0948, 191.591, 7.1493, 0.44 ) }
    dend_38 { pt3dadd( -35.1325, 191.99, 7.12618, 0.29 ) }
    dend_38 { pt3dadd( -35.1981, 192.386, 7.11093, 0.29 ) }
    dend_38 { pt3dadd( -35.3252, 192.812, 7.1196, 0.44 ) }
    dend_38 { pt3dadd( -35.5172, 193.252, 7.15202, 0.44 ) }
    dend_38 { pt3dadd( -35.7329, 193.648, 7.19644, 0.52 ) }
    dend_38 { pt3dadd( -36.0992, 194.234, 7.26665, 0.29 ) }
    dend_38 { pt3dadd( -36.4153, 194.694, 7.33356, 0.29 ) }
    dend_38 { pt3dadd( -36.729, 195.124, 7.39983, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -36.9334, 195.402, 7.43863, 0.52 ) }
    dend_38 { pt3dadd( -37.1613, 195.714, 7.46071, 0.52 ) }
    dend_38 { pt3dadd( -37.3369, 195.97, 7.44455, 0.52 ) }
    dend_38 { pt3dadd( -37.6087, 196.473, 7.33484, 0.37 ) }
    dend_38 { pt3dadd( -37.7345, 196.779, 7.23638, 0.37 ) }
    dend_38 { pt3dadd( -37.889, 197.248, 7.05837, 0.37 ) }
    dend_38 { pt3dadd( -38.0855, 197.929, 6.78789, 0.22 ) }
    dend_38 { pt3dadd( -38.2618, 198.535, 6.55663, 0.22 ) }
    dend_38 { pt3dadd( -38.4924, 199.328, 6.2721, 0.22 ) }
    dend_38 { pt3dadd( -38.632, 199.859, 6.10965, 0.37 ) }
    dend_38 { pt3dadd( -38.7667, 200.378, 5.98831, 0.52 ) }
    dend_38 { pt3dadd( -38.8363, 200.627, 5.94247, 0.52 ) }
    dend_38 { pt3dadd( -39.0505, 201.32, 5.86425, 0.22 ) }
    dend_38 { pt3dadd( -39.228, 201.832, 5.85682, 0.22 ) }
    dend_38 { pt3dadd( -39.6174, 202.775, 5.94425, 0.66 ) }
    dend_38 { pt3dadd( -39.7019, 202.979, 5.98413, 0.66 ) }
    dend_38 { pt3dadd( -39.9276, 203.594, 6.14418, 0.52 ) }
    dend_38 { pt3dadd( -40.052, 204.018, 6.26644, 0.74 ) }
    dend_38 { pt3dadd( -40.1959, 204.703, 6.50323, 0.29 ) }
    dend_38 { pt3dadd( -40.2749, 205.231, 6.73651, 0.29 ) }
    dend_38 { pt3dadd( -40.323, 205.753, 7.01149, 0.29 ) }
    dend_38 { pt3dadd( -40.3539, 206.227, 7.26971, 0.29 ) }
    dend_38 { pt3dadd( -40.381, 206.694, 7.53586, 0.29 ) }
    dend_38 { pt3dadd( -40.4235, 207.186, 7.79278, 0.44 ) }
    dend_38 { pt3dadd( -40.4808, 207.694, 8.01334, 0.29 ) }
    dend_38 { pt3dadd( -40.5216, 208.025, 8.13917, 0.29 ) }
    dend_38 { pt3dadd( -40.6376, 208.656, 8.35873, 0.29 ) }
    dend_38 { pt3dadd( -40.761, 209.135, 8.52008, 0.22 ) }
    dend_38 { pt3dadd( -41.0246, 209.949, 8.75212, 0.22 ) }
    dend_38 { pt3dadd( -41.3279, 210.729, 8.92653, 0.22 ) }
    dend_38 { pt3dadd( -41.506, 211.141, 8.99672, 0.22 ) }
    dend_38 { pt3dadd( -41.6909, 211.546, 9.04668, 0.29 ) }
    dend_38 { pt3dadd( -42.0067, 212.175, 9.08643, 0.29 ) }
    dend_38 { pt3dadd( -42.2911, 212.664, 9.07212, 0.29 ) }
    dend_38 { pt3dadd( -42.5031, 212.997, 9.03322, 0.29 ) }
    dend_38 { pt3dadd( -42.6901, 213.298, 8.98, 0.29 ) }
    dend_38 { pt3dadd( -43.0046, 213.899, 8.8592, 0.29 ) }
    dend_38 { pt3dadd( -43.3836, 214.739, 8.69308, 0.22 ) }
    dend_38 { pt3dadd( -43.6325, 215.343, 8.57921, 0.37 ) }
    dend_38 { pt3dadd( -43.8063, 215.777, 8.49822, 0.22 ) }
    dend_38 { pt3dadd( -44.0739, 216.449, 8.36993, 0.22 ) }
    dend_38 { pt3dadd( -44.3965, 217.217, 8.2314, 0.22 ) }
    dend_38 { pt3dadd( -44.59, 217.647, 8.16485, 0.29 ) }
    dend_38 { pt3dadd( -44.6807, 217.84, 8.13836, 0.29 ) }
    dend_38 { pt3dadd( -45.0729, 218.581, 8.02154, 0.22 ) }
    dend_38 { pt3dadd( -45.3435, 219.015, 7.93792, 0.22 ) }
    dend_38 { pt3dadd( -45.6233, 219.409, 7.84778, 0.37 ) }
    dend_38 { pt3dadd( -45.9236, 219.809, 7.73025, 0.37 ) }
    dend_38 { pt3dadd( -46.236, 220.234, 7.56025, 0.22 ) }
    dend_38 { pt3dadd( -46.6285, 220.777, 7.31564, 0.37 ) }
    dend_38 { pt3dadd( -46.9425, 221.217, 7.1055, 0.22 ) }
    dend_38 { pt3dadd( -47.2239, 221.638, 6.89104, 0.22 ) }
    dend_38 { pt3dadd( -47.5184, 222.134, 6.63698, 0.52 ) }
    dend_38 { pt3dadd( -47.945, 222.896, 6.23449, 0.29 ) }
    dend_38 { pt3dadd( -48.1654, 223.284, 6.02613, 0.29 ) }
    dend_38 { pt3dadd( -48.3679, 223.636, 5.84424, 0.29 ) }
    dend_38 { pt3dadd( -48.5636, 223.979, 5.67216, 0.29 ) }
    dend_38 { pt3dadd( -48.8278, 224.424, 5.48764, 0.29 ) }
    dend_38 { pt3dadd( -49.1478, 224.923, 5.34464, 0.29 ) }
    dend_38 { pt3dadd( -49.5054, 225.414, 5.28369, 0.29 ) }
    dend_38 { pt3dadd( -49.8983, 225.87, 5.27335, 0.29 ) }
    dend_38 { pt3dadd( -50.156, 226.126, 5.29944, 0.29 ) }
    dend_38 { pt3dadd( -50.5381, 226.469, 5.3592, 0.29 ) }
    dend_38 { pt3dadd( -50.6711, 226.577, 5.39003, 0.29 ) }
    dend_38 { pt3dadd( -51.1932, 227.003, 5.55643, 0.29 ) }
    dend_38 { pt3dadd( -51.532, 227.279, 5.67668, 1.33 ) }
    dend_38 { pt3dadd( -51.7137, 227.427, 5.73868, 1.69 ) }
    dend_38 { pt3dadd( -52.3619, 227.957, 5.95515, 0.22 ) }
    dend_38 { pt3dadd( -52.6989, 228.227, 6.06069, 0.22 ) }
    dend_38 { pt3dadd( -52.9324, 228.412, 6.13234, 0.37 ) }
    dend_38 { pt3dadd( -53.3017, 228.689, 6.2495, 0.37 ) }
    dend_38 { pt3dadd( -53.7079, 228.967, 6.39046, 0.37 ) }
    dend_38 { pt3dadd( -53.9034, 229.079, 6.46746, 0.37 ) }
    dend_38 { pt3dadd( -54.5282, 229.354, 6.75101, 0.22 ) }
    dend_38 { pt3dadd( -54.8551, 229.456, 6.88252, 0.22 ) }
    dend_38 { pt3dadd( -55.3516, 229.523, 7.1069, 0.22 ) }
    dend_38 { pt3dadd( -55.7618, 229.506, 7.29383, 0.29 ) }
    dend_38 { pt3dadd( -56.0575, 229.468, 7.43083, 0.29 ) }
    dend_38 { pt3dadd( -56.4101, 229.395, 7.59936, 0.22 ) }
    dend_38 { pt3dadd( -57.0146, 229.194, 7.91038, 0.22 ) }
    dend_38 { pt3dadd( -57.7888, 228.853, 8.30414, 0.22 ) }
    dend_38 { pt3dadd( -58.4864, 228.477, 8.65155, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.8989, 143.301, 7.49808, 0.22 ) }
    dend_37 { pt3dadd( -20.7405, 144.12, 7.30811, 0.22 ) }
    dend_37 { pt3dadd( -20.211, 144.464, 7.21986, 0.22 ) }
    dend_37 { pt3dadd( -18.8667, 145.335, 6.9958, 0.22 ) }
    dend_37 { pt3dadd( -18.1134, 145.824, 6.87024, 0.22 ) }
    dend_37 { pt3dadd( -17.6662, 146.114, 6.79571, 0.22 ) }
    dend_37 { pt3dadd( -17.0255, 146.529, 6.68892, 0.37 ) }
    dend_37 { pt3dadd( -16.225, 146.924, 6.55553, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 90/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -36.2593, 103.157, 3.86512, 0.29 ) }
    dend_31 { pt3dadd( -36.4708, 103.432, 2.31517, 0.29 ) }
    dend_31 { pt3dadd( -36.6267, 103.561, 1.69914, 0.29 ) }
    dend_31 { pt3dadd( -36.8195, 103.67, 1.22103, 0.44 ) }
    dend_31 { pt3dadd( -37.4472, 104.007, -0.00181628, 0.59 ) }
    dend_31 { pt3dadd( -38.0751, 104.394, -1.07423, 0.44 ) }
    dend_31 { pt3dadd( -38.4599, 104.663, -1.65437, 0.37 ) }
    dend_31 { pt3dadd( -38.8078, 104.9, -2.03261, 0.37 ) }
    dend_31 { pt3dadd( -39.3306, 105.273, -2.48154, 0.37 ) }
    dend_31 { pt3dadd( -39.6764, 105.528, -2.71422, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( -40.4744, 106.127, -3.11999, 0.52 ) }
    dend_31 { pt3dadd( -40.9924, 106.495, -3.34668, 0.52 ) }
    dend_31 { pt3dadd( -41.426, 106.799, -3.5463, 0.52 ) }
    dend_31 { pt3dadd( -41.8372, 107.096, -3.73693, 0.52 ) }
    dend_31 { pt3dadd( -42.3739, 107.491, -3.96796, 0.59 ) }
    dend_31 { pt3dadd( -42.7582, 107.771, -4.13168, 0.44 ) }
    dend_31 { pt3dadd( -43.3267, 108.21, -4.38088, 0.59 ) }
    dend_31 { pt3dadd( -43.8727, 108.708, -4.67443, 0.66 ) }
    dend_31 { pt3dadd( -44.1847, 109.07, -4.87879, 0.66 ) }
    dend_31 { pt3dadd( -44.4329, 109.472, -5.10714, 0.37 ) }
    dend_31 { pt3dadd( -44.6718, 109.899, -5.44656, 0.37 ) }
    dend_31 { pt3dadd( -44.8934, 110.267, -5.79443, 0.37 ) }
    dend_31 { pt3dadd( -45.036, 110.455, -6.02995, 0.81 ) }
    dend_31 { pt3dadd( -45.1961, 110.597, -6.2819, 1.03 ) }
    dend_31 { pt3dadd( -45.6007, 110.769, -6.84999, 1.03 ) }
    dend_31 { pt3dadd( -46.839, 110.859, -8.33711, 0.37 ) }
    dend_31 { pt3dadd( -47.2322, 110.816, -8.72618, 0.29 ) }
    dend_31 { pt3dadd( -47.7289, 110.719, -9.14425, 0.29 ) }
    dend_31 { pt3dadd( -48.061, 110.641, -9.38601, 0.44 ) }
    dend_31 { pt3dadd( -48.7096, 110.489, -9.76266, 0.44 ) }
    dend_31 { pt3dadd( -49.3089, 110.369, -9.99967, 0.44 ) }
    dend_31 { pt3dadd( -49.8149, 110.332, -10.0992, 0.44 ) }
    dend_31 { pt3dadd( -50.2274, 110.331, -10.1663, 0.59 ) }
    dend_31 { pt3dadd( -50.5722, 110.329, -10.2061, 0.59 ) }
    dend_31 { pt3dadd( -51.2752, 110.308, -10.2651, 0.37 ) }
    dend_31 { pt3dadd( -51.8144, 110.282, -10.3015, 0.37 ) }
    dend_31 { pt3dadd( -52.3909, 110.252, -10.341, 0.37 ) }
    dend_31 { pt3dadd( -53.1504, 110.215, -10.3936, 0.37 ) }
    dend_31 { pt3dadd( -53.9789, 110.189, -10.4421, 0.37 ) }
    dend_31 { pt3dadd( -54.5304, 110.188, -10.4637, 0.37 ) }
    dend_31 { pt3dadd( -55.3334, 110.199, -10.4693, 0.37 ) }
    dend_31 { pt3dadd( -56.1108, 110.221, -10.4412, 0.37 ) }
    dend_31 { pt3dadd( -56.8164, 110.26, -10.4103, 0.37 ) }
    dend_31 { pt3dadd( -57.3089, 110.308, -10.3958, 0.74 ) }
    dend_31 { pt3dadd( -57.7277, 110.364, -10.3873, 0.74 ) }
    dend_31 { pt3dadd( -58.741, 110.512, -10.3827, 0.37 ) }
    dend_31 { pt3dadd( -59.4259, 110.615, -10.3869, 0.37 ) }
    dend_31 { pt3dadd( -60.158, 110.73, -10.4072, 0.37 ) }
    dend_31 { pt3dadd( -60.6122, 110.826, -10.4296, 0.37 ) }
    dend_31 { pt3dadd( -61.2584, 110.99, -10.4782, 0.29 ) }
    dend_31 { pt3dadd( -61.7722, 111.17, -10.5316, 0.29 ) }
    dend_31 { pt3dadd( -62.178, 111.402, -10.5879, 0.44 ) }
    dend_31 { pt3dadd( -62.412, 111.583, -10.6145, 0.59 ) }
    dend_31 { pt3dadd( -62.7033, 111.857, -10.6102, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 44/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -36.2593, 103.157, 3.86512, 0.59 ) }
    dend_26 { pt3dadd( -37.8494, 103.476, 5.94346, 0.59 ) }
    dend_26 { pt3dadd( -38.5675, 103.772, 6.75268, 0.59 ) }
    dend_26 { pt3dadd( -39.4049, 104.173, 7.54443, 0.59 ) }
    dend_26 { pt3dadd( -40.0788, 104.516, 8.09975, 0.59 ) }
    dend_26 { pt3dadd( -40.8571, 104.905, 8.65262, 0.59 ) }
    dend_26 { pt3dadd( -42.1331, 105.488, 9.42547, 0.52 ) }
    dend_26 { pt3dadd( -43.0671, 105.932, 9.83555, 0.52 ) }
    dend_26 { pt3dadd( -44.1742, 106.456, 10.2667, 0.66 ) }
    dend_26 { pt3dadd( -44.7613, 106.722, 10.487, 0.66 ) }
    dend_26 { pt3dadd( -45.6004, 107.064, 10.8197, 0.52 ) }
    dend_26 { pt3dadd( -46.9442, 107.553, 11.4339, 0.52 ) }
    dend_26 { pt3dadd( -47.7851, 107.865, 11.8802, 0.52 ) }
    dend_26 { pt3dadd( -48.446, 108.17, 12.2823, 0.52 ) }
    dend_26 { pt3dadd( -49.0285, 108.494, 12.6209, 0.74 ) }
    dend_26 { pt3dadd( -49.6742, 108.854, 12.9486, 0.74 ) }
    dend_26 { pt3dadd( -50.5941, 109.329, 13.3175, 0.37 ) }
    dend_26 { pt3dadd( -51.3823, 109.647, 13.5008, 0.37 ) }
    dend_26 { pt3dadd( -52.4805, 109.952, 13.6019, 0.37 ) }
    dend_26 { pt3dadd( -54.2096, 110.292, 13.7276, 0.37 ) }
    dend_26 { pt3dadd( -55.4875, 110.503, 13.8132, 0.29 ) }
    dend_26 { pt3dadd( -56.6332, 110.703, 13.923, 0.37 ) }
    dend_26 { pt3dadd( -57.7548, 110.931, 14.126, 0.44 ) }
    dend_26 { pt3dadd( -58.5298, 111.122, 14.333, 0.66 ) }
    dend_26 { pt3dadd( -59.6782, 111.469, 14.7175, 0.59 ) }
    dend_26 { pt3dadd( -60.5194, 111.788, 15.0613, 0.44 ) }
    dend_26 { pt3dadd( -61.6467, 112.277, 15.5225, 0.44 ) }
    dend_26 { pt3dadd( -62.7917, 112.754, 15.9386, 0.44 ) }
    dend_26 { pt3dadd( -63.8128, 113.106, 16.2497, 0.44 ) }
    dend_26 { pt3dadd( -65.0727, 113.437, 16.6378, 0.37 ) }
    dend_26 { pt3dadd( -65.9605, 113.612, 16.9007, 0.37 ) }
    dend_26 { pt3dadd( -66.8195, 113.719, 17.1413, 0.37 ) }
    dend_26 { pt3dadd( -68.7812, 113.858, 17.6339, 0.37 ) }
    dend_26 { pt3dadd( -69.6795, 113.907, 17.7974, 0.37 ) }
    dend_26 { pt3dadd( -71.4535, 114.088, 18.0467, 0.29 ) }
    dend_26 { pt3dadd( -72.8369, 114.356, 18.1779, 0.29 ) }
    dend_26 { pt3dadd( -74.4052, 114.796, 18.2411, 0.29 ) }
    dend_26 { pt3dadd( -74.9684, 114.997, 18.2327, 0.81 ) }
    dend_26 { pt3dadd( -76.4636, 115.591, 17.9743, 0.81 ) }
    dend_26 { pt3dadd( -78.0108, 116.128, 17.5099, 0.37 ) }
    dend_26 { pt3dadd( -79.6982, 116.596, 16.8602, 0.29 ) }
    dend_26 { pt3dadd( -80.5055, 116.772, 16.5365, 0.29 ) }
    dend_26 { pt3dadd( -81.3597, 116.909, 16.2247, 0.29 ) }
    dend_26 { pt3dadd( -84.0586, 117.104, 15.3443, 0.29 ) }
    dend_26 { pt3dadd( -86.3223, 117.007, 14.7193, 0.29 ) }
    dend_26 { pt3dadd( -87.201, 116.87, 14.4854, 0.52 ) }
    dend_26 { pt3dadd( -87.7169, 116.757, 14.3578, 0.52 ) }
    dend_26 { pt3dadd( -88.924, 116.469, 14.0869, 0.29 ) }
    dend_26 { pt3dadd( -90.1613, 116.164, 13.8912, 0.29 ) }
    dend_26 { pt3dadd( -91.4941, 115.815, 13.8956, 0.29 ) }
    dend_26 { pt3dadd( -92.536, 115.543, 13.9627, 0.52 ) }
    dend_26 { pt3dadd( -92.8981, 115.444, 13.9785, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.32579, -152.677, 9.25513, 0.22 ) }
    dend_21 { pt3dadd( -2.96823, -152.753, 8.89387, 0.22 ) }
    dend_21 { pt3dadd( -3.76652, -152.847, 8.44497, 0.22 ) }
    dend_21 { pt3dadd( -12.3476, -153.861, 4.3134, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.32579, -152.677, 9.25513, 0.22 ) }
    dend_20 { pt3dadd( -3.4234, -152.685, 9.0787, 0.22 ) }
    dend_20 { pt3dadd( -4.56285, -152.692, 8.89554, 0.22 ) }
    dend_20 { pt3dadd( -5.60238, -152.7, 8.72844, 0.22 ) }
    dend_20 { pt3dadd( -6.94234, -152.709, 8.51305, 0.22 ) }
    dend_20 { pt3dadd( -8.81113, -152.722, 8.21265, 0.22 ) }
    dend_20 { pt3dadd( -9.63783, -152.728, 8.07976, 0.22 ) }
    dend_20 { pt3dadd( -21.9294, -153.997, 6.27847, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.62973, -229.99, 27.9955, 0.96 ) }
    dend_5 { pt3dadd( 4.78374, -232.053, 27.7684, 0.96 ) }
    dend_5 { pt3dadd( 4.91489, -233.568, 27.7862, 0.74 ) }
    dend_5 { pt3dadd( 5.01804, -234.797, 27.909, 0.66 ) }
    dend_5 { pt3dadd( 5.10909, -236.078, 28.1308, 1.11 ) }
    dend_5 { pt3dadd( 5.16061, -236.797, 28.3023, 1.25 ) }
    dend_5 { pt3dadd( 5.30638, -239.026, 28.9144, 0.88 ) }
    dend_5 { pt3dadd( 5.37454, -240.19, 29.3755, 0.29 ) }
    dend_5 { pt3dadd( 5.37861, -241.372, 29.9284, 0.29 ) }
    dend_5 { pt3dadd( 5.34949, -242.75, 30.7088, 0.29 ) }
    dend_5 { pt3dadd( 5.31912, -243.823, 31.3819, 0.59 ) }
    dend_5 { pt3dadd( 5.29488, -244.613, 31.8918, 0.66 ) }
    dend_5 { pt3dadd( 5.24347, -245.641, 32.533, 0.29 ) }
    dend_5 { pt3dadd( 5.23451, -246.255, 32.9335, 0.29 ) }
    dend_5 { pt3dadd( 5.29223, -248.174, 34.1365, 1.11 ) }
    dend_5 { pt3dadd( 5.36834, -249.094, 34.6991, 1.25 ) }
    dend_5 { pt3dadd( 5.53782, -250.728, 35.6775, 0.74 ) }
    dend_5 { pt3dadd( 5.61455, -251.254, 35.9904, 1.03 ) }
    dend_5 { pt3dadd( 5.78778, -252.12, 36.4806, 1.03 ) }
    dend_5 { pt3dadd( 6.06125, -253.324, 37.1088, 0.88 ) }
    dend_5 { pt3dadd( 6.38817, -254.959, 37.7688, 0.52 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 29/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.62973, -229.99, 27.9955, 0.22 ) }
    dend_4 { pt3dadd( 4.63467, -231.445, 27.8953, 0.22 ) }
    dend_4 { pt3dadd( 4.64814, -232.854, 27.8143, 0.22 ) }
    dend_4 { pt3dadd( 4.71342, -233.876, 27.772, 0.22 ) }
    dend_4 { pt3dadd( 4.85246, -235.053, 27.7319, 0.22 ) }
    dend_4 { pt3dadd( 5.13177, -236.628, 27.7106, 0.22 ) }
    dend_4 { pt3dadd( 5.34235, -237.74, 27.7399, 0.22 ) }
    dend_4 { pt3dadd( 5.60603, -238.872, 27.8474, 0.22 ) }
    dend_4 { pt3dadd( 5.86322, -239.899, 28.0365, 0.22 ) }
    dend_4 { pt3dadd( 5.96252, -240.527, 28.1769, 0.22 ) }
    dend_4 { pt3dadd( 5.88612, -242.045, 28.5664, 0.22 ) }
    dend_4 { pt3dadd( 5.41189, -243.133, 28.8668, 0.22 ) }
    dend_4 { pt3dadd( 4.74828, -244.014, 29.1066, 0.22 ) }
    dend_4 { pt3dadd( 4.1643, -244.502, 29.2171, 0.22 ) }
    dend_4 { pt3dadd( 2.45193, -245.639, 29.4121, 0.22 ) }
    dend_4 { pt3dadd( 0.946929, -246.434, 29.4771, 0.22 ) }
    dend_4 { pt3dadd( -0.0740022, -246.771, 29.4044, 0.22 ) }
    dend_4 { pt3dadd( -0.79938, -257.406, 30.205, 0.22 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 47/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 26.0171, 54.2695, -114.805, 0.37 ) }
    dend_104 { pt3dadd( 26.1856, 53.7093, -114.567, 0.37 ) }
    dend_104 { pt3dadd( 26.6581, 52.2857, -113.959, 0.29 ) }
    dend_104 { pt3dadd( 26.9762, 51.3969, -113.594, 0.44 ) }
    dend_104 { pt3dadd( 27.2651, 50.6082, -113.293, 0.37 ) }
    dend_104 { pt3dadd( 28.0538, 48.5853, -112.413, 0.96 ) }
    dend_104 { pt3dadd( 28.4247, 47.7031, -111.999, 0.81 ) }
    dend_104 { pt3dadd( 28.7695, 46.9461, -111.59, 0.59 ) }
    dend_104 { pt3dadd( 29.1102, 46.3077, -111.198, 0.59 ) }
    dend_104 { pt3dadd( 29.5488, 45.5442, -110.727, 0.44 ) }
    dend_104 { pt3dadd( 30.4338, 44.0075, -109.771, 0.66 ) }
    dend_104 { pt3dadd( 30.729, 43.4954, -109.447, 0.66 ) }
    dend_104 { pt3dadd( 30.9998, 43.034, -109.107, 0.66 ) }
    dend_104 { pt3dadd( 31.4865, 42.2531, -108.505, 0.37 ) }
    dend_104 { pt3dadd( 32.0343, 41.3462, -107.84, 0.37 ) }
    dend_104 { pt3dadd( 32.8177, 39.9987, -106.953, 0.74 ) }
    dend_104 { pt3dadd( 33.4597, 38.8628, -106.314, 0.44 ) }
    dend_104 { pt3dadd( 34.2666, 37.4473, -105.585, 0.37 ) }
    dend_104 { pt3dadd( 34.991, 36.1954, -105.01, 0.29 ) }
    dend_104 { pt3dadd( 35.5711, 35.2029, -104.604, 0.44 ) }
    dend_104 { pt3dadd( 36.1662, 34.1991, -104.261, 0.52 ) }
    dend_104 { pt3dadd( 36.5718, 33.4676, -104.09, 0.59 ) }
    dend_104 { pt3dadd( 37.0518, 32.4791, -103.932, 0.59 ) }
    dend_104 { pt3dadd( 37.601, 31.2485, -103.775, 0.44 ) }
    dend_104 { pt3dadd( 38.0059, 30.2836, -103.637, 0.96 ) }
    dend_104 { pt3dadd( 38.1701, 29.8496, -103.602, 1.18 ) }
    dend_104 { pt3dadd( 38.3672, 29.277, -103.586, 1.18 ) }
    dend_104 { pt3dadd( 38.6397, 28.4145, -103.599, 0.81 ) }
    dend_104 { pt3dadd( 38.9192, 27.4743, -103.653, 0.66 ) }
    dend_104 { pt3dadd( 39.2272, 26.5238, -103.737, 0.66 ) }
    dend_104 { pt3dadd( 39.893, 24.6251, -103.951, 0.29 ) }
    dend_104 { pt3dadd( 40.2185, 23.7218, -104.078, 0.29 ) }
    dend_104 { pt3dadd( 40.2829, 23.5495, -104.11, 0.44 ) }
    dend_104 { pt3dadd( 40.5483, 22.8717, -104.28, 0.15 ) }
    dend_104 { pt3dadd( 40.818, 22.1502, -104.507, 0.15 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 82/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 26.0171, 54.2695, -114.805, 1.03 ) }
    dend_103 { pt3dadd( 26.5057, 54.6124, -115.899, 1.03 ) }
    dend_103 { pt3dadd( 26.8962, 55.0043, -116.951, 1.18 ) }
    dend_103 { pt3dadd( 27.3251, 55.5927, -118.286, 1.4 ) }
    dend_103 { pt3dadd( 28.2797, 57.0642, -121.255, 1.18 ) }
    dend_103 { pt3dadd( 28.689, 57.7337, -122.463, 1.03 ) }
    dend_103 { pt3dadd( 29.0315, 58.2906, -123.382, 1.03 ) }
    dend_103 { pt3dadd( 29.7609, 59.4135, -125.07, 0.96 ) }
    dend_103 { pt3dadd( 30.4012, 60.3863, -126.351, 0.88 ) }
    dend_103 { pt3dadd( 30.7187, 60.8797, -126.91, 0.88 ) }
    dend_103 { pt3dadd( 31.0655, 61.4994, -127.458, 1.33 ) }
    dend_103 { pt3dadd( 31.5825, 62.472, -128.331, 0.96 ) }
    dend_103 { pt3dadd( 32.0156, 63.3511, -129.185, 0.81 ) }
    dend_103 { pt3dadd( 32.5852, 64.643, -130.523, 0.81 ) }
    dend_103 { pt3dadd( 32.9277, 65.7251, -131.695, 0.81 ) }
    dend_103 { pt3dadd( 33.033, 66.3388, -132.373, 0.66 ) }
    dend_103 { pt3dadd( 33.0727, 67.3977, -133.494, 0.66 ) }
    dend_103 { pt3dadd( 32.973, 68.689, -134.79, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_103 { pt3dadd( 32.8407, 69.4989, -135.572, 1.03 ) }
    dend_103 { pt3dadd( 32.601, 70.3632, -136.347, 0.74 ) }
    dend_103 { pt3dadd( 32.2081, 71.368, -137.195, 0.74 ) }
    dend_103 { pt3dadd( 31.8603, 72.1372, -137.84, 1.11 ) }
    dend_103 { pt3dadd( 31.3068, 73.2806, -138.713, 1.47 ) }
    dend_103 { pt3dadd( 31.1919, 73.5005, -138.892, 1.47 ) }
    dend_103 { pt3dadd( 30.3398, 74.9897, -140.132, 0.66 ) }
    dend_103 { pt3dadd( 29.7246, 76.0471, -141.084, 0.88 ) }
    dend_103 { pt3dadd( 29.251, 76.9418, -141.875, 0.96 ) }
    dend_103 { pt3dadd( 28.8537, 77.8169, -142.62, 1.18 ) }
    dend_103 { pt3dadd( 28.2296, 79.4199, -143.816, 1.4 ) }
    dend_103 { pt3dadd( 27.8983, 80.5149, -144.541, 0.66 ) }
    dend_103 { pt3dadd( 27.4811, 82.5457, -145.72, 0.96 ) }
    dend_103 { pt3dadd( 27.3359, 83.4951, -146.211, 0.52 ) }
    dend_103 { pt3dadd( 27.1639, 84.7578, -146.773, 0.52 ) }
    dend_103 { pt3dadd( 27.0077, 85.8619, -147.195, 0.81 ) }
    dend_103 { pt3dadd( 26.8348, 86.8723, -147.495, 0.96 ) }
    dend_103 { pt3dadd( 26.6435, 87.8653, -147.757, 0.96 ) }
    dend_103 { pt3dadd( 26.4416, 88.8982, -147.966, 0.74 ) }
    dend_103 { pt3dadd( 26.0724, 90.7347, -148.306, 0.66 ) }
    dend_103 { pt3dadd( 25.8921, 91.7633, -148.471, 0.66 ) }
    dend_103 { pt3dadd( 25.7302, 92.9527, -148.662, 0.74 ) }
    dend_103 { pt3dadd( 25.5982, 94.2914, -148.878, 0.74 ) }
    dend_103 { pt3dadd( 25.5161, 95.5564, -149.093, 0.74 ) }
    dend_103 { pt3dadd( 25.4559, 97.2411, -149.394, 1.11 ) }
    dend_103 { pt3dadd( 25.4346, 98.0938, -149.542, 1.18 ) }
    dend_103 { pt3dadd( 25.4111, 98.7338, -149.67, 1.18 ) }
    dend_103 { pt3dadd( 25.2901, 99.9717, -149.942, 0.96 ) }
    dend_103 { pt3dadd( 24.9403, 101.816, -150.371, 0.74 ) }
    dend_103 { pt3dadd( 24.6379, 102.905, -150.62, 0.66 ) }
    dend_103 { pt3dadd( 24.2459, 103.93, -150.846, 0.52 ) }
    dend_103 { pt3dadd( 23.8127, 104.807, -151.02, 0.52 ) }
    dend_103 { pt3dadd( 23.081, 106.003, -151.22, 0.81 ) }
    dend_103 { pt3dadd( 22.5672, 106.693, -151.303, 1.03 ) }
    dend_103 { pt3dadd( 22.0266, 107.311, -151.386, 0.66 ) }
    dend_103 { pt3dadd( 21.2235, 108.165, -151.529, 0.81 ) }
    dend_103 { pt3dadd( 20.569, 108.851, -151.658, 0.81 ) }
    dend_103 { pt3dadd( 19.8363, 109.635, -151.812, 0.81 ) }
    dend_103 { pt3dadd( 19.1914, 110.343, -151.949, 0.66 ) }
    dend_103 { pt3dadd( 18.5686, 111.009, -152.094, 0.66 ) }
    dend_103 { pt3dadd( 17.6062, 111.977, -152.33, 0.81 ) }
    dend_103 { pt3dadd( 16.991, 112.545, -152.482, 0.81 ) }
    dend_103 { pt3dadd( 16.0894, 113.307, -152.706, 0.66 ) }
    dend_103 { pt3dadd( 15.2638, 113.959, -152.962, 0.81 ) }
    dend_103 { pt3dadd( 14.4922, 114.541, -153.229, 0.66 ) }
    dend_103 { pt3dadd( 13.7655, 115.14, -153.602, 0.66 ) }
    dend_103 { pt3dadd( 13.0839, 115.785, -154.095, 0.66 ) }
    dend_103 { pt3dadd( 12.4573, 116.552, -154.723, 0.88 ) }
    dend_103 { pt3dadd( 11.9153, 117.62, -155.651, 0.88 ) }
    dend_103 { pt3dadd( 11.8224, 118.27, -156.228, 1.03 ) }
    dend_103 { pt3dadd( 12.1145, 120.16, -158.228, 0.37 ) }
    dend_103 { pt3dadd( 12.3097, 120.563, -158.88, 0.37 ) }
    dend_103 { pt3dadd( 12.603, 120.929, -159.663, 0.29 ) }
    dend_103 { pt3dadd( 12.9329, 121.253, -160.671, 0.29 ) }
    dend_103 { pt3dadd( 13.4161, 121.689, -162.368, 1.03 ) }
    dend_103 { pt3dadd( 14.1299, 122.39, -165.373, 1.62 ) }
    dend_103 { pt3dadd( 14.954, 123.338, -169.615, 1.18 ) }
    dend_103 { pt3dadd( 15.1807, 123.703, -171.185, 0.81 ) }
    dend_103 { pt3dadd( 15.6394, 125.035, -176.4, 0.52 ) }
    dend_103 { pt3dadd( 15.6747, 125.277, -177.218, 0.52 ) }
    dend_103 { pt3dadd( 15.6713, 125.775, -178.61, 0.52 ) }
    dend_103 { pt3dadd( 15.6034, 126.264, -179.555, 0.52 ) }
    dend_103 { pt3dadd( 15.4758, 126.931, -180.35, 0.52 ) }
    dend_103 { pt3dadd( 15.2611, 128.165, -181.382, 0.74 ) }
    dend_103 { pt3dadd( 15.1879, 129.05, -181.842, 0.44 ) }
    dend_103 { pt3dadd( 15.1468, 129.873, -182.25, 0.44 ) }
    dend_103 { pt3dadd( 15.1293, 130.618, -182.581, 0.66 ) }
    dend_103 { pt3dadd( 15.1181, 131.839, -183.054, 0.37 ) }
    dend_103 { pt3dadd( 15.1256, 132.659, -183.323, 0.37 ) }
    dend_103 { pt3dadd( 15.0791, 134.039, -183.717, 0.52 ) }
    dend_103 { pt3dadd( 14.8873, 135.578, -184.107, 0.52 ) }
    dend_103 { pt3dadd( 14.6749, 136.732, -184.328, 0.74 ) }
    dend_103 { pt3dadd( 14.5448, 137.354, -184.415, 0.74 ) }
    dend_103 { pt3dadd( 14.3057, 138.472, -184.508, 0.52 ) }
    dend_103 { pt3dadd( 14.088, 139.584, -184.517, 0.74 ) }
    dend_103 { pt3dadd( 13.7253, 141.436, -184.394, 0.29 ) }
    dend_103 { pt3dadd( 13.479, 142.584, -184.286, 0.52 ) }
    dend_103 { pt3dadd( 13.2134, 143.606, -184.174, 0.66 ) }
    dend_103 { pt3dadd( 13.0202, 144.308, -184.085, 0.66 ) }
    dend_103 { pt3dadd( 12.6837, 145.758, -183.867, 0.44 ) }
    dend_103 { pt3dadd( 12.5377, 146.729, -183.712, 0.44 ) }
    dend_103 { pt3dadd( 12.4594, 147.712, -183.57, 0.44 ) }
    dend_103 { pt3dadd( 12.4111, 149.096, -183.495, 0.59 ) }
    dend_103 { pt3dadd( 12.4146, 150.354, -183.579, 0.96 ) }
    dend_103 { pt3dadd( 12.4749, 151.743, -183.913, 0.37 ) }
    dend_103 { pt3dadd( 12.5774, 152.87, -184.357, 0.37 ) }
    dend_103 { pt3dadd( 12.7195, 153.841, -184.844, 0.81 ) }
    dend_103 { pt3dadd( 13.0435, 155.59, -185.831, 0.44 ) }
    dend_103 { pt3dadd( 13.2969, 156.906, -186.617, 0.44 ) }
    dend_103 { pt3dadd( 13.5321, 158.236, -187.51, 0.44 ) }
    dend_103 { pt3dadd( 13.6583, 159.211, -188.225, 0.74 ) }
    dend_103 { pt3dadd( 13.7436, 160.042, -188.859, 0.74 ) }
    dend_103 { pt3dadd( 13.8525, 161.064, -189.604, 0.22 ) }
    dend_103 { pt3dadd( 13.973, 162.068, -190.118, 0.22 ) }
    // Section: dend_99, id: dend_99, parent: dend_89 (entry count 94/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -8.00711, 68.7591, -74.6968, 0.44 ) }
    dend_99 { pt3dadd( -7.63145, 70.0007, -74.6841, 0.44 ) }
    dend_99 { pt3dadd( -7.3671, 71.0282, -74.7324, 0.44 ) }
    dend_99 { pt3dadd( -7.01305, 72.6152, -74.9248, 0.81 ) }
    dend_99 { pt3dadd( -6.83094, 73.4498, -75.0899, 0.81 ) }
    dend_99 { pt3dadd( -6.66208, 74.2933, -75.3101, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_99 { pt3dadd( -6.57394, 74.8058, -75.4586, 1.03 ) }
    dend_99 { pt3dadd( -6.49703, 75.7585, -75.7419, 0.88 ) }
    dend_99 { pt3dadd( -6.47386, 76.5711, -76.0327, 0.74 ) }
    dend_99 { pt3dadd( -6.45233, 77.4066, -76.3676, 0.96 ) }
    dend_99 { pt3dadd( -6.4307, 78.1646, -76.6667, 0.96 ) }
    dend_99 { pt3dadd( -6.40103, 79.1084, -77.0084, 0.52 ) }
    dend_99 { pt3dadd( -6.35684, 79.9571, -77.2238, 0.52 ) }
    dend_99 { pt3dadd( -6.32553, 80.3339, -77.2434, 0.74 ) }
    dend_99 { pt3dadd( -6.22861, 81.0118, -77.1093, 0.44 ) }
    dend_99 { pt3dadd( -6.09489, 81.7704, -76.8046, 0.81 ) }
    dend_99 { pt3dadd( -5.96272, 82.4434, -76.4377, 0.81 ) }
    dend_99 { pt3dadd( -5.77395, 83.5166, -75.737, 0.88 ) }
    dend_99 { pt3dadd( -5.65307, 84.563, -74.9721, 1.11 ) }
    dend_99 { pt3dadd( -5.61252, 85.6554, -74.1447, 1.11 ) }
    dend_99 { pt3dadd( -5.64202, 86.4563, -73.5354, 0.52 ) }
    dend_99 { pt3dadd( -5.66711, 86.8826, -73.2079, 0.52 ) }
    dend_99 { pt3dadd( -5.70568, 87.4465, -72.793, 0.52 ) }
    dend_99 { pt3dadd( -5.69782, 87.9806, -72.4469, 0.52 ) }
    dend_99 { pt3dadd( -5.57593, 88.5711, -72.0986, 0.52 ) }
    dend_99 { pt3dadd( -5.29481, 89.1643, -71.7608, 0.52 ) }
    dend_99 { pt3dadd( -4.80378, 89.9025, -71.3395, 0.74 ) }
    dend_99 { pt3dadd( -4.4056, 90.4556, -71.0576, 0.66 ) }
    dend_99 { pt3dadd( -3.63732, 91.5493, -70.5771, 0.52 ) }
    dend_99 { pt3dadd( -3.23513, 92.1923, -70.3389, 0.52 ) }
    dend_99 { pt3dadd( -2.87825, 92.9144, -70.1113, 0.52 ) }
    dend_99 { pt3dadd( -2.62538, 93.7499, -69.8895, 0.66 ) }
    dend_99 { pt3dadd( -2.53376, 94.5458, -69.7016, 0.66 ) }
    dend_99 { pt3dadd( -2.5491, 95.4125, -69.4796, 0.37 ) }
    dend_99 { pt3dadd( -2.65799, 96.2928, -69.2373, 0.37 ) }
    dend_99 { pt3dadd( -2.76751, 96.9465, -69.0296, 0.37 ) }
    dend_99 { pt3dadd( -2.98491, 98.0466, -68.6272, 0.74 ) }
    dend_99 { pt3dadd( -3.19757, 98.9918, -68.2285, 0.96 ) }
    dend_99 { pt3dadd( -3.43402, 99.7886, -67.8559, 0.96 ) }
    dend_99 { pt3dadd( -3.75942, 100.605, -67.3757, 0.44 ) }
    dend_99 { pt3dadd( -4.09059, 101.254, -66.9191, 0.37 ) }
    dend_99 { pt3dadd( -4.45201, 101.859, -66.4424, 0.74 ) }
    dend_99 { pt3dadd( -4.82088, 102.38, -66.0019, 0.29 ) }
    dend_99 { pt3dadd( -5.51094, 103.226, -65.2576, 0.29 ) }
    dend_99 { pt3dadd( -6.62691, 104.395, -64.256, 1.03 ) }
    dend_99 { pt3dadd( -7.19598, 104.92, -63.8264, 0.96 ) }
    dend_99 { pt3dadd( -7.71417, 105.398, -63.4964, 0.44 ) }
    dend_99 { pt3dadd( -8.04745, 105.743, -63.3151, 0.44 ) }
    dend_99 { pt3dadd( -8.44286, 106.244, -63.1388, 0.44 ) }
    dend_99 { pt3dadd( -9.15647, 107.389, -62.8062, 0.52 ) }
    dend_99 { pt3dadd( -9.53845, 108.13, -62.6507, 0.74 ) }
    dend_99 { pt3dadd( -10.0818, 109.444, -62.3597, 0.37 ) }
    dend_99 { pt3dadd( -10.2839, 110.138, -62.1831, 0.37 ) }
    dend_99 { pt3dadd( -10.4145, 110.944, -61.9555, 0.37 ) }
    dend_99 { pt3dadd( -10.4736, 112.393, -61.5357, 0.52 ) }
    dend_99 { pt3dadd( -10.4383, 113.099, -61.3156, 0.52 ) }
    dend_99 { pt3dadd( -10.3856, 113.795, -61.1062, 0.52 ) }
    dend_99 { pt3dadd( -10.311, 114.715, -60.8552, 0.52 ) }
    dend_99 { pt3dadd( -10.2569, 115.708, -60.6253, 0.74 ) }
    dend_99 { pt3dadd( -10.2477, 116.384, -60.492, 0.74 ) }
    dend_99 { pt3dadd( -10.2843, 117.434, -60.3274, 0.44 ) }
    dend_99 { pt3dadd( -10.3426, 118.305, -60.1615, 0.44 ) }
    dend_99 { pt3dadd( -10.3924, 118.935, -60.0231, 0.59 ) }
    dend_99 { pt3dadd( -10.4387, 119.859, -59.8081, 0.59 ) }
    dend_99 { pt3dadd( -10.4422, 120.622, -59.6032, 0.74 ) }
    dend_99 { pt3dadd( -10.4036, 121.524, -59.333, 0.81 ) }
    dend_99 { pt3dadd( -10.2652, 122.618, -58.9587, 0.52 ) }
    dend_99 { pt3dadd( -10.1288, 123.311, -58.6859, 0.52 ) }
    dend_99 { pt3dadd( -9.88331, 124.267, -58.2769, 0.52 ) }
    dend_99 { pt3dadd( -9.65771, 124.926, -57.9899, 0.52 ) }
    dend_99 { pt3dadd( -9.46679, 125.379, -57.8307, 0.52 ) }
    dend_99 { pt3dadd( -8.98459, 126.394, -57.6025, 0.74 ) }
    dend_99 { pt3dadd( -8.48708, 127.441, -57.5082, 0.59 ) }
    dend_99 { pt3dadd( -8.0795, 128.414, -57.528, 0.59 ) }
    dend_99 { pt3dadd( -7.87786, 129.094, -57.6085, 0.96 ) }
    dend_99 { pt3dadd( -7.70755, 130.147, -57.8151, 0.59 ) }
    dend_99 { pt3dadd( -7.66805, 131.217, -58.0683, 0.59 ) }
    dend_99 { pt3dadd( -7.7403, 132.1, -58.3098, 0.44 ) }
    dend_99 { pt3dadd( -7.87226, 132.824, -58.5116, 0.44 ) }
    dend_99 { pt3dadd( -8.11728, 133.78, -58.7653, 0.44 ) }
    dend_99 { pt3dadd( -8.3544, 134.604, -58.9466, 0.37 ) }
    dend_99 { pt3dadd( -8.64147, 135.628, -59.1055, 0.29 ) }
    dend_99 { pt3dadd( -8.75518, 136.115, -59.1615, 0.44 ) }
    dend_99 { pt3dadd( -8.9036, 137.147, -59.2515, 0.44 ) }
    dend_99 { pt3dadd( -8.91993, 137.59, -59.2822, 0.29 ) }
    dend_99 { pt3dadd( -8.85767, 138.352, -59.3201, 0.29 ) }
    dend_99 { pt3dadd( -8.74688, 138.986, -59.3384, 0.44 ) }
    dend_99 { pt3dadd( -8.56596, 139.644, -59.3418, 0.44 ) }
    dend_99 { pt3dadd( -8.32033, 140.321, -59.3297, 0.44 ) }
    dend_99 { pt3dadd( -7.9716, 141.134, -59.2907, 0.29 ) }
    dend_99 { pt3dadd( -7.73352, 141.695, -59.2523, 0.29 ) }
    dend_99 { pt3dadd( -7.56462, 142.117, -59.2347, 0.44 ) }
    dend_99 { pt3dadd( -7.3208, 142.809, -59.2331, 0.44 ) }
    dend_99 { pt3dadd( -7.12739, 143.496, -59.2688, 0.22 ) }
    dend_99 { pt3dadd( -7.02576, 144.187, -59.3649, 0.29 ) }
    dend_99 { pt3dadd( -7.04579, 144.683, -59.4823, 0.29 ) }
    dend_99 { pt3dadd( -7.23548, 145.384, -59.7083, 0.29 ) }
    dend_99 { pt3dadd( -7.42375, 145.864, -59.8959, 0.59 ) }
    dend_99 { pt3dadd( -7.61093, 146.293, -60.0943, 0.59 ) }
    dend_99 { pt3dadd( -7.89574, 146.962, -60.4694, 0.29 ) }
    dend_99 { pt3dadd( -8.09067, 147.507, -60.8697, 0.29 ) }
    dend_99 { pt3dadd( -8.23179, 148.058, -61.3402, 0.44 ) }
    dend_99 { pt3dadd( -8.35232, 148.776, -61.9437, 0.44 ) }
    dend_99 { pt3dadd( -8.43068, 149.547, -62.5666, 0.74 ) }
    dend_99 { pt3dadd( -8.45419, 150.236, -63.1044, 1.11 ) }
    dend_99 { pt3dadd( -8.4346, 151.509, -64.0789, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_99 { pt3dadd( -8.42798, 151.988, -64.44, 0.66 ) }
    dend_99 { pt3dadd( -8.49831, 153.144, -65.3097, 0.44 ) }
    dend_99 { pt3dadd( -8.59613, 153.783, -65.7927, 0.37 ) }
    dend_99 { pt3dadd( -8.75605, 154.513, -66.313, 0.37 ) }
    dend_99 { pt3dadd( -9.06514, 155.58, -67.0038, 0.96 ) }
    dend_99 { pt3dadd( -9.24824, 156.112, -67.3071, 1.4 ) }
    dend_99 { pt3dadd( -9.6858, 157.279, -67.953, 0.59 ) }
    dend_99 { pt3dadd( -10.0902, 158.299, -68.4997, 0.37 ) }
    dend_99 { pt3dadd( -10.3769, 159.004, -68.8179, 0.37 ) }
    dend_99 { pt3dadd( -10.6419, 159.675, -69.0499, 0.29 ) }
    dend_99 { pt3dadd( -10.9664, 160.609, -69.2285, 0.44 ) }
    dend_99 { pt3dadd( -11.1437, 161.245, -69.2399, 0.44 ) }
    dend_99 { pt3dadd( -11.3391, 162.155, -69.1017, 0.29 ) }
    dend_99 { pt3dadd( -11.592, 163.389, -68.8185, 0.44 ) }
    dend_99 { pt3dadd( -11.7448, 164.168, -68.5992, 0.44 ) }
    dend_99 { pt3dadd( -11.9985, 165.64, -68.0972, 0.88 ) }
    dend_99 { pt3dadd( -12.2622, 167.133, -67.45, 0.44 ) }
    dend_99 { pt3dadd( -12.3906, 167.856, -67.0534, 0.37 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 18/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -8.00711, 68.7591, -74.6968, 0.52 ) }
    dend_90 { pt3dadd( -10.0505, 69.0469, -75.1603, 0.52 ) }
    dend_90 { pt3dadd( -11.4519, 69.2211, -75.5367, 0.44 ) }
    dend_90 { pt3dadd( -12.4413, 69.3964, -75.8623, 0.44 ) }
    dend_90 { pt3dadd( -13.3642, 69.6268, -76.1923, 0.59 ) }
    dend_90 { pt3dadd( -14.0911, 69.8567, -76.476, 0.74 ) }
    dend_90 { pt3dadd( -15.1378, 70.2445, -76.9682, 0.44 ) }
    dend_90 { pt3dadd( -16.0037, 70.6333, -77.514, 0.29 ) }
    dend_90 { pt3dadd( -17.0714, 71.1636, -78.324, 0.44 ) }
    dend_90 { pt3dadd( -17.7762, 71.514, -78.9145, 0.37 ) }
    dend_90 { pt3dadd( -18.5997, 71.9616, -79.6789, 0.37 ) }
    dend_90 { pt3dadd( -19.9502, 72.8281, -81.0529, 0.74 ) }
    dend_90 { pt3dadd( -20.7691, 73.4547, -81.9484, 0.88 ) }
    dend_90 { pt3dadd( -21.1068, 73.7412, -82.3173, 0.88 ) }
    dend_90 { pt3dadd( -21.6859, 74.2665, -82.9346, 0.37 ) }
    dend_90 { pt3dadd( -22.3066, 74.8993, -83.5627, 0.37 ) }
    dend_90 { pt3dadd( -23.0062, 75.7141, -84.1316, 0.37 ) }
    dend_90 { pt3dadd( -23.4083, 76.1975, -84.3426, 0.52 ) }
    dend_90 { pt3dadd( -23.8949, 76.6985, -84.5264, 0.52 ) }
    dend_90 { pt3dadd( -24.6668, 77.3047, -84.7707, 0.66 ) }
    dend_90 { pt3dadd( -25.4174, 77.746, -84.998, 0.66 ) }
    dend_90 { pt3dadd( -26.3725, 78.1469, -85.2529, 0.66 ) }
    dend_90 { pt3dadd( -27.1114, 78.3861, -85.4475, 0.37 ) }
    dend_90 { pt3dadd( -27.9771, 78.6127, -85.6741, 0.44 ) }
    dend_90 { pt3dadd( -29.4207, 78.9494, -86.0571, 0.44 ) }
    dend_90 { pt3dadd( -30.3753, 79.1424, -86.3151, 0.59 ) }
    dend_90 { pt3dadd( -31.4641, 79.3378, -86.6256, 0.66 ) }
    dend_90 { pt3dadd( -32.2196, 79.4742, -86.8554, 0.66 ) }
    dend_90 { pt3dadd( -33.3165, 79.6743, -87.2047, 0.37 ) }
    dend_90 { pt3dadd( -34.9067, 79.9718, -87.8034, 0.29 ) }
    dend_90 { pt3dadd( -35.7929, 80.1241, -88.216, 0.29 ) }
    dend_90 { pt3dadd( -36.6933, 80.2751, -88.7249, 0.29 ) }
    dend_90 { pt3dadd( -37.4903, 80.3963, -89.3097, 0.37 ) }
    dend_90 { pt3dadd( -38.1679, 80.4923, -89.9604, 0.52 ) }
    dend_90 { pt3dadd( -39.0072, 80.5986, -90.9435, 0.52 ) }
    dend_90 { pt3dadd( -39.6342, 80.7025, -91.7687, 0.66 ) }
    dend_90 { pt3dadd( -40.1526, 80.855, -92.5057, 0.66 ) }
    dend_90 { pt3dadd( -40.868, 81.1671, -93.5417, 0.44 ) }
    dend_90 { pt3dadd( -41.6903, 81.6101, -94.6902, 0.29 ) }
    dend_90 { pt3dadd( -42.2324, 81.9522, -95.3453, 0.29 ) }
    dend_90 { pt3dadd( -43.0878, 82.5109, -96.1361, 0.29 ) }
    dend_90 { pt3dadd( -43.997, 83.0819, -96.7671, 0.44 ) }
    dend_90 { pt3dadd( -44.8547, 83.5731, -97.2086, 0.74 ) }
    dend_90 { pt3dadd( -45.5141, 83.9136, -97.4441, 0.74 ) }
    dend_90 { pt3dadd( -46.8515, 84.4922, -97.7454, 0.52 ) }
    dend_90 { pt3dadd( -48.0295, 84.9042, -97.933, 0.52 ) }
    dend_90 { pt3dadd( -49.3088, 85.2568, -98.0706, 0.74 ) }
    dend_90 { pt3dadd( -50.2491, 85.4805, -98.1311, 0.74 ) }
    dend_90 { pt3dadd( -50.9072, 85.6482, -98.1915, 0.88 ) }
    dend_90 { pt3dadd( -51.8445, 85.9664, -98.2958, 0.88 ) }
    dend_90 { pt3dadd( -53.1626, 86.6278, -98.4754, 0.37 ) }
    dend_90 { pt3dadd( -53.8925, 87.1856, -98.6393, 0.37 ) }
    dend_90 { pt3dadd( -54.2657, 87.5925, -98.7678, 0.66 ) }
    dend_90 { pt3dadd( -55.1226, 88.8901, -99.1505, 0.44 ) }
    dend_90 { pt3dadd( -55.5497, 89.7525, -99.4067, 0.74 ) }
    dend_90 { pt3dadd( -55.9078, 90.6538, -99.6885, 0.74 ) }
    dend_90 { pt3dadd( -56.3075, 91.7137, -100.018, 1.03 ) }
    dend_90 { pt3dadd( -56.5609, 92.335, -100.169, 0.74 ) }
    dend_90 { pt3dadd( -57.0504, 93.3588, -100.338, 0.59 ) }
    dend_90 { pt3dadd( -57.5924, 94.2654, -100.414, 0.52 ) }
    dend_90 { pt3dadd( -58.127, 94.9713, -100.46, 0.44 ) }
    dend_90 { pt3dadd( -59.0997, 96.016, -100.515, 0.44 ) }
    dend_90 { pt3dadd( -60.4173, 97.2553, -100.555, 0.52 ) }
    dend_90 { pt3dadd( -61.3345, 98.0427, -100.584, 0.52 ) }
    dend_90 { pt3dadd( -62.2846, 98.8044, -100.585, 0.52 ) }
    dend_90 { pt3dadd( -63.2997, 99.5807, -100.536, 0.52 ) }
    dend_90 { pt3dadd( -64.1411, 100.171, -100.474, 0.52 ) }
    dend_90 { pt3dadd( -64.6095, 100.452, -100.444, 0.66 ) }
    dend_90 { pt3dadd( -65.6192, 100.924, -100.403, 0.66 ) }
    dend_90 { pt3dadd( -67.0835, 101.474, -100.164, 0.37 ) }
    dend_90 { pt3dadd( -67.9783, 101.783, -99.9073, 0.37 ) }
    dend_90 { pt3dadd( -69.0426, 102.139, -99.4885, 0.37 ) }
    dend_90 { pt3dadd( -69.9001, 102.446, -99.091, 0.37 ) }
    dend_90 { pt3dadd( -70.6463, 102.745, -98.7234, 0.37 ) }
    dend_90 { pt3dadd( -72.6013, 103.705, -97.7047, 0.74 ) }
    dend_90 { pt3dadd( -73.6023, 104.312, -97.2325, 0.59 ) }
    dend_90 { pt3dadd( -73.8776, 104.511, -97.1209, 1.03 ) }
    dend_90 { pt3dadd( -74.625, 105.12, -96.8585, 0.74 ) }
    dend_90 { pt3dadd( -75.4397, 105.767, -96.628, 0.74 ) }
    dend_90 { pt3dadd( -76.5294, 106.537, -96.45, 0.37 ) }
    dend_90 { pt3dadd( -77.5233, 107.111, -96.3727, 0.52 ) }
    dend_90 { pt3dadd( -78.2891, 107.435, -96.2856, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_90 { pt3dadd( -78.5646, 107.532, -96.2363, 0.37 ) }
    dend_90 { pt3dadd( -79.8495, 107.901, -95.9752, 0.37 ) }
    dend_90 { pt3dadd( -81.0169, 108.175, -95.7038, 1.55 ) }
    dend_90 { pt3dadd( -81.9131, 108.334, -95.4688, 1.55 ) }
    dend_90 { pt3dadd( -82.9379, 108.496, -95.134, 0.81 ) }
    dend_90 { pt3dadd( -84.3819, 108.72, -94.602, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 6/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 29.2104, 76.5775, 101.751, 0.44 ) }
    dend_71 { pt3dadd( 26.0769, 79.318, 109.893, 0.44 ) }
    dend_71 { pt3dadd( 22.4108, 81.2276, 118.041, 0.44 ) }
    dend_71 { pt3dadd( 20.6483, 82.6076, 126.897, 0.44 ) }
    dend_71 { pt3dadd( 18.8091, 82.2541, 135.838, 0.44 ) }
    dend_71 { pt3dadd( 17.8668, 80.8305, 144.822, 0.44 ) }
    dend_71 { pt3dadd( 17.7718, 77.8298, 153.485, 0.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 13/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 29.2104, 76.5775, 101.751, 0.22 ) }
    dend_70 { pt3dadd( 26.4459, 78.3862, 112.504, 0.44 ) }
    dend_70 { pt3dadd( 24.9643, 78.7558, 123.642, 0.44 ) }
    dend_70 { pt3dadd( 24.7202, 80.5034, 134.748, 0.44 ) }
    dend_70 { pt3dadd( 24.6128, 80.416, 145.991, 0.44 ) }
    dend_70 { pt3dadd( 23.7045, 82.0258, 157.084, 0.44 ) }
    dend_70 { pt3dadd( 23.2624, 84.9121, 167.953, 0.44 ) }
    dend_70 { pt3dadd( 22.2608, 87.1169, 178.938, 0.44 ) }
    dend_70 { pt3dadd( 19.9372, 87.5009, 189.931, 0.44 ) }
    dend_70 { pt3dadd( 18.1318, 87.2905, 201.027, 0.44 ) }
    dend_70 { pt3dadd( 15.3076, 86.7205, 211.895, 0.44 ) }
    dend_70 { pt3dadd( 11.8574, 86.8088, 222.595, 0.44 ) }
    dend_70 { pt3dadd( 7.19828, 88.3753, 232.713, 0.44 ) }
    dend_70 { pt3dadd( 1.38647, 89.956, 242.215, 0.44 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 27/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 54.7402, 75.4525, 93.398, 0.44 ) }
    dend_68 { pt3dadd( 63.4292, 80.5974, 102.222, 0.44 ) }
    dend_68 { pt3dadd( 71.7722, 85.8983, 111.289, 0.44 ) }
    dend_68 { pt3dadd( 80.3716, 89.075, 121.044, 0.44 ) }
    dend_68 { pt3dadd( 89.597, 90.8866, 130.559, 0.44 ) }
    dend_68 { pt3dadd( 97.2754, 94.431, 140.941, 0.44 ) }
    dend_68 { pt3dadd( 103.353, 97.2485, 152.529, 0.44 ) }
    dend_68 { pt3dadd( 109.768, 98.7667, 164.169, 0.44 ) }
    dend_68 { pt3dadd( 114.853, 98.5522, 176.537, 0.44 ) }
    dend_68 { pt3dadd( 122.111, 97.4947, 187.726, 0.44 ) }
    dend_68 { pt3dadd( 128.14, 98.6926, 199.606, 0.44 ) }
    dend_68 { pt3dadd( 134.792, 97.9216, 211.186, 0.44 ) }
    dend_68 { pt3dadd( 141.439, 99.484, 222.689, 0.44 ) }
    dend_68 { pt3dadd( 146.454, 102.462, 234.739, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 41/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 54.7402, 75.4525, 93.398, 0.22 ) }
    dend_53 { pt3dadd( 58.211, 77.4641, 96.9585, 0.44 ) }
    dend_53 { pt3dadd( 61.4042, 80.8085, 99.7404, 0.44 ) }
    dend_53 { pt3dadd( 63.7928, 83.6043, 103.664, 0.44 ) }
    dend_53 { pt3dadd( 65.7275, 86.0932, 108.009, 0.44 ) }
    dend_53 { pt3dadd( 68.1773, 88.1097, 112.331, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_42 (entry count 47/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 18.1493, 58.1318, 37.0379, 1.03 ) }
    dend_50 { pt3dadd( 18.384, 58.9895, 37.6936, 1.03 ) }
    dend_50 { pt3dadd( 18.7417, 60.0386, 38.5587, 0.44 ) }
    dend_50 { pt3dadd( 19.221, 61.0018, 39.372, 0.52 ) }
    dend_50 { pt3dadd( 20.0055, 62.1583, 40.3582, 0.96 ) }
    dend_50 { pt3dadd( 21.3752, 63.6549, 41.6743, 1.25 ) }
    dend_50 { pt3dadd( 22.0379, 64.1797, 42.1325, 1.4 ) }
    dend_50 { pt3dadd( 22.6669, 64.5325, 42.4585, 1.18 ) }
    dend_50 { pt3dadd( 24.2839, 65.2135, 43.0321, 0.29 ) }
    dend_50 { pt3dadd( 25.5137, 65.6673, 43.3523, 0.29 ) }
    dend_50 { pt3dadd( 26.9476, 66.2132, 43.5822, 0.66 ) }
    dend_50 { pt3dadd( 28.894, 67.0402, 43.7677, 0.37 ) }
    dend_50 { pt3dadd( 29.9711, 67.6785, 43.9028, 0.37 ) }
    dend_50 { pt3dadd( 30.8474, 68.5034, 44.1242, 0.37 ) }
    dend_50 { pt3dadd( 31.5409, 69.7329, 44.5376, 0.37 ) }
    dend_50 { pt3dadd( 31.9924, 71.0392, 45.0423, 0.74 ) }
    dend_50 { pt3dadd( 32.1827, 71.9656, 45.4247, 1.11 ) }
    dend_50 { pt3dadd( 32.3058, 72.977, 45.8875, 1.11 ) }
    dend_50 { pt3dadd( 32.359, 73.672, 46.212, 1.11 ) }
    dend_50 { pt3dadd( 32.4058, 74.44, 46.5494, 1.11 ) }
    dend_50 { pt3dadd( 32.4661, 75.5442, 46.9475, 0.88 ) }
    dend_50 { pt3dadd( 32.5727, 76.9171, 47.4265, 1.18 ) }
    dend_50 { pt3dadd( 32.6766, 77.9743, 47.765, 1.18 ) }
    dend_50 { pt3dadd( 32.8154, 79.0281, 48.0664, 1.03 ) }
    dend_50 { pt3dadd( 33.0095, 80.2047, 48.3923, 0.59 ) }
    dend_50 { pt3dadd( 33.2076, 81.391, 48.7014, 0.37 ) }
    dend_50 { pt3dadd( 33.6098, 83.316, 49.148, 0.29 ) }
    dend_50 { pt3dadd( 33.9672, 84.4057, 49.4484, 0.52 ) }
    dend_50 { pt3dadd( 34.2307, 84.9917, 49.6523, 0.66 ) }
    dend_50 { pt3dadd( 35.0345, 86.3284, 50.2152, 0.37 ) }
    dend_50 { pt3dadd( 36.0155, 87.654, 50.8499, 0.37 ) }
    dend_50 { pt3dadd( 36.9206, 88.7167, 51.3831, 0.59 ) }
    dend_50 { pt3dadd( 38.4446, 90.3876, 52.1883, 1.18 ) }
    dend_50 { pt3dadd( 39.4568, 91.4637, 52.6886, 0.88 ) }
    dend_50 { pt3dadd( 40.436, 92.4836, 53.1125, 0.29 ) }
    dend_50 { pt3dadd( 41.0076, 93.0529, 53.3216, 0.29 ) }
    dend_50 { pt3dadd( 41.8114, 93.8895, 53.5894, 0.52 ) }
    dend_50 { pt3dadd( 42.2853, 94.4992, 53.7338, 0.59 ) }
    dend_50 { pt3dadd( 42.9502, 95.7262, 53.9203, 0.52 ) }
    dend_50 { pt3dadd( 43.3509, 96.9382, 54.0851, 0.81 ) }
    dend_50 { pt3dadd( 43.5364, 98.0021, 54.3013, 0.96 ) }
    dend_50 { pt3dadd( 43.7219, 99.4075, 54.6589, 1.11 ) }
    dend_50 { pt3dadd( 43.8787, 100.352, 54.9702, 1.33 ) }
    dend_50 { pt3dadd( 44.2664, 101.832, 55.569, 1.99 ) }
    dend_50 { pt3dadd( 44.8713, 103.284, 56.3003, 2.21 ) }
    dend_50 { pt3dadd( 46.1982, 105.34, 57.5318, 0.96 ) }
    dend_50 { pt3dadd( 47.0762, 106.253, 58.1326, 0.66 ) }
    dend_50 { pt3dadd( 48.7235, 107.586, 59.122, 0.29 ) }
    dend_50 { pt3dadd( 50.1576, 108.463, 59.8567, 0.29 ) }
    dend_50 { pt3dadd( 51.7504, 109.161, 60.54, 0.29 ) }
    dend_50 { pt3dadd( 52.6615, 109.415, 60.8787, 0.29 ) }
    dend_50 { pt3dadd( 53.864, 109.552, 61.2061, 0.22 ) }
    dend_50 { pt3dadd( 62.6317, 119.973, 65.0181, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 0/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 18.1493, 58.1318, 37.0379, 0.96 ) }
    dend_43 { pt3dadd( 16.9932, 60.0618, 38.7021, 0.96 ) }
    dend_43 { pt3dadd( 16.6246, 60.5702, 39.1387, 0.44 ) }
    dend_43 { pt3dadd( 16.1592, 61.0988, 39.8047, 0.37 ) }
    dend_43 { pt3dadd( 15.8098, 61.4507, 40.4318, 0.29 ) }
    dend_43 { pt3dadd( 15.5433, 61.7109, 40.9281, 0.37 ) }
    dend_43 { pt3dadd( 15.3293, 61.9155, 41.3109, 0.37 ) }
    dend_43 { pt3dadd( 14.9959, 62.2117, 41.8475, 0.37 ) }
    dend_43 { pt3dadd( 13.8278, 63.1611, 43.6871, 1.18 ) }
    dend_43 { pt3dadd( 12.8925, 63.875, 45.0853, 1.18 ) }
    dend_43 { pt3dadd( 12.4232, 64.2173, 45.7428, 0.88 ) }
    dend_43 { pt3dadd( 11.9341, 64.592, 46.3342, 0.88 ) }
    dend_43 { pt3dadd( 11.4797, 64.9567, 46.7757, 0.81 ) }
    dend_43 { pt3dadd( 11.0605, 65.3041, 47.0456, 1.18 ) }
    dend_43 { pt3dadd( 10.4745, 65.7871, 47.2207, 1.18 ) }
    dend_43 { pt3dadd( 9.69023, 66.4359, 47.3318, 0.74 ) }
    dend_43 { pt3dadd( 8.68515, 67.2105, 47.3747, 0.52 ) }
    dend_43 { pt3dadd( 8.07934, 67.626, 47.3561, 0.29 ) }
    dend_43 { pt3dadd( 7.46997, 67.9871, 47.2978, 0.29 ) }
    dend_43 { pt3dadd( 7.11201, 68.178, 47.2303, 0.96 ) }
    dend_43 { pt3dadd( 6.73969, 68.363, 47.1182, 1.18 ) }
    dend_43 { pt3dadd( 5.70066, 68.8411, 46.6489, 0.22 ) }
    dend_43 { pt3dadd( 5.01894, 69.0973, 46.2947, 0.22 ) }
    dend_43 { pt3dadd( 4.45541, 69.2802, 45.9606, 0.59 ) }
    dend_43 { pt3dadd( 3.90295, 69.4426, 45.6189, 0.52 ) }
    dend_43 { pt3dadd( 3.37703, 69.5909, 45.2997, 0.52 ) }
    dend_43 { pt3dadd( 2.63446, 69.8188, 44.8595, 0.66 ) }
    dend_43 { pt3dadd( 2.38792, 69.9142, 44.7159, 0.66 ) }
    dend_43 { pt3dadd( 1.78026, 70.1796, 44.3346, 0.29 ) }
    dend_43 { pt3dadd( 1.53095, 70.2885, 44.1948, 0.29 ) }
    dend_43 { pt3dadd( 1.02613, 70.5175, 43.9602, 0.29 ) }
    dend_43 { pt3dadd( 0.804164, 70.6272, 43.8683, 0.74 ) }
    dend_43 { pt3dadd( 0.212539, 70.951, 43.5895, 0.74 ) }
    dend_43 { pt3dadd( -0.181146, 71.1866, 43.3209, 0.59 ) }
    dend_43 { pt3dadd( -0.601882, 71.4488, 42.9104, 0.29 ) }
    dend_43 { pt3dadd( -0.98837, 71.6871, 42.4902, 1.03 ) }
    dend_43 { pt3dadd( -1.29494, 71.8722, 42.138, 1.03 ) }
    dend_43 { pt3dadd( -1.95454, 72.2953, 41.3526, 0.88 ) }
    dend_43 { pt3dadd( -2.65641, 72.7896, 40.4867, 0.88 ) }
    dend_43 { pt3dadd( -3.61467, 73.518, 39.3151, 0.37 ) }
    dend_43 { pt3dadd( -3.93151, 73.7829, 38.8507, 0.88 ) }
    dend_43 { pt3dadd( -4.14629, 73.986, 38.5085, 1.33 ) }
    dend_43 { pt3dadd( -4.56602, 74.432, 37.8357, 0.37 ) }
    dend_43 { pt3dadd( -4.72253, 74.6204, 37.5948, 0.22 ) }
    dend_43 { pt3dadd( -5.04532, 75.0701, 37.0986, 0.22 ) }
    dend_43 { pt3dadd( -6.42377, 77.2358, 34.8696, 0.66 ) }
    dend_43 { pt3dadd( -6.63423, 77.5947, 34.4041, 0.29 ) }
    dend_43 { pt3dadd( -6.8185, 77.9336, 33.9209, 0.22 ) }
    dend_43 { pt3dadd( -6.92497, 78.1245, 33.6258, 0.22 ) }
    dend_43 { pt3dadd( -7.25859, 78.6993, 32.7141, 1.11 ) }
    dend_43 { pt3dadd( -7.44885, 79.0181, 32.2149, 1.11 ) }
    dend_43 { pt3dadd( -8.33715, 80.4946, 30.3656, 0.37 ) }
    dend_43 { pt3dadd( -8.50144, 80.7535, 30.0393, 0.29 ) }
    dend_43 { pt3dadd( -8.69192, 81.0605, 29.6903, 0.29 ) }
    dend_43 { pt3dadd( -8.96689, 81.4939, 29.28, 0.29 ) }
    dend_43 { pt3dadd( -9.39547, 82.1286, 28.8475, 0.29 ) }
    dend_43 { pt3dadd( -9.83641, 82.7647, 28.5502, 0.29 ) }
    dend_43 { pt3dadd( -10.0355, 83.0412, 28.4877, 0.29 ) }
    dend_43 { pt3dadd( -10.4623, 83.6397, 28.3321, 0.66 ) }
    dend_43 { pt3dadd( -10.6804, 83.9885, 28.2462, 0.81 ) }
    dend_43 { pt3dadd( -10.9084, 84.4318, 28.1565, 0.96 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -62.7033, 111.857, -10.6102, 0.29 ) }
    dend_33 { pt3dadd( -63.0299, 114.612, -11.4357, 0.29 ) }
    dend_33 { pt3dadd( -63.1089, 115.719, -11.9278, 0.29 ) }
    dend_33 { pt3dadd( -63.1739, 116.968, -12.5604, 0.29 ) }
    dend_33 { pt3dadd( -63.2332, 118.006, -13.0924, 0.52 ) }
    dend_33 { pt3dadd( -63.3385, 119.298, -13.757, 0.52 ) }
    dend_33 { pt3dadd( -63.4864, 120.542, -14.3866, 0.66 ) }
    dend_33 { pt3dadd( -63.8607, 122.236, -15.2739, 0.29 ) }
    dend_33 { pt3dadd( -64.1159, 122.996, -15.7407, 0.29 ) }
    dend_33 { pt3dadd( -64.5307, 123.929, -16.4049, 0.37 ) }
    dend_33 { pt3dadd( -64.855, 124.563, -16.8917, 0.37 ) }
    dend_33 { pt3dadd( -65.1975, 125.165, -17.4278, 0.29 ) }
    dend_33 { pt3dadd( -66.0215, 126.457, -18.6586, 0.29 ) }
    dend_33 { pt3dadd( -66.4165, 127.016, -19.2129, 0.29 ) }
    dend_33 { pt3dadd( -66.9453, 127.714, -19.9948, 0.29 ) }
    dend_33 { pt3dadd( -67.5441, 128.435, -20.9025, 0.74 ) }
    dend_33 { pt3dadd( -69.0566, 130.048, -23.2549, 0.37 ) }
    dend_33 { pt3dadd( -69.4614, 130.43, -23.9835, 0.29 ) }
    dend_33 { pt3dadd( -69.79, 130.719, -24.6268, 0.29 ) }
    dend_33 { pt3dadd( -70.2793, 131.189, -25.6433, 0.29 ) }
    dend_33 { pt3dadd( -70.6271, 131.562, -26.3887, 0.29 ) }
    dend_33 { pt3dadd( -71.2116, 132.228, -27.6193, 0.52 ) }
    dend_33 { pt3dadd( -72.7207, 134.141, -30.8022, 0.44 ) }
    dend_33 { pt3dadd( -72.9337, 134.478, -31.3639, 0.29 ) }
    dend_33 { pt3dadd( -73.592, 135.661, -33.2719, 0.81 ) }
    dend_33 { pt3dadd( -74.2881, 137.156, -35.5073, 0.29 ) }
    dend_33 { pt3dadd( -74.5067, 137.721, -36.2866, 0.29 ) }
    dend_33 { pt3dadd( -74.9007, 138.926, -37.753, 0.96 ) }
    dend_33 { pt3dadd( -75.5988, 141.098, -40.0988, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -62.7033, 111.857, -10.6102, 0.29 ) }
    dend_32 { pt3dadd( -64.4399, 111.376, -9.6191, 0.29 ) }
    dend_32 { pt3dadd( -65.6576, 111.34, -8.92185, 0.29 ) }
    dend_32 { pt3dadd( -66.7548, 111.532, -8.32078, 0.29 ) }
    dend_32 { pt3dadd( -67.6292, 111.739, -7.8772, 0.29 ) }
    dend_32 { pt3dadd( -69.0393, 112.043, -7.22982, 0.29 ) }
    dend_32 { pt3dadd( -69.9826, 112.193, -6.87257, 0.29 ) }
    dend_32 { pt3dadd( -71.352, 112.421, -6.51707, 0.29 ) }
    dend_32 { pt3dadd( -72.65, 112.649, -6.24797, 0.66 ) }
    dend_32 { pt3dadd( -73.7979, 112.833, -6.06789, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_32 { pt3dadd( -75.4406, 113.034, -5.90825, 0.29 ) }
    dend_32 { pt3dadd( -77.1875, 113.167, -5.86308, 0.29 ) }
    dend_32 { pt3dadd( -78.1688, 113.219, -5.8791, 0.29 ) }
    dend_32 { pt3dadd( -79.0795, 113.283, -5.9807, 0.29 ) }
    dend_32 { pt3dadd( -79.7563, 113.401, -6.12494, 0.29 ) }
    dend_32 { pt3dadd( -80.4044, 113.664, -6.33829, 0.29 ) }
    dend_32 { pt3dadd( -80.8996, 113.997, -6.54535, 0.44 ) }
    dend_32 { pt3dadd( -81.3985, 114.42, -6.80639, 0.29 ) }
    dend_32 { pt3dadd( -82.7013, 115.371, -7.77484, 0.29 ) }
    dend_32 { pt3dadd( -83.1833, 115.67, -8.16013, 0.29 ) }
    dend_32 { pt3dadd( -83.8534, 116.017, -8.66732, 0.29 ) }
    dend_32 { pt3dadd( -84.3477, 116.224, -9.0059, 0.29 ) }
    dend_32 { pt3dadd( -85.806, 116.725, -9.88691, 0.74 ) }
    dend_32 { pt3dadd( -88.5836, 117.487, -11.1851, 0.29 ) }
    dend_32 { pt3dadd( -90.2011, 117.859, -11.6953, 0.29 ) }
    dend_32 { pt3dadd( -91.4462, 118.142, -11.9483, 0.29 ) }
    dend_32 { pt3dadd( -92.4084, 118.381, -12.0186, 0.29 ) }
    dend_32 { pt3dadd( -94.0113, 118.831, -11.8786, 0.29 ) }
    dend_32 { pt3dadd( -95.907, 119.454, -11.244, 0.29 ) }
    dend_32 { pt3dadd( -96.7068, 119.795, -10.7362, 0.37 ) }
    dend_32 { pt3dadd( -97.5832, 120.241, -9.99957, 0.37 ) }
    dend_32 { pt3dadd( -98.282, 120.678, -9.29858, 0.37 ) }
    dend_32 { pt3dadd( -98.7053, 121.031, -8.73611, 0.81 ) }
    dend_32 { pt3dadd( -99.2844, 121.658, -7.74442, 0.52 ) }
    dend_32 { pt3dadd( -100.022, 122.62, -6.3278, 0.29 ) }
    dend_32 { pt3dadd( -100.434, 123.189, -5.51293, 0.29 ) }
    dend_32 { pt3dadd( -100.868, 123.78, -4.66023, 0.74 ) }
    dend_32 { pt3dadd( -101.885, 125.083, -2.79978, 0.37 ) }
    dend_32 { pt3dadd( -102.287, 125.589, -2.11658, 0.29 ) }
    dend_32 { pt3dadd( -102.717, 126.107, -1.50055, 0.22 ) }
    dend_32 { pt3dadd( -103.49, 126.942, -0.674151, 0.22 ) }
    dend_32 { pt3dadd( -103.921, 127.378, -0.329318, 0.22 ) }
    dend_32 { pt3dadd( -104.521, 127.922, -0.0277233, 0.44 ) }
    dend_32 { pt3dadd( -104.868, 128.194, 0.0565167, 0.44 ) }
    dend_32 { pt3dadd( -105.676, 128.788, 0.189679, 0.29 ) }
    dend_32 { pt3dadd( -106.896, 129.643, 0.338225, 0.29 ) }
    dend_32 { pt3dadd( -107.821, 130.258, 0.363073, 0.29 ) }
    dend_32 { pt3dadd( -108.34, 130.583, 0.35185, 0.29 ) }
    dend_32 { pt3dadd( -109.114, 131.004, 0.31602, 0.22 ) }
    dend_32 { pt3dadd( -109.937, 131.376, 0.209254, 0.22 ) }
    dend_32 { pt3dadd( -110.936, 131.742, -0.0416088, 0.22 ) }
    dend_32 { pt3dadd( -112.376, 132.188, -0.627438, 0.44 ) }
    dend_32 { pt3dadd( -112.95, 132.372, -0.98579, 0.44 ) }
    dend_32 { pt3dadd( -113.547, 132.572, -1.4378, 0.22 ) }
    dend_32 { pt3dadd( -114.961, 133.082, -2.69728, 0.22 ) }
    dend_32 { pt3dadd( -116.127, 133.587, -3.92751, 0.66 ) }
    dend_32 { pt3dadd( -116.634, 133.855, -4.56165, 1.03 ) }
    dend_32 { pt3dadd( -118.061, 134.664, -6.53094, 0.88 ) }
    dend_32 { pt3dadd( -118.496, 134.931, -7.13039, 0.59 ) }
    dend_32 { pt3dadd( -119.241, 135.437, -8.2286, 0.59 ) }
    dend_32 { pt3dadd( -120.302, 136.221, -9.91777, 0.74 ) }
    dend_32 { pt3dadd( -121.884, 137.575, -12.7396, 0.66 ) }
    dend_32 { pt3dadd( -122.893, 138.549, -14.6052, 0.52 ) }
    dend_32 { pt3dadd( -123.502, 139.215, -15.7611, 0.74 ) }
    dend_32 { pt3dadd( -124.477, 140.439, -17.6636, 1.55 ) }
    dend_32 { pt3dadd( -125.014, 141.231, -18.7179, 1.77 ) }
    dend_32 { pt3dadd( -125.467, 142.001, -19.5544, 1.92 ) }
    dend_32 { pt3dadd( -126.318, 143.898, -20.9923, 0.88 ) }
    dend_32 { pt3dadd( -126.512, 144.427, -21.2818, 0.44 ) }
    dend_32 { pt3dadd( -126.867, 145.408, -21.7019, 0.29 ) }
    dend_32 { pt3dadd( -127.364, 146.61, -22.026, 0.96 ) }
    dend_32 { pt3dadd( -127.777, 147.582, -22.2188, 0.96 ) }
    dend_32 { pt3dadd( -128.512, 149.342, -22.4772, 0.37 ) }
    dend_32 { pt3dadd( -128.903, 150.462, -22.5757, 0.37 ) }
    dend_32 { pt3dadd( -129.193, 151.28, -22.6506, 0.37 ) }
    dend_32 { pt3dadd( -129.592, 152.239, -22.7285, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -92.8981, 115.444, 13.9785, 0.22 ) }
    dend_28 { pt3dadd( -94.4086, 114.431, 13.4177, 0.22 ) }
    dend_28 { pt3dadd( -95.0361, 113.991, 13.3254, 0.22 ) }
    dend_28 { pt3dadd( -95.6878, 113.549, 13.3168, 0.22 ) }
    dend_28 { pt3dadd( -96.3328, 113.158, 13.3602, 0.29 ) }
    dend_28 { pt3dadd( -97.281, 112.647, 13.4612, 0.29 ) }
    dend_28 { pt3dadd( -97.892, 112.328, 13.5343, 0.22 ) }
    dend_28 { pt3dadd( -99.2078, 111.666, 13.8322, 0.59 ) }
    dend_28 { pt3dadd( -99.8294, 111.391, 13.9889, 0.66 ) }
    dend_28 { pt3dadd( -100.884, 111.018, 14.2331, 0.22 ) }
    dend_28 { pt3dadd( -102.079, 110.78, 14.4519, 0.22 ) }
    dend_28 { pt3dadd( -103.445, 110.73, 14.6214, 0.44 ) }
    dend_28 { pt3dadd( -104.307, 110.818, 14.6658, 0.22 ) }
    dend_28 { pt3dadd( -105.342, 111.052, 14.62, 0.22 ) }
    dend_28 { pt3dadd( -106.499, 111.425, 14.5169, 0.22 ) }
    dend_28 { pt3dadd( -107.896, 111.948, 14.3295, 0.22 ) }
    dend_28 { pt3dadd( -108.523, 112.188, 14.2214, 0.22 ) }
    dend_28 { pt3dadd( -109.114, 112.383, 14.1119, 0.44 ) }
    dend_28 { pt3dadd( -109.416, 112.436, 14.0503, 0.44 ) }
    dend_28 { pt3dadd( -110.701, 112.469, 13.8045, 0.22 ) }
    dend_28 { pt3dadd( -111.757, 112.41, 13.6669, 0.22 ) }
    dend_28 { pt3dadd( -112.501, 112.339, 13.6087, 0.22 ) }
    dend_28 { pt3dadd( -113.41, 112.261, 13.5845, 0.22 ) }
    dend_28 { pt3dadd( -114.845, 112.158, 13.6507, 0.22 ) }
    dend_28 { pt3dadd( -115.714, 112.115, 13.7544, 0.22 ) }
    dend_28 { pt3dadd( -116.612, 112.09, 13.9523, 0.22 ) }
    dend_28 { pt3dadd( -117.712, 112.117, 14.2924, 0.22 ) }
    dend_28 { pt3dadd( -118.549, 112.167, 14.6434, 0.22 ) }
    dend_28 { pt3dadd( -119.686, 112.282, 15.2809, 0.22 ) }
    dend_28 { pt3dadd( -120.395, 112.39, 15.7812, 0.37 ) }
    dend_28 { pt3dadd( -121.086, 112.527, 16.3226, 0.22 ) }
    dend_28 { pt3dadd( -121.598, 112.655, 16.7728, 0.44 ) }
    dend_28 { pt3dadd( -122.414, 112.897, 17.5594, 0.37 ) }
    dend_28 { pt3dadd( -123.125, 113.174, 18.3577, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_28 { pt3dadd( -123.4, 113.329, 18.717, 0.37 ) }
    dend_28 { pt3dadd( -123.777, 113.577, 19.2256, 0.29 ) }
    dend_28 { pt3dadd( -124.417, 114.033, 19.9897, 0.44 ) }
    dend_28 { pt3dadd( -125.206, 114.608, 20.9247, 0.22 ) }
    dend_28 { pt3dadd( -125.666, 114.942, 21.4055, 0.22 ) }
    dend_28 { pt3dadd( -126.279, 115.354, 21.9813, 0.22 ) }
    dend_28 { pt3dadd( -126.708, 115.625, 22.3624, 0.22 ) }
    dend_28 { pt3dadd( -127.528, 116.17, 23.0289, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -92.8981, 115.444, 13.9785, 0.37 ) }
    dend_27 { pt3dadd( -93.6206, 115.721, 13.0402, 0.37 ) }
    dend_27 { pt3dadd( -94.6697, 116.21, 11.6603, 0.37 ) }
    dend_27 { pt3dadd( -95.3675, 116.598, 10.7446, 0.37 ) }
    dend_27 { pt3dadd( -95.9543, 117.006, 9.97196, 0.37 ) }
    dend_27 { pt3dadd( -96.8508, 117.768, 8.75287, 0.37 ) }
    dend_27 { pt3dadd( -97.2458, 118.185, 8.1794, 0.29 ) }
    dend_27 { pt3dadd( -97.7618, 118.822, 7.24748, 0.66 ) }
    dend_27 { pt3dadd( -97.9769, 119.129, 6.78501, 0.81 ) }
    dend_27 { pt3dadd( -98.297, 119.665, 5.99401, 0.59 ) }
    dend_27 { pt3dadd( -98.5433, 120.147, 5.30644, 0.59 ) }
    dend_27 { pt3dadd( -98.847, 120.818, 4.39771, 0.74 ) }
    dend_27 { pt3dadd( -99.8922, 123.355, 1.12556, 0.44 ) }
    dend_27 { pt3dadd( -100.045, 123.784, 0.606585, 0.44 ) }
    dend_27 { pt3dadd( -100.136, 124.123, 0.234361, 0.44 ) }
    dend_27 { pt3dadd( -100.239, 124.772, -0.342153, 0.44 ) }
    dend_27 { pt3dadd( -100.306, 125.828, -0.990065, 0.44 ) }
    dend_27 { pt3dadd( -100.313, 127.095, -1.49525, 0.37 ) }
    dend_27 { pt3dadd( -100.315, 128.312, -1.79718, 0.37 ) }
    dend_27 { pt3dadd( -100.395, 129.376, -2.06683, 0.37 ) }
    dend_27 { pt3dadd( -100.59, 130.728, -2.41983, 0.37 ) }
    dend_27 { pt3dadd( -100.842, 131.909, -2.73392, 0.52 ) }
    dend_27 { pt3dadd( -101.075, 132.787, -2.96689, 0.66 ) }
    dend_27 { pt3dadd( -101.541, 134.376, -3.45599, 0.59 ) }
    dend_27 { pt3dadd( -101.968, 135.98, -3.9556, 0.52 ) }
    dend_27 { pt3dadd( -102.173, 136.967, -4.21745, 0.52 ) }
    dend_27 { pt3dadd( -102.302, 137.994, -4.4187, 0.52 ) }
    dend_27 { pt3dadd( -102.334, 139.433, -4.52345, 0.88 ) }
    dend_27 { pt3dadd( -102.317, 140.755, -4.46821, 1.33 ) }
    dend_27 { pt3dadd( -102.307, 142.327, -4.20367, 0.52 ) }
    dend_27 { pt3dadd( -102.471, 144.295, -3.64813, 0.44 ) }
    dend_27 { pt3dadd( -102.711, 145.253, -3.27407, 0.88 ) }
    dend_27 { pt3dadd( -103.148, 146.349, -2.77225, 1.11 ) }
    dend_27 { pt3dadd( -103.807, 147.679, -2.13254, 0.44 ) }
    dend_27 { pt3dadd( -104.363, 148.743, -1.65896, 0.29 ) }
    dend_27 { pt3dadd( -104.861, 149.697, -1.34174, 0.29 ) }
    dend_27 { pt3dadd( -105.161, 150.386, -1.2409, 0.29 ) }
    dend_27 { pt3dadd( -105.547, 151.732, -1.20133, 0.66 ) }
    dend_27 { pt3dadd( -105.744, 152.857, -1.26411, 0.66 ) }
    dend_27 { pt3dadd( -105.81, 153.912, -1.35126, 0.66 ) }
    dend_27 { pt3dadd( -105.813, 155.055, -1.45939, 0.66 ) }
    dend_27 { pt3dadd( -105.821, 156.013, -1.53501, 0.66 ) }
    dend_27 { pt3dadd( -105.869, 157.289, -1.6051, 0.59 ) }
    dend_27 { pt3dadd( -105.968, 158.696, -1.63408, 0.44 ) }
    dend_27 { pt3dadd( -106.06, 159.559, -1.6334, 0.44 ) }
    dend_27 { pt3dadd( -106.259, 161.022, -1.6208, 0.37 ) }
    dend_27 { pt3dadd( -106.46, 162.404, -1.62142, 0.37 ) }
    dend_27 { pt3dadd( -106.604, 163.428, -1.6276, 0.74 ) }
    dend_27 { pt3dadd( -106.738, 164.365, -1.65273, 1.18 ) }
    dend_27 { pt3dadd( -106.924, 165.564, -1.70967, 0.81 ) }
    dend_27 { pt3dadd( -107.142, 166.601, -1.76584, 0.37 ) }
    dend_27 { pt3dadd( -107.434, 167.573, -1.81698, 0.29 ) }
    dend_27 { pt3dadd( -107.929, 168.754, -1.87896, 0.52 ) }
    dend_27 { pt3dadd( -108.289, 169.285, -1.89932, 0.66 ) }
    dend_27 { pt3dadd( -108.688, 169.661, -1.89928, 0.74 ) }
    dend_27 { pt3dadd( -109.759, 170.315, -1.83445, 0.37 ) }
    dend_27 { pt3dadd( -110.899, 170.8, -1.75025, 0.29 ) }
    dend_27 { pt3dadd( -111.973, 171.1, -1.68573, 0.29 ) }
    dend_27 { pt3dadd( -113.299, 171.308, -1.65002, 0.29 ) }
    dend_27 { pt3dadd( -114.323, 171.38, -1.64722, 0.29 ) }
    dend_27 { pt3dadd( -115.347, 171.382, -1.6639, 0.29 ) }
    dend_27 { pt3dadd( -116.958, 171.275, -1.71856, 0.29 ) }
    dend_27 { pt3dadd( -118.174, 171.133, -1.74198, 0.29 ) }
    dend_27 { pt3dadd( -119.326, 170.974, -1.72461, 0.44 ) }
    dend_27 { pt3dadd( -120.183, 170.838, -1.70751, 0.22 ) }
    dend_27 { pt3dadd( -120.687, 170.744, -1.69454, 0.44 ) }
    dend_27 { pt3dadd( -121.172, 170.624, -1.66819, 0.44 ) }
    dend_27 { pt3dadd( -122.19, 170.292, -1.54069, 0.37 ) }
    dend_27 { pt3dadd( -123.488, 169.98, -1.23242, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 6.38817, -254.959, 37.7688, 0.44 ) }
    dend_7 { pt3dadd( 5.90919, -256.303, 37.855, 0.44 ) }
    dend_7 { pt3dadd( 5.63045, -257.084, 37.9052, 0.44 ) }
    dend_7 { pt3dadd( 5.23368, -258.197, 37.9767, 0.52 ) }
    dend_7 { pt3dadd( 5.03793, -258.746, 38.012, 0.66 ) }
    dend_7 { pt3dadd( 4.78502, -259.455, 38.0575, 0.66 ) }
    dend_7 { pt3dadd( 4.51077, -260.224, 38.1069, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 6.38817, -254.959, 37.7688, 0.22 ) }
    dend_6 { pt3dadd( 7.64128, -255.541, 37.4262, 0.22 ) }
    dend_6 { pt3dadd( 9.30716, -256.313, 36.9708, 0.22 ) }
    dend_6 { pt3dadd( 17.5808, -261.455, 33.2707, 0.22 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 88/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -12.3906, 167.856, -67.0534, 0.22 ) }
    dend_101 { pt3dadd( -12.8034, 168.699, -65.8634, 0.22 ) }
    dend_101 { pt3dadd( -13.0713, 169.245, -65.0911, 0.37 ) }
    dend_101 { pt3dadd( -13.2502, 169.611, -64.5751, 0.44 ) }
    dend_101 { pt3dadd( -13.4962, 170.113, -63.8661, 0.22 ) }
    dend_101 { pt3dadd( -13.8255, 170.785, -62.9165, 0.22 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 94/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -12.3906, 167.856, -67.0534, 0.29 ) }
    dend_100 { pt3dadd( -11.963, 169.444, -66.3265, 0.29 ) }
    dend_100 { pt3dadd( -11.5978, 170.799, -65.7059, 0.22 ) }
    dend_100 { pt3dadd( -11.3774, 171.617, -65.3312, 0.22 ) }
    // Section: dend_94, id: dend_94, parent: dend_90 (entry count 98/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -84.3819, 108.72, -94.602, 0.66 ) }
    dend_94 { pt3dadd( -86.867, 109.12, -94.736, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_94 { pt3dadd( -88.0129, 109.477, -94.796, 0.44 ) }
    dend_94 { pt3dadd( -89.0767, 109.942, -94.8474, 0.44 ) }
    dend_94 { pt3dadd( -90.0491, 110.429, -94.9053, 0.44 ) }
    dend_94 { pt3dadd( -91.1876, 111.083, -94.9626, 0.37 ) }
    dend_94 { pt3dadd( -92.2348, 111.768, -95.0034, 0.37 ) }
    dend_94 { pt3dadd( -93.5173, 112.841, -95.1129, 0.37 ) }
    dend_94 { pt3dadd( -94.8934, 114.261, -95.1703, 0.29 ) }
    dend_94 { pt3dadd( -95.6841, 115.21, -95.1467, 0.29 ) }
    dend_94 { pt3dadd( -96.4882, 116.275, -95.0361, 0.66 ) }
    dend_94 { pt3dadd( -97.0503, 117.08, -94.8863, 0.66 ) }
    dend_94 { pt3dadd( -97.4271, 117.651, -94.747, 0.66 ) }
    dend_94 { pt3dadd( -98.0999, 118.642, -94.4957, 0.37 ) }
    dend_94 { pt3dadd( -98.9512, 119.79, -94.1765, 0.22 ) }
    dend_94 { pt3dadd( -100.081, 121.047, -93.8456, 0.66 ) }
    dend_94 { pt3dadd( -100.833, 121.673, -93.7263, 0.81 ) }
    dend_94 { pt3dadd( -101.617, 122.136, -93.7144, 0.52 ) }
    dend_94 { pt3dadd( -102.77, 122.644, -93.826, 0.74 ) }
    dend_94 { pt3dadd( -103.622, 122.945, -93.9896, 0.74 ) }
    dend_94 { pt3dadd( -104.796, 123.313, -94.3013, 0.29 ) }
    dend_94 { pt3dadd( -106.083, 123.695, -94.6545, 0.29 ) }
    dend_94 { pt3dadd( -108.418, 124.432, -95.2669, 0.29 ) }
    dend_94 { pt3dadd( -110.119, 125.059, -95.6505, 0.29 ) }
    dend_94 { pt3dadd( -111.101, 125.499, -95.8556, 0.52 ) }
    dend_94 { pt3dadd( -111.588, 125.76, -95.9508, 0.52 ) }
    dend_94 { pt3dadd( -113.139, 126.774, -96.2489, 0.37 ) }
    dend_94 { pt3dadd( -114.021, 127.442, -96.4453, 0.37 ) }
    dend_94 { pt3dadd( -115.09, 128.339, -96.7358, 0.37 ) }
    dend_94 { pt3dadd( -116.21, 129.353, -97.0597, 0.44 ) }
    dend_94 { pt3dadd( -116.947, 130.033, -97.3026, 0.29 ) }
    dend_94 { pt3dadd( -117.917, 130.934, -97.7104, 0.29 ) }
    dend_94 { pt3dadd( -118.836, 131.82, -98.274, 0.81 ) }
    dend_94 { pt3dadd( -119.417, 132.344, -98.684, 0.96 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 32/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -84.3819, 108.72, -94.602, 0.22 ) }
    dend_91 { pt3dadd( -85.1159, 107.982, -94.6793, 0.22 ) }
    dend_91 { pt3dadd( -85.9072, 106.962, -94.7493, 0.22 ) }
    dend_91 { pt3dadd( -87.039, 105.503, -94.8495, 0.22 ) }
    dend_91 { pt3dadd( -87.2836, 105.188, -94.8712, 0.81 ) }
    dend_91 { pt3dadd( -87.7396, 104.6, -94.9115, 0.81 ) }
    dend_91 { pt3dadd( -88.6296, 103.453, -94.9903, 0.29 ) }
    dend_91 { pt3dadd( -89.2548, 102.472, -95.0343, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_71 (entry count 40/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 17.7718, 77.8298, 153.485, 0.44 ) }
    dend_79 { pt3dadd( 17.0144, 77.5274, 161.879, 0.44 ) }
    dend_79 { pt3dadd( 17.6714, 77.2466, 170.284, 0.44 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 43/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 17.7718, 77.8298, 153.485, 0.22 ) }
    dend_72 { pt3dadd( 15.7427, 78.1983, 160.57, 0.44 ) }
    dend_72 { pt3dadd( 14.4148, 76.8147, 167.71, 0.44 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 46/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 68.1773, 88.1097, 112.331, 0.44 ) }
    dend_61 { pt3dadd( 72.8008, 93.0559, 121.191, 0.44 ) }
    dend_61 { pt3dadd( 77.9724, 99.2897, 128.906, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 49/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 68.1773, 88.1097, 112.331, 0.22 ) }
    dend_54 { pt3dadd( 72.9961, 92.4171, 117.684, 0.44 ) }
    dend_54 { pt3dadd( 78.0659, 97.3985, 122.188, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.9084, 84.4318, 28.1565, 0.37 ) }
    dend_47 { pt3dadd( -12.1277, 84.6903, 28.2346, 0.37 ) }
    dend_47 { pt3dadd( -12.683, 84.8117, 28.3038, 0.37 ) }
    dend_47 { pt3dadd( -13.4165, 84.9908, 28.3153, 0.29 ) }
    dend_47 { pt3dadd( -14.0251, 85.193, 28.2948, 0.29 ) }
    dend_47 { pt3dadd( -14.3327, 85.3248, 28.2729, 0.29 ) }
    dend_47 { pt3dadd( -14.7645, 85.5475, 28.2269, 0.29 ) }
    dend_47 { pt3dadd( -15.2763, 85.8636, 28.1491, 0.44 ) }
    dend_47 { pt3dadd( -16.1525, 86.51, 27.9299, 0.59 ) }
    dend_47 { pt3dadd( -16.6958, 87.009, 27.7239, 0.74 ) }
    dend_47 { pt3dadd( -17.054, 87.3973, 27.5393, 0.88 ) }
    dend_47 { pt3dadd( -17.3049, 87.7024, 27.3757, 0.88 ) }
    dend_47 { pt3dadd( -17.7045, 88.2692, 27.0325, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -10.9084, 84.4318, 28.1565, 0.22 ) }
    dend_44 { pt3dadd( -12.1397, 83.9443, 28.029, 0.22 ) }
    dend_44 { pt3dadd( -12.8382, 83.771, 27.8851, 0.22 ) }
    dend_44 { pt3dadd( -13.9537, 83.5926, 27.5689, 0.22 ) }
    dend_44 { pt3dadd( -14.74, 83.4274, 27.2588, 0.22 ) }
    dend_44 { pt3dadd( -15.3206, 83.246, 26.9989, 0.22 ) }
    dend_44 { pt3dadd( -16.0002, 83.0336, 26.6946, 0.22 ) }
    dend_44 { pt3dadd( -17.2361, 82.6737, 26.048, 0.22 ) }
    dend_44 { pt3dadd( -18.1442, 82.4139, 25.4855, 0.22 ) }
    dend_44 { pt3dadd( -19.3342, 82.0849, 24.5814, 0.22 ) }
    dend_44 { pt3dadd( -20.4095, 81.681, 23.6256, 0.22 ) }
    dend_44 { pt3dadd( -31.3786, 78.394, 21.5933, 0.22 ) }
    dend_44 { pt3dadd( -42.0182, 73.8549, 20.2523, 0.22 ) }
    dend_44 { pt3dadd( -52.3235, 68.4445, 19.5719, 0.22 ) }
    dend_44 { pt3dadd( -62.6012, 63.1253, 20.9668, 0.22 ) }
    dend_44 { pt3dadd( -72.3657, 56.7167, 20.9467, 0.22 ) }
    dend_44 { pt3dadd( -81.1552, 48.9852, 21.3973, 0.22 ) }
    dend_44 { pt3dadd( -89.1233, 40.3999, 22.2223, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 83/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -75.5988, 141.098, -40.0988, 0.22 ) }
    dend_35 { pt3dadd( -74.6532, 139.758, -40.3947, 0.22 ) }
    dend_35 { pt3dadd( -74.0174, 138.857, -40.5936, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -75.5988, 141.098, -40.0988, 0.52 ) }
    dend_34 { pt3dadd( -74.4463, 141.984, -40.0606, 0.52 ) }
    dend_34 { pt3dadd( -73.608, 142.629, -40.0329, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -127.528, 116.17, 23.0289, 0.29 ) }
    dend_30 { pt3dadd( -129.205, 117.637, 23.8429, 0.29 ) }
    dend_30 { pt3dadd( -129.691, 117.958, 24.0687, 0.29 ) }
    dend_30 { pt3dadd( -130.531, 118.378, 24.4184, 0.22 ) }
    dend_30 { pt3dadd( -131.281, 118.705, 24.7107, 0.22 ) }
    dend_30 { pt3dadd( -132.511, 119.232, 25.1772, 0.22 ) }
    dend_30 { pt3dadd( -133.002, 119.453, 25.361, 0.22 ) }
    dend_30 { pt3dadd( -134.093, 119.864, 25.6282, 0.22 ) }
    dend_30 { pt3dadd( -134.831, 120.1, 25.7921, 0.22 ) }
    dend_30 { pt3dadd( -135.623, 120.294, 25.9422, 0.29 ) }
    dend_30 { pt3dadd( -136.096, 120.367, 26.0124, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_30 { pt3dadd( -136.722, 120.381, 26.0591, 0.29 ) }
    dend_30 { pt3dadd( -137.839, 120.353, 26.0723, 0.29 ) }
    dend_30 { pt3dadd( -139.252, 120.276, 26.0291, 0.29 ) }
    dend_30 { pt3dadd( -140.404, 120.142, 25.9784, 0.29 ) }
    dend_30 { pt3dadd( -141.378, 119.947, 25.9194, 0.22 ) }
    dend_30 { pt3dadd( -142.841, 119.557, 25.8156, 0.22 ) }
    dend_30 { pt3dadd( -143.608, 119.328, 25.7579, 0.37 ) }
    dend_30 { pt3dadd( -144.627, 119.034, 25.6993, 0.37 ) }
    dend_30 { pt3dadd( -145.418, 118.843, 25.6835, 0.37 ) }
    dend_30 { pt3dadd( -146.287, 118.698, 25.627, 0.37 ) }
    dend_30 { pt3dadd( -147.122, 118.633, 25.5245, 0.29 ) }
    dend_30 { pt3dadd( -148.198, 118.63, 25.3238, 0.22 ) }
    dend_30 { pt3dadd( -149.267, 118.701, 25.0644, 0.22 ) }
    dend_30 { pt3dadd( -150.206, 118.853, 24.7754, 0.22 ) }
    dend_30 { pt3dadd( -151.987, 119.247, 24.1627, 0.22 ) }
    dend_30 { pt3dadd( -152.606, 119.381, 23.9286, 0.22 ) }
    dend_30 { pt3dadd( -153.501, 119.508, 23.5451, 0.22 ) }
    dend_30 { pt3dadd( -154.6, 119.518, 23.021, 0.22 ) }
    dend_30 { pt3dadd( -155.467, 119.405, 22.5773, 0.22 ) }
    dend_30 { pt3dadd( -157.074, 119.109, 21.7818, 0.22 ) }
    dend_30 { pt3dadd( -158.254, 118.785, 21.2901, 0.22 ) }
    dend_30 { pt3dadd( -159.419, 118.337, 20.7871, 0.22 ) }
    dend_30 { pt3dadd( -160.295, 117.855, 20.3572, 0.37 ) }
    dend_30 { pt3dadd( -160.725, 117.514, 20.1184, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -127.528, 116.17, 23.0289, 0.22 ) }
    dend_29 { pt3dadd( -129.053, 115.703, 24.0913, 0.22 ) }
    dend_29 { pt3dadd( -130.122, 115.352, 24.6749, 0.22 ) }
    dend_29 { pt3dadd( -131.117, 114.987, 25.0976, 0.22 ) }
    dend_29 { pt3dadd( -131.722, 114.762, 25.2951, 0.22 ) }
    dend_29 { pt3dadd( -132.755, 114.39, 25.5734, 0.22 ) }
    dend_29 { pt3dadd( -133.515, 114.117, 25.7783, 0.22 ) }
    dend_29 { pt3dadd( -134.557, 113.717, 25.9276, 0.22 ) }
    dend_29 { pt3dadd( -135.606, 113.355, 26.0104, 0.22 ) }
    dend_29 { pt3dadd( -136.841, 112.96, 26.069, 0.22 ) }
    dend_29 { pt3dadd( -137.499, 112.732, 26.0693, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.51077, -260.224, 38.1069, 0.37 ) }
    dend_9 { pt3dadd( 4.95569, -262.112, 38.3015, 0.37 ) }
    dend_9 { pt3dadd( 5.25916, -263.232, 38.4479, 0.37 ) }
    dend_9 { pt3dadd( 5.45816, -263.967, 38.5439, 0.52 ) }
    dend_9 { pt3dadd( 5.5833, -264.429, 38.6043, 0.52 ) }
    dend_9 { pt3dadd( 5.76417, -265.096, 38.6916, 0.59 ) }
    dend_9 { pt3dadd( 6.03132, -266.082, 38.8205, 0.96 ) }
    dend_9 { pt3dadd( 6.12563, -266.396, 38.7955, 1.18 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 43/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.51077, -260.224, 38.1069, 0.22 ) }
    dend_8 { pt3dadd( 5.02956, -260.778, 37.8218, 0.22 ) }
    dend_8 { pt3dadd( 5.7227, -261.519, 37.4408, 0.29 ) }
    dend_8 { pt3dadd( 6.14017, -261.965, 37.2114, 0.29 ) }
    dend_8 { pt3dadd( 6.61868, -262.476, 36.9484, 0.29 ) }
    dend_8 { pt3dadd( 7.12578, -263.018, 36.6697, 0.37 ) }
    dend_8 { pt3dadd( 10.6432, -269.639, 33.3066, 0.37 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 50/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -119.417, 132.344, -98.684, 0.29 ) }
    dend_96 { pt3dadd( -119.946, 132.494, -100.507, 0.29 ) }
    dend_96 { pt3dadd( -120.7, 132.802, -102.595, 0.29 ) }
    dend_96 { pt3dadd( -121.317, 133.154, -104.154, 0.59 ) }
    dend_96 { pt3dadd( -121.898, 133.536, -105.641, 0.44 ) }
    dend_96 { pt3dadd( -122.114, 133.812, -106.481, 0.44 ) }
    dend_96 { pt3dadd( -122.216, 134.156, -107.483, 0.37 ) }
    dend_96 { pt3dadd( -122.18, 134.598, -108.65, 0.22 ) }
    dend_96 { pt3dadd( -122.085, 135.082, -109.71, 0.81 ) }
    dend_96 { pt3dadd( -121.859, 136.024, -111.551, 1.03 ) }
    dend_96 { pt3dadd( -121.345, 137.833, -115.048, 1.03 ) }
    dend_96 { pt3dadd( -120.596, 140.002, -119.343, 0.81 ) }
    dend_96 { pt3dadd( -119.818, 141.834, -123.077, 0.29 ) }
    dend_96 { pt3dadd( -119.504, 142.472, -124.415, 1.33 ) }
    dend_96 { pt3dadd( -119.354, 142.767, -125.022, 1.55 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 65/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -119.417, 132.344, -98.684, 0.29 ) }
    dend_95 { pt3dadd( -120.181, 131.378, -99.2747, 0.29 ) }
    dend_95 { pt3dadd( -120.675, 130.836, -99.5669, 0.29 ) }
    dend_95 { pt3dadd( -121.618, 129.883, -99.9474, 0.59 ) }
    dend_95 { pt3dadd( -121.926, 129.583, -100.008, 0.59 ) }
    dend_95 { pt3dadd( -122.741, 128.749, -100.077, 0.22 ) }
    dend_95 { pt3dadd( -123.708, 127.699, -100.018, 0.22 ) }
    dend_95 { pt3dadd( -124.232, 127.081, -99.8269, 0.22 ) }
    dend_95 { pt3dadd( -125.037, 126.001, -99.3607, 0.22 ) }
    dend_95 { pt3dadd( -125.949, 124.644, -98.6752, 0.66 ) }
    dend_95 { pt3dadd( -126.373, 123.939, -98.3182, 0.96 ) }
    dend_95 { pt3dadd( -127.044, 122.711, -97.7004, 0.96 ) }
    dend_95 { pt3dadd( -127.803, 121.216, -97.0051, 0.22 ) }
    dend_95 { pt3dadd( -128.214, 120.323, -96.5819, 0.22 ) }
    dend_95 { pt3dadd( -128.422, 119.816, -96.3545, 0.52 ) }
    dend_95 { pt3dadd( -128.735, 119.002, -96.0563, 0.22 ) }
    dend_95 { pt3dadd( -129.007, 118.411, -95.8981, 0.22 ) }
    dend_95 { pt3dadd( -129.594, 117.406, -95.9445, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 83/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -89.2548, 102.472, -95.0343, 0.37 ) }
    dend_93 { pt3dadd( -88.6622, 101.058, -93.8915, 0.37 ) }
    dend_93 { pt3dadd( -88.289, 100.041, -93.1019, 0.52 ) }
    dend_93 { pt3dadd( -87.7767, 98.549, -91.9722, 0.44 ) }
    dend_93 { pt3dadd( -87.3512, 97.2793, -91.0489, 0.66 ) }
    dend_93 { pt3dadd( -86.8664, 95.8775, -90.0065, 0.29 ) }
    dend_93 { pt3dadd( -86.4756, 94.6755, -89.0745, 0.29 ) }
    dend_93 { pt3dadd( -86.1433, 93.2528, -87.9254, 0.44 ) }
    dend_93 { pt3dadd( -86.0307, 92.4664, -87.2808, 0.44 ) }
    dend_93 { pt3dadd( -85.9825, 91.3482, -86.3388, 0.66 ) }
    dend_93 { pt3dadd( -86.069, 89.46, -84.7369, 0.37 ) }
    dend_93 { pt3dadd( -86.4139, 87.591, -83.0729, 0.37 ) }
    dend_93 { pt3dadd( -86.9304, 86.042, -81.6503, 0.37 ) }
    dend_93 { pt3dadd( -87.4188, 85.1143, -80.8555, 0.29 ) }
    dend_93 { pt3dadd( -87.815, 84.5754, -80.4261, 0.74 ) }
    dend_93 { pt3dadd( -88.6135, 83.7278, -79.8352, 0.22 ) }
    dend_93 { pt3dadd( -89.7156, 82.718, -79.2742, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_93 { pt3dadd( -90.2688, 82.2384, -79.057, 0.22 ) }
    dend_93 { pt3dadd( -91.8947, 80.7905, -78.4707, 0.22 ) }
    dend_93 { pt3dadd( -93.0075, 79.7528, -78.0558, 0.22 ) }
    dend_93 { pt3dadd( -94.172, 78.6731, -77.6164, 0.22 ) }
    dend_93 { pt3dadd( -94.9864, 77.9441, -77.3143, 0.44 ) }
    dend_93 { pt3dadd( -95.4502, 77.4772, -77.1345, 0.44 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 6/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -89.2548, 102.472, -95.0343, 0.81 ) }
    dend_92 { pt3dadd( -90.7006, 101.804, -95.7642, 0.81 ) }
    dend_92 { pt3dadd( -91.2417, 101.525, -96.0065, 0.81 ) }
    dend_92 { pt3dadd( -91.9044, 101.202, -96.3302, 0.66 ) }
    dend_92 { pt3dadd( -92.8358, 100.773, -96.7818, 0.29 ) }
    dend_92 { pt3dadd( -93.4399, 100.53, -97.0645, 0.37 ) }
    dend_92 { pt3dadd( -94.0954, 100.293, -97.3614, 0.37 ) }
    dend_92 { pt3dadd( -94.6443, 100.101, -97.5755, 0.29 ) }
    dend_92 { pt3dadd( -95.7054, 99.6907, -98.0032, 0.44 ) }
    dend_92 { pt3dadd( -96.4194, 99.4066, -98.3005, 0.59 ) }
    dend_92 { pt3dadd( -97.0759, 99.1239, -98.5805, 0.29 ) }
    dend_92 { pt3dadd( -97.9113, 98.7308, -98.943, 0.59 ) }
    dend_92 { pt3dadd( -98.5979, 98.3589, -99.2505, 0.29 ) }
    dend_92 { pt3dadd( -99.7166, 97.6527, -99.7563, 0.29 ) }
    dend_92 { pt3dadd( -100.059, 97.4029, -99.9059, 0.22 ) }
    dend_92 { pt3dadd( -101.42, 96.3124, -100.539, 0.22 ) }
    dend_92 { pt3dadd( -101.585, 96.1657, -100.619, 0.44 ) }
    dend_92 { pt3dadd( -101.916, 95.8541, -100.786, 0.44 ) }
    dend_92 { pt3dadd( -102.576, 95.2266, -101.126, 0.22 ) }
    dend_92 { pt3dadd( -103.095, 94.7214, -101.387, 0.37 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 26/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 17.6714, 77.2466, 170.284, 0.44 ) }
    dend_83 { pt3dadd( 15.07, 76.6564, 176.373, 0.44 ) }
    dend_83 { pt3dadd( 13.4738, 75.162, 182.645, 0.44 ) }
    dend_83 { pt3dadd( 12.4938, 74.4494, 189.176, 0.44 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 30/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 17.6714, 77.2466, 170.284, 0.22 ) }
    dend_80 { pt3dadd( 19.321, 75.983, 181.409, 0.44 ) }
    dend_80 { pt3dadd( 21.5934, 76.2837, 192.483, 0.44 ) }
    // Section: dend_76, id: dend_76, parent: dend_72 (entry count 33/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 14.4148, 76.8147, 167.71, 0.44 ) }
    dend_76 { pt3dadd( 9.53566, 75.7865, 172.007, 0.44 ) }
    dend_76 { pt3dadd( 4.26904, 75.783, 175.953, 0.44 ) }
    dend_76 { pt3dadd( -0.745704, 75.9099, 180.213, 0.44 ) }
    dend_76 { pt3dadd( -5.15361, 75.4757, 185.08, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 38/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 14.4148, 76.8147, 167.71, 0.22 ) }
    dend_73 { pt3dadd( 18.0033, 74.7997, 177.633, 0.44 ) }
    dend_73 { pt3dadd( 20.2365, 70.3198, 187.185, 0.44 ) }
    dend_73 { pt3dadd( 23.845, 66.4589, 196.565, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 42/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 77.9724, 99.2897, 128.906, 0.44 ) }
    dend_65 { pt3dadd( 81.7732, 105.315, 136.881, 0.44 ) }
    dend_65 { pt3dadd( 85.3093, 112.848, 143.664, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 45/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 77.9724, 99.2897, 128.906, 0.22 ) }
    dend_62 { pt3dadd( 82.9441, 103.107, 135.511, 0.44 ) }
    dend_62 { pt3dadd( 86.9598, 107.28, 142.538, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 78.0659, 97.3985, 122.188, 0.44 ) }
    dend_58 { pt3dadd( 81.6548, 104.656, 125.659, 0.44 ) }
    dend_58 { pt3dadd( 84.0421, 112.799, 128.145, 0.44 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 78.0659, 97.3985, 122.188, 0.22 ) }
    dend_55 { pt3dadd( 84.1798, 95.6238, 126.347, 0.44 ) }
    dend_55 { pt3dadd( 89.8586, 92.8388, 130.598, 0.44 ) }
    dend_55 { pt3dadd( 95.6879, 91.72, 135.34, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -17.7045, 88.2692, 27.0325, 0.37 ) }
    dend_49 { pt3dadd( -18.4046, 88.8459, 26.8235, 0.37 ) }
    dend_49 { pt3dadd( -19.2082, 89.4816, 26.6238, 0.37 ) }
    dend_49 { pt3dadd( -19.812, 89.8758, 26.4986, 0.37 ) }
    dend_49 { pt3dadd( -20.3758, 90.1664, 26.3641, 0.37 ) }
    dend_49 { pt3dadd( -20.8514, 90.3871, 26.2107, 0.52 ) }
    dend_49 { pt3dadd( -21.1985, 90.5474, 26.0802, 0.52 ) }
    dend_49 { pt3dadd( -21.6451, 90.7583, 25.8763, 0.29 ) }
    dend_49 { pt3dadd( -22.3089, 91.0294, 25.4718, 0.29 ) }
    dend_49 { pt3dadd( -22.9384, 91.219, 24.9825, 0.29 ) }
    dend_49 { pt3dadd( -23.6335, 91.356, 24.3577, 0.66 ) }
    dend_49 { pt3dadd( -23.895, 91.3906, 24.104, 0.81 ) }
    dend_49 { pt3dadd( -24.4437, 91.4522, 23.5643, 0.59 ) }
    dend_49 { pt3dadd( -25.345, 91.5861, 22.7305, 0.29 ) }
    dend_49 { pt3dadd( -25.9458, 91.7259, 22.215, 0.29 ) }
    dend_49 { pt3dadd( -26.5219, 91.9167, 21.7672, 0.74 ) }
    dend_49 { pt3dadd( -27.0263, 92.1344, 21.3884, 0.74 ) }
    dend_49 { pt3dadd( -27.4182, 92.3433, 21.0868, 0.74 ) }
    dend_49 { pt3dadd( -28.0671, 92.7535, 20.5963, 0.44 ) }
    dend_49 { pt3dadd( -28.5484, 93.1258, 20.2571, 0.44 ) }
    dend_49 { pt3dadd( -29.3345, 93.8186, 19.7486, 0.52 ) }
    dend_49 { pt3dadd( -29.9056, 94.3756, 19.4022, 0.52 ) }
    dend_49 { pt3dadd( -30.703, 95.2566, 18.8444, 0.44 ) }
    dend_49 { pt3dadd( -31.0168, 95.6518, 18.5477, 0.44 ) }
    dend_49 { pt3dadd( -31.3988, 96.1888, 18.0881, 0.66 ) }
    dend_49 { pt3dadd( -31.8275, 96.8172, 17.5275, 0.81 ) }
    dend_49 { pt3dadd( -32.0897, 97.2284, 17.1641, 0.81 ) }
    dend_49 { pt3dadd( -32.4433, 97.9778, 16.3072, 0.29 ) }
    dend_49 { pt3dadd( -32.6258, 98.684, 15.4041, 0.29 ) }
    dend_49 { pt3dadd( -32.708, 99.2935, 14.5884, 0.52 ) }
    dend_49 { pt3dadd( -32.7181, 99.528, 14.2816, 0.74 ) }
    dend_49 { pt3dadd( -32.7036, 100.033, 13.6042, 0.74 ) }
    dend_49 { pt3dadd( -32.5249, 101.653, 11.3941, 0.66 ) }
    dend_49 { pt3dadd( -32.4586, 101.988, 10.9281, 0.29 ) }
    dend_49 { pt3dadd( -32.3197, 102.44, 10.2777, 0.29 ) }
    dend_49 { pt3dadd( -32.0643, 103.083, 9.35471, 0.29 ) }
    dend_49 { pt3dadd( -31.7714, 103.679, 8.43185, 0.29 ) }
    dend_49 { pt3dadd( -31.4188, 104.246, 7.51164, 0.37 ) }
    dend_49 { pt3dadd( -31.0432, 104.792, 6.64135, 0.52 ) }
    dend_49 { pt3dadd( -30.5872, 105.383, 5.60604, 0.74 ) }
    dend_49 { pt3dadd( -30.2888, 105.73, 4.95316, 0.59 ) }
    dend_49 { pt3dadd( -29.4175, 106.658, 3.1179, 0.37 ) }
    dend_49 { pt3dadd( -29.1675, 106.921, 2.61763, 0.37 ) }
    dend_49 { pt3dadd( -28.8608, 107.243, 2.03738, 0.37 ) }
    dend_49 { pt3dadd( -28.5756, 107.569, 1.4538, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_49 { pt3dadd( -28.1084, 108.142, 0.416894, 0.74 ) }
    dend_49 { pt3dadd( -27.9167, 108.441, -0.112332, 0.74 ) }
    dend_49 { pt3dadd( -27.6619, 109.125, -1.10984, 0.37 ) }
    dend_49 { pt3dadd( -27.5803, 109.501, -1.61245, 0.37 ) }
    dend_49 { pt3dadd( -27.4759, 110.819, -3.2526, 0.44 ) }
    dend_49 { pt3dadd( -27.4883, 111.076, -3.53152, 0.66 ) }
    dend_49 { pt3dadd( -27.5707, 111.571, -3.95901, 0.66 ) }
    dend_49 { pt3dadd( -27.7416, 112.263, -4.46619, 0.44 ) }
    dend_49 { pt3dadd( -27.8538, 112.647, -4.6934, 0.29 ) }
    dend_49 { pt3dadd( -28.0624, 113.346, -5.05491, 0.29 ) }
    dend_49 { pt3dadd( -28.2018, 113.836, -5.26906, 0.37 ) }
    dend_49 { pt3dadd( -28.5601, 115.098, -5.88964, 0.52 ) }
    dend_49 { pt3dadd( -28.8133, 116.019, -6.33985, 0.29 ) }
    dend_49 { pt3dadd( -29.0821, 116.976, -6.81839, 0.74 ) }
    dend_49 { pt3dadd( -29.2278, 117.475, -7.06216, 0.74 ) }
    dend_49 { pt3dadd( -29.4482, 118.242, -7.41207, 0.74 ) }
    dend_49 { pt3dadd( -29.939, 119.815, -8.07047, 0.22 ) }
    dend_49 { pt3dadd( -30.2228, 120.608, -8.35593, 0.22 ) }
    dend_49 { pt3dadd( -30.2937, 120.79, -8.41213, 0.74 ) }
    dend_49 { pt3dadd( -30.4881, 121.243, -8.61977, 0.44 ) }
    dend_49 { pt3dadd( -30.7074, 121.776, -8.91449, 0.29 ) }
    dend_49 { pt3dadd( -31.0092, 122.616, -9.44285, 0.22 ) }
    dend_49 { pt3dadd( -31.1501, 123.076, -9.76006, 0.44 ) }
    dend_49 { pt3dadd( -31.2775, 123.603, -10.1651, 0.29 ) }
    dend_49 { pt3dadd( -31.6659, 125.531, -11.6227, 0.88 ) }
    dend_49 { pt3dadd( -31.7496, 125.989, -11.9612, 0.88 ) }
    dend_49 { pt3dadd( -31.8253, 126.384, -12.2362, 0.22 ) }
    dend_49 { pt3dadd( -31.9013, 126.922, -12.5781, 0.22 ) }
    dend_49 { pt3dadd( -31.9455, 127.289, -12.767, 0.22 ) }
    dend_49 { pt3dadd( -32.0424, 127.899, -12.9944, 0.22 ) }
    dend_49 { pt3dadd( -32.2032, 128.573, -13.1438, 0.22 ) }
    dend_49 { pt3dadd( -32.3382, 128.998, -13.2981, 0.22 ) }
    dend_49 { pt3dadd( -32.6418, 129.768, -13.7863, 0.22 ) }
    dend_49 { pt3dadd( -32.8763, 130.323, -14.208, 0.22 ) }
    dend_49 { pt3dadd( -33.069, 130.801, -14.578, 0.22 ) }
    dend_49 { pt3dadd( -33.2769, 131.373, -15.0036, 0.22 ) }
    dend_49 { pt3dadd( -33.5908, 132.347, -15.6701, 0.66 ) }
    dend_49 { pt3dadd( -34.0538, 133.942, -16.6029, 0.88 ) }
    dend_49 { pt3dadd( -34.3242, 134.944, -17.1078, 0.37 ) }
    dend_49 { pt3dadd( -34.4953, 135.771, -17.5093, 0.37 ) }
    dend_49 { pt3dadd( -34.6084, 136.555, -17.8788, 0.37 ) }
    dend_49 { pt3dadd( -34.6573, 137.468, -18.3311, 0.29 ) }
    dend_49 { pt3dadd( -34.6048, 138.892, -19.0421, 0.29 ) }
    dend_49 { pt3dadd( -34.5095, 139.652, -19.4411, 0.29 ) }
    dend_49 { pt3dadd( -34.2389, 140.877, -20.2888, 0.29 ) }
    dend_49 { pt3dadd( -34.043, 141.473, -20.8671, 0.74 ) }
    dend_49 { pt3dadd( -33.5996, 142.474, -22.2043, 0.37 ) }
    dend_49 { pt3dadd( -33.4633, 142.745, -22.6564, 0.37 ) }
    dend_49 { pt3dadd( -33.3009, 143.019, -23.1866, 0.37 ) }
    dend_49 { pt3dadd( -32.8174, 143.768, -24.778, 0.88 ) }
    dend_49 { pt3dadd( -32.234, 144.63, -26.7989, 0.59 ) }
    dend_49 { pt3dadd( -31.7579, 145.29, -28.4964, 0.37 ) }
    dend_49 { pt3dadd( -31.5567, 145.609, -29.3801, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -17.7045, 88.2692, 27.0325, 0.29 ) }
    dend_48 { pt3dadd( -18.5098, 89.4347, 27.3295, 0.29 ) }
    dend_48 { pt3dadd( -19.0827, 90.2296, 27.4821, 0.29 ) }
    dend_48 { pt3dadd( -19.7448, 91.1302, 27.6198, 0.29 ) }
    dend_48 { pt3dadd( -20.3428, 91.9459, 27.6872, 0.22 ) }
    dend_48 { pt3dadd( -21.0115, 92.8869, 27.7252, 0.22 ) }
    dend_48 { pt3dadd( -21.2512, 93.2439, 27.7301, 0.22 ) }
    dend_48 { pt3dadd( -21.7595, 93.994, 27.681, 0.74 ) }
    dend_48 { pt3dadd( -21.9859, 94.3142, 27.6573, 0.74 ) }
    dend_48 { pt3dadd( -22.6237, 95.1925, 27.5962, 0.44 ) }
    dend_48 { pt3dadd( -22.967, 95.6824, 27.5611, 0.59 ) }
    dend_48 { pt3dadd( -23.3586, 96.2934, 27.5282, 0.59 ) }
    dend_48 { pt3dadd( -24.0766, 97.4314, 27.4999, 0.29 ) }
    dend_48 { pt3dadd( -24.6839, 98.4462, 27.5104, 0.29 ) }
    dend_48 { pt3dadd( -25.0445, 99.0533, 27.5231, 0.29 ) }
    dend_48 { pt3dadd( -25.5822, 99.8912, 27.5542, 0.29 ) }
    dend_48 { pt3dadd( -26.2763, 100.897, 27.556, 0.81 ) }
    dend_48 { pt3dadd( -26.4846, 101.188, 27.5343, 0.81 ) }
    dend_48 { pt3dadd( -27.1085, 102.126, 27.387, 0.29 ) }
    dend_48 { pt3dadd( -27.4674, 102.718, 27.2742, 0.29 ) }
    dend_48 { pt3dadd( -27.9552, 103.512, 27.0614, 0.29 ) }
    dend_48 { pt3dadd( -28.3037, 104.008, 26.8603, 0.29 ) }
    dend_48 { pt3dadd( -28.7614, 104.598, 26.562, 0.29 ) }
    dend_48 { pt3dadd( -29.3334, 105.3, 26.1792, 0.74 ) }
    dend_48 { pt3dadd( -30.316, 106.456, 25.5306, 0.22 ) }
    dend_48 { pt3dadd( -31.2155, 107.509, 24.965, 0.22 ) }
    dend_48 { pt3dadd( -32.149, 108.614, 24.3856, 0.37 ) }
    dend_48 { pt3dadd( -32.5395, 109.043, 24.1697, 0.37 ) }
    dend_48 { pt3dadd( -33.0674, 109.603, 23.9054, 0.22 ) }
    dend_48 { pt3dadd( -33.8634, 110.475, 23.522, 0.22 ) }
    dend_48 { pt3dadd( -34.5743, 111.305, 23.2237, 0.52 ) }
    dend_48 { pt3dadd( -35.4563, 112.387, 22.9313, 0.29 ) }
    dend_48 { pt3dadd( -35.8164, 112.853, 22.8283, 0.29 ) }
    dend_48 { pt3dadd( -36.3758, 113.561, 22.6312, 0.29 ) }
    dend_48 { pt3dadd( -37.2855, 114.646, 22.2901, 0.29 ) }
    dend_48 { pt3dadd( -37.9293, 115.363, 22.0371, 0.29 ) }
    dend_48 { pt3dadd( -38.6585, 116.117, 21.7501, 0.29 ) }
    dend_48 { pt3dadd( -39.3804, 116.79, 21.492, 0.29 ) }
    dend_48 { pt3dadd( -40.4514, 117.721, 21.1477, 0.29 ) }
    dend_48 { pt3dadd( -41.4632, 118.487, 20.8421, 0.29 ) }
    dend_48 { pt3dadd( -41.8491, 118.756, 20.7225, 0.66 ) }
    dend_48 { pt3dadd( -42.1123, 118.949, 20.6324, 0.66 ) }
    dend_48 { pt3dadd( -42.8081, 119.503, 20.3873, 0.22 ) }
    dend_48 { pt3dadd( -43.5764, 120.18, 20.1012, 0.22 ) }
    dend_48 { pt3dadd( -44.4117, 120.984, 19.7932, 0.29 ) }
    dend_48 { pt3dadd( -44.9949, 121.578, 19.5627, 0.29 ) }
    dend_48 { pt3dadd( -45.8874, 122.534, 19.1735, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_48 { pt3dadd( -46.2285, 122.919, 19.0118, 0.52 ) }
    dend_48 { pt3dadd( -46.8905, 123.694, 18.6936, 0.29 ) }
    dend_48 { pt3dadd( -47.659, 124.602, 18.3639, 0.29 ) }
    dend_48 { pt3dadd( -48.3671, 125.456, 18.1601, 0.29 ) }
    dend_48 { pt3dadd( -49.0695, 126.316, 18.043, 0.29 ) }
    dend_48 { pt3dadd( -49.5727, 126.946, 18.0115, 0.29 ) }
    dend_48 { pt3dadd( -50.2485, 127.79, 17.9814, 0.29 ) }
    dend_48 { pt3dadd( -50.9166, 128.652, 17.9277, 0.29 ) }
    dend_48 { pt3dadd( -51.558, 129.55, 17.8608, 0.37 ) }
    dend_48 { pt3dadd( -52.034, 130.273, 17.794, 0.37 ) }
    dend_48 { pt3dadd( -52.6452, 131.201, 17.6029, 0.37 ) }
    dend_48 { pt3dadd( -53.2442, 132.117, 17.3339, 0.29 ) }
    dend_48 { pt3dadd( -53.9553, 133.211, 16.9212, 0.22 ) }
    dend_48 { pt3dadd( -54.4098, 133.92, 16.6087, 0.44 ) }
    dend_48 { pt3dadd( -55.1071, 135.065, 16.1016, 0.81 ) }
    dend_48 { pt3dadd( -56.396, 137.271, 15.1704, 0.22 ) }
    dend_48 { pt3dadd( -57.0449, 138.451, 14.7764, 0.22 ) }
    dend_48 { pt3dadd( -57.4765, 139.352, 14.6029, 0.74 ) }
    dend_48 { pt3dadd( -57.6803, 139.859, 14.5792, 0.74 ) }
    dend_48 { pt3dadd( -58.1323, 141.354, 14.7083, 0.22 ) }
    dend_48 { pt3dadd( -58.2881, 142.47, 14.9636, 0.22 ) }
    dend_48 { pt3dadd( -58.2741, 144.071, 15.4587, 0.29 ) }
    dend_48 { pt3dadd( -58.1608, 145.286, 15.7712, 0.29 ) }
    dend_48 { pt3dadd( -58.0029, 146.334, 15.9776, 0.29 ) }
    dend_48 { pt3dadd( -57.8127, 147.389, 16.1001, 0.29 ) }
    dend_48 { pt3dadd( -57.4659, 149.083, 16.1882, 0.22 ) }
    dend_48 { pt3dadd( -57.0391, 150.76, 16.192, 0.22 ) }
    dend_48 { pt3dadd( -56.6752, 152.053, 16.0563, 0.22 ) }
    dend_48 { pt3dadd( -56.4481, 152.811, 15.9251, 0.37 ) }
    dend_48 { pt3dadd( -56.2013, 153.543, 15.7477, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -89.1233, 40.3999, 22.2223, 0.22 ) }
    dend_46 { pt3dadd( -95.8713, 36.6406, 21.832, 0.22 ) }
    dend_46 { pt3dadd( -102.742, 33.1587, 22.4676, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 33/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -89.1233, 40.3999, 22.2223, 0.22 ) }
    dend_45 { pt3dadd( -99.6435, 34.6135, 20.3963, 0.22 ) }
    dend_45 { pt3dadd( -110.238, 28.685, 20.0762, 0.22 ) }
    dend_45 { pt3dadd( -121.603, 25.0701, 22.1654, 0.22 ) }
    dend_45 { pt3dadd( -133.25, 23.5556, 25.0574, 0.22 ) }
    dend_45 { pt3dadd( -144.31, 20.9134, 29.1897, 0.22 ) }
    dend_45 { pt3dadd( -155.522, 17.053, 31.6446, 0.22 ) }
    dend_45 { pt3dadd( -166.855, 12.8577, 32.4877, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 41/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 6.12563, -266.396, 38.7955, 0.22 ) }
    dend_17 { pt3dadd( 5.117, -266.468, 38.02, 0.22 ) }
    dend_17 { pt3dadd( 4.24334, -266.388, 37.3554, 0.22 ) }
    dend_17 { pt3dadd( 3.70308, -266.304, 36.9652, 0.22 ) }
    dend_17 { pt3dadd( 3.36221, -266.276, 36.7252, 0.22 ) }
    dend_17 { pt3dadd( 2.8419, -266.28, 36.3735, 0.22 ) }
    dend_17 { pt3dadd( 2.48529, -266.311, 36.146, 0.22 ) }
    dend_17 { pt3dadd( 2.06436, -266.372, 35.8868, 0.52 ) }
    dend_17 { pt3dadd( 1.22497, -266.507, 35.382, 0.22 ) }
    dend_17 { pt3dadd( 0.542215, -266.697, 34.9938, 0.22 ) }
    dend_17 { pt3dadd( 0.0646175, -266.893, 34.7436, 0.37 ) }
    dend_17 { pt3dadd( -0.455019, -267.18, 34.4841, 0.37 ) }
    dend_17 { pt3dadd( -1.12879, -267.634, 34.1371, 0.29 ) }
    dend_17 { pt3dadd( -7.21917, -268.058, 29.0042, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.12563, -266.396, 38.7955, 0.96 ) }
    dend_10 { pt3dadd( 6.09461, -266.836, 38.9914, 0.96 ) }
    dend_10 { pt3dadd( 6.01011, -268.034, 39.5247, 0.59 ) }
    dend_10 { pt3dadd( 5.94093, -269.015, 39.9614, 0.59 ) }
    dend_10 { pt3dadd( 5.90112, -269.579, 40.2128, 0.59 ) }
    dend_10 { pt3dadd( 5.81331, -270.824, 40.7671, 0.52 ) }
    dend_10 { pt3dadd( 5.70285, -272.39, 41.4642, 0.74 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 62/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -119.354, 142.767, -125.022, 0.29 ) }
    dend_98 { pt3dadd( -118.941, 143.978, -125.139, 0.29 ) }
    dend_98 { pt3dadd( -118.691, 144.792, -125.232, 0.29 ) }
    dend_98 { pt3dadd( -118.455, 145.934, -125.38, 0.74 ) }
    dend_98 { pt3dadd( -118.333, 147.324, -125.55, 0.52 ) }
    dend_98 { pt3dadd( -118.329, 148.027, -125.698, 0.29 ) }
    dend_98 { pt3dadd( -118.371, 149.224, -126.006, 0.22 ) }
    dend_98 { pt3dadd( -118.415, 149.691, -126.15, 0.22 ) }
    dend_98 { pt3dadd( -118.595, 150.701, -126.521, 0.22 ) }
    dend_98 { pt3dadd( -118.905, 151.818, -126.954, 0.74 ) }
    dend_98 { pt3dadd( -119.529, 153.446, -127.581, 0.29 ) }
    dend_98 { pt3dadd( -119.825, 154.086, -127.862, 0.29 ) }
    dend_98 { pt3dadd( -120.201, 154.81, -128.197, 0.29 ) }
    dend_98 { pt3dadd( -120.592, 155.531, -128.514, 0.29 ) }
    dend_98 { pt3dadd( -120.952, 156.2, -128.787, 0.74 ) }
    dend_98 { pt3dadd( -121.391, 156.964, -129.089, 0.74 ) }
    dend_98 { pt3dadd( -122.004, 157.94, -129.409, 0.37 ) }
    dend_98 { pt3dadd( -122.595, 158.827, -129.706, 0.29 ) }
    dend_98 { pt3dadd( -123.268, 159.822, -130.04, 0.29 ) }
    dend_98 { pt3dadd( -123.81, 160.696, -130.3, 0.29 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 82/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -119.354, 142.767, -125.022, 0.22 ) }
    dend_97 { pt3dadd( -118.179, 141.081, -125.252, 0.22 ) }
    dend_97 { pt3dadd( -117.537, 140.015, -125.447, 0.22 ) }
    dend_97 { pt3dadd( -116.992, 139.063, -125.653, 0.37 ) }
    dend_97 { pt3dadd( -116.623, 138.428, -125.813, 0.37 ) }
    dend_97 { pt3dadd( -116.034, 137.395, -126.095, 0.29 ) }
    dend_97 { pt3dadd( -115.465, 136.347, -126.394, 0.29 ) }
    dend_97 { pt3dadd( -114.92, 135.32, -126.7, 0.29 ) }
    dend_97 { pt3dadd( -114.552, 134.567, -126.95, 0.66 ) }
    dend_97 { pt3dadd( -114.017, 133.303, -127.408, 0.22 ) }
    dend_97 { pt3dadd( -113.63, 132.367, -127.778, 0.22 ) }
    dend_97 { pt3dadd( -113.395, 131.844, -127.999, 0.37 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 94/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 12.4938, 74.4494, 189.176, 0.44 ) }
    dend_85 { pt3dadd( 5.22717, 74.8591, 200.069, 0.44 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 96/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 12.4938, 74.4494, 189.176, 0.22 ) }
    dend_84 { pt3dadd( 13.9508, 71.1003, 199.631, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 98/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 21.5934, 76.2837, 192.483, 0.44 ) }
    dend_82 { pt3dadd( 13.7403, 78.3055, 194.453, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_82 { pt3dadd( 5.65756, 80.1866, 195.35, 0.44 ) }
    dend_82 { pt3dadd( -2.44835, 82.1399, 195.001, 0.44 ) }
    dend_82 { pt3dadd( -10.7899, 82.5124, 194.418, 0.44 ) }
    dend_82 { pt3dadd( -19.1644, 82.5866, 194.629, 0.44 ) }
    dend_82 { pt3dadd( -27.4754, 83.4876, 194.818, 0.44 ) }
    dend_82 { pt3dadd( -35.645, 84.4924, 196.283, 0.44 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 6/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 21.5934, 76.2837, 192.483, 0.22 ) }
    dend_81 { pt3dadd( 26.9779, 76.3498, 202.645, 0.44 ) }
    dend_81 { pt3dadd( 32.5922, 77.6603, 212.598, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 9/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -5.15361, 75.4757, 185.08, 0.44 ) }
    dend_78 { pt3dadd( -6.41728, 62.9794, 183.514, 0.44 ) }
    dend_78 { pt3dadd( -9.3513, 51.0422, 180.641, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 12/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -5.15361, 75.4757, 185.08, 0.22 ) }
    dend_77 { pt3dadd( -7.54767, 82.5903, 189.032, 0.44 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 14/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 23.845, 66.4589, 196.565, 0.44 ) }
    dend_75 { pt3dadd( 28.9235, 64.5249, 204.736, 0.44 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 16/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 23.845, 66.4589, 196.565, 0.22 ) }
    dend_74 { pt3dadd( 26.7877, 62.2149, 207.447, 0.44 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 85.3093, 112.848, 143.664, 0.44 ) }
    dend_67 { pt3dadd( 92.9539, 121.829, 149.529, 0.44 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 20/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 85.3093, 112.848, 143.664, 0.22 ) }
    dend_66 { pt3dadd( 86.4365, 119.484, 154.219, 0.44 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 22/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 86.9598, 107.28, 142.538, 0.44 ) }
    dend_64 { pt3dadd( 89.635, 109.753, 147.314, 0.44 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 24/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 86.9598, 107.28, 142.538, 0.22 ) }
    dend_63 { pt3dadd( 93.494, 112.638, 150.011, 0.44 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 26/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 84.0421, 112.799, 128.145, 0.44 ) }
    dend_60 { pt3dadd( 93.4804, 113.587, 124.546, 0.44 ) }
    dend_60 { pt3dadd( 103.424, 114.726, 122.961, 0.44 ) }
    dend_60 { pt3dadd( 113.344, 116.545, 121.868, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 30/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 84.0421, 112.799, 128.145, 0.22 ) }
    dend_59 { pt3dadd( 79.8413, 118.091, 134.37, 0.44 ) }
    dend_59 { pt3dadd( 74.2763, 122.899, 139.858, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 33/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 95.6879, 91.72, 135.34, 0.44 ) }
    dend_57 { pt3dadd( 100.8, 89.1151, 141.885, 0.44 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 35/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 95.6879, 91.72, 135.34, 0.22 ) }
    dend_56 { pt3dadd( 107.623, 92.7444, 132.039, 0.44 ) }
    dend_56 { pt3dadd( 119.598, 94.4959, 129.21, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 38/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.70285, -272.39, 41.4642, 0.52 ) }
    dend_12 { pt3dadd( 5.51647, -273.618, 41.5156, 0.52 ) }
    dend_12 { pt3dadd( 5.41313, -274.417, 41.4429, 0.74 ) }
    dend_12 { pt3dadd( 5.40949, -274.993, 41.4328, 0.81 ) }
    dend_12 { pt3dadd( 5.46484, -275.854, 41.4625, 1.03 ) }
    dend_12 { pt3dadd( 5.52892, -276.725, 41.5629, 0.74 ) }
    dend_12 { pt3dadd( 5.59203, -277.701, 41.7508, 0.44 ) }
    dend_12 { pt3dadd( 5.70894, -279.047, 42.0018, 0.29 ) }
    dend_12 { pt3dadd( 5.96569, -281.038, 42.4968, 0.29 ) }
    dend_12 { pt3dadd( 6.07248, -281.65, 42.6969, 0.29 ) }
    dend_12 { pt3dadd( 6.32719, -282.701, 43.1706, 1.47 ) }
    dend_12 { pt3dadd( 6.52241, -283.289, 43.5526, 1.47 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.70285, -272.39, 41.4642, 0.37 ) }
    dend_11 { pt3dadd( 6.44039, -272.87, 41.0621, 0.37 ) }
    dend_11 { pt3dadd( 7.13017, -273.319, 40.686, 0.37 ) }
    dend_11 { pt3dadd( 7.80779, -273.76, 40.3166, 0.29 ) }
    dend_11 { pt3dadd( 8.95741, -274.507, 39.6898, 0.29 ) }
    dend_11 { pt3dadd( 9.53351, -274.882, 39.3757, 0.29 ) }
    dend_11 { pt3dadd( 10.2981, -275.379, 38.9588, 0.29 ) }
    dend_11 { pt3dadd( 17.9048, -280.383, 36.5442, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.52241, -283.289, 43.5526, 1.03 ) }
    dend_14 { pt3dadd( 6.37318, -283.822, 43.5857, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 60/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.52241, -283.289, 43.5526, 0.22 ) }
    dend_13 { pt3dadd( 5.44957, -282.249, 43.663, 0.22 ) }
    dend_13 { pt3dadd( 4.62681, -281.488, 43.6663, 0.22 ) }
    dend_13 { pt3dadd( 4.00984, -280.895, 43.6173, 0.22 ) }
    dend_13 { pt3dadd( 3.46071, -280.329, 43.5413, 0.22 ) }
    dend_13 { pt3dadd( 2.74541, -279.591, 43.4422, 0.22 ) }
    dend_13 { pt3dadd( 2.0834, -278.909, 43.3506, 0.22 ) }
    dend_13 { pt3dadd( 1.50295, -278.367, 43.2077, 0.22 ) }
    dend_13 { pt3dadd( 0.971203, -277.874, 43.0069, 0.22 ) }
    dend_13 { pt3dadd( 0.581616, -277.485, 42.8073, 0.22 ) }
    dend_13 { pt3dadd( -6.71722, -270.86, 42.2122, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.37318, -283.822, 43.5857, 0.96 ) }
    dend_16 { pt3dadd( 6.42318, -285.368, 43.3998, 0.96 ) }
    dend_16 { pt3dadd( 6.45246, -286.273, 43.291, 0.96 ) }
    dend_16 { pt3dadd( 6.51022, -288.059, 43.0762, 1.33 ) }
    dend_16 { pt3dadd( 6.58952, -290.51, 42.7814, 0.22 ) }
    dend_16 { pt3dadd( 6.63751, -291.994, 42.603, 0.22 ) }
    dend_16 { pt3dadd( 6.69951, -293.91, 42.3725, 0.22 ) }
    dend_16 { pt3dadd( 8.94246, -307.731, 42.2982, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 79/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.37318, -283.822, 43.5857, 0.22 ) }
    dend_15 { pt3dadd( 4.91818, -283.629, 43.188, 0.22 ) }
    dend_15 { pt3dadd( 3.73782, -283.472, 42.8653, 0.22 ) }
    dend_15 { pt3dadd( 2.91043, -283.363, 42.639, 0.22 ) }
    dend_15 { pt3dadd( 1.33453, -283.153, 42.2082, 0.22 ) }
    dend_15 { pt3dadd( 0.973096, -283.105, 42.1094, 0.22 ) }
    dend_15 { pt3dadd( -8.56946, -282.72, 38.5578, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_86 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_86, dend_23, dend_0, axon_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, axon_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_5 = new SectionList()
    dend_86 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_106 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_73 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_108 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_105 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_102 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_26 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_103 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_99 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_90 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_71 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_70 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_68 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_43 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_33 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_32 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_28 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_27 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_94 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_44 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_49 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_48 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_45 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_82 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_86 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_87 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_88 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_89 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_107 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_47 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_106 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_69 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_37 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_53 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_104 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_19 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_61 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_58 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_55 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_62 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_65 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_64 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_72 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_57 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_79 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_63 OneSecGrp_SectionRef_102.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_34 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_59 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_66 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_67 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_46 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_56 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_60 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_91 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_83 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_80 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_76 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_100 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_101 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_73 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_84 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_77 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_92 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_85 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_29 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_75 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_74 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_81 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_78 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_93 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_9 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_30 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_8 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_10 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_95 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_17 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_12 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_14 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_11 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_96 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_15 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_97 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_13 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_98 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_16 OneSecGrp_SectionRef_111.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_79, dend_79, dend_72, dend_72, dend_61, dend_61, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_80, dend_80, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_65, dend_65, dend_62, dend_62, dend_58, dend_58, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_85, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_78, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_60, dend_60, dend_59, dend_59, dend_57, dend_56, dend_56, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_0 nseg = 9
    dend_108 nseg = 7
    dend_24 nseg = 3
    dend_1 nseg = 3
    dend_105 nseg = 3
    dend_51 nseg = 3
    dend_36 nseg = 3
    dend_22 nseg = 7
    dend_2 nseg = 5
    dend_102 nseg = 3
    dend_38 nseg = 5
    dend_26 nseg = 3
    dend_103 nseg = 7
    dend_99 nseg = 5
    dend_90 nseg = 5
    dend_71 nseg = 3
    dend_70 nseg = 7
    dend_68 nseg = 9
    dend_50 nseg = 5
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 5
    dend_94 nseg = 3
    dend_44 nseg = 5
    dend_49 nseg = 5
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_82 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BTC_0a7f6392e3_0_0


