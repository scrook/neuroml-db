// Cell: Cell_472352327
/*
{
  "id" : "Cell_472352327",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "347.163, 271.471, 27.44, 10.1496", "352.238, 271.471, 27.44, 10.1496", "357.312, 271.471, 27.44, 10.1496" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "352.237, 271.471, 27.44, 1.0", "358.079, 285.287, 27.44, 1.0", "363.92, 299.103, 27.44, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000492659375296
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "354.754, 274.319, 35.2111, 0.368", "355.468, 275.139, 35.103, 0.4998", "355.578, 276.235, 35.0683, 0.4392", "355.425, 277.341, 34.925, 0.436", "355.852, 278.337, 34.6752, 0.3558", "356.506, 279.23, 34.3806, 0.3402", "357.102, 280.202, 34.144, 0.3512", "357.561, 281.243, 34.0432, 0.4068", "357.883, 282.31, 34.1127, 0.5678" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000492659375296
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "350.528, 267.757, 23.9155, 0.3576", "350.077, 266.776, 23.3456, 0.4198", "349.364, 265.931, 23.0775, 0.5856", "348.659, 265.04, 22.8504, 0.6488", "348.173, 264.015, 22.7712, 0.5778", "348.043, 262.906, 22.8538, 0.4444", "347.641, 261.836, 22.9878, 0.4356", "347.091, 260.835, 23.1733, 0.4042", "346.327, 260.044, 23.4565, 0.4208", "345.456, 259.304, 23.6958, 0.5444", "344.507, 258.665, 23.8583, 0.5518", "343.635, 257.924, 23.9577, 0.4984", "342.709, 257.252, 24.0139, 0.4972", "341.997, 256.358, 24.0323, 0.7058", "341.274, 255.471, 24.0199, 0.7552", "340.476, 254.651, 23.9962, 0.6554", "339.711, 253.801, 23.9627, 0.712", "339.101, 252.832, 23.9154, 0.7882", "338.494, 251.863, 23.8503, 0.8408", "337.685, 251.054, 23.7608, 0.9112", "336.719, 250.441, 23.6362, 0.7156" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000492659375296
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "350.268, 268.914, 31.6988, 0.2792", "349.497, 268.461, 33.29, 0.2832", "348.495, 268.024, 34.5408, 0.2906", "347.807, 267.131, 35.4777, 0.3042", "347.369, 266.078, 36.1304, 0.3304", "347.047, 264.987, 36.5613, 0.3734", "346.765, 263.896, 36.8357, 0.4802", "346.438, 262.819, 37.1487, 0.5468", "345.817, 261.91, 37.476, 0.6222", "344.814, 261.483, 37.7818, 0.5374", "343.908, 260.97, 38.1198, 0.5556", "343.312, 260.04, 38.5294, 0.6536", "342.783, 259.071, 38.9908, 0.522", "342.252, 258.091, 39.4691, 0.427", "341.719, 257.098, 39.9308, 0.4432", "341.186, 256.102, 40.3589, 0.4538", "340.585, 255.139, 40.724, 0.5682", "339.871, 254.249, 41.0007, 0.55", "339.115, 253.391, 41.2006, 0.489", "338.311, 252.579, 41.3529, 0.5082", "337.442, 251.84, 41.5005, 0.5884", "336.515, 251.206, 41.7004, 0.5204", "335.852, 250.345, 41.9185, 0.5304", "335.447, 249.277, 42.1224, 0.5764", "335.143, 248.183, 42.3394, 0.5274", "334.871, 247.083, 42.5726, 0.4028", "334.468, 246.022, 42.7736, 0.3346", "333.984, 244.985, 42.9229, 0.3334", "333.497, 243.95, 43.0388, 0.41", "333.134, 242.87, 43.1379, 0.3976", "332.839, 241.765, 43.2306, 0.4384", "332.626, 240.643, 43.3278, 0.4328", "332.614, 239.504, 43.4403, 0.3594", "333.244, 238.744, 43.6579, 0.3", "333.508, 237.876, 43.9961, 0.2748", "332.754, 237.029, 44.3075, 0.275", "332.185, 236.037, 44.553, 0.2752", "331.638, 235.033, 44.7322, 0.2758", "331.026, 234.067, 44.8532, 0.2768", "330.343, 233.148, 44.924, 0.2786", "329.661, 232.231, 44.9702, 0.282", "328.986, 231.308, 45.0237, 0.2882", "328.398, 230.333, 45.0968, 0.301", "328.044, 229.245, 45.1951, 0.3184", "327.689, 228.159, 45.3312, 0.3816", "327.271, 227.111, 45.5512, 0.3486", "326.793, 226.093, 45.8422, 0.3286", "326.442, 225.032, 46.1975, 0.3222", "326.038, 224.0, 46.5895, 0.3884", "325.393, 223.064, 46.9568, 0.3626", "325.301, 222.039, 47.2665, 0.348", "325.507, 220.917, 47.5311, 0.389", "325.421, 219.789, 47.7694, 0.3638", "325.202, 218.726, 48.0992, 0.3502", "324.935, 217.732, 48.5792, 0.3928", "324.128, 217.103, 49.0526, 0.3708", "323.145, 216.526, 49.4665, 0.3642", "322.418, 215.675, 49.8571, 0.414", "321.783, 214.734, 50.2295, 0.4346", "321.148, 213.794, 50.5756, 0.3628", "320.66, 212.778, 50.9118, 0.3066", "320.504, 211.674, 51.2688, 0.2868", "320.439, 210.551, 51.6415, 0.2974", "320.205, 209.442, 51.9786, 0.3168", "319.827, 208.365, 52.2519, 0.3532", "319.277, 207.368, 52.4905, 0.4182", "318.523, 206.529, 52.7338, 0.5514", "317.726, 205.727, 52.9852, 0.736", "316.97, 204.881, 53.2336, 0.6956", "316.426, 203.885, 53.4366, 0.6476", "315.933, 202.853, 53.5931, 0.6568", "315.441, 201.82, 53.7093, 0.6546", "314.647, 201.021, 53.816, 0.5156", "313.738, 200.335, 53.9297, 0.4546", "313.469, 199.283, 54.033, 0.5312", "313.119, 198.197, 54.1265, 0.6676", "312.495, 197.242, 54.2153, 0.7188", "311.851, 196.297, 54.3026, 0.6492", "311.293, 195.299, 54.4093, 0.6324", "310.863, 194.248, 54.5588, 0.5142", "310.442, 193.192, 54.7431, 0.488", "310.021, 192.137, 54.948, 0.6468", "309.552, 191.1, 55.155, 0.6204", "308.765, 190.276, 55.3143, 0.5286", "307.994, 189.432, 55.4277, 0.5654", "307.5, 188.402, 55.505, 0.545", "307.1, 187.331, 55.5604, 0.4798", "307.083, 186.189, 55.6088, 0.491", "306.88, 185.065, 55.6623, 0.5568", "306.273, 184.096, 55.7306, 0.4602", "305.784, 183.066, 55.8454, 0.428", "305.362, 182.012, 56.0101, 0.3408", "304.94, 180.956, 56.208, 0.3124", "304.517, 179.902, 56.425, 0.2988", "304.079, 178.847, 56.6266, 0.3142", "303.62, 177.799, 56.7795, 0.3734", "303.161, 176.751, 56.8873, 0.334", "302.658, 175.729, 56.9906, 0.3002", "302.145, 174.71, 57.0987, 0.2748" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000492659375296,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "363.92, 299.103, 27.44, 1.0", "369.761, 312.919, 27.44, 1.0", "375.603, 326.735, 27.44, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "357.883, 282.31, 34.1127, 0.5678", "358.561, 282.484, 34.7091, 0.4576", "359.654, 282.329, 35.0036, 0.417", "360.675, 282.736, 35.1142, 0.4038", "361.716, 283.209, 35.2181, 0.483", "362.796, 283.585, 35.3248, 0.583", "363.888, 283.901, 35.4612, 0.539", "364.982, 284.211, 35.6157, 0.4256", "366.076, 284.52, 35.772, 0.3716", "367.169, 284.828, 35.9232, 0.4278", "368.247, 285.203, 36.0002, 0.4598", "369.319, 285.596, 35.9926, 0.4118", "370.388, 285.991, 35.9134, 0.3866", "371.459, 286.385, 35.7809, 0.4864", "372.361, 287.074, 35.6213, 0.4188", "372.772, 288.136, 35.4679, 0.3752", "373.372, 289.108, 35.327, 0.3564", "374.174, 289.909, 35.1422, 0.4772", "374.984, 290.702, 34.9213, 0.4024", "375.794, 291.495, 34.6746, 0.3424", "376.63, 292.268, 34.4319, 0.3072", "377.512, 292.997, 34.2384, 0.3298", "378.401, 293.7, 34.0452, 0.4022", "379.29, 294.397, 33.8596, 0.3894", "380.179, 295.095, 33.691, 0.3922", "381.013, 295.872, 33.6375, 0.4966", "381.807, 296.671, 33.7117, 0.4392", "382.601, 297.47, 33.8764, 0.4064", "383.395, 298.269, 34.1006, 0.4448", "384.027, 299.22, 34.2832, 0.4936", "384.647, 300.182, 34.4058, 0.4628", "385.265, 301.145, 34.461, 0.5378", "385.907, 302.091, 34.4436, 0.493", "386.566, 303.024, 34.3658, 0.3866", "387.225, 303.955, 34.2527, 0.3034", "387.884, 304.887, 34.1278, 0.281", "388.543, 305.82, 34.0015, 0.2866", "389.35, 306.628, 33.9004, 0.2968", "390.219, 307.373, 33.8332, 0.3168", "391.087, 308.118, 33.7954, 0.3476", "391.843, 308.976, 33.7795, 0.4362", "392.508, 309.907, 33.7798, 0.4466", "393.172, 310.839, 33.7904, 0.5262", "393.852, 311.758, 33.8083, 0.6106", "394.65, 312.577, 33.8341, 0.6164", "395.449, 313.397, 33.8691, 0.444", "396.249, 314.215, 33.9142, 0.3254", "397.067, 315.015, 33.9696, 0.2746" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "357.883, 282.31, 34.1127, 0.5678", "357.836, 283.526, 34.2874, 0.6092", "357.763, 284.654, 34.5103, 0.463", "357.401, 285.737, 34.6766, 0.4332", "357.023, 286.817, 34.7654, 0.3508", "356.647, 287.897, 34.776, 0.3308", "356.485, 289.019, 34.6727, 0.3338", "356.354, 290.144, 34.4879, 0.3736", "356.225, 291.268, 34.2566, 0.5102", "356.191, 292.408, 34.0357, 0.4592", "356.268, 293.548, 33.8626, 0.4682", "356.432, 294.681, 33.7277, 0.4408", "356.655, 295.802, 33.623, 0.374", "356.88, 296.923, 33.5398, 0.3282", "357.106, 298.043, 33.4692, 0.3216", "357.332, 299.164, 33.4043, 0.3872", "357.582, 300.281, 33.3522, 0.3604", "357.842, 301.395, 33.3164, 0.3438", "357.929, 302.534, 33.2937, 0.3816", "357.995, 303.677, 33.2805, 0.3486", "358.452, 304.724, 33.2727, 0.3284", "358.835, 305.802, 33.2674, 0.322", "358.676, 306.935, 33.2606, 0.3882", "358.518, 308.068, 33.2514, 0.3612", "358.354, 309.2, 33.2385, 0.3512", "358.161, 310.327, 33.2206, 0.3666", "357.969, 311.455, 33.1962, 0.46", "357.777, 312.583, 33.1607, 0.5454" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "336.719, 250.441, 23.6362, 0.7156", "335.711, 250.17, 23.4429, 0.5622", "334.576, 250.218, 23.188, 0.4056", "333.483, 249.899, 22.8927, 0.4116" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "336.719, 250.441, 23.6362, 0.7156", "336.035, 249.164, 24.0383, 0.5244", "335.575, 248.116, 24.0592, 0.5152" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "302.145, 174.71, 57.0987, 0.2748", "301.052, 174.084, 57.1477, 0.2756", "300.074, 173.499, 57.169, 0.2766", "299.157, 172.825, 57.1981, 0.2784", "298.072, 172.506, 57.2536, 0.2818", "296.943, 172.426, 57.3471, 0.2876", "295.912, 171.974, 57.5224, 0.2998", "295.005, 171.312, 57.7909, 0.3162", "294.096, 170.648, 58.1213, 0.3774", "293.151, 170.04, 58.4752, 0.3412", "292.108, 169.583, 58.8053, 0.3136", "291.058, 169.138, 59.1027, 0.2996", "290.009, 168.693, 59.3648, 0.323", "288.959, 168.248, 59.5952, 0.3538", "287.909, 167.803, 59.8007, 0.4726", "286.887, 167.307, 59.9872, 0.3938", "285.941, 166.671, 60.1572, 0.3266", "284.963, 166.096, 60.2997, 0.2768", "283.887, 165.707, 60.3921, 0.2788", "282.801, 165.349, 60.4419, 0.2824", "281.691, 165.079, 60.4565, 0.289", "280.565, 164.872, 60.4414, 0.3024", "279.493, 164.539, 60.4024, 0.321", "278.627, 163.804, 60.3439, 0.386", "277.938, 162.895, 60.2588, 0.3584", "277.363, 161.911, 60.1255, 0.3402", "276.817, 160.913, 59.9502, 0.3746", "276.272, 159.914, 59.7464, 0.336", "275.726, 158.914, 59.5266, 0.304", "275.18, 157.915, 59.3034, 0.2818", "274.634, 156.916, 59.089, 0.288", "274.093, 155.911, 58.9033, 0.2994", "273.56, 154.9, 58.7658, 0.3216", "273.026, 153.887, 58.6631, 0.3574", "272.492, 152.876, 58.5836, 0.4496", "271.924, 151.884, 58.5175, 0.4952", "271.204, 151.039, 58.4181, 0.5018", "270.414, 150.276, 58.2624, 0.4356", "269.723, 149.367, 58.1344, 0.463", "269.006, 148.477, 58.0339, 0.473", "268.346, 147.543, 57.958, 0.4594", "267.578, 146.712, 57.9051, 0.3616", "266.728, 145.957, 57.855, 0.3042", "265.892, 145.186, 57.801, 0.2826", "265.222, 144.31, 57.7598, 0.2894", "264.819, 143.239, 57.7307, 0.3016", "264.183, 142.32, 57.7133, 0.3268", "263.474, 141.428, 57.7074, 0.361", "262.834, 140.48, 57.7128, 0.4858", "262.17, 139.55, 57.7254, 0.4192", "261.392, 138.716, 57.7405, 0.3684", "260.648, 137.852, 57.7682, 0.38", "259.822, 137.073, 57.8152, 0.346", "258.894, 136.407, 57.86, 0.3224", "257.988, 135.71, 57.8914, 0.317", "257.06, 135.042, 57.9107, 0.349", "256.077, 134.461, 57.9191, 0.4328", "254.994, 134.116, 57.9191, 0.4704", "254.085, 133.476, 57.8858, 0.4238", "253.09, 132.937, 57.8558, 0.446", "252.006, 132.577, 57.8438, 0.417", "251.028, 132.004, 57.8483, 0.4752", "250.395, 131.076, 57.8992, 0.497", "249.576, 130.299, 57.9956, 0.4986", "248.787, 129.473, 58.0821, 0.4598", "248.127, 128.541, 58.1473, 0.3622", "247.651, 127.502, 58.191, 0.3054", "247.282, 126.42, 58.2142, 0.2846", "246.455, 125.636, 58.2187, 0.2928", "245.539, 124.953, 58.2117, 0.3096", "244.52, 124.434, 58.2005, 0.3338", "243.416, 124.134, 58.1848, 0.4112", "242.279, 124.018, 58.1624, 0.3984", "241.306, 123.415, 58.1316, 0.4472", "240.361, 122.77, 58.0896, 0.4132", "239.41, 122.138, 58.0314, 0.498", "238.606, 121.325, 57.9421, 0.3938", "237.737, 120.596, 57.8127, 0.3266", "237.205, 119.585, 57.6713, 0.277", "236.551, 118.675, 57.4773, 0.279", "235.638, 118.076, 57.1903, 0.2826", "234.659, 117.496, 56.9274, 0.2896", "233.781, 116.787, 56.7263, 0.3024", "233.27, 115.804, 56.5603, 0.3268", "232.961, 114.705, 56.4337, 0.3682", "232.345, 113.784, 56.3548, 0.4634", "231.479, 113.042, 56.3018, 0.5516", "230.643, 112.265, 56.273, 0.4568", "229.823, 111.508, 56.3326, 0.3908", "228.88, 110.897, 56.4239, 0.4222", "227.948, 110.24, 56.4838, 0.42", "227.033, 109.554, 56.5029, 0.4796", "226.03, 109.016, 56.4592, 0.511", "225.38, 108.152, 56.3528, 0.496", "224.78, 107.184, 56.1837, 0.5936", "224.025, 106.33, 55.9709, 0.6232", "223.261, 105.502, 55.6802, 0.4988", "222.407, 104.753, 55.3694, 0.4522", "222.006, 103.78, 54.9752, 0.3878", "222.723, 103.073, 54.5143, 0.3896", "223.213, 102.083, 54.0302, 0.4914", "223.526, 101.013, 53.5394, 0.4298", "223.527, 99.8882, 53.0776, 0.388", "222.765, 99.0428, 52.7167, 0.417", "222.0, 98.1982, 52.4126, 0.4104", "221.333, 97.2707, 52.1716, 0.462", "220.58, 96.4466, 51.8972, 0.4776", "219.709, 95.7498, 51.6144, 0.4368", "218.677, 95.2627, 51.3898, 0.4712", "217.624, 94.8385, 51.1888, 0.4576", "216.764, 94.1266, 51.0401, 0.5806", "216.345, 93.0827, 50.925, 0.5452", "216.132, 91.9798, 50.8203, 0.6162", "215.595, 90.9756, 50.7676, 0.7702", "214.938, 90.0438, 50.75, 0.7184", "214.297, 89.0988, 50.724, 0.8878", "213.847, 88.061, 50.682, 0.8278", "213.546, 86.9659, 50.6038, 0.7014", "213.083, 85.9286, 50.4652, 0.7702", "212.743, 84.8578, 50.2832, 0.7986", "212.857, 83.7591, 50.0702, 0.6458", "213.505, 82.8671, 49.8565, 0.4448", "214.332, 82.0834, 49.665, 0.3588", "215.08, 81.2209, 49.476, 0.41", "215.735, 80.3048, 49.2506, 0.3976", "215.944, 79.262, 48.9656, 0.4384", "215.698, 78.1615, 48.6898, 0.4328", "215.136, 77.1866, 48.477, 0.3596", "214.399, 76.338, 48.356, 0.3004", "214.065, 75.3216, 48.1765, 0.2754", "214.041, 74.5572, 47.7344, 0.2762", "214.041, 73.4551, 47.3393, 0.2776", "213.539, 72.4562, 47.075, 0.2802", "213.39, 71.3419, 46.9798, 0.2852", "213.277, 70.2137, 46.9694, 0.294", "213.395, 69.0852, 47.0778, 0.3116", "213.259, 67.975, 47.2942, 0.339", "212.807, 66.9306, 47.5168, 0.4142", "212.359, 65.8922, 47.6963, 0.435", "212.01, 64.8433, 47.8363, 0.3636", "211.3, 63.9669, 47.9996, 0.3078", "210.542, 63.1145, 48.116, 0.289", "209.96, 62.1766, 48.2163, 0.3024", "209.749, 61.058, 48.3356, 0.321", "209.415, 60.0398, 48.5416, 0.3858", "208.74, 59.1759, 48.8278, 0.358", "208.063, 58.2715, 49.1078, 0.3394", "207.32, 57.4227, 49.3657, 0.3734", "206.407, 56.7943, 49.4967, 0.3338", "205.344, 56.4444, 49.5113, 0.2996", "204.248, 56.2503, 49.5373, 0.274", "203.123, 56.2581, 49.5298, 0.2736", "201.991, 56.1554, 49.453, 0.2728", "200.88, 55.8874, 49.2985, 0.2712", "199.76, 55.9243, 49.0739, 0.2684", "198.899, 56.3143, 48.6111, 0.2626", "197.919, 56.7529, 48.055, 0.2542", "197.131, 57.3566, 47.392, 0.2288", "196.424, 58.2296, 46.2, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "302.145, 174.71, 57.0987, 0.2748", "301.572, 173.861, 57.7839, 0.2288", "300.943, 172.928, 58.2246, 0.4142", "300.456, 171.907, 58.4248, 0.435", "300.423, 170.771, 58.6006, 0.3636", "300.451, 169.627, 58.7524, 0.308", "300.488, 168.484, 58.8862, 0.2894", "299.925, 167.519, 59.0234, 0.3032", "298.914, 166.992, 59.1758, 0.3224", "297.943, 166.411, 59.3541, 0.3884", "297.289, 165.48, 59.5742, 0.3628", "296.636, 164.548, 59.8262, 0.3484", "295.983, 163.616, 60.0998, 0.3898", "295.328, 162.685, 60.3842, 0.3638", "294.671, 161.759, 60.6782, 0.3578", "294.0, 160.853, 60.9941, 0.3708", "293.326, 159.949, 61.3152, 0.5052", "292.612, 159.065, 61.6078, 0.4488", "291.836, 158.225, 61.8302, 0.4552", "291.054, 157.39, 62.0001, 0.3858", "290.226, 156.602, 62.1356, 0.423", "289.368, 155.845, 62.2544, 0.3734", "288.549, 155.052, 62.3851, 0.3988", "287.922, 154.107, 62.585, 0.3338", "287.296, 153.162, 62.8463, 0.3", "286.669, 152.217, 63.1523, 0.2746", "286.044, 151.272, 63.4886, 0.2746", "285.418, 150.327, 63.8403, 0.2746", "284.799, 149.378, 64.1939, 0.2746", "284.252, 148.385, 64.5383, 0.2746", "283.71, 147.389, 64.8715, 0.2746", "283.168, 146.393, 65.1904, 0.2748", "282.628, 145.391, 65.4797, 0.2748", "282.092, 144.38, 65.7146, 0.2752", "281.572, 143.366, 65.9162, 0.2756", "281.455, 142.261, 66.108, 0.2764", "281.726, 141.188, 66.3359, 0.278", "281.541, 140.086, 66.6548, 0.281", "281.356, 138.983, 67.0474, 0.2866", "281.17, 137.875, 67.485, 0.2966", "280.989, 136.755, 67.9255, 0.3162", "280.808, 135.634, 68.3603, 0.3476", "280.616, 134.515, 68.7828, 0.4302", "280.324, 133.435, 69.2051, 0.4658", "279.804, 132.454, 69.6609, 0.415", "279.256, 131.483, 70.1372, 0.4298", "278.571, 130.587, 70.5886, 0.386", "277.745, 129.795, 70.9727, 0.4232", "276.975, 128.969, 71.3384, 0.3736", "276.344, 128.061, 71.766, 0.3994", "275.712, 127.152, 72.2425, 0.3348", "275.173, 126.191, 72.7381, 0.3016", "274.821, 125.111, 73.1973, 0.2776", "274.17, 124.228, 73.663, 0.2802", "273.279, 123.574, 74.1563, 0.285", "272.475, 122.823, 74.6494, 0.294", "271.709, 122.02, 75.1114, 0.3112", "270.86, 121.285, 75.5129, 0.3384", "270.23, 120.337, 75.8607, 0.4134", "269.596, 119.411, 76.2051, 0.4334", "268.737, 118.697, 76.5573, 0.3606", "268.038, 117.87, 76.8793, 0.3024", "267.69, 116.814, 77.2313, 0.279", "267.374, 115.756, 77.644, 0.283", "267.098, 114.66, 78.0438, 0.29", "267.01, 113.525, 78.3978, 0.3042", "267.009, 112.382, 78.7032, 0.3244", "267.009, 111.314, 79.072, 0.3924", "267.009, 110.248, 79.5071, 0.3702", "267.076, 109.12, 79.8748, 0.362", "267.726, 108.271, 80.157, 0.4148", "268.146, 107.258, 80.3718, 0.4116", "268.344, 106.132, 80.5339, 0.4402", "268.381, 104.994, 80.6772, 0.5524", "268.381, 103.852, 80.8046, 0.7032", "268.381, 102.721, 80.9774, 0.803", "268.397, 101.585, 81.1689, 0.7172", "268.685, 100.486, 81.3352, 0.4992", "268.979, 99.3807, 81.4694, 0.3812", "269.456, 98.3459, 81.5791, 0.3752", "270.062, 97.3765, 81.6754, 0.4758", "270.403, 96.2867, 81.7664, 0.5758" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "397.067, 315.015, 33.9696, 0.2746", "397.421, 315.33, 33.6, 0.2288", "398.269, 316.084, 33.0742, 0.2766", "399.117, 316.839, 32.8499, 0.2784", "399.965, 317.593, 32.5856, 0.2816", "400.813, 318.347, 32.2969, 0.2874", "401.661, 319.102, 31.9967, 0.2994", "402.518, 319.849, 31.7008, 0.3152", "403.412, 320.56, 31.4443, 0.3754", "404.323, 321.251, 31.2281, 0.3376", "405.215, 321.964, 31.026, 0.3068", "406.002, 322.78, 30.7838, 0.287", "406.735, 323.637, 30.4864, 0.2988", "407.468, 324.492, 30.1445, 0.3142", "408.195, 325.355, 29.7738, 0.3734", "408.896, 326.25, 29.4081, 0.3338", "409.59, 327.152, 29.0595, 0.3", "410.284, 328.053, 28.7328, 0.2746", "410.979, 328.954, 28.4248, 0.2746", "411.673, 329.855, 28.1282, 0.2746", "412.309, 330.788, 27.8377, 0.2748", "412.612, 331.874, 27.5483, 0.275", "412.647, 333.012, 27.2622, 0.2752", "412.68, 334.15, 26.9791, 0.2758", "412.714, 335.287, 26.697, 0.277", "412.751, 336.426, 26.4138, 0.279", "412.794, 337.568, 26.1412, 0.2828", "412.842, 338.711, 25.879, 0.29", "412.89, 339.854, 25.6126, 0.3026", "412.998, 340.937, 25.2775, 0.3286", "413.435, 341.61, 24.6895, 0.3644", "414.188, 341.145, 24.0414, 0.4922", "414.944, 340.298, 23.4602, 0.4296", "415.701, 339.449, 22.951, 0.395", "416.459, 338.601, 22.5181, 0.3942", "417.216, 337.753, 22.1628, 0.5418", "417.957, 336.887, 21.8873, 0.5498", "418.67, 335.994, 21.6654, 0.4812", "419.372, 335.09, 21.4742, 0.5296", "420.176, 334.29, 21.2737, 0.4542", "421.094, 333.629, 21.0292, 0.429", "422.039, 333.01, 20.7392, 0.5124", "423.003, 332.418, 20.4195, 0.4932", "423.996, 331.867, 20.0898, 0.387", "425.001, 331.332, 19.7631, 0.3042", "426.004, 330.797, 19.4497, 0.2824", "427.007, 330.26, 19.1563, 0.2886", "427.987, 330.454, 18.8683, 0.3018", "428.904, 331.106, 18.5846, 0.32", "429.802, 331.786, 18.3157, 0.3842", "430.789, 332.342, 18.1384, 0.3536", "431.813, 332.846, 18.0665, 0.3378", "432.839, 333.348, 18.0753, 0.339", "433.863, 333.849, 18.1408, 0.422", "434.888, 334.355, 18.2304, 0.4132", "435.911, 334.865, 18.3048, 0.4982", "436.934, 335.379, 18.3437, 0.3942", "437.956, 335.891, 18.3477, 0.3274", "438.979, 336.404, 18.3227, 0.2782", "440.073, 336.704, 18.2596, 0.2814", "441.202, 336.869, 18.1602, 0.2872", "442.335, 337.014, 18.0356, 0.299", "443.467, 337.16, 17.8945, 0.3148", "444.6, 337.305, 17.7428, 0.3746", "445.697, 337.083, 17.5976, 0.336", "446.71, 336.559, 17.4692, 0.3038", "447.701, 335.988, 17.3517, 0.2818", "448.6, 335.288, 17.2176, 0.2876", "449.406, 334.484, 17.0476, 0.2998", "450.193, 333.66, 16.8418, 0.3162", "450.979, 332.836, 16.6042, 0.3774", "451.766, 332.012, 16.3418, 0.3412", "452.695, 331.369, 16.0551, 0.3136", "453.777, 331.534, 15.7437, 0.3008", "454.875, 331.801, 15.4211, 0.3178", "455.973, 332.068, 15.0987, 0.3802", "457.073, 332.332, 14.7877, 0.3464", "458.208, 332.452, 14.5494, 0.3242", "459.347, 332.553, 14.3791, 0.3142", "460.483, 332.445, 14.2552, 0.3736", "461.561, 332.072, 14.1544, 0.3342", "462.633, 331.674, 14.0633, 0.3008", "463.705, 331.276, 13.9713, 0.276", "464.748, 330.808, 13.8823, 0.2772", "465.464, 329.93, 13.8041, 0.2794", "465.71, 328.821, 13.7051, 0.2834", "465.602, 327.698, 13.5448, 0.2908", "465.288, 326.599, 13.3969, 0.3058", "465.058, 325.479, 13.2663, 0.327", "465.035, 324.347, 13.098, 0.3982", "465.148, 323.263, 12.8408, 0.3756", "465.149, 322.122, 12.6321, 0.3982", "465.15, 320.978, 12.4974, 0.356", "465.264, 319.862, 12.6, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "397.067, 315.015, 33.9696, 0.2746", "397.52, 315.368, 34.1043, 0.2746", "398.419, 316.07, 34.2423, 0.2746", "399.32, 316.774, 34.3753, 0.2746", "400.22, 317.478, 34.5008, 0.2746", "401.122, 318.182, 34.6164, 0.2746", "402.024, 318.885, 34.7211, 0.2748", "402.924, 319.59, 34.8138, 0.2748", "403.825, 320.294, 34.9051, 0.2752", "404.726, 320.997, 34.9966, 0.2756", "405.627, 321.701, 35.0885, 0.2766", "406.707, 322.074, 35.1761, 0.2784", "407.843, 322.203, 35.2601, 0.2816", "408.98, 322.331, 35.3492, 0.2876", "410.116, 322.46, 35.4516, 0.2996", "411.253, 322.59, 35.5751, 0.3158" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "357.777, 312.583, 33.1607, 0.5454", "358.241, 312.362, 32.23, 0.2288", "359.059, 311.979, 30.0642, 0.2998", "359.903, 311.589, 29.1194, 0.3236", "360.831, 311.195, 28.0672, 0.3548", "361.828, 310.797, 27.005, 0.4744", "362.824, 310.399, 25.9718, 0.3972", "363.633, 310.605, 24.956, 0.3328", "364.067, 311.471, 23.9841, 0.2884", "364.418, 312.51, 23.1679, 0.2996", "364.754, 313.601, 22.5531, 0.3232", "365.087, 314.695, 22.1014, 0.3544", "365.484, 315.765, 21.7442, 0.4736", "365.985, 316.774, 21.4091, 0.3954", "366.509, 317.769, 21.0638, 0.3296", "367.034, 318.764, 20.6899, 0.2824", "367.558, 319.758, 20.2909, 0.289", "367.796, 320.858, 19.9117, 0.301", "367.928, 321.989, 19.5708, 0.3256", "368.052, 323.122, 19.2678, 0.3588", "368.179, 324.254, 18.9938, 0.4818", "368.322, 325.384, 18.7386, 0.4108", "368.47, 326.515, 18.4939, 0.3578", "368.619, 327.645, 18.2528, 0.3364", "368.765, 328.774, 18.0142, 0.3798", "368.913, 329.904, 17.7788, 0.5156", "369.299, 330.97, 17.5504, 0.499", "369.913, 331.927, 17.333, 0.3974", "370.564, 332.865, 17.1255, 0.3246", "371.213, 333.803, 16.9258, 0.315", "371.864, 334.74, 16.7323, 0.375", "372.515, 335.678, 16.5435, 0.3368", "373.166, 336.615, 16.3582, 0.3052", "373.997, 337.39, 16.1762, 0.2844", "375.043, 337.823, 16.0008, 0.2928", "376.119, 338.208, 15.8323, 0.308", "377.194, 338.592, 15.6707, 0.3388", "378.27, 338.976, 15.5165, 0.3828", "379.345, 339.361, 15.3712, 0.5286", "380.419, 339.745, 15.2361, 0.487", "381.494, 340.129, 15.1131, 0.5514", "382.589, 340.459, 15.009, 0.4404", "383.723, 340.588, 14.9415, 0.4384", "384.862, 340.688, 14.9084, 0.3602", "386.002, 340.787, 14.9052, 0.3492", "387.141, 340.888, 14.9281, 0.3628", "388.237, 341.207, 14.9731, 0.4534", "389.256, 341.722, 15.0385, 0.533", "390.294, 342.191, 15.1526, 0.4214", "391.336, 342.651, 15.3063, 0.3306", "392.377, 343.111, 15.4853, 0.284", "393.418, 343.572, 15.6762, 0.2922", "394.459, 344.033, 15.8671, 0.3068", "395.589, 344.165, 16.0144, 0.3366", "396.73, 344.248, 16.1158, 0.3786", "397.871, 344.328, 16.1822, 0.5206", "399.012, 344.409, 16.2248, 0.4724", "400.146, 344.559, 16.2599, 0.5234", "401.275, 344.737, 16.2968, 0.3936", "402.404, 344.919, 16.34, 0.326", "403.534, 345.1, 16.3871, 0.2758", "404.663, 345.282, 16.4344, 0.2768", "405.792, 345.464, 16.4784, 0.2788", "406.922, 345.645, 16.5155, 0.2824", "408.063, 345.612, 16.5366, 0.289", "409.201, 345.504, 16.5392, 0.3014", "410.34, 345.391, 16.5234, 0.3248", "411.479, 345.277, 16.4889, 0.3646", "412.617, 345.164, 16.4332, 0.4566", "413.723, 345.424, 16.3494, 0.539", "414.753, 345.919, 16.2299, 0.4324", "415.777, 346.431, 16.0688, 0.351", "416.799, 346.942, 15.8633, 0.3226", "417.742, 347.551, 15.5389, 0.3606", "418.475, 348.257, 15.008, 0.4492", "419.122, 349.086, 14.3674, 0.5254", "419.469, 350.161, 13.7695, 0.4068", "419.817, 351.237, 13.2326, 0.305", "420.166, 352.312, 12.7711, 0.2288", "420.514, 353.387, 12.019, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "357.777, 312.583, 33.1607, 0.5454", "357.492, 313.671, 33.1089, 0.4454", "357.202, 314.777, 33.0386, 0.3696", "356.94, 315.892, 32.9501, 0.3822", "356.757, 317.02, 32.8448, 0.35", "356.527, 318.033, 32.5814, 0.3308", "356.43, 319.136, 32.2675, 0.3264", "356.284, 320.27, 32.0228, 0.3964", "356.241, 321.413, 31.843, 0.376", "356.241, 322.556, 31.7234, 0.3812", "356.241, 323.701, 31.6582, 0.4092", "356.241, 324.845, 31.6408, 0.602", "356.242, 325.988, 31.6414, 0.5046", "356.291, 327.128, 31.6417, 0.4728", "356.485, 328.255, 31.6425, 0.3774", "356.584, 329.393, 31.6434, 0.3764", "356.584, 330.537, 31.6448, 0.4376", "356.584, 331.681, 31.6467, 0.473", "356.633, 332.82, 31.6495, 0.4596", "356.799, 333.95, 31.6532, 0.3618", "356.813, 335.094, 31.6585, 0.3048", "356.813, 336.238, 31.666, 0.2834", "356.863, 337.377, 31.6767, 0.291", "357.104, 338.494, 31.691, 0.305", "357.42, 339.593, 31.7086, 0.3318", "357.639, 340.713, 31.7369, 0.3772", "357.759, 341.848, 31.7904, 0.481", "357.892, 342.984, 31.843, 0.5792", "358.042, 344.116, 31.8856, 0.5322", "358.148, 345.254, 31.9192, 0.413", "358.299, 346.384, 31.9466, 0.3474", "358.3, 347.528, 31.9693, 0.3876", "358.3, 348.672, 31.99, 0.3614", "358.251, 349.812, 32.0144, 0.3456", "358.112, 350.945, 32.0558, 0.3848", "358.071, 352.084, 32.1272, 0.3546", "357.981, 353.216, 32.193, 0.3396", "357.726, 354.33, 32.2554, 0.3428", "357.613, 355.465, 32.3156, 0.4274", "357.607, 356.609, 32.3772, 0.4294", "357.562, 357.746, 32.468, 0.4992", "357.409, 358.865, 32.6021, 0.536", "357.19, 359.985, 32.7225, 0.5968", "357.042, 361.117, 32.821, 0.5178", "356.841, 362.24, 32.9235, 0.3852", "356.575, 363.348, 33.0677, 0.301", "356.282, 364.453, 33.238, 0.2766", "356.132, 365.576, 33.4631, 0.2782", "356.126, 366.692, 33.7921, 0.2814", "356.217, 367.793, 34.2104, 0.287", "356.41, 368.903, 34.6629, 0.2988", "356.615, 370.017, 35.1075, 0.3142", "357.014, 371.011, 35.5824, 0.3734", "357.498, 371.975, 36.1018, 0.3338", "357.895, 373.03, 36.5854, 0.3", "358.201, 374.113, 37.0325, 0.2746", "358.3, 375.237, 37.4326, 0.2746", "358.148, 376.362, 37.7588, 0.2746", "357.64, 377.369, 38.0108, 0.2746", "356.948, 378.252, 38.2718, 0.2746", "356.012, 378.88, 38.5042, 0.2746" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "333.483, 249.899, 22.8927, 0.4116", "332.623, 249.607, 22.0347, 0.4576", "331.64, 249.199, 21.7235, 0.4126", "330.616, 248.723, 21.6367, 0.3882", "329.564, 248.303, 21.4787, 0.489", "328.485, 248.138, 21.2145, 0.4254", "327.383, 248.064, 20.8789, 0.3796", "326.308, 247.845, 20.6627, 0.4018", "325.195, 247.796, 20.4827, 0.3812", "324.1, 247.946, 20.2422, 0.4132", "322.978, 247.898, 20.0606, 0.3606", "321.935, 247.499, 19.99, 0.3492", "320.959, 246.92, 19.9497, 0.3674", "320.0, 246.301, 19.8505, 0.4382", "318.994, 245.88, 19.6169, 0.6202", "317.925, 245.703, 19.2752, 0.7094", "316.8, 245.693, 18.9106, 0.7092", "315.754, 246.08, 18.5414, 0.5954", "314.694, 246.318, 18.1539, 0.4778", "313.614, 246.466, 18.0174, 0.4938", "312.538, 246.748, 18.0593, 0.5308", "311.397, 246.825, 18.1255, 0.5636", "310.302, 247.154, 18.1814, 0.5692", "309.334, 247.763, 18.2118, 0.6184", "308.44, 248.477, 18.2043, 0.5218", "307.611, 249.264, 18.1343, 0.5686", "306.771, 250.001, 17.9691, 0.4732", "306.09, 250.793, 17.6834, 0.495", "305.433, 251.719, 17.542, 0.485", "304.697, 252.572, 17.542, 0.4828", "303.741, 253.195, 17.6171, 0.3998" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "333.483, 249.899, 22.8927, 0.4116", "332.997, 250.783, 22.4791, 0.3572", "332.741, 251.789, 21.9747, 0.3442", "332.424, 252.88, 21.576, 0.3522", "332.054, 253.947, 21.2824, 0.4398", "331.639, 254.991, 20.9703, 0.4774", "331.29, 256.019, 20.5752, 0.4674", "330.849, 257.019, 20.1539, 0.3766", "330.283, 258.01, 19.7884, 0.3318", "329.703, 258.971, 19.432, 0.3354", "329.37, 259.988, 19.0688, 0.378", "329.398, 261.126, 18.7913, 0.5122", "329.548, 262.259, 18.6052, 0.4926", "329.557, 263.391, 18.4796, 0.3858", "329.028, 264.353, 18.3841, 0.302", "328.192, 265.123, 18.2919, 0.2784", "327.342, 265.884, 18.2031, 0.2816", "326.764, 266.845, 18.1275, 0.2874", "326.471, 267.945, 18.068, 0.2994", "326.4, 269.082, 18.0221, 0.3154", "326.427, 270.227, 17.9875, 0.3756", "326.197, 271.332, 17.9617, 0.338", "325.547, 272.254, 17.9402, 0.3076", "325.503, 273.316, 17.8899, 0.2888", "325.843, 274.401, 17.819, 0.3008", "325.681, 275.498, 17.7625, 0.324", "325.339, 276.59, 17.7336, 0.3618", "324.887, 277.629, 17.7645, 0.4574", "324.844, 278.754, 17.7969, 0.5108", "324.978, 279.889, 17.8178, 0.5256", "325.237, 281.002, 17.8091, 0.5046", "325.579, 282.085, 17.7374, 0.4706", "325.437, 283.201, 17.6571, 0.3834", "325.037, 284.27, 17.5786, 0.3396", "325.354, 285.33, 17.5078, 0.3734", "325.801, 286.382, 17.4419, 0.3338", "325.561, 287.494, 17.3758, 0.3", "324.97, 288.472, 17.3022, 0.2746" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "335.575, 248.116, 24.0592, 0.5152", "334.414, 247.385, 24.3228, 0.3614", "333.458, 246.762, 25.1744, 0.304", "332.525, 246.098, 25.467, 0.2818" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "335.575, 248.116, 24.0592, 0.5152", "336.121, 246.723, 24.0676, 0.3772", "336.048, 245.632, 24.0798, 0.4378", "336.361, 244.553, 24.0967, 0.4798", "336.959, 243.579, 24.1182, 0.4424", "337.305, 242.492, 24.1438, 0.4742", "337.697, 241.422, 24.2001, 0.4996", "338.101, 240.355, 24.2817, 0.4798", "338.366, 239.244, 24.3478, 0.5408", "338.608, 238.126, 24.3926, 0.6374", "338.661, 236.984, 24.4158, 0.6668", "338.712, 235.841, 24.4167, 0.5328", "338.791, 234.7, 24.3952, 0.5126", "338.55, 233.585, 24.3564, 0.5126", "338.827, 232.485, 24.305, 0.5584", "339.09, 231.374, 24.2152, 0.4214", "339.246, 230.246, 24.0807, 0.3304", "339.706, 229.2, 23.9432, 0.2838", "340.205, 228.17, 23.8043, 0.2918", "340.838, 227.221, 23.6309, 0.3062", "341.508, 226.298, 23.4228, 0.3354", "342.177, 225.375, 23.1801, 0.3778", "342.848, 224.453, 22.898, 0.5118", "343.426, 223.465, 22.5922, 0.492", "343.973, 222.461, 22.2614, 0.3848" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "270.403, 96.2867, 81.7664, 0.5758", "269.788, 96.0509, 81.48, 0.4576", "268.699, 95.752, 81.5413, 0.3716", "267.56, 95.6969, 81.5657, 0.3226", "266.45, 95.4407, 81.6004, 0.3174", "265.36, 95.1262, 81.6488, 0.3498", "264.218, 95.0664, 81.7146, 0.4346", "263.077, 95.1095, 81.8031, 0.4724", "261.949, 95.2703, 81.9381, 0.4346", "260.825, 95.4096, 82.1467, 0.4312", "259.682, 95.4096, 82.3892, 0.5584", "258.542, 95.4096, 82.6641, 0.6038", "257.47, 95.4601, 83.0634, 0.4692", "256.429, 95.6075, 83.5702, 0.3666", "255.296, 95.7186, 84.0549, 0.3766", "254.162, 95.79, 84.5188, 0.3398", "253.061, 95.9069, 85.0108, 0.3106", "251.986, 95.9816, 85.5548, 0.2954", "250.891, 95.7974, 86.0504, 0.3078", "249.763, 95.658, 86.4497, 0.3616", "248.737, 95.3243, 86.8473, 0.3136", "247.784, 94.724, 87.194, 0.2542", "246.645, 94.6088, 87.64, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "270.403, 96.2867, 81.7664, 0.5758", "270.946, 95.3722, 81.8656, 0.4962", "271.612, 94.5127, 82.0772, 0.4906", "272.089, 93.5274, 82.3376, 0.4772", "272.722, 92.5978, 82.5754, 0.4672", "273.146, 91.5618, 82.7996, 0.3758", "273.505, 90.479, 83.0281, 0.3316", "274.035, 89.474, 83.2656, 0.3278", "274.47, 88.4283, 83.5195, 0.399", "274.763, 87.3762, 83.8586, 0.381" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "411.253, 322.59, 35.5751, 0.3158", "411.459, 322.49, 36.2706, 0.2288", "412.332, 321.751, 36.2706, 0.2752", "413.206, 321.013, 36.2706, 0.2756", "414.173, 320.426, 36.2706, 0.2766", "415.233, 319.999, 36.2706, 0.2784", "416.319, 319.639, 36.2706, 0.2816", "417.44, 319.47, 36.2706, 0.2874", "418.583, 319.427, 36.2706, 0.2994", "419.723, 319.344, 36.2706, 0.3152", "420.862, 319.234, 36.2706, 0.3756", "421.977, 319.05, 36.2706, 0.3378", "422.964, 318.474, 36.2706, 0.3074", "423.953, 317.897, 36.2706, 0.2882", "424.988, 317.421, 36.2706, 0.2994", "426.062, 317.028, 36.2706, 0.3228", "427.202, 317.102, 36.2706, 0.3536", "428.342, 317.19, 36.2706, 0.4722", "429.483, 317.278, 36.2706, 0.393", "430.624, 317.366, 36.2706, 0.3252", "431.766, 317.347, 36.2706, 0.274", "432.909, 317.285, 36.2706, 0.2736", "434.051, 317.223, 36.2706, 0.2728", "435.192, 317.133, 36.2706, 0.2712", "436.329, 317.007, 36.2706, 0.2684", "437.466, 316.881, 36.2706, 0.2626", "438.561, 316.584, 36.2706, 0.2542", "439.629, 316.175, 36.2706, 0.2288", "440.696, 315.762, 36.2706, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "411.253, 322.59, 35.5751, 0.3158", "412.139, 323.104, 35.7753, 0.3768", "413.085, 323.723, 36.052, 0.34", "414.028, 324.348, 36.388, 0.3112", "414.969, 324.971, 36.7662, 0.2956", "415.913, 325.595, 37.1703, 0.3132", "416.854, 326.219, 37.5841, 0.3478", "417.797, 326.842, 37.994, 0.402", "418.74, 327.467, 38.3964, 0.5514", "419.66, 328.125, 38.7845, 0.591", "420.531, 328.855, 39.1485, 0.444", "421.397, 329.591, 39.4912, 0.3254", "422.263, 330.327, 39.8163, 0.2746", "423.13, 331.062, 40.1265, 0.2746", "423.996, 331.798, 40.4239, 0.2748", "424.862, 332.533, 40.7109, 0.2748", "425.717, 333.284, 40.9861, 0.2752", "426.44, 334.166, 41.2322, 0.2756", "427.15, 335.059, 41.4537, 0.2766", "427.861, 335.953, 41.6562, 0.2782", "428.572, 336.846, 41.8454, 0.2814", "429.283, 337.74, 42.0263, 0.287", "429.994, 338.632, 42.2041, 0.2988", "430.706, 339.526, 42.3822, 0.3142", "431.416, 340.419, 42.5614, 0.3736", "432.128, 341.312, 42.7417, 0.334", "432.838, 342.206, 42.9237, 0.3002", "433.593, 343.062, 43.1099, 0.2752", "434.387, 343.881, 43.3012, 0.2756", "435.184, 344.698, 43.4963, 0.2766", "435.98, 345.514, 43.6926, 0.2782", "436.776, 346.331, 43.8883, 0.2814", "437.573, 347.148, 44.0801, 0.287", "438.37, 347.965, 44.2658, 0.2988", "439.167, 348.78, 44.4427, 0.3142", "439.963, 349.597, 44.6104, 0.3734", "440.55, 350.575, 44.7485, 0.334", "441.037, 351.611, 44.8563, 0.3", "441.519, 352.648, 44.9445, 0.2746", "442.001, 353.686, 45.0248, 0.2748", "442.482, 354.724, 45.1074, 0.275", "442.947, 355.766, 45.2273, 0.2754", "443.405, 356.809, 45.3953, 0.2762", "443.863, 357.851, 45.6022, 0.2776", "444.319, 358.895, 45.8382, 0.2802", "444.777, 359.937, 46.0928, 0.285", "445.233, 360.98, 46.3571, 0.2938", "445.691, 362.023, 46.6228, 0.3112", "446.149, 363.066, 46.8874, 0.3382", "446.605, 364.109, 47.1498, 0.413", "447.063, 365.151, 47.4099, 0.4328", "447.492, 366.207, 47.6655, 0.3594", "447.883, 367.277, 47.9144, 0.3", "448.271, 368.349, 48.1572, 0.2746", "448.659, 369.421, 48.393, 0.2746", "449.048, 370.491, 48.6209, 0.2746", "449.435, 371.563, 48.8398, 0.2746", "449.824, 372.634, 49.0493, 0.2746", "450.212, 373.706, 49.2495, 0.2746", "450.659, 374.757, 49.4105, 0.2746", "451.117, 375.806, 49.5396, 0.2746", "451.575, 376.855, 49.6535, 0.2746", "452.032, 377.903, 49.77, 0.2746", "452.49, 378.952, 49.9064, 0.2746", "452.947, 380.0, 50.0791, 0.2746", "453.405, 381.049, 50.3023, 0.2746", "454.214, 381.784, 50.6884, 0.2746", "455.05, 382.491, 51.2131, 0.2746", "455.886, 383.198, 51.8403, 0.2746", "456.723, 383.905, 52.5361, 0.2746", "457.56, 384.612, 53.2675, 0.2746", "458.396, 385.319, 54.0042, 0.2746", "459.233, 386.026, 54.719, 0.2746", "460.033, 386.798, 55.384, 0.2744", "460.798, 387.621, 55.9835, 0.2744", "461.559, 388.45, 56.527, 0.2742", "461.551, 389.562, 57.0119, 0.274", "461.328, 390.674, 57.4442, 0.2736", "461.104, 391.784, 57.8388, 0.2728", "460.881, 392.897, 58.2156, 0.2712", "460.657, 394.009, 58.5749, 0.2684", "460.434, 395.12, 58.9145, 0.2626", "460.21, 396.232, 59.2323, 0.2542", "459.986, 397.344, 59.5255, 0.2288", "459.762, 398.456, 60.0956, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "356.012, 378.88, 38.5042, 0.2746", "355.931, 378.967, 38.876, 0.2288", "355.425, 379.728, 41.2202, 0.2746", "354.911, 380.512, 42.2201, 0.2746", "354.398, 381.294, 43.3913, 0.2746", "353.884, 382.078, 44.6642, 0.2746", "353.36, 382.96, 45.9228, 0.2746", "352.837, 383.918, 47.0725, 0.2746", "352.314, 384.88, 48.0992, 0.2746", "351.768, 385.829, 49.0386, 0.2746", "351.008, 386.609, 49.9257, 0.2746", "350.237, 387.38, 50.7864, 0.2746", "349.466, 388.151, 51.6429, 0.2746", "348.696, 388.922, 52.505, 0.2746", "348.226, 389.882, 53.3887, 0.2746", "347.889, 390.896, 54.2856, 0.2746", "347.556, 391.909, 55.1818, 0.2746", "347.224, 392.924, 56.065, 0.2746", "346.891, 393.939, 56.9226, 0.2746", "346.549, 394.969, 57.7265, 0.2746", "346.181, 396.038, 58.4091, 0.2746", "345.814, 397.108, 58.9926, 0.2746", "345.446, 398.177, 59.5006, 0.2746", "345.08, 399.248, 59.9542, 0.2746", "344.713, 400.318, 60.3725, 0.2746", "344.448, 401.417, 60.7737, 0.2746", "344.237, 402.527, 61.1682, 0.2746", "344.027, 403.638, 61.5527, 0.2746", "343.817, 404.747, 61.9242, 0.2746", "343.521, 405.844, 62.2653, 0.2746", "343.113, 406.909, 62.5584, 0.2746", "342.702, 407.974, 62.8135, 0.2746", "342.293, 409.039, 63.0395, 0.2746", "341.882, 410.105, 63.2453, 0.2746", "341.473, 411.17, 63.439, 0.2746", "341.062, 412.235, 63.6275, 0.2746", "340.653, 413.3, 63.8145, 0.2746", "340.242, 414.365, 63.999, 0.2746", "339.832, 415.43, 64.1802, 0.2746", "339.421, 416.495, 64.3572, 0.2746", "339.012, 417.56, 64.5277, 0.2746", "338.601, 418.625, 64.6895, 0.2746", "338.192, 419.69, 64.8385, 0.2746", "337.781, 420.755, 64.9698, 0.2746", "337.371, 421.82, 65.0793, 0.2746", "336.961, 422.885, 65.1622, 0.2746", "336.501, 423.933, 65.1795, 0.2746", "336.015, 424.964, 65.1182, 0.2746", "335.526, 425.995, 64.9961, 0.2746", "335.037, 427.026, 64.8298, 0.2744", "334.549, 428.056, 64.6344, 0.2744", "334.061, 429.087, 64.4244, 0.2742", "333.572, 430.118, 64.2127, 0.274", "333.085, 431.148, 64.0044, 0.2736", "332.596, 432.179, 63.8016, 0.2728", "332.108, 433.209, 63.6059, 0.2712", "331.621, 434.241, 63.4203, 0.2684", "331.132, 435.27, 63.2481, 0.2626", "330.597, 436.278, 63.0941, 0.2542", "329.628, 436.887, 62.9877, 0.2288", "328.659, 437.494, 62.8692, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "356.012, 378.88, 38.5042, 0.2746", "355.804, 379.286, 38.8167, 0.2746", "355.669, 380.322, 39.139, 0.2746", "355.569, 381.46, 39.3775, 0.2746", "355.365, 382.585, 39.5402, 0.2746", "355.021, 383.672, 39.6351, 0.2746", "354.477, 384.669, 39.6519, 0.2746", "353.878, 385.641, 39.6278, 0.2746", "353.47, 386.704, 39.6057, 0.2746", "352.972, 387.729, 39.6015, 0.2746", "352.501, 388.771, 39.6164, 0.2746", "352.035, 389.816, 39.6533, 0.2746", "351.401, 390.762, 39.7247, 0.2746", "350.94, 391.799, 39.8356, 0.2746", "350.445, 392.829, 39.9554, 0.2746", "349.751, 393.735, 40.0828, 0.2746", "348.964, 394.418, 40.3581, 0.2746", "348.225, 395.282, 40.6022, 0.2746", "347.742, 396.312, 40.7812, 0.2746", "346.975, 397.159, 40.9044, 0.2746", "346.273, 398.004, 40.9049, 0.2746", "345.827, 398.895, 40.7691, 0.2746", "345.593, 399.96, 40.7506, 0.2746", "345.167, 400.842, 40.9979, 0.2746", "344.67, 401.723, 41.417, 0.2746", "344.303, 402.761, 41.8099, 0.2746", "344.019, 403.867, 42.0801, 0.2748", "343.734, 404.974, 42.2215, 0.2748", "343.45, 406.08, 42.222, 0.2752", "343.165, 407.186, 42.107, 0.2756", "342.88, 408.291, 41.9241, 0.2766", "342.595, 409.398, 41.7119, 0.2782", "342.31, 410.504, 41.4814, 0.2814", "341.91, 411.564, 41.2166, 0.287", "341.338, 412.538, 40.899, 0.2988", "340.706, 413.475, 40.5311, 0.3142", "340.17, 414.463, 40.1215, 0.3734", "339.837, 415.533, 39.6788, 0.334", "339.597, 416.633, 39.2132, 0.3", "339.356, 417.734, 38.7358, 0.2746", "339.115, 418.833, 38.2556, 0.2748", "338.875, 419.934, 37.7773, 0.2748", "338.617, 421.026, 37.3002, 0.2752", "338.343, 422.112, 36.825, 0.2758", "338.066, 423.197, 36.3588, 0.2766", "337.789, 424.29, 35.9276, 0.2786", "337.515, 425.394, 35.5555, 0.2818", "337.241, 426.501, 35.2428, 0.2882", "336.968, 427.608, 34.9798, 0.2996", "336.694, 428.714, 34.757, 0.323", "336.42, 429.821, 34.5646, 0.3538", "336.025, 430.888, 34.4056, 0.4726", "335.483, 431.893, 34.2854, 0.3938", "334.9, 432.878, 34.1981, 0.3264", "334.319, 433.863, 34.1331, 0.2766", "333.758, 434.858, 34.0726, 0.2782", "333.214, 435.864, 34.0029, 0.2814", "332.675, 436.872, 33.9226, 0.287", "332.138, 437.88, 33.8358, 0.2988", "331.599, 438.888, 33.7512, 0.3142", "331.06, 439.894, 33.6787, 0.3734", "330.448, 440.858, 33.6305, 0.3338", "329.652, 441.665, 33.6232, 0.3", "328.794, 442.42, 33.67, 0.2746", "328.008, 443.242, 33.7893, 0.2746", "327.257, 444.094, 33.9752, 0.2746", "326.506, 444.945, 34.2059, 0.2746", "325.755, 445.797, 34.4607, 0.2748", "325.005, 446.648, 34.7222, 0.275", "324.106, 447.329, 34.9504, 0.2754", "323.109, 447.89, 35.1285, 0.276", "322.107, 448.441, 35.2702, 0.2772", "321.105, 448.994, 35.3923, 0.2794", "320.347, 449.804, 35.5272, 0.2838", "320.23, 450.898, 35.7095, 0.2914", "320.258, 452.031, 35.9383, 0.3068", "320.287, 453.165, 36.1998, 0.3292", "320.316, 454.298, 36.4781, 0.401", "320.341, 455.438, 36.7402, 0.3872", "320.36, 456.581, 36.9572, 0.3884", "320.139, 457.696, 37.1342, 0.4896", "319.43, 458.57, 37.2932, 0.4262", "318.644, 459.401, 37.4422, 0.3814", "317.699, 459.978, 37.6692, 0.404", "316.716, 460.483, 37.9753, 0.3898", "315.614, 460.58, 38.3046, 0.4068", "314.698, 459.893, 38.831, 0.4576" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "303.741, 253.195, 17.6171, 0.3998", "303.107, 253.447, 17.7946, 0.4006", "302.26, 254.18, 18.0095, 0.3372", "301.772, 255.21, 18.1667, 0.306", "301.281, 256.204, 18.2082, 0.2858", "300.431, 256.953, 18.2465, 0.295", "299.623, 257.684, 18.3842, 0.3134", "298.864, 258.511, 18.528, 0.3426", "298.236, 259.463, 18.5975, 0.4208", "297.542, 260.348, 18.5563, 0.4472", "296.71, 261.11, 18.4472, 0.3872", "295.848, 261.784, 18.2052, 0.3464", "294.852, 262.308, 17.9519, 0.386", "293.772, 262.653, 17.6994, 0.3582", "292.975, 263.362, 17.4908, 0.3398", "292.308, 264.172, 17.29, 0.3742", "291.301, 264.655, 17.0379, 0.3352", "290.672, 265.483, 16.7907, 0.3024", "290.226, 266.53, 16.5868, 0.2788", "289.64, 267.511, 16.4069, 0.2826", "288.949, 268.418, 16.2321, 0.2892", "288.017, 269.023, 16.0747, 0.3028", "287.462, 269.868, 15.9378, 0.3218", "287.484, 270.962, 15.7288, 0.3876", "287.657, 272.069, 15.4671, 0.36", "287.633, 273.202, 15.2229, 0.349", "287.293, 274.281, 14.9948, 0.3624", "287.146, 275.395, 14.7965, 0.4526", "287.143, 276.539, 14.6229, 0.5318", "287.143, 277.668, 14.4271, 0.419", "287.011, 278.793, 14.2253, 0.326", "286.512, 279.799, 14.0503, 0.2756", "285.755, 280.644, 13.8748, 0.2766", "285.275, 281.66, 13.7201, 0.2782", "284.988, 282.765, 13.5911, 0.2814", "284.489, 283.782, 13.4481, 0.287", "284.063, 284.841, 13.313, 0.2988", "283.348, 285.717, 13.1848, 0.3142", "282.443, 286.352, 12.9721, 0.3734", "281.676, 287.184, 12.7537, 0.3338", "281.218, 288.227, 12.563, 0.3", "280.744, 289.263, 12.3643, 0.2746", "280.737, 290.402, 12.1712, 0.2746", "280.546, 291.529, 11.9953, 0.2746" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "303.741, 253.195, 17.6171, 0.3998", "303.138, 253.182, 17.4616, 0.2288", "302.02, 253.165, 17.0873, 0.2836", "301.032, 253.149, 16.851, 0.2916", "300.067, 252.999, 16.5791, 0.3056", "299.01, 252.776, 16.5515, 0.3342", "298.152, 252.682, 16.9115, 0.3746", "297.402, 252.554, 17.6034, 0.511", "296.499, 252.315, 18.4331, 0.4656", "295.428, 252.079, 19.1719, 0.4562", "294.356, 251.869, 19.6009, 0.5338", "293.253, 251.793, 19.7469, 0.674", "292.115, 251.79, 19.7126, 0.723", "290.974, 251.76, 19.5832, 0.6948", "289.846, 251.622, 19.4757, 0.532", "288.73, 251.392, 19.4254, 0.5394", "287.619, 251.134, 19.4293, 0.4244", "286.571, 250.696, 19.4435, 0.3778", "285.587, 250.168, 19.3637, 0.3982", "284.595, 249.646, 19.1996, 0.3746", "283.662, 249.001, 19.0409, 0.401", "282.709, 248.368, 18.914, 0.338", "281.624, 248.051, 18.8195, 0.3076", "280.549, 247.673, 18.7583, 0.2884", "279.496, 247.226, 18.7289, 0.3012", "278.437, 246.793, 18.7154, 0.3188", "277.313, 246.675, 18.7016, 0.382", "276.205, 246.919, 18.6735, 0.3498", "275.074, 246.99, 18.6191, 0.329", "273.942, 246.868, 18.5937, 0.3306", "272.874, 246.482, 18.5694, 0.3682", "271.929, 245.848, 18.5349, 0.499", "270.824, 245.731, 18.4796, 0.4434", "269.732, 245.574, 18.3239, 0.4142", "268.701, 245.102, 18.1857, 0.4604", "267.681, 244.583, 18.0753, 0.517", "266.658, 244.07, 17.9956, 0.5338", "265.574, 243.705, 17.9455, 0.5338", "264.949, 242.757, 17.92, 0.4576" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "324.97, 288.472, 17.3022, 0.2746", "325.064, 289.298, 17.1882, 0.2746", "325.176, 290.434, 17.0304, 0.2746", "325.421, 291.529, 16.8265, 0.2748", "325.877, 292.568, 16.5749, 0.2748", "326.335, 293.603, 16.2934, 0.2752", "326.796, 294.638, 15.9988, 0.2758", "327.269, 295.67, 15.7097, 0.2768", "327.817, 296.667, 15.4591, 0.2786", "328.441, 297.625, 15.2691, 0.282", "329.115, 298.546, 15.1159, 0.288", "329.866, 299.405, 14.972, 0.3008", "330.633, 300.249, 14.8288, 0.3178", "331.402, 301.093, 14.6837, 0.3802", "332.222, 301.881, 14.5392, 0.3464", "333.183, 302.483, 14.4108, 0.3242", "334.228, 302.948, 14.3087, 0.3144", "335.271, 303.417, 14.2267, 0.3738", "336.274, 303.958, 14.1446, 0.3346", "337.233, 304.579, 14.0465, 0.3014", "338.192, 305.198, 13.9364, 0.2772", "339.15, 305.816, 13.8198, 0.2796", "340.1, 306.45, 13.7082, 0.2838", "341.013, 307.137, 13.6234, 0.2916", "341.894, 307.868, 13.5791, 0.3072", "342.773, 308.597, 13.5712, 0.3296", "343.694, 309.271, 13.6037, 0.4032", "344.66, 309.88, 13.678, 0.3838", "345.627, 310.49, 13.7793, 0.4182", "346.592, 311.099, 13.894, 0.3692", "347.558, 311.708, 14.0119, 0.3676", "348.545, 312.281, 14.1216, 0.3902", "349.584, 312.755, 14.2067, 0.536", "350.653, 313.162, 14.2613, 0.5316", "351.707, 313.606, 14.2919, 0.4836", "352.727, 314.122, 14.3045, 0.3594", "353.731, 314.672, 14.3044, 0.3", "354.734, 315.221, 14.2962, 0.2748", "355.773, 315.69, 14.2826, 0.2748", "356.849, 316.077, 14.2633, 0.2752", "357.777, 316.691, 14.2365, 0.2758", "358.553, 317.532, 14.2002, 0.2766", "359.3, 318.398, 14.1506, 0.2786", "360.224, 319.01, 14.0721, 0.2818", "361.278, 319.452, 13.9624, 0.2882", "362.33, 319.893, 13.8293, 0.2994", "363.383, 320.335, 13.6805, 0.3228", "364.436, 320.776, 13.5231, 0.3536", "365.506, 321.175, 13.3666, 0.4722", "366.586, 321.546, 13.2175, 0.3932", "367.667, 321.918, 13.0767, 0.3254", "368.747, 322.29, 12.9438, 0.2746", "369.827, 322.662, 12.8191, 0.2746", "370.908, 323.032, 12.7039, 0.2746", "371.988, 323.404, 12.6006, 0.2746", "373.069, 323.775, 12.5125, 0.2746", "374.149, 324.147, 12.4433, 0.2746", "375.232, 324.513, 12.4036, 0.2746", "376.319, 324.864, 12.4202, 0.2746", "377.408, 325.206, 12.497, 0.2746", "378.497, 325.548, 12.6198, 0.2746", "379.585, 325.89, 12.7751, 0.2748", "380.674, 326.232, 12.9507, 0.2748", "381.763, 326.574, 13.1369, 0.275", "382.844, 326.94, 13.3269, 0.2754", "383.772, 327.571, 13.5054, 0.2762", "384.611, 328.347, 13.6727, 0.2776", "385.447, 329.129, 13.8442, 0.2804", "386.229, 329.944, 14.0731, 0.2854", "386.983, 330.778, 14.3751, 0.2944", "387.736, 331.612, 14.7333, 0.312", "388.489, 332.446, 15.1329, 0.3398", "389.467, 332.921, 15.5254, 0.416", "390.601, 332.967, 15.8654, 0.4384", "391.703, 333.19, 16.187, 0.3696", "392.584, 333.837, 16.5504, 0.3192", "393.411, 334.569, 16.9563, 0.3098", "393.617, 335.626, 17.3145, 0.342", "393.617, 336.77, 17.6158, 0.39", "393.999, 337.83, 17.8787, 0.5344", "394.998, 338.368, 18.1208, 0.5348", "396.052, 338.767, 18.4231, 0.4598", "397.108, 339.162, 18.7908, 0.4594", "398.164, 339.555, 19.2233, 0.4724", "399.199, 339.981, 19.7183, 0.4286", "400.119, 340.526, 20.3074, 0.449", "401.035, 341.077, 20.949, 0.4522", "401.398, 342.138, 21.5171, 0.396", "401.652, 343.247, 21.9994, 0.364", "401.906, 344.357, 22.4071, 0.4136", "402.161, 345.466, 22.7517, 0.4338", "402.415, 346.576, 23.0466, 0.3614", "402.538, 347.708, 23.3087, 0.3038", "402.654, 348.842, 23.5596, 0.2818", "402.769, 349.977, 23.8039, 0.2878", "402.885, 351.111, 24.0427, 0.3", "403.0, 352.245, 24.2768, 0.3166", "403.072, 353.382, 24.5061, 0.378", "402.952, 354.515, 24.7332, 0.3422", "402.833, 355.65, 24.9535, 0.3164", "402.713, 356.784, 25.1631, 0.2994", "402.594, 357.918, 25.3588, 0.3474", "402.474, 359.052, 25.5385, 0.2796", "402.355, 360.186, 25.8874, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "324.97, 288.472, 17.3022, 0.2746", "323.966, 288.868, 16.3528, 0.3142", "322.951, 289.13, 15.5754, 0.3736", "323.209, 290.038, 15.2379, 0.334", "324.007, 290.527, 14.7133, 0.3004", "324.856, 291.227, 14.2082, 0.2752", "325.67, 292.029, 13.8058, 0.2758", "326.478, 292.838, 13.5027, 0.2768", "327.287, 293.647, 13.2873, 0.2786", "328.098, 294.453, 13.1258, 0.2822", "328.908, 295.255, 12.9794, 0.2886", "329.718, 296.057, 12.8118, 0.3018", "330.529, 296.859, 12.6162, 0.3198", "331.385, 297.615, 12.4184, 0.384", "332.271, 298.338, 12.2338, 0.3532", "333.333, 298.725, 12.0232, 0.3366", "334.455, 298.709, 11.755, 0.3384", "335.579, 298.669, 11.4447, 0.413", "336.654, 298.293, 11.1659, 0.433", "337.692, 297.812, 10.9402, 0.3596", "338.708, 298.026, 10.6155, 0.3006", "339.696, 298.329, 10.2295, 0.2758", "340.784, 298.306, 10.0772, 0.2768", "341.915, 298.268, 10.1027, 0.2788", "343.047, 298.23, 10.2582, 0.2824", "344.178, 298.192, 10.5086, 0.2882", "345.309, 298.154, 10.8246, 0.305", "346.44, 298.115, 11.1538, 0.305", "347.571, 298.077, 11.788, 0.4576" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "332.525, 246.098, 25.467, 0.2818", "331.903, 246.344, 25.9729, 0.2878", "331.049, 246.692, 26.6926, 0.3004", "330.43, 247.224, 27.494, 0.3172", "330.811, 248.302, 28.1428, 0.379", "330.354, 249.188, 28.6734, 0.3444", "329.567, 250.013, 29.1049, 0.3194", "328.779, 250.837, 29.4437, 0.3112", "327.906, 251.568, 29.7116, 0.3384", "326.922, 252.146, 29.9334, 0.4134", "326.018, 252.751, 30.2392, 0.4334", "325.226, 253.389, 30.6656, 0.3606", "324.181, 253.696, 31.0167, 0.3026", "323.057, 253.905, 31.2418, 0.2794", "321.931, 254.112, 31.3516, 0.2834", "320.813, 254.34, 31.3286, 0.291", "319.71, 254.589, 31.155, 0.3052", "318.611, 254.842, 30.8683, 0.3312", "317.483, 254.971, 30.5533, 0.381", "316.341, 254.961, 30.2604, 0.464", "315.488, 255.55, 29.892, 0.6644", "315.188, 256.608, 29.4843, 0.8104", "315.374, 257.734, 29.1502, 0.8036", "316.015, 258.673, 28.8336, 0.5356", "316.72, 259.562, 28.5177, 0.3634", "317.423, 260.451, 28.205, 0.2988", "318.128, 261.34, 27.9013, 0.3144" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "332.525, 246.098, 25.467, 0.2818", "331.821, 245.331, 24.1031, 0.4576", "331.336, 244.308, 24.0024, 0.3816", "331.262, 243.177, 23.9648, 0.3422", "331.19, 242.035, 23.9236, 0.3486", "330.791, 240.969, 23.8704, 0.4322", "330.822, 239.846, 23.76, 0.468", "330.272, 238.861, 23.661, 0.4266", "330.033, 237.748, 23.5808, 0.4152", "330.101, 236.608, 23.519, 0.535", "329.775, 235.524, 23.4237, 0.5298", "329.361, 234.473, 23.3019, 0.4802", "328.796, 233.485, 23.2701, 0.353", "328.193, 232.534, 23.3348, 0.2882", "327.601, 231.556, 23.4049, 0.2542", "327.01, 230.576, 23.4692, 0.2288", "326.421, 229.595, 23.576, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "343.973, 222.461, 22.2614, 0.3848", "344.114, 222.239, 23.1731, 0.2288", "344.664, 221.244, 23.6062, 0.317", "345.206, 220.244, 23.7908, 0.3788", "345.747, 219.243, 24.0097, 0.344", "346.288, 218.243, 24.2529, 0.3184", "346.965, 217.324, 24.4876, 0.31", "347.723, 216.469, 24.6993, 0.3348", "348.49, 215.62, 24.8931, 0.4126", "349.362, 214.9, 25.1363, 0.4024", "350.267, 214.232, 25.4415, 0.4474", "351.171, 213.564, 25.7941, 0.4494", "352.067, 212.876, 26.1685, 0.3902", "352.963, 212.186, 26.5463, 0.358", "353.858, 211.495, 26.9091, 0.3778", "354.752, 210.803, 27.2396, 0.4878", "355.647, 210.112, 27.532, 0.5632", "356.713, 209.721, 27.7363, 0.6418", "357.831, 209.48, 27.8456, 0.6268", "358.951, 209.253, 27.8792, 0.4634", "360.071, 209.023, 27.8566, 0.362", "361.191, 208.794, 27.7962, 0.3384", "362.326, 208.653, 27.7185, 0.4132", "363.468, 208.68, 27.6457, 0.433", "364.484, 209.179, 27.5554, 0.36", "365.452, 209.78, 27.4506, 0.3012", "366.418, 210.386, 27.3414, 0.2766", "367.383, 210.992, 27.2381, 0.2786", "368.39, 211.537, 27.1871, 0.2818", "369.404, 212.064, 27.1956, 0.2882", "370.418, 212.591, 27.26, 0.2994", "371.434, 213.118, 27.3712, 0.3228", "372.449, 213.644, 27.5199, 0.3536", "373.336, 214.35, 27.7285, 0.4722", "374.209, 215.077, 27.9815, 0.393", "375.083, 215.802, 28.2663, 0.3248", "375.956, 216.528, 28.5723, 0.2736", "376.829, 217.255, 28.8879, 0.2728", "377.885, 217.649, 29.2107, 0.2712", "379.016, 217.664, 29.5266, 0.2684", "380.148, 217.672, 29.8273, 0.2626", "381.28, 217.624, 30.1022, 0.2542", "382.173, 216.908, 30.294, 0.2288", "383.064, 216.191, 30.5102, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "343.973, 222.461, 22.2614, 0.3848", "343.968, 222.107, 21.8163, 0.3", "343.841, 221.124, 21.1834, 0.2748", "343.324, 220.222, 20.4728, 0.275", "342.63, 220.183, 19.6225, 0.2752", "341.674, 220.481, 18.7802, 0.2758", "340.651, 220.013, 18.1254, 0.2768", "340.076, 219.039, 17.648, 0.2788", "340.639, 218.078, 17.3128, 0.2824" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "274.763, 87.3762, 83.8586, 0.381", "275.355, 86.1715, 84.1408, 0.431", "275.617, 85.0609, 84.3836, 0.6074", "276.029, 84.0122, 84.6275, 0.6842", "276.54, 83.0102, 84.8691, 0.668", "276.921, 81.9334, 85.0676, 0.4934", "277.417, 80.919, 85.2264, 0.414", "278.089, 79.9947, 85.3465, 0.4538", "278.83, 79.1553, 85.4314, 0.534", "279.873, 78.8216, 85.5039, 0.4232", "280.956, 78.5788, 85.5744, 0.334", "281.871, 77.9056, 85.6296, 0.2902", "282.958, 77.693, 85.6727, 0.3046", "283.972, 77.2026, 85.7086, 0.3252", "284.987, 76.6765, 85.7382, 0.3936", "285.803, 75.8796, 85.7623, 0.3722", "286.545, 75.0163, 85.8222, 0.367", "287.366, 74.2207, 85.8724, 0.419", "287.936, 73.2308, 85.9113, 0.4442", "288.583, 72.2872, 85.9401, 0.3802", "289.289, 71.387, 85.9594, 0.3396", "289.989, 70.4824, 85.9706, 0.344", "290.461, 69.4463, 85.9754, 0.4234", "290.477, 68.3046, 85.9816, 0.4522", "290.816, 67.2135, 85.9902, 0.395", "291.251, 66.1623, 86.0026, 0.368", "291.376, 65.0262, 86.0199, 0.3912", "291.36, 63.883, 86.0432, 0.5368", "291.271, 62.7442, 86.0734, 0.5376", "291.331, 61.6027, 86.1174, 0.4724", "291.309, 60.4781, 86.2028, 0.4468", "290.927, 59.4073, 86.2868, 0.624", "290.758, 58.2767, 86.375, 0.5474", "290.43, 57.1944, 86.4741, 0.5414", "289.787, 56.2488, 86.5886, 0.556", "289.194, 55.288, 86.725, 0.4586", "288.973, 54.196, 86.9324, 0.4252", "289.291, 53.2223, 87.257, 0.3356", "290.036, 52.3731, 87.6271, 0.303", "290.67, 51.4231, 88.0116, 0.2802", "291.313, 50.5234, 88.4615, 0.285", "292.124, 49.8268, 89.0187, 0.2938", "292.862, 49.0388, 89.6207, 0.3112", "293.159, 47.9693, 90.2037, 0.3382", "292.98, 46.869, 90.7796, 0.413", "292.781, 45.8567, 91.4813, 0.4328", "293.331, 45.1469, 92.3129, 0.3594", "294.017, 44.2879, 93.1025, 0.3", "294.656, 43.7116, 94.0481, 0.2746", "294.934, 42.744, 95.0662, 0.2746", "295.923, 42.2106, 95.9888, 0.2746", "296.972, 42.0936, 96.8366, 0.2746", "296.729, 41.405, 97.8751, 0.2746", "296.856, 40.7194, 98.9187, 0.2746", "297.676, 40.0574, 99.8561, 0.2746", "298.568, 39.8258, 100.855, 0.2746", "299.502, 39.3542, 101.801, 0.2746", "300.536, 38.8868, 102.557, 0.2748", "301.503, 38.3369, 103.209, 0.275", "302.525, 37.8598, 103.781, 0.2752", "303.585, 37.4327, 104.278, 0.2758", "304.604, 36.9424, 104.757, 0.2768", "305.68, 36.5827, 105.229, 0.2796", "306.764, 36.4991, 105.771, 0.2796", "307.836, 36.7229, 106.338, 0.305", "308.536, 37.18, 108.08, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "274.763, 87.3762, 83.8586, 0.381", "273.517, 86.9768, 85.3124, 0.4018", "272.457, 86.6339, 85.7676, 0.551", "271.335, 86.6344, 85.9757, 0.5904", "270.267, 86.9019, 86.2453, 0.443", "269.183, 87.221, 86.511, 0.3236", "268.229, 87.6565, 86.8518, 0.2712", "267.232, 88.0303, 87.2197, 0.2684", "266.172, 88.4056, 87.5605, 0.2626", "265.069, 88.6279, 87.8662, 0.2542", "263.932, 88.66, 88.125, 0.2288", "263.005, 88.088, 88.48, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "280.546, 291.529, 11.9953, 0.2746", "280.686, 291.682, 11.4208, 0.2288", "280.744, 292.764, 11.1649, 0.3672", "281.148, 293.825, 11.0751, 0.322", "280.726, 294.835, 10.926, 0.2796", "280.546, 295.963, 10.8081, 0.2288", "280.393, 297.097, 10.64, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "280.546, 291.529, 11.9953, 0.2746", "280.23, 292.546, 11.769, 0.2746", "279.636, 293.478, 11.5797, 0.2746", "278.887, 294.339, 11.4496, 0.2746", "278.211, 295.259, 11.3483, 0.2746", "277.697, 296.275, 11.2604, 0.2746", "277.098, 297.239, 11.1551, 0.2746", "276.33, 298.079, 11.0509, 0.2746", "275.511, 298.825, 10.8652, 0.2746", "274.656, 299.564, 10.6701, 0.2746", "273.943, 300.45, 10.5138, 0.2746", "273.495, 301.493, 10.3945, 0.2746", "273.636, 302.596, 10.308, 0.2744", "273.929, 303.701, 10.2446, 0.2744", "273.902, 304.831, 10.1756, 0.2742", "273.86, 305.969, 10.0823, 0.274", "273.692, 307.096, 10.0057, 0.2736", "273.211, 308.126, 9.9548, 0.2728", "273.186, 309.263, 9.9374, 0.2712", "273.186, 310.405, 9.9655, 0.2684", "273.15, 311.548, 10.0009, 0.2626", "272.718, 312.604, 10.0347, 0.2542", "271.699, 313.113, 10.0594, 0.2288", "270.555, 313.113, 10.08, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "318.128, 261.34, 27.9013, 0.3144", "318.328, 261.581, 27.6473, 0.3738", "319.059, 262.461, 27.4166, 0.3346", "319.713, 263.38, 27.1832, 0.3014", "320.101, 264.428, 26.876, 0.2772", "320.481, 265.477, 26.5098, 0.2794", "320.831, 266.537, 26.1028, 0.2834", "320.91, 267.632, 25.6978, 0.2908", "320.675, 268.733, 25.3573, 0.3056", "320.628, 269.847, 25.0599, 0.3268", "319.965, 270.698, 24.7505, 0.398", "319.008, 271.281, 24.4046, 0.374", "318.007, 271.789, 24.0372, 0.4", "316.945, 272.186, 23.6643, 0.336", "315.881, 272.576, 23.2892, 0.304", "314.801, 272.924, 22.9284, 0.282", "313.683, 273.067, 22.6131, 0.2886", "312.554, 273.096, 22.322, 0.3", "311.44, 273.231, 22.0037, 0.324", "310.378, 273.544, 21.6892, 0.3556", "309.403, 274.129, 21.408, 0.476", "308.417, 274.668, 21.1385, 0.4", "307.372, 275.101, 20.9034, 0.3378", "306.343, 275.5, 20.8314, 0.2988", "305.23, 275.589, 20.8388, 0.3142", "304.086, 275.604, 20.866, 0.3734", "302.956, 275.772, 20.8985, 0.3338", "301.85, 276.059, 20.9279, 0.3", "300.714, 276.154, 20.9435, 0.2746", "299.671, 276.571, 20.906, 0.2746", "298.551, 276.754, 20.8709, 0.2746", "297.458, 277.082, 20.8541, 0.2746", "296.551, 277.764, 20.8565, 0.2746", "295.85, 278.662, 20.8797, 0.2748", "294.939, 279.343, 20.9252, 0.2748", "293.894, 279.794, 21.0225, 0.2752", "293.591, 280.845, 21.1462, 0.2758", "293.307, 281.954, 21.2801, 0.2768", "292.991, 283.047, 21.4628, 0.2786", "292.977, 284.185, 21.6804, 0.282", "292.88, 285.282, 21.989, 0.2884", "292.61, 286.381, 22.3042, 0.2998", "291.863, 287.242, 22.5613, 0.3236" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "318.128, 261.34, 27.9013, 0.3144", "317.634, 262.28, 27.7365, 0.2288", "317.039, 263.256, 27.8043, 0.2746", "316.455, 264.24, 27.8314, 0.2746", "315.976, 265.279, 27.8698, 0.2746", "315.51, 266.323, 27.9235, 0.2746", "315.044, 267.368, 27.9959, 0.2746", "314.578, 268.413, 28.0902, 0.2746", "314.171, 269.474, 28.2517, 0.2746", "313.77, 270.535, 28.4729, 0.2746", "313.37, 271.598, 28.7384, 0.2746", "312.97, 272.661, 29.0326, 0.2748", "312.569, 273.724, 29.344, 0.275", "312.17, 274.786, 29.664, 0.2754", "311.766, 275.852, 29.9743, 0.276", "311.357, 276.919, 30.2456, 0.2772", "310.945, 277.986, 30.4906, 0.2796", "310.577, 279.054, 30.7852, 0.284", "310.251, 280.086, 31.1923, 0.292", "309.755, 281.107, 31.5888, 0.3066", "309.333, 282.154, 32.0062, 0.336", "308.918, 283.202, 32.4386, 0.3788", "308.503, 284.251, 32.8706, 0.5138", "308.156, 285.33, 33.2758, 0.4958", "307.893, 286.438, 33.6459, 0.3916", "307.634, 287.548, 34.0043, 0.3124", "307.376, 288.658, 34.3532, 0.2988", "307.118, 289.768, 34.6976, 0.3142", "306.86, 290.878, 35.0398, 0.3734", "306.343, 291.134, 35.649, 0.3338", "305.671, 292.049, 36.1623, 0.3", "305.183, 293.084, 36.552, 0.2746", "304.664, 294.089, 36.8368, 0.2746", "304.057, 295.002, 37.0359, 0.2746", "303.658, 295.995, 37.168, 0.2746", "302.793, 296.739, 37.254, 0.2746", "301.935, 297.459, 37.3853, 0.2746", "300.884, 297.783, 37.5763, 0.2746", "299.754, 297.884, 37.7798, 0.2746", "298.914, 298.498, 38.0187, 0.2746", "298.442, 299.505, 38.3158, 0.2746", "297.701, 300.215, 38.6218, 0.2746", "296.676, 300.703, 38.8965, 0.2746", "295.984, 301.522, 39.1339, 0.2746", "295.657, 302.614, 39.305, 0.2746", "294.797, 303.024, 39.4145, 0.2746", "293.654, 303.046, 39.4775, 0.2748", "292.509, 303.042, 39.5136, 0.275", "291.528, 302.56, 39.5371, 0.2754", "290.496, 302.085, 39.5559, 0.276", "289.574, 301.431, 39.6038, 0.2772", "288.766, 300.625, 39.6553, 0.2794", "287.948, 299.826, 39.6964, 0.2834", "287.315, 298.881, 39.7264, 0.291", "286.657, 297.947, 39.7466, 0.305", "286.1, 296.949, 39.7572, 0.3304", "285.612, 295.915, 39.7597, 0.3814", "284.626, 295.381, 39.76, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "340.639, 218.078, 17.3128, 0.2824", "341.123, 217.242, 17.239, 0.2288", "341.692, 216.263, 16.9, 0.281", "342.217, 215.254, 16.7556, 0.2864", "342.693, 214.214, 16.6232, 0.2964", "343.161, 213.169, 16.4998, 0.3148", "343.463, 212.08, 16.3631, 0.3508", "343.578, 210.947, 16.2004, 0.4076", "343.474, 209.824, 16.0367, 0.562", "343.163, 208.726, 15.8609, 0.6102", "342.807, 207.652, 15.6355, 0.481", "342.428, 206.594, 15.3594, 0.3884", "342.2, 205.493, 15.0833, 0.4182", "342.37, 204.388, 14.8491, 0.4112", "343.071, 203.561, 14.6366, 0.4708", "344.027, 202.942, 14.4291, 0.4578", "344.741, 202.091, 14.2514, 0.5754", "344.842, 201.02, 14.0741, 0.5646", "344.345, 200.028, 13.8554, 0.5098", "344.197, 198.935, 13.6508, 0.5772", "344.341, 197.802, 13.4876, 0.568", "344.765, 196.749, 13.3593, 0.516", "345.258, 195.715, 13.2552, 0.5902", "345.596, 194.629, 13.1483, 0.5858", "345.839, 193.516, 13.0251, 0.58", "346.069, 192.399, 12.8812, 0.5582", "346.301, 191.284, 12.7226, 0.5718", "346.904, 190.336, 12.5857, 0.5622", "347.299, 189.278, 12.4755, 0.7142", "347.125, 188.159, 12.3855, 0.8574", "347.25, 187.028, 12.3057, 0.8804", "347.411, 185.895, 12.2266, 0.729", "347.695, 184.789, 12.128, 0.474", "348.437, 183.948, 11.9589, 0.334", "349.21, 183.126, 11.7379, 0.2904", "349.904, 182.23, 11.4991, 0.304", "350.215, 181.133, 11.3107, 0.3286", "350.511, 180.028, 11.1703, 0.3776", "350.87, 178.942, 11.0727, 0.452", "351.247, 177.862, 11.0106, 0.6696", "351.681, 176.804, 10.9586, 0.687", "352.177, 175.776, 10.8942, 0.5334", "352.678, 174.749, 10.8144, 0.4642", "353.123, 173.696, 10.7387, 0.4334", "353.522, 172.624, 10.6792, 0.3604", "354.051, 171.609, 10.6343, 0.302", "354.774, 170.723, 10.6013, 0.2784", "355.5, 169.839, 10.5751, 0.2816", "356.119, 168.877, 10.549, 0.2874", "356.65, 167.864, 10.5175, 0.2984", "357.156, 166.837, 10.4766, 0.3198", "357.109, 165.698, 10.401, 0.3528", "357.056, 164.559, 10.2982, 0.4468", "357.015, 163.416, 10.1889, 0.4614", "356.981, 162.272, 10.0881, 0.577", "356.997, 161.129, 9.985, 0.5914", "357.139, 159.999, 9.8562, 0.4448", "357.283, 158.868, 9.7133, 0.3268", "357.426, 157.738, 9.5633, 0.2768", "357.72, 156.633, 9.4371, 0.2796", "358.085, 155.548, 9.3464, 0.2796", "358.379, 154.443, 9.2883, 0.305", "358.649, 153.331, 9.2456, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "340.639, 218.078, 17.3128, 0.2824", "340.83, 218.073, 17.0465, 0.2892", "341.913, 218.043, 16.7134, 0.3012", "343.007, 218.266, 16.3907, 0.326", "344.097, 218.609, 16.1024, 0.3594", "344.932, 219.329, 15.8069, 0.4832", "345.427, 220.329, 15.4774, 0.4134", "345.893, 221.353, 15.1325, 0.3624", "346.665, 222.174, 14.8465, 0.345", "346.887, 223.247, 14.6093, 0.3958", "346.663, 224.33, 14.3235, 0.545", "346.507, 225.422, 13.997, 0.5554", "346.907, 226.483, 13.7526, 0.4926", "347.211, 227.586, 13.5794, 0.5458", "347.069, 228.719, 13.4605, 0.508", "347.049, 229.862, 13.3847, 0.4138", "347.589, 230.867, 13.3272, 0.356", "348.128, 231.872, 13.2791, 0.368" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "291.863, 287.242, 22.5613, 0.3236", "291.665, 288.033, 22.68, 0.2288", "291.558, 289.169, 22.4658, 0.3144", "291.37, 290.295, 22.3886, 0.3738", "291.218, 291.413, 22.2416, 0.3346", "290.782, 292.45, 22.052, 0.3014", "290.195, 293.429, 21.8695, 0.2772", "289.791, 294.492, 21.6836, 0.2796", "289.343, 295.543, 21.5228, 0.284", "289.015, 296.638, 21.3871, 0.292", "288.778, 297.751, 21.2353, 0.3066", "288.746, 298.887, 21.0596, 0.336", "288.745, 300.03, 20.8961, 0.379", "288.756, 301.172, 20.7177, 0.514", "289.051, 302.262, 20.4959, 0.496", "289.169, 303.397, 20.2836, 0.392", "289.488, 304.493, 20.0803, 0.3132", "289.854, 305.576, 19.8631, 0.3", "289.4, 306.132, 19.5301, 0.3164", "288.438, 306.556, 19.1533, 0.3786", "287.545, 306.148, 18.7264, 0.339", "286.965, 305.928, 18.2647, 0.3304", "286.403, 306.836, 17.4014, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "291.863, 287.242, 22.5613, 0.3236", "291.722, 287.56, 22.8139, 0.3548", "290.619, 287.858, 23.0039, 0.4744", "289.608, 288.321, 23.1449, 0.3972", "289.249, 289.326, 23.2951, 0.3328", "289.635, 290.315, 23.4562, 0.288", "290.061, 291.307, 23.5944, 0.3008", "289.907, 292.43, 23.7142, 0.3178", "289.633, 293.518, 23.8322, 0.3802", "289.699, 294.643, 24.0044, 0.3464", "289.425, 295.724, 24.1946, 0.3242", "288.795, 296.62, 24.373, 0.3142", "287.748, 297.041, 24.5456, 0.3736", "286.945, 297.378, 24.9156, 0.3342", "286.228, 298.078, 25.2421, 0.3006", "286.009, 299.199, 25.4822, 0.2758", "285.886, 300.337, 25.6511, 0.277", "285.763, 301.474, 25.7599, 0.2792", "285.696, 302.617, 25.8145, 0.2828", "285.901, 303.721, 25.8213, 0.291", "286.227, 304.814, 25.8213, 0.2994", "286.221, 305.942, 25.8213, 0.3474", "285.942, 307.043, 25.8213, 0.2796", "285.444, 308.072, 25.8213, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "348.128, 231.872, 13.2791, 0.368", "348.711, 232.658, 13.2864, 0.4984", "349.389, 233.574, 13.3398, 0.4438", "350.069, 234.49, 13.4252, 0.4088", "350.745, 235.409, 13.5271, 0.4804", "351.355, 236.374, 13.6098, 0.408", "351.933, 237.361, 13.6538, 0.3538", "352.512, 238.348, 13.6554, 0.322", "353.184, 239.27, 13.6131, 0.388", "354.17, 239.801, 13.5094, 0.3618", "355.21, 240.262, 13.3608, 0.3466", "356.251, 240.725, 13.1985, 0.3864", "357.294, 241.193, 13.062, 0.3592", "358.338, 241.663, 12.9547, 0.3416", "359.381, 242.132, 12.8724, 0.3772", "360.281, 242.827, 12.8011, 0.3408", "361.004, 243.709, 12.7255, 0.3126", "361.702, 244.615, 12.64, 0.299", "362.4, 245.52, 12.5435, 0.3144", "363.098, 246.424, 12.4403, 0.374", "363.797, 247.329, 12.3355, 0.335", "364.495, 248.234, 12.2338, 0.3022", "365.192, 249.139, 12.1388, 0.2786", "366.097, 249.828, 12.0572, 0.2822", "367.051, 250.458, 11.9913, 0.2888", "368.008, 251.085, 11.9419, 0.3006", "368.964, 251.712, 11.9118, 0.3248", "369.921, 252.339, 11.9057, 0.3574", "370.877, 252.966, 11.9286, 0.4792", "371.935, 253.391, 11.9937, 0.4056", "373.02, 253.758, 12.1054, 0.3496", "374.138, 253.913, 12.3159, 0.3142", "375.255, 253.937, 12.6352, 0.3734", "376.372, 253.95, 13.0342, 0.3338", "377.488, 253.961, 13.481, 0.3", "378.605, 253.974, 13.9478, 0.2746", "379.735, 253.936, 14.3844, 0.2746", "380.871, 253.815, 14.7329, 0.2746", "382.008, 253.685, 15.0108, 0.2746", "383.144, 253.555, 15.2436, 0.2746", "384.278, 253.494, 15.4954, 0.2746", "385.354, 253.568, 15.8468, 0.2746", "386.425, 253.653, 16.2698, 0.2746", "387.496, 253.738, 16.7226, 0.2748", "388.627, 253.816, 17.0608, 0.275", "389.755, 253.879, 17.1756, 0.2754", "390.881, 253.943, 17.092, 0.276", "392.008, 254.007, 16.8513, 0.2772", "393.103, 254.28, 16.5094, 0.2792", "394.136, 254.742, 16.1182, 0.2834", "395.166, 255.209, 15.7162, 0.2906", "396.175, 255.727, 15.3259, 0.3056", "396.925, 256.589, 14.9932, 0.3266", "397.603, 257.503, 14.6603, 0.3976", "398.177, 258.459, 14.2691, 0.3734", "398.75, 259.416, 13.8317, 0.3988", "399.28, 260.404, 13.3724, 0.334", "399.756, 261.426, 12.9149, 0.3", "400.231, 262.448, 12.4683, 0.2748", "400.707, 263.47, 12.0501, 0.275", "401.183, 264.492, 11.669, 0.2752", "401.751, 265.479, 11.3576, 0.2758", "402.372, 266.439, 11.123, 0.2768", "402.994, 267.399, 10.9488, 0.2788", "403.616, 268.357, 10.8216, 0.2824", "404.334, 269.247, 10.7349, 0.2882", "405.192, 270.003, 10.6848, 0.305", "406.051, 270.76, 10.6558, 0.305", "406.909, 271.516, 10.6324, 0.4576" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "348.128, 231.872, 13.2791, 0.368", "347.623, 232.078, 11.7957, 0.2288", "346.542, 232.222, 11.6345, 0.2886", "345.416, 232.424, 11.5795, 0.3002", "344.28, 232.557, 11.5374, 0.3242", "343.216, 232.191, 11.5075, 0.356", "342.461, 231.34, 11.4888, 0.4774", "341.361, 231.054, 11.48, 0.3982", "340.221, 230.953, 11.48, 0.356", "339.081, 230.859, 11.48, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_7", "dend_0", "dend_38", "dend_33", "dend_23", "dend_8", "dend_6", "dend_1", "dend_42", "dend_39", "dend_37", "dend_34", "dend_27", "dend_24", "dend_16", "dend_9", "dend_5", "dend_2", "dend_41", "dend_40", "dend_36", "dend_35", "dend_29", "dend_28", "dend_26", "dend_25", "dend_18", "dend_17", "dend_15", "dend_10", "dend_4", "dend_3", "dend_31", "dend_30", "dend_20", "dend_19", "dend_14", "dend_11", "dend_22", "dend_21", "dend_13", "dend_12" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14009",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_23", "dend_23", "dend_23", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.3007824"
  }, {
    "group" : "axon",
    "value" : "2.3007824"
  }, {
    "group" : "dend",
    "value" : "2.3007824"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "67.29928"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.002347545",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "8.870447E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.38141078",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "5.7720946E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.8694232E-4",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.9437996E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.82437E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.21588224",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "9.4291405E-5",
    "erev" : "-87.420975"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "7.150148E-4",
    "erev" : "-87.420975"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.533879E-7",
    "erev" : "-87.420975"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.1909294E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.4505102E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_472352327",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472352327

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_23, id: dend_23, parent: dend_7
create dend_23
public dend_23
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_32, dend_7, dend_0, dend_38, dend_33, dend_23, dend_8, dend_6, dend_1, dend_42, dend_39, dend_37, dend_34, dend_27, dend_24, dend_16, dend_9, dend_5, dend_2, dend_41, dend_40, dend_36, dend_35, dend_29, dend_28, dend_26, dend_25, dend_18, dend_17, dend_15, dend_10, dend_4, dend_3, dend_31, dend_30, dend_20, dend_19, dend_14, dend_11, dend_22, dend_21, dend_13, dend_12]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_14009, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_14009
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472352327
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000492659375296)
    connect dend_32(0), soma_0(0.5000492659375296)
    connect dend_7(0), soma_0(0.5000492659375296)
    connect dend_0(0), soma_0(0.5000492659375296)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_23(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 347.163, 271.471, 27.44, 10.1496 ) }
    soma_0 { pt3dadd( 352.238, 271.471, 27.44, 10.1496 ) }
    soma_0 { pt3dadd( 357.312, 271.471, 27.44, 10.1496 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 352.237, 271.471, 27.44, 1.0 ) }
    axon_0 { pt3dadd( 358.079, 285.287, 27.44, 1.0 ) }
    axon_0 { pt3dadd( 363.92, 299.103, 27.44, 1.0 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 354.754, 274.319, 35.2111, 0.368 ) }
    dend_32 { pt3dadd( 355.468, 275.139, 35.103, 0.4998 ) }
    dend_32 { pt3dadd( 355.578, 276.235, 35.0683, 0.4392 ) }
    dend_32 { pt3dadd( 355.425, 277.341, 34.925, 0.436 ) }
    dend_32 { pt3dadd( 355.852, 278.337, 34.6752, 0.3558 ) }
    dend_32 { pt3dadd( 356.506, 279.23, 34.3806, 0.3402 ) }
    dend_32 { pt3dadd( 357.102, 280.202, 34.144, 0.3512 ) }
    dend_32 { pt3dadd( 357.561, 281.243, 34.0432, 0.4068 ) }
    dend_32 { pt3dadd( 357.883, 282.31, 34.1127, 0.5678 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 350.528, 267.757, 23.9155, 0.3576 ) }
    dend_7 { pt3dadd( 350.077, 266.776, 23.3456, 0.4198 ) }
    dend_7 { pt3dadd( 349.364, 265.931, 23.0775, 0.5856 ) }
    dend_7 { pt3dadd( 348.659, 265.04, 22.8504, 0.6488 ) }
    dend_7 { pt3dadd( 348.173, 264.015, 22.7712, 0.5778 ) }
    dend_7 { pt3dadd( 348.043, 262.906, 22.8538, 0.4444 ) }
    dend_7 { pt3dadd( 347.641, 261.836, 22.9878, 0.4356 ) }
    dend_7 { pt3dadd( 347.091, 260.835, 23.1733, 0.4042 ) }
    dend_7 { pt3dadd( 346.327, 260.044, 23.4565, 0.4208 ) }
    dend_7 { pt3dadd( 345.456, 259.304, 23.6958, 0.5444 ) }
    dend_7 { pt3dadd( 344.507, 258.665, 23.8583, 0.5518 ) }
    dend_7 { pt3dadd( 343.635, 257.924, 23.9577, 0.4984 ) }
    dend_7 { pt3dadd( 342.709, 257.252, 24.0139, 0.4972 ) }
    dend_7 { pt3dadd( 341.997, 256.358, 24.0323, 0.7058 ) }
    dend_7 { pt3dadd( 341.274, 255.471, 24.0199, 0.7552 ) }
    dend_7 { pt3dadd( 340.476, 254.651, 23.9962, 0.6554 ) }
    dend_7 { pt3dadd( 339.711, 253.801, 23.9627, 0.712 ) }
    dend_7 { pt3dadd( 339.101, 252.832, 23.9154, 0.7882 ) }
    dend_7 { pt3dadd( 338.494, 251.863, 23.8503, 0.8408 ) }
    dend_7 { pt3dadd( 337.685, 251.054, 23.7608, 0.9112 ) }
    dend_7 { pt3dadd( 336.719, 250.441, 23.6362, 0.7156 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 36/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 350.268, 268.914, 31.6988, 0.2792 ) }
    dend_0 { pt3dadd( 349.497, 268.461, 33.29, 0.2832 ) }
    dend_0 { pt3dadd( 348.495, 268.024, 34.5408, 0.2906 ) }
    dend_0 { pt3dadd( 347.807, 267.131, 35.4777, 0.3042 ) }
    dend_0 { pt3dadd( 347.369, 266.078, 36.1304, 0.3304 ) }
    dend_0 { pt3dadd( 347.047, 264.987, 36.5613, 0.3734 ) }
    dend_0 { pt3dadd( 346.765, 263.896, 36.8357, 0.4802 ) }
    dend_0 { pt3dadd( 346.438, 262.819, 37.1487, 0.5468 ) }
    dend_0 { pt3dadd( 345.817, 261.91, 37.476, 0.6222 ) }
    dend_0 { pt3dadd( 344.814, 261.483, 37.7818, 0.5374 ) }
    dend_0 { pt3dadd( 343.908, 260.97, 38.1198, 0.5556 ) }
    dend_0 { pt3dadd( 343.312, 260.04, 38.5294, 0.6536 ) }
    dend_0 { pt3dadd( 342.783, 259.071, 38.9908, 0.522 ) }
    dend_0 { pt3dadd( 342.252, 258.091, 39.4691, 0.427 ) }
    dend_0 { pt3dadd( 341.719, 257.098, 39.9308, 0.4432 ) }
    dend_0 { pt3dadd( 341.186, 256.102, 40.3589, 0.4538 ) }
    dend_0 { pt3dadd( 340.585, 255.139, 40.724, 0.5682 ) }
    dend_0 { pt3dadd( 339.871, 254.249, 41.0007, 0.55 ) }
    dend_0 { pt3dadd( 339.115, 253.391, 41.2006, 0.489 ) }
    dend_0 { pt3dadd( 338.311, 252.579, 41.3529, 0.5082 ) }
    dend_0 { pt3dadd( 337.442, 251.84, 41.5005, 0.5884 ) }
    dend_0 { pt3dadd( 336.515, 251.206, 41.7004, 0.5204 ) }
    dend_0 { pt3dadd( 335.852, 250.345, 41.9185, 0.5304 ) }
    dend_0 { pt3dadd( 335.447, 249.277, 42.1224, 0.5764 ) }
    dend_0 { pt3dadd( 335.143, 248.183, 42.3394, 0.5274 ) }
    dend_0 { pt3dadd( 334.871, 247.083, 42.5726, 0.4028 ) }
    dend_0 { pt3dadd( 334.468, 246.022, 42.7736, 0.3346 ) }
    dend_0 { pt3dadd( 333.984, 244.985, 42.9229, 0.3334 ) }
    dend_0 { pt3dadd( 333.497, 243.95, 43.0388, 0.41 ) }
    dend_0 { pt3dadd( 333.134, 242.87, 43.1379, 0.3976 ) }
    dend_0 { pt3dadd( 332.839, 241.765, 43.2306, 0.4384 ) }
    dend_0 { pt3dadd( 332.626, 240.643, 43.3278, 0.4328 ) }
    dend_0 { pt3dadd( 332.614, 239.504, 43.4403, 0.3594 ) }
    dend_0 { pt3dadd( 333.244, 238.744, 43.6579, 0.3 ) }
    dend_0 { pt3dadd( 333.508, 237.876, 43.9961, 0.2748 ) }
    dend_0 { pt3dadd( 332.754, 237.029, 44.3075, 0.275 ) }
    dend_0 { pt3dadd( 332.185, 236.037, 44.553, 0.2752 ) }
    dend_0 { pt3dadd( 331.638, 235.033, 44.7322, 0.2758 ) }
    dend_0 { pt3dadd( 331.026, 234.067, 44.8532, 0.2768 ) }
    dend_0 { pt3dadd( 330.343, 233.148, 44.924, 0.2786 ) }
    dend_0 { pt3dadd( 329.661, 232.231, 44.9702, 0.282 ) }
    dend_0 { pt3dadd( 328.986, 231.308, 45.0237, 0.2882 ) }
    dend_0 { pt3dadd( 328.398, 230.333, 45.0968, 0.301 ) }
    dend_0 { pt3dadd( 328.044, 229.245, 45.1951, 0.3184 ) }
    dend_0 { pt3dadd( 327.689, 228.159, 45.3312, 0.3816 ) }
    dend_0 { pt3dadd( 327.271, 227.111, 45.5512, 0.3486 ) }
    dend_0 { pt3dadd( 326.793, 226.093, 45.8422, 0.3286 ) }
    dend_0 { pt3dadd( 326.442, 225.032, 46.1975, 0.3222 ) }
    dend_0 { pt3dadd( 326.038, 224.0, 46.5895, 0.3884 ) }
    dend_0 { pt3dadd( 325.393, 223.064, 46.9568, 0.3626 ) }
    dend_0 { pt3dadd( 325.301, 222.039, 47.2665, 0.348 ) }
    dend_0 { pt3dadd( 325.507, 220.917, 47.5311, 0.389 ) }
    dend_0 { pt3dadd( 325.421, 219.789, 47.7694, 0.3638 ) }
    dend_0 { pt3dadd( 325.202, 218.726, 48.0992, 0.3502 ) }
    dend_0 { pt3dadd( 324.935, 217.732, 48.5792, 0.3928 ) }
    dend_0 { pt3dadd( 324.128, 217.103, 49.0526, 0.3708 ) }
    dend_0 { pt3dadd( 323.145, 216.526, 49.4665, 0.3642 ) }
    dend_0 { pt3dadd( 322.418, 215.675, 49.8571, 0.414 ) }
    dend_0 { pt3dadd( 321.783, 214.734, 50.2295, 0.4346 ) }
    dend_0 { pt3dadd( 321.148, 213.794, 50.5756, 0.3628 ) }
    dend_0 { pt3dadd( 320.66, 212.778, 50.9118, 0.3066 ) }
    dend_0 { pt3dadd( 320.504, 211.674, 51.2688, 0.2868 ) }
    dend_0 { pt3dadd( 320.439, 210.551, 51.6415, 0.2974 ) }
    dend_0 { pt3dadd( 320.205, 209.442, 51.9786, 0.3168 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 319.827, 208.365, 52.2519, 0.3532 ) }
    dend_0 { pt3dadd( 319.277, 207.368, 52.4905, 0.4182 ) }
    dend_0 { pt3dadd( 318.523, 206.529, 52.7338, 0.5514 ) }
    dend_0 { pt3dadd( 317.726, 205.727, 52.9852, 0.736 ) }
    dend_0 { pt3dadd( 316.97, 204.881, 53.2336, 0.6956 ) }
    dend_0 { pt3dadd( 316.426, 203.885, 53.4366, 0.6476 ) }
    dend_0 { pt3dadd( 315.933, 202.853, 53.5931, 0.6568 ) }
    dend_0 { pt3dadd( 315.441, 201.82, 53.7093, 0.6546 ) }
    dend_0 { pt3dadd( 314.647, 201.021, 53.816, 0.5156 ) }
    dend_0 { pt3dadd( 313.738, 200.335, 53.9297, 0.4546 ) }
    dend_0 { pt3dadd( 313.469, 199.283, 54.033, 0.5312 ) }
    dend_0 { pt3dadd( 313.119, 198.197, 54.1265, 0.6676 ) }
    dend_0 { pt3dadd( 312.495, 197.242, 54.2153, 0.7188 ) }
    dend_0 { pt3dadd( 311.851, 196.297, 54.3026, 0.6492 ) }
    dend_0 { pt3dadd( 311.293, 195.299, 54.4093, 0.6324 ) }
    dend_0 { pt3dadd( 310.863, 194.248, 54.5588, 0.5142 ) }
    dend_0 { pt3dadd( 310.442, 193.192, 54.7431, 0.488 ) }
    dend_0 { pt3dadd( 310.021, 192.137, 54.948, 0.6468 ) }
    dend_0 { pt3dadd( 309.552, 191.1, 55.155, 0.6204 ) }
    dend_0 { pt3dadd( 308.765, 190.276, 55.3143, 0.5286 ) }
    dend_0 { pt3dadd( 307.994, 189.432, 55.4277, 0.5654 ) }
    dend_0 { pt3dadd( 307.5, 188.402, 55.505, 0.545 ) }
    dend_0 { pt3dadd( 307.1, 187.331, 55.5604, 0.4798 ) }
    dend_0 { pt3dadd( 307.083, 186.189, 55.6088, 0.491 ) }
    dend_0 { pt3dadd( 306.88, 185.065, 55.6623, 0.5568 ) }
    dend_0 { pt3dadd( 306.273, 184.096, 55.7306, 0.4602 ) }
    dend_0 { pt3dadd( 305.784, 183.066, 55.8454, 0.428 ) }
    dend_0 { pt3dadd( 305.362, 182.012, 56.0101, 0.3408 ) }
    dend_0 { pt3dadd( 304.94, 180.956, 56.208, 0.3124 ) }
    dend_0 { pt3dadd( 304.517, 179.902, 56.425, 0.2988 ) }
    dend_0 { pt3dadd( 304.079, 178.847, 56.6266, 0.3142 ) }
    dend_0 { pt3dadd( 303.62, 177.799, 56.7795, 0.3734 ) }
    dend_0 { pt3dadd( 303.161, 176.751, 56.8873, 0.334 ) }
    dend_0 { pt3dadd( 302.658, 175.729, 56.9906, 0.3002 ) }
    dend_0 { pt3dadd( 302.145, 174.71, 57.0987, 0.2748 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 35/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 363.92, 299.103, 27.44, 1.0 ) }
    axon_1 { pt3dadd( 369.761, 312.919, 27.44, 1.0 ) }
    axon_1 { pt3dadd( 375.603, 326.735, 27.44, 1.0 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 357.883, 282.31, 34.1127, 0.5678 ) }
    dend_38 { pt3dadd( 358.561, 282.484, 34.7091, 0.4576 ) }
    dend_38 { pt3dadd( 359.654, 282.329, 35.0036, 0.417 ) }
    dend_38 { pt3dadd( 360.675, 282.736, 35.1142, 0.4038 ) }
    dend_38 { pt3dadd( 361.716, 283.209, 35.2181, 0.483 ) }
    dend_38 { pt3dadd( 362.796, 283.585, 35.3248, 0.583 ) }
    dend_38 { pt3dadd( 363.888, 283.901, 35.4612, 0.539 ) }
    dend_38 { pt3dadd( 364.982, 284.211, 35.6157, 0.4256 ) }
    dend_38 { pt3dadd( 366.076, 284.52, 35.772, 0.3716 ) }
    dend_38 { pt3dadd( 367.169, 284.828, 35.9232, 0.4278 ) }
    dend_38 { pt3dadd( 368.247, 285.203, 36.0002, 0.4598 ) }
    dend_38 { pt3dadd( 369.319, 285.596, 35.9926, 0.4118 ) }
    dend_38 { pt3dadd( 370.388, 285.991, 35.9134, 0.3866 ) }
    dend_38 { pt3dadd( 371.459, 286.385, 35.7809, 0.4864 ) }
    dend_38 { pt3dadd( 372.361, 287.074, 35.6213, 0.4188 ) }
    dend_38 { pt3dadd( 372.772, 288.136, 35.4679, 0.3752 ) }
    dend_38 { pt3dadd( 373.372, 289.108, 35.327, 0.3564 ) }
    dend_38 { pt3dadd( 374.174, 289.909, 35.1422, 0.4772 ) }
    dend_38 { pt3dadd( 374.984, 290.702, 34.9213, 0.4024 ) }
    dend_38 { pt3dadd( 375.794, 291.495, 34.6746, 0.3424 ) }
    dend_38 { pt3dadd( 376.63, 292.268, 34.4319, 0.3072 ) }
    dend_38 { pt3dadd( 377.512, 292.997, 34.2384, 0.3298 ) }
    dend_38 { pt3dadd( 378.401, 293.7, 34.0452, 0.4022 ) }
    dend_38 { pt3dadd( 379.29, 294.397, 33.8596, 0.3894 ) }
    dend_38 { pt3dadd( 380.179, 295.095, 33.691, 0.3922 ) }
    dend_38 { pt3dadd( 381.013, 295.872, 33.6375, 0.4966 ) }
    dend_38 { pt3dadd( 381.807, 296.671, 33.7117, 0.4392 ) }
    dend_38 { pt3dadd( 382.601, 297.47, 33.8764, 0.4064 ) }
    dend_38 { pt3dadd( 383.395, 298.269, 34.1006, 0.4448 ) }
    dend_38 { pt3dadd( 384.027, 299.22, 34.2832, 0.4936 ) }
    dend_38 { pt3dadd( 384.647, 300.182, 34.4058, 0.4628 ) }
    dend_38 { pt3dadd( 385.265, 301.145, 34.461, 0.5378 ) }
    dend_38 { pt3dadd( 385.907, 302.091, 34.4436, 0.493 ) }
    dend_38 { pt3dadd( 386.566, 303.024, 34.3658, 0.3866 ) }
    dend_38 { pt3dadd( 387.225, 303.955, 34.2527, 0.3034 ) }
    dend_38 { pt3dadd( 387.884, 304.887, 34.1278, 0.281 ) }
    dend_38 { pt3dadd( 388.543, 305.82, 34.0015, 0.2866 ) }
    dend_38 { pt3dadd( 389.35, 306.628, 33.9004, 0.2968 ) }
    dend_38 { pt3dadd( 390.219, 307.373, 33.8332, 0.3168 ) }
    dend_38 { pt3dadd( 391.087, 308.118, 33.7954, 0.3476 ) }
    dend_38 { pt3dadd( 391.843, 308.976, 33.7795, 0.4362 ) }
    dend_38 { pt3dadd( 392.508, 309.907, 33.7798, 0.4466 ) }
    dend_38 { pt3dadd( 393.172, 310.839, 33.7904, 0.5262 ) }
    dend_38 { pt3dadd( 393.852, 311.758, 33.8083, 0.6106 ) }
    dend_38 { pt3dadd( 394.65, 312.577, 33.8341, 0.6164 ) }
    dend_38 { pt3dadd( 395.449, 313.397, 33.8691, 0.444 ) }
    dend_38 { pt3dadd( 396.249, 314.215, 33.9142, 0.3254 ) }
    dend_38 { pt3dadd( 397.067, 315.015, 33.9696, 0.2746 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 357.883, 282.31, 34.1127, 0.5678 ) }
    dend_33 { pt3dadd( 357.836, 283.526, 34.2874, 0.6092 ) }
    dend_33 { pt3dadd( 357.763, 284.654, 34.5103, 0.463 ) }
    dend_33 { pt3dadd( 357.401, 285.737, 34.6766, 0.4332 ) }
    dend_33 { pt3dadd( 357.023, 286.817, 34.7654, 0.3508 ) }
    dend_33 { pt3dadd( 356.647, 287.897, 34.776, 0.3308 ) }
    dend_33 { pt3dadd( 356.485, 289.019, 34.6727, 0.3338 ) }
    dend_33 { pt3dadd( 356.354, 290.144, 34.4879, 0.3736 ) }
    dend_33 { pt3dadd( 356.225, 291.268, 34.2566, 0.5102 ) }
    dend_33 { pt3dadd( 356.191, 292.408, 34.0357, 0.4592 ) }
    dend_33 { pt3dadd( 356.268, 293.548, 33.8626, 0.4682 ) }
    dend_33 { pt3dadd( 356.432, 294.681, 33.7277, 0.4408 ) }
    dend_33 { pt3dadd( 356.655, 295.802, 33.623, 0.374 ) }
    dend_33 { pt3dadd( 356.88, 296.923, 33.5398, 0.3282 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 357.106, 298.043, 33.4692, 0.3216 ) }
    dend_33 { pt3dadd( 357.332, 299.164, 33.4043, 0.3872 ) }
    dend_33 { pt3dadd( 357.582, 300.281, 33.3522, 0.3604 ) }
    dend_33 { pt3dadd( 357.842, 301.395, 33.3164, 0.3438 ) }
    dend_33 { pt3dadd( 357.929, 302.534, 33.2937, 0.3816 ) }
    dend_33 { pt3dadd( 357.995, 303.677, 33.2805, 0.3486 ) }
    dend_33 { pt3dadd( 358.452, 304.724, 33.2727, 0.3284 ) }
    dend_33 { pt3dadd( 358.835, 305.802, 33.2674, 0.322 ) }
    dend_33 { pt3dadd( 358.676, 306.935, 33.2606, 0.3882 ) }
    dend_33 { pt3dadd( 358.518, 308.068, 33.2514, 0.3612 ) }
    dend_33 { pt3dadd( 358.354, 309.2, 33.2385, 0.3512 ) }
    dend_33 { pt3dadd( 358.161, 310.327, 33.2206, 0.3666 ) }
    dend_33 { pt3dadd( 357.969, 311.455, 33.1962, 0.46 ) }
    dend_33 { pt3dadd( 357.777, 312.583, 33.1607, 0.5454 ) }
    // Section: dend_23, id: dend_23, parent: dend_7 (entry count 14/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 336.719, 250.441, 23.6362, 0.7156 ) }
    dend_23 { pt3dadd( 335.711, 250.17, 23.4429, 0.5622 ) }
    dend_23 { pt3dadd( 334.576, 250.218, 23.188, 0.4056 ) }
    dend_23 { pt3dadd( 333.483, 249.899, 22.8927, 0.4116 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 18/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 336.719, 250.441, 23.6362, 0.7156 ) }
    dend_8 { pt3dadd( 336.035, 249.164, 24.0383, 0.5244 ) }
    dend_8 { pt3dadd( 335.575, 248.116, 24.0592, 0.5152 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 21/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 302.145, 174.71, 57.0987, 0.2748 ) }
    dend_6 { pt3dadd( 301.052, 174.084, 57.1477, 0.2756 ) }
    dend_6 { pt3dadd( 300.074, 173.499, 57.169, 0.2766 ) }
    dend_6 { pt3dadd( 299.157, 172.825, 57.1981, 0.2784 ) }
    dend_6 { pt3dadd( 298.072, 172.506, 57.2536, 0.2818 ) }
    dend_6 { pt3dadd( 296.943, 172.426, 57.3471, 0.2876 ) }
    dend_6 { pt3dadd( 295.912, 171.974, 57.5224, 0.2998 ) }
    dend_6 { pt3dadd( 295.005, 171.312, 57.7909, 0.3162 ) }
    dend_6 { pt3dadd( 294.096, 170.648, 58.1213, 0.3774 ) }
    dend_6 { pt3dadd( 293.151, 170.04, 58.4752, 0.3412 ) }
    dend_6 { pt3dadd( 292.108, 169.583, 58.8053, 0.3136 ) }
    dend_6 { pt3dadd( 291.058, 169.138, 59.1027, 0.2996 ) }
    dend_6 { pt3dadd( 290.009, 168.693, 59.3648, 0.323 ) }
    dend_6 { pt3dadd( 288.959, 168.248, 59.5952, 0.3538 ) }
    dend_6 { pt3dadd( 287.909, 167.803, 59.8007, 0.4726 ) }
    dend_6 { pt3dadd( 286.887, 167.307, 59.9872, 0.3938 ) }
    dend_6 { pt3dadd( 285.941, 166.671, 60.1572, 0.3266 ) }
    dend_6 { pt3dadd( 284.963, 166.096, 60.2997, 0.2768 ) }
    dend_6 { pt3dadd( 283.887, 165.707, 60.3921, 0.2788 ) }
    dend_6 { pt3dadd( 282.801, 165.349, 60.4419, 0.2824 ) }
    dend_6 { pt3dadd( 281.691, 165.079, 60.4565, 0.289 ) }
    dend_6 { pt3dadd( 280.565, 164.872, 60.4414, 0.3024 ) }
    dend_6 { pt3dadd( 279.493, 164.539, 60.4024, 0.321 ) }
    dend_6 { pt3dadd( 278.627, 163.804, 60.3439, 0.386 ) }
    dend_6 { pt3dadd( 277.938, 162.895, 60.2588, 0.3584 ) }
    dend_6 { pt3dadd( 277.363, 161.911, 60.1255, 0.3402 ) }
    dend_6 { pt3dadd( 276.817, 160.913, 59.9502, 0.3746 ) }
    dend_6 { pt3dadd( 276.272, 159.914, 59.7464, 0.336 ) }
    dend_6 { pt3dadd( 275.726, 158.914, 59.5266, 0.304 ) }
    dend_6 { pt3dadd( 275.18, 157.915, 59.3034, 0.2818 ) }
    dend_6 { pt3dadd( 274.634, 156.916, 59.089, 0.288 ) }
    dend_6 { pt3dadd( 274.093, 155.911, 58.9033, 0.2994 ) }
    dend_6 { pt3dadd( 273.56, 154.9, 58.7658, 0.3216 ) }
    dend_6 { pt3dadd( 273.026, 153.887, 58.6631, 0.3574 ) }
    dend_6 { pt3dadd( 272.492, 152.876, 58.5836, 0.4496 ) }
    dend_6 { pt3dadd( 271.924, 151.884, 58.5175, 0.4952 ) }
    dend_6 { pt3dadd( 271.204, 151.039, 58.4181, 0.5018 ) }
    dend_6 { pt3dadd( 270.414, 150.276, 58.2624, 0.4356 ) }
    dend_6 { pt3dadd( 269.723, 149.367, 58.1344, 0.463 ) }
    dend_6 { pt3dadd( 269.006, 148.477, 58.0339, 0.473 ) }
    dend_6 { pt3dadd( 268.346, 147.543, 57.958, 0.4594 ) }
    dend_6 { pt3dadd( 267.578, 146.712, 57.9051, 0.3616 ) }
    dend_6 { pt3dadd( 266.728, 145.957, 57.855, 0.3042 ) }
    dend_6 { pt3dadd( 265.892, 145.186, 57.801, 0.2826 ) }
    dend_6 { pt3dadd( 265.222, 144.31, 57.7598, 0.2894 ) }
    dend_6 { pt3dadd( 264.819, 143.239, 57.7307, 0.3016 ) }
    dend_6 { pt3dadd( 264.183, 142.32, 57.7133, 0.3268 ) }
    dend_6 { pt3dadd( 263.474, 141.428, 57.7074, 0.361 ) }
    dend_6 { pt3dadd( 262.834, 140.48, 57.7128, 0.4858 ) }
    dend_6 { pt3dadd( 262.17, 139.55, 57.7254, 0.4192 ) }
    dend_6 { pt3dadd( 261.392, 138.716, 57.7405, 0.3684 ) }
    dend_6 { pt3dadd( 260.648, 137.852, 57.7682, 0.38 ) }
    dend_6 { pt3dadd( 259.822, 137.073, 57.8152, 0.346 ) }
    dend_6 { pt3dadd( 258.894, 136.407, 57.86, 0.3224 ) }
    dend_6 { pt3dadd( 257.988, 135.71, 57.8914, 0.317 ) }
    dend_6 { pt3dadd( 257.06, 135.042, 57.9107, 0.349 ) }
    dend_6 { pt3dadd( 256.077, 134.461, 57.9191, 0.4328 ) }
    dend_6 { pt3dadd( 254.994, 134.116, 57.9191, 0.4704 ) }
    dend_6 { pt3dadd( 254.085, 133.476, 57.8858, 0.4238 ) }
    dend_6 { pt3dadd( 253.09, 132.937, 57.8558, 0.446 ) }
    dend_6 { pt3dadd( 252.006, 132.577, 57.8438, 0.417 ) }
    dend_6 { pt3dadd( 251.028, 132.004, 57.8483, 0.4752 ) }
    dend_6 { pt3dadd( 250.395, 131.076, 57.8992, 0.497 ) }
    dend_6 { pt3dadd( 249.576, 130.299, 57.9956, 0.4986 ) }
    dend_6 { pt3dadd( 248.787, 129.473, 58.0821, 0.4598 ) }
    dend_6 { pt3dadd( 248.127, 128.541, 58.1473, 0.3622 ) }
    dend_6 { pt3dadd( 247.651, 127.502, 58.191, 0.3054 ) }
    dend_6 { pt3dadd( 247.282, 126.42, 58.2142, 0.2846 ) }
    dend_6 { pt3dadd( 246.455, 125.636, 58.2187, 0.2928 ) }
    dend_6 { pt3dadd( 245.539, 124.953, 58.2117, 0.3096 ) }
    dend_6 { pt3dadd( 244.52, 124.434, 58.2005, 0.3338 ) }
    dend_6 { pt3dadd( 243.416, 124.134, 58.1848, 0.4112 ) }
    dend_6 { pt3dadd( 242.279, 124.018, 58.1624, 0.3984 ) }
    dend_6 { pt3dadd( 241.306, 123.415, 58.1316, 0.4472 ) }
    dend_6 { pt3dadd( 240.361, 122.77, 58.0896, 0.4132 ) }
    dend_6 { pt3dadd( 239.41, 122.138, 58.0314, 0.498 ) }
    dend_6 { pt3dadd( 238.606, 121.325, 57.9421, 0.3938 ) }
    dend_6 { pt3dadd( 237.737, 120.596, 57.8127, 0.3266 ) }
    dend_6 { pt3dadd( 237.205, 119.585, 57.6713, 0.277 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( 236.551, 118.675, 57.4773, 0.279 ) }
    dend_6 { pt3dadd( 235.638, 118.076, 57.1903, 0.2826 ) }
    dend_6 { pt3dadd( 234.659, 117.496, 56.9274, 0.2896 ) }
    dend_6 { pt3dadd( 233.781, 116.787, 56.7263, 0.3024 ) }
    dend_6 { pt3dadd( 233.27, 115.804, 56.5603, 0.3268 ) }
    dend_6 { pt3dadd( 232.961, 114.705, 56.4337, 0.3682 ) }
    dend_6 { pt3dadd( 232.345, 113.784, 56.3548, 0.4634 ) }
    dend_6 { pt3dadd( 231.479, 113.042, 56.3018, 0.5516 ) }
    dend_6 { pt3dadd( 230.643, 112.265, 56.273, 0.4568 ) }
    dend_6 { pt3dadd( 229.823, 111.508, 56.3326, 0.3908 ) }
    dend_6 { pt3dadd( 228.88, 110.897, 56.4239, 0.4222 ) }
    dend_6 { pt3dadd( 227.948, 110.24, 56.4838, 0.42 ) }
    dend_6 { pt3dadd( 227.033, 109.554, 56.5029, 0.4796 ) }
    dend_6 { pt3dadd( 226.03, 109.016, 56.4592, 0.511 ) }
    dend_6 { pt3dadd( 225.38, 108.152, 56.3528, 0.496 ) }
    dend_6 { pt3dadd( 224.78, 107.184, 56.1837, 0.5936 ) }
    dend_6 { pt3dadd( 224.025, 106.33, 55.9709, 0.6232 ) }
    dend_6 { pt3dadd( 223.261, 105.502, 55.6802, 0.4988 ) }
    dend_6 { pt3dadd( 222.407, 104.753, 55.3694, 0.4522 ) }
    dend_6 { pt3dadd( 222.006, 103.78, 54.9752, 0.3878 ) }
    dend_6 { pt3dadd( 222.723, 103.073, 54.5143, 0.3896 ) }
    dend_6 { pt3dadd( 223.213, 102.083, 54.0302, 0.4914 ) }
    dend_6 { pt3dadd( 223.526, 101.013, 53.5394, 0.4298 ) }
    dend_6 { pt3dadd( 223.527, 99.8882, 53.0776, 0.388 ) }
    dend_6 { pt3dadd( 222.765, 99.0428, 52.7167, 0.417 ) }
    dend_6 { pt3dadd( 222.0, 98.1982, 52.4126, 0.4104 ) }
    dend_6 { pt3dadd( 221.333, 97.2707, 52.1716, 0.462 ) }
    dend_6 { pt3dadd( 220.58, 96.4466, 51.8972, 0.4776 ) }
    dend_6 { pt3dadd( 219.709, 95.7498, 51.6144, 0.4368 ) }
    dend_6 { pt3dadd( 218.677, 95.2627, 51.3898, 0.4712 ) }
    dend_6 { pt3dadd( 217.624, 94.8385, 51.1888, 0.4576 ) }
    dend_6 { pt3dadd( 216.764, 94.1266, 51.0401, 0.5806 ) }
    dend_6 { pt3dadd( 216.345, 93.0827, 50.925, 0.5452 ) }
    dend_6 { pt3dadd( 216.132, 91.9798, 50.8203, 0.6162 ) }
    dend_6 { pt3dadd( 215.595, 90.9756, 50.7676, 0.7702 ) }
    dend_6 { pt3dadd( 214.938, 90.0438, 50.75, 0.7184 ) }
    dend_6 { pt3dadd( 214.297, 89.0988, 50.724, 0.8878 ) }
    dend_6 { pt3dadd( 213.847, 88.061, 50.682, 0.8278 ) }
    dend_6 { pt3dadd( 213.546, 86.9659, 50.6038, 0.7014 ) }
    dend_6 { pt3dadd( 213.083, 85.9286, 50.4652, 0.7702 ) }
    dend_6 { pt3dadd( 212.743, 84.8578, 50.2832, 0.7986 ) }
    dend_6 { pt3dadd( 212.857, 83.7591, 50.0702, 0.6458 ) }
    dend_6 { pt3dadd( 213.505, 82.8671, 49.8565, 0.4448 ) }
    dend_6 { pt3dadd( 214.332, 82.0834, 49.665, 0.3588 ) }
    dend_6 { pt3dadd( 215.08, 81.2209, 49.476, 0.41 ) }
    dend_6 { pt3dadd( 215.735, 80.3048, 49.2506, 0.3976 ) }
    dend_6 { pt3dadd( 215.944, 79.262, 48.9656, 0.4384 ) }
    dend_6 { pt3dadd( 215.698, 78.1615, 48.6898, 0.4328 ) }
    dend_6 { pt3dadd( 215.136, 77.1866, 48.477, 0.3596 ) }
    dend_6 { pt3dadd( 214.399, 76.338, 48.356, 0.3004 ) }
    dend_6 { pt3dadd( 214.065, 75.3216, 48.1765, 0.2754 ) }
    dend_6 { pt3dadd( 214.041, 74.5572, 47.7344, 0.2762 ) }
    dend_6 { pt3dadd( 214.041, 73.4551, 47.3393, 0.2776 ) }
    dend_6 { pt3dadd( 213.539, 72.4562, 47.075, 0.2802 ) }
    dend_6 { pt3dadd( 213.39, 71.3419, 46.9798, 0.2852 ) }
    dend_6 { pt3dadd( 213.277, 70.2137, 46.9694, 0.294 ) }
    dend_6 { pt3dadd( 213.395, 69.0852, 47.0778, 0.3116 ) }
    dend_6 { pt3dadd( 213.259, 67.975, 47.2942, 0.339 ) }
    dend_6 { pt3dadd( 212.807, 66.9306, 47.5168, 0.4142 ) }
    dend_6 { pt3dadd( 212.359, 65.8922, 47.6963, 0.435 ) }
    dend_6 { pt3dadd( 212.01, 64.8433, 47.8363, 0.3636 ) }
    dend_6 { pt3dadd( 211.3, 63.9669, 47.9996, 0.3078 ) }
    dend_6 { pt3dadd( 210.542, 63.1145, 48.116, 0.289 ) }
    dend_6 { pt3dadd( 209.96, 62.1766, 48.2163, 0.3024 ) }
    dend_6 { pt3dadd( 209.749, 61.058, 48.3356, 0.321 ) }
    dend_6 { pt3dadd( 209.415, 60.0398, 48.5416, 0.3858 ) }
    dend_6 { pt3dadd( 208.74, 59.1759, 48.8278, 0.358 ) }
    dend_6 { pt3dadd( 208.063, 58.2715, 49.1078, 0.3394 ) }
    dend_6 { pt3dadd( 207.32, 57.4227, 49.3657, 0.3734 ) }
    dend_6 { pt3dadd( 206.407, 56.7943, 49.4967, 0.3338 ) }
    dend_6 { pt3dadd( 205.344, 56.4444, 49.5113, 0.2996 ) }
    dend_6 { pt3dadd( 204.248, 56.2503, 49.5373, 0.274 ) }
    dend_6 { pt3dadd( 203.123, 56.2581, 49.5298, 0.2736 ) }
    dend_6 { pt3dadd( 201.991, 56.1554, 49.453, 0.2728 ) }
    dend_6 { pt3dadd( 200.88, 55.8874, 49.2985, 0.2712 ) }
    dend_6 { pt3dadd( 199.76, 55.9243, 49.0739, 0.2684 ) }
    dend_6 { pt3dadd( 198.899, 56.3143, 48.6111, 0.2626 ) }
    dend_6 { pt3dadd( 197.919, 56.7529, 48.055, 0.2542 ) }
    dend_6 { pt3dadd( 197.131, 57.3566, 47.392, 0.2288 ) }
    dend_6 { pt3dadd( 196.424, 58.2296, 46.2, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 80/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 302.145, 174.71, 57.0987, 0.2748 ) }
    dend_1 { pt3dadd( 301.572, 173.861, 57.7839, 0.2288 ) }
    dend_1 { pt3dadd( 300.943, 172.928, 58.2246, 0.4142 ) }
    dend_1 { pt3dadd( 300.456, 171.907, 58.4248, 0.435 ) }
    dend_1 { pt3dadd( 300.423, 170.771, 58.6006, 0.3636 ) }
    dend_1 { pt3dadd( 300.451, 169.627, 58.7524, 0.308 ) }
    dend_1 { pt3dadd( 300.488, 168.484, 58.8862, 0.2894 ) }
    dend_1 { pt3dadd( 299.925, 167.519, 59.0234, 0.3032 ) }
    dend_1 { pt3dadd( 298.914, 166.992, 59.1758, 0.3224 ) }
    dend_1 { pt3dadd( 297.943, 166.411, 59.3541, 0.3884 ) }
    dend_1 { pt3dadd( 297.289, 165.48, 59.5742, 0.3628 ) }
    dend_1 { pt3dadd( 296.636, 164.548, 59.8262, 0.3484 ) }
    dend_1 { pt3dadd( 295.983, 163.616, 60.0998, 0.3898 ) }
    dend_1 { pt3dadd( 295.328, 162.685, 60.3842, 0.3638 ) }
    dend_1 { pt3dadd( 294.671, 161.759, 60.6782, 0.3578 ) }
    dend_1 { pt3dadd( 294.0, 160.853, 60.9941, 0.3708 ) }
    dend_1 { pt3dadd( 293.326, 159.949, 61.3152, 0.5052 ) }
    dend_1 { pt3dadd( 292.612, 159.065, 61.6078, 0.4488 ) }
    dend_1 { pt3dadd( 291.836, 158.225, 61.8302, 0.4552 ) }
    dend_1 { pt3dadd( 291.054, 157.39, 62.0001, 0.3858 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 290.226, 156.602, 62.1356, 0.423 ) }
    dend_1 { pt3dadd( 289.368, 155.845, 62.2544, 0.3734 ) }
    dend_1 { pt3dadd( 288.549, 155.052, 62.3851, 0.3988 ) }
    dend_1 { pt3dadd( 287.922, 154.107, 62.585, 0.3338 ) }
    dend_1 { pt3dadd( 287.296, 153.162, 62.8463, 0.3 ) }
    dend_1 { pt3dadd( 286.669, 152.217, 63.1523, 0.2746 ) }
    dend_1 { pt3dadd( 286.044, 151.272, 63.4886, 0.2746 ) }
    dend_1 { pt3dadd( 285.418, 150.327, 63.8403, 0.2746 ) }
    dend_1 { pt3dadd( 284.799, 149.378, 64.1939, 0.2746 ) }
    dend_1 { pt3dadd( 284.252, 148.385, 64.5383, 0.2746 ) }
    dend_1 { pt3dadd( 283.71, 147.389, 64.8715, 0.2746 ) }
    dend_1 { pt3dadd( 283.168, 146.393, 65.1904, 0.2748 ) }
    dend_1 { pt3dadd( 282.628, 145.391, 65.4797, 0.2748 ) }
    dend_1 { pt3dadd( 282.092, 144.38, 65.7146, 0.2752 ) }
    dend_1 { pt3dadd( 281.572, 143.366, 65.9162, 0.2756 ) }
    dend_1 { pt3dadd( 281.455, 142.261, 66.108, 0.2764 ) }
    dend_1 { pt3dadd( 281.726, 141.188, 66.3359, 0.278 ) }
    dend_1 { pt3dadd( 281.541, 140.086, 66.6548, 0.281 ) }
    dend_1 { pt3dadd( 281.356, 138.983, 67.0474, 0.2866 ) }
    dend_1 { pt3dadd( 281.17, 137.875, 67.485, 0.2966 ) }
    dend_1 { pt3dadd( 280.989, 136.755, 67.9255, 0.3162 ) }
    dend_1 { pt3dadd( 280.808, 135.634, 68.3603, 0.3476 ) }
    dend_1 { pt3dadd( 280.616, 134.515, 68.7828, 0.4302 ) }
    dend_1 { pt3dadd( 280.324, 133.435, 69.2051, 0.4658 ) }
    dend_1 { pt3dadd( 279.804, 132.454, 69.6609, 0.415 ) }
    dend_1 { pt3dadd( 279.256, 131.483, 70.1372, 0.4298 ) }
    dend_1 { pt3dadd( 278.571, 130.587, 70.5886, 0.386 ) }
    dend_1 { pt3dadd( 277.745, 129.795, 70.9727, 0.4232 ) }
    dend_1 { pt3dadd( 276.975, 128.969, 71.3384, 0.3736 ) }
    dend_1 { pt3dadd( 276.344, 128.061, 71.766, 0.3994 ) }
    dend_1 { pt3dadd( 275.712, 127.152, 72.2425, 0.3348 ) }
    dend_1 { pt3dadd( 275.173, 126.191, 72.7381, 0.3016 ) }
    dend_1 { pt3dadd( 274.821, 125.111, 73.1973, 0.2776 ) }
    dend_1 { pt3dadd( 274.17, 124.228, 73.663, 0.2802 ) }
    dend_1 { pt3dadd( 273.279, 123.574, 74.1563, 0.285 ) }
    dend_1 { pt3dadd( 272.475, 122.823, 74.6494, 0.294 ) }
    dend_1 { pt3dadd( 271.709, 122.02, 75.1114, 0.3112 ) }
    dend_1 { pt3dadd( 270.86, 121.285, 75.5129, 0.3384 ) }
    dend_1 { pt3dadd( 270.23, 120.337, 75.8607, 0.4134 ) }
    dend_1 { pt3dadd( 269.596, 119.411, 76.2051, 0.4334 ) }
    dend_1 { pt3dadd( 268.737, 118.697, 76.5573, 0.3606 ) }
    dend_1 { pt3dadd( 268.038, 117.87, 76.8793, 0.3024 ) }
    dend_1 { pt3dadd( 267.69, 116.814, 77.2313, 0.279 ) }
    dend_1 { pt3dadd( 267.374, 115.756, 77.644, 0.283 ) }
    dend_1 { pt3dadd( 267.098, 114.66, 78.0438, 0.29 ) }
    dend_1 { pt3dadd( 267.01, 113.525, 78.3978, 0.3042 ) }
    dend_1 { pt3dadd( 267.009, 112.382, 78.7032, 0.3244 ) }
    dend_1 { pt3dadd( 267.009, 111.314, 79.072, 0.3924 ) }
    dend_1 { pt3dadd( 267.009, 110.248, 79.5071, 0.3702 ) }
    dend_1 { pt3dadd( 267.076, 109.12, 79.8748, 0.362 ) }
    dend_1 { pt3dadd( 267.726, 108.271, 80.157, 0.4148 ) }
    dend_1 { pt3dadd( 268.146, 107.258, 80.3718, 0.4116 ) }
    dend_1 { pt3dadd( 268.344, 106.132, 80.5339, 0.4402 ) }
    dend_1 { pt3dadd( 268.381, 104.994, 80.6772, 0.5524 ) }
    dend_1 { pt3dadd( 268.381, 103.852, 80.8046, 0.7032 ) }
    dend_1 { pt3dadd( 268.381, 102.721, 80.9774, 0.803 ) }
    dend_1 { pt3dadd( 268.397, 101.585, 81.1689, 0.7172 ) }
    dend_1 { pt3dadd( 268.685, 100.486, 81.3352, 0.4992 ) }
    dend_1 { pt3dadd( 268.979, 99.3807, 81.4694, 0.3812 ) }
    dend_1 { pt3dadd( 269.456, 98.3459, 81.5791, 0.3752 ) }
    dend_1 { pt3dadd( 270.062, 97.3765, 81.6754, 0.4758 ) }
    dend_1 { pt3dadd( 270.403, 96.2867, 81.7664, 0.5758 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 62/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 397.067, 315.015, 33.9696, 0.2746 ) }
    dend_42 { pt3dadd( 397.421, 315.33, 33.6, 0.2288 ) }
    dend_42 { pt3dadd( 398.269, 316.084, 33.0742, 0.2766 ) }
    dend_42 { pt3dadd( 399.117, 316.839, 32.8499, 0.2784 ) }
    dend_42 { pt3dadd( 399.965, 317.593, 32.5856, 0.2816 ) }
    dend_42 { pt3dadd( 400.813, 318.347, 32.2969, 0.2874 ) }
    dend_42 { pt3dadd( 401.661, 319.102, 31.9967, 0.2994 ) }
    dend_42 { pt3dadd( 402.518, 319.849, 31.7008, 0.3152 ) }
    dend_42 { pt3dadd( 403.412, 320.56, 31.4443, 0.3754 ) }
    dend_42 { pt3dadd( 404.323, 321.251, 31.2281, 0.3376 ) }
    dend_42 { pt3dadd( 405.215, 321.964, 31.026, 0.3068 ) }
    dend_42 { pt3dadd( 406.002, 322.78, 30.7838, 0.287 ) }
    dend_42 { pt3dadd( 406.735, 323.637, 30.4864, 0.2988 ) }
    dend_42 { pt3dadd( 407.468, 324.492, 30.1445, 0.3142 ) }
    dend_42 { pt3dadd( 408.195, 325.355, 29.7738, 0.3734 ) }
    dend_42 { pt3dadd( 408.896, 326.25, 29.4081, 0.3338 ) }
    dend_42 { pt3dadd( 409.59, 327.152, 29.0595, 0.3 ) }
    dend_42 { pt3dadd( 410.284, 328.053, 28.7328, 0.2746 ) }
    dend_42 { pt3dadd( 410.979, 328.954, 28.4248, 0.2746 ) }
    dend_42 { pt3dadd( 411.673, 329.855, 28.1282, 0.2746 ) }
    dend_42 { pt3dadd( 412.309, 330.788, 27.8377, 0.2748 ) }
    dend_42 { pt3dadd( 412.612, 331.874, 27.5483, 0.275 ) }
    dend_42 { pt3dadd( 412.647, 333.012, 27.2622, 0.2752 ) }
    dend_42 { pt3dadd( 412.68, 334.15, 26.9791, 0.2758 ) }
    dend_42 { pt3dadd( 412.714, 335.287, 26.697, 0.277 ) }
    dend_42 { pt3dadd( 412.751, 336.426, 26.4138, 0.279 ) }
    dend_42 { pt3dadd( 412.794, 337.568, 26.1412, 0.2828 ) }
    dend_42 { pt3dadd( 412.842, 338.711, 25.879, 0.29 ) }
    dend_42 { pt3dadd( 412.89, 339.854, 25.6126, 0.3026 ) }
    dend_42 { pt3dadd( 412.998, 340.937, 25.2775, 0.3286 ) }
    dend_42 { pt3dadd( 413.435, 341.61, 24.6895, 0.3644 ) }
    dend_42 { pt3dadd( 414.188, 341.145, 24.0414, 0.4922 ) }
    dend_42 { pt3dadd( 414.944, 340.298, 23.4602, 0.4296 ) }
    dend_42 { pt3dadd( 415.701, 339.449, 22.951, 0.395 ) }
    dend_42 { pt3dadd( 416.459, 338.601, 22.5181, 0.3942 ) }
    dend_42 { pt3dadd( 417.216, 337.753, 22.1628, 0.5418 ) }
    dend_42 { pt3dadd( 417.957, 336.887, 21.8873, 0.5498 ) }
    dend_42 { pt3dadd( 418.67, 335.994, 21.6654, 0.4812 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_42 { pt3dadd( 419.372, 335.09, 21.4742, 0.5296 ) }
    dend_42 { pt3dadd( 420.176, 334.29, 21.2737, 0.4542 ) }
    dend_42 { pt3dadd( 421.094, 333.629, 21.0292, 0.429 ) }
    dend_42 { pt3dadd( 422.039, 333.01, 20.7392, 0.5124 ) }
    dend_42 { pt3dadd( 423.003, 332.418, 20.4195, 0.4932 ) }
    dend_42 { pt3dadd( 423.996, 331.867, 20.0898, 0.387 ) }
    dend_42 { pt3dadd( 425.001, 331.332, 19.7631, 0.3042 ) }
    dend_42 { pt3dadd( 426.004, 330.797, 19.4497, 0.2824 ) }
    dend_42 { pt3dadd( 427.007, 330.26, 19.1563, 0.2886 ) }
    dend_42 { pt3dadd( 427.987, 330.454, 18.8683, 0.3018 ) }
    dend_42 { pt3dadd( 428.904, 331.106, 18.5846, 0.32 ) }
    dend_42 { pt3dadd( 429.802, 331.786, 18.3157, 0.3842 ) }
    dend_42 { pt3dadd( 430.789, 332.342, 18.1384, 0.3536 ) }
    dend_42 { pt3dadd( 431.813, 332.846, 18.0665, 0.3378 ) }
    dend_42 { pt3dadd( 432.839, 333.348, 18.0753, 0.339 ) }
    dend_42 { pt3dadd( 433.863, 333.849, 18.1408, 0.422 ) }
    dend_42 { pt3dadd( 434.888, 334.355, 18.2304, 0.4132 ) }
    dend_42 { pt3dadd( 435.911, 334.865, 18.3048, 0.4982 ) }
    dend_42 { pt3dadd( 436.934, 335.379, 18.3437, 0.3942 ) }
    dend_42 { pt3dadd( 437.956, 335.891, 18.3477, 0.3274 ) }
    dend_42 { pt3dadd( 438.979, 336.404, 18.3227, 0.2782 ) }
    dend_42 { pt3dadd( 440.073, 336.704, 18.2596, 0.2814 ) }
    dend_42 { pt3dadd( 441.202, 336.869, 18.1602, 0.2872 ) }
    dend_42 { pt3dadd( 442.335, 337.014, 18.0356, 0.299 ) }
    dend_42 { pt3dadd( 443.467, 337.16, 17.8945, 0.3148 ) }
    dend_42 { pt3dadd( 444.6, 337.305, 17.7428, 0.3746 ) }
    dend_42 { pt3dadd( 445.697, 337.083, 17.5976, 0.336 ) }
    dend_42 { pt3dadd( 446.71, 336.559, 17.4692, 0.3038 ) }
    dend_42 { pt3dadd( 447.701, 335.988, 17.3517, 0.2818 ) }
    dend_42 { pt3dadd( 448.6, 335.288, 17.2176, 0.2876 ) }
    dend_42 { pt3dadd( 449.406, 334.484, 17.0476, 0.2998 ) }
    dend_42 { pt3dadd( 450.193, 333.66, 16.8418, 0.3162 ) }
    dend_42 { pt3dadd( 450.979, 332.836, 16.6042, 0.3774 ) }
    dend_42 { pt3dadd( 451.766, 332.012, 16.3418, 0.3412 ) }
    dend_42 { pt3dadd( 452.695, 331.369, 16.0551, 0.3136 ) }
    dend_42 { pt3dadd( 453.777, 331.534, 15.7437, 0.3008 ) }
    dend_42 { pt3dadd( 454.875, 331.801, 15.4211, 0.3178 ) }
    dend_42 { pt3dadd( 455.973, 332.068, 15.0987, 0.3802 ) }
    dend_42 { pt3dadd( 457.073, 332.332, 14.7877, 0.3464 ) }
    dend_42 { pt3dadd( 458.208, 332.452, 14.5494, 0.3242 ) }
    dend_42 { pt3dadd( 459.347, 332.553, 14.3791, 0.3142 ) }
    dend_42 { pt3dadd( 460.483, 332.445, 14.2552, 0.3736 ) }
    dend_42 { pt3dadd( 461.561, 332.072, 14.1544, 0.3342 ) }
    dend_42 { pt3dadd( 462.633, 331.674, 14.0633, 0.3008 ) }
    dend_42 { pt3dadd( 463.705, 331.276, 13.9713, 0.276 ) }
    dend_42 { pt3dadd( 464.748, 330.808, 13.8823, 0.2772 ) }
    dend_42 { pt3dadd( 465.464, 329.93, 13.8041, 0.2794 ) }
    dend_42 { pt3dadd( 465.71, 328.821, 13.7051, 0.2834 ) }
    dend_42 { pt3dadd( 465.602, 327.698, 13.5448, 0.2908 ) }
    dend_42 { pt3dadd( 465.288, 326.599, 13.3969, 0.3058 ) }
    dend_42 { pt3dadd( 465.058, 325.479, 13.2663, 0.327 ) }
    dend_42 { pt3dadd( 465.035, 324.347, 13.098, 0.3982 ) }
    dend_42 { pt3dadd( 465.148, 323.263, 12.8408, 0.3756 ) }
    dend_42 { pt3dadd( 465.149, 322.122, 12.6321, 0.3982 ) }
    dend_42 { pt3dadd( 465.15, 320.978, 12.4974, 0.356 ) }
    dend_42 { pt3dadd( 465.264, 319.862, 12.6, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 56/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 397.067, 315.015, 33.9696, 0.2746 ) }
    dend_39 { pt3dadd( 397.52, 315.368, 34.1043, 0.2746 ) }
    dend_39 { pt3dadd( 398.419, 316.07, 34.2423, 0.2746 ) }
    dend_39 { pt3dadd( 399.32, 316.774, 34.3753, 0.2746 ) }
    dend_39 { pt3dadd( 400.22, 317.478, 34.5008, 0.2746 ) }
    dend_39 { pt3dadd( 401.122, 318.182, 34.6164, 0.2746 ) }
    dend_39 { pt3dadd( 402.024, 318.885, 34.7211, 0.2748 ) }
    dend_39 { pt3dadd( 402.924, 319.59, 34.8138, 0.2748 ) }
    dend_39 { pt3dadd( 403.825, 320.294, 34.9051, 0.2752 ) }
    dend_39 { pt3dadd( 404.726, 320.997, 34.9966, 0.2756 ) }
    dend_39 { pt3dadd( 405.627, 321.701, 35.0885, 0.2766 ) }
    dend_39 { pt3dadd( 406.707, 322.074, 35.1761, 0.2784 ) }
    dend_39 { pt3dadd( 407.843, 322.203, 35.2601, 0.2816 ) }
    dend_39 { pt3dadd( 408.98, 322.331, 35.3492, 0.2876 ) }
    dend_39 { pt3dadd( 410.116, 322.46, 35.4516, 0.2996 ) }
    dend_39 { pt3dadd( 411.253, 322.59, 35.5751, 0.3158 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 72/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 357.777, 312.583, 33.1607, 0.5454 ) }
    dend_37 { pt3dadd( 358.241, 312.362, 32.23, 0.2288 ) }
    dend_37 { pt3dadd( 359.059, 311.979, 30.0642, 0.2998 ) }
    dend_37 { pt3dadd( 359.903, 311.589, 29.1194, 0.3236 ) }
    dend_37 { pt3dadd( 360.831, 311.195, 28.0672, 0.3548 ) }
    dend_37 { pt3dadd( 361.828, 310.797, 27.005, 0.4744 ) }
    dend_37 { pt3dadd( 362.824, 310.399, 25.9718, 0.3972 ) }
    dend_37 { pt3dadd( 363.633, 310.605, 24.956, 0.3328 ) }
    dend_37 { pt3dadd( 364.067, 311.471, 23.9841, 0.2884 ) }
    dend_37 { pt3dadd( 364.418, 312.51, 23.1679, 0.2996 ) }
    dend_37 { pt3dadd( 364.754, 313.601, 22.5531, 0.3232 ) }
    dend_37 { pt3dadd( 365.087, 314.695, 22.1014, 0.3544 ) }
    dend_37 { pt3dadd( 365.484, 315.765, 21.7442, 0.4736 ) }
    dend_37 { pt3dadd( 365.985, 316.774, 21.4091, 0.3954 ) }
    dend_37 { pt3dadd( 366.509, 317.769, 21.0638, 0.3296 ) }
    dend_37 { pt3dadd( 367.034, 318.764, 20.6899, 0.2824 ) }
    dend_37 { pt3dadd( 367.558, 319.758, 20.2909, 0.289 ) }
    dend_37 { pt3dadd( 367.796, 320.858, 19.9117, 0.301 ) }
    dend_37 { pt3dadd( 367.928, 321.989, 19.5708, 0.3256 ) }
    dend_37 { pt3dadd( 368.052, 323.122, 19.2678, 0.3588 ) }
    dend_37 { pt3dadd( 368.179, 324.254, 18.9938, 0.4818 ) }
    dend_37 { pt3dadd( 368.322, 325.384, 18.7386, 0.4108 ) }
    dend_37 { pt3dadd( 368.47, 326.515, 18.4939, 0.3578 ) }
    dend_37 { pt3dadd( 368.619, 327.645, 18.2528, 0.3364 ) }
    dend_37 { pt3dadd( 368.765, 328.774, 18.0142, 0.3798 ) }
    dend_37 { pt3dadd( 368.913, 329.904, 17.7788, 0.5156 ) }
    dend_37 { pt3dadd( 369.299, 330.97, 17.5504, 0.499 ) }
    dend_37 { pt3dadd( 369.913, 331.927, 17.333, 0.3974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_37 { pt3dadd( 370.564, 332.865, 17.1255, 0.3246 ) }
    dend_37 { pt3dadd( 371.213, 333.803, 16.9258, 0.315 ) }
    dend_37 { pt3dadd( 371.864, 334.74, 16.7323, 0.375 ) }
    dend_37 { pt3dadd( 372.515, 335.678, 16.5435, 0.3368 ) }
    dend_37 { pt3dadd( 373.166, 336.615, 16.3582, 0.3052 ) }
    dend_37 { pt3dadd( 373.997, 337.39, 16.1762, 0.2844 ) }
    dend_37 { pt3dadd( 375.043, 337.823, 16.0008, 0.2928 ) }
    dend_37 { pt3dadd( 376.119, 338.208, 15.8323, 0.308 ) }
    dend_37 { pt3dadd( 377.194, 338.592, 15.6707, 0.3388 ) }
    dend_37 { pt3dadd( 378.27, 338.976, 15.5165, 0.3828 ) }
    dend_37 { pt3dadd( 379.345, 339.361, 15.3712, 0.5286 ) }
    dend_37 { pt3dadd( 380.419, 339.745, 15.2361, 0.487 ) }
    dend_37 { pt3dadd( 381.494, 340.129, 15.1131, 0.5514 ) }
    dend_37 { pt3dadd( 382.589, 340.459, 15.009, 0.4404 ) }
    dend_37 { pt3dadd( 383.723, 340.588, 14.9415, 0.4384 ) }
    dend_37 { pt3dadd( 384.862, 340.688, 14.9084, 0.3602 ) }
    dend_37 { pt3dadd( 386.002, 340.787, 14.9052, 0.3492 ) }
    dend_37 { pt3dadd( 387.141, 340.888, 14.9281, 0.3628 ) }
    dend_37 { pt3dadd( 388.237, 341.207, 14.9731, 0.4534 ) }
    dend_37 { pt3dadd( 389.256, 341.722, 15.0385, 0.533 ) }
    dend_37 { pt3dadd( 390.294, 342.191, 15.1526, 0.4214 ) }
    dend_37 { pt3dadd( 391.336, 342.651, 15.3063, 0.3306 ) }
    dend_37 { pt3dadd( 392.377, 343.111, 15.4853, 0.284 ) }
    dend_37 { pt3dadd( 393.418, 343.572, 15.6762, 0.2922 ) }
    dend_37 { pt3dadd( 394.459, 344.033, 15.8671, 0.3068 ) }
    dend_37 { pt3dadd( 395.589, 344.165, 16.0144, 0.3366 ) }
    dend_37 { pt3dadd( 396.73, 344.248, 16.1158, 0.3786 ) }
    dend_37 { pt3dadd( 397.871, 344.328, 16.1822, 0.5206 ) }
    dend_37 { pt3dadd( 399.012, 344.409, 16.2248, 0.4724 ) }
    dend_37 { pt3dadd( 400.146, 344.559, 16.2599, 0.5234 ) }
    dend_37 { pt3dadd( 401.275, 344.737, 16.2968, 0.3936 ) }
    dend_37 { pt3dadd( 402.404, 344.919, 16.34, 0.326 ) }
    dend_37 { pt3dadd( 403.534, 345.1, 16.3871, 0.2758 ) }
    dend_37 { pt3dadd( 404.663, 345.282, 16.4344, 0.2768 ) }
    dend_37 { pt3dadd( 405.792, 345.464, 16.4784, 0.2788 ) }
    dend_37 { pt3dadd( 406.922, 345.645, 16.5155, 0.2824 ) }
    dend_37 { pt3dadd( 408.063, 345.612, 16.5366, 0.289 ) }
    dend_37 { pt3dadd( 409.201, 345.504, 16.5392, 0.3014 ) }
    dend_37 { pt3dadd( 410.34, 345.391, 16.5234, 0.3248 ) }
    dend_37 { pt3dadd( 411.479, 345.277, 16.4889, 0.3646 ) }
    dend_37 { pt3dadd( 412.617, 345.164, 16.4332, 0.4566 ) }
    dend_37 { pt3dadd( 413.723, 345.424, 16.3494, 0.539 ) }
    dend_37 { pt3dadd( 414.753, 345.919, 16.2299, 0.4324 ) }
    dend_37 { pt3dadd( 415.777, 346.431, 16.0688, 0.351 ) }
    dend_37 { pt3dadd( 416.799, 346.942, 15.8633, 0.3226 ) }
    dend_37 { pt3dadd( 417.742, 347.551, 15.5389, 0.3606 ) }
    dend_37 { pt3dadd( 418.475, 348.257, 15.008, 0.4492 ) }
    dend_37 { pt3dadd( 419.122, 349.086, 14.3674, 0.5254 ) }
    dend_37 { pt3dadd( 419.469, 350.161, 13.7695, 0.4068 ) }
    dend_37 { pt3dadd( 419.817, 351.237, 13.2326, 0.305 ) }
    dend_37 { pt3dadd( 420.166, 352.312, 12.7711, 0.2288 ) }
    dend_37 { pt3dadd( 420.514, 353.387, 12.019, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 52/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 357.777, 312.583, 33.1607, 0.5454 ) }
    dend_34 { pt3dadd( 357.492, 313.671, 33.1089, 0.4454 ) }
    dend_34 { pt3dadd( 357.202, 314.777, 33.0386, 0.3696 ) }
    dend_34 { pt3dadd( 356.94, 315.892, 32.9501, 0.3822 ) }
    dend_34 { pt3dadd( 356.757, 317.02, 32.8448, 0.35 ) }
    dend_34 { pt3dadd( 356.527, 318.033, 32.5814, 0.3308 ) }
    dend_34 { pt3dadd( 356.43, 319.136, 32.2675, 0.3264 ) }
    dend_34 { pt3dadd( 356.284, 320.27, 32.0228, 0.3964 ) }
    dend_34 { pt3dadd( 356.241, 321.413, 31.843, 0.376 ) }
    dend_34 { pt3dadd( 356.241, 322.556, 31.7234, 0.3812 ) }
    dend_34 { pt3dadd( 356.241, 323.701, 31.6582, 0.4092 ) }
    dend_34 { pt3dadd( 356.241, 324.845, 31.6408, 0.602 ) }
    dend_34 { pt3dadd( 356.242, 325.988, 31.6414, 0.5046 ) }
    dend_34 { pt3dadd( 356.291, 327.128, 31.6417, 0.4728 ) }
    dend_34 { pt3dadd( 356.485, 328.255, 31.6425, 0.3774 ) }
    dend_34 { pt3dadd( 356.584, 329.393, 31.6434, 0.3764 ) }
    dend_34 { pt3dadd( 356.584, 330.537, 31.6448, 0.4376 ) }
    dend_34 { pt3dadd( 356.584, 331.681, 31.6467, 0.473 ) }
    dend_34 { pt3dadd( 356.633, 332.82, 31.6495, 0.4596 ) }
    dend_34 { pt3dadd( 356.799, 333.95, 31.6532, 0.3618 ) }
    dend_34 { pt3dadd( 356.813, 335.094, 31.6585, 0.3048 ) }
    dend_34 { pt3dadd( 356.813, 336.238, 31.666, 0.2834 ) }
    dend_34 { pt3dadd( 356.863, 337.377, 31.6767, 0.291 ) }
    dend_34 { pt3dadd( 357.104, 338.494, 31.691, 0.305 ) }
    dend_34 { pt3dadd( 357.42, 339.593, 31.7086, 0.3318 ) }
    dend_34 { pt3dadd( 357.639, 340.713, 31.7369, 0.3772 ) }
    dend_34 { pt3dadd( 357.759, 341.848, 31.7904, 0.481 ) }
    dend_34 { pt3dadd( 357.892, 342.984, 31.843, 0.5792 ) }
    dend_34 { pt3dadd( 358.042, 344.116, 31.8856, 0.5322 ) }
    dend_34 { pt3dadd( 358.148, 345.254, 31.9192, 0.413 ) }
    dend_34 { pt3dadd( 358.299, 346.384, 31.9466, 0.3474 ) }
    dend_34 { pt3dadd( 358.3, 347.528, 31.9693, 0.3876 ) }
    dend_34 { pt3dadd( 358.3, 348.672, 31.99, 0.3614 ) }
    dend_34 { pt3dadd( 358.251, 349.812, 32.0144, 0.3456 ) }
    dend_34 { pt3dadd( 358.112, 350.945, 32.0558, 0.3848 ) }
    dend_34 { pt3dadd( 358.071, 352.084, 32.1272, 0.3546 ) }
    dend_34 { pt3dadd( 357.981, 353.216, 32.193, 0.3396 ) }
    dend_34 { pt3dadd( 357.726, 354.33, 32.2554, 0.3428 ) }
    dend_34 { pt3dadd( 357.613, 355.465, 32.3156, 0.4274 ) }
    dend_34 { pt3dadd( 357.607, 356.609, 32.3772, 0.4294 ) }
    dend_34 { pt3dadd( 357.562, 357.746, 32.468, 0.4992 ) }
    dend_34 { pt3dadd( 357.409, 358.865, 32.6021, 0.536 ) }
    dend_34 { pt3dadd( 357.19, 359.985, 32.7225, 0.5968 ) }
    dend_34 { pt3dadd( 357.042, 361.117, 32.821, 0.5178 ) }
    dend_34 { pt3dadd( 356.841, 362.24, 32.9235, 0.3852 ) }
    dend_34 { pt3dadd( 356.575, 363.348, 33.0677, 0.301 ) }
    dend_34 { pt3dadd( 356.282, 364.453, 33.238, 0.2766 ) }
    dend_34 { pt3dadd( 356.132, 365.576, 33.4631, 0.2782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_34 { pt3dadd( 356.126, 366.692, 33.7921, 0.2814 ) }
    dend_34 { pt3dadd( 356.217, 367.793, 34.2104, 0.287 ) }
    dend_34 { pt3dadd( 356.41, 368.903, 34.6629, 0.2988 ) }
    dend_34 { pt3dadd( 356.615, 370.017, 35.1075, 0.3142 ) }
    dend_34 { pt3dadd( 357.014, 371.011, 35.5824, 0.3734 ) }
    dend_34 { pt3dadd( 357.498, 371.975, 36.1018, 0.3338 ) }
    dend_34 { pt3dadd( 357.895, 373.03, 36.5854, 0.3 ) }
    dend_34 { pt3dadd( 358.201, 374.113, 37.0325, 0.2746 ) }
    dend_34 { pt3dadd( 358.3, 375.237, 37.4326, 0.2746 ) }
    dend_34 { pt3dadd( 358.148, 376.362, 37.7588, 0.2746 ) }
    dend_34 { pt3dadd( 357.64, 377.369, 38.0108, 0.2746 ) }
    dend_34 { pt3dadd( 356.948, 378.252, 38.2718, 0.2746 ) }
    dend_34 { pt3dadd( 356.012, 378.88, 38.5042, 0.2746 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 333.483, 249.899, 22.8927, 0.4116 ) }
    dend_27 { pt3dadd( 332.623, 249.607, 22.0347, 0.4576 ) }
    dend_27 { pt3dadd( 331.64, 249.199, 21.7235, 0.4126 ) }
    dend_27 { pt3dadd( 330.616, 248.723, 21.6367, 0.3882 ) }
    dend_27 { pt3dadd( 329.564, 248.303, 21.4787, 0.489 ) }
    dend_27 { pt3dadd( 328.485, 248.138, 21.2145, 0.4254 ) }
    dend_27 { pt3dadd( 327.383, 248.064, 20.8789, 0.3796 ) }
    dend_27 { pt3dadd( 326.308, 247.845, 20.6627, 0.4018 ) }
    dend_27 { pt3dadd( 325.195, 247.796, 20.4827, 0.3812 ) }
    dend_27 { pt3dadd( 324.1, 247.946, 20.2422, 0.4132 ) }
    dend_27 { pt3dadd( 322.978, 247.898, 20.0606, 0.3606 ) }
    dend_27 { pt3dadd( 321.935, 247.499, 19.99, 0.3492 ) }
    dend_27 { pt3dadd( 320.959, 246.92, 19.9497, 0.3674 ) }
    dend_27 { pt3dadd( 320.0, 246.301, 19.8505, 0.4382 ) }
    dend_27 { pt3dadd( 318.994, 245.88, 19.6169, 0.6202 ) }
    dend_27 { pt3dadd( 317.925, 245.703, 19.2752, 0.7094 ) }
    dend_27 { pt3dadd( 316.8, 245.693, 18.9106, 0.7092 ) }
    dend_27 { pt3dadd( 315.754, 246.08, 18.5414, 0.5954 ) }
    dend_27 { pt3dadd( 314.694, 246.318, 18.1539, 0.4778 ) }
    dend_27 { pt3dadd( 313.614, 246.466, 18.0174, 0.4938 ) }
    dend_27 { pt3dadd( 312.538, 246.748, 18.0593, 0.5308 ) }
    dend_27 { pt3dadd( 311.397, 246.825, 18.1255, 0.5636 ) }
    dend_27 { pt3dadd( 310.302, 247.154, 18.1814, 0.5692 ) }
    dend_27 { pt3dadd( 309.334, 247.763, 18.2118, 0.6184 ) }
    dend_27 { pt3dadd( 308.44, 248.477, 18.2043, 0.5218 ) }
    dend_27 { pt3dadd( 307.611, 249.264, 18.1343, 0.5686 ) }
    dend_27 { pt3dadd( 306.771, 250.001, 17.9691, 0.4732 ) }
    dend_27 { pt3dadd( 306.09, 250.793, 17.6834, 0.495 ) }
    dend_27 { pt3dadd( 305.433, 251.719, 17.542, 0.485 ) }
    dend_27 { pt3dadd( 304.697, 252.572, 17.542, 0.4828 ) }
    dend_27 { pt3dadd( 303.741, 253.195, 17.6171, 0.3998 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 44/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 333.483, 249.899, 22.8927, 0.4116 ) }
    dend_24 { pt3dadd( 332.997, 250.783, 22.4791, 0.3572 ) }
    dend_24 { pt3dadd( 332.741, 251.789, 21.9747, 0.3442 ) }
    dend_24 { pt3dadd( 332.424, 252.88, 21.576, 0.3522 ) }
    dend_24 { pt3dadd( 332.054, 253.947, 21.2824, 0.4398 ) }
    dend_24 { pt3dadd( 331.639, 254.991, 20.9703, 0.4774 ) }
    dend_24 { pt3dadd( 331.29, 256.019, 20.5752, 0.4674 ) }
    dend_24 { pt3dadd( 330.849, 257.019, 20.1539, 0.3766 ) }
    dend_24 { pt3dadd( 330.283, 258.01, 19.7884, 0.3318 ) }
    dend_24 { pt3dadd( 329.703, 258.971, 19.432, 0.3354 ) }
    dend_24 { pt3dadd( 329.37, 259.988, 19.0688, 0.378 ) }
    dend_24 { pt3dadd( 329.398, 261.126, 18.7913, 0.5122 ) }
    dend_24 { pt3dadd( 329.548, 262.259, 18.6052, 0.4926 ) }
    dend_24 { pt3dadd( 329.557, 263.391, 18.4796, 0.3858 ) }
    dend_24 { pt3dadd( 329.028, 264.353, 18.3841, 0.302 ) }
    dend_24 { pt3dadd( 328.192, 265.123, 18.2919, 0.2784 ) }
    dend_24 { pt3dadd( 327.342, 265.884, 18.2031, 0.2816 ) }
    dend_24 { pt3dadd( 326.764, 266.845, 18.1275, 0.2874 ) }
    dend_24 { pt3dadd( 326.471, 267.945, 18.068, 0.2994 ) }
    dend_24 { pt3dadd( 326.4, 269.082, 18.0221, 0.3154 ) }
    dend_24 { pt3dadd( 326.427, 270.227, 17.9875, 0.3756 ) }
    dend_24 { pt3dadd( 326.197, 271.332, 17.9617, 0.338 ) }
    dend_24 { pt3dadd( 325.547, 272.254, 17.9402, 0.3076 ) }
    dend_24 { pt3dadd( 325.503, 273.316, 17.8899, 0.2888 ) }
    dend_24 { pt3dadd( 325.843, 274.401, 17.819, 0.3008 ) }
    dend_24 { pt3dadd( 325.681, 275.498, 17.7625, 0.324 ) }
    dend_24 { pt3dadd( 325.339, 276.59, 17.7336, 0.3618 ) }
    dend_24 { pt3dadd( 324.887, 277.629, 17.7645, 0.4574 ) }
    dend_24 { pt3dadd( 324.844, 278.754, 17.7969, 0.5108 ) }
    dend_24 { pt3dadd( 324.978, 279.889, 17.8178, 0.5256 ) }
    dend_24 { pt3dadd( 325.237, 281.002, 17.8091, 0.5046 ) }
    dend_24 { pt3dadd( 325.579, 282.085, 17.7374, 0.4706 ) }
    dend_24 { pt3dadd( 325.437, 283.201, 17.6571, 0.3834 ) }
    dend_24 { pt3dadd( 325.037, 284.27, 17.5786, 0.3396 ) }
    dend_24 { pt3dadd( 325.354, 285.33, 17.5078, 0.3734 ) }
    dend_24 { pt3dadd( 325.801, 286.382, 17.4419, 0.3338 ) }
    dend_24 { pt3dadd( 325.561, 287.494, 17.3758, 0.3 ) }
    dend_24 { pt3dadd( 324.97, 288.472, 17.3022, 0.2746 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 335.575, 248.116, 24.0592, 0.5152 ) }
    dend_16 { pt3dadd( 334.414, 247.385, 24.3228, 0.3614 ) }
    dend_16 { pt3dadd( 333.458, 246.762, 25.1744, 0.304 ) }
    dend_16 { pt3dadd( 332.525, 246.098, 25.467, 0.2818 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 86/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 335.575, 248.116, 24.0592, 0.5152 ) }
    dend_9 { pt3dadd( 336.121, 246.723, 24.0676, 0.3772 ) }
    dend_9 { pt3dadd( 336.048, 245.632, 24.0798, 0.4378 ) }
    dend_9 { pt3dadd( 336.361, 244.553, 24.0967, 0.4798 ) }
    dend_9 { pt3dadd( 336.959, 243.579, 24.1182, 0.4424 ) }
    dend_9 { pt3dadd( 337.305, 242.492, 24.1438, 0.4742 ) }
    dend_9 { pt3dadd( 337.697, 241.422, 24.2001, 0.4996 ) }
    dend_9 { pt3dadd( 338.101, 240.355, 24.2817, 0.4798 ) }
    dend_9 { pt3dadd( 338.366, 239.244, 24.3478, 0.5408 ) }
    dend_9 { pt3dadd( 338.608, 238.126, 24.3926, 0.6374 ) }
    dend_9 { pt3dadd( 338.661, 236.984, 24.4158, 0.6668 ) }
    dend_9 { pt3dadd( 338.712, 235.841, 24.4167, 0.5328 ) }
    dend_9 { pt3dadd( 338.791, 234.7, 24.3952, 0.5126 ) }
    dend_9 { pt3dadd( 338.55, 233.585, 24.3564, 0.5126 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( 338.827, 232.485, 24.305, 0.5584 ) }
    dend_9 { pt3dadd( 339.09, 231.374, 24.2152, 0.4214 ) }
    dend_9 { pt3dadd( 339.246, 230.246, 24.0807, 0.3304 ) }
    dend_9 { pt3dadd( 339.706, 229.2, 23.9432, 0.2838 ) }
    dend_9 { pt3dadd( 340.205, 228.17, 23.8043, 0.2918 ) }
    dend_9 { pt3dadd( 340.838, 227.221, 23.6309, 0.3062 ) }
    dend_9 { pt3dadd( 341.508, 226.298, 23.4228, 0.3354 ) }
    dend_9 { pt3dadd( 342.177, 225.375, 23.1801, 0.3778 ) }
    dend_9 { pt3dadd( 342.848, 224.453, 22.898, 0.5118 ) }
    dend_9 { pt3dadd( 343.426, 223.465, 22.5922, 0.492 ) }
    dend_9 { pt3dadd( 343.973, 222.461, 22.2614, 0.3848 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 270.403, 96.2867, 81.7664, 0.5758 ) }
    dend_5 { pt3dadd( 269.788, 96.0509, 81.48, 0.4576 ) }
    dend_5 { pt3dadd( 268.699, 95.752, 81.5413, 0.3716 ) }
    dend_5 { pt3dadd( 267.56, 95.6969, 81.5657, 0.3226 ) }
    dend_5 { pt3dadd( 266.45, 95.4407, 81.6004, 0.3174 ) }
    dend_5 { pt3dadd( 265.36, 95.1262, 81.6488, 0.3498 ) }
    dend_5 { pt3dadd( 264.218, 95.0664, 81.7146, 0.4346 ) }
    dend_5 { pt3dadd( 263.077, 95.1095, 81.8031, 0.4724 ) }
    dend_5 { pt3dadd( 261.949, 95.2703, 81.9381, 0.4346 ) }
    dend_5 { pt3dadd( 260.825, 95.4096, 82.1467, 0.4312 ) }
    dend_5 { pt3dadd( 259.682, 95.4096, 82.3892, 0.5584 ) }
    dend_5 { pt3dadd( 258.542, 95.4096, 82.6641, 0.6038 ) }
    dend_5 { pt3dadd( 257.47, 95.4601, 83.0634, 0.4692 ) }
    dend_5 { pt3dadd( 256.429, 95.6075, 83.5702, 0.3666 ) }
    dend_5 { pt3dadd( 255.296, 95.7186, 84.0549, 0.3766 ) }
    dend_5 { pt3dadd( 254.162, 95.79, 84.5188, 0.3398 ) }
    dend_5 { pt3dadd( 253.061, 95.9069, 85.0108, 0.3106 ) }
    dend_5 { pt3dadd( 251.986, 95.9816, 85.5548, 0.2954 ) }
    dend_5 { pt3dadd( 250.891, 95.7974, 86.0504, 0.3078 ) }
    dend_5 { pt3dadd( 249.763, 95.658, 86.4497, 0.3616 ) }
    dend_5 { pt3dadd( 248.737, 95.3243, 86.8473, 0.3136 ) }
    dend_5 { pt3dadd( 247.784, 94.724, 87.194, 0.2542 ) }
    dend_5 { pt3dadd( 246.645, 94.6088, 87.64, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 34/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 270.403, 96.2867, 81.7664, 0.5758 ) }
    dend_2 { pt3dadd( 270.946, 95.3722, 81.8656, 0.4962 ) }
    dend_2 { pt3dadd( 271.612, 94.5127, 82.0772, 0.4906 ) }
    dend_2 { pt3dadd( 272.089, 93.5274, 82.3376, 0.4772 ) }
    dend_2 { pt3dadd( 272.722, 92.5978, 82.5754, 0.4672 ) }
    dend_2 { pt3dadd( 273.146, 91.5618, 82.7996, 0.3758 ) }
    dend_2 { pt3dadd( 273.505, 90.479, 83.0281, 0.3316 ) }
    dend_2 { pt3dadd( 274.035, 89.474, 83.2656, 0.3278 ) }
    dend_2 { pt3dadd( 274.47, 88.4283, 83.5195, 0.399 ) }
    dend_2 { pt3dadd( 274.763, 87.3762, 83.8586, 0.381 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 44/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 411.253, 322.59, 35.5751, 0.3158 ) }
    dend_41 { pt3dadd( 411.459, 322.49, 36.2706, 0.2288 ) }
    dend_41 { pt3dadd( 412.332, 321.751, 36.2706, 0.2752 ) }
    dend_41 { pt3dadd( 413.206, 321.013, 36.2706, 0.2756 ) }
    dend_41 { pt3dadd( 414.173, 320.426, 36.2706, 0.2766 ) }
    dend_41 { pt3dadd( 415.233, 319.999, 36.2706, 0.2784 ) }
    dend_41 { pt3dadd( 416.319, 319.639, 36.2706, 0.2816 ) }
    dend_41 { pt3dadd( 417.44, 319.47, 36.2706, 0.2874 ) }
    dend_41 { pt3dadd( 418.583, 319.427, 36.2706, 0.2994 ) }
    dend_41 { pt3dadd( 419.723, 319.344, 36.2706, 0.3152 ) }
    dend_41 { pt3dadd( 420.862, 319.234, 36.2706, 0.3756 ) }
    dend_41 { pt3dadd( 421.977, 319.05, 36.2706, 0.3378 ) }
    dend_41 { pt3dadd( 422.964, 318.474, 36.2706, 0.3074 ) }
    dend_41 { pt3dadd( 423.953, 317.897, 36.2706, 0.2882 ) }
    dend_41 { pt3dadd( 424.988, 317.421, 36.2706, 0.2994 ) }
    dend_41 { pt3dadd( 426.062, 317.028, 36.2706, 0.3228 ) }
    dend_41 { pt3dadd( 427.202, 317.102, 36.2706, 0.3536 ) }
    dend_41 { pt3dadd( 428.342, 317.19, 36.2706, 0.4722 ) }
    dend_41 { pt3dadd( 429.483, 317.278, 36.2706, 0.393 ) }
    dend_41 { pt3dadd( 430.624, 317.366, 36.2706, 0.3252 ) }
    dend_41 { pt3dadd( 431.766, 317.347, 36.2706, 0.274 ) }
    dend_41 { pt3dadd( 432.909, 317.285, 36.2706, 0.2736 ) }
    dend_41 { pt3dadd( 434.051, 317.223, 36.2706, 0.2728 ) }
    dend_41 { pt3dadd( 435.192, 317.133, 36.2706, 0.2712 ) }
    dend_41 { pt3dadd( 436.329, 317.007, 36.2706, 0.2684 ) }
    dend_41 { pt3dadd( 437.466, 316.881, 36.2706, 0.2626 ) }
    dend_41 { pt3dadd( 438.561, 316.584, 36.2706, 0.2542 ) }
    dend_41 { pt3dadd( 439.629, 316.175, 36.2706, 0.2288 ) }
    dend_41 { pt3dadd( 440.696, 315.762, 36.2706, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 73/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 411.253, 322.59, 35.5751, 0.3158 ) }
    dend_40 { pt3dadd( 412.139, 323.104, 35.7753, 0.3768 ) }
    dend_40 { pt3dadd( 413.085, 323.723, 36.052, 0.34 ) }
    dend_40 { pt3dadd( 414.028, 324.348, 36.388, 0.3112 ) }
    dend_40 { pt3dadd( 414.969, 324.971, 36.7662, 0.2956 ) }
    dend_40 { pt3dadd( 415.913, 325.595, 37.1703, 0.3132 ) }
    dend_40 { pt3dadd( 416.854, 326.219, 37.5841, 0.3478 ) }
    dend_40 { pt3dadd( 417.797, 326.842, 37.994, 0.402 ) }
    dend_40 { pt3dadd( 418.74, 327.467, 38.3964, 0.5514 ) }
    dend_40 { pt3dadd( 419.66, 328.125, 38.7845, 0.591 ) }
    dend_40 { pt3dadd( 420.531, 328.855, 39.1485, 0.444 ) }
    dend_40 { pt3dadd( 421.397, 329.591, 39.4912, 0.3254 ) }
    dend_40 { pt3dadd( 422.263, 330.327, 39.8163, 0.2746 ) }
    dend_40 { pt3dadd( 423.13, 331.062, 40.1265, 0.2746 ) }
    dend_40 { pt3dadd( 423.996, 331.798, 40.4239, 0.2748 ) }
    dend_40 { pt3dadd( 424.862, 332.533, 40.7109, 0.2748 ) }
    dend_40 { pt3dadd( 425.717, 333.284, 40.9861, 0.2752 ) }
    dend_40 { pt3dadd( 426.44, 334.166, 41.2322, 0.2756 ) }
    dend_40 { pt3dadd( 427.15, 335.059, 41.4537, 0.2766 ) }
    dend_40 { pt3dadd( 427.861, 335.953, 41.6562, 0.2782 ) }
    dend_40 { pt3dadd( 428.572, 336.846, 41.8454, 0.2814 ) }
    dend_40 { pt3dadd( 429.283, 337.74, 42.0263, 0.287 ) }
    dend_40 { pt3dadd( 429.994, 338.632, 42.2041, 0.2988 ) }
    dend_40 { pt3dadd( 430.706, 339.526, 42.3822, 0.3142 ) }
    dend_40 { pt3dadd( 431.416, 340.419, 42.5614, 0.3736 ) }
    dend_40 { pt3dadd( 432.128, 341.312, 42.7417, 0.334 ) }
    dend_40 { pt3dadd( 432.838, 342.206, 42.9237, 0.3002 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_40 { pt3dadd( 433.593, 343.062, 43.1099, 0.2752 ) }
    dend_40 { pt3dadd( 434.387, 343.881, 43.3012, 0.2756 ) }
    dend_40 { pt3dadd( 435.184, 344.698, 43.4963, 0.2766 ) }
    dend_40 { pt3dadd( 435.98, 345.514, 43.6926, 0.2782 ) }
    dend_40 { pt3dadd( 436.776, 346.331, 43.8883, 0.2814 ) }
    dend_40 { pt3dadd( 437.573, 347.148, 44.0801, 0.287 ) }
    dend_40 { pt3dadd( 438.37, 347.965, 44.2658, 0.2988 ) }
    dend_40 { pt3dadd( 439.167, 348.78, 44.4427, 0.3142 ) }
    dend_40 { pt3dadd( 439.963, 349.597, 44.6104, 0.3734 ) }
    dend_40 { pt3dadd( 440.55, 350.575, 44.7485, 0.334 ) }
    dend_40 { pt3dadd( 441.037, 351.611, 44.8563, 0.3 ) }
    dend_40 { pt3dadd( 441.519, 352.648, 44.9445, 0.2746 ) }
    dend_40 { pt3dadd( 442.001, 353.686, 45.0248, 0.2748 ) }
    dend_40 { pt3dadd( 442.482, 354.724, 45.1074, 0.275 ) }
    dend_40 { pt3dadd( 442.947, 355.766, 45.2273, 0.2754 ) }
    dend_40 { pt3dadd( 443.405, 356.809, 45.3953, 0.2762 ) }
    dend_40 { pt3dadd( 443.863, 357.851, 45.6022, 0.2776 ) }
    dend_40 { pt3dadd( 444.319, 358.895, 45.8382, 0.2802 ) }
    dend_40 { pt3dadd( 444.777, 359.937, 46.0928, 0.285 ) }
    dend_40 { pt3dadd( 445.233, 360.98, 46.3571, 0.2938 ) }
    dend_40 { pt3dadd( 445.691, 362.023, 46.6228, 0.3112 ) }
    dend_40 { pt3dadd( 446.149, 363.066, 46.8874, 0.3382 ) }
    dend_40 { pt3dadd( 446.605, 364.109, 47.1498, 0.413 ) }
    dend_40 { pt3dadd( 447.063, 365.151, 47.4099, 0.4328 ) }
    dend_40 { pt3dadd( 447.492, 366.207, 47.6655, 0.3594 ) }
    dend_40 { pt3dadd( 447.883, 367.277, 47.9144, 0.3 ) }
    dend_40 { pt3dadd( 448.271, 368.349, 48.1572, 0.2746 ) }
    dend_40 { pt3dadd( 448.659, 369.421, 48.393, 0.2746 ) }
    dend_40 { pt3dadd( 449.048, 370.491, 48.6209, 0.2746 ) }
    dend_40 { pt3dadd( 449.435, 371.563, 48.8398, 0.2746 ) }
    dend_40 { pt3dadd( 449.824, 372.634, 49.0493, 0.2746 ) }
    dend_40 { pt3dadd( 450.212, 373.706, 49.2495, 0.2746 ) }
    dend_40 { pt3dadd( 450.659, 374.757, 49.4105, 0.2746 ) }
    dend_40 { pt3dadd( 451.117, 375.806, 49.5396, 0.2746 ) }
    dend_40 { pt3dadd( 451.575, 376.855, 49.6535, 0.2746 ) }
    dend_40 { pt3dadd( 452.032, 377.903, 49.77, 0.2746 ) }
    dend_40 { pt3dadd( 452.49, 378.952, 49.9064, 0.2746 ) }
    dend_40 { pt3dadd( 452.947, 380.0, 50.0791, 0.2746 ) }
    dend_40 { pt3dadd( 453.405, 381.049, 50.3023, 0.2746 ) }
    dend_40 { pt3dadd( 454.214, 381.784, 50.6884, 0.2746 ) }
    dend_40 { pt3dadd( 455.05, 382.491, 51.2131, 0.2746 ) }
    dend_40 { pt3dadd( 455.886, 383.198, 51.8403, 0.2746 ) }
    dend_40 { pt3dadd( 456.723, 383.905, 52.5361, 0.2746 ) }
    dend_40 { pt3dadd( 457.56, 384.612, 53.2675, 0.2746 ) }
    dend_40 { pt3dadd( 458.396, 385.319, 54.0042, 0.2746 ) }
    dend_40 { pt3dadd( 459.233, 386.026, 54.719, 0.2746 ) }
    dend_40 { pt3dadd( 460.033, 386.798, 55.384, 0.2744 ) }
    dend_40 { pt3dadd( 460.798, 387.621, 55.9835, 0.2744 ) }
    dend_40 { pt3dadd( 461.559, 388.45, 56.527, 0.2742 ) }
    dend_40 { pt3dadd( 461.551, 389.562, 57.0119, 0.274 ) }
    dend_40 { pt3dadd( 461.328, 390.674, 57.4442, 0.2736 ) }
    dend_40 { pt3dadd( 461.104, 391.784, 57.8388, 0.2728 ) }
    dend_40 { pt3dadd( 460.881, 392.897, 58.2156, 0.2712 ) }
    dend_40 { pt3dadd( 460.657, 394.009, 58.5749, 0.2684 ) }
    dend_40 { pt3dadd( 460.434, 395.12, 58.9145, 0.2626 ) }
    dend_40 { pt3dadd( 460.21, 396.232, 59.2323, 0.2542 ) }
    dend_40 { pt3dadd( 459.986, 397.344, 59.5255, 0.2288 ) }
    dend_40 { pt3dadd( 459.762, 398.456, 60.0956, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 356.012, 378.88, 38.5042, 0.2746 ) }
    dend_36 { pt3dadd( 355.931, 378.967, 38.876, 0.2288 ) }
    dend_36 { pt3dadd( 355.425, 379.728, 41.2202, 0.2746 ) }
    dend_36 { pt3dadd( 354.911, 380.512, 42.2201, 0.2746 ) }
    dend_36 { pt3dadd( 354.398, 381.294, 43.3913, 0.2746 ) }
    dend_36 { pt3dadd( 353.884, 382.078, 44.6642, 0.2746 ) }
    dend_36 { pt3dadd( 353.36, 382.96, 45.9228, 0.2746 ) }
    dend_36 { pt3dadd( 352.837, 383.918, 47.0725, 0.2746 ) }
    dend_36 { pt3dadd( 352.314, 384.88, 48.0992, 0.2746 ) }
    dend_36 { pt3dadd( 351.768, 385.829, 49.0386, 0.2746 ) }
    dend_36 { pt3dadd( 351.008, 386.609, 49.9257, 0.2746 ) }
    dend_36 { pt3dadd( 350.237, 387.38, 50.7864, 0.2746 ) }
    dend_36 { pt3dadd( 349.466, 388.151, 51.6429, 0.2746 ) }
    dend_36 { pt3dadd( 348.696, 388.922, 52.505, 0.2746 ) }
    dend_36 { pt3dadd( 348.226, 389.882, 53.3887, 0.2746 ) }
    dend_36 { pt3dadd( 347.889, 390.896, 54.2856, 0.2746 ) }
    dend_36 { pt3dadd( 347.556, 391.909, 55.1818, 0.2746 ) }
    dend_36 { pt3dadd( 347.224, 392.924, 56.065, 0.2746 ) }
    dend_36 { pt3dadd( 346.891, 393.939, 56.9226, 0.2746 ) }
    dend_36 { pt3dadd( 346.549, 394.969, 57.7265, 0.2746 ) }
    dend_36 { pt3dadd( 346.181, 396.038, 58.4091, 0.2746 ) }
    dend_36 { pt3dadd( 345.814, 397.108, 58.9926, 0.2746 ) }
    dend_36 { pt3dadd( 345.446, 398.177, 59.5006, 0.2746 ) }
    dend_36 { pt3dadd( 345.08, 399.248, 59.9542, 0.2746 ) }
    dend_36 { pt3dadd( 344.713, 400.318, 60.3725, 0.2746 ) }
    dend_36 { pt3dadd( 344.448, 401.417, 60.7737, 0.2746 ) }
    dend_36 { pt3dadd( 344.237, 402.527, 61.1682, 0.2746 ) }
    dend_36 { pt3dadd( 344.027, 403.638, 61.5527, 0.2746 ) }
    dend_36 { pt3dadd( 343.817, 404.747, 61.9242, 0.2746 ) }
    dend_36 { pt3dadd( 343.521, 405.844, 62.2653, 0.2746 ) }
    dend_36 { pt3dadd( 343.113, 406.909, 62.5584, 0.2746 ) }
    dend_36 { pt3dadd( 342.702, 407.974, 62.8135, 0.2746 ) }
    dend_36 { pt3dadd( 342.293, 409.039, 63.0395, 0.2746 ) }
    dend_36 { pt3dadd( 341.882, 410.105, 63.2453, 0.2746 ) }
    dend_36 { pt3dadd( 341.473, 411.17, 63.439, 0.2746 ) }
    dend_36 { pt3dadd( 341.062, 412.235, 63.6275, 0.2746 ) }
    dend_36 { pt3dadd( 340.653, 413.3, 63.8145, 0.2746 ) }
    dend_36 { pt3dadd( 340.242, 414.365, 63.999, 0.2746 ) }
    dend_36 { pt3dadd( 339.832, 415.43, 64.1802, 0.2746 ) }
    dend_36 { pt3dadd( 339.421, 416.495, 64.3572, 0.2746 ) }
    dend_36 { pt3dadd( 339.012, 417.56, 64.5277, 0.2746 ) }
    dend_36 { pt3dadd( 338.601, 418.625, 64.6895, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_36 { pt3dadd( 338.192, 419.69, 64.8385, 0.2746 ) }
    dend_36 { pt3dadd( 337.781, 420.755, 64.9698, 0.2746 ) }
    dend_36 { pt3dadd( 337.371, 421.82, 65.0793, 0.2746 ) }
    dend_36 { pt3dadd( 336.961, 422.885, 65.1622, 0.2746 ) }
    dend_36 { pt3dadd( 336.501, 423.933, 65.1795, 0.2746 ) }
    dend_36 { pt3dadd( 336.015, 424.964, 65.1182, 0.2746 ) }
    dend_36 { pt3dadd( 335.526, 425.995, 64.9961, 0.2746 ) }
    dend_36 { pt3dadd( 335.037, 427.026, 64.8298, 0.2744 ) }
    dend_36 { pt3dadd( 334.549, 428.056, 64.6344, 0.2744 ) }
    dend_36 { pt3dadd( 334.061, 429.087, 64.4244, 0.2742 ) }
    dend_36 { pt3dadd( 333.572, 430.118, 64.2127, 0.274 ) }
    dend_36 { pt3dadd( 333.085, 431.148, 64.0044, 0.2736 ) }
    dend_36 { pt3dadd( 332.596, 432.179, 63.8016, 0.2728 ) }
    dend_36 { pt3dadd( 332.108, 433.209, 63.6059, 0.2712 ) }
    dend_36 { pt3dadd( 331.621, 434.241, 63.4203, 0.2684 ) }
    dend_36 { pt3dadd( 331.132, 435.27, 63.2481, 0.2626 ) }
    dend_36 { pt3dadd( 330.597, 436.278, 63.0941, 0.2542 ) }
    dend_36 { pt3dadd( 329.628, 436.887, 62.9877, 0.2288 ) }
    dend_36 { pt3dadd( 328.659, 437.494, 62.8692, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 19/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 356.012, 378.88, 38.5042, 0.2746 ) }
    dend_35 { pt3dadd( 355.804, 379.286, 38.8167, 0.2746 ) }
    dend_35 { pt3dadd( 355.669, 380.322, 39.139, 0.2746 ) }
    dend_35 { pt3dadd( 355.569, 381.46, 39.3775, 0.2746 ) }
    dend_35 { pt3dadd( 355.365, 382.585, 39.5402, 0.2746 ) }
    dend_35 { pt3dadd( 355.021, 383.672, 39.6351, 0.2746 ) }
    dend_35 { pt3dadd( 354.477, 384.669, 39.6519, 0.2746 ) }
    dend_35 { pt3dadd( 353.878, 385.641, 39.6278, 0.2746 ) }
    dend_35 { pt3dadd( 353.47, 386.704, 39.6057, 0.2746 ) }
    dend_35 { pt3dadd( 352.972, 387.729, 39.6015, 0.2746 ) }
    dend_35 { pt3dadd( 352.501, 388.771, 39.6164, 0.2746 ) }
    dend_35 { pt3dadd( 352.035, 389.816, 39.6533, 0.2746 ) }
    dend_35 { pt3dadd( 351.401, 390.762, 39.7247, 0.2746 ) }
    dend_35 { pt3dadd( 350.94, 391.799, 39.8356, 0.2746 ) }
    dend_35 { pt3dadd( 350.445, 392.829, 39.9554, 0.2746 ) }
    dend_35 { pt3dadd( 349.751, 393.735, 40.0828, 0.2746 ) }
    dend_35 { pt3dadd( 348.964, 394.418, 40.3581, 0.2746 ) }
    dend_35 { pt3dadd( 348.225, 395.282, 40.6022, 0.2746 ) }
    dend_35 { pt3dadd( 347.742, 396.312, 40.7812, 0.2746 ) }
    dend_35 { pt3dadd( 346.975, 397.159, 40.9044, 0.2746 ) }
    dend_35 { pt3dadd( 346.273, 398.004, 40.9049, 0.2746 ) }
    dend_35 { pt3dadd( 345.827, 398.895, 40.7691, 0.2746 ) }
    dend_35 { pt3dadd( 345.593, 399.96, 40.7506, 0.2746 ) }
    dend_35 { pt3dadd( 345.167, 400.842, 40.9979, 0.2746 ) }
    dend_35 { pt3dadd( 344.67, 401.723, 41.417, 0.2746 ) }
    dend_35 { pt3dadd( 344.303, 402.761, 41.8099, 0.2746 ) }
    dend_35 { pt3dadd( 344.019, 403.867, 42.0801, 0.2748 ) }
    dend_35 { pt3dadd( 343.734, 404.974, 42.2215, 0.2748 ) }
    dend_35 { pt3dadd( 343.45, 406.08, 42.222, 0.2752 ) }
    dend_35 { pt3dadd( 343.165, 407.186, 42.107, 0.2756 ) }
    dend_35 { pt3dadd( 342.88, 408.291, 41.9241, 0.2766 ) }
    dend_35 { pt3dadd( 342.595, 409.398, 41.7119, 0.2782 ) }
    dend_35 { pt3dadd( 342.31, 410.504, 41.4814, 0.2814 ) }
    dend_35 { pt3dadd( 341.91, 411.564, 41.2166, 0.287 ) }
    dend_35 { pt3dadd( 341.338, 412.538, 40.899, 0.2988 ) }
    dend_35 { pt3dadd( 340.706, 413.475, 40.5311, 0.3142 ) }
    dend_35 { pt3dadd( 340.17, 414.463, 40.1215, 0.3734 ) }
    dend_35 { pt3dadd( 339.837, 415.533, 39.6788, 0.334 ) }
    dend_35 { pt3dadd( 339.597, 416.633, 39.2132, 0.3 ) }
    dend_35 { pt3dadd( 339.356, 417.734, 38.7358, 0.2746 ) }
    dend_35 { pt3dadd( 339.115, 418.833, 38.2556, 0.2748 ) }
    dend_35 { pt3dadd( 338.875, 419.934, 37.7773, 0.2748 ) }
    dend_35 { pt3dadd( 338.617, 421.026, 37.3002, 0.2752 ) }
    dend_35 { pt3dadd( 338.343, 422.112, 36.825, 0.2758 ) }
    dend_35 { pt3dadd( 338.066, 423.197, 36.3588, 0.2766 ) }
    dend_35 { pt3dadd( 337.789, 424.29, 35.9276, 0.2786 ) }
    dend_35 { pt3dadd( 337.515, 425.394, 35.5555, 0.2818 ) }
    dend_35 { pt3dadd( 337.241, 426.501, 35.2428, 0.2882 ) }
    dend_35 { pt3dadd( 336.968, 427.608, 34.9798, 0.2996 ) }
    dend_35 { pt3dadd( 336.694, 428.714, 34.757, 0.323 ) }
    dend_35 { pt3dadd( 336.42, 429.821, 34.5646, 0.3538 ) }
    dend_35 { pt3dadd( 336.025, 430.888, 34.4056, 0.4726 ) }
    dend_35 { pt3dadd( 335.483, 431.893, 34.2854, 0.3938 ) }
    dend_35 { pt3dadd( 334.9, 432.878, 34.1981, 0.3264 ) }
    dend_35 { pt3dadd( 334.319, 433.863, 34.1331, 0.2766 ) }
    dend_35 { pt3dadd( 333.758, 434.858, 34.0726, 0.2782 ) }
    dend_35 { pt3dadd( 333.214, 435.864, 34.0029, 0.2814 ) }
    dend_35 { pt3dadd( 332.675, 436.872, 33.9226, 0.287 ) }
    dend_35 { pt3dadd( 332.138, 437.88, 33.8358, 0.2988 ) }
    dend_35 { pt3dadd( 331.599, 438.888, 33.7512, 0.3142 ) }
    dend_35 { pt3dadd( 331.06, 439.894, 33.6787, 0.3734 ) }
    dend_35 { pt3dadd( 330.448, 440.858, 33.6305, 0.3338 ) }
    dend_35 { pt3dadd( 329.652, 441.665, 33.6232, 0.3 ) }
    dend_35 { pt3dadd( 328.794, 442.42, 33.67, 0.2746 ) }
    dend_35 { pt3dadd( 328.008, 443.242, 33.7893, 0.2746 ) }
    dend_35 { pt3dadd( 327.257, 444.094, 33.9752, 0.2746 ) }
    dend_35 { pt3dadd( 326.506, 444.945, 34.2059, 0.2746 ) }
    dend_35 { pt3dadd( 325.755, 445.797, 34.4607, 0.2748 ) }
    dend_35 { pt3dadd( 325.005, 446.648, 34.7222, 0.275 ) }
    dend_35 { pt3dadd( 324.106, 447.329, 34.9504, 0.2754 ) }
    dend_35 { pt3dadd( 323.109, 447.89, 35.1285, 0.276 ) }
    dend_35 { pt3dadd( 322.107, 448.441, 35.2702, 0.2772 ) }
    dend_35 { pt3dadd( 321.105, 448.994, 35.3923, 0.2794 ) }
    dend_35 { pt3dadd( 320.347, 449.804, 35.5272, 0.2838 ) }
    dend_35 { pt3dadd( 320.23, 450.898, 35.7095, 0.2914 ) }
    dend_35 { pt3dadd( 320.258, 452.031, 35.9383, 0.3068 ) }
    dend_35 { pt3dadd( 320.287, 453.165, 36.1998, 0.3292 ) }
    dend_35 { pt3dadd( 320.316, 454.298, 36.4781, 0.401 ) }
    dend_35 { pt3dadd( 320.341, 455.438, 36.7402, 0.3872 ) }
    dend_35 { pt3dadd( 320.36, 456.581, 36.9572, 0.3884 ) }
    dend_35 { pt3dadd( 320.139, 457.696, 37.1342, 0.4896 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_35 { pt3dadd( 319.43, 458.57, 37.2932, 0.4262 ) }
    dend_35 { pt3dadd( 318.644, 459.401, 37.4422, 0.3814 ) }
    dend_35 { pt3dadd( 317.699, 459.978, 37.6692, 0.404 ) }
    dend_35 { pt3dadd( 316.716, 460.483, 37.9753, 0.3898 ) }
    dend_35 { pt3dadd( 315.614, 460.58, 38.3046, 0.4068 ) }
    dend_35 { pt3dadd( 314.698, 459.893, 38.831, 0.4576 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 6/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 303.741, 253.195, 17.6171, 0.3998 ) }
    dend_29 { pt3dadd( 303.107, 253.447, 17.7946, 0.4006 ) }
    dend_29 { pt3dadd( 302.26, 254.18, 18.0095, 0.3372 ) }
    dend_29 { pt3dadd( 301.772, 255.21, 18.1667, 0.306 ) }
    dend_29 { pt3dadd( 301.281, 256.204, 18.2082, 0.2858 ) }
    dend_29 { pt3dadd( 300.431, 256.953, 18.2465, 0.295 ) }
    dend_29 { pt3dadd( 299.623, 257.684, 18.3842, 0.3134 ) }
    dend_29 { pt3dadd( 298.864, 258.511, 18.528, 0.3426 ) }
    dend_29 { pt3dadd( 298.236, 259.463, 18.5975, 0.4208 ) }
    dend_29 { pt3dadd( 297.542, 260.348, 18.5563, 0.4472 ) }
    dend_29 { pt3dadd( 296.71, 261.11, 18.4472, 0.3872 ) }
    dend_29 { pt3dadd( 295.848, 261.784, 18.2052, 0.3464 ) }
    dend_29 { pt3dadd( 294.852, 262.308, 17.9519, 0.386 ) }
    dend_29 { pt3dadd( 293.772, 262.653, 17.6994, 0.3582 ) }
    dend_29 { pt3dadd( 292.975, 263.362, 17.4908, 0.3398 ) }
    dend_29 { pt3dadd( 292.308, 264.172, 17.29, 0.3742 ) }
    dend_29 { pt3dadd( 291.301, 264.655, 17.0379, 0.3352 ) }
    dend_29 { pt3dadd( 290.672, 265.483, 16.7907, 0.3024 ) }
    dend_29 { pt3dadd( 290.226, 266.53, 16.5868, 0.2788 ) }
    dend_29 { pt3dadd( 289.64, 267.511, 16.4069, 0.2826 ) }
    dend_29 { pt3dadd( 288.949, 268.418, 16.2321, 0.2892 ) }
    dend_29 { pt3dadd( 288.017, 269.023, 16.0747, 0.3028 ) }
    dend_29 { pt3dadd( 287.462, 269.868, 15.9378, 0.3218 ) }
    dend_29 { pt3dadd( 287.484, 270.962, 15.7288, 0.3876 ) }
    dend_29 { pt3dadd( 287.657, 272.069, 15.4671, 0.36 ) }
    dend_29 { pt3dadd( 287.633, 273.202, 15.2229, 0.349 ) }
    dend_29 { pt3dadd( 287.293, 274.281, 14.9948, 0.3624 ) }
    dend_29 { pt3dadd( 287.146, 275.395, 14.7965, 0.4526 ) }
    dend_29 { pt3dadd( 287.143, 276.539, 14.6229, 0.5318 ) }
    dend_29 { pt3dadd( 287.143, 277.668, 14.4271, 0.419 ) }
    dend_29 { pt3dadd( 287.011, 278.793, 14.2253, 0.326 ) }
    dend_29 { pt3dadd( 286.512, 279.799, 14.0503, 0.2756 ) }
    dend_29 { pt3dadd( 285.755, 280.644, 13.8748, 0.2766 ) }
    dend_29 { pt3dadd( 285.275, 281.66, 13.7201, 0.2782 ) }
    dend_29 { pt3dadd( 284.988, 282.765, 13.5911, 0.2814 ) }
    dend_29 { pt3dadd( 284.489, 283.782, 13.4481, 0.287 ) }
    dend_29 { pt3dadd( 284.063, 284.841, 13.313, 0.2988 ) }
    dend_29 { pt3dadd( 283.348, 285.717, 13.1848, 0.3142 ) }
    dend_29 { pt3dadd( 282.443, 286.352, 12.9721, 0.3734 ) }
    dend_29 { pt3dadd( 281.676, 287.184, 12.7537, 0.3338 ) }
    dend_29 { pt3dadd( 281.218, 288.227, 12.563, 0.3 ) }
    dend_29 { pt3dadd( 280.744, 289.263, 12.3643, 0.2746 ) }
    dend_29 { pt3dadd( 280.737, 290.402, 12.1712, 0.2746 ) }
    dend_29 { pt3dadd( 280.546, 291.529, 11.9953, 0.2746 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 50/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 303.741, 253.195, 17.6171, 0.3998 ) }
    dend_28 { pt3dadd( 303.138, 253.182, 17.4616, 0.2288 ) }
    dend_28 { pt3dadd( 302.02, 253.165, 17.0873, 0.2836 ) }
    dend_28 { pt3dadd( 301.032, 253.149, 16.851, 0.2916 ) }
    dend_28 { pt3dadd( 300.067, 252.999, 16.5791, 0.3056 ) }
    dend_28 { pt3dadd( 299.01, 252.776, 16.5515, 0.3342 ) }
    dend_28 { pt3dadd( 298.152, 252.682, 16.9115, 0.3746 ) }
    dend_28 { pt3dadd( 297.402, 252.554, 17.6034, 0.511 ) }
    dend_28 { pt3dadd( 296.499, 252.315, 18.4331, 0.4656 ) }
    dend_28 { pt3dadd( 295.428, 252.079, 19.1719, 0.4562 ) }
    dend_28 { pt3dadd( 294.356, 251.869, 19.6009, 0.5338 ) }
    dend_28 { pt3dadd( 293.253, 251.793, 19.7469, 0.674 ) }
    dend_28 { pt3dadd( 292.115, 251.79, 19.7126, 0.723 ) }
    dend_28 { pt3dadd( 290.974, 251.76, 19.5832, 0.6948 ) }
    dend_28 { pt3dadd( 289.846, 251.622, 19.4757, 0.532 ) }
    dend_28 { pt3dadd( 288.73, 251.392, 19.4254, 0.5394 ) }
    dend_28 { pt3dadd( 287.619, 251.134, 19.4293, 0.4244 ) }
    dend_28 { pt3dadd( 286.571, 250.696, 19.4435, 0.3778 ) }
    dend_28 { pt3dadd( 285.587, 250.168, 19.3637, 0.3982 ) }
    dend_28 { pt3dadd( 284.595, 249.646, 19.1996, 0.3746 ) }
    dend_28 { pt3dadd( 283.662, 249.001, 19.0409, 0.401 ) }
    dend_28 { pt3dadd( 282.709, 248.368, 18.914, 0.338 ) }
    dend_28 { pt3dadd( 281.624, 248.051, 18.8195, 0.3076 ) }
    dend_28 { pt3dadd( 280.549, 247.673, 18.7583, 0.2884 ) }
    dend_28 { pt3dadd( 279.496, 247.226, 18.7289, 0.3012 ) }
    dend_28 { pt3dadd( 278.437, 246.793, 18.7154, 0.3188 ) }
    dend_28 { pt3dadd( 277.313, 246.675, 18.7016, 0.382 ) }
    dend_28 { pt3dadd( 276.205, 246.919, 18.6735, 0.3498 ) }
    dend_28 { pt3dadd( 275.074, 246.99, 18.6191, 0.329 ) }
    dend_28 { pt3dadd( 273.942, 246.868, 18.5937, 0.3306 ) }
    dend_28 { pt3dadd( 272.874, 246.482, 18.5694, 0.3682 ) }
    dend_28 { pt3dadd( 271.929, 245.848, 18.5349, 0.499 ) }
    dend_28 { pt3dadd( 270.824, 245.731, 18.4796, 0.4434 ) }
    dend_28 { pt3dadd( 269.732, 245.574, 18.3239, 0.4142 ) }
    dend_28 { pt3dadd( 268.701, 245.102, 18.1857, 0.4604 ) }
    dend_28 { pt3dadd( 267.681, 244.583, 18.0753, 0.517 ) }
    dend_28 { pt3dadd( 266.658, 244.07, 17.9956, 0.5338 ) }
    dend_28 { pt3dadd( 265.574, 243.705, 17.9455, 0.5338 ) }
    dend_28 { pt3dadd( 264.949, 242.757, 17.92, 0.4576 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 324.97, 288.472, 17.3022, 0.2746 ) }
    dend_26 { pt3dadd( 325.064, 289.298, 17.1882, 0.2746 ) }
    dend_26 { pt3dadd( 325.176, 290.434, 17.0304, 0.2746 ) }
    dend_26 { pt3dadd( 325.421, 291.529, 16.8265, 0.2748 ) }
    dend_26 { pt3dadd( 325.877, 292.568, 16.5749, 0.2748 ) }
    dend_26 { pt3dadd( 326.335, 293.603, 16.2934, 0.2752 ) }
    dend_26 { pt3dadd( 326.796, 294.638, 15.9988, 0.2758 ) }
    dend_26 { pt3dadd( 327.269, 295.67, 15.7097, 0.2768 ) }
    dend_26 { pt3dadd( 327.817, 296.667, 15.4591, 0.2786 ) }
    dend_26 { pt3dadd( 328.441, 297.625, 15.2691, 0.282 ) }
    dend_26 { pt3dadd( 329.115, 298.546, 15.1159, 0.288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_26 { pt3dadd( 329.866, 299.405, 14.972, 0.3008 ) }
    dend_26 { pt3dadd( 330.633, 300.249, 14.8288, 0.3178 ) }
    dend_26 { pt3dadd( 331.402, 301.093, 14.6837, 0.3802 ) }
    dend_26 { pt3dadd( 332.222, 301.881, 14.5392, 0.3464 ) }
    dend_26 { pt3dadd( 333.183, 302.483, 14.4108, 0.3242 ) }
    dend_26 { pt3dadd( 334.228, 302.948, 14.3087, 0.3144 ) }
    dend_26 { pt3dadd( 335.271, 303.417, 14.2267, 0.3738 ) }
    dend_26 { pt3dadd( 336.274, 303.958, 14.1446, 0.3346 ) }
    dend_26 { pt3dadd( 337.233, 304.579, 14.0465, 0.3014 ) }
    dend_26 { pt3dadd( 338.192, 305.198, 13.9364, 0.2772 ) }
    dend_26 { pt3dadd( 339.15, 305.816, 13.8198, 0.2796 ) }
    dend_26 { pt3dadd( 340.1, 306.45, 13.7082, 0.2838 ) }
    dend_26 { pt3dadd( 341.013, 307.137, 13.6234, 0.2916 ) }
    dend_26 { pt3dadd( 341.894, 307.868, 13.5791, 0.3072 ) }
    dend_26 { pt3dadd( 342.773, 308.597, 13.5712, 0.3296 ) }
    dend_26 { pt3dadd( 343.694, 309.271, 13.6037, 0.4032 ) }
    dend_26 { pt3dadd( 344.66, 309.88, 13.678, 0.3838 ) }
    dend_26 { pt3dadd( 345.627, 310.49, 13.7793, 0.4182 ) }
    dend_26 { pt3dadd( 346.592, 311.099, 13.894, 0.3692 ) }
    dend_26 { pt3dadd( 347.558, 311.708, 14.0119, 0.3676 ) }
    dend_26 { pt3dadd( 348.545, 312.281, 14.1216, 0.3902 ) }
    dend_26 { pt3dadd( 349.584, 312.755, 14.2067, 0.536 ) }
    dend_26 { pt3dadd( 350.653, 313.162, 14.2613, 0.5316 ) }
    dend_26 { pt3dadd( 351.707, 313.606, 14.2919, 0.4836 ) }
    dend_26 { pt3dadd( 352.727, 314.122, 14.3045, 0.3594 ) }
    dend_26 { pt3dadd( 353.731, 314.672, 14.3044, 0.3 ) }
    dend_26 { pt3dadd( 354.734, 315.221, 14.2962, 0.2748 ) }
    dend_26 { pt3dadd( 355.773, 315.69, 14.2826, 0.2748 ) }
    dend_26 { pt3dadd( 356.849, 316.077, 14.2633, 0.2752 ) }
    dend_26 { pt3dadd( 357.777, 316.691, 14.2365, 0.2758 ) }
    dend_26 { pt3dadd( 358.553, 317.532, 14.2002, 0.2766 ) }
    dend_26 { pt3dadd( 359.3, 318.398, 14.1506, 0.2786 ) }
    dend_26 { pt3dadd( 360.224, 319.01, 14.0721, 0.2818 ) }
    dend_26 { pt3dadd( 361.278, 319.452, 13.9624, 0.2882 ) }
    dend_26 { pt3dadd( 362.33, 319.893, 13.8293, 0.2994 ) }
    dend_26 { pt3dadd( 363.383, 320.335, 13.6805, 0.3228 ) }
    dend_26 { pt3dadd( 364.436, 320.776, 13.5231, 0.3536 ) }
    dend_26 { pt3dadd( 365.506, 321.175, 13.3666, 0.4722 ) }
    dend_26 { pt3dadd( 366.586, 321.546, 13.2175, 0.3932 ) }
    dend_26 { pt3dadd( 367.667, 321.918, 13.0767, 0.3254 ) }
    dend_26 { pt3dadd( 368.747, 322.29, 12.9438, 0.2746 ) }
    dend_26 { pt3dadd( 369.827, 322.662, 12.8191, 0.2746 ) }
    dend_26 { pt3dadd( 370.908, 323.032, 12.7039, 0.2746 ) }
    dend_26 { pt3dadd( 371.988, 323.404, 12.6006, 0.2746 ) }
    dend_26 { pt3dadd( 373.069, 323.775, 12.5125, 0.2746 ) }
    dend_26 { pt3dadd( 374.149, 324.147, 12.4433, 0.2746 ) }
    dend_26 { pt3dadd( 375.232, 324.513, 12.4036, 0.2746 ) }
    dend_26 { pt3dadd( 376.319, 324.864, 12.4202, 0.2746 ) }
    dend_26 { pt3dadd( 377.408, 325.206, 12.497, 0.2746 ) }
    dend_26 { pt3dadd( 378.497, 325.548, 12.6198, 0.2746 ) }
    dend_26 { pt3dadd( 379.585, 325.89, 12.7751, 0.2748 ) }
    dend_26 { pt3dadd( 380.674, 326.232, 12.9507, 0.2748 ) }
    dend_26 { pt3dadd( 381.763, 326.574, 13.1369, 0.275 ) }
    dend_26 { pt3dadd( 382.844, 326.94, 13.3269, 0.2754 ) }
    dend_26 { pt3dadd( 383.772, 327.571, 13.5054, 0.2762 ) }
    dend_26 { pt3dadd( 384.611, 328.347, 13.6727, 0.2776 ) }
    dend_26 { pt3dadd( 385.447, 329.129, 13.8442, 0.2804 ) }
    dend_26 { pt3dadd( 386.229, 329.944, 14.0731, 0.2854 ) }
    dend_26 { pt3dadd( 386.983, 330.778, 14.3751, 0.2944 ) }
    dend_26 { pt3dadd( 387.736, 331.612, 14.7333, 0.312 ) }
    dend_26 { pt3dadd( 388.489, 332.446, 15.1329, 0.3398 ) }
    dend_26 { pt3dadd( 389.467, 332.921, 15.5254, 0.416 ) }
    dend_26 { pt3dadd( 390.601, 332.967, 15.8654, 0.4384 ) }
    dend_26 { pt3dadd( 391.703, 333.19, 16.187, 0.3696 ) }
    dend_26 { pt3dadd( 392.584, 333.837, 16.5504, 0.3192 ) }
    dend_26 { pt3dadd( 393.411, 334.569, 16.9563, 0.3098 ) }
    dend_26 { pt3dadd( 393.617, 335.626, 17.3145, 0.342 ) }
    dend_26 { pt3dadd( 393.617, 336.77, 17.6158, 0.39 ) }
    dend_26 { pt3dadd( 393.999, 337.83, 17.8787, 0.5344 ) }
    dend_26 { pt3dadd( 394.998, 338.368, 18.1208, 0.5348 ) }
    dend_26 { pt3dadd( 396.052, 338.767, 18.4231, 0.4598 ) }
    dend_26 { pt3dadd( 397.108, 339.162, 18.7908, 0.4594 ) }
    dend_26 { pt3dadd( 398.164, 339.555, 19.2233, 0.4724 ) }
    dend_26 { pt3dadd( 399.199, 339.981, 19.7183, 0.4286 ) }
    dend_26 { pt3dadd( 400.119, 340.526, 20.3074, 0.449 ) }
    dend_26 { pt3dadd( 401.035, 341.077, 20.949, 0.4522 ) }
    dend_26 { pt3dadd( 401.398, 342.138, 21.5171, 0.396 ) }
    dend_26 { pt3dadd( 401.652, 343.247, 21.9994, 0.364 ) }
    dend_26 { pt3dadd( 401.906, 344.357, 22.4071, 0.4136 ) }
    dend_26 { pt3dadd( 402.161, 345.466, 22.7517, 0.4338 ) }
    dend_26 { pt3dadd( 402.415, 346.576, 23.0466, 0.3614 ) }
    dend_26 { pt3dadd( 402.538, 347.708, 23.3087, 0.3038 ) }
    dend_26 { pt3dadd( 402.654, 348.842, 23.5596, 0.2818 ) }
    dend_26 { pt3dadd( 402.769, 349.977, 23.8039, 0.2878 ) }
    dend_26 { pt3dadd( 402.885, 351.111, 24.0427, 0.3 ) }
    dend_26 { pt3dadd( 403.0, 352.245, 24.2768, 0.3166 ) }
    dend_26 { pt3dadd( 403.072, 353.382, 24.5061, 0.378 ) }
    dend_26 { pt3dadd( 402.952, 354.515, 24.7332, 0.3422 ) }
    dend_26 { pt3dadd( 402.833, 355.65, 24.9535, 0.3164 ) }
    dend_26 { pt3dadd( 402.713, 356.784, 25.1631, 0.2994 ) }
    dend_26 { pt3dadd( 402.594, 357.918, 25.3588, 0.3474 ) }
    dend_26 { pt3dadd( 402.474, 359.052, 25.5385, 0.2796 ) }
    dend_26 { pt3dadd( 402.355, 360.186, 25.8874, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 324.97, 288.472, 17.3022, 0.2746 ) }
    dend_25 { pt3dadd( 323.966, 288.868, 16.3528, 0.3142 ) }
    dend_25 { pt3dadd( 322.951, 289.13, 15.5754, 0.3736 ) }
    dend_25 { pt3dadd( 323.209, 290.038, 15.2379, 0.334 ) }
    dend_25 { pt3dadd( 324.007, 290.527, 14.7133, 0.3004 ) }
    dend_25 { pt3dadd( 324.856, 291.227, 14.2082, 0.2752 ) }
    dend_25 { pt3dadd( 325.67, 292.029, 13.8058, 0.2758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_25 { pt3dadd( 326.478, 292.838, 13.5027, 0.2768 ) }
    dend_25 { pt3dadd( 327.287, 293.647, 13.2873, 0.2786 ) }
    dend_25 { pt3dadd( 328.098, 294.453, 13.1258, 0.2822 ) }
    dend_25 { pt3dadd( 328.908, 295.255, 12.9794, 0.2886 ) }
    dend_25 { pt3dadd( 329.718, 296.057, 12.8118, 0.3018 ) }
    dend_25 { pt3dadd( 330.529, 296.859, 12.6162, 0.3198 ) }
    dend_25 { pt3dadd( 331.385, 297.615, 12.4184, 0.384 ) }
    dend_25 { pt3dadd( 332.271, 298.338, 12.2338, 0.3532 ) }
    dend_25 { pt3dadd( 333.333, 298.725, 12.0232, 0.3366 ) }
    dend_25 { pt3dadd( 334.455, 298.709, 11.755, 0.3384 ) }
    dend_25 { pt3dadd( 335.579, 298.669, 11.4447, 0.413 ) }
    dend_25 { pt3dadd( 336.654, 298.293, 11.1659, 0.433 ) }
    dend_25 { pt3dadd( 337.692, 297.812, 10.9402, 0.3596 ) }
    dend_25 { pt3dadd( 338.708, 298.026, 10.6155, 0.3006 ) }
    dend_25 { pt3dadd( 339.696, 298.329, 10.2295, 0.2758 ) }
    dend_25 { pt3dadd( 340.784, 298.306, 10.0772, 0.2768 ) }
    dend_25 { pt3dadd( 341.915, 298.268, 10.1027, 0.2788 ) }
    dend_25 { pt3dadd( 343.047, 298.23, 10.2582, 0.2824 ) }
    dend_25 { pt3dadd( 344.178, 298.192, 10.5086, 0.2882 ) }
    dend_25 { pt3dadd( 345.309, 298.154, 10.8246, 0.305 ) }
    dend_25 { pt3dadd( 346.44, 298.115, 11.1538, 0.305 ) }
    dend_25 { pt3dadd( 347.571, 298.077, 11.788, 0.4576 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 332.525, 246.098, 25.467, 0.2818 ) }
    dend_18 { pt3dadd( 331.903, 246.344, 25.9729, 0.2878 ) }
    dend_18 { pt3dadd( 331.049, 246.692, 26.6926, 0.3004 ) }
    dend_18 { pt3dadd( 330.43, 247.224, 27.494, 0.3172 ) }
    dend_18 { pt3dadd( 330.811, 248.302, 28.1428, 0.379 ) }
    dend_18 { pt3dadd( 330.354, 249.188, 28.6734, 0.3444 ) }
    dend_18 { pt3dadd( 329.567, 250.013, 29.1049, 0.3194 ) }
    dend_18 { pt3dadd( 328.779, 250.837, 29.4437, 0.3112 ) }
    dend_18 { pt3dadd( 327.906, 251.568, 29.7116, 0.3384 ) }
    dend_18 { pt3dadd( 326.922, 252.146, 29.9334, 0.4134 ) }
    dend_18 { pt3dadd( 326.018, 252.751, 30.2392, 0.4334 ) }
    dend_18 { pt3dadd( 325.226, 253.389, 30.6656, 0.3606 ) }
    dend_18 { pt3dadd( 324.181, 253.696, 31.0167, 0.3026 ) }
    dend_18 { pt3dadd( 323.057, 253.905, 31.2418, 0.2794 ) }
    dend_18 { pt3dadd( 321.931, 254.112, 31.3516, 0.2834 ) }
    dend_18 { pt3dadd( 320.813, 254.34, 31.3286, 0.291 ) }
    dend_18 { pt3dadd( 319.71, 254.589, 31.155, 0.3052 ) }
    dend_18 { pt3dadd( 318.611, 254.842, 30.8683, 0.3312 ) }
    dend_18 { pt3dadd( 317.483, 254.971, 30.5533, 0.381 ) }
    dend_18 { pt3dadd( 316.341, 254.961, 30.2604, 0.464 ) }
    dend_18 { pt3dadd( 315.488, 255.55, 29.892, 0.6644 ) }
    dend_18 { pt3dadd( 315.188, 256.608, 29.4843, 0.8104 ) }
    dend_18 { pt3dadd( 315.374, 257.734, 29.1502, 0.8036 ) }
    dend_18 { pt3dadd( 316.015, 258.673, 28.8336, 0.5356 ) }
    dend_18 { pt3dadd( 316.72, 259.562, 28.5177, 0.3634 ) }
    dend_18 { pt3dadd( 317.423, 260.451, 28.205, 0.2988 ) }
    dend_18 { pt3dadd( 318.128, 261.34, 27.9013, 0.3144 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 49/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 332.525, 246.098, 25.467, 0.2818 ) }
    dend_17 { pt3dadd( 331.821, 245.331, 24.1031, 0.4576 ) }
    dend_17 { pt3dadd( 331.336, 244.308, 24.0024, 0.3816 ) }
    dend_17 { pt3dadd( 331.262, 243.177, 23.9648, 0.3422 ) }
    dend_17 { pt3dadd( 331.19, 242.035, 23.9236, 0.3486 ) }
    dend_17 { pt3dadd( 330.791, 240.969, 23.8704, 0.4322 ) }
    dend_17 { pt3dadd( 330.822, 239.846, 23.76, 0.468 ) }
    dend_17 { pt3dadd( 330.272, 238.861, 23.661, 0.4266 ) }
    dend_17 { pt3dadd( 330.033, 237.748, 23.5808, 0.4152 ) }
    dend_17 { pt3dadd( 330.101, 236.608, 23.519, 0.535 ) }
    dend_17 { pt3dadd( 329.775, 235.524, 23.4237, 0.5298 ) }
    dend_17 { pt3dadd( 329.361, 234.473, 23.3019, 0.4802 ) }
    dend_17 { pt3dadd( 328.796, 233.485, 23.2701, 0.353 ) }
    dend_17 { pt3dadd( 328.193, 232.534, 23.3348, 0.2882 ) }
    dend_17 { pt3dadd( 327.601, 231.556, 23.4049, 0.2542 ) }
    dend_17 { pt3dadd( 327.01, 230.576, 23.4692, 0.2288 ) }
    dend_17 { pt3dadd( 326.421, 229.595, 23.576, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 66/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 343.973, 222.461, 22.2614, 0.3848 ) }
    dend_15 { pt3dadd( 344.114, 222.239, 23.1731, 0.2288 ) }
    dend_15 { pt3dadd( 344.664, 221.244, 23.6062, 0.317 ) }
    dend_15 { pt3dadd( 345.206, 220.244, 23.7908, 0.3788 ) }
    dend_15 { pt3dadd( 345.747, 219.243, 24.0097, 0.344 ) }
    dend_15 { pt3dadd( 346.288, 218.243, 24.2529, 0.3184 ) }
    dend_15 { pt3dadd( 346.965, 217.324, 24.4876, 0.31 ) }
    dend_15 { pt3dadd( 347.723, 216.469, 24.6993, 0.3348 ) }
    dend_15 { pt3dadd( 348.49, 215.62, 24.8931, 0.4126 ) }
    dend_15 { pt3dadd( 349.362, 214.9, 25.1363, 0.4024 ) }
    dend_15 { pt3dadd( 350.267, 214.232, 25.4415, 0.4474 ) }
    dend_15 { pt3dadd( 351.171, 213.564, 25.7941, 0.4494 ) }
    dend_15 { pt3dadd( 352.067, 212.876, 26.1685, 0.3902 ) }
    dend_15 { pt3dadd( 352.963, 212.186, 26.5463, 0.358 ) }
    dend_15 { pt3dadd( 353.858, 211.495, 26.9091, 0.3778 ) }
    dend_15 { pt3dadd( 354.752, 210.803, 27.2396, 0.4878 ) }
    dend_15 { pt3dadd( 355.647, 210.112, 27.532, 0.5632 ) }
    dend_15 { pt3dadd( 356.713, 209.721, 27.7363, 0.6418 ) }
    dend_15 { pt3dadd( 357.831, 209.48, 27.8456, 0.6268 ) }
    dend_15 { pt3dadd( 358.951, 209.253, 27.8792, 0.4634 ) }
    dend_15 { pt3dadd( 360.071, 209.023, 27.8566, 0.362 ) }
    dend_15 { pt3dadd( 361.191, 208.794, 27.7962, 0.3384 ) }
    dend_15 { pt3dadd( 362.326, 208.653, 27.7185, 0.4132 ) }
    dend_15 { pt3dadd( 363.468, 208.68, 27.6457, 0.433 ) }
    dend_15 { pt3dadd( 364.484, 209.179, 27.5554, 0.36 ) }
    dend_15 { pt3dadd( 365.452, 209.78, 27.4506, 0.3012 ) }
    dend_15 { pt3dadd( 366.418, 210.386, 27.3414, 0.2766 ) }
    dend_15 { pt3dadd( 367.383, 210.992, 27.2381, 0.2786 ) }
    dend_15 { pt3dadd( 368.39, 211.537, 27.1871, 0.2818 ) }
    dend_15 { pt3dadd( 369.404, 212.064, 27.1956, 0.2882 ) }
    dend_15 { pt3dadd( 370.418, 212.591, 27.26, 0.2994 ) }
    dend_15 { pt3dadd( 371.434, 213.118, 27.3712, 0.3228 ) }
    dend_15 { pt3dadd( 372.449, 213.644, 27.5199, 0.3536 ) }
    dend_15 { pt3dadd( 373.336, 214.35, 27.7285, 0.4722 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( 374.209, 215.077, 27.9815, 0.393 ) }
    dend_15 { pt3dadd( 375.083, 215.802, 28.2663, 0.3248 ) }
    dend_15 { pt3dadd( 375.956, 216.528, 28.5723, 0.2736 ) }
    dend_15 { pt3dadd( 376.829, 217.255, 28.8879, 0.2728 ) }
    dend_15 { pt3dadd( 377.885, 217.649, 29.2107, 0.2712 ) }
    dend_15 { pt3dadd( 379.016, 217.664, 29.5266, 0.2684 ) }
    dend_15 { pt3dadd( 380.148, 217.672, 29.8273, 0.2626 ) }
    dend_15 { pt3dadd( 381.28, 217.624, 30.1022, 0.2542 ) }
    dend_15 { pt3dadd( 382.173, 216.908, 30.294, 0.2288 ) }
    dend_15 { pt3dadd( 383.064, 216.191, 30.5102, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 343.973, 222.461, 22.2614, 0.3848 ) }
    dend_10 { pt3dadd( 343.968, 222.107, 21.8163, 0.3 ) }
    dend_10 { pt3dadd( 343.841, 221.124, 21.1834, 0.2748 ) }
    dend_10 { pt3dadd( 343.324, 220.222, 20.4728, 0.275 ) }
    dend_10 { pt3dadd( 342.63, 220.183, 19.6225, 0.2752 ) }
    dend_10 { pt3dadd( 341.674, 220.481, 18.7802, 0.2758 ) }
    dend_10 { pt3dadd( 340.651, 220.013, 18.1254, 0.2768 ) }
    dend_10 { pt3dadd( 340.076, 219.039, 17.648, 0.2788 ) }
    dend_10 { pt3dadd( 340.639, 218.078, 17.3128, 0.2824 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 274.763, 87.3762, 83.8586, 0.381 ) }
    dend_4 { pt3dadd( 275.355, 86.1715, 84.1408, 0.431 ) }
    dend_4 { pt3dadd( 275.617, 85.0609, 84.3836, 0.6074 ) }
    dend_4 { pt3dadd( 276.029, 84.0122, 84.6275, 0.6842 ) }
    dend_4 { pt3dadd( 276.54, 83.0102, 84.8691, 0.668 ) }
    dend_4 { pt3dadd( 276.921, 81.9334, 85.0676, 0.4934 ) }
    dend_4 { pt3dadd( 277.417, 80.919, 85.2264, 0.414 ) }
    dend_4 { pt3dadd( 278.089, 79.9947, 85.3465, 0.4538 ) }
    dend_4 { pt3dadd( 278.83, 79.1553, 85.4314, 0.534 ) }
    dend_4 { pt3dadd( 279.873, 78.8216, 85.5039, 0.4232 ) }
    dend_4 { pt3dadd( 280.956, 78.5788, 85.5744, 0.334 ) }
    dend_4 { pt3dadd( 281.871, 77.9056, 85.6296, 0.2902 ) }
    dend_4 { pt3dadd( 282.958, 77.693, 85.6727, 0.3046 ) }
    dend_4 { pt3dadd( 283.972, 77.2026, 85.7086, 0.3252 ) }
    dend_4 { pt3dadd( 284.987, 76.6765, 85.7382, 0.3936 ) }
    dend_4 { pt3dadd( 285.803, 75.8796, 85.7623, 0.3722 ) }
    dend_4 { pt3dadd( 286.545, 75.0163, 85.8222, 0.367 ) }
    dend_4 { pt3dadd( 287.366, 74.2207, 85.8724, 0.419 ) }
    dend_4 { pt3dadd( 287.936, 73.2308, 85.9113, 0.4442 ) }
    dend_4 { pt3dadd( 288.583, 72.2872, 85.9401, 0.3802 ) }
    dend_4 { pt3dadd( 289.289, 71.387, 85.9594, 0.3396 ) }
    dend_4 { pt3dadd( 289.989, 70.4824, 85.9706, 0.344 ) }
    dend_4 { pt3dadd( 290.461, 69.4463, 85.9754, 0.4234 ) }
    dend_4 { pt3dadd( 290.477, 68.3046, 85.9816, 0.4522 ) }
    dend_4 { pt3dadd( 290.816, 67.2135, 85.9902, 0.395 ) }
    dend_4 { pt3dadd( 291.251, 66.1623, 86.0026, 0.368 ) }
    dend_4 { pt3dadd( 291.376, 65.0262, 86.0199, 0.3912 ) }
    dend_4 { pt3dadd( 291.36, 63.883, 86.0432, 0.5368 ) }
    dend_4 { pt3dadd( 291.271, 62.7442, 86.0734, 0.5376 ) }
    dend_4 { pt3dadd( 291.331, 61.6027, 86.1174, 0.4724 ) }
    dend_4 { pt3dadd( 291.309, 60.4781, 86.2028, 0.4468 ) }
    dend_4 { pt3dadd( 290.927, 59.4073, 86.2868, 0.624 ) }
    dend_4 { pt3dadd( 290.758, 58.2767, 86.375, 0.5474 ) }
    dend_4 { pt3dadd( 290.43, 57.1944, 86.4741, 0.5414 ) }
    dend_4 { pt3dadd( 289.787, 56.2488, 86.5886, 0.556 ) }
    dend_4 { pt3dadd( 289.194, 55.288, 86.725, 0.4586 ) }
    dend_4 { pt3dadd( 288.973, 54.196, 86.9324, 0.4252 ) }
    dend_4 { pt3dadd( 289.291, 53.2223, 87.257, 0.3356 ) }
    dend_4 { pt3dadd( 290.036, 52.3731, 87.6271, 0.303 ) }
    dend_4 { pt3dadd( 290.67, 51.4231, 88.0116, 0.2802 ) }
    dend_4 { pt3dadd( 291.313, 50.5234, 88.4615, 0.285 ) }
    dend_4 { pt3dadd( 292.124, 49.8268, 89.0187, 0.2938 ) }
    dend_4 { pt3dadd( 292.862, 49.0388, 89.6207, 0.3112 ) }
    dend_4 { pt3dadd( 293.159, 47.9693, 90.2037, 0.3382 ) }
    dend_4 { pt3dadd( 292.98, 46.869, 90.7796, 0.413 ) }
    dend_4 { pt3dadd( 292.781, 45.8567, 91.4813, 0.4328 ) }
    dend_4 { pt3dadd( 293.331, 45.1469, 92.3129, 0.3594 ) }
    dend_4 { pt3dadd( 294.017, 44.2879, 93.1025, 0.3 ) }
    dend_4 { pt3dadd( 294.656, 43.7116, 94.0481, 0.2746 ) }
    dend_4 { pt3dadd( 294.934, 42.744, 95.0662, 0.2746 ) }
    dend_4 { pt3dadd( 295.923, 42.2106, 95.9888, 0.2746 ) }
    dend_4 { pt3dadd( 296.972, 42.0936, 96.8366, 0.2746 ) }
    dend_4 { pt3dadd( 296.729, 41.405, 97.8751, 0.2746 ) }
    dend_4 { pt3dadd( 296.856, 40.7194, 98.9187, 0.2746 ) }
    dend_4 { pt3dadd( 297.676, 40.0574, 99.8561, 0.2746 ) }
    dend_4 { pt3dadd( 298.568, 39.8258, 100.855, 0.2746 ) }
    dend_4 { pt3dadd( 299.502, 39.3542, 101.801, 0.2746 ) }
    dend_4 { pt3dadd( 300.536, 38.8868, 102.557, 0.2748 ) }
    dend_4 { pt3dadd( 301.503, 38.3369, 103.209, 0.275 ) }
    dend_4 { pt3dadd( 302.525, 37.8598, 103.781, 0.2752 ) }
    dend_4 { pt3dadd( 303.585, 37.4327, 104.278, 0.2758 ) }
    dend_4 { pt3dadd( 304.604, 36.9424, 104.757, 0.2768 ) }
    dend_4 { pt3dadd( 305.68, 36.5827, 105.229, 0.2796 ) }
    dend_4 { pt3dadd( 306.764, 36.4991, 105.771, 0.2796 ) }
    dend_4 { pt3dadd( 307.836, 36.7229, 106.338, 0.305 ) }
    dend_4 { pt3dadd( 308.536, 37.18, 108.08, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 274.763, 87.3762, 83.8586, 0.381 ) }
    dend_3 { pt3dadd( 273.517, 86.9768, 85.3124, 0.4018 ) }
    dend_3 { pt3dadd( 272.457, 86.6339, 85.7676, 0.551 ) }
    dend_3 { pt3dadd( 271.335, 86.6344, 85.9757, 0.5904 ) }
    dend_3 { pt3dadd( 270.267, 86.9019, 86.2453, 0.443 ) }
    dend_3 { pt3dadd( 269.183, 87.221, 86.511, 0.3236 ) }
    dend_3 { pt3dadd( 268.229, 87.6565, 86.8518, 0.2712 ) }
    dend_3 { pt3dadd( 267.232, 88.0303, 87.2197, 0.2684 ) }
    dend_3 { pt3dadd( 266.172, 88.4056, 87.5605, 0.2626 ) }
    dend_3 { pt3dadd( 265.069, 88.6279, 87.8662, 0.2542 ) }
    dend_3 { pt3dadd( 263.932, 88.66, 88.125, 0.2288 ) }
    dend_3 { pt3dadd( 263.005, 88.088, 88.48, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 97/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 280.546, 291.529, 11.9953, 0.2746 ) }
    dend_31 { pt3dadd( 280.686, 291.682, 11.4208, 0.2288 ) }
    dend_31 { pt3dadd( 280.744, 292.764, 11.1649, 0.3672 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( 281.148, 293.825, 11.0751, 0.322 ) }
    dend_31 { pt3dadd( 280.726, 294.835, 10.926, 0.2796 ) }
    dend_31 { pt3dadd( 280.546, 295.963, 10.8081, 0.2288 ) }
    dend_31 { pt3dadd( 280.393, 297.097, 10.64, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 280.546, 291.529, 11.9953, 0.2746 ) }
    dend_30 { pt3dadd( 280.23, 292.546, 11.769, 0.2746 ) }
    dend_30 { pt3dadd( 279.636, 293.478, 11.5797, 0.2746 ) }
    dend_30 { pt3dadd( 278.887, 294.339, 11.4496, 0.2746 ) }
    dend_30 { pt3dadd( 278.211, 295.259, 11.3483, 0.2746 ) }
    dend_30 { pt3dadd( 277.697, 296.275, 11.2604, 0.2746 ) }
    dend_30 { pt3dadd( 277.098, 297.239, 11.1551, 0.2746 ) }
    dend_30 { pt3dadd( 276.33, 298.079, 11.0509, 0.2746 ) }
    dend_30 { pt3dadd( 275.511, 298.825, 10.8652, 0.2746 ) }
    dend_30 { pt3dadd( 274.656, 299.564, 10.6701, 0.2746 ) }
    dend_30 { pt3dadd( 273.943, 300.45, 10.5138, 0.2746 ) }
    dend_30 { pt3dadd( 273.495, 301.493, 10.3945, 0.2746 ) }
    dend_30 { pt3dadd( 273.636, 302.596, 10.308, 0.2744 ) }
    dend_30 { pt3dadd( 273.929, 303.701, 10.2446, 0.2744 ) }
    dend_30 { pt3dadd( 273.902, 304.831, 10.1756, 0.2742 ) }
    dend_30 { pt3dadd( 273.86, 305.969, 10.0823, 0.274 ) }
    dend_30 { pt3dadd( 273.692, 307.096, 10.0057, 0.2736 ) }
    dend_30 { pt3dadd( 273.211, 308.126, 9.9548, 0.2728 ) }
    dend_30 { pt3dadd( 273.186, 309.263, 9.9374, 0.2712 ) }
    dend_30 { pt3dadd( 273.186, 310.405, 9.9655, 0.2684 ) }
    dend_30 { pt3dadd( 273.15, 311.548, 10.0009, 0.2626 ) }
    dend_30 { pt3dadd( 272.718, 312.604, 10.0347, 0.2542 ) }
    dend_30 { pt3dadd( 271.699, 313.113, 10.0594, 0.2288 ) }
    dend_30 { pt3dadd( 270.555, 313.113, 10.08, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 28/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 318.128, 261.34, 27.9013, 0.3144 ) }
    dend_20 { pt3dadd( 318.328, 261.581, 27.6473, 0.3738 ) }
    dend_20 { pt3dadd( 319.059, 262.461, 27.4166, 0.3346 ) }
    dend_20 { pt3dadd( 319.713, 263.38, 27.1832, 0.3014 ) }
    dend_20 { pt3dadd( 320.101, 264.428, 26.876, 0.2772 ) }
    dend_20 { pt3dadd( 320.481, 265.477, 26.5098, 0.2794 ) }
    dend_20 { pt3dadd( 320.831, 266.537, 26.1028, 0.2834 ) }
    dend_20 { pt3dadd( 320.91, 267.632, 25.6978, 0.2908 ) }
    dend_20 { pt3dadd( 320.675, 268.733, 25.3573, 0.3056 ) }
    dend_20 { pt3dadd( 320.628, 269.847, 25.0599, 0.3268 ) }
    dend_20 { pt3dadd( 319.965, 270.698, 24.7505, 0.398 ) }
    dend_20 { pt3dadd( 319.008, 271.281, 24.4046, 0.374 ) }
    dend_20 { pt3dadd( 318.007, 271.789, 24.0372, 0.4 ) }
    dend_20 { pt3dadd( 316.945, 272.186, 23.6643, 0.336 ) }
    dend_20 { pt3dadd( 315.881, 272.576, 23.2892, 0.304 ) }
    dend_20 { pt3dadd( 314.801, 272.924, 22.9284, 0.282 ) }
    dend_20 { pt3dadd( 313.683, 273.067, 22.6131, 0.2886 ) }
    dend_20 { pt3dadd( 312.554, 273.096, 22.322, 0.3 ) }
    dend_20 { pt3dadd( 311.44, 273.231, 22.0037, 0.324 ) }
    dend_20 { pt3dadd( 310.378, 273.544, 21.6892, 0.3556 ) }
    dend_20 { pt3dadd( 309.403, 274.129, 21.408, 0.476 ) }
    dend_20 { pt3dadd( 308.417, 274.668, 21.1385, 0.4 ) }
    dend_20 { pt3dadd( 307.372, 275.101, 20.9034, 0.3378 ) }
    dend_20 { pt3dadd( 306.343, 275.5, 20.8314, 0.2988 ) }
    dend_20 { pt3dadd( 305.23, 275.589, 20.8388, 0.3142 ) }
    dend_20 { pt3dadd( 304.086, 275.604, 20.866, 0.3734 ) }
    dend_20 { pt3dadd( 302.956, 275.772, 20.8985, 0.3338 ) }
    dend_20 { pt3dadd( 301.85, 276.059, 20.9279, 0.3 ) }
    dend_20 { pt3dadd( 300.714, 276.154, 20.9435, 0.2746 ) }
    dend_20 { pt3dadd( 299.671, 276.571, 20.906, 0.2746 ) }
    dend_20 { pt3dadd( 298.551, 276.754, 20.8709, 0.2746 ) }
    dend_20 { pt3dadd( 297.458, 277.082, 20.8541, 0.2746 ) }
    dend_20 { pt3dadd( 296.551, 277.764, 20.8565, 0.2746 ) }
    dend_20 { pt3dadd( 295.85, 278.662, 20.8797, 0.2748 ) }
    dend_20 { pt3dadd( 294.939, 279.343, 20.9252, 0.2748 ) }
    dend_20 { pt3dadd( 293.894, 279.794, 21.0225, 0.2752 ) }
    dend_20 { pt3dadd( 293.591, 280.845, 21.1462, 0.2758 ) }
    dend_20 { pt3dadd( 293.307, 281.954, 21.2801, 0.2768 ) }
    dend_20 { pt3dadd( 292.991, 283.047, 21.4628, 0.2786 ) }
    dend_20 { pt3dadd( 292.977, 284.185, 21.6804, 0.282 ) }
    dend_20 { pt3dadd( 292.88, 285.282, 21.989, 0.2884 ) }
    dend_20 { pt3dadd( 292.61, 286.381, 22.3042, 0.2998 ) }
    dend_20 { pt3dadd( 291.863, 287.242, 22.5613, 0.3236 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 71/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 318.128, 261.34, 27.9013, 0.3144 ) }
    dend_19 { pt3dadd( 317.634, 262.28, 27.7365, 0.2288 ) }
    dend_19 { pt3dadd( 317.039, 263.256, 27.8043, 0.2746 ) }
    dend_19 { pt3dadd( 316.455, 264.24, 27.8314, 0.2746 ) }
    dend_19 { pt3dadd( 315.976, 265.279, 27.8698, 0.2746 ) }
    dend_19 { pt3dadd( 315.51, 266.323, 27.9235, 0.2746 ) }
    dend_19 { pt3dadd( 315.044, 267.368, 27.9959, 0.2746 ) }
    dend_19 { pt3dadd( 314.578, 268.413, 28.0902, 0.2746 ) }
    dend_19 { pt3dadd( 314.171, 269.474, 28.2517, 0.2746 ) }
    dend_19 { pt3dadd( 313.77, 270.535, 28.4729, 0.2746 ) }
    dend_19 { pt3dadd( 313.37, 271.598, 28.7384, 0.2746 ) }
    dend_19 { pt3dadd( 312.97, 272.661, 29.0326, 0.2748 ) }
    dend_19 { pt3dadd( 312.569, 273.724, 29.344, 0.275 ) }
    dend_19 { pt3dadd( 312.17, 274.786, 29.664, 0.2754 ) }
    dend_19 { pt3dadd( 311.766, 275.852, 29.9743, 0.276 ) }
    dend_19 { pt3dadd( 311.357, 276.919, 30.2456, 0.2772 ) }
    dend_19 { pt3dadd( 310.945, 277.986, 30.4906, 0.2796 ) }
    dend_19 { pt3dadd( 310.577, 279.054, 30.7852, 0.284 ) }
    dend_19 { pt3dadd( 310.251, 280.086, 31.1923, 0.292 ) }
    dend_19 { pt3dadd( 309.755, 281.107, 31.5888, 0.3066 ) }
    dend_19 { pt3dadd( 309.333, 282.154, 32.0062, 0.336 ) }
    dend_19 { pt3dadd( 308.918, 283.202, 32.4386, 0.3788 ) }
    dend_19 { pt3dadd( 308.503, 284.251, 32.8706, 0.5138 ) }
    dend_19 { pt3dadd( 308.156, 285.33, 33.2758, 0.4958 ) }
    dend_19 { pt3dadd( 307.893, 286.438, 33.6459, 0.3916 ) }
    dend_19 { pt3dadd( 307.634, 287.548, 34.0043, 0.3124 ) }
    dend_19 { pt3dadd( 307.376, 288.658, 34.3532, 0.2988 ) }
    dend_19 { pt3dadd( 307.118, 289.768, 34.6976, 0.3142 ) }
    dend_19 { pt3dadd( 306.86, 290.878, 35.0398, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 306.343, 291.134, 35.649, 0.3338 ) }
    dend_19 { pt3dadd( 305.671, 292.049, 36.1623, 0.3 ) }
    dend_19 { pt3dadd( 305.183, 293.084, 36.552, 0.2746 ) }
    dend_19 { pt3dadd( 304.664, 294.089, 36.8368, 0.2746 ) }
    dend_19 { pt3dadd( 304.057, 295.002, 37.0359, 0.2746 ) }
    dend_19 { pt3dadd( 303.658, 295.995, 37.168, 0.2746 ) }
    dend_19 { pt3dadd( 302.793, 296.739, 37.254, 0.2746 ) }
    dend_19 { pt3dadd( 301.935, 297.459, 37.3853, 0.2746 ) }
    dend_19 { pt3dadd( 300.884, 297.783, 37.5763, 0.2746 ) }
    dend_19 { pt3dadd( 299.754, 297.884, 37.7798, 0.2746 ) }
    dend_19 { pt3dadd( 298.914, 298.498, 38.0187, 0.2746 ) }
    dend_19 { pt3dadd( 298.442, 299.505, 38.3158, 0.2746 ) }
    dend_19 { pt3dadd( 297.701, 300.215, 38.6218, 0.2746 ) }
    dend_19 { pt3dadd( 296.676, 300.703, 38.8965, 0.2746 ) }
    dend_19 { pt3dadd( 295.984, 301.522, 39.1339, 0.2746 ) }
    dend_19 { pt3dadd( 295.657, 302.614, 39.305, 0.2746 ) }
    dend_19 { pt3dadd( 294.797, 303.024, 39.4145, 0.2746 ) }
    dend_19 { pt3dadd( 293.654, 303.046, 39.4775, 0.2748 ) }
    dend_19 { pt3dadd( 292.509, 303.042, 39.5136, 0.275 ) }
    dend_19 { pt3dadd( 291.528, 302.56, 39.5371, 0.2754 ) }
    dend_19 { pt3dadd( 290.496, 302.085, 39.5559, 0.276 ) }
    dend_19 { pt3dadd( 289.574, 301.431, 39.6038, 0.2772 ) }
    dend_19 { pt3dadd( 288.766, 300.625, 39.6553, 0.2794 ) }
    dend_19 { pt3dadd( 287.948, 299.826, 39.6964, 0.2834 ) }
    dend_19 { pt3dadd( 287.315, 298.881, 39.7264, 0.291 ) }
    dend_19 { pt3dadd( 286.657, 297.947, 39.7466, 0.305 ) }
    dend_19 { pt3dadd( 286.1, 296.949, 39.7572, 0.3304 ) }
    dend_19 { pt3dadd( 285.612, 295.915, 39.7597, 0.3814 ) }
    dend_19 { pt3dadd( 284.626, 295.381, 39.76, 0.4576 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 29/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 340.639, 218.078, 17.3128, 0.2824 ) }
    dend_14 { pt3dadd( 341.123, 217.242, 17.239, 0.2288 ) }
    dend_14 { pt3dadd( 341.692, 216.263, 16.9, 0.281 ) }
    dend_14 { pt3dadd( 342.217, 215.254, 16.7556, 0.2864 ) }
    dend_14 { pt3dadd( 342.693, 214.214, 16.6232, 0.2964 ) }
    dend_14 { pt3dadd( 343.161, 213.169, 16.4998, 0.3148 ) }
    dend_14 { pt3dadd( 343.463, 212.08, 16.3631, 0.3508 ) }
    dend_14 { pt3dadd( 343.578, 210.947, 16.2004, 0.4076 ) }
    dend_14 { pt3dadd( 343.474, 209.824, 16.0367, 0.562 ) }
    dend_14 { pt3dadd( 343.163, 208.726, 15.8609, 0.6102 ) }
    dend_14 { pt3dadd( 342.807, 207.652, 15.6355, 0.481 ) }
    dend_14 { pt3dadd( 342.428, 206.594, 15.3594, 0.3884 ) }
    dend_14 { pt3dadd( 342.2, 205.493, 15.0833, 0.4182 ) }
    dend_14 { pt3dadd( 342.37, 204.388, 14.8491, 0.4112 ) }
    dend_14 { pt3dadd( 343.071, 203.561, 14.6366, 0.4708 ) }
    dend_14 { pt3dadd( 344.027, 202.942, 14.4291, 0.4578 ) }
    dend_14 { pt3dadd( 344.741, 202.091, 14.2514, 0.5754 ) }
    dend_14 { pt3dadd( 344.842, 201.02, 14.0741, 0.5646 ) }
    dend_14 { pt3dadd( 344.345, 200.028, 13.8554, 0.5098 ) }
    dend_14 { pt3dadd( 344.197, 198.935, 13.6508, 0.5772 ) }
    dend_14 { pt3dadd( 344.341, 197.802, 13.4876, 0.568 ) }
    dend_14 { pt3dadd( 344.765, 196.749, 13.3593, 0.516 ) }
    dend_14 { pt3dadd( 345.258, 195.715, 13.2552, 0.5902 ) }
    dend_14 { pt3dadd( 345.596, 194.629, 13.1483, 0.5858 ) }
    dend_14 { pt3dadd( 345.839, 193.516, 13.0251, 0.58 ) }
    dend_14 { pt3dadd( 346.069, 192.399, 12.8812, 0.5582 ) }
    dend_14 { pt3dadd( 346.301, 191.284, 12.7226, 0.5718 ) }
    dend_14 { pt3dadd( 346.904, 190.336, 12.5857, 0.5622 ) }
    dend_14 { pt3dadd( 347.299, 189.278, 12.4755, 0.7142 ) }
    dend_14 { pt3dadd( 347.125, 188.159, 12.3855, 0.8574 ) }
    dend_14 { pt3dadd( 347.25, 187.028, 12.3057, 0.8804 ) }
    dend_14 { pt3dadd( 347.411, 185.895, 12.2266, 0.729 ) }
    dend_14 { pt3dadd( 347.695, 184.789, 12.128, 0.474 ) }
    dend_14 { pt3dadd( 348.437, 183.948, 11.9589, 0.334 ) }
    dend_14 { pt3dadd( 349.21, 183.126, 11.7379, 0.2904 ) }
    dend_14 { pt3dadd( 349.904, 182.23, 11.4991, 0.304 ) }
    dend_14 { pt3dadd( 350.215, 181.133, 11.3107, 0.3286 ) }
    dend_14 { pt3dadd( 350.511, 180.028, 11.1703, 0.3776 ) }
    dend_14 { pt3dadd( 350.87, 178.942, 11.0727, 0.452 ) }
    dend_14 { pt3dadd( 351.247, 177.862, 11.0106, 0.6696 ) }
    dend_14 { pt3dadd( 351.681, 176.804, 10.9586, 0.687 ) }
    dend_14 { pt3dadd( 352.177, 175.776, 10.8942, 0.5334 ) }
    dend_14 { pt3dadd( 352.678, 174.749, 10.8144, 0.4642 ) }
    dend_14 { pt3dadd( 353.123, 173.696, 10.7387, 0.4334 ) }
    dend_14 { pt3dadd( 353.522, 172.624, 10.6792, 0.3604 ) }
    dend_14 { pt3dadd( 354.051, 171.609, 10.6343, 0.302 ) }
    dend_14 { pt3dadd( 354.774, 170.723, 10.6013, 0.2784 ) }
    dend_14 { pt3dadd( 355.5, 169.839, 10.5751, 0.2816 ) }
    dend_14 { pt3dadd( 356.119, 168.877, 10.549, 0.2874 ) }
    dend_14 { pt3dadd( 356.65, 167.864, 10.5175, 0.2984 ) }
    dend_14 { pt3dadd( 357.156, 166.837, 10.4766, 0.3198 ) }
    dend_14 { pt3dadd( 357.109, 165.698, 10.401, 0.3528 ) }
    dend_14 { pt3dadd( 357.056, 164.559, 10.2982, 0.4468 ) }
    dend_14 { pt3dadd( 357.015, 163.416, 10.1889, 0.4614 ) }
    dend_14 { pt3dadd( 356.981, 162.272, 10.0881, 0.577 ) }
    dend_14 { pt3dadd( 356.997, 161.129, 9.985, 0.5914 ) }
    dend_14 { pt3dadd( 357.139, 159.999, 9.8562, 0.4448 ) }
    dend_14 { pt3dadd( 357.283, 158.868, 9.7133, 0.3268 ) }
    dend_14 { pt3dadd( 357.426, 157.738, 9.5633, 0.2768 ) }
    dend_14 { pt3dadd( 357.72, 156.633, 9.4371, 0.2796 ) }
    dend_14 { pt3dadd( 358.085, 155.548, 9.3464, 0.2796 ) }
    dend_14 { pt3dadd( 358.379, 154.443, 9.2883, 0.305 ) }
    dend_14 { pt3dadd( 358.649, 153.331, 9.2456, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 92/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 340.639, 218.078, 17.3128, 0.2824 ) }
    dend_11 { pt3dadd( 340.83, 218.073, 17.0465, 0.2892 ) }
    dend_11 { pt3dadd( 341.913, 218.043, 16.7134, 0.3012 ) }
    dend_11 { pt3dadd( 343.007, 218.266, 16.3907, 0.326 ) }
    dend_11 { pt3dadd( 344.097, 218.609, 16.1024, 0.3594 ) }
    dend_11 { pt3dadd( 344.932, 219.329, 15.8069, 0.4832 ) }
    dend_11 { pt3dadd( 345.427, 220.329, 15.4774, 0.4134 ) }
    dend_11 { pt3dadd( 345.893, 221.353, 15.1325, 0.3624 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_11 { pt3dadd( 346.665, 222.174, 14.8465, 0.345 ) }
    dend_11 { pt3dadd( 346.887, 223.247, 14.6093, 0.3958 ) }
    dend_11 { pt3dadd( 346.663, 224.33, 14.3235, 0.545 ) }
    dend_11 { pt3dadd( 346.507, 225.422, 13.997, 0.5554 ) }
    dend_11 { pt3dadd( 346.907, 226.483, 13.7526, 0.4926 ) }
    dend_11 { pt3dadd( 347.211, 227.586, 13.5794, 0.5458 ) }
    dend_11 { pt3dadd( 347.069, 228.719, 13.4605, 0.508 ) }
    dend_11 { pt3dadd( 347.049, 229.862, 13.3847, 0.4138 ) }
    dend_11 { pt3dadd( 347.589, 230.867, 13.3272, 0.356 ) }
    dend_11 { pt3dadd( 348.128, 231.872, 13.2791, 0.368 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 10/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 291.863, 287.242, 22.5613, 0.3236 ) }
    dend_22 { pt3dadd( 291.665, 288.033, 22.68, 0.2288 ) }
    dend_22 { pt3dadd( 291.558, 289.169, 22.4658, 0.3144 ) }
    dend_22 { pt3dadd( 291.37, 290.295, 22.3886, 0.3738 ) }
    dend_22 { pt3dadd( 291.218, 291.413, 22.2416, 0.3346 ) }
    dend_22 { pt3dadd( 290.782, 292.45, 22.052, 0.3014 ) }
    dend_22 { pt3dadd( 290.195, 293.429, 21.8695, 0.2772 ) }
    dend_22 { pt3dadd( 289.791, 294.492, 21.6836, 0.2796 ) }
    dend_22 { pt3dadd( 289.343, 295.543, 21.5228, 0.284 ) }
    dend_22 { pt3dadd( 289.015, 296.638, 21.3871, 0.292 ) }
    dend_22 { pt3dadd( 288.778, 297.751, 21.2353, 0.3066 ) }
    dend_22 { pt3dadd( 288.746, 298.887, 21.0596, 0.336 ) }
    dend_22 { pt3dadd( 288.745, 300.03, 20.8961, 0.379 ) }
    dend_22 { pt3dadd( 288.756, 301.172, 20.7177, 0.514 ) }
    dend_22 { pt3dadd( 289.051, 302.262, 20.4959, 0.496 ) }
    dend_22 { pt3dadd( 289.169, 303.397, 20.2836, 0.392 ) }
    dend_22 { pt3dadd( 289.488, 304.493, 20.0803, 0.3132 ) }
    dend_22 { pt3dadd( 289.854, 305.576, 19.8631, 0.3 ) }
    dend_22 { pt3dadd( 289.4, 306.132, 19.5301, 0.3164 ) }
    dend_22 { pt3dadd( 288.438, 306.556, 19.1533, 0.3786 ) }
    dend_22 { pt3dadd( 287.545, 306.148, 18.7264, 0.339 ) }
    dend_22 { pt3dadd( 286.965, 305.928, 18.2647, 0.3304 ) }
    dend_22 { pt3dadd( 286.403, 306.836, 17.4014, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 33/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 291.863, 287.242, 22.5613, 0.3236 ) }
    dend_21 { pt3dadd( 291.722, 287.56, 22.8139, 0.3548 ) }
    dend_21 { pt3dadd( 290.619, 287.858, 23.0039, 0.4744 ) }
    dend_21 { pt3dadd( 289.608, 288.321, 23.1449, 0.3972 ) }
    dend_21 { pt3dadd( 289.249, 289.326, 23.2951, 0.3328 ) }
    dend_21 { pt3dadd( 289.635, 290.315, 23.4562, 0.288 ) }
    dend_21 { pt3dadd( 290.061, 291.307, 23.5944, 0.3008 ) }
    dend_21 { pt3dadd( 289.907, 292.43, 23.7142, 0.3178 ) }
    dend_21 { pt3dadd( 289.633, 293.518, 23.8322, 0.3802 ) }
    dend_21 { pt3dadd( 289.699, 294.643, 24.0044, 0.3464 ) }
    dend_21 { pt3dadd( 289.425, 295.724, 24.1946, 0.3242 ) }
    dend_21 { pt3dadd( 288.795, 296.62, 24.373, 0.3142 ) }
    dend_21 { pt3dadd( 287.748, 297.041, 24.5456, 0.3736 ) }
    dend_21 { pt3dadd( 286.945, 297.378, 24.9156, 0.3342 ) }
    dend_21 { pt3dadd( 286.228, 298.078, 25.2421, 0.3006 ) }
    dend_21 { pt3dadd( 286.009, 299.199, 25.4822, 0.2758 ) }
    dend_21 { pt3dadd( 285.886, 300.337, 25.6511, 0.277 ) }
    dend_21 { pt3dadd( 285.763, 301.474, 25.7599, 0.2792 ) }
    dend_21 { pt3dadd( 285.696, 302.617, 25.8145, 0.2828 ) }
    dend_21 { pt3dadd( 285.901, 303.721, 25.8213, 0.291 ) }
    dend_21 { pt3dadd( 286.227, 304.814, 25.8213, 0.2994 ) }
    dend_21 { pt3dadd( 286.221, 305.942, 25.8213, 0.3474 ) }
    dend_21 { pt3dadd( 285.942, 307.043, 25.8213, 0.2796 ) }
    dend_21 { pt3dadd( 285.444, 308.072, 25.8213, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 348.128, 231.872, 13.2791, 0.368 ) }
    dend_13 { pt3dadd( 348.711, 232.658, 13.2864, 0.4984 ) }
    dend_13 { pt3dadd( 349.389, 233.574, 13.3398, 0.4438 ) }
    dend_13 { pt3dadd( 350.069, 234.49, 13.4252, 0.4088 ) }
    dend_13 { pt3dadd( 350.745, 235.409, 13.5271, 0.4804 ) }
    dend_13 { pt3dadd( 351.355, 236.374, 13.6098, 0.408 ) }
    dend_13 { pt3dadd( 351.933, 237.361, 13.6538, 0.3538 ) }
    dend_13 { pt3dadd( 352.512, 238.348, 13.6554, 0.322 ) }
    dend_13 { pt3dadd( 353.184, 239.27, 13.6131, 0.388 ) }
    dend_13 { pt3dadd( 354.17, 239.801, 13.5094, 0.3618 ) }
    dend_13 { pt3dadd( 355.21, 240.262, 13.3608, 0.3466 ) }
    dend_13 { pt3dadd( 356.251, 240.725, 13.1985, 0.3864 ) }
    dend_13 { pt3dadd( 357.294, 241.193, 13.062, 0.3592 ) }
    dend_13 { pt3dadd( 358.338, 241.663, 12.9547, 0.3416 ) }
    dend_13 { pt3dadd( 359.381, 242.132, 12.8724, 0.3772 ) }
    dend_13 { pt3dadd( 360.281, 242.827, 12.8011, 0.3408 ) }
    dend_13 { pt3dadd( 361.004, 243.709, 12.7255, 0.3126 ) }
    dend_13 { pt3dadd( 361.702, 244.615, 12.64, 0.299 ) }
    dend_13 { pt3dadd( 362.4, 245.52, 12.5435, 0.3144 ) }
    dend_13 { pt3dadd( 363.098, 246.424, 12.4403, 0.374 ) }
    dend_13 { pt3dadd( 363.797, 247.329, 12.3355, 0.335 ) }
    dend_13 { pt3dadd( 364.495, 248.234, 12.2338, 0.3022 ) }
    dend_13 { pt3dadd( 365.192, 249.139, 12.1388, 0.2786 ) }
    dend_13 { pt3dadd( 366.097, 249.828, 12.0572, 0.2822 ) }
    dend_13 { pt3dadd( 367.051, 250.458, 11.9913, 0.2888 ) }
    dend_13 { pt3dadd( 368.008, 251.085, 11.9419, 0.3006 ) }
    dend_13 { pt3dadd( 368.964, 251.712, 11.9118, 0.3248 ) }
    dend_13 { pt3dadd( 369.921, 252.339, 11.9057, 0.3574 ) }
    dend_13 { pt3dadd( 370.877, 252.966, 11.9286, 0.4792 ) }
    dend_13 { pt3dadd( 371.935, 253.391, 11.9937, 0.4056 ) }
    dend_13 { pt3dadd( 373.02, 253.758, 12.1054, 0.3496 ) }
    dend_13 { pt3dadd( 374.138, 253.913, 12.3159, 0.3142 ) }
    dend_13 { pt3dadd( 375.255, 253.937, 12.6352, 0.3734 ) }
    dend_13 { pt3dadd( 376.372, 253.95, 13.0342, 0.3338 ) }
    dend_13 { pt3dadd( 377.488, 253.961, 13.481, 0.3 ) }
    dend_13 { pt3dadd( 378.605, 253.974, 13.9478, 0.2746 ) }
    dend_13 { pt3dadd( 379.735, 253.936, 14.3844, 0.2746 ) }
    dend_13 { pt3dadd( 380.871, 253.815, 14.7329, 0.2746 ) }
    dend_13 { pt3dadd( 382.008, 253.685, 15.0108, 0.2746 ) }
    dend_13 { pt3dadd( 383.144, 253.555, 15.2436, 0.2746 ) }
    dend_13 { pt3dadd( 384.278, 253.494, 15.4954, 0.2746 ) }
    dend_13 { pt3dadd( 385.354, 253.568, 15.8468, 0.2746 ) }
    dend_13 { pt3dadd( 386.425, 253.653, 16.2698, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( 387.496, 253.738, 16.7226, 0.2748 ) }
    dend_13 { pt3dadd( 388.627, 253.816, 17.0608, 0.275 ) }
    dend_13 { pt3dadd( 389.755, 253.879, 17.1756, 0.2754 ) }
    dend_13 { pt3dadd( 390.881, 253.943, 17.092, 0.276 ) }
    dend_13 { pt3dadd( 392.008, 254.007, 16.8513, 0.2772 ) }
    dend_13 { pt3dadd( 393.103, 254.28, 16.5094, 0.2792 ) }
    dend_13 { pt3dadd( 394.136, 254.742, 16.1182, 0.2834 ) }
    dend_13 { pt3dadd( 395.166, 255.209, 15.7162, 0.2906 ) }
    dend_13 { pt3dadd( 396.175, 255.727, 15.3259, 0.3056 ) }
    dend_13 { pt3dadd( 396.925, 256.589, 14.9932, 0.3266 ) }
    dend_13 { pt3dadd( 397.603, 257.503, 14.6603, 0.3976 ) }
    dend_13 { pt3dadd( 398.177, 258.459, 14.2691, 0.3734 ) }
    dend_13 { pt3dadd( 398.75, 259.416, 13.8317, 0.3988 ) }
    dend_13 { pt3dadd( 399.28, 260.404, 13.3724, 0.334 ) }
    dend_13 { pt3dadd( 399.756, 261.426, 12.9149, 0.3 ) }
    dend_13 { pt3dadd( 400.231, 262.448, 12.4683, 0.2748 ) }
    dend_13 { pt3dadd( 400.707, 263.47, 12.0501, 0.275 ) }
    dend_13 { pt3dadd( 401.183, 264.492, 11.669, 0.2752 ) }
    dend_13 { pt3dadd( 401.751, 265.479, 11.3576, 0.2758 ) }
    dend_13 { pt3dadd( 402.372, 266.439, 11.123, 0.2768 ) }
    dend_13 { pt3dadd( 402.994, 267.399, 10.9488, 0.2788 ) }
    dend_13 { pt3dadd( 403.616, 268.357, 10.8216, 0.2824 ) }
    dend_13 { pt3dadd( 404.334, 269.247, 10.7349, 0.2882 ) }
    dend_13 { pt3dadd( 405.192, 270.003, 10.6848, 0.305 ) }
    dend_13 { pt3dadd( 406.051, 270.76, 10.6558, 0.305 ) }
    dend_13 { pt3dadd( 406.909, 271.516, 10.6324, 0.4576 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 348.128, 231.872, 13.2791, 0.368 ) }
    dend_12 { pt3dadd( 347.623, 232.078, 11.7957, 0.2288 ) }
    dend_12 { pt3dadd( 346.542, 232.222, 11.6345, 0.2886 ) }
    dend_12 { pt3dadd( 345.416, 232.424, 11.5795, 0.3002 ) }
    dend_12 { pt3dadd( 344.28, 232.557, 11.5374, 0.3242 ) }
    dend_12 { pt3dadd( 343.216, 232.191, 11.5075, 0.356 ) }
    dend_12 { pt3dadd( 342.461, 231.34, 11.4888, 0.4774 ) }
    dend_12 { pt3dadd( 341.361, 231.054, 11.48, 0.3982 ) }
    dend_12 { pt3dadd( 340.221, 230.953, 11.48, 0.356 ) }
    dend_12 { pt3dadd( 339.081, 230.859, 11.48, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_32, dend_7, dend_0, dend_38, dend_33, dend_23, dend_8, dend_6, dend_1, dend_42, dend_39, dend_37, dend_34, dend_27, dend_24, dend_16, dend_9, dend_5, dend_2, dend_41, dend_40, dend_36, dend_35, dend_29, dend_28, dend_26, dend_25, dend_18, dend_17, dend_15, dend_10, dend_4, dend_3, dend_31, dend_30, dend_20, dend_19, dend_14, dend_11, dend_22, dend_21, dend_13, dend_12]}
    dend = new SectionList()
    dend_32 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_38 dend.append()
    dend_33 dend.append()
    dend_23 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_42 dend.append()
    dend_39 dend.append()
    dend_37 dend.append()
    dend_34 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_16 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_15 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_14009, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_14009 = new SectionList()
    soma_0 OneSecGrp_SectionRef_14009.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.3007824  // units: uF/cm2
    forsec axon cm = 2.3007824  // units: uF/cm2
    forsec dend cm = 2.3007824  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 67.29928  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.002347545  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 8.870447E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.38141078  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 5.7720946E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 2.8694232E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 5.9437996E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 3.82437E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.21588224  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 9.4291405E-5  // units: S cm-2
        e_pas_nml2 = -87.420975  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 7.150148E-4  // units: S cm-2
        e_pas_nml2 = -87.420975  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.533879E-7  // units: S cm-2
        e_pas_nml2 = -87.420975  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.1909294E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 1.4505102E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472352327
    forsec soma {
        insert CaDynamics_472352327
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_38 nseg = 3
    dend_6 nseg = 9
    dend_1 nseg = 5
    dend_42 nseg = 5
    dend_37 nseg = 5
    dend_34 nseg = 3
    dend_24 nseg = 3
    dend_40 nseg = 5
    dend_36 nseg = 3
    dend_35 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 3
    dend_26 nseg = 5
    dend_15 nseg = 3
    dend_4 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472352327


