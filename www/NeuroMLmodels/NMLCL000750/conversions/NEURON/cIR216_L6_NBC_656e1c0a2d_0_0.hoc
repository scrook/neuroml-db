// Cell: cIR216_L6_NBC_656e1c0a2d_0_0
/*
{
  "id" : "cIR216_L6_NBC_656e1c0a2d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.36735, -8.08849, 0.0, 2.03688", "4.94549, -7.33368, 0.0, 3.52963", "4.52363, -6.57887, 0.0, 6.0021", "4.10177, -5.82406, 0.0, 7.56762", "3.67992, -5.06925, 0.0, 9.13193", "3.25806, -4.31444, 0.0, 10.2542", "2.8362, -3.55963, 0.0, 11.222", "2.41434, -2.80482, 0.0, 11.981", "1.99249, -2.05001, 0.0, 12.7132", "1.57063, -1.2952, 0.0, 13.4454", "1.14877, -0.540387, 0.0, 14.1776", "0.726915, 0.214423, 0.0, 14.4912", "0.305057, 0.969233, 0.0, 13.9479", "-0.1168, 1.72404, 0.0, 13.0659", "-0.538657, 2.47885, 0.0, 12.184", "-0.960515, 3.23366, 0.0, 11.2453", "-1.38237, 3.98847, 0.0, 10.0927", "-1.80423, 4.74328, 0.0, 8.93171", "-2.22609, 5.49809, 0.0, 7.05094", "-2.64794, 6.2529, 0.0, 4.33066", "-3.0698, 7.00771, 0.0, 2.48073" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.730264, 0.713437, -11.45, 0.92", "-0.730264, 0.713437, -11.45, 0.92", "-2.20896, 1.89814, -11.9306, 0.92", "-3.38387, 2.83946, -12.3125, 1.83", "-4.47235, 3.71152, -12.6663, 0.92", "-5.09421, 4.20974, -12.8684, 0.92", "-6.40032, 5.25617, -13.293, 0.92", "-7.10789, 5.80168, -13.5191, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "5.04974, -5.87006, -8.55, 0.92", "5.04974, -5.87006, -8.55, 0.92", "7.24622, -8.33561, -8.89607, 0.92", "9.44921, -11.1819, -9.42867, 1.83", "10.6519, -12.8162, -9.77351, 0.92", "10.9385, -13.2511, -9.8765, 0.92", "12.281, -15.8419, -10.5258, 0.92", "12.7255, -16.9691, -10.8459, 0.92", "13.2521, -18.8031, -11.4976, 1.38", "13.9611, -21.1691, -12.4863, 0.46", "14.9448, -23.6329, -13.7276, 1.83", "16.2589, -26.3511, -15.3001, 0.46", "16.8802, -27.3353, -16.0281, 1.38", "17.8798, -28.7923, -17.3427, 0.46", "19.1312, -30.6184, -19.5068, 0.46", "20.2234, -32.0343, -21.7397, 1.38", "20.3921, -32.1937, -22.0785, 1.38", "21.436, -32.9037, -24.0522, 0.46", "22.2952, -33.559, -25.8039, 0.92", "23.1801, -34.5819, -27.9439, 0.46", "23.312, -34.8548, -28.3676, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "2.71974, -7.03556, -5.05, 0.92", "2.62072, -7.46834, -5.04313, 0.92", "1.30535, -13.5662, -5.08021, 0.92", "0.777308, -15.9938, -5.11781, 1.83", "-0.201854, -20.6198, -5.25977, 0.92", "-0.903501, -24.0255, -5.41945, 0.92", "-1.26538, -25.6753, -5.5173, 1.83", "-2.21413, -29.5545, -5.85185, 0.92", "-2.3324, -29.9782, -5.90506, 0.92", "-2.97351, -32.1901, -6.26052, 1.38", "-3.76245, -34.9179, -6.76626, 0.46", "-4.39874, -37.2248, -7.26597, 1.38", "-5.04929, -39.5786, -7.81152, 0.46", "-5.32673, -40.63, -8.07344, 0.46", "-6.13623, -43.8258, -8.928, 0.92", "-6.69183, -46.0882, -9.54992, 1.83", "-7.28823, -48.8892, -10.3598, 0.92", "-7.35201, -49.3088, -10.4863, 0.92", "-7.67425, -52.183, -11.3827, 0.92", "-7.87976, -53.7191, -11.9023, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.82973, -8.32706, -2.05, 0.46", "7.06018, -8.76157, -2.04024, 0.46", "8.44083, -11.3272, -1.99948, 0.92", "8.63031, -11.6677, -1.98584, 0.92", "9.561, -13.3031, -1.87196, 0.46", "10.917, -15.6699, -1.63853, 1.38", "12.3953, -18.1627, -1.36159, 0.46", "13.9162, -20.6222, -1.04174, 0.92", "15.3248, -22.7704, -0.711026, 0.46", "17.3245, -25.7108, -0.192356, 1.83", "18.6952, -27.6592, 0.18625, 0.46", "19.7467, -29.1233, 0.50866, 1.38", "21.3761, -31.3336, 1.0444, 0.46", "23.0223, -33.5285, 1.59988, 0.46", "24.0824, -34.928, 1.94783, 1.38", "26.3165, -37.8336, 2.66601, 0.92", "27.3636, -39.2098, 2.99817, 0.92", "28.081, -40.2178, 3.25109, 2.29", "33.2721, -46.8379, 3.21471, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.12027, -4.47357, -1.17, 0.92", "-4.12027, -4.47357, -1.17, 0.92", "-6.96579, -6.86438, -1.26489, 0.92", "-8.53815, -8.24196, -1.23945, 0.92", "-9.47124, -9.11398, -1.16571, 1.38", "-9.8281, -9.45897, -1.11831, 1.38", "-14.2654, -13.8112, -0.458863, 0.92", "-15.9317, -15.4823, -0.158524, 0.92", "-17.2905, -16.8816, 0.145348, 1.38", "-19.4563, -19.1098, 0.724936, 0.92", "-21.0631, -20.7601, 1.18626, 0.92", "-22.1575, -21.8927, 1.50327, 1.38", "-22.4233, -22.1623, 1.58338, 1.38", "-24.9965, -24.8328, 2.26953, 0.92", "-27.0399, -27.016, 2.71265, 0.92", "-28.7364, -28.9022, 2.98825, 1.38", "-30.6711, -31.1251, 3.25533, 0.92", "-30.9897, -31.51, 3.29585, 0.92", "-32.6455, -33.5651, 3.46521, 1.83", "-35.7692, -37.946, 3.64067, 0.92", "-37.9585, -41.1347, 3.67705, 0.92", "-38.2368, -41.5548, 3.67665, 0.92", "-39.4244, -43.3618, 3.67473, 1.83", "-39.7744, -43.9035, 3.67411, 1.83", "-43.7975, -50.1959, 3.66536, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.92026, 7.12893, 0.0, 0.92", "-4.14371, 7.48053, 0.0, 0.92", "-4.42544, 7.9238, 0.0, 0.92", "-6.22432, 10.7543, 0.0, 0.92", "-7.53389, 12.8148, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.0698, 7.00771, 0.0, 0.92", "-10.3878, 20.1015, 0.0, 0.92", "-17.7058, 33.1952, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-7.10789, 5.80168, -13.5191, 0.92", "-9.84009, 2.6917, -14.4903, 0.92", "-11.0177, 1.35133, -14.9088, 0.92", "-12.4397, -0.267351, -15.4143, 1.38", "-14.4776, -2.58699, -16.1387, 0.46", "-16.2695, -4.62664, -16.7756, 0.46" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-7.10789, 5.80168, -13.5191, 0.46", "-3.67633, 10.9554, -13.6722, 0.46", "-3.37683, 11.453, -13.694, 0.46", "-2.08543, 13.6535, -13.8359, 0.92", "-1.73211, 14.3138, -13.8865, 0.92", "0.332072, 18.2284, -14.3352, 0.92", "0.764072, 19.0768, -14.4645, 0.92", "1.71991, 21.1743, -14.8844, 1.38", "2.49305, 22.9097, -15.2496, 0.46", "3.63919, 25.64, -15.8552, 1.38", "5.33201, 29.8125, -16.8688, 0.46", "6.39013, 32.7818, -17.6328, 0.46", "6.63209, 33.4727, -17.8102, 0.46", "7.55552, 36.3219, -18.5405, 0.92", "7.70942, 36.8827, -18.6806, 0.92", "8.47631, 40.1606, -19.465, 0.46", "9.40878, 45.293, -20.5739, 0.46", "9.78092, 47.7805, -21.0765, 1.38", "9.86114, 48.3629, -21.1935, 1.38", "10.2899, 52.175, -21.9308, 0.46", "10.4564, 54.4114, -22.3463, 0.92", "10.4745, 55.1548, -22.4813, 0.92", "10.4836, 58.9559, -23.1962, 0.46", "10.479, 59.5445, -23.3088, 0.46", "10.5339, 61.8384, -23.8016, 1.38", "10.7409, 66.5165, -24.8897, 0.46", "10.9273, 70.2789, -25.8286, 0.46", "11.0656, 72.4504, -26.4545, 0.92", "11.1194, 73.1652, -26.6886, 0.92", "11.4976, 76.6473, -27.9812, 0.46", "11.6174, 77.3282, -28.2772, 0.46", "11.8161, 78.1566, -28.6963, 0.92", "12.307, 79.9364, -29.7443, 0.46", "12.5066, 80.7109, -30.2664, 0.46", "12.9993, 83.1714, -31.9313, 0.46", "13.0591, 83.8133, -32.3122, 0.46", "13.1144, 85.0406, -32.9434, 0.92", "13.1311, 85.8798, -33.3706, 0.92", "12.8966, 90.0454, -35.3018, 0.46", "12.7932, 90.8983, -35.7271, 0.46", "12.0798, 95.0657, -37.8516, 0.46", "11.7182, 97.0973, -38.9466, 0.92", "11.1687, 100.05, -40.5755, 0.46", "10.6292, 102.861, -42.1585, 0.92", "9.89184, 106.635, -44.3109, 0.46", "9.80589, 107.26, -44.7098, 0.46", "9.64997, 109.169, -46.062, 0.46", "9.68758, 109.953, -46.5897, 0.46", "10.0714, 112.411, -47.8875, 0.46", "10.379, 113.76, -48.5058, 0.92", "11.3062, 117.632, -49.9467, 0.46", "11.4698, 118.322, -50.199, 0.46", "12.915, 123.989, -52.2254, 0.46", "14.3393, 129.512, -54.2024, 0.46", "14.5146, 130.204, -54.4406, 0.46", "15.0518, 132.375, -55.1721, 0.92", "16.3517, 137.82, -56.8833, 0.46", "17.2082, 141.25, -58.029, 0.46", "17.3565, 141.793, -58.2274, 0.46", "18.2346, 144.563, -59.2873, 0.46", "18.4721, 145.231, -59.536, 0.46", "19.0102, 146.664, -60.0348, 0.92", "19.2669, 147.344, -60.2319, 0.92", "21.0953, 152.242, -61.6322, 0.46", "21.3993, 153.103, -61.9217, 0.92", "22.7209, 157.141, -63.4498, 0.46", "22.9855, 157.999, -63.7931, 0.46", "23.2261, 158.843, -64.1734, 0.92", "23.3934, 159.5, -64.4962, 0.92", "24.435, 163.597, -66.75, 0.46", "24.5986, 164.233, -67.11, 0.46", "25.0111, 165.593, -67.8646, 0.92", "25.9168, 168.228, -69.3133, 0.46", "26.1045, 168.726, -69.5787, 0.46", "27.5958, 172.054, -71.3282, 0.46", "27.9009, 172.67, -71.6235, 0.46", "29.5601, 176.251, -73.1991, 0.46", "29.7742, 176.767, -73.4032, 0.46", "30.0461, 177.628, -73.7243, 0.92", "30.3986, 179.096, -74.2814, 0.92", "31.0905, 184.266, -76.1986, 0.46", "31.33, 187.135, -77.2644, 0.46", "31.3486, 188.039, -77.598, 0.46", "31.3367, 193.047, -79.4318, 0.46", "31.3304, 193.609, -79.635, 0.46", "31.306, 195.151, -80.1777, 0.92", "31.2963, 195.855, -80.4457, 0.92", "31.4911, 203.928, -83.7592, 0.46", "31.5318, 204.478, -83.9871, 0.46", "31.7095, 205.778, -84.5177, 0.92", "31.8408, 206.475, -84.8044, 0.92", "32.8499, 210.754, -86.6249, 0.46", "34.4141, 216.399, -88.9989, 0.46", "34.6939, 217.246, -89.3442, 0.92", "36.3761, 222.205, -91.3335, 0.46", "36.992, 223.91, -91.9842, 0.92", "37.5573, 225.351, -92.4991, 0.92", "39.955, 230.784, -94.2067, 0.46", "40.6088, 232.182, -94.6735, 0.92", "41.9812, 235.158, -95.7207, 0.46", "43.7011, 239.004, -97.1645, 0.46", "43.9705, 239.657, -97.4183, 0.46", "44.5899, 241.365, -98.0796, 0.92", "45.8022, 245.0, -99.5258, 0.46", "45.9962, 245.677, -99.7913, 0.46", "47.1921, 250.882, -101.768, 0.46", "47.3458, 251.767, -102.114, 0.46", "47.8921, 255.371, -103.498, 0.46", "47.9668, 256.076, -103.753, 0.46", "48.0191, 256.801, -103.956, 0.92", "48.0447, 257.378, -104.114, 0.92" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "23.312, -34.8548, -28.3676, 0.46", "26.2271, -37.2079, -30.5589, 0.46", "27.9226, -38.5675, -31.8618, 1.38", "28.2679, -38.9154, -32.1107, 1.38", "30.7997, -41.8334, -33.7887, 0.46", "31.1268, -42.2266, -33.9986, 0.46", "33.6998, -45.3192, -35.6494, 1.38", "34.09, -45.843, -35.898, 1.38", "37.3597, -50.5063, -37.7438, 0.46", "38.5335, -52.2466, -38.3725, 0.46", "38.8729, -52.8428, -38.5328, 0.46" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "23.312, -34.8548, -28.3676, 0.92", "20.6835, -35.7174, -29.6681, 0.92", "20.091, -35.8681, -29.9617, 0.92", "17.8307, -36.3691, -31.0581, 0.46", "16.3088, -36.6104, -31.8559, 0.92", "12.5379, -37.0756, -33.9181, 0.46", "10.6402, -37.2466, -35.1009, 0.92", "8.51894, -37.3017, -36.5925, 0.46", "8.12535, -37.2991, -36.9585, 0.46", "6.80308, -37.0616, -38.8827, 0.46", "6.79506, -37.0521, -38.9157, 0.46", "6.88969, -36.0775, -41.5581, 0.46", "6.89401, -36.0657, -41.591, 0.46", "7.66913, -35.0861, -44.8066, 0.46", "7.89116, -34.8592, -45.6165, 0.46", "8.95912, -34.274, -49.3411, 0.46", "9.87844, -33.9456, -52.7705, 0.46", "9.88573, -33.9439, -52.8047, 0.46", "10.5953, -33.8903, -56.6821, 0.46", "10.6525, -33.9038, -57.2162, 0.46", "11.028, -34.2809, -64.0102, 0.46", "11.0152, -34.2998, -64.5354, 0.46", "10.8158, -34.2839, -66.9038, 0.46", "10.8131, -34.2821, -66.927, 0.46", "10.0685, -33.51, -71.3127, 0.46", "9.97853, -33.3706, -71.8262, 0.46", "9.36994, -31.924, -74.3735, 0.46", "9.09641, -30.7367, -76.3268, 0.46", "9.09791, -30.716, -76.3558, 0.46", "9.34564, -29.6498, -77.5705, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.87976, -53.7191, -11.9023, 0.46", "-9.40217, -61.1118, -10.2532, 0.46", "-9.54947, -61.8054, -10.0817, 0.92", "-9.69853, -62.5033, -9.92854, 0.92", "-10.5828, -66.9128, -9.07403, 0.92", "-11.4097, -71.4772, -8.42288, 0.46", "-11.9387, -74.6471, -8.05828, 0.92", "-12.0737, -75.554, -7.97126, 0.92", "-13.1616, -82.8627, -7.49155, 0.46", "-13.5928, -85.7222, -7.38229, 0.92", "-14.5745, -92.2385, -7.28606, 0.46", "-14.8944, -94.3763, -7.29234, 0.92", "-14.979, -94.9415, -7.29759, 0.92", "-15.8149, -100.775, -7.33595, 0.46", "-15.9486, -101.683, -7.33184, 0.92", "-16.9392, -107.633, -7.16862, 0.46", "-17.0706, -108.339, -7.11398, 1.38", "-17.2038, -109.043, -7.04972, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-7.87976, -53.7191, -11.9023, 0.46", "-7.3823, -59.2361, -13.0186, 0.46", "-7.01314, -62.634, -13.7388, 0.46", "-6.84432, -64.0595, -14.0512, 1.38", "-6.7945, -64.5874, -14.1584, 1.38", "-6.57148, -69.778, -15.085, 0.46", "-6.56795, -70.3106, -15.1807, 0.46", "-6.65679, -72.5208, -15.5613, 1.38", "-6.72655, -73.2005, -15.6803, 1.38", "-7.27839, -76.67, -16.3642, 0.92", "-7.82048, -79.172, -16.9016, 0.92", "-8.33232, -80.8291, -17.2824, 0.92", "-8.92025, -82.8805, -17.786, 1.38", "-9.06036, -83.522, -17.9598, 1.38", "-9.37992, -86.3055, -18.8116, 0.46", "-9.32759, -89.155, -19.7852, 0.46", "-9.2667, -89.7985, -19.9969, 0.46", "-8.98197, -91.8365, -20.6093, 1.38", "-8.32539, -95.5219, -21.6848, 0.46", "-8.01838, -97.2117, -22.1515, 1.38", "-7.30121, -101.218, -23.1606, 0.46", "-6.59231, -105.219, -24.1203, 0.46", "-6.16841, -108.075, -24.7787, 1.38", "-6.11411, -108.589, -24.893, 1.38", "-6.01336, -112.006, -25.6167, 0.46", "-6.07177, -114.745, -26.1985, 0.92", "-6.10936, -115.41, -26.3437, 0.92", "-6.42438, -119.583, -27.2878, 0.46", "-6.56555, -121.131, -27.649, 1.38", "-6.96913, -126.644, -28.979, 0.46", "-7.08607, -128.692, -29.4907, 1.38", "-7.26802, -134.087, -30.8825, 0.46", "-7.33475, -136.818, -31.5841, 1.38", "-7.3418, -137.48, -31.7478, 1.38", "-7.34531, -142.35, -32.844, 0.46", "-7.32595, -145.831, -33.5554, 0.46", "-7.3187, -148.171, -33.9859, 1.38", "-7.3193, -149.025, -34.1283, 1.38", "-7.3799, -154.463, -34.9603, 0.46", "-7.42711, -159.331, -35.6535, 0.46", "-7.47926, -162.748, -36.0927, 0.92", "-7.48732, -166.214, -36.4646, 1.38", "-7.50262, -168.979, -36.7168, 0.46", "-7.49799, -169.518, -36.7657, 0.46", "-7.41644, -172.456, -37.0812, 0.92", "-7.39326, -173.143, -37.1829, 0.92", "-7.40485, -176.5, -37.7875, 0.46", "-7.4412, -177.354, -37.9606, 0.46", "-7.66728, -180.794, -38.7474, 0.92", "-7.91037, -183.736, -39.4831, 1.38", "-8.35748, -187.819, -40.5733, 0.46", "-8.72077, -191.276, -41.5189, 0.46", "-8.81059, -192.106, -41.7649, 0.46", "-9.01101, -194.193, -42.3576, 0.46", "-9.07687, -194.847, -42.5349, 0.46", "-9.28938, -196.842, -42.983, 1.38", "-9.73483, -201.593, -43.9526, 0.46", "-9.79632, -202.261, -44.0711, 0.46", "-9.99166, -204.315, -44.4123, 0.92", "-10.0546, -204.99, -44.4934, 0.92", "-10.7568, -211.899, -45.1415, 0.46", "-10.8236, -212.577, -45.1811, 0.46", "-11.1326, -215.35, -45.3146, 1.38", "-11.1962, -216.039, -45.3613, 1.38", "-11.6137, -220.873, -45.7299, 0.46", "-11.6452, -221.398, -45.7904, 0.46", "-11.6658, -223.53, -46.1568, 0.92", "-11.6203, -227.422, -47.0332, 0.46", "-11.5917, -229.197, -47.5315, 1.38", "-11.5758, -229.701, -47.6889, 1.38", "-11.3998, -234.377, -49.3521, 0.46", "-11.3144, -236.147, -49.9967, 1.38", "-11.1467, -239.545, -51.2587, 0.46", "-10.922, -242.997, -52.4354, 0.46", "-10.8062, -244.652, -52.963, 1.38", "-10.7672, -245.167, -53.1203, 1.38", "-10.4591, -248.726, -54.104, 0.46", "-10.2571, -250.789, -54.6282, 1.38", "-9.57905, -256.124, -55.8792, 0.46", "-9.15337, -259.021, -56.4327, 0.46", "-9.08548, -259.552, -56.5118, 0.46", "-8.66346, -263.093, -56.8902, 0.92", "-8.37506, -265.995, -57.0705, 0.46", "-8.20362, -268.094, -57.1466, 0.92", "-7.98175, -271.287, -57.2308, 0.46", "-7.78393, -274.875, -57.3706, 0.46", "-7.65464, -278.279, -57.6131, 0.92", "-7.59608, -282.385, -58.021, 0.46", "-7.61167, -283.737, -58.208, 1.38", "-7.67559, -287.319, -58.855, 0.46", "-7.69566, -290.156, -59.5228, 0.92", "-7.68491, -296.259, -61.1483, 0.46", "-7.68746, -299.594, -62.0965, 0.92", "-7.63548, -302.439, -62.8976, 0.46", "-7.5646, -304.102, -63.3571, 0.92", "-7.28656, -309.036, -64.6748, 0.46", "-7.23417, -309.558, -64.8018, 0.46", "-6.92771, -311.56, -65.1668, 0.92", "-5.33659, -320.426, -66.4254, 0.46", "-4.98684, -322.171, -66.6081, 0.92", "-4.8802, -322.7, -66.6547, 0.92", "-3.35407, -330.219, -67.2993, 0.46", "-2.19421, -335.998, -67.8368, 0.46", "-2.06836, -336.664, -67.9089, 0.46", "-1.7176, -338.741, -68.1498, 1.38", "-0.863355, -344.262, -68.9069, 0.46", "-0.0622087, -349.855, -69.8179, 0.46", "0.178842, -351.853, -70.2477, 1.38", "0.685935, -356.614, -71.5772, 0.46", "0.743188, -357.117, -71.7283, 0.46", "1.06121, -359.947, -72.6566, 0.92", "1.12932, -360.446, -72.846, 0.92", "1.76929, -363.93, -74.2943, 0.46", "2.18253, -365.636, -75.0906, 0.46", "2.98079, -368.197, -76.3743, 0.92", "3.14046, -368.651, -76.6097, 0.92", "4.03302, -371.112, -77.9162, 0.46", "4.66927, -372.881, -78.8376, 0.92", "5.55587, -375.411, -80.1436, 0.46", "6.05382, -376.933, -80.8578, 0.92", "6.23784, -377.53, -81.1187, 0.92", "7.41177, -381.456, -82.74, 0.46", "8.10083, -384.108, -83.724, 0.92", "8.28407, -384.913, -83.9953, 0.92", "9.23172, -389.687, -85.4082, 0.46", "9.48386, -391.092, -85.7913, 0.92", "9.60056, -391.754, -85.9567, 0.92", "10.225, -395.171, -86.6831, 0.46", "10.5915, -397.151, -87.0982, 0.92", "10.7328, -397.81, -87.2574, 0.92", "11.7208, -401.763, -88.2917, 0.46", "11.9227, -402.386, -88.4728, 0.46", "12.6173, -404.299, -89.0557, 0.92", "14.0167, -407.502, -90.1688, 0.92", "15.7851, -411.078, -91.5503, 0.46", "17.1555, -413.72, -92.5993, 0.92", "19.4079, -417.589, -94.2585, 0.46", "19.6696, -418.012, -94.4502, 0.46", "20.9592, -419.898, -95.3849, 0.92", "21.3457, -420.377, -95.645, 0.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "33.2721, -46.8379, 3.21471, 0.92", "39.5212, -56.8041, 4.48, 0.92", "47.4075, -65.3822, 5.82382, 0.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "33.2721, -46.8379, 3.21471, 0.46", "41.2438, -57.091, 4.91795, 0.92", "49.8831, -66.7835, 6.31532, 0.92", "58.5294, -76.2885, 8.57314, 0.92", "67.9203, -85.256, 9.39414, 0.92", "76.4869, -94.8026, 11.7917, 0.92", "84.5175, -104.265, 15.8039, 0.92", "93.2624, -112.026, 21.3437, 0.92", "103.337, -118.838, 25.6116, 0.92", "112.552, -126.452, 30.5417, 0.92", "120.245, -136.686, 33.3029, 0.92", "129.279, -145.731, 35.7452, 0.92", "138.702, -154.285, 38.3225, 0.92", "146.972, -163.352, 42.6638, 0.92", "154.346, -172.892, 47.6505, 0.92", "161.115, -182.362, 53.5361, 0.92", "167.381, -192.134, 59.5284, 0.92", "173.309, -202.009, 65.7097, 0.92", "179.885, -211.031, 72.3978, 0.92", "183.907, -220.777, 80.1095, 0.92", "189.392, -231.129, 85.9832, 0.92", "194.524, -241.702, 91.8211, 0.92", "201.557, -251.703, 96.469, 0.92", "207.995, -262.624, 99.9589, 0.92", "213.847, -273.942, 103.33, 0.92", "219.082, -285.86, 105.688, 0.92", "223.469, -298.036, 108.529, 0.92", "229.159, -309.212, 112.546, 0.92", "234.506, -320.758, 116.052, 0.92", "240.614, -331.813, 119.746, 0.92", "246.34, -342.315, 125.128, 0.92", "250.156, -354.703, 127.964, 0.92", "252.508, -367.141, 131.957, 0.92", "252.346, -380.242, 134.425, 0.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-43.7975, -50.1959, 3.66536, 0.46", "-43.5685, -53.1781, 3.35501, 0.46", "-43.493, -54.1605, 3.25276, 0.92", "-43.4553, -54.6518, 3.20164, 0.92", "-43.3007, -56.665, 2.99213, 0.46", "-43.2707, -57.0546, 2.95158, 0.46", "-43.1894, -58.1131, 2.84142, 0.92", "-41.538, -66.3351, 1.33527, 0.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-43.7975, -50.1959, 3.66536, 0.46", "-46.6701, -52.4507, 3.82873, 0.46", "-47.1514, -52.91, 3.81674, 0.46", "-48.8637, -54.8812, 3.80772, 0.92", "-49.3916, -55.5396, 3.81579, 0.92", "-52.2955, -59.309, 3.79633, 0.46", "-52.9522, -60.1614, 3.79193, 1.38", "-57.2449, -65.9558, 3.73978, 0.46", "-61.9015, -72.4515, 3.66131, 0.46", "-64.1747, -75.7433, 3.6126, 0.46", "-67.0373, -80.0229, 3.54269, 1.38", "-74.1096, -92.8015, 4.58577, 1.38" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.53389, 12.8148, 0.0, 0.92", "-9.93104, 14.7824, 0.865872, 0.92", "-12.0892, 16.5537, 1.64539, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.53389, 12.8148, 0.0, 0.46", "-11.7893, 11.3893, 0.650526, 0.46", "-13.259, 10.8969, 0.8752, 1.38", "-17.0999, 9.61016, 1.46237, 0.46", "-22.2028, 7.90069, 2.24247, 0.46", "-23.2675, 7.54402, 2.40523, 1.38", "-23.8364, 7.35344, 2.4922, 1.38", "-33.3182, 3.07836, 3.8125, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-17.7058, 33.1952, 0.0, 0.92", "-25.0238, 46.289, 0.0, 0.92", "-32.3418, 59.3828, 0.0, 0.92" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.2695, -4.62664, -16.7756, 0.46", "-15.6779, -2.13226, -19.2261, 0.46", "-15.5382, -0.779125, -20.5696, 1.38", "-15.4303, 0.251342, -21.6742, 0.46", "-15.3457, 1.28423, -22.8138, 0.92", "-15.2729, 2.37759, -24.0736, 0.46", "-15.2499, 2.76646, -24.5314, 0.46", "-15.2645, 4.18822, -26.2781, 0.46", "-15.2294, 5.80349, -28.3738, 0.46", "-15.2213, 6.10663, -28.7409, 0.46", "-15.196, 8.15681, -31.1251, 0.92", "-15.1959, 8.17134, -31.1399, 0.92", "-15.1628, 9.74261, -32.5545, 0.46", "-15.0644, 11.4604, -33.9266, 0.46", "-14.9028, 14.67, -36.1899, 0.92", "-14.8797, 15.072, -36.4542, 0.92", "-14.604, 18.3461, -38.4034, 0.46", "-14.4431, 19.9874, -39.3287, 0.92", "-14.1608, 22.3045, -40.5844, 0.46", "-13.832, 24.4692, -41.7562, 0.92", "-13.7559, 24.8853, -41.99, 0.92", "-13.1168, 28.106, -43.8207, 0.46", "-12.9787, 28.7694, -44.206, 0.92", "-12.4659, 31.0936, -45.6173, 0.46", "-12.0746, 32.8628, -46.704, 0.92" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-16.2695, -4.62664, -16.7756, 0.46", "-15.8233, -6.39787, -16.8766, 0.46", "-15.1627, -8.96106, -17.1013, 0.46", "-14.9606, -9.82755, -17.1814, 0.46", "-14.4019, -12.1544, -17.4019, 1.38", "-13.812, -14.4087, -17.7058, 0.46", "-13.2932, -16.0931, -17.971, 0.46", "-13.017, -16.7286, -18.1045, 0.46", "-12.4144, -17.9503, -18.4538, 1.38", "-12.1557, -18.4221, -18.596, 1.38", "-11.0887, -20.2953, -19.253, 0.46", "-10.5594, -21.2001, -19.5822, 1.38", "-8.6875, -24.6429, -20.7384, 0.46", "-7.82037, -26.2596, -21.3319, 0.46", "-7.13496, -27.5039, -21.8291, 1.38", "-5.95452, -29.7541, -22.7248, 0.46", "-5.93928, -29.7848, -22.7368, 0.46", "-5.10881, -31.6507, -23.5026, 0.92", "-4.18163, -33.951, -24.5402, 0.46", "-3.37034, -35.9144, -25.3998, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "38.8729, -52.8428, -38.5328, 0.46", "39.1014, -54.2656, -37.7837, 0.46", "39.3473, -55.3218, -37.2219, 0.92", "40.2831, -58.6789, -35.3649, 0.46", "40.5505, -59.556, -34.878, 0.92", "41.2637, -61.8959, -33.579, 0.46", "41.513, -62.7137, -33.125, 0.92", "42.154, -64.5766, -32.0777, 0.46", "43.0056, -66.7486, -30.8271, 0.46", "43.3529, -67.511, -30.3594, 0.92" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "38.8729, -52.8428, -38.5328, 0.46", "39.4235, -53.2308, -39.023, 0.46", "40.2915, -53.9033, -39.8316, 0.46", "40.8324, -54.3331, -40.3506, 1.38", "41.5598, -54.9024, -41.0532, 0.46", "41.7589, -55.0536, -41.2473, 0.92", "42.3392, -55.4935, -41.8175, 0.46", "42.8033, -55.8515, -42.2767, 0.92", "43.199, -56.1789, -42.676, 0.46", "43.5678, -56.4857, -43.0574, 1.38", "44.2544, -57.0384, -43.7518, 0.46", "44.366, -57.1254, -43.862, 0.46", "45.0719, -57.6778, -44.5324, 1.38", "45.1816, -57.776, -44.6292, 1.38", "46.1372, -58.7235, -45.4651, 0.46", "46.5032, -59.1232, -45.7795, 1.38", "47.0953, -59.813, -46.2982, 0.46", "47.3945, -60.1737, -46.562, 1.38", "48.2624, -61.2482, -47.318, 0.46", "48.6023, -61.6542, -47.6157, 1.38", "49.4221, -62.6394, -48.3666, 0.46", "49.8004, -63.1024, -48.7228, 1.38", "50.2562, -63.6581, -49.1401, 0.46", "50.489, -63.9371, -49.363, 1.38", "51.2815, -64.8503, -50.1237, 0.46", "51.5921, -65.2157, -50.4184, 0.46", "51.6898, -65.3345, -50.5134, 0.46", "52.157, -65.9265, -50.9535, 0.92", "52.6262, -66.5604, -51.418, 0.46", "53.0754, -67.1888, -51.8564, 0.92", "53.5012, -67.7932, -52.2527, 0.46", "53.6005, -67.9212, -52.3348, 0.46", "54.314, -68.8029, -52.899, 0.92", "54.4853, -69.0049, -53.0245, 0.92", "55.3332, -69.9406, -53.5596, 0.46", "55.3383, -69.9459, -53.5625, 0.46", "55.9224, -70.5249, -53.8689, 0.92", "56.5313, -71.1297, -54.1957, 0.46", "56.9195, -71.5105, -54.4018, 0.92", "57.2918, -71.8823, -54.597, 0.46", "57.8614, -72.4533, -54.9026, 0.92", "58.6472, -73.2473, -55.3393, 0.46", "59.3099, -73.9119, -55.7112, 0.46", "59.5987, -74.1895, -55.8696, 0.92", "59.7951, -74.3745, -55.9807, 0.92", "60.4284, -74.9308, -56.3231, 0.46", "60.5558, -75.0416, -56.39, 0.46", "61.1905, -75.5677, -56.6944, 0.92", "61.3591, -75.711, -56.7687, 0.92", "62.3389, -76.5804, -57.1994, 0.46", "62.845, -77.0349, -57.4208, 0.92", "62.9695, -77.1577, -57.473, 0.92", "63.937, -78.148, -57.868, 0.46", "64.449, -78.7079, -58.0722, 0.46", "64.8465, -79.1724, -58.2152, 0.92", "64.8514, -79.1785, -58.2168, 0.92", "65.7774, -80.4094, -58.489, 0.46", "66.1247, -80.877, -58.5883, 0.92", "66.2273, -81.0228, -58.6149, 0.92", "67.2673, -82.5101, -58.8703, 0.46", "67.3713, -82.6597, -58.8973, 0.46", "67.7784, -83.2459, -59.0029, 0.92", "68.1396, -83.8118, -59.1212, 0.46", "68.2352, -83.965, -59.1569, 0.46", "68.707, -84.689, -59.3667, 0.92", "69.481, -85.8042, -59.7525, 0.46", "70.0228, -86.5304, -60.033, 0.92", "70.6649, -87.3618, -60.3595, 0.46", "71.1934, -88.0264, -60.6111, 0.92", "72.0684, -89.0927, -60.9949, 0.46", "72.4416, -89.5362, -61.1389, 0.92", "73.3827, -90.5768, -61.417, 0.46", "74.022, -91.2594, -61.556, 0.46", "74.3632, -91.6236, -61.5892, 0.46", "75.0388, -92.3657, -61.6112, 0.46", "75.7058, -93.1071, -61.5946, 0.92", "76.2616, -93.7299, -61.5902, 0.46", "76.7282, -94.2477, -61.6084, 0.92", "78.7623, -96.452, -61.8272, 0.46", "79.3581, -97.0981, -61.9395, 0.92", "79.5121, -97.2655, -61.9814, 0.92", "80.2994, -98.1236, -62.2552, 0.46", "80.7707, -98.6473, -62.438, 0.46", "81.0514, -98.9556, -62.5557, 0.92", "81.6287, -99.5984, -62.7997, 0.46", "81.9526, -99.9552, -62.9187, 0.92", "83.5201, -101.668, -63.4105, 0.46", "84.1592, -102.343, -63.5728, 0.92", "84.3168, -102.508, -63.6126, 0.92", "85.3984, -103.631, -63.8999, 0.46", "85.812, -104.044, -64.0209, 0.92", "86.7506, -104.95, -64.3271, 0.46", "87.2557, -105.429, -64.5008, 0.92", "88.3303, -106.423, -64.8655, 0.46", "88.8885, -106.937, -65.0446, 0.92", "89.8541, -107.823, -65.3528, 0.46", "90.4871, -108.409, -65.5477, 0.92", "91.7849, -109.581, -65.9252, 0.46", "92.5136, -110.242, -66.1242, 0.92", "93.5415, -111.136, -66.363, 0.46" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "21.3457, -420.377, -95.645, 0.46", "22.5057, -420.814, -97.0987, 0.46", "22.8411, -420.966, -97.5167, 0.46", "25.8429, -423.14, -101.247, 0.46", "26.2304, -423.497, -101.728, 0.92", "27.9503, -425.192, -103.866, 0.46", "28.603, -425.865, -104.64, 0.92", "28.8907, -426.222, -104.974, 0.92", "30.8182, -428.897, -107.157, 0.46", "32.0093, -430.796, -108.469, 0.46", "32.2772, -431.201, -108.768, 0.46", "33.8608, -433.288, -110.59, 0.92", "34.0816, -433.55, -110.879, 0.92", "35.7109, -435.325, -113.218, 0.46", "36.6571, -436.415, -114.921, 0.92", "36.861, -436.682, -115.371, 0.92", "37.7085, -438.211, -117.908, 0.46", "38.154, -439.417, -120.095, 0.46", "38.159, -439.437, -120.128, 0.46", "38.5036, -441.589, -123.4, 0.46", "38.5558, -441.92, -123.854, 0.46", "38.9105, -443.434, -125.533, 0.46", "39.0538, -443.834, -125.912, 0.46", "40.0148, -445.432, -127.507, 0.92", "41.492, -447.322, -129.616, 0.46", "41.73, -447.542, -129.922, 0.92", "43.6254, -449.193, -132.274, 0.46", "44.9494, -450.212, -133.831, 0.46", "47.3876, -452.033, -136.722, 0.46", "47.8081, -452.309, -137.231, 0.46", "49.9488, -453.664, -139.799, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "21.3457, -420.377, -95.645, 0.46", "21.9262, -423.758, -96.3997, 0.46", "23.0936, -430.045, -97.818, 0.46", "23.2624, -430.902, -98.0103, 0.92", "23.5279, -432.259, -98.3085, 0.92", "24.6533, -439.202, -99.7106, 0.46", "24.9376, -441.343, -100.113, 0.92", "25.4182, -445.582, -100.845, 0.46", "25.6079, -447.747, -101.182, 0.92", "25.6453, -448.301, -101.264, 0.92", "25.8857, -455.493, -102.284, 0.46", "25.8308, -458.406, -102.646, 0.46", "25.7838, -459.107, -102.728, 0.46", "25.5196, -461.959, -103.066, 0.92", "25.4581, -462.659, -103.149, 0.92", "25.0306, -468.442, -103.873, 0.46", "24.9907, -468.996, -103.948, 0.46", "24.4976, -475.45, -104.848, 0.46", "24.435, -476.147, -104.947, 0.46", "23.8819, -481.025, -105.634, 0.92", "23.7974, -481.722, -105.719, 0.92", "23.2094, -486.125, -106.183, 0.46", "23.086, -486.818, -106.234, 0.46", "22.4472, -489.754, -106.324, 0.46", "22.3325, -490.301, -106.338, 0.46", "21.3653, -494.582, -106.409, 0.92", "21.2124, -495.27, -106.415, 0.92", "19.8398, -501.507, -106.369, 0.46", "18.027, -509.995, -106.298, 0.46", "17.581, -512.155, -106.275, 0.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "47.4075, -65.3822, 5.82382, 0.92", "53.1363, -75.5189, 9.02576, 0.92", "60.3319, -84.4086, 12.6094, 0.92", "65.9533, -94.7905, 15.2073, 0.92", "71.1117, -105.725, 15.9133, 0.92", "76.4083, -116.537, 14.9107, 0.92", "82.2838, -127.064, 15.6551, 0.92", "87.6227, -137.918, 15.9803, 0.92", "92.1077, -149.159, 15.3248, 0.92", "95.7955, -160.419, 12.8671, 0.92", "100.87, -170.685, 9.24719, 0.92", "103.694, -181.426, 4.60928, 0.92", "107.718, -192.49, 1.89406, 0.92", "110.945, -204.183, 1.08618, 0.92", "115.69, -215.325, 1.75078, 0.92", "121.197, -225.929, 3.6492, 0.92", "125.867, -237.118, 3.65924, 0.92", "129.151, -248.814, 4.51217, 0.92", "134.339, -259.561, 2.72242, 0.92", "139.127, -270.621, 1.63188, 0.92", "144.525, -281.442, 1.93485, 0.92", "150.377, -291.937, 3.19282, 0.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "47.4075, -65.3822, 5.82382, 0.46", "54.7457, -70.6509, 2.85008, 0.92", "62.7356, -75.0214, 0.225899, 0.92", "70.8051, -78.1318, -3.5433, 0.92", "79.0023, -82.2374, -5.91657, 0.92", "87.4124, -85.3839, -8.82565, 0.92", "96.0166, -87.8801, -11.7525, 0.92", "103.8, -90.6474, -16.288, 0.92", "111.743, -92.1273, -21.1092, 0.92", "118.752, -93.7981, -27.1588, 0.92", "125.526, -95.0098, -33.5737, 0.92", "131.951, -97.2393, -40.0795, 0.92", "137.739, -98.9192, -47.3028, 0.92", "143.608, -100.783, -54.4165, 0.92", "148.809, -104.434, -61.3848, 0.92", "153.537, -109.338, -67.9599, 0.92", "158.597, -114.067, -74.4073, 0.92", "165.656, -116.554, -80.1206, 0.92", "171.901, -119.096, -86.6904, 0.92", "179.558, -121.351, -91.6831, 0.92", "187.501, -123.868, -96.0786, 0.92", "195.195, -124.798, -101.411, 0.92", "202.95, -126.372, -106.502, 0.92", "210.104, -127.627, -112.481, 0.92", "218.009, -128.04, -117.567, 0.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "252.346, -380.242, 134.425, 0.92", "254.703, -389.129, 137.21, 0.92", "256.703, -397.504, 141.37, 0.92", "260.154, -405.442, 145.354, 0.92", "264.319, -412.609, 149.937, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "252.346, -380.242, 134.425, 0.46", "259.956, -386.576, 137.051, 0.92", "267.368, -392.253, 141.2, 0.92", "275.377, -397.361, 144.873, 0.92", "283.743, -401.117, 149.178, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-12.0892, 16.5537, 1.64539, 0.46", "-15.0597, 19.0579, 1.24264, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.0892, 16.5537, 1.64539, 0.46", "-11.077, 17.709, 3.41603, 0.46", "-9.55703, 18.9088, 5.85307, 0.92", "-8.70599, 19.5954, 7.04026, 0.46", "-7.52746, 20.5813, 8.63837, 0.92", "-7.14001, 20.9138, 9.12341, 0.92", "-5.59903, 22.297, 10.9712, 0.46", "-4.31495, 23.3032, 12.466, 0.92", "-2.31209, 24.7057, 14.5509, 0.46", "-1.9657, 24.9664, 14.868, 0.46", "-0.631188, 26.2038, 16.0222, 0.92", "-0.201118, 26.627, 16.3704, 0.92", "5.02514, 31.6846, 25.8081, 0.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-33.3182, 3.07836, 3.8125, 0.92", "-41.2571, 0.351511, 3.50458, 0.92", "-49.4575, -1.11098, 4.24657, 0.92", "-57.6076, -2.86181, 4.97323, 0.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-33.3182, 3.07836, 3.8125, 0.46", "-41.2374, -0.0804964, 4.83768, 0.92", "-48.9506, -3.90418, 5.17281, 0.92", "-56.2888, -8.38667, 4.20909, 0.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-12.0746, 32.8628, -46.704, 0.46", "-12.1838, 34.9594, -48.3652, 0.46", "-12.3233, 36.7706, -49.8774, 0.46", "-12.355, 37.9535, -50.8382, 0.92", "-12.3392, 39.8184, -52.4058, 0.46", "-12.3274, 40.2254, -52.7795, 0.46", "-12.1938, 41.7691, -54.238, 0.46", "-12.1595, 42.2603, -54.73, 0.46", "-12.1776, 43.7712, -56.2809, 0.92", "-12.3036, 45.6763, -58.2634, 0.46", "-12.6381, 47.8331, -60.4402, 0.46", "-12.9085, 49.0744, -61.6828, 0.92", "-13.9932, 52.6988, -65.1873, 0.46", "-14.6817, 54.6193, -67.0422, 0.46", "-14.8411, 54.9964, -67.4046, 0.46", "-15.5336, 56.6304, -68.8653, 0.92", "-16.2811, 58.8315, -70.8158, 0.46", "-16.4799, 60.4735, -72.256, 0.92", "-16.1778, 63.5204, -74.891, 0.46", "-16.1732, 63.5385, -74.9063, 0.46", "-15.6312, 65.1178, -76.2015, 0.92", "-14.1089, 68.6375, -79.0617, 0.46", "-11.978, 73.0101, -82.5347, 0.46", "-11.9646, 73.0368, -82.5554, 0.46", "-10.6416, 75.9037, -84.746, 0.46", "-9.743, 78.0821, -86.3919, 0.92", "-8.73998, 81.289, -88.724, 0.46", "-8.73403, 81.3186, -88.7441, 0.46", "-8.52129, 83.3186, -90.0611, 0.92", "-8.27545, 86.256, -91.9684, 0.46", "-8.2487, 86.8475, -92.3434, 0.46", "-8.0802, 91.9928, -95.5668, 0.46", "-8.05556, 92.4705, -95.853, 0.46", "-7.88565, 94.9162, -97.3464, 0.92", "-7.63989, 98.2104, -99.381, 0.46", "-7.61929, 98.9644, -99.8652, 0.92", "-7.63779, 99.5408, -100.26, 0.92", "-8.07036, 103.018, -102.875, 0.46", "-8.70582, 105.312, -104.729, 0.46", "-9.17986, 106.011, -105.412, 0.92", "-11.5896, 107.811, -107.57, 0.46", "-12.0245, 107.967, -107.837, 0.46", "-13.2149, 108.197, -108.42, 0.46", "-15.9216, 108.443, -109.627, 0.92", "-18.4595, 108.599, -110.758, 0.46", "-18.9308, 108.644, -111.003, 0.46", "-22.2851, 109.172, -113.279, 0.92", "-24.4064, 109.697, -115.124, 0.46", "-25.8215, 110.375, -117.002, 0.92", "-26.0729, 110.604, -117.589, 0.92", "-26.7979, 111.721, -120.806, 0.46", "-27.1625, 112.989, -124.528, 0.46", "-27.1626, 113.026, -124.639, 0.46", "-26.976, 114.48, -129.263, 0.46", "-26.7156, 115.75, -133.43, 0.46", "-26.3881, 116.966, -137.392, 1.38", "-25.9529, 118.159, -141.218, 0.46", "-25.949, 118.17, -141.251, 0.46", "-25.7635, 119.025, -143.28, 0.46", "-25.7628, 119.037, -143.3, 0.46", "-25.9323, 121.883, -146.858, 0.46", "-25.935, 121.9, -146.875, 0.46", "-26.255, 123.73, -148.373, 0.92", "-26.8307, 127.509, -150.979, 0.46", "-27.2452, 130.514, -152.79, 0.46", "-27.4876, 132.412, -153.812, 0.92", "-27.9905, 136.267, -155.634, 0.46", "-28.2813, 138.822, -156.746, 0.92", "-28.7468, 144.251, -158.903, 0.46", "-28.7788, 144.923, -159.139, 0.46", "-28.9549, 148.408, -160.292, 0.46", "-29.0514, 150.113, -160.876, 0.92", "-29.4544, 155.827, -162.847, 0.46", "-29.5769, 157.244, -163.341, 0.92", "-30.3507, 165.164, -166.129, 0.46", "-31.0791, 172.171, -168.625, 0.46", "-31.5732, 176.648, -170.251, 0.46", "-31.6674, 177.483, -170.56, 0.92" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-12.0746, 32.8628, -46.704, 0.46", "-9.49852, 35.5377, -49.5329, 0.46", "-8.46879, 36.6162, -50.6155, 0.46", "-7.90181, 37.212, -51.2517, 0.92", "-6.48146, 38.7352, -52.9155, 0.46", "-4.74637, 40.4956, -54.9501, 0.46", "-4.52375, 40.7166, -55.2112, 0.46", "-1.94042, 43.103, -58.1985, 0.46", "-0.422049, 44.4585, -59.934, 0.46", "-0.193166, 44.657, -60.1926, 0.46", "1.54025, 46.165, -62.1475, 0.46", "1.83021, 46.4235, -62.4838, 0.46", "3.73443, 48.0019, -64.6122, 0.46", "3.97886, 48.1749, -64.8728, 0.46", "4.41755, 48.4766, -65.253, 0.92" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-3.37034, -35.9144, -25.3998, 0.46", "-2.3963, -35.3321, -25.9853, 0.46", "-1.2048, -34.6198, -26.7015, 0.92", "0.310157, -33.7142, -27.6122, 0.46", "1.15872, -33.2069, -28.1222, 0.46", "2.07959, -32.6564, -28.6758, 0.92" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-3.37034, -35.9144, -25.3998, 0.46", "-5.27186, -36.228, -27.4404, 0.46", "-6.7077, -36.4862, -28.8751, 0.46", "-8.26799, -36.9335, -30.1986, 0.92", "-9.61141, -37.3757, -31.1789, 0.46", "-10.0397, -37.5436, -31.4548, 0.46", "-11.58, -38.2061, -32.3741, 0.46", "-13.5167, -39.036, -33.4182, 0.92", "-15.9179, -40.21, -34.5336, 0.46", "-17.0992, -40.7819, -34.9939, 0.92", "-19.806, -41.9381, -35.9571, 0.46", "-20.4138, -42.1739, -36.1697, 1.38", "-22.3329, -42.7933, -36.8124, 0.46", "-22.35, -42.7979, -36.8178, 0.46", "-25.1871, -43.4622, -37.6904, 0.92", "-27.2041, -43.8588, -38.2773, 0.46", "-28.7896, -44.2545, -38.6697, 0.46", "-29.2926, -44.4006, -38.7848, 0.46", "-30.9378, -45.0032, -39.0932, 0.92", "-34.4442, -46.469, -39.6952, 0.46", "-36.4708, -47.4576, -39.997, 1.38", "-39.9206, -49.3681, -40.4104, 0.46", "-40.381, -49.6472, -40.4657, 0.46", "-42.3582, -50.9199, -40.7372, 0.92", "-43.0866, -51.4257, -40.8389, 1.38", "-43.4295, -51.6676, -40.8801, 1.38", "-46.3915, -53.852, -41.2402, 0.46", "-47.0902, -54.3304, -41.3179, 0.46", "-48.1306, -55.0684, -41.451, 1.38", "-51.7011, -57.6026, -41.9198, 0.46", "-53.1857, -58.6562, -42.1346, 1.38", "-55.9101, -60.4265, -42.6557, 0.46", "-57.4243, -61.356, -42.9483, 1.38", "-59.378, -62.5419, -43.3457, 0.46", "-60.5394, -63.262, -43.6388, 0.92", "-62.2554, -64.2643, -44.2355, 0.46", "-64.7124, -65.6633, -45.2462, 0.46" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "93.5415, -111.136, -66.363, 0.46", "98.4623, -115.399, -65.4326, 0.46", "101.255, -117.798, -65.0519, 0.46", "103.091, -119.348, -64.872, 0.92", "106.211, -121.915, -64.6843, 0.46", "107.811, -123.177, -64.6927, 0.92", "112.68, -126.899, -64.9211, 0.46", "114.295, -128.093, -65.1259, 0.92", "115.923, -129.283, -65.349, 0.46", "118.384, -131.029, -65.7294, 0.92", "123.628, -134.793, -66.5111, 0.46", "126.057, -136.585, -66.8343, 0.92", "132.531, -141.414, -67.6478, 0.46", "136.515, -144.373, -68.0936, 0.46", "139.288, -146.434, -68.3684, 0.92", "143.847, -149.852, -68.7348, 0.46", "148.147, -153.121, -68.9832, 0.46", "148.648, -153.502, -69.0108, 0.92", "153.599, -157.19, -69.3333, 0.46", "153.622, -157.205, -69.3348, 0.46", "154.144, -157.556, -69.3619, 0.92" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "93.5415, -111.136, -66.363, 0.46", "96.201, -113.177, -68.6882, 0.46", "97.8696, -114.372, -70.1383, 0.46", "99.304, -115.457, -71.2712, 0.46", "99.631, -115.71, -71.4985, 0.46", "101.888, -117.427, -72.9622, 0.92", "102.228, -117.68, -73.1696, 0.92", "103.849, -118.88, -74.1287, 0.46", "106.393, -120.641, -75.5469, 0.46", "109.599, -122.766, -77.2244, 0.46", "110.465, -123.32, -77.6661, 0.92", "114.036, -125.551, -79.4059, 0.46", "116.192, -126.855, -80.4633, 0.46", "118.165, -128.004, -81.4354, 0.46", "119.642, -128.827, -82.1706, 0.92", "122.673, -130.465, -83.6728, 0.46", "124.155, -131.228, -84.4378, 0.92", "126.94, -132.584, -85.9199, 0.46", "127.821, -133.001, -86.4243, 1.38", "129.697, -133.904, -87.5758, 0.46", "131.222, -134.626, -88.5698, 0.92", "133.518, -135.652, -90.1771, 0.46", "136.365, -136.833, -92.2663, 0.46", "138.915, -137.807, -94.2277, 0.46", "140.371, -138.352, -95.4235, 0.46", "141.669, -138.831, -96.5958, 0.92", "144.549, -139.94, -99.2656, 0.46", "145.526, -140.323, -100.187, 0.92", "146.988, -140.84, -101.676, 0.46", "148.996, -141.488, -103.815, 0.46", "150.475, -141.92, -105.548, 0.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "150.377, -291.937, 3.19282, 0.92", "155.743, -304.77, 3.97284, 0.92", "161.27, -317.29, 6.55082, 0.92", "168.308, -329.171, 7.69644, 0.92", "176.124, -340.54, 7.33971, 0.92", "182.674, -352.599, 9.43911, 0.92" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "150.377, -291.937, 3.19282, 0.46", "155.147, -301.687, 2.679, 0.92", "158.746, -311.879, 1.23386, 0.92", "161.231, -322.337, -0.750343, 0.92", "164.593, -332.46, -2.98837, 0.92", "168.391, -342.153, -6.08987, 0.92" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "218.009, -128.04, -117.567, 0.92", "225.498, -131.243, -124.501, 0.92", "234.584, -133.723, -129.547, 0.92", "243.442, -134.643, -135.438, 0.92", "251.981, -135.695, -141.76, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "218.009, -128.04, -117.567, 0.46", "228.26, -130.946, -122.69, 0.92", "238.257, -135.393, -127.248, 0.92", "247.705, -138.95, -133.425, 0.92", "255.785, -143.174, -141.0, 0.92", "263.487, -145.956, -149.533, 0.92", "271.401, -146.396, -158.29, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-15.0597, 19.0579, 1.24264, 0.92", "-15.3692, 22.1175, 1.79768, 0.92", "-15.566, 24.491, 2.24544, 1.38", "-16.0209, 30.5217, 3.30419, 0.92", "-16.1313, 32.9097, 3.69928, 1.38", "-16.2086, 37.6679, 4.47121, 0.92", "-16.1625, 41.8818, 5.13674, 0.92", "-16.1261, 42.4679, 5.22129, 0.92", "-15.7817, 45.7232, 5.61162, 0.92", "-15.4311, 48.164, 5.84968, 0.92", "-14.7946, 52.3035, 6.18074, 1.38", "-14.3233, 55.3738, 6.38475, 0.92", "-13.7836, 59.0996, 6.63217, 1.38", "-13.1765, 64.0914, 7.09398, 0.92", "-12.9417, 66.5265, 7.39381, 0.92", "-12.9119, 67.1127, 7.48055, 0.92", "-12.8759, 68.2846, 7.66642, 1.38", "-12.8615, 71.8258, 8.338, 0.92", "-12.9324, 74.4982, 8.99968, 0.92", "-13.0875, 76.7648, 9.73271, 1.38", "-13.2853, 78.9978, 10.5187, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.0597, 19.0579, 1.24264, 0.46", "-18.635, 16.4852, -0.855564, 0.46", "-19.9232, 15.3985, -1.71094, 0.92", "-20.3378, 15.0488, -1.98623, 0.92", "-23.8057, 12.1236, -4.28887, 0.46", "-26.7528, 9.63775, -6.24569, 1.38", "-28.7928, 7.917, -7.60023, 0.46", "-31.6567, 5.91377, -9.57847, 1.38", "-41.3273, -0.571305, -15.7174, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.02514, 31.6846, 25.8081, 0.92", "11.6906, 37.5746, 33.8632, 0.92", "16.4134, 44.8597, 42.2721, 0.92", "21.3196, 50.6507, 51.5762, 0.92", "27.0804, 56.0771, 60.5767, 0.92", "33.9018, 61.7348, 68.6499, 0.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.02514, 31.6846, 25.8081, 0.46", "9.11018, 35.6022, 35.0154, 0.92", "12.3873, 39.8433, 44.4173, 0.92", "15.2387, 44.8866, 53.6033, 0.92", "19.7647, 48.1562, 62.8261, 0.92", "24.3475, 50.3091, 72.3005, 0.92", "29.2245, 54.5732, 80.9703, 0.92", "34.2075, 59.8536, 89.0625, 0.92", "37.9642, 64.5589, 98.0814, 0.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-57.6076, -2.86181, 4.97323, 0.92", "-68.4935, -5.53199, 6.17211, 0.92", "-79.1354, -9.34258, 6.13618, 0.92", "-90.0007, -12.1077, 7.32638, 0.92", "-101.134, -13.6582, 7.83874, 0.92", "-112.147, -13.5918, 10.0978, 0.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-57.6076, -2.86181, 4.97323, 0.46", "-70.2211, -5.60568, 4.65898, 0.92", "-82.8287, -7.61872, 2.62407, 0.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-56.2888, -8.38667, 4.20909, 0.92", "-62.6786, -11.7378, 4.84602, 0.92", "-68.5098, -15.8854, 6.14597, 0.92", "-74.9837, -19.0628, 6.7479, 0.92", "-81.8239, -21.3286, 6.94649, 0.92", "-88.3212, -24.5037, 7.27014, 0.92", "-94.4682, -27.9799, 8.86783, 0.92", "-101.053, -30.8524, 9.62175, 0.92", "-107.964, -32.5914, 10.5841, 0.92", "-114.889, -34.5382, 10.2077, 0.92", "-121.95, -35.4554, 9.26052, 0.92", "-128.93, -36.295, 7.78303, 0.92", "-135.694, -36.4038, 5.38871, 0.92", "-142.526, -36.0883, 3.223, 0.92", "-149.518, -35.5362, 1.71677, 0.92", "-156.272, -34.184, -0.296563, 0.92", "-162.66, -32.2423, -2.9463, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-56.2888, -8.38667, 4.20909, 0.46", "-65.2753, -12.2914, 2.93611, 0.92", "-73.2233, -18.2832, 2.68736, 0.92", "-81.8439, -23.0081, 1.39608, 0.92", "-90.4769, -27.8259, 0.732041, 0.92", "-99.4405, -31.5468, -1.12845, 0.92", "-107.602, -35.7836, -4.88759, 0.92", "-116.356, -39.0587, -8.10246, 0.92", "-125.024, -43.7132, -9.29384, 0.92", "-132.354, -50.5075, -9.31822, 0.92", "-138.443, -58.1722, -11.8402, 0.92", "-143.788, -65.8307, -15.8026, 0.92", "-148.262, -73.5469, -20.6963, 0.92", "-152.434, -81.7823, -25.0261, 0.92", "-157.834, -89.8205, -28.0602, 0.92", "-161.639, -99.0712, -30.0971, 0.92", "-164.468, -108.792, -31.526, 0.92", "-165.693, -118.927, -31.5273, 0.92", "-164.916, -128.91, -29.9093, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-64.7124, -65.6633, -45.2462, 0.46", "-66.8487, -68.3806, -45.2525, 0.46", "-67.6408, -69.4072, -45.3249, 0.92", "-70.6036, -73.239, -45.7038, 0.46", "-70.9036, -73.6457, -45.757, 0.46", "-71.466, -74.4082, -45.8566, 0.92", "-71.8539, -74.9341, -45.9252, 0.92", "-73.7095, -77.4424, -46.4298, 0.46", "-73.9437, -77.7611, -46.5106, 0.46", "-74.7217, -79.0639, -47.0335, 0.92" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-64.7124, -65.6633, -45.2462, 0.46", "-66.5335, -65.4336, -45.1936, 0.46", "-67.3161, -65.5108, -45.1478, 0.46", "-69.1167, -65.8173, -45.0713, 0.92", "-69.7211, -65.9219, -45.045, 0.92", "-72.6578, -66.5033, -45.1118, 0.46", "-73.2571, -66.623, -45.1682, 0.46", "-80.0347, -68.0744, -46.1107, 0.46", "-81.5872, -68.4997, -46.4079, 0.92", "-82.3254, -68.7195, -46.5745, 0.92", "-85.9965, -70.0366, -47.5474, 0.46", "-88.4397, -71.0756, -48.3009, 0.92", "-89.2989, -71.4807, -48.5948, 0.92", "-93.5581, -73.6827, -50.2809, 0.46", "-94.3883, -74.1334, -50.5967, 0.46", "-97.2296, -75.781, -51.5883, 0.46", "-97.7117, -76.1196, -51.7811, 0.46", "-99.9736, -78.0093, -53.0922, 0.92", "-100.506, -78.4678, -53.4718, 0.92", "-102.858, -80.4346, -55.3619, 0.46", "-103.261, -80.7832, -55.6853, 0.46", "-106.382, -83.5953, -58.1189, 0.92", "-109.471, -86.6542, -60.2713, 0.46", "-110.082, -87.3093, -60.6909, 0.46", "-110.859, -88.1528, -61.1921, 0.92", "-113.965, -91.629, -63.0804, 0.46", "-115.206, -93.0461, -63.7899, 0.92", "-118.998, -97.3325, -65.7093, 0.46", "-122.118, -101.148, -67.4587, 0.46", "-124.046, -103.55, -68.6238, 0.92", "-125.694, -105.603, -69.6721, 0.46", "-126.885, -107.028, -70.4775, 0.92", "-127.341, -107.565, -70.8349, 0.92", "-129.532, -110.116, -72.8447, 0.46", "-130.886, -111.784, -74.3056, 0.92", "-131.194, -112.172, -74.6899, 0.92", "-132.285, -113.645, -76.3764, 0.46", "-133.383, -115.273, -78.3262, 0.92", "-133.602, -115.64, -78.7871, 0.92", "-134.4, -117.084, -80.7107, 0.46", "-134.537, -117.438, -81.2131, 0.46", "-134.909, -118.63, -82.8198, 0.92", "-135.409, -120.468, -85.1883, 0.46", "-135.896, -122.006, -86.894, 0.46", "-136.035, -122.435, -87.3408, 0.46", "-136.547, -124.131, -88.8789, 0.46", "-137.016, -125.383, -89.9564, 0.46", "-137.272, -125.989, -90.4117, 0.46", "-139.908, -131.025, -93.5882, 0.46", "-140.282, -131.641, -93.9256, 0.46", "-141.533, -133.44, -94.8564, 0.92", "-143.342, -135.721, -95.9265, 0.46", "-144.869, -137.474, -96.7329, 0.92", "-148.481, -141.487, -98.4416, 0.46", "-149.175, -142.215, -98.7311, 0.92", "-149.826, -142.936, -99.0045, 0.92", "-152.645, -146.01, -100.123, 0.46", "-153.142, -146.595, -100.313, 0.46", "-154.22, -147.848, -100.686, 1.38", "-156.788, -151.009, -101.672, 0.46", "-158.245, -152.859, -102.389, 0.92", "-160.484, -155.768, -103.661, 0.46", "-161.799, -157.625, -104.616, 0.92", "-162.108, -158.09, -104.879, 0.92", "-163.713, -160.975, -106.783, 0.46", "-164.736, -163.574, -108.703, 0.46", "-164.84, -164.071, -109.088, 0.46", "-165.131, -167.517, -111.801, 0.92", "-165.15, -168.009, -112.207, 0.92", "-165.139, -171.434, -115.033, 0.46", "-165.121, -172.717, -116.013, 0.92", "-165.18, -176.79, -118.963, 0.92", "-165.255, -177.439, -119.434, 0.92", "-165.89, -179.818, -121.148, 0.46", "-166.078, -180.308, -121.506, 0.46", "-167.174, -182.247, -122.941, 0.92", "-167.47, -182.825, -123.403, 0.92", "-168.91, -185.807, -125.864, 0.46", "-169.175, -186.393, -126.337, 0.46", "-171.341, -191.632, -130.442, 0.46", "-171.568, -192.23, -130.923, 0.46", "-173.474, -198.401, -136.157, 0.46", "-173.52, -198.577, -136.305, 0.46" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.2853, 78.9978, 10.5187, 0.92", "-13.0599, 81.2419, 11.0803, 0.92", "-12.7403, 84.4246, 11.8768, 0.92", "-12.5914, 85.9075, 12.2479, 0.92", "-12.4104, 87.7105, 12.699, 1.38", "-12.048, 91.3189, 13.602, 0.92", "-11.9096, 92.6965, 13.9468, 1.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.2853, 78.9978, 10.5187, 0.46", "-13.472, 80.5066, 10.3299, 0.46", "-13.524, 80.91, 10.2807, 0.46", "-13.524, 80.91, 10.2807, 0.92", "-13.835, 83.561, 10.08, 0.46", "-13.8377, 83.582, 10.0787, 0.46", "-14.0402, 84.8623, 10.039, 0.92", "-14.1113, 85.1729, 10.0377, 0.92", "-14.4986, 86.7996, 10.0866, 0.46", "-14.5741, 87.1164, 10.1054, 0.46", "-14.8018, 87.9699, 10.1747, 1.38", "-15.373, 90.0548, 10.3534, 0.46", "-15.8311, 91.6588, 10.5016, 0.46", "-16.628, 94.5011, 10.778, 0.46", "-17.0945, 96.1241, 10.9386, 0.46", "-17.4945, 97.6429, 11.1004, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "37.9642, 64.5589, 98.0814, 0.92", "42.3489, 68.8491, 106.955, 0.92", "44.9383, 72.982, 116.59, 0.92", "46.1987, 75.4019, 126.98, 0.92", "45.8966, 78.6067, 137.27, 0.92", "47.1779, 80.8673, 147.687, 0.92", "49.2358, 82.9193, 158.011, 0.92", "49.1679, 84.0149, 168.661, 0.92", "49.9482, 84.0138, 179.31, 0.92", "50.2411, 85.2401, 189.944, 0.92", "51.9776, 88.2133, 200.138, 0.92", "55.0243, 90.2566, 210.208, 0.92", "57.6932, 92.3207, 220.385, 0.92", "61.3501, 93.5334, 230.359, 0.92", "66.9222, 95.1495, 239.337, 0.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "37.9642, 64.5589, 98.0814, 0.46", "44.0201, 70.3464, 109.416, 0.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-112.147, -13.5918, 10.0978, 0.92", "-122.397, -15.662, 11.2069, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-112.147, -13.5918, 10.0978, 0.46", "-120.773, -15.2653, 10.5863, 0.92", "-129.304, -15.8929, 12.5943, 0.92", "-137.841, -17.7065, 13.7422, 0.92", "-146.108, -19.6984, 16.0206, 0.92", "-154.045, -22.6169, 18.5453, 0.92", "-162.266, -24.8249, 20.8067, 0.92", "-170.296, -28.2913, 22.1378, 0.92", "-178.148, -32.3995, 22.633, 0.92", "-186.361, -34.8791, 24.6562, 0.92", "-194.62, -36.6099, 27.1467, 0.92", "-202.874, -37.7175, 29.9599, 0.92", "-211.304, -40.1275, 30.8816, 0.92", "-219.627, -43.0782, 31.0727, 0.92", "-228.294, -44.4306, 31.7168, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "axon_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "axon_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_NBC_656e1c0a2d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, axon_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, axon_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.45000007052683877)
    connect dend_40(0), soma_0(0.45000007052683877)
    connect dend_35(0), soma_0(0.45000007052683877)
    connect dend_24(0), soma_0(0.45000007052683877)
    connect dend_21(0), soma_0(0.45000007052683877)
    connect dend_0(0), soma_0(0.45000007052683877)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.36735, -8.08849, 0.0, 2.03688 ) }
    soma_0 { pt3dadd( 4.94549, -7.33368, 0.0, 3.52963 ) }
    soma_0 { pt3dadd( 4.52363, -6.57887, 0.0, 6.0021 ) }
    soma_0 { pt3dadd( 4.10177, -5.82406, 0.0, 7.56762 ) }
    soma_0 { pt3dadd( 3.67992, -5.06925, 0.0, 9.13193 ) }
    soma_0 { pt3dadd( 3.25806, -4.31444, 0.0, 10.2542 ) }
    soma_0 { pt3dadd( 2.8362, -3.55963, 0.0, 11.222 ) }
    soma_0 { pt3dadd( 2.41434, -2.80482, 0.0, 11.981 ) }
    soma_0 { pt3dadd( 1.99249, -2.05001, 0.0, 12.7132 ) }
    soma_0 { pt3dadd( 1.57063, -1.2952, 0.0, 13.4454 ) }
    soma_0 { pt3dadd( 1.14877, -0.540387, 0.0, 14.1776 ) }
    soma_0 { pt3dadd( 0.726915, 0.214423, 0.0, 14.4912 ) }
    soma_0 { pt3dadd( 0.305057, 0.969233, 0.0, 13.9479 ) }
    soma_0 { pt3dadd( -0.1168, 1.72404, 0.0, 13.0659 ) }
    soma_0 { pt3dadd( -0.538657, 2.47885, 0.0, 12.184 ) }
    soma_0 { pt3dadd( -0.960515, 3.23366, 0.0, 11.2453 ) }
    soma_0 { pt3dadd( -1.38237, 3.98847, 0.0, 10.0927 ) }
    soma_0 { pt3dadd( -1.80423, 4.74328, 0.0, 8.93171 ) }
    soma_0 { pt3dadd( -2.22609, 5.49809, 0.0, 7.05094 ) }
    soma_0 { pt3dadd( -2.64794, 6.2529, 0.0, 4.33066 ) }
    soma_0 { pt3dadd( -3.0698, 7.00771, 0.0, 2.48073 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.730264, 0.713437, -11.45, 0.92 ) }
    dend_47 { pt3dadd( -0.730264, 0.713437, -11.45, 0.92 ) }
    dend_47 { pt3dadd( -2.20896, 1.89814, -11.9306, 0.92 ) }
    dend_47 { pt3dadd( -3.38387, 2.83946, -12.3125, 1.83 ) }
    dend_47 { pt3dadd( -4.47235, 3.71152, -12.6663, 0.92 ) }
    dend_47 { pt3dadd( -5.09421, 4.20974, -12.8684, 0.92 ) }
    dend_47 { pt3dadd( -6.40032, 5.25617, -13.293, 0.92 ) }
    dend_47 { pt3dadd( -7.10789, 5.80168, -13.5191, 0.92 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 5.04974, -5.87006, -8.55, 0.92 ) }
    dend_40 { pt3dadd( 5.04974, -5.87006, -8.55, 0.92 ) }
    dend_40 { pt3dadd( 7.24622, -8.33561, -8.89607, 0.92 ) }
    dend_40 { pt3dadd( 9.44921, -11.1819, -9.42867, 1.83 ) }
    dend_40 { pt3dadd( 10.6519, -12.8162, -9.77351, 0.92 ) }
    dend_40 { pt3dadd( 10.9385, -13.2511, -9.8765, 0.92 ) }
    dend_40 { pt3dadd( 12.281, -15.8419, -10.5258, 0.92 ) }
    dend_40 { pt3dadd( 12.7255, -16.9691, -10.8459, 0.92 ) }
    dend_40 { pt3dadd( 13.2521, -18.8031, -11.4976, 1.38 ) }
    dend_40 { pt3dadd( 13.9611, -21.1691, -12.4863, 0.46 ) }
    dend_40 { pt3dadd( 14.9448, -23.6329, -13.7276, 1.83 ) }
    dend_40 { pt3dadd( 16.2589, -26.3511, -15.3001, 0.46 ) }
    dend_40 { pt3dadd( 16.8802, -27.3353, -16.0281, 1.38 ) }
    dend_40 { pt3dadd( 17.8798, -28.7923, -17.3427, 0.46 ) }
    dend_40 { pt3dadd( 19.1312, -30.6184, -19.5068, 0.46 ) }
    dend_40 { pt3dadd( 20.2234, -32.0343, -21.7397, 1.38 ) }
    dend_40 { pt3dadd( 20.3921, -32.1937, -22.0785, 1.38 ) }
    dend_40 { pt3dadd( 21.436, -32.9037, -24.0522, 0.46 ) }
    dend_40 { pt3dadd( 22.2952, -33.559, -25.8039, 0.92 ) }
    dend_40 { pt3dadd( 23.1801, -34.5819, -27.9439, 0.46 ) }
    dend_40 { pt3dadd( 23.312, -34.8548, -28.3676, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 50/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 2.71974, -7.03556, -5.05, 0.92 ) }
    dend_35 { pt3dadd( 2.62072, -7.46834, -5.04313, 0.92 ) }
    dend_35 { pt3dadd( 1.30535, -13.5662, -5.08021, 0.92 ) }
    dend_35 { pt3dadd( 0.777308, -15.9938, -5.11781, 1.83 ) }
    dend_35 { pt3dadd( -0.201854, -20.6198, -5.25977, 0.92 ) }
    dend_35 { pt3dadd( -0.903501, -24.0255, -5.41945, 0.92 ) }
    dend_35 { pt3dadd( -1.26538, -25.6753, -5.5173, 1.83 ) }
    dend_35 { pt3dadd( -2.21413, -29.5545, -5.85185, 0.92 ) }
    dend_35 { pt3dadd( -2.3324, -29.9782, -5.90506, 0.92 ) }
    dend_35 { pt3dadd( -2.97351, -32.1901, -6.26052, 1.38 ) }
    dend_35 { pt3dadd( -3.76245, -34.9179, -6.76626, 0.46 ) }
    dend_35 { pt3dadd( -4.39874, -37.2248, -7.26597, 1.38 ) }
    dend_35 { pt3dadd( -5.04929, -39.5786, -7.81152, 0.46 ) }
    dend_35 { pt3dadd( -5.32673, -40.63, -8.07344, 0.46 ) }
    dend_35 { pt3dadd( -6.13623, -43.8258, -8.928, 0.92 ) }
    dend_35 { pt3dadd( -6.69183, -46.0882, -9.54992, 1.83 ) }
    dend_35 { pt3dadd( -7.28823, -48.8892, -10.3598, 0.92 ) }
    dend_35 { pt3dadd( -7.35201, -49.3088, -10.4863, 0.92 ) }
    dend_35 { pt3dadd( -7.67425, -52.183, -11.3827, 0.92 ) }
    dend_35 { pt3dadd( -7.87976, -53.7191, -11.9023, 0.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.82973, -8.32706, -2.05, 0.46 ) }
    dend_24 { pt3dadd( 7.06018, -8.76157, -2.04024, 0.46 ) }
    dend_24 { pt3dadd( 8.44083, -11.3272, -1.99948, 0.92 ) }
    dend_24 { pt3dadd( 8.63031, -11.6677, -1.98584, 0.92 ) }
    dend_24 { pt3dadd( 9.561, -13.3031, -1.87196, 0.46 ) }
    dend_24 { pt3dadd( 10.917, -15.6699, -1.63853, 1.38 ) }
    dend_24 { pt3dadd( 12.3953, -18.1627, -1.36159, 0.46 ) }
    dend_24 { pt3dadd( 13.9162, -20.6222, -1.04174, 0.92 ) }
    dend_24 { pt3dadd( 15.3248, -22.7704, -0.711026, 0.46 ) }
    dend_24 { pt3dadd( 17.3245, -25.7108, -0.192356, 1.83 ) }
    dend_24 { pt3dadd( 18.6952, -27.6592, 0.18625, 0.46 ) }
    dend_24 { pt3dadd( 19.7467, -29.1233, 0.50866, 1.38 ) }
    dend_24 { pt3dadd( 21.3761, -31.3336, 1.0444, 0.46 ) }
    dend_24 { pt3dadd( 23.0223, -33.5285, 1.59988, 0.46 ) }
    dend_24 { pt3dadd( 24.0824, -34.928, 1.94783, 1.38 ) }
    dend_24 { pt3dadd( 26.3165, -37.8336, 2.66601, 0.92 ) }
    dend_24 { pt3dadd( 27.3636, -39.2098, 2.99817, 0.92 ) }
    dend_24 { pt3dadd( 28.081, -40.2178, 3.25109, 2.29 ) }
    dend_24 { pt3dadd( 33.2721, -46.8379, 3.21471, 2.29 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.12027, -4.47357, -1.17, 0.92 ) }
    dend_21 { pt3dadd( -4.12027, -4.47357, -1.17, 0.92 ) }
    dend_21 { pt3dadd( -6.96579, -6.86438, -1.26489, 0.92 ) }
    dend_21 { pt3dadd( -8.53815, -8.24196, -1.23945, 0.92 ) }
    dend_21 { pt3dadd( -9.47124, -9.11398, -1.16571, 1.38 ) }
    dend_21 { pt3dadd( -9.8281, -9.45897, -1.11831, 1.38 ) }
    dend_21 { pt3dadd( -14.2654, -13.8112, -0.458863, 0.92 ) }
    dend_21 { pt3dadd( -15.9317, -15.4823, -0.158524, 0.92 ) }
    dend_21 { pt3dadd( -17.2905, -16.8816, 0.145348, 1.38 ) }
    dend_21 { pt3dadd( -19.4563, -19.1098, 0.724936, 0.92 ) }
    dend_21 { pt3dadd( -21.0631, -20.7601, 1.18626, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -22.1575, -21.8927, 1.50327, 1.38 ) }
    dend_21 { pt3dadd( -22.4233, -22.1623, 1.58338, 1.38 ) }
    dend_21 { pt3dadd( -24.9965, -24.8328, 2.26953, 0.92 ) }
    dend_21 { pt3dadd( -27.0399, -27.016, 2.71265, 0.92 ) }
    dend_21 { pt3dadd( -28.7364, -28.9022, 2.98825, 1.38 ) }
    dend_21 { pt3dadd( -30.6711, -31.1251, 3.25533, 0.92 ) }
    dend_21 { pt3dadd( -30.9897, -31.51, 3.29585, 0.92 ) }
    dend_21 { pt3dadd( -32.6455, -33.5651, 3.46521, 1.83 ) }
    dend_21 { pt3dadd( -35.7692, -37.946, 3.64067, 0.92 ) }
    dend_21 { pt3dadd( -37.9585, -41.1347, 3.67705, 0.92 ) }
    dend_21 { pt3dadd( -38.2368, -41.5548, 3.67665, 0.92 ) }
    dend_21 { pt3dadd( -39.4244, -43.3618, 3.67473, 1.83 ) }
    dend_21 { pt3dadd( -39.7744, -43.9035, 3.67411, 1.83 ) }
    dend_21 { pt3dadd( -43.7975, -50.1959, 3.66536, 0.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.92026, 7.12893, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -4.14371, 7.48053, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -4.42544, 7.9238, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -6.22432, 10.7543, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -7.53389, 12.8148, 0.0, 0.92 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 19/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.0698, 7.00771, 0.0, 0.92 ) }
    axon_0 { pt3dadd( -10.3878, 20.1015, 0.0, 0.92 ) }
    axon_0 { pt3dadd( -17.7058, 33.1952, 0.0, 0.92 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 22/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -7.10789, 5.80168, -13.5191, 0.92 ) }
    dend_49 { pt3dadd( -9.84009, 2.6917, -14.4903, 0.92 ) }
    dend_49 { pt3dadd( -11.0177, 1.35133, -14.9088, 0.92 ) }
    dend_49 { pt3dadd( -12.4397, -0.267351, -15.4143, 1.38 ) }
    dend_49 { pt3dadd( -14.4776, -2.58699, -16.1387, 0.46 ) }
    dend_49 { pt3dadd( -16.2695, -4.62664, -16.7756, 0.46 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 28/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -7.10789, 5.80168, -13.5191, 0.46 ) }
    dend_48 { pt3dadd( -3.67633, 10.9554, -13.6722, 0.46 ) }
    dend_48 { pt3dadd( -3.37683, 11.453, -13.694, 0.46 ) }
    dend_48 { pt3dadd( -2.08543, 13.6535, -13.8359, 0.92 ) }
    dend_48 { pt3dadd( -1.73211, 14.3138, -13.8865, 0.92 ) }
    dend_48 { pt3dadd( 0.332072, 18.2284, -14.3352, 0.92 ) }
    dend_48 { pt3dadd( 0.764072, 19.0768, -14.4645, 0.92 ) }
    dend_48 { pt3dadd( 1.71991, 21.1743, -14.8844, 1.38 ) }
    dend_48 { pt3dadd( 2.49305, 22.9097, -15.2496, 0.46 ) }
    dend_48 { pt3dadd( 3.63919, 25.64, -15.8552, 1.38 ) }
    dend_48 { pt3dadd( 5.33201, 29.8125, -16.8688, 0.46 ) }
    dend_48 { pt3dadd( 6.39013, 32.7818, -17.6328, 0.46 ) }
    dend_48 { pt3dadd( 6.63209, 33.4727, -17.8102, 0.46 ) }
    dend_48 { pt3dadd( 7.55552, 36.3219, -18.5405, 0.92 ) }
    dend_48 { pt3dadd( 7.70942, 36.8827, -18.6806, 0.92 ) }
    dend_48 { pt3dadd( 8.47631, 40.1606, -19.465, 0.46 ) }
    dend_48 { pt3dadd( 9.40878, 45.293, -20.5739, 0.46 ) }
    dend_48 { pt3dadd( 9.78092, 47.7805, -21.0765, 1.38 ) }
    dend_48 { pt3dadd( 9.86114, 48.3629, -21.1935, 1.38 ) }
    dend_48 { pt3dadd( 10.2899, 52.175, -21.9308, 0.46 ) }
    dend_48 { pt3dadd( 10.4564, 54.4114, -22.3463, 0.92 ) }
    dend_48 { pt3dadd( 10.4745, 55.1548, -22.4813, 0.92 ) }
    dend_48 { pt3dadd( 10.4836, 58.9559, -23.1962, 0.46 ) }
    dend_48 { pt3dadd( 10.479, 59.5445, -23.3088, 0.46 ) }
    dend_48 { pt3dadd( 10.5339, 61.8384, -23.8016, 1.38 ) }
    dend_48 { pt3dadd( 10.7409, 66.5165, -24.8897, 0.46 ) }
    dend_48 { pt3dadd( 10.9273, 70.2789, -25.8286, 0.46 ) }
    dend_48 { pt3dadd( 11.0656, 72.4504, -26.4545, 0.92 ) }
    dend_48 { pt3dadd( 11.1194, 73.1652, -26.6886, 0.92 ) }
    dend_48 { pt3dadd( 11.4976, 76.6473, -27.9812, 0.46 ) }
    dend_48 { pt3dadd( 11.6174, 77.3282, -28.2772, 0.46 ) }
    dend_48 { pt3dadd( 11.8161, 78.1566, -28.6963, 0.92 ) }
    dend_48 { pt3dadd( 12.307, 79.9364, -29.7443, 0.46 ) }
    dend_48 { pt3dadd( 12.5066, 80.7109, -30.2664, 0.46 ) }
    dend_48 { pt3dadd( 12.9993, 83.1714, -31.9313, 0.46 ) }
    dend_48 { pt3dadd( 13.0591, 83.8133, -32.3122, 0.46 ) }
    dend_48 { pt3dadd( 13.1144, 85.0406, -32.9434, 0.92 ) }
    dend_48 { pt3dadd( 13.1311, 85.8798, -33.3706, 0.92 ) }
    dend_48 { pt3dadd( 12.8966, 90.0454, -35.3018, 0.46 ) }
    dend_48 { pt3dadd( 12.7932, 90.8983, -35.7271, 0.46 ) }
    dend_48 { pt3dadd( 12.0798, 95.0657, -37.8516, 0.46 ) }
    dend_48 { pt3dadd( 11.7182, 97.0973, -38.9466, 0.92 ) }
    dend_48 { pt3dadd( 11.1687, 100.05, -40.5755, 0.46 ) }
    dend_48 { pt3dadd( 10.6292, 102.861, -42.1585, 0.92 ) }
    dend_48 { pt3dadd( 9.89184, 106.635, -44.3109, 0.46 ) }
    dend_48 { pt3dadd( 9.80589, 107.26, -44.7098, 0.46 ) }
    dend_48 { pt3dadd( 9.64997, 109.169, -46.062, 0.46 ) }
    dend_48 { pt3dadd( 9.68758, 109.953, -46.5897, 0.46 ) }
    dend_48 { pt3dadd( 10.0714, 112.411, -47.8875, 0.46 ) }
    dend_48 { pt3dadd( 10.379, 113.76, -48.5058, 0.92 ) }
    dend_48 { pt3dadd( 11.3062, 117.632, -49.9467, 0.46 ) }
    dend_48 { pt3dadd( 11.4698, 118.322, -50.199, 0.46 ) }
    dend_48 { pt3dadd( 12.915, 123.989, -52.2254, 0.46 ) }
    dend_48 { pt3dadd( 14.3393, 129.512, -54.2024, 0.46 ) }
    dend_48 { pt3dadd( 14.5146, 130.204, -54.4406, 0.46 ) }
    dend_48 { pt3dadd( 15.0518, 132.375, -55.1721, 0.92 ) }
    dend_48 { pt3dadd( 16.3517, 137.82, -56.8833, 0.46 ) }
    dend_48 { pt3dadd( 17.2082, 141.25, -58.029, 0.46 ) }
    dend_48 { pt3dadd( 17.3565, 141.793, -58.2274, 0.46 ) }
    dend_48 { pt3dadd( 18.2346, 144.563, -59.2873, 0.46 ) }
    dend_48 { pt3dadd( 18.4721, 145.231, -59.536, 0.46 ) }
    dend_48 { pt3dadd( 19.0102, 146.664, -60.0348, 0.92 ) }
    dend_48 { pt3dadd( 19.2669, 147.344, -60.2319, 0.92 ) }
    dend_48 { pt3dadd( 21.0953, 152.242, -61.6322, 0.46 ) }
    dend_48 { pt3dadd( 21.3993, 153.103, -61.9217, 0.92 ) }
    dend_48 { pt3dadd( 22.7209, 157.141, -63.4498, 0.46 ) }
    dend_48 { pt3dadd( 22.9855, 157.999, -63.7931, 0.46 ) }
    dend_48 { pt3dadd( 23.2261, 158.843, -64.1734, 0.92 ) }
    dend_48 { pt3dadd( 23.3934, 159.5, -64.4962, 0.92 ) }
    dend_48 { pt3dadd( 24.435, 163.597, -66.75, 0.46 ) }
    dend_48 { pt3dadd( 24.5986, 164.233, -67.11, 0.46 ) }
    dend_48 { pt3dadd( 25.0111, 165.593, -67.8646, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_48 { pt3dadd( 25.9168, 168.228, -69.3133, 0.46 ) }
    dend_48 { pt3dadd( 26.1045, 168.726, -69.5787, 0.46 ) }
    dend_48 { pt3dadd( 27.5958, 172.054, -71.3282, 0.46 ) }
    dend_48 { pt3dadd( 27.9009, 172.67, -71.6235, 0.46 ) }
    dend_48 { pt3dadd( 29.5601, 176.251, -73.1991, 0.46 ) }
    dend_48 { pt3dadd( 29.7742, 176.767, -73.4032, 0.46 ) }
    dend_48 { pt3dadd( 30.0461, 177.628, -73.7243, 0.92 ) }
    dend_48 { pt3dadd( 30.3986, 179.096, -74.2814, 0.92 ) }
    dend_48 { pt3dadd( 31.0905, 184.266, -76.1986, 0.46 ) }
    dend_48 { pt3dadd( 31.33, 187.135, -77.2644, 0.46 ) }
    dend_48 { pt3dadd( 31.3486, 188.039, -77.598, 0.46 ) }
    dend_48 { pt3dadd( 31.3367, 193.047, -79.4318, 0.46 ) }
    dend_48 { pt3dadd( 31.3304, 193.609, -79.635, 0.46 ) }
    dend_48 { pt3dadd( 31.306, 195.151, -80.1777, 0.92 ) }
    dend_48 { pt3dadd( 31.2963, 195.855, -80.4457, 0.92 ) }
    dend_48 { pt3dadd( 31.4911, 203.928, -83.7592, 0.46 ) }
    dend_48 { pt3dadd( 31.5318, 204.478, -83.9871, 0.46 ) }
    dend_48 { pt3dadd( 31.7095, 205.778, -84.5177, 0.92 ) }
    dend_48 { pt3dadd( 31.8408, 206.475, -84.8044, 0.92 ) }
    dend_48 { pt3dadd( 32.8499, 210.754, -86.6249, 0.46 ) }
    dend_48 { pt3dadd( 34.4141, 216.399, -88.9989, 0.46 ) }
    dend_48 { pt3dadd( 34.6939, 217.246, -89.3442, 0.92 ) }
    dend_48 { pt3dadd( 36.3761, 222.205, -91.3335, 0.46 ) }
    dend_48 { pt3dadd( 36.992, 223.91, -91.9842, 0.92 ) }
    dend_48 { pt3dadd( 37.5573, 225.351, -92.4991, 0.92 ) }
    dend_48 { pt3dadd( 39.955, 230.784, -94.2067, 0.46 ) }
    dend_48 { pt3dadd( 40.6088, 232.182, -94.6735, 0.92 ) }
    dend_48 { pt3dadd( 41.9812, 235.158, -95.7207, 0.46 ) }
    dend_48 { pt3dadd( 43.7011, 239.004, -97.1645, 0.46 ) }
    dend_48 { pt3dadd( 43.9705, 239.657, -97.4183, 0.46 ) }
    dend_48 { pt3dadd( 44.5899, 241.365, -98.0796, 0.92 ) }
    dend_48 { pt3dadd( 45.8022, 245.0, -99.5258, 0.46 ) }
    dend_48 { pt3dadd( 45.9962, 245.677, -99.7913, 0.46 ) }
    dend_48 { pt3dadd( 47.1921, 250.882, -101.768, 0.46 ) }
    dend_48 { pt3dadd( 47.3458, 251.767, -102.114, 0.46 ) }
    dend_48 { pt3dadd( 47.8921, 255.371, -103.498, 0.46 ) }
    dend_48 { pt3dadd( 47.9668, 256.076, -103.753, 0.46 ) }
    dend_48 { pt3dadd( 48.0191, 256.801, -103.956, 0.92 ) }
    dend_48 { pt3dadd( 48.0447, 257.378, -104.114, 0.92 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 39/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 23.312, -34.8548, -28.3676, 0.46 ) }
    dend_42 { pt3dadd( 26.2271, -37.2079, -30.5589, 0.46 ) }
    dend_42 { pt3dadd( 27.9226, -38.5675, -31.8618, 1.38 ) }
    dend_42 { pt3dadd( 28.2679, -38.9154, -32.1107, 1.38 ) }
    dend_42 { pt3dadd( 30.7997, -41.8334, -33.7887, 0.46 ) }
    dend_42 { pt3dadd( 31.1268, -42.2266, -33.9986, 0.46 ) }
    dend_42 { pt3dadd( 33.6998, -45.3192, -35.6494, 1.38 ) }
    dend_42 { pt3dadd( 34.09, -45.843, -35.898, 1.38 ) }
    dend_42 { pt3dadd( 37.3597, -50.5063, -37.7438, 0.46 ) }
    dend_42 { pt3dadd( 38.5335, -52.2466, -38.3725, 0.46 ) }
    dend_42 { pt3dadd( 38.8729, -52.8428, -38.5328, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 50/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 23.312, -34.8548, -28.3676, 0.92 ) }
    dend_41 { pt3dadd( 20.6835, -35.7174, -29.6681, 0.92 ) }
    dend_41 { pt3dadd( 20.091, -35.8681, -29.9617, 0.92 ) }
    dend_41 { pt3dadd( 17.8307, -36.3691, -31.0581, 0.46 ) }
    dend_41 { pt3dadd( 16.3088, -36.6104, -31.8559, 0.92 ) }
    dend_41 { pt3dadd( 12.5379, -37.0756, -33.9181, 0.46 ) }
    dend_41 { pt3dadd( 10.6402, -37.2466, -35.1009, 0.92 ) }
    dend_41 { pt3dadd( 8.51894, -37.3017, -36.5925, 0.46 ) }
    dend_41 { pt3dadd( 8.12535, -37.2991, -36.9585, 0.46 ) }
    dend_41 { pt3dadd( 6.80308, -37.0616, -38.8827, 0.46 ) }
    dend_41 { pt3dadd( 6.79506, -37.0521, -38.9157, 0.46 ) }
    dend_41 { pt3dadd( 6.88969, -36.0775, -41.5581, 0.46 ) }
    dend_41 { pt3dadd( 6.89401, -36.0657, -41.591, 0.46 ) }
    dend_41 { pt3dadd( 7.66913, -35.0861, -44.8066, 0.46 ) }
    dend_41 { pt3dadd( 7.89116, -34.8592, -45.6165, 0.46 ) }
    dend_41 { pt3dadd( 8.95912, -34.274, -49.3411, 0.46 ) }
    dend_41 { pt3dadd( 9.87844, -33.9456, -52.7705, 0.46 ) }
    dend_41 { pt3dadd( 9.88573, -33.9439, -52.8047, 0.46 ) }
    dend_41 { pt3dadd( 10.5953, -33.8903, -56.6821, 0.46 ) }
    dend_41 { pt3dadd( 10.6525, -33.9038, -57.2162, 0.46 ) }
    dend_41 { pt3dadd( 11.028, -34.2809, -64.0102, 0.46 ) }
    dend_41 { pt3dadd( 11.0152, -34.2998, -64.5354, 0.46 ) }
    dend_41 { pt3dadd( 10.8158, -34.2839, -66.9038, 0.46 ) }
    dend_41 { pt3dadd( 10.8131, -34.2821, -66.927, 0.46 ) }
    dend_41 { pt3dadd( 10.0685, -33.51, -71.3127, 0.46 ) }
    dend_41 { pt3dadd( 9.97853, -33.3706, -71.8262, 0.46 ) }
    dend_41 { pt3dadd( 9.36994, -31.924, -74.3735, 0.46 ) }
    dend_41 { pt3dadd( 9.09641, -30.7367, -76.3268, 0.46 ) }
    dend_41 { pt3dadd( 9.09791, -30.716, -76.3558, 0.46 ) }
    dend_41 { pt3dadd( 9.34564, -29.6498, -77.5705, 0.92 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.87976, -53.7191, -11.9023, 0.46 ) }
    dend_39 { pt3dadd( -9.40217, -61.1118, -10.2532, 0.46 ) }
    dend_39 { pt3dadd( -9.54947, -61.8054, -10.0817, 0.92 ) }
    dend_39 { pt3dadd( -9.69853, -62.5033, -9.92854, 0.92 ) }
    dend_39 { pt3dadd( -10.5828, -66.9128, -9.07403, 0.92 ) }
    dend_39 { pt3dadd( -11.4097, -71.4772, -8.42288, 0.46 ) }
    dend_39 { pt3dadd( -11.9387, -74.6471, -8.05828, 0.92 ) }
    dend_39 { pt3dadd( -12.0737, -75.554, -7.97126, 0.92 ) }
    dend_39 { pt3dadd( -13.1616, -82.8627, -7.49155, 0.46 ) }
    dend_39 { pt3dadd( -13.5928, -85.7222, -7.38229, 0.92 ) }
    dend_39 { pt3dadd( -14.5745, -92.2385, -7.28606, 0.46 ) }
    dend_39 { pt3dadd( -14.8944, -94.3763, -7.29234, 0.92 ) }
    dend_39 { pt3dadd( -14.979, -94.9415, -7.29759, 0.92 ) }
    dend_39 { pt3dadd( -15.8149, -100.775, -7.33595, 0.46 ) }
    dend_39 { pt3dadd( -15.9486, -101.683, -7.33184, 0.92 ) }
    dend_39 { pt3dadd( -16.9392, -107.633, -7.16862, 0.46 ) }
    dend_39 { pt3dadd( -17.0706, -108.339, -7.11398, 1.38 ) }
    dend_39 { pt3dadd( -17.2038, -109.043, -7.04972, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 98/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -7.87976, -53.7191, -11.9023, 0.46 ) }
    dend_36 { pt3dadd( -7.3823, -59.2361, -13.0186, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -7.01314, -62.634, -13.7388, 0.46 ) }
    dend_36 { pt3dadd( -6.84432, -64.0595, -14.0512, 1.38 ) }
    dend_36 { pt3dadd( -6.7945, -64.5874, -14.1584, 1.38 ) }
    dend_36 { pt3dadd( -6.57148, -69.778, -15.085, 0.46 ) }
    dend_36 { pt3dadd( -6.56795, -70.3106, -15.1807, 0.46 ) }
    dend_36 { pt3dadd( -6.65679, -72.5208, -15.5613, 1.38 ) }
    dend_36 { pt3dadd( -6.72655, -73.2005, -15.6803, 1.38 ) }
    dend_36 { pt3dadd( -7.27839, -76.67, -16.3642, 0.92 ) }
    dend_36 { pt3dadd( -7.82048, -79.172, -16.9016, 0.92 ) }
    dend_36 { pt3dadd( -8.33232, -80.8291, -17.2824, 0.92 ) }
    dend_36 { pt3dadd( -8.92025, -82.8805, -17.786, 1.38 ) }
    dend_36 { pt3dadd( -9.06036, -83.522, -17.9598, 1.38 ) }
    dend_36 { pt3dadd( -9.37992, -86.3055, -18.8116, 0.46 ) }
    dend_36 { pt3dadd( -9.32759, -89.155, -19.7852, 0.46 ) }
    dend_36 { pt3dadd( -9.2667, -89.7985, -19.9969, 0.46 ) }
    dend_36 { pt3dadd( -8.98197, -91.8365, -20.6093, 1.38 ) }
    dend_36 { pt3dadd( -8.32539, -95.5219, -21.6848, 0.46 ) }
    dend_36 { pt3dadd( -8.01838, -97.2117, -22.1515, 1.38 ) }
    dend_36 { pt3dadd( -7.30121, -101.218, -23.1606, 0.46 ) }
    dend_36 { pt3dadd( -6.59231, -105.219, -24.1203, 0.46 ) }
    dend_36 { pt3dadd( -6.16841, -108.075, -24.7787, 1.38 ) }
    dend_36 { pt3dadd( -6.11411, -108.589, -24.893, 1.38 ) }
    dend_36 { pt3dadd( -6.01336, -112.006, -25.6167, 0.46 ) }
    dend_36 { pt3dadd( -6.07177, -114.745, -26.1985, 0.92 ) }
    dend_36 { pt3dadd( -6.10936, -115.41, -26.3437, 0.92 ) }
    dend_36 { pt3dadd( -6.42438, -119.583, -27.2878, 0.46 ) }
    dend_36 { pt3dadd( -6.56555, -121.131, -27.649, 1.38 ) }
    dend_36 { pt3dadd( -6.96913, -126.644, -28.979, 0.46 ) }
    dend_36 { pt3dadd( -7.08607, -128.692, -29.4907, 1.38 ) }
    dend_36 { pt3dadd( -7.26802, -134.087, -30.8825, 0.46 ) }
    dend_36 { pt3dadd( -7.33475, -136.818, -31.5841, 1.38 ) }
    dend_36 { pt3dadd( -7.3418, -137.48, -31.7478, 1.38 ) }
    dend_36 { pt3dadd( -7.34531, -142.35, -32.844, 0.46 ) }
    dend_36 { pt3dadd( -7.32595, -145.831, -33.5554, 0.46 ) }
    dend_36 { pt3dadd( -7.3187, -148.171, -33.9859, 1.38 ) }
    dend_36 { pt3dadd( -7.3193, -149.025, -34.1283, 1.38 ) }
    dend_36 { pt3dadd( -7.3799, -154.463, -34.9603, 0.46 ) }
    dend_36 { pt3dadd( -7.42711, -159.331, -35.6535, 0.46 ) }
    dend_36 { pt3dadd( -7.47926, -162.748, -36.0927, 0.92 ) }
    dend_36 { pt3dadd( -7.48732, -166.214, -36.4646, 1.38 ) }
    dend_36 { pt3dadd( -7.50262, -168.979, -36.7168, 0.46 ) }
    dend_36 { pt3dadd( -7.49799, -169.518, -36.7657, 0.46 ) }
    dend_36 { pt3dadd( -7.41644, -172.456, -37.0812, 0.92 ) }
    dend_36 { pt3dadd( -7.39326, -173.143, -37.1829, 0.92 ) }
    dend_36 { pt3dadd( -7.40485, -176.5, -37.7875, 0.46 ) }
    dend_36 { pt3dadd( -7.4412, -177.354, -37.9606, 0.46 ) }
    dend_36 { pt3dadd( -7.66728, -180.794, -38.7474, 0.92 ) }
    dend_36 { pt3dadd( -7.91037, -183.736, -39.4831, 1.38 ) }
    dend_36 { pt3dadd( -8.35748, -187.819, -40.5733, 0.46 ) }
    dend_36 { pt3dadd( -8.72077, -191.276, -41.5189, 0.46 ) }
    dend_36 { pt3dadd( -8.81059, -192.106, -41.7649, 0.46 ) }
    dend_36 { pt3dadd( -9.01101, -194.193, -42.3576, 0.46 ) }
    dend_36 { pt3dadd( -9.07687, -194.847, -42.5349, 0.46 ) }
    dend_36 { pt3dadd( -9.28938, -196.842, -42.983, 1.38 ) }
    dend_36 { pt3dadd( -9.73483, -201.593, -43.9526, 0.46 ) }
    dend_36 { pt3dadd( -9.79632, -202.261, -44.0711, 0.46 ) }
    dend_36 { pt3dadd( -9.99166, -204.315, -44.4123, 0.92 ) }
    dend_36 { pt3dadd( -10.0546, -204.99, -44.4934, 0.92 ) }
    dend_36 { pt3dadd( -10.7568, -211.899, -45.1415, 0.46 ) }
    dend_36 { pt3dadd( -10.8236, -212.577, -45.1811, 0.46 ) }
    dend_36 { pt3dadd( -11.1326, -215.35, -45.3146, 1.38 ) }
    dend_36 { pt3dadd( -11.1962, -216.039, -45.3613, 1.38 ) }
    dend_36 { pt3dadd( -11.6137, -220.873, -45.7299, 0.46 ) }
    dend_36 { pt3dadd( -11.6452, -221.398, -45.7904, 0.46 ) }
    dend_36 { pt3dadd( -11.6658, -223.53, -46.1568, 0.92 ) }
    dend_36 { pt3dadd( -11.6203, -227.422, -47.0332, 0.46 ) }
    dend_36 { pt3dadd( -11.5917, -229.197, -47.5315, 1.38 ) }
    dend_36 { pt3dadd( -11.5758, -229.701, -47.6889, 1.38 ) }
    dend_36 { pt3dadd( -11.3998, -234.377, -49.3521, 0.46 ) }
    dend_36 { pt3dadd( -11.3144, -236.147, -49.9967, 1.38 ) }
    dend_36 { pt3dadd( -11.1467, -239.545, -51.2587, 0.46 ) }
    dend_36 { pt3dadd( -10.922, -242.997, -52.4354, 0.46 ) }
    dend_36 { pt3dadd( -10.8062, -244.652, -52.963, 1.38 ) }
    dend_36 { pt3dadd( -10.7672, -245.167, -53.1203, 1.38 ) }
    dend_36 { pt3dadd( -10.4591, -248.726, -54.104, 0.46 ) }
    dend_36 { pt3dadd( -10.2571, -250.789, -54.6282, 1.38 ) }
    dend_36 { pt3dadd( -9.57905, -256.124, -55.8792, 0.46 ) }
    dend_36 { pt3dadd( -9.15337, -259.021, -56.4327, 0.46 ) }
    dend_36 { pt3dadd( -9.08548, -259.552, -56.5118, 0.46 ) }
    dend_36 { pt3dadd( -8.66346, -263.093, -56.8902, 0.92 ) }
    dend_36 { pt3dadd( -8.37506, -265.995, -57.0705, 0.46 ) }
    dend_36 { pt3dadd( -8.20362, -268.094, -57.1466, 0.92 ) }
    dend_36 { pt3dadd( -7.98175, -271.287, -57.2308, 0.46 ) }
    dend_36 { pt3dadd( -7.78393, -274.875, -57.3706, 0.46 ) }
    dend_36 { pt3dadd( -7.65464, -278.279, -57.6131, 0.92 ) }
    dend_36 { pt3dadd( -7.59608, -282.385, -58.021, 0.46 ) }
    dend_36 { pt3dadd( -7.61167, -283.737, -58.208, 1.38 ) }
    dend_36 { pt3dadd( -7.67559, -287.319, -58.855, 0.46 ) }
    dend_36 { pt3dadd( -7.69566, -290.156, -59.5228, 0.92 ) }
    dend_36 { pt3dadd( -7.68491, -296.259, -61.1483, 0.46 ) }
    dend_36 { pt3dadd( -7.68746, -299.594, -62.0965, 0.92 ) }
    dend_36 { pt3dadd( -7.63548, -302.439, -62.8976, 0.46 ) }
    dend_36 { pt3dadd( -7.5646, -304.102, -63.3571, 0.92 ) }
    dend_36 { pt3dadd( -7.28656, -309.036, -64.6748, 0.46 ) }
    dend_36 { pt3dadd( -7.23417, -309.558, -64.8018, 0.46 ) }
    dend_36 { pt3dadd( -6.92771, -311.56, -65.1668, 0.92 ) }
    dend_36 { pt3dadd( -5.33659, -320.426, -66.4254, 0.46 ) }
    dend_36 { pt3dadd( -4.98684, -322.171, -66.6081, 0.92 ) }
    dend_36 { pt3dadd( -4.8802, -322.7, -66.6547, 0.92 ) }
    dend_36 { pt3dadd( -3.35407, -330.219, -67.2993, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -2.19421, -335.998, -67.8368, 0.46 ) }
    dend_36 { pt3dadd( -2.06836, -336.664, -67.9089, 0.46 ) }
    dend_36 { pt3dadd( -1.7176, -338.741, -68.1498, 1.38 ) }
    dend_36 { pt3dadd( -0.863355, -344.262, -68.9069, 0.46 ) }
    dend_36 { pt3dadd( -0.0622087, -349.855, -69.8179, 0.46 ) }
    dend_36 { pt3dadd( 0.178842, -351.853, -70.2477, 1.38 ) }
    dend_36 { pt3dadd( 0.685935, -356.614, -71.5772, 0.46 ) }
    dend_36 { pt3dadd( 0.743188, -357.117, -71.7283, 0.46 ) }
    dend_36 { pt3dadd( 1.06121, -359.947, -72.6566, 0.92 ) }
    dend_36 { pt3dadd( 1.12932, -360.446, -72.846, 0.92 ) }
    dend_36 { pt3dadd( 1.76929, -363.93, -74.2943, 0.46 ) }
    dend_36 { pt3dadd( 2.18253, -365.636, -75.0906, 0.46 ) }
    dend_36 { pt3dadd( 2.98079, -368.197, -76.3743, 0.92 ) }
    dend_36 { pt3dadd( 3.14046, -368.651, -76.6097, 0.92 ) }
    dend_36 { pt3dadd( 4.03302, -371.112, -77.9162, 0.46 ) }
    dend_36 { pt3dadd( 4.66927, -372.881, -78.8376, 0.92 ) }
    dend_36 { pt3dadd( 5.55587, -375.411, -80.1436, 0.46 ) }
    dend_36 { pt3dadd( 6.05382, -376.933, -80.8578, 0.92 ) }
    dend_36 { pt3dadd( 6.23784, -377.53, -81.1187, 0.92 ) }
    dend_36 { pt3dadd( 7.41177, -381.456, -82.74, 0.46 ) }
    dend_36 { pt3dadd( 8.10083, -384.108, -83.724, 0.92 ) }
    dend_36 { pt3dadd( 8.28407, -384.913, -83.9953, 0.92 ) }
    dend_36 { pt3dadd( 9.23172, -389.687, -85.4082, 0.46 ) }
    dend_36 { pt3dadd( 9.48386, -391.092, -85.7913, 0.92 ) }
    dend_36 { pt3dadd( 9.60056, -391.754, -85.9567, 0.92 ) }
    dend_36 { pt3dadd( 10.225, -395.171, -86.6831, 0.46 ) }
    dend_36 { pt3dadd( 10.5915, -397.151, -87.0982, 0.92 ) }
    dend_36 { pt3dadd( 10.7328, -397.81, -87.2574, 0.92 ) }
    dend_36 { pt3dadd( 11.7208, -401.763, -88.2917, 0.46 ) }
    dend_36 { pt3dadd( 11.9227, -402.386, -88.4728, 0.46 ) }
    dend_36 { pt3dadd( 12.6173, -404.299, -89.0557, 0.92 ) }
    dend_36 { pt3dadd( 14.0167, -407.502, -90.1688, 0.92 ) }
    dend_36 { pt3dadd( 15.7851, -411.078, -91.5503, 0.46 ) }
    dend_36 { pt3dadd( 17.1555, -413.72, -92.5993, 0.92 ) }
    dend_36 { pt3dadd( 19.4079, -417.589, -94.2585, 0.46 ) }
    dend_36 { pt3dadd( 19.6696, -418.012, -94.4502, 0.46 ) }
    dend_36 { pt3dadd( 20.9592, -419.898, -95.3849, 0.92 ) }
    dend_36 { pt3dadd( 21.3457, -420.377, -95.645, 0.92 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 33.2721, -46.8379, 3.21471, 0.92 ) }
    dend_28 { pt3dadd( 39.5212, -56.8041, 4.48, 0.92 ) }
    dend_28 { pt3dadd( 47.4075, -65.3822, 5.82382, 0.92 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 41/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 33.2721, -46.8379, 3.21471, 0.46 ) }
    dend_25 { pt3dadd( 41.2438, -57.091, 4.91795, 0.92 ) }
    dend_25 { pt3dadd( 49.8831, -66.7835, 6.31532, 0.92 ) }
    dend_25 { pt3dadd( 58.5294, -76.2885, 8.57314, 0.92 ) }
    dend_25 { pt3dadd( 67.9203, -85.256, 9.39414, 0.92 ) }
    dend_25 { pt3dadd( 76.4869, -94.8026, 11.7917, 0.92 ) }
    dend_25 { pt3dadd( 84.5175, -104.265, 15.8039, 0.92 ) }
    dend_25 { pt3dadd( 93.2624, -112.026, 21.3437, 0.92 ) }
    dend_25 { pt3dadd( 103.337, -118.838, 25.6116, 0.92 ) }
    dend_25 { pt3dadd( 112.552, -126.452, 30.5417, 0.92 ) }
    dend_25 { pt3dadd( 120.245, -136.686, 33.3029, 0.92 ) }
    dend_25 { pt3dadd( 129.279, -145.731, 35.7452, 0.92 ) }
    dend_25 { pt3dadd( 138.702, -154.285, 38.3225, 0.92 ) }
    dend_25 { pt3dadd( 146.972, -163.352, 42.6638, 0.92 ) }
    dend_25 { pt3dadd( 154.346, -172.892, 47.6505, 0.92 ) }
    dend_25 { pt3dadd( 161.115, -182.362, 53.5361, 0.92 ) }
    dend_25 { pt3dadd( 167.381, -192.134, 59.5284, 0.92 ) }
    dend_25 { pt3dadd( 173.309, -202.009, 65.7097, 0.92 ) }
    dend_25 { pt3dadd( 179.885, -211.031, 72.3978, 0.92 ) }
    dend_25 { pt3dadd( 183.907, -220.777, 80.1095, 0.92 ) }
    dend_25 { pt3dadd( 189.392, -231.129, 85.9832, 0.92 ) }
    dend_25 { pt3dadd( 194.524, -241.702, 91.8211, 0.92 ) }
    dend_25 { pt3dadd( 201.557, -251.703, 96.469, 0.92 ) }
    dend_25 { pt3dadd( 207.995, -262.624, 99.9589, 0.92 ) }
    dend_25 { pt3dadd( 213.847, -273.942, 103.33, 0.92 ) }
    dend_25 { pt3dadd( 219.082, -285.86, 105.688, 0.92 ) }
    dend_25 { pt3dadd( 223.469, -298.036, 108.529, 0.92 ) }
    dend_25 { pt3dadd( 229.159, -309.212, 112.546, 0.92 ) }
    dend_25 { pt3dadd( 234.506, -320.758, 116.052, 0.92 ) }
    dend_25 { pt3dadd( 240.614, -331.813, 119.746, 0.92 ) }
    dend_25 { pt3dadd( 246.34, -342.315, 125.128, 0.92 ) }
    dend_25 { pt3dadd( 250.156, -354.703, 127.964, 0.92 ) }
    dend_25 { pt3dadd( 252.508, -367.141, 131.957, 0.92 ) }
    dend_25 { pt3dadd( 252.346, -380.242, 134.425, 0.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 75/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -43.7975, -50.1959, 3.66536, 0.46 ) }
    dend_23 { pt3dadd( -43.5685, -53.1781, 3.35501, 0.46 ) }
    dend_23 { pt3dadd( -43.493, -54.1605, 3.25276, 0.92 ) }
    dend_23 { pt3dadd( -43.4553, -54.6518, 3.20164, 0.92 ) }
    dend_23 { pt3dadd( -43.3007, -56.665, 2.99213, 0.46 ) }
    dend_23 { pt3dadd( -43.2707, -57.0546, 2.95158, 0.46 ) }
    dend_23 { pt3dadd( -43.1894, -58.1131, 2.84142, 0.92 ) }
    dend_23 { pt3dadd( -41.538, -66.3351, 1.33527, 0.92 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 83/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -43.7975, -50.1959, 3.66536, 0.46 ) }
    dend_22 { pt3dadd( -46.6701, -52.4507, 3.82873, 0.46 ) }
    dend_22 { pt3dadd( -47.1514, -52.91, 3.81674, 0.46 ) }
    dend_22 { pt3dadd( -48.8637, -54.8812, 3.80772, 0.92 ) }
    dend_22 { pt3dadd( -49.3916, -55.5396, 3.81579, 0.92 ) }
    dend_22 { pt3dadd( -52.2955, -59.309, 3.79633, 0.46 ) }
    dend_22 { pt3dadd( -52.9522, -60.1614, 3.79193, 1.38 ) }
    dend_22 { pt3dadd( -57.2449, -65.9558, 3.73978, 0.46 ) }
    dend_22 { pt3dadd( -61.9015, -72.4515, 3.66131, 0.46 ) }
    dend_22 { pt3dadd( -64.1747, -75.7433, 3.6126, 0.46 ) }
    dend_22 { pt3dadd( -67.0373, -80.0229, 3.54269, 1.38 ) }
    dend_22 { pt3dadd( -74.1096, -92.8015, 4.58577, 1.38 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 95/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.53389, 12.8148, 0.0, 0.92 ) }
    dend_10 { pt3dadd( -9.93104, 14.7824, 0.865872, 0.92 ) }
    dend_10 { pt3dadd( -12.0892, 16.5537, 1.64539, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 98/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.53389, 12.8148, 0.0, 0.46 ) }
    dend_1 { pt3dadd( -11.7893, 11.3893, 0.650526, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -13.259, 10.8969, 0.8752, 1.38 ) }
    dend_1 { pt3dadd( -17.0999, 9.61016, 1.46237, 0.46 ) }
    dend_1 { pt3dadd( -22.2028, 7.90069, 2.24247, 0.46 ) }
    dend_1 { pt3dadd( -23.2675, 7.54402, 2.40523, 1.38 ) }
    dend_1 { pt3dadd( -23.8364, 7.35344, 2.4922, 1.38 ) }
    dend_1 { pt3dadd( -33.3182, 3.07836, 3.8125, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -17.7058, 33.1952, 0.0, 0.92 ) }
    axon_1 { pt3dadd( -25.0238, 46.289, 0.0, 0.92 ) }
    axon_1 { pt3dadd( -32.3418, 59.3828, 0.0, 0.92 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 9/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.2695, -4.62664, -16.7756, 0.46 ) }
    dend_55 { pt3dadd( -15.6779, -2.13226, -19.2261, 0.46 ) }
    dend_55 { pt3dadd( -15.5382, -0.779125, -20.5696, 1.38 ) }
    dend_55 { pt3dadd( -15.4303, 0.251342, -21.6742, 0.46 ) }
    dend_55 { pt3dadd( -15.3457, 1.28423, -22.8138, 0.92 ) }
    dend_55 { pt3dadd( -15.2729, 2.37759, -24.0736, 0.46 ) }
    dend_55 { pt3dadd( -15.2499, 2.76646, -24.5314, 0.46 ) }
    dend_55 { pt3dadd( -15.2645, 4.18822, -26.2781, 0.46 ) }
    dend_55 { pt3dadd( -15.2294, 5.80349, -28.3738, 0.46 ) }
    dend_55 { pt3dadd( -15.2213, 6.10663, -28.7409, 0.46 ) }
    dend_55 { pt3dadd( -15.196, 8.15681, -31.1251, 0.92 ) }
    dend_55 { pt3dadd( -15.1959, 8.17134, -31.1399, 0.92 ) }
    dend_55 { pt3dadd( -15.1628, 9.74261, -32.5545, 0.46 ) }
    dend_55 { pt3dadd( -15.0644, 11.4604, -33.9266, 0.46 ) }
    dend_55 { pt3dadd( -14.9028, 14.67, -36.1899, 0.92 ) }
    dend_55 { pt3dadd( -14.8797, 15.072, -36.4542, 0.92 ) }
    dend_55 { pt3dadd( -14.604, 18.3461, -38.4034, 0.46 ) }
    dend_55 { pt3dadd( -14.4431, 19.9874, -39.3287, 0.92 ) }
    dend_55 { pt3dadd( -14.1608, 22.3045, -40.5844, 0.46 ) }
    dend_55 { pt3dadd( -13.832, 24.4692, -41.7562, 0.92 ) }
    dend_55 { pt3dadd( -13.7559, 24.8853, -41.99, 0.92 ) }
    dend_55 { pt3dadd( -13.1168, 28.106, -43.8207, 0.46 ) }
    dend_55 { pt3dadd( -12.9787, 28.7694, -44.206, 0.92 ) }
    dend_55 { pt3dadd( -12.4659, 31.0936, -45.6173, 0.46 ) }
    dend_55 { pt3dadd( -12.0746, 32.8628, -46.704, 0.92 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 34/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -16.2695, -4.62664, -16.7756, 0.46 ) }
    dend_50 { pt3dadd( -15.8233, -6.39787, -16.8766, 0.46 ) }
    dend_50 { pt3dadd( -15.1627, -8.96106, -17.1013, 0.46 ) }
    dend_50 { pt3dadd( -14.9606, -9.82755, -17.1814, 0.46 ) }
    dend_50 { pt3dadd( -14.4019, -12.1544, -17.4019, 1.38 ) }
    dend_50 { pt3dadd( -13.812, -14.4087, -17.7058, 0.46 ) }
    dend_50 { pt3dadd( -13.2932, -16.0931, -17.971, 0.46 ) }
    dend_50 { pt3dadd( -13.017, -16.7286, -18.1045, 0.46 ) }
    dend_50 { pt3dadd( -12.4144, -17.9503, -18.4538, 1.38 ) }
    dend_50 { pt3dadd( -12.1557, -18.4221, -18.596, 1.38 ) }
    dend_50 { pt3dadd( -11.0887, -20.2953, -19.253, 0.46 ) }
    dend_50 { pt3dadd( -10.5594, -21.2001, -19.5822, 1.38 ) }
    dend_50 { pt3dadd( -8.6875, -24.6429, -20.7384, 0.46 ) }
    dend_50 { pt3dadd( -7.82037, -26.2596, -21.3319, 0.46 ) }
    dend_50 { pt3dadd( -7.13496, -27.5039, -21.8291, 1.38 ) }
    dend_50 { pt3dadd( -5.95452, -29.7541, -22.7248, 0.46 ) }
    dend_50 { pt3dadd( -5.93928, -29.7848, -22.7368, 0.46 ) }
    dend_50 { pt3dadd( -5.10881, -31.6507, -23.5026, 0.92 ) }
    dend_50 { pt3dadd( -4.18163, -33.951, -24.5402, 0.46 ) }
    dend_50 { pt3dadd( -3.37034, -35.9144, -25.3998, 0.46 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 38.8729, -52.8428, -38.5328, 0.46 ) }
    dend_46 { pt3dadd( 39.1014, -54.2656, -37.7837, 0.46 ) }
    dend_46 { pt3dadd( 39.3473, -55.3218, -37.2219, 0.92 ) }
    dend_46 { pt3dadd( 40.2831, -58.6789, -35.3649, 0.46 ) }
    dend_46 { pt3dadd( 40.5505, -59.556, -34.878, 0.92 ) }
    dend_46 { pt3dadd( 41.2637, -61.8959, -33.579, 0.46 ) }
    dend_46 { pt3dadd( 41.513, -62.7137, -33.125, 0.92 ) }
    dend_46 { pt3dadd( 42.154, -64.5766, -32.0777, 0.46 ) }
    dend_46 { pt3dadd( 43.0056, -66.7486, -30.8271, 0.46 ) }
    dend_46 { pt3dadd( 43.3529, -67.511, -30.3594, 0.92 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 38.8729, -52.8428, -38.5328, 0.46 ) }
    dend_43 { pt3dadd( 39.4235, -53.2308, -39.023, 0.46 ) }
    dend_43 { pt3dadd( 40.2915, -53.9033, -39.8316, 0.46 ) }
    dend_43 { pt3dadd( 40.8324, -54.3331, -40.3506, 1.38 ) }
    dend_43 { pt3dadd( 41.5598, -54.9024, -41.0532, 0.46 ) }
    dend_43 { pt3dadd( 41.7589, -55.0536, -41.2473, 0.92 ) }
    dend_43 { pt3dadd( 42.3392, -55.4935, -41.8175, 0.46 ) }
    dend_43 { pt3dadd( 42.8033, -55.8515, -42.2767, 0.92 ) }
    dend_43 { pt3dadd( 43.199, -56.1789, -42.676, 0.46 ) }
    dend_43 { pt3dadd( 43.5678, -56.4857, -43.0574, 1.38 ) }
    dend_43 { pt3dadd( 44.2544, -57.0384, -43.7518, 0.46 ) }
    dend_43 { pt3dadd( 44.366, -57.1254, -43.862, 0.46 ) }
    dend_43 { pt3dadd( 45.0719, -57.6778, -44.5324, 1.38 ) }
    dend_43 { pt3dadd( 45.1816, -57.776, -44.6292, 1.38 ) }
    dend_43 { pt3dadd( 46.1372, -58.7235, -45.4651, 0.46 ) }
    dend_43 { pt3dadd( 46.5032, -59.1232, -45.7795, 1.38 ) }
    dend_43 { pt3dadd( 47.0953, -59.813, -46.2982, 0.46 ) }
    dend_43 { pt3dadd( 47.3945, -60.1737, -46.562, 1.38 ) }
    dend_43 { pt3dadd( 48.2624, -61.2482, -47.318, 0.46 ) }
    dend_43 { pt3dadd( 48.6023, -61.6542, -47.6157, 1.38 ) }
    dend_43 { pt3dadd( 49.4221, -62.6394, -48.3666, 0.46 ) }
    dend_43 { pt3dadd( 49.8004, -63.1024, -48.7228, 1.38 ) }
    dend_43 { pt3dadd( 50.2562, -63.6581, -49.1401, 0.46 ) }
    dend_43 { pt3dadd( 50.489, -63.9371, -49.363, 1.38 ) }
    dend_43 { pt3dadd( 51.2815, -64.8503, -50.1237, 0.46 ) }
    dend_43 { pt3dadd( 51.5921, -65.2157, -50.4184, 0.46 ) }
    dend_43 { pt3dadd( 51.6898, -65.3345, -50.5134, 0.46 ) }
    dend_43 { pt3dadd( 52.157, -65.9265, -50.9535, 0.92 ) }
    dend_43 { pt3dadd( 52.6262, -66.5604, -51.418, 0.46 ) }
    dend_43 { pt3dadd( 53.0754, -67.1888, -51.8564, 0.92 ) }
    dend_43 { pt3dadd( 53.5012, -67.7932, -52.2527, 0.46 ) }
    dend_43 { pt3dadd( 53.6005, -67.9212, -52.3348, 0.46 ) }
    dend_43 { pt3dadd( 54.314, -68.8029, -52.899, 0.92 ) }
    dend_43 { pt3dadd( 54.4853, -69.0049, -53.0245, 0.92 ) }
    dend_43 { pt3dadd( 55.3332, -69.9406, -53.5596, 0.46 ) }
    dend_43 { pt3dadd( 55.3383, -69.9459, -53.5625, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 55.9224, -70.5249, -53.8689, 0.92 ) }
    dend_43 { pt3dadd( 56.5313, -71.1297, -54.1957, 0.46 ) }
    dend_43 { pt3dadd( 56.9195, -71.5105, -54.4018, 0.92 ) }
    dend_43 { pt3dadd( 57.2918, -71.8823, -54.597, 0.46 ) }
    dend_43 { pt3dadd( 57.8614, -72.4533, -54.9026, 0.92 ) }
    dend_43 { pt3dadd( 58.6472, -73.2473, -55.3393, 0.46 ) }
    dend_43 { pt3dadd( 59.3099, -73.9119, -55.7112, 0.46 ) }
    dend_43 { pt3dadd( 59.5987, -74.1895, -55.8696, 0.92 ) }
    dend_43 { pt3dadd( 59.7951, -74.3745, -55.9807, 0.92 ) }
    dend_43 { pt3dadd( 60.4284, -74.9308, -56.3231, 0.46 ) }
    dend_43 { pt3dadd( 60.5558, -75.0416, -56.39, 0.46 ) }
    dend_43 { pt3dadd( 61.1905, -75.5677, -56.6944, 0.92 ) }
    dend_43 { pt3dadd( 61.3591, -75.711, -56.7687, 0.92 ) }
    dend_43 { pt3dadd( 62.3389, -76.5804, -57.1994, 0.46 ) }
    dend_43 { pt3dadd( 62.845, -77.0349, -57.4208, 0.92 ) }
    dend_43 { pt3dadd( 62.9695, -77.1577, -57.473, 0.92 ) }
    dend_43 { pt3dadd( 63.937, -78.148, -57.868, 0.46 ) }
    dend_43 { pt3dadd( 64.449, -78.7079, -58.0722, 0.46 ) }
    dend_43 { pt3dadd( 64.8465, -79.1724, -58.2152, 0.92 ) }
    dend_43 { pt3dadd( 64.8514, -79.1785, -58.2168, 0.92 ) }
    dend_43 { pt3dadd( 65.7774, -80.4094, -58.489, 0.46 ) }
    dend_43 { pt3dadd( 66.1247, -80.877, -58.5883, 0.92 ) }
    dend_43 { pt3dadd( 66.2273, -81.0228, -58.6149, 0.92 ) }
    dend_43 { pt3dadd( 67.2673, -82.5101, -58.8703, 0.46 ) }
    dend_43 { pt3dadd( 67.3713, -82.6597, -58.8973, 0.46 ) }
    dend_43 { pt3dadd( 67.7784, -83.2459, -59.0029, 0.92 ) }
    dend_43 { pt3dadd( 68.1396, -83.8118, -59.1212, 0.46 ) }
    dend_43 { pt3dadd( 68.2352, -83.965, -59.1569, 0.46 ) }
    dend_43 { pt3dadd( 68.707, -84.689, -59.3667, 0.92 ) }
    dend_43 { pt3dadd( 69.481, -85.8042, -59.7525, 0.46 ) }
    dend_43 { pt3dadd( 70.0228, -86.5304, -60.033, 0.92 ) }
    dend_43 { pt3dadd( 70.6649, -87.3618, -60.3595, 0.46 ) }
    dend_43 { pt3dadd( 71.1934, -88.0264, -60.6111, 0.92 ) }
    dend_43 { pt3dadd( 72.0684, -89.0927, -60.9949, 0.46 ) }
    dend_43 { pt3dadd( 72.4416, -89.5362, -61.1389, 0.92 ) }
    dend_43 { pt3dadd( 73.3827, -90.5768, -61.417, 0.46 ) }
    dend_43 { pt3dadd( 74.022, -91.2594, -61.556, 0.46 ) }
    dend_43 { pt3dadd( 74.3632, -91.6236, -61.5892, 0.46 ) }
    dend_43 { pt3dadd( 75.0388, -92.3657, -61.6112, 0.46 ) }
    dend_43 { pt3dadd( 75.7058, -93.1071, -61.5946, 0.92 ) }
    dend_43 { pt3dadd( 76.2616, -93.7299, -61.5902, 0.46 ) }
    dend_43 { pt3dadd( 76.7282, -94.2477, -61.6084, 0.92 ) }
    dend_43 { pt3dadd( 78.7623, -96.452, -61.8272, 0.46 ) }
    dend_43 { pt3dadd( 79.3581, -97.0981, -61.9395, 0.92 ) }
    dend_43 { pt3dadd( 79.5121, -97.2655, -61.9814, 0.92 ) }
    dend_43 { pt3dadd( 80.2994, -98.1236, -62.2552, 0.46 ) }
    dend_43 { pt3dadd( 80.7707, -98.6473, -62.438, 0.46 ) }
    dend_43 { pt3dadd( 81.0514, -98.9556, -62.5557, 0.92 ) }
    dend_43 { pt3dadd( 81.6287, -99.5984, -62.7997, 0.46 ) }
    dend_43 { pt3dadd( 81.9526, -99.9552, -62.9187, 0.92 ) }
    dend_43 { pt3dadd( 83.5201, -101.668, -63.4105, 0.46 ) }
    dend_43 { pt3dadd( 84.1592, -102.343, -63.5728, 0.92 ) }
    dend_43 { pt3dadd( 84.3168, -102.508, -63.6126, 0.92 ) }
    dend_43 { pt3dadd( 85.3984, -103.631, -63.8999, 0.46 ) }
    dend_43 { pt3dadd( 85.812, -104.044, -64.0209, 0.92 ) }
    dend_43 { pt3dadd( 86.7506, -104.95, -64.3271, 0.46 ) }
    dend_43 { pt3dadd( 87.2557, -105.429, -64.5008, 0.92 ) }
    dend_43 { pt3dadd( 88.3303, -106.423, -64.8655, 0.46 ) }
    dend_43 { pt3dadd( 88.8885, -106.937, -65.0446, 0.92 ) }
    dend_43 { pt3dadd( 89.8541, -107.823, -65.3528, 0.46 ) }
    dend_43 { pt3dadd( 90.4871, -108.409, -65.5477, 0.92 ) }
    dend_43 { pt3dadd( 91.7849, -109.581, -65.9252, 0.46 ) }
    dend_43 { pt3dadd( 92.5136, -110.242, -66.1242, 0.92 ) }
    dend_43 { pt3dadd( 93.5415, -111.136, -66.363, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 21.3457, -420.377, -95.645, 0.46 ) }
    dend_38 { pt3dadd( 22.5057, -420.814, -97.0987, 0.46 ) }
    dend_38 { pt3dadd( 22.8411, -420.966, -97.5167, 0.46 ) }
    dend_38 { pt3dadd( 25.8429, -423.14, -101.247, 0.46 ) }
    dend_38 { pt3dadd( 26.2304, -423.497, -101.728, 0.92 ) }
    dend_38 { pt3dadd( 27.9503, -425.192, -103.866, 0.46 ) }
    dend_38 { pt3dadd( 28.603, -425.865, -104.64, 0.92 ) }
    dend_38 { pt3dadd( 28.8907, -426.222, -104.974, 0.92 ) }
    dend_38 { pt3dadd( 30.8182, -428.897, -107.157, 0.46 ) }
    dend_38 { pt3dadd( 32.0093, -430.796, -108.469, 0.46 ) }
    dend_38 { pt3dadd( 32.2772, -431.201, -108.768, 0.46 ) }
    dend_38 { pt3dadd( 33.8608, -433.288, -110.59, 0.92 ) }
    dend_38 { pt3dadd( 34.0816, -433.55, -110.879, 0.92 ) }
    dend_38 { pt3dadd( 35.7109, -435.325, -113.218, 0.46 ) }
    dend_38 { pt3dadd( 36.6571, -436.415, -114.921, 0.92 ) }
    dend_38 { pt3dadd( 36.861, -436.682, -115.371, 0.92 ) }
    dend_38 { pt3dadd( 37.7085, -438.211, -117.908, 0.46 ) }
    dend_38 { pt3dadd( 38.154, -439.417, -120.095, 0.46 ) }
    dend_38 { pt3dadd( 38.159, -439.437, -120.128, 0.46 ) }
    dend_38 { pt3dadd( 38.5036, -441.589, -123.4, 0.46 ) }
    dend_38 { pt3dadd( 38.5558, -441.92, -123.854, 0.46 ) }
    dend_38 { pt3dadd( 38.9105, -443.434, -125.533, 0.46 ) }
    dend_38 { pt3dadd( 39.0538, -443.834, -125.912, 0.46 ) }
    dend_38 { pt3dadd( 40.0148, -445.432, -127.507, 0.92 ) }
    dend_38 { pt3dadd( 41.492, -447.322, -129.616, 0.46 ) }
    dend_38 { pt3dadd( 41.73, -447.542, -129.922, 0.92 ) }
    dend_38 { pt3dadd( 43.6254, -449.193, -132.274, 0.46 ) }
    dend_38 { pt3dadd( 44.9494, -450.212, -133.831, 0.46 ) }
    dend_38 { pt3dadd( 47.3876, -452.033, -136.722, 0.46 ) }
    dend_38 { pt3dadd( 47.8081, -452.309, -137.231, 0.46 ) }
    dend_38 { pt3dadd( 49.9488, -453.664, -139.799, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 95/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 21.3457, -420.377, -95.645, 0.46 ) }
    dend_37 { pt3dadd( 21.9262, -423.758, -96.3997, 0.46 ) }
    dend_37 { pt3dadd( 23.0936, -430.045, -97.818, 0.46 ) }
    dend_37 { pt3dadd( 23.2624, -430.902, -98.0103, 0.92 ) }
    dend_37 { pt3dadd( 23.5279, -432.259, -98.3085, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 24.6533, -439.202, -99.7106, 0.46 ) }
    dend_37 { pt3dadd( 24.9376, -441.343, -100.113, 0.92 ) }
    dend_37 { pt3dadd( 25.4182, -445.582, -100.845, 0.46 ) }
    dend_37 { pt3dadd( 25.6079, -447.747, -101.182, 0.92 ) }
    dend_37 { pt3dadd( 25.6453, -448.301, -101.264, 0.92 ) }
    dend_37 { pt3dadd( 25.8857, -455.493, -102.284, 0.46 ) }
    dend_37 { pt3dadd( 25.8308, -458.406, -102.646, 0.46 ) }
    dend_37 { pt3dadd( 25.7838, -459.107, -102.728, 0.46 ) }
    dend_37 { pt3dadd( 25.5196, -461.959, -103.066, 0.92 ) }
    dend_37 { pt3dadd( 25.4581, -462.659, -103.149, 0.92 ) }
    dend_37 { pt3dadd( 25.0306, -468.442, -103.873, 0.46 ) }
    dend_37 { pt3dadd( 24.9907, -468.996, -103.948, 0.46 ) }
    dend_37 { pt3dadd( 24.4976, -475.45, -104.848, 0.46 ) }
    dend_37 { pt3dadd( 24.435, -476.147, -104.947, 0.46 ) }
    dend_37 { pt3dadd( 23.8819, -481.025, -105.634, 0.92 ) }
    dend_37 { pt3dadd( 23.7974, -481.722, -105.719, 0.92 ) }
    dend_37 { pt3dadd( 23.2094, -486.125, -106.183, 0.46 ) }
    dend_37 { pt3dadd( 23.086, -486.818, -106.234, 0.46 ) }
    dend_37 { pt3dadd( 22.4472, -489.754, -106.324, 0.46 ) }
    dend_37 { pt3dadd( 22.3325, -490.301, -106.338, 0.46 ) }
    dend_37 { pt3dadd( 21.3653, -494.582, -106.409, 0.92 ) }
    dend_37 { pt3dadd( 21.2124, -495.27, -106.415, 0.92 ) }
    dend_37 { pt3dadd( 19.8398, -501.507, -106.369, 0.46 ) }
    dend_37 { pt3dadd( 18.027, -509.995, -106.298, 0.46 ) }
    dend_37 { pt3dadd( 17.581, -512.155, -106.275, 0.92 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 47.4075, -65.3822, 5.82382, 0.92 ) }
    dend_32 { pt3dadd( 53.1363, -75.5189, 9.02576, 0.92 ) }
    dend_32 { pt3dadd( 60.3319, -84.4086, 12.6094, 0.92 ) }
    dend_32 { pt3dadd( 65.9533, -94.7905, 15.2073, 0.92 ) }
    dend_32 { pt3dadd( 71.1117, -105.725, 15.9133, 0.92 ) }
    dend_32 { pt3dadd( 76.4083, -116.537, 14.9107, 0.92 ) }
    dend_32 { pt3dadd( 82.2838, -127.064, 15.6551, 0.92 ) }
    dend_32 { pt3dadd( 87.6227, -137.918, 15.9803, 0.92 ) }
    dend_32 { pt3dadd( 92.1077, -149.159, 15.3248, 0.92 ) }
    dend_32 { pt3dadd( 95.7955, -160.419, 12.8671, 0.92 ) }
    dend_32 { pt3dadd( 100.87, -170.685, 9.24719, 0.92 ) }
    dend_32 { pt3dadd( 103.694, -181.426, 4.60928, 0.92 ) }
    dend_32 { pt3dadd( 107.718, -192.49, 1.89406, 0.92 ) }
    dend_32 { pt3dadd( 110.945, -204.183, 1.08618, 0.92 ) }
    dend_32 { pt3dadd( 115.69, -215.325, 1.75078, 0.92 ) }
    dend_32 { pt3dadd( 121.197, -225.929, 3.6492, 0.92 ) }
    dend_32 { pt3dadd( 125.867, -237.118, 3.65924, 0.92 ) }
    dend_32 { pt3dadd( 129.151, -248.814, 4.51217, 0.92 ) }
    dend_32 { pt3dadd( 134.339, -259.561, 2.72242, 0.92 ) }
    dend_32 { pt3dadd( 139.127, -270.621, 1.63188, 0.92 ) }
    dend_32 { pt3dadd( 144.525, -281.442, 1.93485, 0.92 ) }
    dend_32 { pt3dadd( 150.377, -291.937, 3.19282, 0.92 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 47/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 47.4075, -65.3822, 5.82382, 0.46 ) }
    dend_29 { pt3dadd( 54.7457, -70.6509, 2.85008, 0.92 ) }
    dend_29 { pt3dadd( 62.7356, -75.0214, 0.225899, 0.92 ) }
    dend_29 { pt3dadd( 70.8051, -78.1318, -3.5433, 0.92 ) }
    dend_29 { pt3dadd( 79.0023, -82.2374, -5.91657, 0.92 ) }
    dend_29 { pt3dadd( 87.4124, -85.3839, -8.82565, 0.92 ) }
    dend_29 { pt3dadd( 96.0166, -87.8801, -11.7525, 0.92 ) }
    dend_29 { pt3dadd( 103.8, -90.6474, -16.288, 0.92 ) }
    dend_29 { pt3dadd( 111.743, -92.1273, -21.1092, 0.92 ) }
    dend_29 { pt3dadd( 118.752, -93.7981, -27.1588, 0.92 ) }
    dend_29 { pt3dadd( 125.526, -95.0098, -33.5737, 0.92 ) }
    dend_29 { pt3dadd( 131.951, -97.2393, -40.0795, 0.92 ) }
    dend_29 { pt3dadd( 137.739, -98.9192, -47.3028, 0.92 ) }
    dend_29 { pt3dadd( 143.608, -100.783, -54.4165, 0.92 ) }
    dend_29 { pt3dadd( 148.809, -104.434, -61.3848, 0.92 ) }
    dend_29 { pt3dadd( 153.537, -109.338, -67.9599, 0.92 ) }
    dend_29 { pt3dadd( 158.597, -114.067, -74.4073, 0.92 ) }
    dend_29 { pt3dadd( 165.656, -116.554, -80.1206, 0.92 ) }
    dend_29 { pt3dadd( 171.901, -119.096, -86.6904, 0.92 ) }
    dend_29 { pt3dadd( 179.558, -121.351, -91.6831, 0.92 ) }
    dend_29 { pt3dadd( 187.501, -123.868, -96.0786, 0.92 ) }
    dend_29 { pt3dadd( 195.195, -124.798, -101.411, 0.92 ) }
    dend_29 { pt3dadd( 202.95, -126.372, -106.502, 0.92 ) }
    dend_29 { pt3dadd( 210.104, -127.627, -112.481, 0.92 ) }
    dend_29 { pt3dadd( 218.009, -128.04, -117.567, 0.92 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 252.346, -380.242, 134.425, 0.92 ) }
    dend_27 { pt3dadd( 254.703, -389.129, 137.21, 0.92 ) }
    dend_27 { pt3dadd( 256.703, -397.504, 141.37, 0.92 ) }
    dend_27 { pt3dadd( 260.154, -405.442, 145.354, 0.92 ) }
    dend_27 { pt3dadd( 264.319, -412.609, 149.937, 0.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 252.346, -380.242, 134.425, 0.46 ) }
    dend_26 { pt3dadd( 259.956, -386.576, 137.051, 0.92 ) }
    dend_26 { pt3dadd( 267.368, -392.253, 141.2, 0.92 ) }
    dend_26 { pt3dadd( 275.377, -397.361, 144.873, 0.92 ) }
    dend_26 { pt3dadd( 283.743, -401.117, 149.178, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -12.0892, 16.5537, 1.64539, 0.46 ) }
    dend_16 { pt3dadd( -15.0597, 19.0579, 1.24264, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.0892, 16.5537, 1.64539, 0.46 ) }
    dend_11 { pt3dadd( -11.077, 17.709, 3.41603, 0.46 ) }
    dend_11 { pt3dadd( -9.55703, 18.9088, 5.85307, 0.92 ) }
    dend_11 { pt3dadd( -8.70599, 19.5954, 7.04026, 0.46 ) }
    dend_11 { pt3dadd( -7.52746, 20.5813, 8.63837, 0.92 ) }
    dend_11 { pt3dadd( -7.14001, 20.9138, 9.12341, 0.92 ) }
    dend_11 { pt3dadd( -5.59903, 22.297, 10.9712, 0.46 ) }
    dend_11 { pt3dadd( -4.31495, 23.3032, 12.466, 0.92 ) }
    dend_11 { pt3dadd( -2.31209, 24.7057, 14.5509, 0.46 ) }
    dend_11 { pt3dadd( -1.9657, 24.9664, 14.868, 0.46 ) }
    dend_11 { pt3dadd( -0.631188, 26.2038, 16.0222, 0.92 ) }
    dend_11 { pt3dadd( -0.201118, 26.627, 16.3704, 0.92 ) }
    dend_11 { pt3dadd( 5.02514, 31.6846, 25.8081, 0.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 97/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -33.3182, 3.07836, 3.8125, 0.92 ) }
    dend_5 { pt3dadd( -41.2571, 0.351511, 3.50458, 0.92 ) }
    dend_5 { pt3dadd( -49.4575, -1.11098, 4.24657, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( -57.6076, -2.86181, 4.97323, 0.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -33.3182, 3.07836, 3.8125, 0.46 ) }
    dend_2 { pt3dadd( -41.2374, -0.0804964, 4.83768, 0.92 ) }
    dend_2 { pt3dadd( -48.9506, -3.90418, 5.17281, 0.92 ) }
    dend_2 { pt3dadd( -56.2888, -8.38667, 4.20909, 0.92 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -12.0746, 32.8628, -46.704, 0.46 ) }
    dend_57 { pt3dadd( -12.1838, 34.9594, -48.3652, 0.46 ) }
    dend_57 { pt3dadd( -12.3233, 36.7706, -49.8774, 0.46 ) }
    dend_57 { pt3dadd( -12.355, 37.9535, -50.8382, 0.92 ) }
    dend_57 { pt3dadd( -12.3392, 39.8184, -52.4058, 0.46 ) }
    dend_57 { pt3dadd( -12.3274, 40.2254, -52.7795, 0.46 ) }
    dend_57 { pt3dadd( -12.1938, 41.7691, -54.238, 0.46 ) }
    dend_57 { pt3dadd( -12.1595, 42.2603, -54.73, 0.46 ) }
    dend_57 { pt3dadd( -12.1776, 43.7712, -56.2809, 0.92 ) }
    dend_57 { pt3dadd( -12.3036, 45.6763, -58.2634, 0.46 ) }
    dend_57 { pt3dadd( -12.6381, 47.8331, -60.4402, 0.46 ) }
    dend_57 { pt3dadd( -12.9085, 49.0744, -61.6828, 0.92 ) }
    dend_57 { pt3dadd( -13.9932, 52.6988, -65.1873, 0.46 ) }
    dend_57 { pt3dadd( -14.6817, 54.6193, -67.0422, 0.46 ) }
    dend_57 { pt3dadd( -14.8411, 54.9964, -67.4046, 0.46 ) }
    dend_57 { pt3dadd( -15.5336, 56.6304, -68.8653, 0.92 ) }
    dend_57 { pt3dadd( -16.2811, 58.8315, -70.8158, 0.46 ) }
    dend_57 { pt3dadd( -16.4799, 60.4735, -72.256, 0.92 ) }
    dend_57 { pt3dadd( -16.1778, 63.5204, -74.891, 0.46 ) }
    dend_57 { pt3dadd( -16.1732, 63.5385, -74.9063, 0.46 ) }
    dend_57 { pt3dadd( -15.6312, 65.1178, -76.2015, 0.92 ) }
    dend_57 { pt3dadd( -14.1089, 68.6375, -79.0617, 0.46 ) }
    dend_57 { pt3dadd( -11.978, 73.0101, -82.5347, 0.46 ) }
    dend_57 { pt3dadd( -11.9646, 73.0368, -82.5554, 0.46 ) }
    dend_57 { pt3dadd( -10.6416, 75.9037, -84.746, 0.46 ) }
    dend_57 { pt3dadd( -9.743, 78.0821, -86.3919, 0.92 ) }
    dend_57 { pt3dadd( -8.73998, 81.289, -88.724, 0.46 ) }
    dend_57 { pt3dadd( -8.73403, 81.3186, -88.7441, 0.46 ) }
    dend_57 { pt3dadd( -8.52129, 83.3186, -90.0611, 0.92 ) }
    dend_57 { pt3dadd( -8.27545, 86.256, -91.9684, 0.46 ) }
    dend_57 { pt3dadd( -8.2487, 86.8475, -92.3434, 0.46 ) }
    dend_57 { pt3dadd( -8.0802, 91.9928, -95.5668, 0.46 ) }
    dend_57 { pt3dadd( -8.05556, 92.4705, -95.853, 0.46 ) }
    dend_57 { pt3dadd( -7.88565, 94.9162, -97.3464, 0.92 ) }
    dend_57 { pt3dadd( -7.63989, 98.2104, -99.381, 0.46 ) }
    dend_57 { pt3dadd( -7.61929, 98.9644, -99.8652, 0.92 ) }
    dend_57 { pt3dadd( -7.63779, 99.5408, -100.26, 0.92 ) }
    dend_57 { pt3dadd( -8.07036, 103.018, -102.875, 0.46 ) }
    dend_57 { pt3dadd( -8.70582, 105.312, -104.729, 0.46 ) }
    dend_57 { pt3dadd( -9.17986, 106.011, -105.412, 0.92 ) }
    dend_57 { pt3dadd( -11.5896, 107.811, -107.57, 0.46 ) }
    dend_57 { pt3dadd( -12.0245, 107.967, -107.837, 0.46 ) }
    dend_57 { pt3dadd( -13.2149, 108.197, -108.42, 0.46 ) }
    dend_57 { pt3dadd( -15.9216, 108.443, -109.627, 0.92 ) }
    dend_57 { pt3dadd( -18.4595, 108.599, -110.758, 0.46 ) }
    dend_57 { pt3dadd( -18.9308, 108.644, -111.003, 0.46 ) }
    dend_57 { pt3dadd( -22.2851, 109.172, -113.279, 0.92 ) }
    dend_57 { pt3dadd( -24.4064, 109.697, -115.124, 0.46 ) }
    dend_57 { pt3dadd( -25.8215, 110.375, -117.002, 0.92 ) }
    dend_57 { pt3dadd( -26.0729, 110.604, -117.589, 0.92 ) }
    dend_57 { pt3dadd( -26.7979, 111.721, -120.806, 0.46 ) }
    dend_57 { pt3dadd( -27.1625, 112.989, -124.528, 0.46 ) }
    dend_57 { pt3dadd( -27.1626, 113.026, -124.639, 0.46 ) }
    dend_57 { pt3dadd( -26.976, 114.48, -129.263, 0.46 ) }
    dend_57 { pt3dadd( -26.7156, 115.75, -133.43, 0.46 ) }
    dend_57 { pt3dadd( -26.3881, 116.966, -137.392, 1.38 ) }
    dend_57 { pt3dadd( -25.9529, 118.159, -141.218, 0.46 ) }
    dend_57 { pt3dadd( -25.949, 118.17, -141.251, 0.46 ) }
    dend_57 { pt3dadd( -25.7635, 119.025, -143.28, 0.46 ) }
    dend_57 { pt3dadd( -25.7628, 119.037, -143.3, 0.46 ) }
    dend_57 { pt3dadd( -25.9323, 121.883, -146.858, 0.46 ) }
    dend_57 { pt3dadd( -25.935, 121.9, -146.875, 0.46 ) }
    dend_57 { pt3dadd( -26.255, 123.73, -148.373, 0.92 ) }
    dend_57 { pt3dadd( -26.8307, 127.509, -150.979, 0.46 ) }
    dend_57 { pt3dadd( -27.2452, 130.514, -152.79, 0.46 ) }
    dend_57 { pt3dadd( -27.4876, 132.412, -153.812, 0.92 ) }
    dend_57 { pt3dadd( -27.9905, 136.267, -155.634, 0.46 ) }
    dend_57 { pt3dadd( -28.2813, 138.822, -156.746, 0.92 ) }
    dend_57 { pt3dadd( -28.7468, 144.251, -158.903, 0.46 ) }
    dend_57 { pt3dadd( -28.7788, 144.923, -159.139, 0.46 ) }
    dend_57 { pt3dadd( -28.9549, 148.408, -160.292, 0.46 ) }
    dend_57 { pt3dadd( -29.0514, 150.113, -160.876, 0.92 ) }
    dend_57 { pt3dadd( -29.4544, 155.827, -162.847, 0.46 ) }
    dend_57 { pt3dadd( -29.5769, 157.244, -163.341, 0.92 ) }
    dend_57 { pt3dadd( -30.3507, 165.164, -166.129, 0.46 ) }
    dend_57 { pt3dadd( -31.0791, 172.171, -168.625, 0.46 ) }
    dend_57 { pt3dadd( -31.5732, 176.648, -170.251, 0.46 ) }
    dend_57 { pt3dadd( -31.6674, 177.483, -170.56, 0.92 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -12.0746, 32.8628, -46.704, 0.46 ) }
    dend_56 { pt3dadd( -9.49852, 35.5377, -49.5329, 0.46 ) }
    dend_56 { pt3dadd( -8.46879, 36.6162, -50.6155, 0.46 ) }
    dend_56 { pt3dadd( -7.90181, 37.212, -51.2517, 0.92 ) }
    dend_56 { pt3dadd( -6.48146, 38.7352, -52.9155, 0.46 ) }
    dend_56 { pt3dadd( -4.74637, 40.4956, -54.9501, 0.46 ) }
    dend_56 { pt3dadd( -4.52375, 40.7166, -55.2112, 0.46 ) }
    dend_56 { pt3dadd( -1.94042, 43.103, -58.1985, 0.46 ) }
    dend_56 { pt3dadd( -0.422049, 44.4585, -59.934, 0.46 ) }
    dend_56 { pt3dadd( -0.193166, 44.657, -60.1926, 0.46 ) }
    dend_56 { pt3dadd( 1.54025, 46.165, -62.1475, 0.46 ) }
    dend_56 { pt3dadd( 1.83021, 46.4235, -62.4838, 0.46 ) }
    dend_56 { pt3dadd( 3.73443, 48.0019, -64.6122, 0.46 ) }
    dend_56 { pt3dadd( 3.97886, 48.1749, -64.8728, 0.46 ) }
    dend_56 { pt3dadd( 4.41755, 48.4766, -65.253, 0.92 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 98/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -3.37034, -35.9144, -25.3998, 0.46 ) }
    dend_54 { pt3dadd( -2.3963, -35.3321, -25.9853, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( -1.2048, -34.6198, -26.7015, 0.92 ) }
    dend_54 { pt3dadd( 0.310157, -33.7142, -27.6122, 0.46 ) }
    dend_54 { pt3dadd( 1.15872, -33.2069, -28.1222, 0.46 ) }
    dend_54 { pt3dadd( 2.07959, -32.6564, -28.6758, 0.92 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -3.37034, -35.9144, -25.3998, 0.46 ) }
    dend_51 { pt3dadd( -5.27186, -36.228, -27.4404, 0.46 ) }
    dend_51 { pt3dadd( -6.7077, -36.4862, -28.8751, 0.46 ) }
    dend_51 { pt3dadd( -8.26799, -36.9335, -30.1986, 0.92 ) }
    dend_51 { pt3dadd( -9.61141, -37.3757, -31.1789, 0.46 ) }
    dend_51 { pt3dadd( -10.0397, -37.5436, -31.4548, 0.46 ) }
    dend_51 { pt3dadd( -11.58, -38.2061, -32.3741, 0.46 ) }
    dend_51 { pt3dadd( -13.5167, -39.036, -33.4182, 0.92 ) }
    dend_51 { pt3dadd( -15.9179, -40.21, -34.5336, 0.46 ) }
    dend_51 { pt3dadd( -17.0992, -40.7819, -34.9939, 0.92 ) }
    dend_51 { pt3dadd( -19.806, -41.9381, -35.9571, 0.46 ) }
    dend_51 { pt3dadd( -20.4138, -42.1739, -36.1697, 1.38 ) }
    dend_51 { pt3dadd( -22.3329, -42.7933, -36.8124, 0.46 ) }
    dend_51 { pt3dadd( -22.35, -42.7979, -36.8178, 0.46 ) }
    dend_51 { pt3dadd( -25.1871, -43.4622, -37.6904, 0.92 ) }
    dend_51 { pt3dadd( -27.2041, -43.8588, -38.2773, 0.46 ) }
    dend_51 { pt3dadd( -28.7896, -44.2545, -38.6697, 0.46 ) }
    dend_51 { pt3dadd( -29.2926, -44.4006, -38.7848, 0.46 ) }
    dend_51 { pt3dadd( -30.9378, -45.0032, -39.0932, 0.92 ) }
    dend_51 { pt3dadd( -34.4442, -46.469, -39.6952, 0.46 ) }
    dend_51 { pt3dadd( -36.4708, -47.4576, -39.997, 1.38 ) }
    dend_51 { pt3dadd( -39.9206, -49.3681, -40.4104, 0.46 ) }
    dend_51 { pt3dadd( -40.381, -49.6472, -40.4657, 0.46 ) }
    dend_51 { pt3dadd( -42.3582, -50.9199, -40.7372, 0.92 ) }
    dend_51 { pt3dadd( -43.0866, -51.4257, -40.8389, 1.38 ) }
    dend_51 { pt3dadd( -43.4295, -51.6676, -40.8801, 1.38 ) }
    dend_51 { pt3dadd( -46.3915, -53.852, -41.2402, 0.46 ) }
    dend_51 { pt3dadd( -47.0902, -54.3304, -41.3179, 0.46 ) }
    dend_51 { pt3dadd( -48.1306, -55.0684, -41.451, 1.38 ) }
    dend_51 { pt3dadd( -51.7011, -57.6026, -41.9198, 0.46 ) }
    dend_51 { pt3dadd( -53.1857, -58.6562, -42.1346, 1.38 ) }
    dend_51 { pt3dadd( -55.9101, -60.4265, -42.6557, 0.46 ) }
    dend_51 { pt3dadd( -57.4243, -61.356, -42.9483, 1.38 ) }
    dend_51 { pt3dadd( -59.378, -62.5419, -43.3457, 0.46 ) }
    dend_51 { pt3dadd( -60.5394, -63.262, -43.6388, 0.92 ) }
    dend_51 { pt3dadd( -62.2554, -64.2643, -44.2355, 0.46 ) }
    dend_51 { pt3dadd( -64.7124, -65.6633, -45.2462, 0.46 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 93.5415, -111.136, -66.363, 0.46 ) }
    dend_45 { pt3dadd( 98.4623, -115.399, -65.4326, 0.46 ) }
    dend_45 { pt3dadd( 101.255, -117.798, -65.0519, 0.46 ) }
    dend_45 { pt3dadd( 103.091, -119.348, -64.872, 0.92 ) }
    dend_45 { pt3dadd( 106.211, -121.915, -64.6843, 0.46 ) }
    dend_45 { pt3dadd( 107.811, -123.177, -64.6927, 0.92 ) }
    dend_45 { pt3dadd( 112.68, -126.899, -64.9211, 0.46 ) }
    dend_45 { pt3dadd( 114.295, -128.093, -65.1259, 0.92 ) }
    dend_45 { pt3dadd( 115.923, -129.283, -65.349, 0.46 ) }
    dend_45 { pt3dadd( 118.384, -131.029, -65.7294, 0.92 ) }
    dend_45 { pt3dadd( 123.628, -134.793, -66.5111, 0.46 ) }
    dend_45 { pt3dadd( 126.057, -136.585, -66.8343, 0.92 ) }
    dend_45 { pt3dadd( 132.531, -141.414, -67.6478, 0.46 ) }
    dend_45 { pt3dadd( 136.515, -144.373, -68.0936, 0.46 ) }
    dend_45 { pt3dadd( 139.288, -146.434, -68.3684, 0.92 ) }
    dend_45 { pt3dadd( 143.847, -149.852, -68.7348, 0.46 ) }
    dend_45 { pt3dadd( 148.147, -153.121, -68.9832, 0.46 ) }
    dend_45 { pt3dadd( 148.648, -153.502, -69.0108, 0.92 ) }
    dend_45 { pt3dadd( 153.599, -157.19, -69.3333, 0.46 ) }
    dend_45 { pt3dadd( 153.622, -157.205, -69.3348, 0.46 ) }
    dend_45 { pt3dadd( 154.144, -157.556, -69.3619, 0.92 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 93.5415, -111.136, -66.363, 0.46 ) }
    dend_44 { pt3dadd( 96.201, -113.177, -68.6882, 0.46 ) }
    dend_44 { pt3dadd( 97.8696, -114.372, -70.1383, 0.46 ) }
    dend_44 { pt3dadd( 99.304, -115.457, -71.2712, 0.46 ) }
    dend_44 { pt3dadd( 99.631, -115.71, -71.4985, 0.46 ) }
    dend_44 { pt3dadd( 101.888, -117.427, -72.9622, 0.92 ) }
    dend_44 { pt3dadd( 102.228, -117.68, -73.1696, 0.92 ) }
    dend_44 { pt3dadd( 103.849, -118.88, -74.1287, 0.46 ) }
    dend_44 { pt3dadd( 106.393, -120.641, -75.5469, 0.46 ) }
    dend_44 { pt3dadd( 109.599, -122.766, -77.2244, 0.46 ) }
    dend_44 { pt3dadd( 110.465, -123.32, -77.6661, 0.92 ) }
    dend_44 { pt3dadd( 114.036, -125.551, -79.4059, 0.46 ) }
    dend_44 { pt3dadd( 116.192, -126.855, -80.4633, 0.46 ) }
    dend_44 { pt3dadd( 118.165, -128.004, -81.4354, 0.46 ) }
    dend_44 { pt3dadd( 119.642, -128.827, -82.1706, 0.92 ) }
    dend_44 { pt3dadd( 122.673, -130.465, -83.6728, 0.46 ) }
    dend_44 { pt3dadd( 124.155, -131.228, -84.4378, 0.92 ) }
    dend_44 { pt3dadd( 126.94, -132.584, -85.9199, 0.46 ) }
    dend_44 { pt3dadd( 127.821, -133.001, -86.4243, 1.38 ) }
    dend_44 { pt3dadd( 129.697, -133.904, -87.5758, 0.46 ) }
    dend_44 { pt3dadd( 131.222, -134.626, -88.5698, 0.92 ) }
    dend_44 { pt3dadd( 133.518, -135.652, -90.1771, 0.46 ) }
    dend_44 { pt3dadd( 136.365, -136.833, -92.2663, 0.46 ) }
    dend_44 { pt3dadd( 138.915, -137.807, -94.2277, 0.46 ) }
    dend_44 { pt3dadd( 140.371, -138.352, -95.4235, 0.46 ) }
    dend_44 { pt3dadd( 141.669, -138.831, -96.5958, 0.92 ) }
    dend_44 { pt3dadd( 144.549, -139.94, -99.2656, 0.46 ) }
    dend_44 { pt3dadd( 145.526, -140.323, -100.187, 0.92 ) }
    dend_44 { pt3dadd( 146.988, -140.84, -101.676, 0.46 ) }
    dend_44 { pt3dadd( 148.996, -141.488, -103.815, 0.46 ) }
    dend_44 { pt3dadd( 150.475, -141.92, -105.548, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 93/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 150.377, -291.937, 3.19282, 0.92 ) }
    dend_34 { pt3dadd( 155.743, -304.77, 3.97284, 0.92 ) }
    dend_34 { pt3dadd( 161.27, -317.29, 6.55082, 0.92 ) }
    dend_34 { pt3dadd( 168.308, -329.171, 7.69644, 0.92 ) }
    dend_34 { pt3dadd( 176.124, -340.54, 7.33971, 0.92 ) }
    dend_34 { pt3dadd( 182.674, -352.599, 9.43911, 0.92 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 99/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 150.377, -291.937, 3.19282, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( 155.147, -301.687, 2.679, 0.92 ) }
    dend_33 { pt3dadd( 158.746, -311.879, 1.23386, 0.92 ) }
    dend_33 { pt3dadd( 161.231, -322.337, -0.750343, 0.92 ) }
    dend_33 { pt3dadd( 164.593, -332.46, -2.98837, 0.92 ) }
    dend_33 { pt3dadd( 168.391, -342.153, -6.08987, 0.92 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 5/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 218.009, -128.04, -117.567, 0.92 ) }
    dend_31 { pt3dadd( 225.498, -131.243, -124.501, 0.92 ) }
    dend_31 { pt3dadd( 234.584, -133.723, -129.547, 0.92 ) }
    dend_31 { pt3dadd( 243.442, -134.643, -135.438, 0.92 ) }
    dend_31 { pt3dadd( 251.981, -135.695, -141.76, 0.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 218.009, -128.04, -117.567, 0.46 ) }
    dend_30 { pt3dadd( 228.26, -130.946, -122.69, 0.92 ) }
    dend_30 { pt3dadd( 238.257, -135.393, -127.248, 0.92 ) }
    dend_30 { pt3dadd( 247.705, -138.95, -133.425, 0.92 ) }
    dend_30 { pt3dadd( 255.785, -143.174, -141.0, 0.92 ) }
    dend_30 { pt3dadd( 263.487, -145.956, -149.533, 0.92 ) }
    dend_30 { pt3dadd( 271.401, -146.396, -158.29, 0.92 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 17/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -15.0597, 19.0579, 1.24264, 0.92 ) }
    dend_18 { pt3dadd( -15.3692, 22.1175, 1.79768, 0.92 ) }
    dend_18 { pt3dadd( -15.566, 24.491, 2.24544, 1.38 ) }
    dend_18 { pt3dadd( -16.0209, 30.5217, 3.30419, 0.92 ) }
    dend_18 { pt3dadd( -16.1313, 32.9097, 3.69928, 1.38 ) }
    dend_18 { pt3dadd( -16.2086, 37.6679, 4.47121, 0.92 ) }
    dend_18 { pt3dadd( -16.1625, 41.8818, 5.13674, 0.92 ) }
    dend_18 { pt3dadd( -16.1261, 42.4679, 5.22129, 0.92 ) }
    dend_18 { pt3dadd( -15.7817, 45.7232, 5.61162, 0.92 ) }
    dend_18 { pt3dadd( -15.4311, 48.164, 5.84968, 0.92 ) }
    dend_18 { pt3dadd( -14.7946, 52.3035, 6.18074, 1.38 ) }
    dend_18 { pt3dadd( -14.3233, 55.3738, 6.38475, 0.92 ) }
    dend_18 { pt3dadd( -13.7836, 59.0996, 6.63217, 1.38 ) }
    dend_18 { pt3dadd( -13.1765, 64.0914, 7.09398, 0.92 ) }
    dend_18 { pt3dadd( -12.9417, 66.5265, 7.39381, 0.92 ) }
    dend_18 { pt3dadd( -12.9119, 67.1127, 7.48055, 0.92 ) }
    dend_18 { pt3dadd( -12.8759, 68.2846, 7.66642, 1.38 ) }
    dend_18 { pt3dadd( -12.8615, 71.8258, 8.338, 0.92 ) }
    dend_18 { pt3dadd( -12.9324, 74.4982, 8.99968, 0.92 ) }
    dend_18 { pt3dadd( -13.0875, 76.7648, 9.73271, 1.38 ) }
    dend_18 { pt3dadd( -13.2853, 78.9978, 10.5187, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.0597, 19.0579, 1.24264, 0.46 ) }
    dend_17 { pt3dadd( -18.635, 16.4852, -0.855564, 0.46 ) }
    dend_17 { pt3dadd( -19.9232, 15.3985, -1.71094, 0.92 ) }
    dend_17 { pt3dadd( -20.3378, 15.0488, -1.98623, 0.92 ) }
    dend_17 { pt3dadd( -23.8057, 12.1236, -4.28887, 0.46 ) }
    dend_17 { pt3dadd( -26.7528, 9.63775, -6.24569, 1.38 ) }
    dend_17 { pt3dadd( -28.7928, 7.917, -7.60023, 0.46 ) }
    dend_17 { pt3dadd( -31.6567, 5.91377, -9.57847, 1.38 ) }
    dend_17 { pt3dadd( -41.3273, -0.571305, -15.7174, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.02514, 31.6846, 25.8081, 0.92 ) }
    dend_15 { pt3dadd( 11.6906, 37.5746, 33.8632, 0.92 ) }
    dend_15 { pt3dadd( 16.4134, 44.8597, 42.2721, 0.92 ) }
    dend_15 { pt3dadd( 21.3196, 50.6507, 51.5762, 0.92 ) }
    dend_15 { pt3dadd( 27.0804, 56.0771, 60.5767, 0.92 ) }
    dend_15 { pt3dadd( 33.9018, 61.7348, 68.6499, 0.92 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.02514, 31.6846, 25.8081, 0.46 ) }
    dend_12 { pt3dadd( 9.11018, 35.6022, 35.0154, 0.92 ) }
    dend_12 { pt3dadd( 12.3873, 39.8433, 44.4173, 0.92 ) }
    dend_12 { pt3dadd( 15.2387, 44.8866, 53.6033, 0.92 ) }
    dend_12 { pt3dadd( 19.7647, 48.1562, 62.8261, 0.92 ) }
    dend_12 { pt3dadd( 24.3475, 50.3091, 72.3005, 0.92 ) }
    dend_12 { pt3dadd( 29.2245, 54.5732, 80.9703, 0.92 ) }
    dend_12 { pt3dadd( 34.2075, 59.8536, 89.0625, 0.92 ) }
    dend_12 { pt3dadd( 37.9642, 64.5589, 98.0814, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 62/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -57.6076, -2.86181, 4.97323, 0.92 ) }
    dend_7 { pt3dadd( -68.4935, -5.53199, 6.17211, 0.92 ) }
    dend_7 { pt3dadd( -79.1354, -9.34258, 6.13618, 0.92 ) }
    dend_7 { pt3dadd( -90.0007, -12.1077, 7.32638, 0.92 ) }
    dend_7 { pt3dadd( -101.134, -13.6582, 7.83874, 0.92 ) }
    dend_7 { pt3dadd( -112.147, -13.5918, 10.0978, 0.92 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -57.6076, -2.86181, 4.97323, 0.46 ) }
    dend_6 { pt3dadd( -70.2211, -5.60568, 4.65898, 0.92 ) }
    dend_6 { pt3dadd( -82.8287, -7.61872, 2.62407, 0.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -56.2888, -8.38667, 4.20909, 0.92 ) }
    dend_4 { pt3dadd( -62.6786, -11.7378, 4.84602, 0.92 ) }
    dend_4 { pt3dadd( -68.5098, -15.8854, 6.14597, 0.92 ) }
    dend_4 { pt3dadd( -74.9837, -19.0628, 6.7479, 0.92 ) }
    dend_4 { pt3dadd( -81.8239, -21.3286, 6.94649, 0.92 ) }
    dend_4 { pt3dadd( -88.3212, -24.5037, 7.27014, 0.92 ) }
    dend_4 { pt3dadd( -94.4682, -27.9799, 8.86783, 0.92 ) }
    dend_4 { pt3dadd( -101.053, -30.8524, 9.62175, 0.92 ) }
    dend_4 { pt3dadd( -107.964, -32.5914, 10.5841, 0.92 ) }
    dend_4 { pt3dadd( -114.889, -34.5382, 10.2077, 0.92 ) }
    dend_4 { pt3dadd( -121.95, -35.4554, 9.26052, 0.92 ) }
    dend_4 { pt3dadd( -128.93, -36.295, 7.78303, 0.92 ) }
    dend_4 { pt3dadd( -135.694, -36.4038, 5.38871, 0.92 ) }
    dend_4 { pt3dadd( -142.526, -36.0883, 3.223, 0.92 ) }
    dend_4 { pt3dadd( -149.518, -35.5362, 1.71677, 0.92 ) }
    dend_4 { pt3dadd( -156.272, -34.184, -0.296563, 0.92 ) }
    dend_4 { pt3dadd( -162.66, -32.2423, -2.9463, 0.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 88/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -56.2888, -8.38667, 4.20909, 0.46 ) }
    dend_3 { pt3dadd( -65.2753, -12.2914, 2.93611, 0.92 ) }
    dend_3 { pt3dadd( -73.2233, -18.2832, 2.68736, 0.92 ) }
    dend_3 { pt3dadd( -81.8439, -23.0081, 1.39608, 0.92 ) }
    dend_3 { pt3dadd( -90.4769, -27.8259, 0.732041, 0.92 ) }
    dend_3 { pt3dadd( -99.4405, -31.5468, -1.12845, 0.92 ) }
    dend_3 { pt3dadd( -107.602, -35.7836, -4.88759, 0.92 ) }
    dend_3 { pt3dadd( -116.356, -39.0587, -8.10246, 0.92 ) }
    dend_3 { pt3dadd( -125.024, -43.7132, -9.29384, 0.92 ) }
    dend_3 { pt3dadd( -132.354, -50.5075, -9.31822, 0.92 ) }
    dend_3 { pt3dadd( -138.443, -58.1722, -11.8402, 0.92 ) }
    dend_3 { pt3dadd( -143.788, -65.8307, -15.8026, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( -148.262, -73.5469, -20.6963, 0.92 ) }
    dend_3 { pt3dadd( -152.434, -81.7823, -25.0261, 0.92 ) }
    dend_3 { pt3dadd( -157.834, -89.8205, -28.0602, 0.92 ) }
    dend_3 { pt3dadd( -161.639, -99.0712, -30.0971, 0.92 ) }
    dend_3 { pt3dadd( -164.468, -108.792, -31.526, 0.92 ) }
    dend_3 { pt3dadd( -165.693, -118.927, -31.5273, 0.92 ) }
    dend_3 { pt3dadd( -164.916, -128.91, -29.9093, 0.92 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -64.7124, -65.6633, -45.2462, 0.46 ) }
    dend_53 { pt3dadd( -66.8487, -68.3806, -45.2525, 0.46 ) }
    dend_53 { pt3dadd( -67.6408, -69.4072, -45.3249, 0.92 ) }
    dend_53 { pt3dadd( -70.6036, -73.239, -45.7038, 0.46 ) }
    dend_53 { pt3dadd( -70.9036, -73.6457, -45.757, 0.46 ) }
    dend_53 { pt3dadd( -71.466, -74.4082, -45.8566, 0.92 ) }
    dend_53 { pt3dadd( -71.8539, -74.9341, -45.9252, 0.92 ) }
    dend_53 { pt3dadd( -73.7095, -77.4424, -46.4298, 0.46 ) }
    dend_53 { pt3dadd( -73.9437, -77.7611, -46.5106, 0.46 ) }
    dend_53 { pt3dadd( -74.7217, -79.0639, -47.0335, 0.92 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 17/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -64.7124, -65.6633, -45.2462, 0.46 ) }
    dend_52 { pt3dadd( -66.5335, -65.4336, -45.1936, 0.46 ) }
    dend_52 { pt3dadd( -67.3161, -65.5108, -45.1478, 0.46 ) }
    dend_52 { pt3dadd( -69.1167, -65.8173, -45.0713, 0.92 ) }
    dend_52 { pt3dadd( -69.7211, -65.9219, -45.045, 0.92 ) }
    dend_52 { pt3dadd( -72.6578, -66.5033, -45.1118, 0.46 ) }
    dend_52 { pt3dadd( -73.2571, -66.623, -45.1682, 0.46 ) }
    dend_52 { pt3dadd( -80.0347, -68.0744, -46.1107, 0.46 ) }
    dend_52 { pt3dadd( -81.5872, -68.4997, -46.4079, 0.92 ) }
    dend_52 { pt3dadd( -82.3254, -68.7195, -46.5745, 0.92 ) }
    dend_52 { pt3dadd( -85.9965, -70.0366, -47.5474, 0.46 ) }
    dend_52 { pt3dadd( -88.4397, -71.0756, -48.3009, 0.92 ) }
    dend_52 { pt3dadd( -89.2989, -71.4807, -48.5948, 0.92 ) }
    dend_52 { pt3dadd( -93.5581, -73.6827, -50.2809, 0.46 ) }
    dend_52 { pt3dadd( -94.3883, -74.1334, -50.5967, 0.46 ) }
    dend_52 { pt3dadd( -97.2296, -75.781, -51.5883, 0.46 ) }
    dend_52 { pt3dadd( -97.7117, -76.1196, -51.7811, 0.46 ) }
    dend_52 { pt3dadd( -99.9736, -78.0093, -53.0922, 0.92 ) }
    dend_52 { pt3dadd( -100.506, -78.4678, -53.4718, 0.92 ) }
    dend_52 { pt3dadd( -102.858, -80.4346, -55.3619, 0.46 ) }
    dend_52 { pt3dadd( -103.261, -80.7832, -55.6853, 0.46 ) }
    dend_52 { pt3dadd( -106.382, -83.5953, -58.1189, 0.92 ) }
    dend_52 { pt3dadd( -109.471, -86.6542, -60.2713, 0.46 ) }
    dend_52 { pt3dadd( -110.082, -87.3093, -60.6909, 0.46 ) }
    dend_52 { pt3dadd( -110.859, -88.1528, -61.1921, 0.92 ) }
    dend_52 { pt3dadd( -113.965, -91.629, -63.0804, 0.46 ) }
    dend_52 { pt3dadd( -115.206, -93.0461, -63.7899, 0.92 ) }
    dend_52 { pt3dadd( -118.998, -97.3325, -65.7093, 0.46 ) }
    dend_52 { pt3dadd( -122.118, -101.148, -67.4587, 0.46 ) }
    dend_52 { pt3dadd( -124.046, -103.55, -68.6238, 0.92 ) }
    dend_52 { pt3dadd( -125.694, -105.603, -69.6721, 0.46 ) }
    dend_52 { pt3dadd( -126.885, -107.028, -70.4775, 0.92 ) }
    dend_52 { pt3dadd( -127.341, -107.565, -70.8349, 0.92 ) }
    dend_52 { pt3dadd( -129.532, -110.116, -72.8447, 0.46 ) }
    dend_52 { pt3dadd( -130.886, -111.784, -74.3056, 0.92 ) }
    dend_52 { pt3dadd( -131.194, -112.172, -74.6899, 0.92 ) }
    dend_52 { pt3dadd( -132.285, -113.645, -76.3764, 0.46 ) }
    dend_52 { pt3dadd( -133.383, -115.273, -78.3262, 0.92 ) }
    dend_52 { pt3dadd( -133.602, -115.64, -78.7871, 0.92 ) }
    dend_52 { pt3dadd( -134.4, -117.084, -80.7107, 0.46 ) }
    dend_52 { pt3dadd( -134.537, -117.438, -81.2131, 0.46 ) }
    dend_52 { pt3dadd( -134.909, -118.63, -82.8198, 0.92 ) }
    dend_52 { pt3dadd( -135.409, -120.468, -85.1883, 0.46 ) }
    dend_52 { pt3dadd( -135.896, -122.006, -86.894, 0.46 ) }
    dend_52 { pt3dadd( -136.035, -122.435, -87.3408, 0.46 ) }
    dend_52 { pt3dadd( -136.547, -124.131, -88.8789, 0.46 ) }
    dend_52 { pt3dadd( -137.016, -125.383, -89.9564, 0.46 ) }
    dend_52 { pt3dadd( -137.272, -125.989, -90.4117, 0.46 ) }
    dend_52 { pt3dadd( -139.908, -131.025, -93.5882, 0.46 ) }
    dend_52 { pt3dadd( -140.282, -131.641, -93.9256, 0.46 ) }
    dend_52 { pt3dadd( -141.533, -133.44, -94.8564, 0.92 ) }
    dend_52 { pt3dadd( -143.342, -135.721, -95.9265, 0.46 ) }
    dend_52 { pt3dadd( -144.869, -137.474, -96.7329, 0.92 ) }
    dend_52 { pt3dadd( -148.481, -141.487, -98.4416, 0.46 ) }
    dend_52 { pt3dadd( -149.175, -142.215, -98.7311, 0.92 ) }
    dend_52 { pt3dadd( -149.826, -142.936, -99.0045, 0.92 ) }
    dend_52 { pt3dadd( -152.645, -146.01, -100.123, 0.46 ) }
    dend_52 { pt3dadd( -153.142, -146.595, -100.313, 0.46 ) }
    dend_52 { pt3dadd( -154.22, -147.848, -100.686, 1.38 ) }
    dend_52 { pt3dadd( -156.788, -151.009, -101.672, 0.46 ) }
    dend_52 { pt3dadd( -158.245, -152.859, -102.389, 0.92 ) }
    dend_52 { pt3dadd( -160.484, -155.768, -103.661, 0.46 ) }
    dend_52 { pt3dadd( -161.799, -157.625, -104.616, 0.92 ) }
    dend_52 { pt3dadd( -162.108, -158.09, -104.879, 0.92 ) }
    dend_52 { pt3dadd( -163.713, -160.975, -106.783, 0.46 ) }
    dend_52 { pt3dadd( -164.736, -163.574, -108.703, 0.46 ) }
    dend_52 { pt3dadd( -164.84, -164.071, -109.088, 0.46 ) }
    dend_52 { pt3dadd( -165.131, -167.517, -111.801, 0.92 ) }
    dend_52 { pt3dadd( -165.15, -168.009, -112.207, 0.92 ) }
    dend_52 { pt3dadd( -165.139, -171.434, -115.033, 0.46 ) }
    dend_52 { pt3dadd( -165.121, -172.717, -116.013, 0.92 ) }
    dend_52 { pt3dadd( -165.18, -176.79, -118.963, 0.92 ) }
    dend_52 { pt3dadd( -165.255, -177.439, -119.434, 0.92 ) }
    dend_52 { pt3dadd( -165.89, -179.818, -121.148, 0.46 ) }
    dend_52 { pt3dadd( -166.078, -180.308, -121.506, 0.46 ) }
    dend_52 { pt3dadd( -167.174, -182.247, -122.941, 0.92 ) }
    dend_52 { pt3dadd( -167.47, -182.825, -123.403, 0.92 ) }
    dend_52 { pt3dadd( -168.91, -185.807, -125.864, 0.46 ) }
    dend_52 { pt3dadd( -169.175, -186.393, -126.337, 0.46 ) }
    dend_52 { pt3dadd( -171.341, -191.632, -130.442, 0.46 ) }
    dend_52 { pt3dadd( -171.568, -192.23, -130.923, 0.46 ) }
    dend_52 { pt3dadd( -173.474, -198.401, -136.157, 0.46 ) }
    dend_52 { pt3dadd( -173.52, -198.577, -136.305, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.2853, 78.9978, 10.5187, 0.92 ) }
    dend_20 { pt3dadd( -13.0599, 81.2419, 11.0803, 0.92 ) }
    dend_20 { pt3dadd( -12.7403, 84.4246, 11.8768, 0.92 ) }
    dend_20 { pt3dadd( -12.5914, 85.9075, 12.2479, 0.92 ) }
    dend_20 { pt3dadd( -12.4104, 87.7105, 12.699, 1.38 ) }
    dend_20 { pt3dadd( -12.048, 91.3189, 13.602, 0.92 ) }
    dend_20 { pt3dadd( -11.9096, 92.6965, 13.9468, 1.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.2853, 78.9978, 10.5187, 0.46 ) }
    dend_19 { pt3dadd( -13.472, 80.5066, 10.3299, 0.46 ) }
    dend_19 { pt3dadd( -13.524, 80.91, 10.2807, 0.46 ) }
    dend_19 { pt3dadd( -13.524, 80.91, 10.2807, 0.92 ) }
    dend_19 { pt3dadd( -13.835, 83.561, 10.08, 0.46 ) }
    dend_19 { pt3dadd( -13.8377, 83.582, 10.0787, 0.46 ) }
    dend_19 { pt3dadd( -14.0402, 84.8623, 10.039, 0.92 ) }
    dend_19 { pt3dadd( -14.1113, 85.1729, 10.0377, 0.92 ) }
    dend_19 { pt3dadd( -14.4986, 86.7996, 10.0866, 0.46 ) }
    dend_19 { pt3dadd( -14.5741, 87.1164, 10.1054, 0.46 ) }
    dend_19 { pt3dadd( -14.8018, 87.9699, 10.1747, 1.38 ) }
    dend_19 { pt3dadd( -15.373, 90.0548, 10.3534, 0.46 ) }
    dend_19 { pt3dadd( -15.8311, 91.6588, 10.5016, 0.46 ) }
    dend_19 { pt3dadd( -16.628, 94.5011, 10.778, 0.46 ) }
    dend_19 { pt3dadd( -17.0945, 96.1241, 10.9386, 0.46 ) }
    dend_19 { pt3dadd( -17.4945, 97.6429, 11.1004, 0.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 37.9642, 64.5589, 98.0814, 0.92 ) }
    dend_14 { pt3dadd( 42.3489, 68.8491, 106.955, 0.92 ) }
    dend_14 { pt3dadd( 44.9383, 72.982, 116.59, 0.92 ) }
    dend_14 { pt3dadd( 46.1987, 75.4019, 126.98, 0.92 ) }
    dend_14 { pt3dadd( 45.8966, 78.6067, 137.27, 0.92 ) }
    dend_14 { pt3dadd( 47.1779, 80.8673, 147.687, 0.92 ) }
    dend_14 { pt3dadd( 49.2358, 82.9193, 158.011, 0.92 ) }
    dend_14 { pt3dadd( 49.1679, 84.0149, 168.661, 0.92 ) }
    dend_14 { pt3dadd( 49.9482, 84.0138, 179.31, 0.92 ) }
    dend_14 { pt3dadd( 50.2411, 85.2401, 189.944, 0.92 ) }
    dend_14 { pt3dadd( 51.9776, 88.2133, 200.138, 0.92 ) }
    dend_14 { pt3dadd( 55.0243, 90.2566, 210.208, 0.92 ) }
    dend_14 { pt3dadd( 57.6932, 92.3207, 220.385, 0.92 ) }
    dend_14 { pt3dadd( 61.3501, 93.5334, 230.359, 0.92 ) }
    dend_14 { pt3dadd( 66.9222, 95.1495, 239.337, 0.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 37.9642, 64.5589, 98.0814, 0.46 ) }
    dend_13 { pt3dadd( 44.0201, 70.3464, 109.416, 0.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -112.147, -13.5918, 10.0978, 0.92 ) }
    dend_9 { pt3dadd( -122.397, -15.662, 11.2069, 0.92 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -112.147, -13.5918, 10.0978, 0.46 ) }
    dend_8 { pt3dadd( -120.773, -15.2653, 10.5863, 0.92 ) }
    dend_8 { pt3dadd( -129.304, -15.8929, 12.5943, 0.92 ) }
    dend_8 { pt3dadd( -137.841, -17.7065, 13.7422, 0.92 ) }
    dend_8 { pt3dadd( -146.108, -19.6984, 16.0206, 0.92 ) }
    dend_8 { pt3dadd( -154.045, -22.6169, 18.5453, 0.92 ) }
    dend_8 { pt3dadd( -162.266, -24.8249, 20.8067, 0.92 ) }
    dend_8 { pt3dadd( -170.296, -28.2913, 22.1378, 0.92 ) }
    dend_8 { pt3dadd( -178.148, -32.3995, 22.633, 0.92 ) }
    dend_8 { pt3dadd( -186.361, -34.8791, 24.6562, 0.92 ) }
    dend_8 { pt3dadd( -194.62, -36.6099, 27.1467, 0.92 ) }
    dend_8 { pt3dadd( -202.874, -37.7175, 29.9599, 0.92 ) }
    dend_8 { pt3dadd( -211.304, -40.1275, 30.8816, 0.92 ) }
    dend_8 { pt3dadd( -219.627, -43.0782, 31.0727, 0.92 ) }
    dend_8 { pt3dadd( -228.294, -44.4306, 31.7168, 0.92 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, axon_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, axon_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_48 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_41 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_43 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_37 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_26 OneSecGrp_SectionRef_31.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_45 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_34 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_30 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_12 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_49 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_50 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_56 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 3
    dend_35 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_48 nseg = 13
    dend_41 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 19
    dend_25 nseg = 21
    dend_22 nseg = 3
    dend_55 nseg = 3
    dend_43 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_32 nseg = 13
    dend_29 nseg = 11
    dend_26 nseg = 3
    dend_57 nseg = 11
    dend_51 nseg = 3
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_12 nseg = 5
    dend_7 nseg = 3
    dend_4 nseg = 5
    dend_3 nseg = 9
    dend_52 nseg = 11
    dend_14 nseg = 7
    dend_8 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_NBC_656e1c0a2d_0_0


