// Cell: bIR215_L4_DBC_f339de2544_0_0
/*
{
  "id" : "bIR215_L4_DBC_f339de2544_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.7707, 14.3445, 1.63673, 2.6356", "1.65855, 13.0663, 1.48326, 4.68599", "1.5464, 11.788, 1.32978, 5.81905", "1.43425, 10.5097, 1.1763, 6.95808", "1.32209, 9.23142, 1.02283, 8.17562", "1.20994, 7.95314, 0.869351, 9.23498", "1.09779, 6.67486, 0.715875, 9.66374", "0.985636, 5.39658, 0.562399, 9.75915", "0.873483, 4.1183, 0.408922, 9.85456", "0.76133, 2.84002, 0.255446, 9.99274", "0.649178, 1.56175, 0.101969, 10.3671", "0.537025, 0.283466, -0.051507, 11.1059", "0.424873, -0.994813, -0.204983, 11.9164", "0.31272, -2.27309, -0.35846, 12.7207", "0.200568, -3.55137, -0.511936, 12.9931", "0.0884149, -4.82965, -0.665413, 12.8706", "-0.0237377, -6.10793, -0.818889, 12.7481", "-0.13589, -7.38621, -0.972365, 11.5655", "-0.248043, -8.66449, -1.12584, 9.82802", "-0.360195, -9.94277, -1.27932, 4.98087", "-0.472348, -11.221, -1.43279, 2.92263" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.24391, 17.0095, 5.96094, 3.33", "1.03333, 22.5908, 6.76497, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.08609, -3.64399, 6.39094, 1.33", "-9.81462, -3.8194, 6.73458, 0.67", "-11.3107, -4.20541, 6.87121, 0.67", "-12.9776, -4.64834, 6.99591, 0.67", "-16.1105, -5.1707, 7.19827, 0.67", "-18.1192, -5.37638, 7.31363, 0.67", "-21.8959, -5.51642, 7.50663, 0.67", "-26.8863, -5.46252, 7.70515, 0.67", "-28.6077, -5.44805, 7.79703, 0.67", "-31.3929, -5.47836, 7.97995, 0.67", "-32.813, -5.60797, 7.95536, 0.67", "-34.7895, -5.86113, 7.6059, 0.67", "-36.1493, -5.97184, 7.19095, 0.67", "-38.1171, -6.02129, 6.52772, 0.67", "-40.4323, -6.20385, 5.76471, 0.67", "-46.1004, -6.58927, 4.21298, 0.67", "-48.8446, -6.57857, 3.68833, 0.67", "-51.7136, -6.26977, 3.4565, 0.67", "-54.2096, -5.80655, 3.53054, 0.67", "-55.6305, -5.44719, 3.676, 0.67", "-59.1978, -4.282, 4.30055, 0.67", "-63.3463, -2.74867, 5.29847, 0.67", "-67.7865, -0.975829, 6.34194, 0.67", "-71.0887, 0.478191, 7.07877, 0.33", "-72.0611, 0.966162, 7.28273, 0.67", "-74.3977, 2.158, 7.71371, 1.33", "-79.8107, 4.89096, 8.48209, 0.67", "-80.935, 5.46196, 8.53666, 0.67", "-83.8963, 6.90563, 8.34092, 1.33", "-86.5589, 8.18265, 8.01508, 0.67", "-90.5539, 9.96194, 7.43827, 0.67", "-93.8954, 11.2038, 6.88608, 0.67", "-97.9965, 12.4873, 6.02127, 0.67", "-99.5534, 12.9137, 5.67647, 1.33", "-102.234, 13.5185, 5.04094, 0.33", "-103.931, 13.8695, 4.66391, 1.33", "-107.792, 14.8028, 3.78673, 0.67", "-111.213, 15.28, 3.22097, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.04391, -10.0175, 0.670944, 2.67", "7.60678, -14.5267, 3.56344, 2.0", "12.2413, -22.681, 8.79406, 2.0", "16.5061, -30.1847, 13.6074, 2.0", "18.2178, -33.1963, 15.5392, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.472348, -11.221, -1.43279, 0.67", "-1.78337, -26.1636, -1.43279, 0.67", "-3.0944, -41.1062, -1.43279, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "1.03333, 22.5908, 6.76497, 2.67", "0.88559, 23.9892, 8.05304, 2.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.03333, 22.5908, 6.76497, 1.33", "-1.48733, 21.1155, -13.1689, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-111.213, 15.28, 3.22097, 0.67", "-116.061, 17.6835, 2.66544, 0.67", "-122.075, 19.4109, 1.10715, 0.67", "-125.298, 19.7837, 0.0991236, 0.33", "-126.57, 19.901, -0.324229, 0.67", "-128.44, 19.939, -1.0695, 0.67", "-131.214, 19.9129, -2.22482, 0.67", "-138.084, 19.2785, -5.4556, 0.67", "-142.425, 18.842, -7.74896, 0.67", "-144.929, 18.6574, -9.13672, 0.67", "-149.994, 18.5974, -11.9282, 2.0", "-152.36, 18.7198, -13.2791, 0.33", "-154.62, 19.0482, -14.5689, 0.67", "-156.241, 19.4535, -15.3643, 1.33", "-159.76, 20.5399, -17.4213, 0.33", "-161.391, 21.0763, -18.3508, 2.0" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-111.213, 15.28, 3.22097, 0.33", "-111.038, 13.9631, 2.9408, 0.33", "-110.9, 12.9173, 2.7183, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.2178, -33.1963, 15.5392, 1.33", "20.4048, -38.1083, 7.16004, 1.33", "21.2513, -40.0094, 3.91702, 0.67", "21.8041, -41.251, 1.79912, 0.67", "22.2324, -42.213, 0.158066, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "18.2178, -33.1963, 15.5392, 0.67", "17.8214, -38.7252, 15.747, 0.67", "17.8418, -42.7126, 16.2475, 0.67", "17.9429, -48.233, 17.1207, 0.67", "18.2492, -54.7146, 18.1909, 1.33", "18.5324, -60.3155, 19.1045, 1.33", "19.2325, -70.273, 20.6498, 1.33", "19.798, -74.1008, 21.234, 1.33", "20.6637, -78.965, 21.9941, 1.33", "21.3076, -82.7349, 22.5393, 1.33", "21.9678, -86.8314, 23.1746, 1.33", "22.5805, -91.4642, 23.7354, 1.33", "23.5385, -99.8437, 24.123, 0.67", "23.9257, -103.698, 24.2991, 1.33", "24.2181, -106.392, 24.4152, 1.33", "24.8361, -113.739, 25.0654, 1.33", "25.0831, -117.871, 25.4201, 1.33", "25.1177, -123.116, 25.8916, 0.67", "24.918, -129.473, 26.5438, 1.33", "24.7544, -133.521, 26.8991, 0.67", "24.1226, -145.144, 27.7492, 1.33", "23.7607, -150.684, 28.1703, 1.33", "23.6335, -154.651, 28.4198, 1.33", "23.5879, -158.445, 28.6054, 1.33", "23.661, -163.734, 28.9711, 1.33", "23.7924, -166.58, 29.2018, 1.33", "24.6035, -174.251, 29.6886, 2.0", "25.4428, -179.641, 30.3028, 1.33", "25.9128, -181.946, 30.5819, 2.0", "27.4029, -188.745, 31.5996, 2.0", "27.992, -191.326, 32.2295, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.0944, -41.1062, -1.43279, 0.33", "-4.40542, -56.0488, -1.43279, 0.33", "-5.71644, -70.9914, -1.43279, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.88559, 23.9892, 8.05304, 0.67", "1.66938, 26.2551, 9.37936, 0.67", "3.0092, 30.1284, 11.6466, 0.67", "6.18783, 39.3176, 17.0254, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.88559, 23.9892, 8.05304, 2.67", "-0.198408, 27.387, 5.20922, 2.67", "-0.926686, 29.6697, 3.29863, 2.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.48733, 21.1155, -13.1689, 1.33", "-2.74521, 24.2778, -18.2804, 1.33", "-3.49927, 26.1735, -21.3446, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.48733, 21.1155, -13.1689, 0.67", "1.28155, 18.3808, -12.574, 0.67", "4.25373, 15.6788, -11.5295, 0.33", "6.13812, 14.1554, -10.7644, 0.67", "7.67783, 13.0138, -10.1255, 0.67", "9.19755, 11.8726, -9.48983, 0.33", "10.1734, 11.1772, -9.09281, 0.67", "13.7141, 9.22298, -8.01366, 0.33", "14.9498, 8.62681, -7.67356, 0.67", "17.5174, 7.39606, -7.13639, 0.33", "18.957, 6.78524, -6.96026, 0.67", "20.5449, 6.19907, -6.92008, 0.33", "22.8904, 5.55098, -7.05874, 0.67", "24.8194, 5.14994, -7.44054, 0.33", "26.3161, 4.85846, -7.74761, 0.67", "27.2755, 4.75929, -7.94966, 0.33", "28.6448, 4.68635, -8.21739, 1.33", "32.3427, 4.47448, -8.82941, 0.33", "34.4758, 4.46921, -9.00382, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-161.391, 21.0763, -18.3508, 0.33", "-162.805, 18.6568, -16.2509, 0.33", "-163.887, 16.8034, -14.6423, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-161.391, 21.0763, -18.3508, 0.33", "-163.399, 21.6098, -17.6939, 0.33", "-164.069, 21.7877, -17.4749, 0.67", "-166.013, 22.3039, -16.8392, 0.33", "-167.697, 22.7513, -16.2883, 0.67", "-168.9, 23.0708, -15.8948, 0.33", "-169.636, 23.2662, -15.6542, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "22.2324, -42.213, 0.158066, 0.67", "25.7216, -43.5897, -2.65067, 0.67", "28.2133, -44.6698, -4.37187, 0.67", "33.6941, -46.549, -7.47476, 1.33", "35.527, -46.8737, -8.23739, 0.67", "39.8694, -47.1964, -9.53029, 0.67", "42.1534, -47.3226, -9.92436, 1.33", "45.1058, -47.3599, -10.2599, 0.67", "48.4351, -47.224, -10.092, 0.67", "53.2553, -46.3804, -9.09383, 0.67", "55.2121, -45.8377, -8.54845, 0.67", "58.8029, -44.5667, -7.21412, 0.67", "63.8728, -42.2233, -5.18095, 1.33", "66.4859, -40.8386, -4.14233, 0.67", "69.4997, -39.0111, -2.98594, 1.33", "70.9625, -38.0179, -2.68615, 0.67", "71.9811, -37.2724, -2.65135, 1.33", "73.3631, -36.1237, -2.7875, 0.67", "75.7658, -34.1021, -3.17557, 0.67", "78.5669, -31.9504, -3.75589, 1.33", "83.6862, -28.5665, -4.75687, 0.67", "86.2882, -26.9412, -5.22064, 0.33", "88.6396, -25.5246, -5.74749, 0.33", "90.5307, -24.5446, -6.35318, 0.67", "92.8692, -23.4376, -7.36433, 0.67", "95.2348, -22.4496, -8.44198, 0.67", "96.2978, -22.0043, -8.91527, 0.67", "101.753, -19.7235, -11.4414, 2.0", "107.105, -17.6596, -14.0827, 0.33", "110.408, -16.4037, -15.8944, 0.67", "111.612, -15.9828, -16.6213, 0.33", "112.817, -15.5455, -17.4038, 0.67", "113.99, -15.1277, -18.1803, 0.33", "117.389, -13.886, -20.0048, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "22.2324, -42.213, 0.158066, 0.67", "22.9651, -46.3243, -0.858487, 0.67", "23.6052, -49.6706, -1.78704, 0.67", "23.9074, -51.0867, -2.1802, 0.67", "24.8937, -55.8033, -3.37309, 1.33", "25.2296, -57.3984, -3.7318, 2.0", "25.8053, -60.1482, -4.28951, 0.67", "26.1685, -62.0999, -4.72404, 1.33", "26.4822, -64.1727, -5.10847, 0.67", "26.9625, -67.4436, -5.53163, 0.67", "27.3269, -69.9123, -5.64017, 1.33", "27.5541, -71.5796, -5.74008, 0.33", "27.7275, -73.0952, -5.83877, 0.33", "27.8651, -75.0386, -5.95038, 0.67", "27.92, -76.2449, -6.0581, 1.33", "28.045, -78.6292, -6.33061, 0.67", "28.2441, -81.6257, -6.52361, 0.67", "28.5071, -84.9693, -6.57946, 1.33", "28.7695, -88.0685, -6.49189, 0.67", "28.8775, -89.764, -6.36492, 2.67", "28.9795, -91.6461, -5.99974, 0.67", "29.0793, -95.7008, -4.99602, 0.67", "29.062, -97.1403, -4.56053, 0.33", "29.0278, -98.7927, -4.04725, 0.67", "29.0013, -99.9627, -3.71606, 0.33", "28.8567, -104.262, -2.71914, 2.0", "28.6934, -109.013, -2.05988, 0.67", "28.6626, -110.085, -2.01065, 0.67", "28.6984, -111.81, -1.96552, 0.67", "28.8028, -113.957, -1.95366, 1.33", "28.9035, -115.876, -1.9844, 0.67", "29.0594, -118.819, -2.18571, 0.67", "29.1509, -120.325, -2.22736, 1.33", "29.2741, -122.525, -2.32326, 0.67", "29.4045, -125.883, -2.6088, 0.67", "29.4583, -127.077, -2.68743, 0.67", "29.5622, -128.907, -2.75753, 0.67", "29.6332, -130.65, -2.77825, 0.67", "29.6548, -131.602, -2.82607, 1.33", "29.6005, -134.035, -3.00928, 0.67", "29.6334, -137.493, -3.32387, 2.0", "29.7318, -140.396, -3.43494, 0.67", "29.7709, -141.409, -3.41977, 0.67", "29.8819, -145.259, -3.1846, 1.33", "29.9453, -146.853, -3.03695, 0.67", "30.0527, -149.366, -2.70212, 0.67", "30.1406, -152.397, -2.24651, 1.33", "30.2901, -155.425, -1.61232, 0.67", "30.4041, -157.615, -1.08083, 0.67", "30.5115, -159.813, -0.551839, 0.67", "30.5682, -161.66, -0.257275, 0.67", "30.5819, -163.818, -0.0820257, 2.0", "30.6538, -167.022, -0.0809177, 0.67", "30.7591, -170.264, -0.21499, 0.67", "30.8941, -173.035, -0.317631, 2.0", "31.1346, -176.696, -0.38839, 0.67", "31.387, -178.883, -0.413526, 1.33", "31.7179, -181.209, -0.377365, 0.67", "31.8599, -182.264, -0.310674, 0.67", "32.4788, -185.769, 0.0806343, 2.0", "32.8945, -187.966, 0.430391, 0.67", "33.2472, -189.72, 0.716537, 0.67", "34.1866, -194.641, 1.40159, 0.67", "34.4135, -196.001, 1.54341, 0.67", "34.7576, -198.341, 1.69346, 0.67", "34.9914, -200.245, 1.62505, 0.67", "35.1916, -202.436, 1.55116, 2.0", "35.3032, -204.108, 1.48091, 0.67", "35.5444, -206.968, 1.3177, 1.33", "35.6695, -208.646, 1.20815, 0.67", "35.7502, -212.031, 0.953095, 0.67", "35.7782, -215.147, 0.671511, 1.33", "35.7596, -217.375, 0.429228, 2.0" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "27.992, -191.326, 32.2295, 1.33", "26.338, -192.826, 32.1851, 1.33", "25.0755, -193.971, 32.1511, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.992, -191.326, 32.2295, 0.67", "29.0063, -197.003, 30.7354, 0.67", "30.0538, -202.867, 29.1922, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "6.18783, 39.3176, 17.0254, 0.33", "8.26901, 41.5378, 18.2626, 0.33", "9.30917, 42.5513, 18.8293, 0.67", "12.6833, 45.3445, 20.4901, 0.67", "14.2661, 46.6548, 21.2692, 0.33", "15.3245, 47.5309, 21.7902, 0.33", "18.0103, 49.7543, 23.1122, 0.67", "19.139, 50.7023, 23.8202, 0.33", "21.3852, 52.3442, 25.1496, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "6.18783, 39.3176, 17.0254, 0.67", "7.26279, 41.949, 18.9715, 0.67", "8.14083, 44.0983, 20.561, 0.33", "8.78321, 45.6708, 21.7239, 0.67", "10.5734, 50.053, 24.9648, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-0.926686, 29.6697, 3.29863, 0.67", "-1.77468, 32.7792, -1.48731, 0.67", "-2.09444, 33.9516, -3.29197, 0.67", "-2.80053, 36.5408, -7.27705, 0.67", "-3.0656, 37.5127, -8.77306, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-0.926686, 29.6697, 3.29863, 2.0", "-2.93405, 34.5903, 4.39339, 2.0" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.49927, 26.1735, -21.3446, 0.67", "-1.19959, 34.5965, -17.7731, 0.67", "-0.240791, 37.3141, -16.6463, 0.67", "3.34294, 45.5943, -13.4344, 0.33", "4.31609, 47.6333, -12.6968, 0.33", "6.15729, 51.3952, -11.4182, 1.33", "7.26391, 53.5942, -10.7979, 0.67", "9.21443, 57.8218, -9.5781, 0.33", "10.9974, 60.9781, -9.07911, 1.33", "12.3227, 62.8644, -9.06934, 0.33", "13.2726, 64.1174, -9.08422, 0.67", "15.5548, 67.0198, -9.45177, 0.33", "17.4569, 69.5005, -9.96966, 0.67", "20.0407, 72.9375, -10.8997, 1.33", "22.032, 75.8068, -11.4526, 0.33", "23.2298, 77.5561, -11.6733, 0.67", "27.5517, 84.0682, -12.0915, 0.33", "28.9928, 86.4563, -12.0858, 0.33", "30.3294, 88.9922, -12.0177, 0.67", "33.1598, 95.363, -11.6929, 0.33", "34.1714, 97.8305, -11.5146, 0.33", "34.8721, 99.7176, -11.2965, 0.67", "35.84, 102.714, -10.7516, 2.0", "36.7348, 105.791, -10.3726, 0.33", "37.2879, 107.856, -10.2182, 0.33", "37.7608, 109.306, -10.0766, 0.67", "38.5708, 111.582, -9.83085, 0.33", "38.9754, 112.622, -9.69327, 0.67", "40.4355, 115.967, -9.12817, 0.33", "41.5531, 118.351, -8.61947, 0.33", "44.8906, 125.345, -6.81082, 0.33", "46.5964, 128.883, -5.70527, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.49927, 26.1735, -21.3446, 0.67", "-5.07441, 28.5338, -26.0524, 0.67", "-5.90836, 29.7834, -28.5449, 0.67", "-8.88139, 34.2384, -37.4308, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "117.389, -13.886, -20.0048, 0.33", "118.741, -12.1786, -21.8033, 0.33", "119.118, -11.7021, -22.3053, 0.67", "122.163, -7.85706, -26.3555, 0.33", "123.585, -6.06128, -28.2471, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "117.389, -13.886, -20.0048, 0.33", "118.786, -14.6842, -19.0745, 0.33", "119.018, -14.815, -18.9275, 0.67", "120.952, -15.6683, -18.4019, 0.33", "122.462, -16.3211, -18.2468, 1.33", "125.019, -17.5913, -18.072, 0.33", "125.988, -18.143, -18.0339, 0.33", "128.066, -19.6373, -18.1753, 1.33", "132.549, -23.4027, -19.2503, 0.33", "133.402, -24.4304, -19.7096, 0.33", "134.683, -26.3196, -20.6968, 0.67", "135.378, -27.577, -21.3707, 0.67", "136.207, -29.518, -22.2315, 0.33", "137.017, -31.9324, -23.2071, 0.67", "138.317, -36.9151, -24.7452, 0.33", "138.401, -37.2045, -24.8441, 0.67", "139.398, -40.1285, -25.988, 0.33", "140.058, -42.0941, -26.7295, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "35.7596, -217.375, 0.429228, 0.33", "37.5404, -218.427, 2.25533, 0.33", "38.1446, -218.842, 2.91334, 0.67", "38.6248, -219.388, 3.58532, 0.67", "39.4333, -220.362, 4.72989, 0.33", "40.744, -221.88, 6.42045, 2.0", "42.4659, -223.89, 8.87277, 0.33", "42.9055, -224.493, 9.60347, 1.33", "45.92, -229.123, 15.1218, 0.67", "46.5216, -230.162, 16.3131, 0.33", "47.1919, -231.442, 17.7561, 1.33", "48.9822, -235.124, 21.8493, 0.67", "49.4315, -236.172, 23.3486, 0.67", "49.6015, -236.608, 24.2734, 1.33", "49.6634, -237.027, 25.8542, 0.33", "49.5504, -237.672, 27.9518, 0.33", "49.2523, -238.46, 29.8741, 0.33", "48.3097, -240.905, 35.7718, 0.67", "48.1573, -241.314, 36.8646, 0.67", "47.8684, -242.004, 38.7115, 0.67", "47.4076, -242.986, 41.0152, 0.33", "46.6162, -244.755, 43.8581, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "35.7596, -217.375, 0.429228, 0.67", "35.7743, -219.173, -0.0154047, 0.67", "35.7944, -221.625, -0.622134, 0.67", "35.8217, -224.971, -1.44979, 0.33", "35.8365, -226.779, -1.897, 2.0", "35.8591, -229.54, -2.58012, 0.33", "35.8697, -230.841, -2.90183, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "30.0538, -202.867, 29.1922, 0.33", "26.2748, -205.577, 28.9661, 0.33", "25.2095, -206.494, 28.7854, 0.33", "23.4713, -208.295, 28.3012, 0.33", "22.7673, -209.159, 28.0548, 0.33", "21.3753, -211.039, 27.2657, 0.67", "20.55, -212.216, 26.7063, 0.67", "19.6629, -213.688, 25.845, 1.33", "18.765, -215.309, 24.9265, 0.33", "18.2021, -216.487, 24.2523, 0.33", "16.729, -219.797, 22.3247, 0.33", "16.3374, -220.965, 21.5716, 1.33", "15.8996, -222.552, 20.558, 0.33", "15.576, -224.062, 19.5908, 0.33", "15.1161, -226.939, 17.7044, 0.67", "14.94, -228.863, 16.4491, 1.33", "15.1628, -232.935, 14.0606, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "30.0538, -202.867, 29.1922, 0.67", "30.2578, -207.324, 29.7289, 0.67", "30.3873, -210.082, 30.184, 1.33", "30.7885, -219.392, 31.9169, 0.67", "30.9454, -221.465, 32.3004, 0.67", "31.081, -223.453, 32.6018, 0.67", "31.2893, -227.896, 33.0774, 0.67", "31.3785, -230.283, 33.3385, 1.33", "31.5208, -233.816, 33.7023, 0.67", "31.8073, -238.95, 34.0885, 0.67", "31.9539, -242.826, 34.1804, 0.67", "32.0481, -246.13, 33.9369, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-3.0656, 37.5127, -8.77306, 1.33", "-0.553699, 39.4084, -9.09128, 0.33", "0.317133, 40.0656, -9.2016, 1.33", "3.02556, 42.1096, -9.54473, 0.33", "4.91343, 43.5343, -9.78389, 0.67" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-3.0656, 37.5127, -8.77306, 1.33", "-4.79013, 38.012, -10.5363, 1.33", "-7.9267, 39.3282, -14.3828, 0.67", "-11.4498, 41.1163, -19.1223, 1.33", "-12.8279, 41.7423, -21.091, 1.33", "-16.9011, 43.7111, -27.3672, 0.67", "-18.2131, 44.3554, -29.6043, 1.33", "-21.5599, 46.1819, -35.8915, 0.67", "-22.0144, 46.5325, -36.9779, 1.33", "-23.4408, 47.8682, -41.544, 0.67", "-23.9822, 48.4031, -43.8763, 1.33", "-25.0289, 49.4166, -50.3839, 0.67", "-25.134, 49.5272, -51.4425, 1.33", "-25.0043, 49.7081, -53.6821, 0.67", "-24.7651, 49.8041, -55.1507, 1.33", "-23.4906, 49.9795, -58.2139, 0.33", "-22.9093, 49.9631, -59.2051, 0.67", "-21.9615, 50.0176, -60.3238, 0.33", "-21.5907, 50.0591, -60.7566, 0.33", "-19.8968, 50.2399, -62.7541, 2.0", "-18.053, 50.5894, -64.9182, 0.67", "-16.0073, 51.2938, -67.4056, 0.33", "-14.4642, 52.0096, -69.36, 1.33", "-13.5416, 52.5626, -70.5498, 1.33", "-12.2036, 53.4946, -72.3059, 0.33", "-11.5633, 54.0936, -73.2596, 1.33", "-10.0282, 55.9502, -75.8459, 0.33", "-9.71899, 56.3217, -76.2932, 1.33", "-8.96922, 57.2424, -77.3215, 0.33", "-8.67037, 57.6689, -77.7168, 0.67", "-7.28766, 59.8857, -79.4997, 0.33", "-6.98723, 60.3584, -79.8353, 0.67", "-5.2518, 62.908, -81.4554, 0.33", "-4.61933, 63.791, -81.9949, 1.33", "-3.7439, 64.9317, -82.6802, 0.33", "-3.59069, 65.1423, -82.8298, 0.67", "-2.35523, 67.0549, -84.4746, 0.33", "-1.96494, 67.6773, -85.0425, 1.33", "-0.877066, 69.1883, -86.688, 0.33", "-0.288208, 69.741, -87.3637, 0.67", "2.80326, 71.4759, -90.1221, 0.67", "4.44449, 71.7832, -91.1953, 0.33", "8.7449, 71.984, -93.6554, 2.0", "11.8979, 71.8592, -95.1093, 0.33", "13.9865, 71.5888, -95.8077, 0.33", "15.6223, 71.3284, -96.1811, 0.67", "19.6394, 70.6432, -96.6762, 0.33" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-2.93405, 34.5903, 4.39339, 2.0", "-5.29668, 38.3806, 0.900899, 2.0" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.93405, 34.5903, 4.39339, 0.67", "-3.24718, 39.5622, 5.54818, 0.67", "-3.44005, 43.2759, 6.3099, 0.67", "-3.69074, 46.6506, 6.96446, 0.67", "-4.0302, 50.6331, 7.60319, 0.67", "-4.58134, 55.9329, 8.33308, 0.67", "-4.92392, 59.2931, 8.73969, 1.33", "-5.88673, 67.8082, 9.65211, 0.67", "-6.35004, 71.1606, 9.80142, 0.67", "-7.03708, 76.4317, 9.92455, 0.67", "-7.30862, 79.2047, 9.95399, 0.67", "-7.43974, 81.3415, 9.91937, 1.33", "-7.49558, 84.7302, 10.0644, 0.67", "-7.33941, 91.4566, 11.0474, 0.67", "-6.908, 96.7542, 12.1194, 0.67", "-6.47081, 99.8966, 13.1174, 1.33", "-6.08579, 101.862, 13.9379, 0.67", "-5.39509, 104.935, 15.6831, 0.67", "-4.86792, 106.374, 16.944, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "46.5964, 128.883, -5.70527, 0.33", "47.694, 128.975, -6.50191, 0.33", "49.3221, 129.112, -7.68355, 0.67", "50.4116, 129.204, -8.47425, 0.33", "51.0234, 129.256, -8.91826, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "46.5964, 128.883, -5.70527, 1.33", "46.8613, 129.715, -6.15702, 1.33", "47.3131, 131.034, -7.01109, 0.33", "47.395, 131.242, -7.1721, 0.67", "47.8223, 132.284, -8.09104, 0.33", "47.9899, 132.694, -8.39151, 0.67", "49.1088, 135.364, -10.0287, 0.33", "49.2662, 135.681, -10.1943, 0.67", "50.0372, 137.056, -10.8168, 0.33", "50.759, 138.437, -11.2578, 0.67", "52.4593, 141.954, -11.9596, 0.33", "52.6374, 142.35, -11.9937, 0.67", "53.6403, 144.492, -11.7241, 0.33", "55.2248, 147.931, -11.3867, 1.33", "55.6446, 148.878, -11.2859, 0.33", "55.7897, 149.221, -11.3933, 0.67", "56.4522, 150.852, -12.3342, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-8.88139, 34.2384, -37.4308, 0.33", "-8.96673, 37.1135, -40.0161, 0.33", "-9.1979, 39.5699, -41.999, 0.33", "-9.66929, 42.9867, -44.4526, 0.67", "-9.79316, 44.5284, -45.5712, 0.33", "-10.0565, 47.2195, -47.502, 1.33", "-10.763, 52.5068, -51.4685, 0.33", "-11.2726, 55.556, -53.656, 1.33", "-11.7993, 57.6518, -55.1585, 0.33", "-13.6645, 63.4688, -59.0534, 0.33", "-14.6477, 66.063, -60.7073, 0.33", "-16.4944, 70.1083, -62.9838, 1.33", "-18.1019, 73.1811, -64.5109, 0.33", "-19.3785, 75.4921, -65.6776, 0.33", "-19.9519, 76.4493, -66.1161, 1.33", "-21.6572, 79.0145, -67.0879, 0.33", "-22.7739, 80.872, -67.779, 2.0", "-26.0577, 86.731, -69.857, 0.33", "-26.5973, 87.6423, -70.0723, 0.67", "-28.0297, 89.9983, -70.2959, 0.33", "-28.4885, 90.7149, -70.2362, 0.67", "-29.9121, 92.8829, -69.7673, 0.33", "-30.7771, 94.1585, -69.4417, 0.67", "-36.5142, 102.217, -66.8183, 0.33", "-37.7417, 104.127, -66.3737, 2.67", "-41.583, 110.617, -65.3066, 0.33", "-42.1566, 111.676, -65.2119, 0.67", "-44.2844, 115.915, -65.1746, 0.33", "-45.0877, 117.731, -65.3588, 0.67", "-47.3943, 123.897, -66.797, 0.33", "-48.0255, 125.646, -67.2432, 0.67", "-48.6935, 127.578, -67.8075, 2.0", "-49.5178, 130.053, -68.5062, 0.33", "-50.0502, 131.889, -68.938, 2.0", "-50.8285, 134.75, -69.6329, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.88139, 34.2384, -37.4308, 0.67", "-9.6193, 35.1457, -40.0341, 0.67", "-10.884, 36.0915, -42.2838, 0.33", "-15.0258, 38.3837, -47.2841, 0.67", "-16.9207, 39.1869, -49.0934, 0.67", "-18.1259, 39.5751, -50.0657, 0.33", "-19.6085, 39.9705, -51.1465, 0.33", "-23.2209, 40.8266, -53.3472, 0.33", "-25.7424, 41.249, -54.6321, 1.33", "-28.1953, 41.3029, -55.6165, 0.33", "-30.9809, 41.1182, -56.7549, 0.67", "-32.394, 40.9542, -57.3303, 0.33", "-34.8117, 40.6442, -58.291, 0.33", "-35.865, 40.5797, -58.819, 0.67", "-37.8503, 40.5748, -60.0982, 0.33", "-38.7682, 40.6435, -60.8396, 0.33", "-39.6352, 40.7187, -61.8768, 1.33", "-40.9514, 40.7623, -64.0064, 1.33", "-43.2794, 40.4155, -69.29, 0.33", "-44.082, 40.2922, -71.3102, 0.33", "-44.344, 40.2221, -72.1055, 0.67", "-45.6551, 39.4773, -76.791, 0.33", "-45.9221, 39.1881, -78.0014, 1.33", "-46.7733, 37.328, -83.0733, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "123.585, -6.06128, -28.2471, 0.33", "124.761, -4.72142, -27.525, 0.33", "125.593, -3.77399, -27.0144, 0.67", "126.623, -2.60182, -26.3826, 0.33", "127.507, -1.59575, -25.8403, 0.67", "129.055, 0.167222, -24.8901, 0.33", "129.055, 0.167222, -24.8901, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "123.585, -6.06128, -28.2471, 0.33", "124.131, -4.5407, -29.58, 0.33", "124.521, -3.37671, -30.5687, 1.33", "127.632, 7.23668, -38.8075, 0.33", "128.052, 8.75991, -40.1265, 2.0", "129.873, 15.7769, -46.2415, 0.33", "130.581, 18.5057, -48.6195, 1.33", "131.904, 23.6765, -53.3081, 0.33", "132.694, 27.0595, -56.4216, 1.33", "134.191, 37.6833, -65.6137, 0.33", "134.504, 39.9276, -67.8062, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "35.8697, -230.841, -2.90183, 0.33", "33.7737, -230.417, -1.67373, 0.33", "29.972, -229.649, 0.553675, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "35.8697, -230.841, -2.90183, 0.33", "36.2643, -233.288, -2.39483, 0.33", "36.54, -235.439, -1.95584, 0.67", "36.9611, -239.127, -1.24527, 0.33", "37.3377, -243.367, -0.510189, 1.33", "37.418, -245.089, -0.270999, 1.33", "37.5078, -248.174, 0.0755243, 0.67", "37.4433, -249.749, 0.259182, 0.67", "37.2843, -251.497, 0.443192, 0.33", "37.1099, -252.729, 0.543848, 0.67", "36.6908, -255.35, 0.53834, 0.33", "36.1174, -258.147, 0.470391, 0.67", "35.4565, -260.725, 0.466649, 0.33", "34.9711, -262.766, 0.325778, 1.33", "34.3871, -265.148, 0.149331, 1.33", "33.8149, -267.524, -0.0355467, 0.67", "33.0098, -270.83, -0.340613, 0.67", "31.6078, -276.234, -1.03786, 0.67", "30.3579, -281.58, -1.96382, 2.0" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.1628, -232.935, 14.0606, 0.33", "15.7472, -232.248, 17.456, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.1628, -232.935, 14.0606, 0.33", "14.2929, -235.268, 13.9317, 0.33", "13.5064, -237.353, 13.7628, 1.33", "11.9969, -241.111, 13.2723, 0.33", "9.08269, -248.388, 12.1194, 0.33", "8.33082, -250.182, 11.8334, 2.0", "6.93242, -253.254, 11.5513, 0.33", "6.75256, -253.597, 11.523, 0.67", "5.73981, -255.321, 11.4538, 0.33", "4.86099, -256.622, 11.4119, 0.33", "3.83781, -258.557, 11.2266, 1.33", "0.564512, -264.232, 11.5346, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "32.0481, -246.13, 33.9369, 0.33", "29.8933, -244.563, 34.1584, 0.33", "27.7686, -243.019, 34.3767, 0.33", "24.6713, -240.767, 34.695, 0.33", "23.4924, -239.91, 34.8162, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "32.0481, -246.13, 33.9369, 0.67", "31.7044, -248.096, 38.0236, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "4.91343, 43.5343, -9.78389, 0.67", "2.54577, 46.117, -12.3763, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "4.91343, 43.5343, -9.78389, 0.67", "6.90366, 43.1241, -9.78341, 0.67", "9.82724, 42.7145, -9.7892, 0.33", "11.4419, 42.6812, -9.72386, 0.67", "13.343, 42.8409, -9.65291, 0.33", "17.3014, 43.4688, -9.70558, 1.33", "19.1629, 43.898, -9.67498, 0.33", "20.7794, 44.3817, -9.66468, 0.67", "23.3849, 45.418, -9.70424, 0.33", "24.9379, 46.1364, -9.68944, 1.33", "27.3597, 47.4432, -9.69918, 0.33", "30.9051, 49.6404, -9.85306, 1.33", "33.2179, 51.1421, -9.94286, 0.67", "34.0103, 51.688, -9.99466, 0.67", "36.5164, 53.4873, -10.0886, 0.33", "37.7264, 54.4299, -10.0746, 0.33", "38.8542, 55.384, -10.0601, 0.33", "40.1187, 56.4437, -10.1647, 0.33", "40.9438, 57.1782, -10.2419, 1.33", "43.629, 59.6086, -10.5193, 0.33", "44.8691, 60.815, -10.697, 0.67", "46.4818, 62.2283, -10.8762, 0.67", "48.213, 63.5056, -11.0213, 0.33", "50.4822, 65.0684, -11.2114, 1.33", "52.974, 66.7235, -11.4486, 0.67", "54.9517, 68.0239, -11.7157, 0.67", "57.4911, 69.618, -11.8743, 0.67", "60.1516, 71.3038, -11.7765, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-5.29668, 38.3806, 0.900899, 0.67", "-5.00935, 44.7259, -2.49934, 0.67", "-4.86157, 46.5712, -3.6145, 0.67", "-3.81039, 52.6194, -7.11108, 1.33", "-2.99066, 57.3359, -9.83776, 1.33", "-2.55999, 59.814, -11.2704, 0.67", "-2.05678, 62.7093, -12.9442, 1.33", "-1.35062, 65.8573, -14.9275, 0.33", "0.258483, 70.4676, -17.9618, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-5.29668, 38.3806, 0.900899, 1.33", "-6.2684, 41.1642, 4.57379, 1.33", "-8.42412, 47.3397, 12.7219, 0.67", "-9.12378, 49.344, 15.3665, 0.67", "-10.5856, 53.5317, 20.8919, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "56.4522, 150.852, -12.3342, 0.33", "55.1871, 152.421, -13.0136, 0.33", "54.9298, 152.74, -13.1518, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "56.4522, 150.852, -12.3342, 0.33", "56.9156, 152.55, -12.6873, 0.33", "57.2343, 153.166, -12.9339, 0.67", "58.0919, 154.72, -13.6472, 0.33", "58.5286, 155.462, -14.0087, 0.67", "59.1929, 156.521, -14.5168, 0.33", "60.4282, 158.342, -15.3601, 0.67", "61.9475, 160.239, -16.3452, 0.33", "62.7995, 161.225, -16.8645, 0.33", "63.1324, 161.574, -17.0463, 0.67", "63.8488, 162.358, -17.501, 0.33", "64.3844, 163.034, -17.9079, 0.67", "65.4548, 164.832, -18.8667, 0.33", "65.8035, 165.599, -19.2599, 0.67", "66.0007, 166.027, -19.4921, 0.67", "67.1269, 168.73, -21.0188, 0.33", "67.3211, 169.27, -21.3497, 0.33", "67.7934, 170.84, -22.3575, 0.67", "67.95, 171.439, -22.7561, 0.33", "68.3087, 172.82, -23.7042, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-50.8285, 134.75, -69.6329, 0.33", "-50.9789, 135.893, -70.08, 0.33", "-51.0932, 136.763, -70.42, 0.67", "-51.4175, 139.23, -71.3847, 0.33", "-51.6321, 140.862, -72.0228, 1.33", "-51.9065, 142.949, -72.839, 0.33", "-52.1586, 144.866, -73.5886, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-50.8285, 134.75, -69.6329, 0.33", "-52.0984, 136.353, -68.7685, 0.33", "-53.9797, 138.999, -67.9067, 0.67", "-54.6502, 140.041, -67.664, 0.33", "-55.1105, 140.873, -67.6785, 0.67", "-55.7024, 141.982, -67.8201, 0.33", "-56.2999, 143.135, -68.025, 1.33", "-58.096, 146.935, -69.0231, 0.33", "-59.0872, 149.15, -69.7493, 0.67", "-61.2272, 154.002, -71.3985, 0.33", "-61.4713, 154.547, -71.5865, 0.67", "-62.2027, 156.221, -72.1614, 0.33", "-62.5609, 157.103, -72.4631, 0.67", "-63.3897, 159.236, -73.2004, 0.33", "-63.812, 160.236, -73.4241, 0.67", "-64.7345, 162.152, -73.5384, 0.33", "-65.1437, 162.954, -73.5951, 0.33", "-65.5606, 163.735, -73.6669, 0.67", "-66.228, 164.924, -73.7894, 0.33", "-67.2045, 166.628, -73.9709, 0.67", "-68.1982, 168.166, -74.1624, 0.33", "-68.6088, 168.76, -74.2315, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-46.7733, 37.328, -83.0733, 0.33", "-51.5047, 40.1177, -88.013, 0.33", "-52.416, 40.6716, -89.0608, 2.0", "-56.2461, 43.0314, -93.5547, 0.33", "-56.7218, 43.2921, -94.0752, 0.67", "-57.5191, 43.6963, -94.8935, 0.33", "-60.4694, 45.1721, -97.6526, 1.33", "-61.8399, 45.7922, -98.9107, 0.33", "-62.7587, 46.1867, -99.593, 0.67", "-66.2476, 47.7116, -101.466, 0.33", "-67.8815, 48.4396, -102.225, 1.33", "-70.7427, 49.8028, -103.325, 0.33", "-73.045, 50.9196, -104.039, 0.33", "-75.5263, 52.219, -104.774, 0.67", "-78.7556, 54.0419, -105.706, 0.33", "-80.2811, 54.9912, -106.123, 1.33", "-83.2285, 56.8926, -106.91, 0.33", "-83.8815, 57.3461, -107.136, 0.67", "-84.9735, 58.1854, -107.599, 0.33", "-85.8494, 58.9139, -108.055, 0.67", "-86.6911, 59.622, -108.597, 0.33", "-87.4089, 60.2302, -109.124, 0.67", "-90.4352, 62.8395, -111.742, 0.33", "-90.4352, 62.8395, -111.742, 0.67", "-91.4973, 63.8598, -112.827, 0.33", "-91.879, 64.2221, -113.241, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-46.7733, 37.328, -83.0733, 0.33", "-46.9589, 37.6076, -86.2221, 0.33", "-47.43, 37.7742, -89.6227, 0.67", "-48.1905, 37.8985, -94.2837, 0.33", "-48.3531, 37.8772, -95.1366, 0.67", "-49.518, 37.5121, -100.926, 0.33", "-50.8187, 36.6959, -107.421, 2.67", "-51.7443, 35.736, -113.606, 0.33", "-51.8072, 35.6021, -114.154, 0.67", "-51.9356, 34.629, -117.366, 0.33", "-51.9264, 34.2657, -118.168, 1.33", "-51.7599, 32.1555, -121.172, 0.33", "-51.3565, 28.8932, -124.718, 2.0", "-50.7107, 26.8667, -127.026, 0.33", "-50.6106, 26.5097, -127.458, 0.67", "-50.2023, 24.7491, -129.71, 0.33", "-50.2014, 24.4095, -130.151, 0.67", "-50.5696, 22.957, -132.035, 0.33", "-51.3319, 21.5413, -133.733, 0.67", "-52.9655, 19.4357, -136.54, 0.33", "-53.6015, 18.7487, -137.354, 0.67", "-55.5627, 16.8498, -139.632, 0.33", "-56.008, 16.4182, -140.12, 0.67", "-58.5955, 14.0086, -142.584, 0.33", "-59.4001, 13.2891, -143.201, 0.67", "-62.6769, 10.9117, -145.151, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "30.3579, -281.58, -1.96382, 0.33", "24.8023, -285.981, -4.06589, 0.33", "22.4731, -288.109, -5.23657, 0.67", "21.5821, -289.012, -5.80186, 0.33", "20.8461, -290.087, -6.65876, 0.33", "20.201, -291.751, -8.06723, 0.33", "20.124, -292.556, -8.79936, 0.67", "20.6022, -294.259, -10.5586, 0.33", "21.0898, -295.604, -11.8692, 0.67", "23.6146, -300.382, -16.2994, 0.33", "24.672, -302.078, -17.7235, 0.67", "26.7327, -305.039, -20.0404, 0.33", "27.3595, -305.88, -20.6747, 0.67", "29.7306, -308.851, -22.7753, 0.33", "32.6106, -312.507, -25.0541, 0.67", "33.5959, -314.077, -25.7938, 0.33", "34.0179, -314.657, -26.0773, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "30.3579, -281.58, -1.96382, 0.67", "30.1237, -283.18, -1.72648, 0.67", "29.9571, -284.664, -1.54783, 0.67", "29.8886, -285.687, -1.43838, 0.33", "29.7838, -288.856, -1.18265, 2.67", "29.8655, -291.579, -1.06846, 0.67", "30.0043, -293.606, -1.01252, 0.33", "30.0553, -294.086, -1.01175, 0.67", "30.293, -295.906, -1.07015, 0.33", "30.7741, -298.875, -1.30531, 0.33", "31.1915, -300.993, -1.58649, 0.67", "31.528, -302.776, -1.83831, 0.33", "31.9747, -305.232, -2.14069, 0.33", "32.2947, -307.136, -2.40604, 0.33", "32.4495, -308.234, -2.58809, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "31.7044, -248.096, 38.0236, 0.33", "30.4636, -250.153, 38.1433, 0.33", "29.4984, -251.754, 38.2364, 0.33", "28.4336, -253.519, 38.3391, 0.33", "27.7486, -254.655, 38.4052, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "31.7044, -248.096, 38.0236, 0.67", "32.4088, -250.325, 38.9862, 0.67", "33.5312, -253.878, 40.5201, 1.33", "34.1731, -255.909, 41.3972, 0.67", "35.3541, -259.647, 43.011, 1.33", "36.0459, -261.836, 43.9564, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "60.1516, 71.3038, -11.7765, 0.33", "62.7746, 70.7904, -11.7901, 0.33", "65.8881, 70.1809, -11.8062, 0.33", "71.477, 69.087, -11.8352, 0.33", "74.135, 68.5667, -11.849, 0.33", "75.6315, 68.2738, -11.8567, 0.33", "77.5863, 67.8911, -11.8669, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "60.1516, 71.3038, -11.7765, 0.67", "62.3347, 72.439, -11.8037, 0.67", "64.8453, 73.7446, -11.8351, 0.67", "66.3831, 74.5443, -11.8543, 0.67", "67.7486, 75.2543, -11.8713, 0.67", "73.7097, 78.3542, -11.9458, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "0.258483, 70.4676, -17.9618, 0.33", "2.32658, 72.7892, -18.5766, 0.33", "3.23083, 73.9562, -18.7892, 0.33", "4.09688, 74.5284, -18.1075, 0.33", "5.20759, 75.1781, -17.2089, 0.33", "6.52542, 76.0057, -16.1285, 1.33", "7.80163, 76.8658, -15.0974, 0.33", "8.79881, 77.5459, -14.2732, 0.67", "15.1158, 82.2497, -8.75676, 0.33", "16.0774, 83.0287, -7.91147, 0.67", "17.0203, 83.809, -7.09565, 0.33", "17.7024, 84.4292, -6.57688, 0.67", "18.8177, 85.5622, -5.92827, 0.33", "19.2133, 86.0911, -5.81017, 0.67", "19.744, 87.1985, -5.94192, 0.33", "20.0203, 87.8129, -6.01738, 0.67", "21.3436, 90.7121, -6.43332, 0.33", "22.2495, 92.854, -6.74694, 0.33", "22.5222, 93.4603, -6.8545, 0.67", "23.9585, 96.2786, -7.48118, 0.33", "24.4525, 97.0281, -7.67635, 1.33", "25.6254, 98.4388, -8.14014, 0.33", "26.4548, 99.2157, -8.47697, 1.33", "28.8261, 100.934, -9.08041, 0.67", "30.4355, 101.797, -9.35581, 0.67", "33.7543, 103.1, -9.77646, 0.67", "34.9581, 103.538, -9.89796, 1.33", "35.9497, 103.878, -9.98416, 0.33", "39.6613, 105.177, -10.2839, 1.33", "42.9112, 106.476, -10.4969, 0.33", "45.2804, 107.634, -10.7081, 0.67", "46.3871, 108.307, -10.8609, 0.33", "46.925, 108.68, -10.9572, 0.67", "47.6985, 109.368, -11.1808, 0.33", "48.1873, 110.002, -11.4267, 1.33", "49.0235, 111.678, -11.8511, 0.33", "49.6309, 113.15, -12.1676, 0.33", "49.8516, 113.693, -12.3127, 0.67", "50.4506, 115.21, -12.7787, 0.33", "50.7497, 116.017, -13.0475, 0.67", "51.0583, 116.866, -13.3479, 0.33", "51.49, 118.048, -13.8119, 0.33", "52.0361, 119.337, -14.3997, 0.67", "52.5285, 120.613, -15.0029, 0.33", "52.6219, 120.859, -15.1389, 0.67" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "0.258483, 70.4676, -17.9618, 0.33", "5.17444, 71.6126, -18.1968, 0.33", "7.00778, 72.1199, -18.3257, 0.67", "12.5159, 73.8453, -18.4876, 0.33", "13.8969, 74.3266, -18.5523, 1.33", "15.5759, 74.9578, -18.6472, 0.33", "16.6117, 75.3847, -18.7069, 0.67", "17.7341, 76.0042, -18.7481, 0.33", "21.1115, 78.5508, -19.5119, 1.33", "22.2343, 80.0423, -20.2388, 0.33", "22.3838, 80.3237, -20.4233, 0.67", "22.7928, 81.3125, -21.158, 0.33", "23.2728, 82.6624, -22.2504, 0.67", "24.335, 86.6599, -25.7578, 0.33", "24.677, 88.7201, -27.7355, 0.67", "25.1114, 91.3948, -30.3226, 0.33", "25.4959, 93.556, -32.53, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-10.5856, 53.5317, 20.8919, 0.33", "-10.7689, 54.0823, 22.9181, 0.33", "-10.9031, 54.76, 25.8605, 0.33", "-10.9236, 54.8949, 26.45, 0.67", "-11.1469, 55.8827, 31.467, 0.33", "-11.2595, 56.2289, 33.2649, 0.67", "-11.4063, 56.6336, 35.341, 0.33", "-11.4362, 56.6808, 35.6426, 0.67", "-11.5281, 56.7885, 37.1359, 0.33", "-11.6193, 56.8508, 39.558, 0.33", "-11.6897, 56.9183, 41.8539, 0.33", "-11.7399, 56.934, 42.574, 1.33", "-12.1144, 57.0292, 46.1583, 0.33", "-12.31, 57.058, 48.4164, 0.33", "-12.3672, 56.9889, 49.9099, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-10.5856, 53.5317, 20.8919, 0.67", "-11.4264, 57.3783, 21.5796, 0.67", "-12.5866, 62.2727, 22.3635, 0.67", "-13.4058, 65.4912, 22.7144, 0.67", "-14.7673, 70.8127, 23.1043, 0.67", "-15.4705, 73.547, 23.2613, 0.67", "-16.4593, 77.0231, 23.2456, 0.67", "-17.1349, 79.1304, 23.0749, 1.33", "-18.1557, 82.1479, 22.6173, 0.67", "-19.0648, 85.2462, 22.185, 2.0", "-19.7339, 87.4056, 21.8476, 1.33", "-21.3873, 93.0075, 20.9129, 1.33", "-22.1003, 95.5161, 20.551, 0.67", "-23.3096, 99.8035, 20.076, 0.67", "-25.0607, 106.244, 19.7811, 1.33", "-26.2779, 110.757, 19.7578, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-52.1586, 144.866, -73.5886, 0.33", "-48.1101, 146.451, -79.859, 0.33", "-47.8957, 146.534, -80.191, 0.67", "-47.3084, 146.764, -81.1007, 0.33", "-46.9419, 146.908, -81.6684, 0.67", "-45.243, 147.573, -84.2997, 0.33", "-43.6432, 148.199, -86.7775, 2.0" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-52.1586, 144.866, -73.5886, 0.33", "-53.1496, 145.75, -73.8018, 0.33", "-53.3521, 145.931, -73.8454, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "25.4959, 93.556, -32.53, 0.33", "27.1763, 92.4997, -31.7998, 0.33", "27.4687, 92.3159, -31.6727, 0.67", "28.7456, 91.5132, -31.1178, 0.33", "29.0381, 91.3294, -30.9907, 0.67", "31.8844, 89.5402, -29.7537, 0.33", "34.5247, 87.8804, -28.6063, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "25.4959, 93.556, -32.53, 0.67", "24.2943, 97.2918, -39.0674, 0.67", "24.1301, 98.2554, -40.4354, 1.33", "24.1158, 99.4985, -41.8846, 0.33", "24.162, 100.092, -42.5028, 0.67", "24.2695, 101.186, -43.5139, 0.67", "24.6887, 103.875, -45.7291, 0.67", "25.3925, 105.795, -46.742, 0.33", "26.0011, 107.255, -47.5441, 0.33", "26.3674, 108.043, -47.9464, 0.67", "26.7946, 109.052, -48.4719, 0.67", "27.4567, 110.705, -49.305, 0.33", "28.0429, 112.28, -50.1094, 1.33", "28.607, 114.405, -51.3343, 0.33", "28.7388, 115.141, -51.7407, 0.67", "29.145, 117.546, -52.9138, 0.33", "29.2147, 118.043, -53.1244, 0.67", "29.4432, 121.194, -54.1416, 0.33", "29.491, 121.578, -54.1615, 0.67", "29.7757, 122.908, -53.8006, 0.33", "30.4405, 125.007, -52.7693, 0.67", "30.8393, 126.137, -52.1142, 0.33", "31.0246, 126.66, -51.8099, 0.67", "32.2197, 130.145, -49.7918, 0.67", "32.7447, 131.882, -48.9791, 0.33", "33.5601, 134.917, -47.9052, 0.33", "33.865, 136.256, -47.5943, 0.67", "34.4238, 138.813, -47.1197, 0.33", "34.7034, 140.339, -46.9724, 0.67", "35.0354, 142.791, -47.131, 0.67", "35.3014, 144.312, -47.3518, 0.33", "35.3514, 144.652, -47.4575, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-12.3672, 56.9889, 49.9099, 0.67", "-12.7385, 55.1776, 54.5876, 0.67", "-12.8297, 54.7495, 55.6221, 0.67", "-12.9851, 53.932, 57.4549, 0.33", "-13.1731, 53.0278, 59.4116, 0.67", "-13.3236, 52.2895, 60.9094, 0.33", "-13.3307, 51.96, 61.5758, 0.67", "-13.1703, 51.1055, 63.4059, 0.33", "-13.0882, 50.7218, 64.1512, 0.67", "-12.7509, 49.7771, 65.7952, 0.33", "-12.5661, 49.3849, 66.4041, 0.67", "-11.3514, 47.1076, 69.9921, 0.33", "-10.7909, 46.1411, 71.548, 0.67", "-9.59634, 44.2621, 74.5498, 0.67", "-8.35445, 42.3548, 77.6087, 0.67", "-7.33069, 40.8675, 79.853, 0.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-12.3672, 56.9889, 49.9099, 1.33", "-12.9293, 55.3549, 51.5781, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-26.2779, 110.757, 19.7578, 0.67", "-25.7368, 112.714, 19.7207, 0.67", "-24.9661, 115.5, 19.6678, 0.67" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-26.2779, 110.757, 19.7578, 0.67", "-27.3619, 111.967, 20.8253, 0.67", "-28.4306, 113.189, 21.7188, 0.33", "-29.3115, 114.511, 22.4923, 0.67", "-30.2462, 116.098, 23.3376, 0.33", "-32.3697, 119.988, 25.3079, 0.67", "-33.9577, 123.108, 26.8124, 0.33", "-35.0327, 125.398, 27.6217, 0.67", "-36.797, 129.473, 28.6654, 0.33", "-36.9805, 129.928, 28.7556, 0.67", "-37.6098, 131.55, 29.0188, 0.33", "-38.4464, 134.057, 29.4173, 2.0", "-40.114, 139.915, 30.5315, 0.67", "-41.4055, 144.901, 31.5439, 1.33", "-42.1641, 147.282, 31.951, 0.33", "-42.319, 147.744, 32.0179, 0.67", "-43.53, 151.664, 32.7306, 0.33", "-43.736, 152.397, 32.9288, 0.67", "-44.2326, 154.664, 33.8281, 0.33", "-45.5366, 160.911, 36.4858, 0.67", "-45.8605, 162.315, 37.0802, 0.33", "-47.1942, 166.901, 39.0288, 0.67", "-48.5133, 169.978, 40.3367, 0.67", "-49.0712, 171.47, 41.1286, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-12.9293, 55.3549, 51.5781, 0.67", "-8.09757, 54.2484, 54.4895, 0.67", "-7.53105, 54.1186, 54.8309, 0.67", "-5.33252, 53.6152, 56.1556, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-12.9293, 55.3549, 51.5781, 0.33", "-10.973, 54.3254, 52.4511, 0.33", "-7.95736, 52.4819, 53.5667, 0.33", "-3.94519, 49.5948, 54.9249, 0.67", "-1.09924, 47.4053, 55.9201, 0.33", "3.39363, 43.8928, 57.6301, 0.33", "5.496, 42.2491, 58.4303, 0.33", "9.24131, 39.3812, 60.1408, 0.67", "11.5618, 37.5037, 61.4667, 0.67", "13.3099, 35.7557, 62.5428, 0.67", "14.2329, 34.8542, 62.9294, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-24.9661, 115.5, 19.6678, 0.33", "-25.397, 116.278, 20.3079, 0.33", "-25.5169, 116.494, 20.486, 0.67", "-26.1256, 117.593, 21.3903, 0.33", "-26.5653, 118.386, 22.0436, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-24.9661, 115.5, 19.6678, 0.67", "-23.6144, 116.913, 20.09, 0.67", "-18.4295, 122.286, 22.0156, 0.67", "-15.4694, 125.112, 23.014, 0.33", "-13.8498, 126.688, 23.5603, 0.67", "-10.8733, 129.623, 24.6008, 0.33", "-8.84981, 131.618, 25.3082, 0.33", "-6.23517, 134.156, 26.3701, 0.67", "-4.14521, 135.983, 27.1965, 0.33", "-2.73654, 137.359, 27.8492, 0.33", "-1.77019, 138.187, 28.1862, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-49.0712, 171.47, 41.1286, 0.67", "-52.6161, 174.745, 39.8411, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-49.0712, 171.47, 41.1286, 0.67", "-50.3065, 171.68, 41.1494, 0.67", "-51.3238, 171.853, 41.1665, 0.67", "-53.0535, 172.147, 41.1957, 0.33", "-55.2261, 172.517, 41.2323, 1.33", "-60.3771, 173.393, 41.319, 0.33", "-60.7289, 173.453, 41.325, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-60.7289, 173.453, 41.325, 0.33", "-63.7587, 173.155, 39.8019, 0.33", "-64.2568, 173.114, 39.5615, 0.67", "-67.5218, 172.845, 37.9852, 0.33", "-69.3303, 172.696, 37.1122, 0.67", "-74.4306, 172.276, 34.6499, 0.67", "-79.1663, 171.887, 32.3637, 0.33", "-79.5148, 171.87, 32.1847, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-60.7289, 173.453, 41.325, 0.67", "-62.0807, 177.709, 46.4124, 0.67", "-62.9108, 180.322, 49.5361, 0.33", "-63.0698, 180.823, 50.1344, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_80", "dend_80", "dend_80", "dend_49", "dend_49", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_2", "dend_2", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_73", "dend_73", "dend_73", "dend_73", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_DBC_f339de2544_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_80, id: dend_80, parent: dend_48
create dend_80
public dend_80
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_73, id: dend_73, parent: dend_49
create dend_73
public dend_73
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999999788066063)
    connect dend_25(0), soma_0(0.49999999788066063)
    connect dend_0(0), soma_0(0.49999999788066063)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_80(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_73(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.7707, 14.3445, 1.63673, 2.6356 ) }
    soma_0 { pt3dadd( 1.65855, 13.0663, 1.48326, 4.68599 ) }
    soma_0 { pt3dadd( 1.5464, 11.788, 1.32978, 5.81905 ) }
    soma_0 { pt3dadd( 1.43425, 10.5097, 1.1763, 6.95808 ) }
    soma_0 { pt3dadd( 1.32209, 9.23142, 1.02283, 8.17562 ) }
    soma_0 { pt3dadd( 1.20994, 7.95314, 0.869351, 9.23498 ) }
    soma_0 { pt3dadd( 1.09779, 6.67486, 0.715875, 9.66374 ) }
    soma_0 { pt3dadd( 0.985636, 5.39658, 0.562399, 9.75915 ) }
    soma_0 { pt3dadd( 0.873483, 4.1183, 0.408922, 9.85456 ) }
    soma_0 { pt3dadd( 0.76133, 2.84002, 0.255446, 9.99274 ) }
    soma_0 { pt3dadd( 0.649178, 1.56175, 0.101969, 10.3671 ) }
    soma_0 { pt3dadd( 0.537025, 0.283466, -0.051507, 11.1059 ) }
    soma_0 { pt3dadd( 0.424873, -0.994813, -0.204983, 11.9164 ) }
    soma_0 { pt3dadd( 0.31272, -2.27309, -0.35846, 12.7207 ) }
    soma_0 { pt3dadd( 0.200568, -3.55137, -0.511936, 12.9931 ) }
    soma_0 { pt3dadd( 0.0884149, -4.82965, -0.665413, 12.8706 ) }
    soma_0 { pt3dadd( -0.0237377, -6.10793, -0.818889, 12.7481 ) }
    soma_0 { pt3dadd( -0.13589, -7.38621, -0.972365, 11.5655 ) }
    soma_0 { pt3dadd( -0.248043, -8.66449, -1.12584, 9.82802 ) }
    soma_0 { pt3dadd( -0.360195, -9.94277, -1.27932, 4.98087 ) }
    soma_0 { pt3dadd( -0.472348, -11.221, -1.43279, 2.92263 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.24391, 17.0095, 5.96094, 3.33 ) }
    dend_30 { pt3dadd( 1.03333, 22.5908, 6.76497, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.08609, -3.64399, 6.39094, 1.33 ) }
    dend_25 { pt3dadd( -9.81462, -3.8194, 6.73458, 0.67 ) }
    dend_25 { pt3dadd( -11.3107, -4.20541, 6.87121, 0.67 ) }
    dend_25 { pt3dadd( -12.9776, -4.64834, 6.99591, 0.67 ) }
    dend_25 { pt3dadd( -16.1105, -5.1707, 7.19827, 0.67 ) }
    dend_25 { pt3dadd( -18.1192, -5.37638, 7.31363, 0.67 ) }
    dend_25 { pt3dadd( -21.8959, -5.51642, 7.50663, 0.67 ) }
    dend_25 { pt3dadd( -26.8863, -5.46252, 7.70515, 0.67 ) }
    dend_25 { pt3dadd( -28.6077, -5.44805, 7.79703, 0.67 ) }
    dend_25 { pt3dadd( -31.3929, -5.47836, 7.97995, 0.67 ) }
    dend_25 { pt3dadd( -32.813, -5.60797, 7.95536, 0.67 ) }
    dend_25 { pt3dadd( -34.7895, -5.86113, 7.6059, 0.67 ) }
    dend_25 { pt3dadd( -36.1493, -5.97184, 7.19095, 0.67 ) }
    dend_25 { pt3dadd( -38.1171, -6.02129, 6.52772, 0.67 ) }
    dend_25 { pt3dadd( -40.4323, -6.20385, 5.76471, 0.67 ) }
    dend_25 { pt3dadd( -46.1004, -6.58927, 4.21298, 0.67 ) }
    dend_25 { pt3dadd( -48.8446, -6.57857, 3.68833, 0.67 ) }
    dend_25 { pt3dadd( -51.7136, -6.26977, 3.4565, 0.67 ) }
    dend_25 { pt3dadd( -54.2096, -5.80655, 3.53054, 0.67 ) }
    dend_25 { pt3dadd( -55.6305, -5.44719, 3.676, 0.67 ) }
    dend_25 { pt3dadd( -59.1978, -4.282, 4.30055, 0.67 ) }
    dend_25 { pt3dadd( -63.3463, -2.74867, 5.29847, 0.67 ) }
    dend_25 { pt3dadd( -67.7865, -0.975829, 6.34194, 0.67 ) }
    dend_25 { pt3dadd( -71.0887, 0.478191, 7.07877, 0.33 ) }
    dend_25 { pt3dadd( -72.0611, 0.966162, 7.28273, 0.67 ) }
    dend_25 { pt3dadd( -74.3977, 2.158, 7.71371, 1.33 ) }
    dend_25 { pt3dadd( -79.8107, 4.89096, 8.48209, 0.67 ) }
    dend_25 { pt3dadd( -80.935, 5.46196, 8.53666, 0.67 ) }
    dend_25 { pt3dadd( -83.8963, 6.90563, 8.34092, 1.33 ) }
    dend_25 { pt3dadd( -86.5589, 8.18265, 8.01508, 0.67 ) }
    dend_25 { pt3dadd( -90.5539, 9.96194, 7.43827, 0.67 ) }
    dend_25 { pt3dadd( -93.8954, 11.2038, 6.88608, 0.67 ) }
    dend_25 { pt3dadd( -97.9965, 12.4873, 6.02127, 0.67 ) }
    dend_25 { pt3dadd( -99.5534, 12.9137, 5.67647, 1.33 ) }
    dend_25 { pt3dadd( -102.234, 13.5185, 5.04094, 0.33 ) }
    dend_25 { pt3dadd( -103.931, 13.8695, 4.66391, 1.33 ) }
    dend_25 { pt3dadd( -107.792, 14.8028, 3.78673, 0.67 ) }
    dend_25 { pt3dadd( -111.213, 15.28, 3.22097, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.04391, -10.0175, 0.670944, 2.67 ) }
    dend_0 { pt3dadd( 7.60678, -14.5267, 3.56344, 2.0 ) }
    dend_0 { pt3dadd( 12.2413, -22.681, 8.79406, 2.0 ) }
    dend_0 { pt3dadd( 16.5061, -30.1847, 13.6074, 2.0 ) }
    dend_0 { pt3dadd( 18.2178, -33.1963, 15.5392, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.472348, -11.221, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -1.78337, -26.1636, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 1.03333, 22.5908, 6.76497, 2.67 ) }
    dend_48 { pt3dadd( 0.88559, 23.9892, 8.05304, 2.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.03333, 22.5908, 6.76497, 1.33 ) }
    dend_31 { pt3dadd( -1.48733, 21.1155, -13.1689, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -111.213, 15.28, 3.22097, 0.67 ) }
    dend_27 { pt3dadd( -116.061, 17.6835, 2.66544, 0.67 ) }
    dend_27 { pt3dadd( -122.075, 19.4109, 1.10715, 0.67 ) }
    dend_27 { pt3dadd( -125.298, 19.7837, 0.0991236, 0.33 ) }
    dend_27 { pt3dadd( -126.57, 19.901, -0.324229, 0.67 ) }
    dend_27 { pt3dadd( -128.44, 19.939, -1.0695, 0.67 ) }
    dend_27 { pt3dadd( -131.214, 19.9129, -2.22482, 0.67 ) }
    dend_27 { pt3dadd( -138.084, 19.2785, -5.4556, 0.67 ) }
    dend_27 { pt3dadd( -142.425, 18.842, -7.74896, 0.67 ) }
    dend_27 { pt3dadd( -144.929, 18.6574, -9.13672, 0.67 ) }
    dend_27 { pt3dadd( -149.994, 18.5974, -11.9282, 2.0 ) }
    dend_27 { pt3dadd( -152.36, 18.7198, -13.2791, 0.33 ) }
    dend_27 { pt3dadd( -154.62, 19.0482, -14.5689, 0.67 ) }
    dend_27 { pt3dadd( -156.241, 19.4535, -15.3643, 1.33 ) }
    dend_27 { pt3dadd( -159.76, 20.5399, -17.4213, 0.33 ) }
    dend_27 { pt3dadd( -161.391, 21.0763, -18.3508, 2.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -111.213, 15.28, 3.22097, 0.33 ) }
    dend_26 { pt3dadd( -111.038, 13.9631, 2.9408, 0.33 ) }
    dend_26 { pt3dadd( -110.9, 12.9173, 2.7183, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.2178, -33.1963, 15.5392, 1.33 ) }
    dend_12 { pt3dadd( 20.4048, -38.1083, 7.16004, 1.33 ) }
    dend_12 { pt3dadd( 21.2513, -40.0094, 3.91702, 0.67 ) }
    dend_12 { pt3dadd( 21.8041, -41.251, 1.79912, 0.67 ) }
    dend_12 { pt3dadd( 22.2324, -42.213, 0.158066, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 18.2178, -33.1963, 15.5392, 0.67 ) }
    dend_1 { pt3dadd( 17.8214, -38.7252, 15.747, 0.67 ) }
    dend_1 { pt3dadd( 17.8418, -42.7126, 16.2475, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 17.9429, -48.233, 17.1207, 0.67 ) }
    dend_1 { pt3dadd( 18.2492, -54.7146, 18.1909, 1.33 ) }
    dend_1 { pt3dadd( 18.5324, -60.3155, 19.1045, 1.33 ) }
    dend_1 { pt3dadd( 19.2325, -70.273, 20.6498, 1.33 ) }
    dend_1 { pt3dadd( 19.798, -74.1008, 21.234, 1.33 ) }
    dend_1 { pt3dadd( 20.6637, -78.965, 21.9941, 1.33 ) }
    dend_1 { pt3dadd( 21.3076, -82.7349, 22.5393, 1.33 ) }
    dend_1 { pt3dadd( 21.9678, -86.8314, 23.1746, 1.33 ) }
    dend_1 { pt3dadd( 22.5805, -91.4642, 23.7354, 1.33 ) }
    dend_1 { pt3dadd( 23.5385, -99.8437, 24.123, 0.67 ) }
    dend_1 { pt3dadd( 23.9257, -103.698, 24.2991, 1.33 ) }
    dend_1 { pt3dadd( 24.2181, -106.392, 24.4152, 1.33 ) }
    dend_1 { pt3dadd( 24.8361, -113.739, 25.0654, 1.33 ) }
    dend_1 { pt3dadd( 25.0831, -117.871, 25.4201, 1.33 ) }
    dend_1 { pt3dadd( 25.1177, -123.116, 25.8916, 0.67 ) }
    dend_1 { pt3dadd( 24.918, -129.473, 26.5438, 1.33 ) }
    dend_1 { pt3dadd( 24.7544, -133.521, 26.8991, 0.67 ) }
    dend_1 { pt3dadd( 24.1226, -145.144, 27.7492, 1.33 ) }
    dend_1 { pt3dadd( 23.7607, -150.684, 28.1703, 1.33 ) }
    dend_1 { pt3dadd( 23.6335, -154.651, 28.4198, 1.33 ) }
    dend_1 { pt3dadd( 23.5879, -158.445, 28.6054, 1.33 ) }
    dend_1 { pt3dadd( 23.661, -163.734, 28.9711, 1.33 ) }
    dend_1 { pt3dadd( 23.7924, -166.58, 29.2018, 1.33 ) }
    dend_1 { pt3dadd( 24.6035, -174.251, 29.6886, 2.0 ) }
    dend_1 { pt3dadd( 25.4428, -179.641, 30.3028, 1.33 ) }
    dend_1 { pt3dadd( 25.9128, -181.946, 30.5819, 2.0 ) }
    dend_1 { pt3dadd( 27.4029, -188.745, 31.5996, 2.0 ) }
    dend_1 { pt3dadd( 27.992, -191.326, 32.2295, 2.0 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -4.40542, -56.0488, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -5.71644, -70.9914, -1.43279, 0.33 ) }
    // Section: dend_80, id: dend_80, parent: dend_48 (entry count 31/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.88559, 23.9892, 8.05304, 0.67 ) }
    dend_80 { pt3dadd( 1.66938, 26.2551, 9.37936, 0.67 ) }
    dend_80 { pt3dadd( 3.0092, 30.1284, 11.6466, 0.67 ) }
    dend_80 { pt3dadd( 6.18783, 39.3176, 17.0254, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 35/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.88559, 23.9892, 8.05304, 2.67 ) }
    dend_49 { pt3dadd( -0.198408, 27.387, 5.20922, 2.67 ) }
    dend_49 { pt3dadd( -0.926686, 29.6697, 3.29863, 2.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.48733, 21.1155, -13.1689, 1.33 ) }
    dend_33 { pt3dadd( -2.74521, 24.2778, -18.2804, 1.33 ) }
    dend_33 { pt3dadd( -3.49927, 26.1735, -21.3446, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.48733, 21.1155, -13.1689, 0.67 ) }
    dend_32 { pt3dadd( 1.28155, 18.3808, -12.574, 0.67 ) }
    dend_32 { pt3dadd( 4.25373, 15.6788, -11.5295, 0.33 ) }
    dend_32 { pt3dadd( 6.13812, 14.1554, -10.7644, 0.67 ) }
    dend_32 { pt3dadd( 7.67783, 13.0138, -10.1255, 0.67 ) }
    dend_32 { pt3dadd( 9.19755, 11.8726, -9.48983, 0.33 ) }
    dend_32 { pt3dadd( 10.1734, 11.1772, -9.09281, 0.67 ) }
    dend_32 { pt3dadd( 13.7141, 9.22298, -8.01366, 0.33 ) }
    dend_32 { pt3dadd( 14.9498, 8.62681, -7.67356, 0.67 ) }
    dend_32 { pt3dadd( 17.5174, 7.39606, -7.13639, 0.33 ) }
    dend_32 { pt3dadd( 18.957, 6.78524, -6.96026, 0.67 ) }
    dend_32 { pt3dadd( 20.5449, 6.19907, -6.92008, 0.33 ) }
    dend_32 { pt3dadd( 22.8904, 5.55098, -7.05874, 0.67 ) }
    dend_32 { pt3dadd( 24.8194, 5.14994, -7.44054, 0.33 ) }
    dend_32 { pt3dadd( 26.3161, 4.85846, -7.74761, 0.67 ) }
    dend_32 { pt3dadd( 27.2755, 4.75929, -7.94966, 0.33 ) }
    dend_32 { pt3dadd( 28.6448, 4.68635, -8.21739, 1.33 ) }
    dend_32 { pt3dadd( 32.3427, 4.47448, -8.82941, 0.33 ) }
    dend_32 { pt3dadd( 34.4758, 4.46921, -9.00382, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -161.391, 21.0763, -18.3508, 0.33 ) }
    dend_29 { pt3dadd( -162.805, 18.6568, -16.2509, 0.33 ) }
    dend_29 { pt3dadd( -163.887, 16.8034, -14.6423, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -161.391, 21.0763, -18.3508, 0.33 ) }
    dend_28 { pt3dadd( -163.399, 21.6098, -17.6939, 0.33 ) }
    dend_28 { pt3dadd( -164.069, 21.7877, -17.4749, 0.67 ) }
    dend_28 { pt3dadd( -166.013, 22.3039, -16.8392, 0.33 ) }
    dend_28 { pt3dadd( -167.697, 22.7513, -16.2883, 0.67 ) }
    dend_28 { pt3dadd( -168.9, 23.0708, -15.8948, 0.33 ) }
    dend_28 { pt3dadd( -169.636, 23.2662, -15.6542, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 22.2324, -42.213, 0.158066, 0.67 ) }
    dend_20 { pt3dadd( 25.7216, -43.5897, -2.65067, 0.67 ) }
    dend_20 { pt3dadd( 28.2133, -44.6698, -4.37187, 0.67 ) }
    dend_20 { pt3dadd( 33.6941, -46.549, -7.47476, 1.33 ) }
    dend_20 { pt3dadd( 35.527, -46.8737, -8.23739, 0.67 ) }
    dend_20 { pt3dadd( 39.8694, -47.1964, -9.53029, 0.67 ) }
    dend_20 { pt3dadd( 42.1534, -47.3226, -9.92436, 1.33 ) }
    dend_20 { pt3dadd( 45.1058, -47.3599, -10.2599, 0.67 ) }
    dend_20 { pt3dadd( 48.4351, -47.224, -10.092, 0.67 ) }
    dend_20 { pt3dadd( 53.2553, -46.3804, -9.09383, 0.67 ) }
    dend_20 { pt3dadd( 55.2121, -45.8377, -8.54845, 0.67 ) }
    dend_20 { pt3dadd( 58.8029, -44.5667, -7.21412, 0.67 ) }
    dend_20 { pt3dadd( 63.8728, -42.2233, -5.18095, 1.33 ) }
    dend_20 { pt3dadd( 66.4859, -40.8386, -4.14233, 0.67 ) }
    dend_20 { pt3dadd( 69.4997, -39.0111, -2.98594, 1.33 ) }
    dend_20 { pt3dadd( 70.9625, -38.0179, -2.68615, 0.67 ) }
    dend_20 { pt3dadd( 71.9811, -37.2724, -2.65135, 1.33 ) }
    dend_20 { pt3dadd( 73.3631, -36.1237, -2.7875, 0.67 ) }
    dend_20 { pt3dadd( 75.7658, -34.1021, -3.17557, 0.67 ) }
    dend_20 { pt3dadd( 78.5669, -31.9504, -3.75589, 1.33 ) }
    dend_20 { pt3dadd( 83.6862, -28.5665, -4.75687, 0.67 ) }
    dend_20 { pt3dadd( 86.2882, -26.9412, -5.22064, 0.33 ) }
    dend_20 { pt3dadd( 88.6396, -25.5246, -5.74749, 0.33 ) }
    dend_20 { pt3dadd( 90.5307, -24.5446, -6.35318, 0.67 ) }
    dend_20 { pt3dadd( 92.8692, -23.4376, -7.36433, 0.67 ) }
    dend_20 { pt3dadd( 95.2348, -22.4496, -8.44198, 0.67 ) }
    dend_20 { pt3dadd( 96.2978, -22.0043, -8.91527, 0.67 ) }
    dend_20 { pt3dadd( 101.753, -19.7235, -11.4414, 2.0 ) }
    dend_20 { pt3dadd( 107.105, -17.6596, -14.0827, 0.33 ) }
    dend_20 { pt3dadd( 110.408, -16.4037, -15.8944, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 111.612, -15.9828, -16.6213, 0.33 ) }
    dend_20 { pt3dadd( 112.817, -15.5455, -17.4038, 0.67 ) }
    dend_20 { pt3dadd( 113.99, -15.1277, -18.1803, 0.33 ) }
    dend_20 { pt3dadd( 117.389, -13.886, -20.0048, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 22.2324, -42.213, 0.158066, 0.67 ) }
    dend_13 { pt3dadd( 22.9651, -46.3243, -0.858487, 0.67 ) }
    dend_13 { pt3dadd( 23.6052, -49.6706, -1.78704, 0.67 ) }
    dend_13 { pt3dadd( 23.9074, -51.0867, -2.1802, 0.67 ) }
    dend_13 { pt3dadd( 24.8937, -55.8033, -3.37309, 1.33 ) }
    dend_13 { pt3dadd( 25.2296, -57.3984, -3.7318, 2.0 ) }
    dend_13 { pt3dadd( 25.8053, -60.1482, -4.28951, 0.67 ) }
    dend_13 { pt3dadd( 26.1685, -62.0999, -4.72404, 1.33 ) }
    dend_13 { pt3dadd( 26.4822, -64.1727, -5.10847, 0.67 ) }
    dend_13 { pt3dadd( 26.9625, -67.4436, -5.53163, 0.67 ) }
    dend_13 { pt3dadd( 27.3269, -69.9123, -5.64017, 1.33 ) }
    dend_13 { pt3dadd( 27.5541, -71.5796, -5.74008, 0.33 ) }
    dend_13 { pt3dadd( 27.7275, -73.0952, -5.83877, 0.33 ) }
    dend_13 { pt3dadd( 27.8651, -75.0386, -5.95038, 0.67 ) }
    dend_13 { pt3dadd( 27.92, -76.2449, -6.0581, 1.33 ) }
    dend_13 { pt3dadd( 28.045, -78.6292, -6.33061, 0.67 ) }
    dend_13 { pt3dadd( 28.2441, -81.6257, -6.52361, 0.67 ) }
    dend_13 { pt3dadd( 28.5071, -84.9693, -6.57946, 1.33 ) }
    dend_13 { pt3dadd( 28.7695, -88.0685, -6.49189, 0.67 ) }
    dend_13 { pt3dadd( 28.8775, -89.764, -6.36492, 2.67 ) }
    dend_13 { pt3dadd( 28.9795, -91.6461, -5.99974, 0.67 ) }
    dend_13 { pt3dadd( 29.0793, -95.7008, -4.99602, 0.67 ) }
    dend_13 { pt3dadd( 29.062, -97.1403, -4.56053, 0.33 ) }
    dend_13 { pt3dadd( 29.0278, -98.7927, -4.04725, 0.67 ) }
    dend_13 { pt3dadd( 29.0013, -99.9627, -3.71606, 0.33 ) }
    dend_13 { pt3dadd( 28.8567, -104.262, -2.71914, 2.0 ) }
    dend_13 { pt3dadd( 28.6934, -109.013, -2.05988, 0.67 ) }
    dend_13 { pt3dadd( 28.6626, -110.085, -2.01065, 0.67 ) }
    dend_13 { pt3dadd( 28.6984, -111.81, -1.96552, 0.67 ) }
    dend_13 { pt3dadd( 28.8028, -113.957, -1.95366, 1.33 ) }
    dend_13 { pt3dadd( 28.9035, -115.876, -1.9844, 0.67 ) }
    dend_13 { pt3dadd( 29.0594, -118.819, -2.18571, 0.67 ) }
    dend_13 { pt3dadd( 29.1509, -120.325, -2.22736, 1.33 ) }
    dend_13 { pt3dadd( 29.2741, -122.525, -2.32326, 0.67 ) }
    dend_13 { pt3dadd( 29.4045, -125.883, -2.6088, 0.67 ) }
    dend_13 { pt3dadd( 29.4583, -127.077, -2.68743, 0.67 ) }
    dend_13 { pt3dadd( 29.5622, -128.907, -2.75753, 0.67 ) }
    dend_13 { pt3dadd( 29.6332, -130.65, -2.77825, 0.67 ) }
    dend_13 { pt3dadd( 29.6548, -131.602, -2.82607, 1.33 ) }
    dend_13 { pt3dadd( 29.6005, -134.035, -3.00928, 0.67 ) }
    dend_13 { pt3dadd( 29.6334, -137.493, -3.32387, 2.0 ) }
    dend_13 { pt3dadd( 29.7318, -140.396, -3.43494, 0.67 ) }
    dend_13 { pt3dadd( 29.7709, -141.409, -3.41977, 0.67 ) }
    dend_13 { pt3dadd( 29.8819, -145.259, -3.1846, 1.33 ) }
    dend_13 { pt3dadd( 29.9453, -146.853, -3.03695, 0.67 ) }
    dend_13 { pt3dadd( 30.0527, -149.366, -2.70212, 0.67 ) }
    dend_13 { pt3dadd( 30.1406, -152.397, -2.24651, 1.33 ) }
    dend_13 { pt3dadd( 30.2901, -155.425, -1.61232, 0.67 ) }
    dend_13 { pt3dadd( 30.4041, -157.615, -1.08083, 0.67 ) }
    dend_13 { pt3dadd( 30.5115, -159.813, -0.551839, 0.67 ) }
    dend_13 { pt3dadd( 30.5682, -161.66, -0.257275, 0.67 ) }
    dend_13 { pt3dadd( 30.5819, -163.818, -0.0820257, 2.0 ) }
    dend_13 { pt3dadd( 30.6538, -167.022, -0.0809177, 0.67 ) }
    dend_13 { pt3dadd( 30.7591, -170.264, -0.21499, 0.67 ) }
    dend_13 { pt3dadd( 30.8941, -173.035, -0.317631, 2.0 ) }
    dend_13 { pt3dadd( 31.1346, -176.696, -0.38839, 0.67 ) }
    dend_13 { pt3dadd( 31.387, -178.883, -0.413526, 1.33 ) }
    dend_13 { pt3dadd( 31.7179, -181.209, -0.377365, 0.67 ) }
    dend_13 { pt3dadd( 31.8599, -182.264, -0.310674, 0.67 ) }
    dend_13 { pt3dadd( 32.4788, -185.769, 0.0806343, 2.0 ) }
    dend_13 { pt3dadd( 32.8945, -187.966, 0.430391, 0.67 ) }
    dend_13 { pt3dadd( 33.2472, -189.72, 0.716537, 0.67 ) }
    dend_13 { pt3dadd( 34.1866, -194.641, 1.40159, 0.67 ) }
    dend_13 { pt3dadd( 34.4135, -196.001, 1.54341, 0.67 ) }
    dend_13 { pt3dadd( 34.7576, -198.341, 1.69346, 0.67 ) }
    dend_13 { pt3dadd( 34.9914, -200.245, 1.62505, 0.67 ) }
    dend_13 { pt3dadd( 35.1916, -202.436, 1.55116, 2.0 ) }
    dend_13 { pt3dadd( 35.3032, -204.108, 1.48091, 0.67 ) }
    dend_13 { pt3dadd( 35.5444, -206.968, 1.3177, 1.33 ) }
    dend_13 { pt3dadd( 35.6695, -208.646, 1.20815, 0.67 ) }
    dend_13 { pt3dadd( 35.7502, -212.031, 0.953095, 0.67 ) }
    dend_13 { pt3dadd( 35.7782, -215.147, 0.671511, 1.33 ) }
    dend_13 { pt3dadd( 35.7596, -217.375, 0.429228, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 27.992, -191.326, 32.2295, 1.33 ) }
    dend_11 { pt3dadd( 26.338, -192.826, 32.1851, 1.33 ) }
    dend_11 { pt3dadd( 25.0755, -193.971, 32.1511, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.992, -191.326, 32.2295, 0.67 ) }
    dend_2 { pt3dadd( 29.0063, -197.003, 30.7354, 0.67 ) }
    dend_2 { pt3dadd( 30.0538, -202.867, 29.1922, 2.0 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 6.18783, 39.3176, 17.0254, 0.33 ) }
    dend_82 { pt3dadd( 8.26901, 41.5378, 18.2626, 0.33 ) }
    dend_82 { pt3dadd( 9.30917, 42.5513, 18.8293, 0.67 ) }
    dend_82 { pt3dadd( 12.6833, 45.3445, 20.4901, 0.67 ) }
    dend_82 { pt3dadd( 14.2661, 46.6548, 21.2692, 0.33 ) }
    dend_82 { pt3dadd( 15.3245, 47.5309, 21.7902, 0.33 ) }
    dend_82 { pt3dadd( 18.0103, 49.7543, 23.1122, 0.67 ) }
    dend_82 { pt3dadd( 19.139, 50.7023, 23.8202, 0.33 ) }
    dend_82 { pt3dadd( 21.3852, 52.3442, 25.1496, 0.33 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 6.18783, 39.3176, 17.0254, 0.67 ) }
    dend_81 { pt3dadd( 7.26279, 41.949, 18.9715, 0.67 ) }
    dend_81 { pt3dadd( 8.14083, 44.0983, 20.561, 0.33 ) }
    dend_81 { pt3dadd( 8.78321, 45.6708, 21.7239, 0.67 ) }
    dend_81 { pt3dadd( 10.5734, 50.053, 24.9648, 0.33 ) }
    // Section: dend_73, id: dend_73, parent: dend_49 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -0.926686, 29.6697, 3.29863, 0.67 ) }
    dend_73 { pt3dadd( -1.77468, 32.7792, -1.48731, 0.67 ) }
    dend_73 { pt3dadd( -2.09444, 33.9516, -3.29197, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_73 { pt3dadd( -2.80053, 36.5408, -7.27705, 0.67 ) }
    dend_73 { pt3dadd( -3.0656, 37.5127, -8.77306, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -0.926686, 29.6697, 3.29863, 2.0 ) }
    dend_50 { pt3dadd( -2.93405, 34.5903, 4.39339, 2.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.49927, 26.1735, -21.3446, 0.67 ) }
    dend_43 { pt3dadd( -1.19959, 34.5965, -17.7731, 0.67 ) }
    dend_43 { pt3dadd( -0.240791, 37.3141, -16.6463, 0.67 ) }
    dend_43 { pt3dadd( 3.34294, 45.5943, -13.4344, 0.33 ) }
    dend_43 { pt3dadd( 4.31609, 47.6333, -12.6968, 0.33 ) }
    dend_43 { pt3dadd( 6.15729, 51.3952, -11.4182, 1.33 ) }
    dend_43 { pt3dadd( 7.26391, 53.5942, -10.7979, 0.67 ) }
    dend_43 { pt3dadd( 9.21443, 57.8218, -9.5781, 0.33 ) }
    dend_43 { pt3dadd( 10.9974, 60.9781, -9.07911, 1.33 ) }
    dend_43 { pt3dadd( 12.3227, 62.8644, -9.06934, 0.33 ) }
    dend_43 { pt3dadd( 13.2726, 64.1174, -9.08422, 0.67 ) }
    dend_43 { pt3dadd( 15.5548, 67.0198, -9.45177, 0.33 ) }
    dend_43 { pt3dadd( 17.4569, 69.5005, -9.96966, 0.67 ) }
    dend_43 { pt3dadd( 20.0407, 72.9375, -10.8997, 1.33 ) }
    dend_43 { pt3dadd( 22.032, 75.8068, -11.4526, 0.33 ) }
    dend_43 { pt3dadd( 23.2298, 77.5561, -11.6733, 0.67 ) }
    dend_43 { pt3dadd( 27.5517, 84.0682, -12.0915, 0.33 ) }
    dend_43 { pt3dadd( 28.9928, 86.4563, -12.0858, 0.33 ) }
    dend_43 { pt3dadd( 30.3294, 88.9922, -12.0177, 0.67 ) }
    dend_43 { pt3dadd( 33.1598, 95.363, -11.6929, 0.33 ) }
    dend_43 { pt3dadd( 34.1714, 97.8305, -11.5146, 0.33 ) }
    dend_43 { pt3dadd( 34.8721, 99.7176, -11.2965, 0.67 ) }
    dend_43 { pt3dadd( 35.84, 102.714, -10.7516, 2.0 ) }
    dend_43 { pt3dadd( 36.7348, 105.791, -10.3726, 0.33 ) }
    dend_43 { pt3dadd( 37.2879, 107.856, -10.2182, 0.33 ) }
    dend_43 { pt3dadd( 37.7608, 109.306, -10.0766, 0.67 ) }
    dend_43 { pt3dadd( 38.5708, 111.582, -9.83085, 0.33 ) }
    dend_43 { pt3dadd( 38.9754, 112.622, -9.69327, 0.67 ) }
    dend_43 { pt3dadd( 40.4355, 115.967, -9.12817, 0.33 ) }
    dend_43 { pt3dadd( 41.5531, 118.351, -8.61947, 0.33 ) }
    dend_43 { pt3dadd( 44.8906, 125.345, -6.81082, 0.33 ) }
    dend_43 { pt3dadd( 46.5964, 128.883, -5.70527, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.49927, 26.1735, -21.3446, 0.67 ) }
    dend_34 { pt3dadd( -5.07441, 28.5338, -26.0524, 0.67 ) }
    dend_34 { pt3dadd( -5.90836, 29.7834, -28.5449, 0.67 ) }
    dend_34 { pt3dadd( -8.88139, 34.2384, -37.4308, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 117.389, -13.886, -20.0048, 0.33 ) }
    dend_22 { pt3dadd( 118.741, -12.1786, -21.8033, 0.33 ) }
    dend_22 { pt3dadd( 119.118, -11.7021, -22.3053, 0.67 ) }
    dend_22 { pt3dadd( 122.163, -7.85706, -26.3555, 0.33 ) }
    dend_22 { pt3dadd( 123.585, -6.06128, -28.2471, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 117.389, -13.886, -20.0048, 0.33 ) }
    dend_21 { pt3dadd( 118.786, -14.6842, -19.0745, 0.33 ) }
    dend_21 { pt3dadd( 119.018, -14.815, -18.9275, 0.67 ) }
    dend_21 { pt3dadd( 120.952, -15.6683, -18.4019, 0.33 ) }
    dend_21 { pt3dadd( 122.462, -16.3211, -18.2468, 1.33 ) }
    dend_21 { pt3dadd( 125.019, -17.5913, -18.072, 0.33 ) }
    dend_21 { pt3dadd( 125.988, -18.143, -18.0339, 0.33 ) }
    dend_21 { pt3dadd( 128.066, -19.6373, -18.1753, 1.33 ) }
    dend_21 { pt3dadd( 132.549, -23.4027, -19.2503, 0.33 ) }
    dend_21 { pt3dadd( 133.402, -24.4304, -19.7096, 0.33 ) }
    dend_21 { pt3dadd( 134.683, -26.3196, -20.6968, 0.67 ) }
    dend_21 { pt3dadd( 135.378, -27.577, -21.3707, 0.67 ) }
    dend_21 { pt3dadd( 136.207, -29.518, -22.2315, 0.33 ) }
    dend_21 { pt3dadd( 137.017, -31.9324, -23.2071, 0.67 ) }
    dend_21 { pt3dadd( 138.317, -36.9151, -24.7452, 0.33 ) }
    dend_21 { pt3dadd( 138.401, -37.2045, -24.8441, 0.67 ) }
    dend_21 { pt3dadd( 139.398, -40.1285, -25.988, 0.33 ) }
    dend_21 { pt3dadd( 140.058, -42.0941, -26.7295, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 35.7596, -217.375, 0.429228, 0.33 ) }
    dend_19 { pt3dadd( 37.5404, -218.427, 2.25533, 0.33 ) }
    dend_19 { pt3dadd( 38.1446, -218.842, 2.91334, 0.67 ) }
    dend_19 { pt3dadd( 38.6248, -219.388, 3.58532, 0.67 ) }
    dend_19 { pt3dadd( 39.4333, -220.362, 4.72989, 0.33 ) }
    dend_19 { pt3dadd( 40.744, -221.88, 6.42045, 2.0 ) }
    dend_19 { pt3dadd( 42.4659, -223.89, 8.87277, 0.33 ) }
    dend_19 { pt3dadd( 42.9055, -224.493, 9.60347, 1.33 ) }
    dend_19 { pt3dadd( 45.92, -229.123, 15.1218, 0.67 ) }
    dend_19 { pt3dadd( 46.5216, -230.162, 16.3131, 0.33 ) }
    dend_19 { pt3dadd( 47.1919, -231.442, 17.7561, 1.33 ) }
    dend_19 { pt3dadd( 48.9822, -235.124, 21.8493, 0.67 ) }
    dend_19 { pt3dadd( 49.4315, -236.172, 23.3486, 0.67 ) }
    dend_19 { pt3dadd( 49.6015, -236.608, 24.2734, 1.33 ) }
    dend_19 { pt3dadd( 49.6634, -237.027, 25.8542, 0.33 ) }
    dend_19 { pt3dadd( 49.5504, -237.672, 27.9518, 0.33 ) }
    dend_19 { pt3dadd( 49.2523, -238.46, 29.8741, 0.33 ) }
    dend_19 { pt3dadd( 48.3097, -240.905, 35.7718, 0.67 ) }
    dend_19 { pt3dadd( 48.1573, -241.314, 36.8646, 0.67 ) }
    dend_19 { pt3dadd( 47.8684, -242.004, 38.7115, 0.67 ) }
    dend_19 { pt3dadd( 47.4076, -242.986, 41.0152, 0.33 ) }
    dend_19 { pt3dadd( 46.6162, -244.755, 43.8581, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 35.7596, -217.375, 0.429228, 0.67 ) }
    dend_14 { pt3dadd( 35.7743, -219.173, -0.0154047, 0.67 ) }
    dend_14 { pt3dadd( 35.7944, -221.625, -0.622134, 0.67 ) }
    dend_14 { pt3dadd( 35.8217, -224.971, -1.44979, 0.33 ) }
    dend_14 { pt3dadd( 35.8365, -226.779, -1.897, 2.0 ) }
    dend_14 { pt3dadd( 35.8591, -229.54, -2.58012, 0.33 ) }
    dend_14 { pt3dadd( 35.8697, -230.841, -2.90183, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 30.0538, -202.867, 29.1922, 0.33 ) }
    dend_8 { pt3dadd( 26.2748, -205.577, 28.9661, 0.33 ) }
    dend_8 { pt3dadd( 25.2095, -206.494, 28.7854, 0.33 ) }
    dend_8 { pt3dadd( 23.4713, -208.295, 28.3012, 0.33 ) }
    dend_8 { pt3dadd( 22.7673, -209.159, 28.0548, 0.33 ) }
    dend_8 { pt3dadd( 21.3753, -211.039, 27.2657, 0.67 ) }
    dend_8 { pt3dadd( 20.55, -212.216, 26.7063, 0.67 ) }
    dend_8 { pt3dadd( 19.6629, -213.688, 25.845, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 18.765, -215.309, 24.9265, 0.33 ) }
    dend_8 { pt3dadd( 18.2021, -216.487, 24.2523, 0.33 ) }
    dend_8 { pt3dadd( 16.729, -219.797, 22.3247, 0.33 ) }
    dend_8 { pt3dadd( 16.3374, -220.965, 21.5716, 1.33 ) }
    dend_8 { pt3dadd( 15.8996, -222.552, 20.558, 0.33 ) }
    dend_8 { pt3dadd( 15.576, -224.062, 19.5908, 0.33 ) }
    dend_8 { pt3dadd( 15.1161, -226.939, 17.7044, 0.67 ) }
    dend_8 { pt3dadd( 14.94, -228.863, 16.4491, 1.33 ) }
    dend_8 { pt3dadd( 15.1628, -232.935, 14.0606, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 30.0538, -202.867, 29.1922, 0.67 ) }
    dend_3 { pt3dadd( 30.2578, -207.324, 29.7289, 0.67 ) }
    dend_3 { pt3dadd( 30.3873, -210.082, 30.184, 1.33 ) }
    dend_3 { pt3dadd( 30.7885, -219.392, 31.9169, 0.67 ) }
    dend_3 { pt3dadd( 30.9454, -221.465, 32.3004, 0.67 ) }
    dend_3 { pt3dadd( 31.081, -223.453, 32.6018, 0.67 ) }
    dend_3 { pt3dadd( 31.2893, -227.896, 33.0774, 0.67 ) }
    dend_3 { pt3dadd( 31.3785, -230.283, 33.3385, 1.33 ) }
    dend_3 { pt3dadd( 31.5208, -233.816, 33.7023, 0.67 ) }
    dend_3 { pt3dadd( 31.8073, -238.95, 34.0885, 0.67 ) }
    dend_3 { pt3dadd( 31.9539, -242.826, 34.1804, 0.67 ) }
    dend_3 { pt3dadd( 32.0481, -246.13, 33.9369, 1.33 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -3.0656, 37.5127, -8.77306, 1.33 ) }
    dend_75 { pt3dadd( -0.553699, 39.4084, -9.09128, 0.33 ) }
    dend_75 { pt3dadd( 0.317133, 40.0656, -9.2016, 1.33 ) }
    dend_75 { pt3dadd( 3.02556, 42.1096, -9.54473, 0.33 ) }
    dend_75 { pt3dadd( 4.91343, 43.5343, -9.78389, 0.67 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -3.0656, 37.5127, -8.77306, 1.33 ) }
    dend_74 { pt3dadd( -4.79013, 38.012, -10.5363, 1.33 ) }
    dend_74 { pt3dadd( -7.9267, 39.3282, -14.3828, 0.67 ) }
    dend_74 { pt3dadd( -11.4498, 41.1163, -19.1223, 1.33 ) }
    dend_74 { pt3dadd( -12.8279, 41.7423, -21.091, 1.33 ) }
    dend_74 { pt3dadd( -16.9011, 43.7111, -27.3672, 0.67 ) }
    dend_74 { pt3dadd( -18.2131, 44.3554, -29.6043, 1.33 ) }
    dend_74 { pt3dadd( -21.5599, 46.1819, -35.8915, 0.67 ) }
    dend_74 { pt3dadd( -22.0144, 46.5325, -36.9779, 1.33 ) }
    dend_74 { pt3dadd( -23.4408, 47.8682, -41.544, 0.67 ) }
    dend_74 { pt3dadd( -23.9822, 48.4031, -43.8763, 1.33 ) }
    dend_74 { pt3dadd( -25.0289, 49.4166, -50.3839, 0.67 ) }
    dend_74 { pt3dadd( -25.134, 49.5272, -51.4425, 1.33 ) }
    dend_74 { pt3dadd( -25.0043, 49.7081, -53.6821, 0.67 ) }
    dend_74 { pt3dadd( -24.7651, 49.8041, -55.1507, 1.33 ) }
    dend_74 { pt3dadd( -23.4906, 49.9795, -58.2139, 0.33 ) }
    dend_74 { pt3dadd( -22.9093, 49.9631, -59.2051, 0.67 ) }
    dend_74 { pt3dadd( -21.9615, 50.0176, -60.3238, 0.33 ) }
    dend_74 { pt3dadd( -21.5907, 50.0591, -60.7566, 0.33 ) }
    dend_74 { pt3dadd( -19.8968, 50.2399, -62.7541, 2.0 ) }
    dend_74 { pt3dadd( -18.053, 50.5894, -64.9182, 0.67 ) }
    dend_74 { pt3dadd( -16.0073, 51.2938, -67.4056, 0.33 ) }
    dend_74 { pt3dadd( -14.4642, 52.0096, -69.36, 1.33 ) }
    dend_74 { pt3dadd( -13.5416, 52.5626, -70.5498, 1.33 ) }
    dend_74 { pt3dadd( -12.2036, 53.4946, -72.3059, 0.33 ) }
    dend_74 { pt3dadd( -11.5633, 54.0936, -73.2596, 1.33 ) }
    dend_74 { pt3dadd( -10.0282, 55.9502, -75.8459, 0.33 ) }
    dend_74 { pt3dadd( -9.71899, 56.3217, -76.2932, 1.33 ) }
    dend_74 { pt3dadd( -8.96922, 57.2424, -77.3215, 0.33 ) }
    dend_74 { pt3dadd( -8.67037, 57.6689, -77.7168, 0.67 ) }
    dend_74 { pt3dadd( -7.28766, 59.8857, -79.4997, 0.33 ) }
    dend_74 { pt3dadd( -6.98723, 60.3584, -79.8353, 0.67 ) }
    dend_74 { pt3dadd( -5.2518, 62.908, -81.4554, 0.33 ) }
    dend_74 { pt3dadd( -4.61933, 63.791, -81.9949, 1.33 ) }
    dend_74 { pt3dadd( -3.7439, 64.9317, -82.6802, 0.33 ) }
    dend_74 { pt3dadd( -3.59069, 65.1423, -82.8298, 0.67 ) }
    dend_74 { pt3dadd( -2.35523, 67.0549, -84.4746, 0.33 ) }
    dend_74 { pt3dadd( -1.96494, 67.6773, -85.0425, 1.33 ) }
    dend_74 { pt3dadd( -0.877066, 69.1883, -86.688, 0.33 ) }
    dend_74 { pt3dadd( -0.288208, 69.741, -87.3637, 0.67 ) }
    dend_74 { pt3dadd( 2.80326, 71.4759, -90.1221, 0.67 ) }
    dend_74 { pt3dadd( 4.44449, 71.7832, -91.1953, 0.33 ) }
    dend_74 { pt3dadd( 8.7449, 71.984, -93.6554, 2.0 ) }
    dend_74 { pt3dadd( 11.8979, 71.8592, -95.1093, 0.33 ) }
    dend_74 { pt3dadd( 13.9865, 71.5888, -95.8077, 0.33 ) }
    dend_74 { pt3dadd( 15.6223, 71.3284, -96.1811, 0.67 ) }
    dend_74 { pt3dadd( 19.6394, 70.6432, -96.6762, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 73/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -2.93405, 34.5903, 4.39339, 2.0 ) }
    dend_52 { pt3dadd( -5.29668, 38.3806, 0.900899, 2.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.93405, 34.5903, 4.39339, 0.67 ) }
    dend_51 { pt3dadd( -3.24718, 39.5622, 5.54818, 0.67 ) }
    dend_51 { pt3dadd( -3.44005, 43.2759, 6.3099, 0.67 ) }
    dend_51 { pt3dadd( -3.69074, 46.6506, 6.96446, 0.67 ) }
    dend_51 { pt3dadd( -4.0302, 50.6331, 7.60319, 0.67 ) }
    dend_51 { pt3dadd( -4.58134, 55.9329, 8.33308, 0.67 ) }
    dend_51 { pt3dadd( -4.92392, 59.2931, 8.73969, 1.33 ) }
    dend_51 { pt3dadd( -5.88673, 67.8082, 9.65211, 0.67 ) }
    dend_51 { pt3dadd( -6.35004, 71.1606, 9.80142, 0.67 ) }
    dend_51 { pt3dadd( -7.03708, 76.4317, 9.92455, 0.67 ) }
    dend_51 { pt3dadd( -7.30862, 79.2047, 9.95399, 0.67 ) }
    dend_51 { pt3dadd( -7.43974, 81.3415, 9.91937, 1.33 ) }
    dend_51 { pt3dadd( -7.49558, 84.7302, 10.0644, 0.67 ) }
    dend_51 { pt3dadd( -7.33941, 91.4566, 11.0474, 0.67 ) }
    dend_51 { pt3dadd( -6.908, 96.7542, 12.1194, 0.67 ) }
    dend_51 { pt3dadd( -6.47081, 99.8966, 13.1174, 1.33 ) }
    dend_51 { pt3dadd( -6.08579, 101.862, 13.9379, 0.67 ) }
    dend_51 { pt3dadd( -5.39509, 104.935, 15.6831, 0.67 ) }
    dend_51 { pt3dadd( -4.86792, 106.374, 16.944, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 46.5964, 128.883, -5.70527, 0.33 ) }
    dend_47 { pt3dadd( 47.694, 128.975, -6.50191, 0.33 ) }
    dend_47 { pt3dadd( 49.3221, 129.112, -7.68355, 0.67 ) }
    dend_47 { pt3dadd( 50.4116, 129.204, -8.47425, 0.33 ) }
    dend_47 { pt3dadd( 51.0234, 129.256, -8.91826, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 46.5964, 128.883, -5.70527, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 46.8613, 129.715, -6.15702, 1.33 ) }
    dend_44 { pt3dadd( 47.3131, 131.034, -7.01109, 0.33 ) }
    dend_44 { pt3dadd( 47.395, 131.242, -7.1721, 0.67 ) }
    dend_44 { pt3dadd( 47.8223, 132.284, -8.09104, 0.33 ) }
    dend_44 { pt3dadd( 47.9899, 132.694, -8.39151, 0.67 ) }
    dend_44 { pt3dadd( 49.1088, 135.364, -10.0287, 0.33 ) }
    dend_44 { pt3dadd( 49.2662, 135.681, -10.1943, 0.67 ) }
    dend_44 { pt3dadd( 50.0372, 137.056, -10.8168, 0.33 ) }
    dend_44 { pt3dadd( 50.759, 138.437, -11.2578, 0.67 ) }
    dend_44 { pt3dadd( 52.4593, 141.954, -11.9596, 0.33 ) }
    dend_44 { pt3dadd( 52.6374, 142.35, -11.9937, 0.67 ) }
    dend_44 { pt3dadd( 53.6403, 144.492, -11.7241, 0.33 ) }
    dend_44 { pt3dadd( 55.2248, 147.931, -11.3867, 1.33 ) }
    dend_44 { pt3dadd( 55.6446, 148.878, -11.2859, 0.33 ) }
    dend_44 { pt3dadd( 55.7897, 149.221, -11.3933, 0.67 ) }
    dend_44 { pt3dadd( 56.4522, 150.852, -12.3342, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -8.88139, 34.2384, -37.4308, 0.33 ) }
    dend_38 { pt3dadd( -8.96673, 37.1135, -40.0161, 0.33 ) }
    dend_38 { pt3dadd( -9.1979, 39.5699, -41.999, 0.33 ) }
    dend_38 { pt3dadd( -9.66929, 42.9867, -44.4526, 0.67 ) }
    dend_38 { pt3dadd( -9.79316, 44.5284, -45.5712, 0.33 ) }
    dend_38 { pt3dadd( -10.0565, 47.2195, -47.502, 1.33 ) }
    dend_38 { pt3dadd( -10.763, 52.5068, -51.4685, 0.33 ) }
    dend_38 { pt3dadd( -11.2726, 55.556, -53.656, 1.33 ) }
    dend_38 { pt3dadd( -11.7993, 57.6518, -55.1585, 0.33 ) }
    dend_38 { pt3dadd( -13.6645, 63.4688, -59.0534, 0.33 ) }
    dend_38 { pt3dadd( -14.6477, 66.063, -60.7073, 0.33 ) }
    dend_38 { pt3dadd( -16.4944, 70.1083, -62.9838, 1.33 ) }
    dend_38 { pt3dadd( -18.1019, 73.1811, -64.5109, 0.33 ) }
    dend_38 { pt3dadd( -19.3785, 75.4921, -65.6776, 0.33 ) }
    dend_38 { pt3dadd( -19.9519, 76.4493, -66.1161, 1.33 ) }
    dend_38 { pt3dadd( -21.6572, 79.0145, -67.0879, 0.33 ) }
    dend_38 { pt3dadd( -22.7739, 80.872, -67.779, 2.0 ) }
    dend_38 { pt3dadd( -26.0577, 86.731, -69.857, 0.33 ) }
    dend_38 { pt3dadd( -26.5973, 87.6423, -70.0723, 0.67 ) }
    dend_38 { pt3dadd( -28.0297, 89.9983, -70.2959, 0.33 ) }
    dend_38 { pt3dadd( -28.4885, 90.7149, -70.2362, 0.67 ) }
    dend_38 { pt3dadd( -29.9121, 92.8829, -69.7673, 0.33 ) }
    dend_38 { pt3dadd( -30.7771, 94.1585, -69.4417, 0.67 ) }
    dend_38 { pt3dadd( -36.5142, 102.217, -66.8183, 0.33 ) }
    dend_38 { pt3dadd( -37.7417, 104.127, -66.3737, 2.67 ) }
    dend_38 { pt3dadd( -41.583, 110.617, -65.3066, 0.33 ) }
    dend_38 { pt3dadd( -42.1566, 111.676, -65.2119, 0.67 ) }
    dend_38 { pt3dadd( -44.2844, 115.915, -65.1746, 0.33 ) }
    dend_38 { pt3dadd( -45.0877, 117.731, -65.3588, 0.67 ) }
    dend_38 { pt3dadd( -47.3943, 123.897, -66.797, 0.33 ) }
    dend_38 { pt3dadd( -48.0255, 125.646, -67.2432, 0.67 ) }
    dend_38 { pt3dadd( -48.6935, 127.578, -67.8075, 2.0 ) }
    dend_38 { pt3dadd( -49.5178, 130.053, -68.5062, 0.33 ) }
    dend_38 { pt3dadd( -50.0502, 131.889, -68.938, 2.0 ) }
    dend_38 { pt3dadd( -50.8285, 134.75, -69.6329, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.88139, 34.2384, -37.4308, 0.67 ) }
    dend_35 { pt3dadd( -9.6193, 35.1457, -40.0341, 0.67 ) }
    dend_35 { pt3dadd( -10.884, 36.0915, -42.2838, 0.33 ) }
    dend_35 { pt3dadd( -15.0258, 38.3837, -47.2841, 0.67 ) }
    dend_35 { pt3dadd( -16.9207, 39.1869, -49.0934, 0.67 ) }
    dend_35 { pt3dadd( -18.1259, 39.5751, -50.0657, 0.33 ) }
    dend_35 { pt3dadd( -19.6085, 39.9705, -51.1465, 0.33 ) }
    dend_35 { pt3dadd( -23.2209, 40.8266, -53.3472, 0.33 ) }
    dend_35 { pt3dadd( -25.7424, 41.249, -54.6321, 1.33 ) }
    dend_35 { pt3dadd( -28.1953, 41.3029, -55.6165, 0.33 ) }
    dend_35 { pt3dadd( -30.9809, 41.1182, -56.7549, 0.67 ) }
    dend_35 { pt3dadd( -32.394, 40.9542, -57.3303, 0.33 ) }
    dend_35 { pt3dadd( -34.8117, 40.6442, -58.291, 0.33 ) }
    dend_35 { pt3dadd( -35.865, 40.5797, -58.819, 0.67 ) }
    dend_35 { pt3dadd( -37.8503, 40.5748, -60.0982, 0.33 ) }
    dend_35 { pt3dadd( -38.7682, 40.6435, -60.8396, 0.33 ) }
    dend_35 { pt3dadd( -39.6352, 40.7187, -61.8768, 1.33 ) }
    dend_35 { pt3dadd( -40.9514, 40.7623, -64.0064, 1.33 ) }
    dend_35 { pt3dadd( -43.2794, 40.4155, -69.29, 0.33 ) }
    dend_35 { pt3dadd( -44.082, 40.2922, -71.3102, 0.33 ) }
    dend_35 { pt3dadd( -44.344, 40.2221, -72.1055, 0.67 ) }
    dend_35 { pt3dadd( -45.6551, 39.4773, -76.791, 0.33 ) }
    dend_35 { pt3dadd( -45.9221, 39.1881, -78.0014, 1.33 ) }
    dend_35 { pt3dadd( -46.7733, 37.328, -83.0733, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 123.585, -6.06128, -28.2471, 0.33 ) }
    dend_24 { pt3dadd( 124.761, -4.72142, -27.525, 0.33 ) }
    dend_24 { pt3dadd( 125.593, -3.77399, -27.0144, 0.67 ) }
    dend_24 { pt3dadd( 126.623, -2.60182, -26.3826, 0.33 ) }
    dend_24 { pt3dadd( 127.507, -1.59575, -25.8403, 0.67 ) }
    dend_24 { pt3dadd( 129.055, 0.167222, -24.8901, 0.33 ) }
    dend_24 { pt3dadd( 129.055, 0.167222, -24.8901, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 123.585, -6.06128, -28.2471, 0.33 ) }
    dend_23 { pt3dadd( 124.131, -4.5407, -29.58, 0.33 ) }
    dend_23 { pt3dadd( 124.521, -3.37671, -30.5687, 1.33 ) }
    dend_23 { pt3dadd( 127.632, 7.23668, -38.8075, 0.33 ) }
    dend_23 { pt3dadd( 128.052, 8.75991, -40.1265, 2.0 ) }
    dend_23 { pt3dadd( 129.873, 15.7769, -46.2415, 0.33 ) }
    dend_23 { pt3dadd( 130.581, 18.5057, -48.6195, 1.33 ) }
    dend_23 { pt3dadd( 131.904, 23.6765, -53.3081, 0.33 ) }
    dend_23 { pt3dadd( 132.694, 27.0595, -56.4216, 1.33 ) }
    dend_23 { pt3dadd( 134.191, 37.6833, -65.6137, 0.33 ) }
    dend_23 { pt3dadd( 134.504, 39.9276, -67.8062, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 35.8697, -230.841, -2.90183, 0.33 ) }
    dend_18 { pt3dadd( 33.7737, -230.417, -1.67373, 0.33 ) }
    dend_18 { pt3dadd( 29.972, -229.649, 0.553675, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 35.8697, -230.841, -2.90183, 0.33 ) }
    dend_15 { pt3dadd( 36.2643, -233.288, -2.39483, 0.33 ) }
    dend_15 { pt3dadd( 36.54, -235.439, -1.95584, 0.67 ) }
    dend_15 { pt3dadd( 36.9611, -239.127, -1.24527, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 37.3377, -243.367, -0.510189, 1.33 ) }
    dend_15 { pt3dadd( 37.418, -245.089, -0.270999, 1.33 ) }
    dend_15 { pt3dadd( 37.5078, -248.174, 0.0755243, 0.67 ) }
    dend_15 { pt3dadd( 37.4433, -249.749, 0.259182, 0.67 ) }
    dend_15 { pt3dadd( 37.2843, -251.497, 0.443192, 0.33 ) }
    dend_15 { pt3dadd( 37.1099, -252.729, 0.543848, 0.67 ) }
    dend_15 { pt3dadd( 36.6908, -255.35, 0.53834, 0.33 ) }
    dend_15 { pt3dadd( 36.1174, -258.147, 0.470391, 0.67 ) }
    dend_15 { pt3dadd( 35.4565, -260.725, 0.466649, 0.33 ) }
    dend_15 { pt3dadd( 34.9711, -262.766, 0.325778, 1.33 ) }
    dend_15 { pt3dadd( 34.3871, -265.148, 0.149331, 1.33 ) }
    dend_15 { pt3dadd( 33.8149, -267.524, -0.0355467, 0.67 ) }
    dend_15 { pt3dadd( 33.0098, -270.83, -0.340613, 0.67 ) }
    dend_15 { pt3dadd( 31.6078, -276.234, -1.03786, 0.67 ) }
    dend_15 { pt3dadd( 30.3579, -281.58, -1.96382, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.1628, -232.935, 14.0606, 0.33 ) }
    dend_10 { pt3dadd( 15.7472, -232.248, 17.456, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 17/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.1628, -232.935, 14.0606, 0.33 ) }
    dend_9 { pt3dadd( 14.2929, -235.268, 13.9317, 0.33 ) }
    dend_9 { pt3dadd( 13.5064, -237.353, 13.7628, 1.33 ) }
    dend_9 { pt3dadd( 11.9969, -241.111, 13.2723, 0.33 ) }
    dend_9 { pt3dadd( 9.08269, -248.388, 12.1194, 0.33 ) }
    dend_9 { pt3dadd( 8.33082, -250.182, 11.8334, 2.0 ) }
    dend_9 { pt3dadd( 6.93242, -253.254, 11.5513, 0.33 ) }
    dend_9 { pt3dadd( 6.75256, -253.597, 11.523, 0.67 ) }
    dend_9 { pt3dadd( 5.73981, -255.321, 11.4538, 0.33 ) }
    dend_9 { pt3dadd( 4.86099, -256.622, 11.4119, 0.33 ) }
    dend_9 { pt3dadd( 3.83781, -258.557, 11.2266, 1.33 ) }
    dend_9 { pt3dadd( 0.564512, -264.232, 11.5346, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 32.0481, -246.13, 33.9369, 0.33 ) }
    dend_7 { pt3dadd( 29.8933, -244.563, 34.1584, 0.33 ) }
    dend_7 { pt3dadd( 27.7686, -243.019, 34.3767, 0.33 ) }
    dend_7 { pt3dadd( 24.6713, -240.767, 34.695, 0.33 ) }
    dend_7 { pt3dadd( 23.4924, -239.91, 34.8162, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 34/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 32.0481, -246.13, 33.9369, 0.67 ) }
    dend_4 { pt3dadd( 31.7044, -248.096, 38.0236, 0.67 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 36/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 4.91343, 43.5343, -9.78389, 0.67 ) }
    dend_79 { pt3dadd( 2.54577, 46.117, -12.3763, 0.67 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 4.91343, 43.5343, -9.78389, 0.67 ) }
    dend_76 { pt3dadd( 6.90366, 43.1241, -9.78341, 0.67 ) }
    dend_76 { pt3dadd( 9.82724, 42.7145, -9.7892, 0.33 ) }
    dend_76 { pt3dadd( 11.4419, 42.6812, -9.72386, 0.67 ) }
    dend_76 { pt3dadd( 13.343, 42.8409, -9.65291, 0.33 ) }
    dend_76 { pt3dadd( 17.3014, 43.4688, -9.70558, 1.33 ) }
    dend_76 { pt3dadd( 19.1629, 43.898, -9.67498, 0.33 ) }
    dend_76 { pt3dadd( 20.7794, 44.3817, -9.66468, 0.67 ) }
    dend_76 { pt3dadd( 23.3849, 45.418, -9.70424, 0.33 ) }
    dend_76 { pt3dadd( 24.9379, 46.1364, -9.68944, 1.33 ) }
    dend_76 { pt3dadd( 27.3597, 47.4432, -9.69918, 0.33 ) }
    dend_76 { pt3dadd( 30.9051, 49.6404, -9.85306, 1.33 ) }
    dend_76 { pt3dadd( 33.2179, 51.1421, -9.94286, 0.67 ) }
    dend_76 { pt3dadd( 34.0103, 51.688, -9.99466, 0.67 ) }
    dend_76 { pt3dadd( 36.5164, 53.4873, -10.0886, 0.33 ) }
    dend_76 { pt3dadd( 37.7264, 54.4299, -10.0746, 0.33 ) }
    dend_76 { pt3dadd( 38.8542, 55.384, -10.0601, 0.33 ) }
    dend_76 { pt3dadd( 40.1187, 56.4437, -10.1647, 0.33 ) }
    dend_76 { pt3dadd( 40.9438, 57.1782, -10.2419, 1.33 ) }
    dend_76 { pt3dadd( 43.629, 59.6086, -10.5193, 0.33 ) }
    dend_76 { pt3dadd( 44.8691, 60.815, -10.697, 0.67 ) }
    dend_76 { pt3dadd( 46.4818, 62.2283, -10.8762, 0.67 ) }
    dend_76 { pt3dadd( 48.213, 63.5056, -11.0213, 0.33 ) }
    dend_76 { pt3dadd( 50.4822, 65.0684, -11.2114, 1.33 ) }
    dend_76 { pt3dadd( 52.974, 66.7235, -11.4486, 0.67 ) }
    dend_76 { pt3dadd( 54.9517, 68.0239, -11.7157, 0.67 ) }
    dend_76 { pt3dadd( 57.4911, 69.618, -11.8743, 0.67 ) }
    dend_76 { pt3dadd( 60.1516, 71.3038, -11.7765, 0.67 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 66/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -5.29668, 38.3806, 0.900899, 0.67 ) }
    dend_68 { pt3dadd( -5.00935, 44.7259, -2.49934, 0.67 ) }
    dend_68 { pt3dadd( -4.86157, 46.5712, -3.6145, 0.67 ) }
    dend_68 { pt3dadd( -3.81039, 52.6194, -7.11108, 1.33 ) }
    dend_68 { pt3dadd( -2.99066, 57.3359, -9.83776, 1.33 ) }
    dend_68 { pt3dadd( -2.55999, 59.814, -11.2704, 0.67 ) }
    dend_68 { pt3dadd( -2.05678, 62.7093, -12.9442, 1.33 ) }
    dend_68 { pt3dadd( -1.35062, 65.8573, -14.9275, 0.33 ) }
    dend_68 { pt3dadd( 0.258483, 70.4676, -17.9618, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 75/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -5.29668, 38.3806, 0.900899, 1.33 ) }
    dend_53 { pt3dadd( -6.2684, 41.1642, 4.57379, 1.33 ) }
    dend_53 { pt3dadd( -8.42412, 47.3397, 12.7219, 0.67 ) }
    dend_53 { pt3dadd( -9.12378, 49.344, 15.3665, 0.67 ) }
    dend_53 { pt3dadd( -10.5856, 53.5317, 20.8919, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 56.4522, 150.852, -12.3342, 0.33 ) }
    dend_46 { pt3dadd( 55.1871, 152.421, -13.0136, 0.33 ) }
    dend_46 { pt3dadd( 54.9298, 152.74, -13.1518, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 56.4522, 150.852, -12.3342, 0.33 ) }
    dend_45 { pt3dadd( 56.9156, 152.55, -12.6873, 0.33 ) }
    dend_45 { pt3dadd( 57.2343, 153.166, -12.9339, 0.67 ) }
    dend_45 { pt3dadd( 58.0919, 154.72, -13.6472, 0.33 ) }
    dend_45 { pt3dadd( 58.5286, 155.462, -14.0087, 0.67 ) }
    dend_45 { pt3dadd( 59.1929, 156.521, -14.5168, 0.33 ) }
    dend_45 { pt3dadd( 60.4282, 158.342, -15.3601, 0.67 ) }
    dend_45 { pt3dadd( 61.9475, 160.239, -16.3452, 0.33 ) }
    dend_45 { pt3dadd( 62.7995, 161.225, -16.8645, 0.33 ) }
    dend_45 { pt3dadd( 63.1324, 161.574, -17.0463, 0.67 ) }
    dend_45 { pt3dadd( 63.8488, 162.358, -17.501, 0.33 ) }
    dend_45 { pt3dadd( 64.3844, 163.034, -17.9079, 0.67 ) }
    dend_45 { pt3dadd( 65.4548, 164.832, -18.8667, 0.33 ) }
    dend_45 { pt3dadd( 65.8035, 165.599, -19.2599, 0.67 ) }
    dend_45 { pt3dadd( 66.0007, 166.027, -19.4921, 0.67 ) }
    dend_45 { pt3dadd( 67.1269, 168.73, -21.0188, 0.33 ) }
    dend_45 { pt3dadd( 67.3211, 169.27, -21.3497, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( 67.7934, 170.84, -22.3575, 0.67 ) }
    dend_45 { pt3dadd( 67.95, 171.439, -22.7561, 0.33 ) }
    dend_45 { pt3dadd( 68.3087, 172.82, -23.7042, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -50.8285, 134.75, -69.6329, 0.33 ) }
    dend_40 { pt3dadd( -50.9789, 135.893, -70.08, 0.33 ) }
    dend_40 { pt3dadd( -51.0932, 136.763, -70.42, 0.67 ) }
    dend_40 { pt3dadd( -51.4175, 139.23, -71.3847, 0.33 ) }
    dend_40 { pt3dadd( -51.6321, 140.862, -72.0228, 1.33 ) }
    dend_40 { pt3dadd( -51.9065, 142.949, -72.839, 0.33 ) }
    dend_40 { pt3dadd( -52.1586, 144.866, -73.5886, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -50.8285, 134.75, -69.6329, 0.33 ) }
    dend_39 { pt3dadd( -52.0984, 136.353, -68.7685, 0.33 ) }
    dend_39 { pt3dadd( -53.9797, 138.999, -67.9067, 0.67 ) }
    dend_39 { pt3dadd( -54.6502, 140.041, -67.664, 0.33 ) }
    dend_39 { pt3dadd( -55.1105, 140.873, -67.6785, 0.67 ) }
    dend_39 { pt3dadd( -55.7024, 141.982, -67.8201, 0.33 ) }
    dend_39 { pt3dadd( -56.2999, 143.135, -68.025, 1.33 ) }
    dend_39 { pt3dadd( -58.096, 146.935, -69.0231, 0.33 ) }
    dend_39 { pt3dadd( -59.0872, 149.15, -69.7493, 0.67 ) }
    dend_39 { pt3dadd( -61.2272, 154.002, -71.3985, 0.33 ) }
    dend_39 { pt3dadd( -61.4713, 154.547, -71.5865, 0.67 ) }
    dend_39 { pt3dadd( -62.2027, 156.221, -72.1614, 0.33 ) }
    dend_39 { pt3dadd( -62.5609, 157.103, -72.4631, 0.67 ) }
    dend_39 { pt3dadd( -63.3897, 159.236, -73.2004, 0.33 ) }
    dend_39 { pt3dadd( -63.812, 160.236, -73.4241, 0.67 ) }
    dend_39 { pt3dadd( -64.7345, 162.152, -73.5384, 0.33 ) }
    dend_39 { pt3dadd( -65.1437, 162.954, -73.5951, 0.33 ) }
    dend_39 { pt3dadd( -65.5606, 163.735, -73.6669, 0.67 ) }
    dend_39 { pt3dadd( -66.228, 164.924, -73.7894, 0.33 ) }
    dend_39 { pt3dadd( -67.2045, 166.628, -73.9709, 0.67 ) }
    dend_39 { pt3dadd( -68.1982, 168.166, -74.1624, 0.33 ) }
    dend_39 { pt3dadd( -68.6088, 168.76, -74.2315, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 32/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -46.7733, 37.328, -83.0733, 0.33 ) }
    dend_37 { pt3dadd( -51.5047, 40.1177, -88.013, 0.33 ) }
    dend_37 { pt3dadd( -52.416, 40.6716, -89.0608, 2.0 ) }
    dend_37 { pt3dadd( -56.2461, 43.0314, -93.5547, 0.33 ) }
    dend_37 { pt3dadd( -56.7218, 43.2921, -94.0752, 0.67 ) }
    dend_37 { pt3dadd( -57.5191, 43.6963, -94.8935, 0.33 ) }
    dend_37 { pt3dadd( -60.4694, 45.1721, -97.6526, 1.33 ) }
    dend_37 { pt3dadd( -61.8399, 45.7922, -98.9107, 0.33 ) }
    dend_37 { pt3dadd( -62.7587, 46.1867, -99.593, 0.67 ) }
    dend_37 { pt3dadd( -66.2476, 47.7116, -101.466, 0.33 ) }
    dend_37 { pt3dadd( -67.8815, 48.4396, -102.225, 1.33 ) }
    dend_37 { pt3dadd( -70.7427, 49.8028, -103.325, 0.33 ) }
    dend_37 { pt3dadd( -73.045, 50.9196, -104.039, 0.33 ) }
    dend_37 { pt3dadd( -75.5263, 52.219, -104.774, 0.67 ) }
    dend_37 { pt3dadd( -78.7556, 54.0419, -105.706, 0.33 ) }
    dend_37 { pt3dadd( -80.2811, 54.9912, -106.123, 1.33 ) }
    dend_37 { pt3dadd( -83.2285, 56.8926, -106.91, 0.33 ) }
    dend_37 { pt3dadd( -83.8815, 57.3461, -107.136, 0.67 ) }
    dend_37 { pt3dadd( -84.9735, 58.1854, -107.599, 0.33 ) }
    dend_37 { pt3dadd( -85.8494, 58.9139, -108.055, 0.67 ) }
    dend_37 { pt3dadd( -86.6911, 59.622, -108.597, 0.33 ) }
    dend_37 { pt3dadd( -87.4089, 60.2302, -109.124, 0.67 ) }
    dend_37 { pt3dadd( -90.4352, 62.8395, -111.742, 0.33 ) }
    dend_37 { pt3dadd( -90.4352, 62.8395, -111.742, 0.67 ) }
    dend_37 { pt3dadd( -91.4973, 63.8598, -112.827, 0.33 ) }
    dend_37 { pt3dadd( -91.879, 64.2221, -113.241, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -46.7733, 37.328, -83.0733, 0.33 ) }
    dend_36 { pt3dadd( -46.9589, 37.6076, -86.2221, 0.33 ) }
    dend_36 { pt3dadd( -47.43, 37.7742, -89.6227, 0.67 ) }
    dend_36 { pt3dadd( -48.1905, 37.8985, -94.2837, 0.33 ) }
    dend_36 { pt3dadd( -48.3531, 37.8772, -95.1366, 0.67 ) }
    dend_36 { pt3dadd( -49.518, 37.5121, -100.926, 0.33 ) }
    dend_36 { pt3dadd( -50.8187, 36.6959, -107.421, 2.67 ) }
    dend_36 { pt3dadd( -51.7443, 35.736, -113.606, 0.33 ) }
    dend_36 { pt3dadd( -51.8072, 35.6021, -114.154, 0.67 ) }
    dend_36 { pt3dadd( -51.9356, 34.629, -117.366, 0.33 ) }
    dend_36 { pt3dadd( -51.9264, 34.2657, -118.168, 1.33 ) }
    dend_36 { pt3dadd( -51.7599, 32.1555, -121.172, 0.33 ) }
    dend_36 { pt3dadd( -51.3565, 28.8932, -124.718, 2.0 ) }
    dend_36 { pt3dadd( -50.7107, 26.8667, -127.026, 0.33 ) }
    dend_36 { pt3dadd( -50.6106, 26.5097, -127.458, 0.67 ) }
    dend_36 { pt3dadd( -50.2023, 24.7491, -129.71, 0.33 ) }
    dend_36 { pt3dadd( -50.2014, 24.4095, -130.151, 0.67 ) }
    dend_36 { pt3dadd( -50.5696, 22.957, -132.035, 0.33 ) }
    dend_36 { pt3dadd( -51.3319, 21.5413, -133.733, 0.67 ) }
    dend_36 { pt3dadd( -52.9655, 19.4357, -136.54, 0.33 ) }
    dend_36 { pt3dadd( -53.6015, 18.7487, -137.354, 0.67 ) }
    dend_36 { pt3dadd( -55.5627, 16.8498, -139.632, 0.33 ) }
    dend_36 { pt3dadd( -56.008, 16.4182, -140.12, 0.67 ) }
    dend_36 { pt3dadd( -58.5955, 14.0086, -142.584, 0.33 ) }
    dend_36 { pt3dadd( -59.4001, 13.2891, -143.201, 0.67 ) }
    dend_36 { pt3dadd( -62.6769, 10.9117, -145.151, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 30.3579, -281.58, -1.96382, 0.33 ) }
    dend_17 { pt3dadd( 24.8023, -285.981, -4.06589, 0.33 ) }
    dend_17 { pt3dadd( 22.4731, -288.109, -5.23657, 0.67 ) }
    dend_17 { pt3dadd( 21.5821, -289.012, -5.80186, 0.33 ) }
    dend_17 { pt3dadd( 20.8461, -290.087, -6.65876, 0.33 ) }
    dend_17 { pt3dadd( 20.201, -291.751, -8.06723, 0.33 ) }
    dend_17 { pt3dadd( 20.124, -292.556, -8.79936, 0.67 ) }
    dend_17 { pt3dadd( 20.6022, -294.259, -10.5586, 0.33 ) }
    dend_17 { pt3dadd( 21.0898, -295.604, -11.8692, 0.67 ) }
    dend_17 { pt3dadd( 23.6146, -300.382, -16.2994, 0.33 ) }
    dend_17 { pt3dadd( 24.672, -302.078, -17.7235, 0.67 ) }
    dend_17 { pt3dadd( 26.7327, -305.039, -20.0404, 0.33 ) }
    dend_17 { pt3dadd( 27.3595, -305.88, -20.6747, 0.67 ) }
    dend_17 { pt3dadd( 29.7306, -308.851, -22.7753, 0.33 ) }
    dend_17 { pt3dadd( 32.6106, -312.507, -25.0541, 0.67 ) }
    dend_17 { pt3dadd( 33.5959, -314.077, -25.7938, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 34.0179, -314.657, -26.0773, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 30.3579, -281.58, -1.96382, 0.67 ) }
    dend_16 { pt3dadd( 30.1237, -283.18, -1.72648, 0.67 ) }
    dend_16 { pt3dadd( 29.9571, -284.664, -1.54783, 0.67 ) }
    dend_16 { pt3dadd( 29.8886, -285.687, -1.43838, 0.33 ) }
    dend_16 { pt3dadd( 29.7838, -288.856, -1.18265, 2.67 ) }
    dend_16 { pt3dadd( 29.8655, -291.579, -1.06846, 0.67 ) }
    dend_16 { pt3dadd( 30.0043, -293.606, -1.01252, 0.33 ) }
    dend_16 { pt3dadd( 30.0553, -294.086, -1.01175, 0.67 ) }
    dend_16 { pt3dadd( 30.293, -295.906, -1.07015, 0.33 ) }
    dend_16 { pt3dadd( 30.7741, -298.875, -1.30531, 0.33 ) }
    dend_16 { pt3dadd( 31.1915, -300.993, -1.58649, 0.67 ) }
    dend_16 { pt3dadd( 31.528, -302.776, -1.83831, 0.33 ) }
    dend_16 { pt3dadd( 31.9747, -305.232, -2.14069, 0.33 ) }
    dend_16 { pt3dadd( 32.2947, -307.136, -2.40604, 0.33 ) }
    dend_16 { pt3dadd( 32.4495, -308.234, -2.58809, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 31.7044, -248.096, 38.0236, 0.33 ) }
    dend_6 { pt3dadd( 30.4636, -250.153, 38.1433, 0.33 ) }
    dend_6 { pt3dadd( 29.4984, -251.754, 38.2364, 0.33 ) }
    dend_6 { pt3dadd( 28.4336, -253.519, 38.3391, 0.33 ) }
    dend_6 { pt3dadd( 27.7486, -254.655, 38.4052, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 31.7044, -248.096, 38.0236, 0.67 ) }
    dend_5 { pt3dadd( 32.4088, -250.325, 38.9862, 0.67 ) }
    dend_5 { pt3dadd( 33.5312, -253.878, 40.5201, 1.33 ) }
    dend_5 { pt3dadd( 34.1731, -255.909, 41.3972, 0.67 ) }
    dend_5 { pt3dadd( 35.3541, -259.647, 43.011, 1.33 ) }
    dend_5 { pt3dadd( 36.0459, -261.836, 43.9564, 0.67 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 27/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 60.1516, 71.3038, -11.7765, 0.33 ) }
    dend_78 { pt3dadd( 62.7746, 70.7904, -11.7901, 0.33 ) }
    dend_78 { pt3dadd( 65.8881, 70.1809, -11.8062, 0.33 ) }
    dend_78 { pt3dadd( 71.477, 69.087, -11.8352, 0.33 ) }
    dend_78 { pt3dadd( 74.135, 68.5667, -11.849, 0.33 ) }
    dend_78 { pt3dadd( 75.6315, 68.2738, -11.8567, 0.33 ) }
    dend_78 { pt3dadd( 77.5863, 67.8911, -11.8669, 0.67 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 34/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 60.1516, 71.3038, -11.7765, 0.67 ) }
    dend_77 { pt3dadd( 62.3347, 72.439, -11.8037, 0.67 ) }
    dend_77 { pt3dadd( 64.8453, 73.7446, -11.8351, 0.67 ) }
    dend_77 { pt3dadd( 66.3831, 74.5443, -11.8543, 0.67 ) }
    dend_77 { pt3dadd( 67.7486, 75.2543, -11.8713, 0.67 ) }
    dend_77 { pt3dadd( 73.7097, 78.3542, -11.9458, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 40/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 0.258483, 70.4676, -17.9618, 0.33 ) }
    dend_72 { pt3dadd( 2.32658, 72.7892, -18.5766, 0.33 ) }
    dend_72 { pt3dadd( 3.23083, 73.9562, -18.7892, 0.33 ) }
    dend_72 { pt3dadd( 4.09688, 74.5284, -18.1075, 0.33 ) }
    dend_72 { pt3dadd( 5.20759, 75.1781, -17.2089, 0.33 ) }
    dend_72 { pt3dadd( 6.52542, 76.0057, -16.1285, 1.33 ) }
    dend_72 { pt3dadd( 7.80163, 76.8658, -15.0974, 0.33 ) }
    dend_72 { pt3dadd( 8.79881, 77.5459, -14.2732, 0.67 ) }
    dend_72 { pt3dadd( 15.1158, 82.2497, -8.75676, 0.33 ) }
    dend_72 { pt3dadd( 16.0774, 83.0287, -7.91147, 0.67 ) }
    dend_72 { pt3dadd( 17.0203, 83.809, -7.09565, 0.33 ) }
    dend_72 { pt3dadd( 17.7024, 84.4292, -6.57688, 0.67 ) }
    dend_72 { pt3dadd( 18.8177, 85.5622, -5.92827, 0.33 ) }
    dend_72 { pt3dadd( 19.2133, 86.0911, -5.81017, 0.67 ) }
    dend_72 { pt3dadd( 19.744, 87.1985, -5.94192, 0.33 ) }
    dend_72 { pt3dadd( 20.0203, 87.8129, -6.01738, 0.67 ) }
    dend_72 { pt3dadd( 21.3436, 90.7121, -6.43332, 0.33 ) }
    dend_72 { pt3dadd( 22.2495, 92.854, -6.74694, 0.33 ) }
    dend_72 { pt3dadd( 22.5222, 93.4603, -6.8545, 0.67 ) }
    dend_72 { pt3dadd( 23.9585, 96.2786, -7.48118, 0.33 ) }
    dend_72 { pt3dadd( 24.4525, 97.0281, -7.67635, 1.33 ) }
    dend_72 { pt3dadd( 25.6254, 98.4388, -8.14014, 0.33 ) }
    dend_72 { pt3dadd( 26.4548, 99.2157, -8.47697, 1.33 ) }
    dend_72 { pt3dadd( 28.8261, 100.934, -9.08041, 0.67 ) }
    dend_72 { pt3dadd( 30.4355, 101.797, -9.35581, 0.67 ) }
    dend_72 { pt3dadd( 33.7543, 103.1, -9.77646, 0.67 ) }
    dend_72 { pt3dadd( 34.9581, 103.538, -9.89796, 1.33 ) }
    dend_72 { pt3dadd( 35.9497, 103.878, -9.98416, 0.33 ) }
    dend_72 { pt3dadd( 39.6613, 105.177, -10.2839, 1.33 ) }
    dend_72 { pt3dadd( 42.9112, 106.476, -10.4969, 0.33 ) }
    dend_72 { pt3dadd( 45.2804, 107.634, -10.7081, 0.67 ) }
    dend_72 { pt3dadd( 46.3871, 108.307, -10.8609, 0.33 ) }
    dend_72 { pt3dadd( 46.925, 108.68, -10.9572, 0.67 ) }
    dend_72 { pt3dadd( 47.6985, 109.368, -11.1808, 0.33 ) }
    dend_72 { pt3dadd( 48.1873, 110.002, -11.4267, 1.33 ) }
    dend_72 { pt3dadd( 49.0235, 111.678, -11.8511, 0.33 ) }
    dend_72 { pt3dadd( 49.6309, 113.15, -12.1676, 0.33 ) }
    dend_72 { pt3dadd( 49.8516, 113.693, -12.3127, 0.67 ) }
    dend_72 { pt3dadd( 50.4506, 115.21, -12.7787, 0.33 ) }
    dend_72 { pt3dadd( 50.7497, 116.017, -13.0475, 0.67 ) }
    dend_72 { pt3dadd( 51.0583, 116.866, -13.3479, 0.33 ) }
    dend_72 { pt3dadd( 51.49, 118.048, -13.8119, 0.33 ) }
    dend_72 { pt3dadd( 52.0361, 119.337, -14.3997, 0.67 ) }
    dend_72 { pt3dadd( 52.5285, 120.613, -15.0029, 0.33 ) }
    dend_72 { pt3dadd( 52.6219, 120.859, -15.1389, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 0.258483, 70.4676, -17.9618, 0.33 ) }
    dend_69 { pt3dadd( 5.17444, 71.6126, -18.1968, 0.33 ) }
    dend_69 { pt3dadd( 7.00778, 72.1199, -18.3257, 0.67 ) }
    dend_69 { pt3dadd( 12.5159, 73.8453, -18.4876, 0.33 ) }
    dend_69 { pt3dadd( 13.8969, 74.3266, -18.5523, 1.33 ) }
    dend_69 { pt3dadd( 15.5759, 74.9578, -18.6472, 0.33 ) }
    dend_69 { pt3dadd( 16.6117, 75.3847, -18.7069, 0.67 ) }
    dend_69 { pt3dadd( 17.7341, 76.0042, -18.7481, 0.33 ) }
    dend_69 { pt3dadd( 21.1115, 78.5508, -19.5119, 1.33 ) }
    dend_69 { pt3dadd( 22.2343, 80.0423, -20.2388, 0.33 ) }
    dend_69 { pt3dadd( 22.3838, 80.3237, -20.4233, 0.67 ) }
    dend_69 { pt3dadd( 22.7928, 81.3125, -21.158, 0.33 ) }
    dend_69 { pt3dadd( 23.2728, 82.6624, -22.2504, 0.67 ) }
    dend_69 { pt3dadd( 24.335, 86.6599, -25.7578, 0.33 ) }
    dend_69 { pt3dadd( 24.677, 88.7201, -27.7355, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 25.1114, 91.3948, -30.3226, 0.33 ) }
    dend_69 { pt3dadd( 25.4959, 93.556, -32.53, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 2/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -10.5856, 53.5317, 20.8919, 0.33 ) }
    dend_63 { pt3dadd( -10.7689, 54.0823, 22.9181, 0.33 ) }
    dend_63 { pt3dadd( -10.9031, 54.76, 25.8605, 0.33 ) }
    dend_63 { pt3dadd( -10.9236, 54.8949, 26.45, 0.67 ) }
    dend_63 { pt3dadd( -11.1469, 55.8827, 31.467, 0.33 ) }
    dend_63 { pt3dadd( -11.2595, 56.2289, 33.2649, 0.67 ) }
    dend_63 { pt3dadd( -11.4063, 56.6336, 35.341, 0.33 ) }
    dend_63 { pt3dadd( -11.4362, 56.6808, 35.6426, 0.67 ) }
    dend_63 { pt3dadd( -11.5281, 56.7885, 37.1359, 0.33 ) }
    dend_63 { pt3dadd( -11.6193, 56.8508, 39.558, 0.33 ) }
    dend_63 { pt3dadd( -11.6897, 56.9183, 41.8539, 0.33 ) }
    dend_63 { pt3dadd( -11.7399, 56.934, 42.574, 1.33 ) }
    dend_63 { pt3dadd( -12.1144, 57.0292, 46.1583, 0.33 ) }
    dend_63 { pt3dadd( -12.31, 57.058, 48.4164, 0.33 ) }
    dend_63 { pt3dadd( -12.3672, 56.9889, 49.9099, 1.33 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -10.5856, 53.5317, 20.8919, 0.67 ) }
    dend_54 { pt3dadd( -11.4264, 57.3783, 21.5796, 0.67 ) }
    dend_54 { pt3dadd( -12.5866, 62.2727, 22.3635, 0.67 ) }
    dend_54 { pt3dadd( -13.4058, 65.4912, 22.7144, 0.67 ) }
    dend_54 { pt3dadd( -14.7673, 70.8127, 23.1043, 0.67 ) }
    dend_54 { pt3dadd( -15.4705, 73.547, 23.2613, 0.67 ) }
    dend_54 { pt3dadd( -16.4593, 77.0231, 23.2456, 0.67 ) }
    dend_54 { pt3dadd( -17.1349, 79.1304, 23.0749, 1.33 ) }
    dend_54 { pt3dadd( -18.1557, 82.1479, 22.6173, 0.67 ) }
    dend_54 { pt3dadd( -19.0648, 85.2462, 22.185, 2.0 ) }
    dend_54 { pt3dadd( -19.7339, 87.4056, 21.8476, 1.33 ) }
    dend_54 { pt3dadd( -21.3873, 93.0075, 20.9129, 1.33 ) }
    dend_54 { pt3dadd( -22.1003, 95.5161, 20.551, 0.67 ) }
    dend_54 { pt3dadd( -23.3096, 99.8035, 20.076, 0.67 ) }
    dend_54 { pt3dadd( -25.0607, 106.244, 19.7811, 1.33 ) }
    dend_54 { pt3dadd( -26.2779, 110.757, 19.7578, 1.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -52.1586, 144.866, -73.5886, 0.33 ) }
    dend_42 { pt3dadd( -48.1101, 146.451, -79.859, 0.33 ) }
    dend_42 { pt3dadd( -47.8957, 146.534, -80.191, 0.67 ) }
    dend_42 { pt3dadd( -47.3084, 146.764, -81.1007, 0.33 ) }
    dend_42 { pt3dadd( -46.9419, 146.908, -81.6684, 0.67 ) }
    dend_42 { pt3dadd( -45.243, 147.573, -84.2997, 0.33 ) }
    dend_42 { pt3dadd( -43.6432, 148.199, -86.7775, 2.0 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -52.1586, 144.866, -73.5886, 0.33 ) }
    dend_41 { pt3dadd( -53.1496, 145.75, -73.8018, 0.33 ) }
    dend_41 { pt3dadd( -53.3521, 145.931, -73.8454, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 25.4959, 93.556, -32.53, 0.33 ) }
    dend_71 { pt3dadd( 27.1763, 92.4997, -31.7998, 0.33 ) }
    dend_71 { pt3dadd( 27.4687, 92.3159, -31.6727, 0.67 ) }
    dend_71 { pt3dadd( 28.7456, 91.5132, -31.1178, 0.33 ) }
    dend_71 { pt3dadd( 29.0381, 91.3294, -30.9907, 0.67 ) }
    dend_71 { pt3dadd( 31.8844, 89.5402, -29.7537, 0.33 ) }
    dend_71 { pt3dadd( 34.5247, 87.8804, -28.6063, 0.67 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 50/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 25.4959, 93.556, -32.53, 0.67 ) }
    dend_70 { pt3dadd( 24.2943, 97.2918, -39.0674, 0.67 ) }
    dend_70 { pt3dadd( 24.1301, 98.2554, -40.4354, 1.33 ) }
    dend_70 { pt3dadd( 24.1158, 99.4985, -41.8846, 0.33 ) }
    dend_70 { pt3dadd( 24.162, 100.092, -42.5028, 0.67 ) }
    dend_70 { pt3dadd( 24.2695, 101.186, -43.5139, 0.67 ) }
    dend_70 { pt3dadd( 24.6887, 103.875, -45.7291, 0.67 ) }
    dend_70 { pt3dadd( 25.3925, 105.795, -46.742, 0.33 ) }
    dend_70 { pt3dadd( 26.0011, 107.255, -47.5441, 0.33 ) }
    dend_70 { pt3dadd( 26.3674, 108.043, -47.9464, 0.67 ) }
    dend_70 { pt3dadd( 26.7946, 109.052, -48.4719, 0.67 ) }
    dend_70 { pt3dadd( 27.4567, 110.705, -49.305, 0.33 ) }
    dend_70 { pt3dadd( 28.0429, 112.28, -50.1094, 1.33 ) }
    dend_70 { pt3dadd( 28.607, 114.405, -51.3343, 0.33 ) }
    dend_70 { pt3dadd( 28.7388, 115.141, -51.7407, 0.67 ) }
    dend_70 { pt3dadd( 29.145, 117.546, -52.9138, 0.33 ) }
    dend_70 { pt3dadd( 29.2147, 118.043, -53.1244, 0.67 ) }
    dend_70 { pt3dadd( 29.4432, 121.194, -54.1416, 0.33 ) }
    dend_70 { pt3dadd( 29.491, 121.578, -54.1615, 0.67 ) }
    dend_70 { pt3dadd( 29.7757, 122.908, -53.8006, 0.33 ) }
    dend_70 { pt3dadd( 30.4405, 125.007, -52.7693, 0.67 ) }
    dend_70 { pt3dadd( 30.8393, 126.137, -52.1142, 0.33 ) }
    dend_70 { pt3dadd( 31.0246, 126.66, -51.8099, 0.67 ) }
    dend_70 { pt3dadd( 32.2197, 130.145, -49.7918, 0.67 ) }
    dend_70 { pt3dadd( 32.7447, 131.882, -48.9791, 0.33 ) }
    dend_70 { pt3dadd( 33.5601, 134.917, -47.9052, 0.33 ) }
    dend_70 { pt3dadd( 33.865, 136.256, -47.5943, 0.67 ) }
    dend_70 { pt3dadd( 34.4238, 138.813, -47.1197, 0.33 ) }
    dend_70 { pt3dadd( 34.7034, 140.339, -46.9724, 0.67 ) }
    dend_70 { pt3dadd( 35.0354, 142.791, -47.131, 0.67 ) }
    dend_70 { pt3dadd( 35.3014, 144.312, -47.3518, 0.33 ) }
    dend_70 { pt3dadd( 35.3514, 144.652, -47.4575, 0.67 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -12.3672, 56.9889, 49.9099, 0.67 ) }
    dend_67 { pt3dadd( -12.7385, 55.1776, 54.5876, 0.67 ) }
    dend_67 { pt3dadd( -12.8297, 54.7495, 55.6221, 0.67 ) }
    dend_67 { pt3dadd( -12.9851, 53.932, 57.4549, 0.33 ) }
    dend_67 { pt3dadd( -13.1731, 53.0278, 59.4116, 0.67 ) }
    dend_67 { pt3dadd( -13.3236, 52.2895, 60.9094, 0.33 ) }
    dend_67 { pt3dadd( -13.3307, 51.96, 61.5758, 0.67 ) }
    dend_67 { pt3dadd( -13.1703, 51.1055, 63.4059, 0.33 ) }
    dend_67 { pt3dadd( -13.0882, 50.7218, 64.1512, 0.67 ) }
    dend_67 { pt3dadd( -12.7509, 49.7771, 65.7952, 0.33 ) }
    dend_67 { pt3dadd( -12.5661, 49.3849, 66.4041, 0.67 ) }
    dend_67 { pt3dadd( -11.3514, 47.1076, 69.9921, 0.33 ) }
    dend_67 { pt3dadd( -10.7909, 46.1411, 71.548, 0.67 ) }
    dend_67 { pt3dadd( -9.59634, 44.2621, 74.5498, 0.67 ) }
    dend_67 { pt3dadd( -8.35445, 42.3548, 77.6087, 0.67 ) }
    dend_67 { pt3dadd( -7.33069, 40.8675, 79.853, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -12.3672, 56.9889, 49.9099, 1.33 ) }
    dend_64 { pt3dadd( -12.9293, 55.3549, 51.5781, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 0/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -26.2779, 110.757, 19.7578, 0.67 ) }
    dend_60 { pt3dadd( -25.7368, 112.714, 19.7207, 0.67 ) }
    dend_60 { pt3dadd( -24.9661, 115.5, 19.6678, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 3/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -26.2779, 110.757, 19.7578, 0.67 ) }
    dend_55 { pt3dadd( -27.3619, 111.967, 20.8253, 0.67 ) }
    dend_55 { pt3dadd( -28.4306, 113.189, 21.7188, 0.33 ) }
    dend_55 { pt3dadd( -29.3115, 114.511, 22.4923, 0.67 ) }
    dend_55 { pt3dadd( -30.2462, 116.098, 23.3376, 0.33 ) }
    dend_55 { pt3dadd( -32.3697, 119.988, 25.3079, 0.67 ) }
    dend_55 { pt3dadd( -33.9577, 123.108, 26.8124, 0.33 ) }
    dend_55 { pt3dadd( -35.0327, 125.398, 27.6217, 0.67 ) }
    dend_55 { pt3dadd( -36.797, 129.473, 28.6654, 0.33 ) }
    dend_55 { pt3dadd( -36.9805, 129.928, 28.7556, 0.67 ) }
    dend_55 { pt3dadd( -37.6098, 131.55, 29.0188, 0.33 ) }
    dend_55 { pt3dadd( -38.4464, 134.057, 29.4173, 2.0 ) }
    dend_55 { pt3dadd( -40.114, 139.915, 30.5315, 0.67 ) }
    dend_55 { pt3dadd( -41.4055, 144.901, 31.5439, 1.33 ) }
    dend_55 { pt3dadd( -42.1641, 147.282, 31.951, 0.33 ) }
    dend_55 { pt3dadd( -42.319, 147.744, 32.0179, 0.67 ) }
    dend_55 { pt3dadd( -43.53, 151.664, 32.7306, 0.33 ) }
    dend_55 { pt3dadd( -43.736, 152.397, 32.9288, 0.67 ) }
    dend_55 { pt3dadd( -44.2326, 154.664, 33.8281, 0.33 ) }
    dend_55 { pt3dadd( -45.5366, 160.911, 36.4858, 0.67 ) }
    dend_55 { pt3dadd( -45.8605, 162.315, 37.0802, 0.33 ) }
    dend_55 { pt3dadd( -47.1942, 166.901, 39.0288, 0.67 ) }
    dend_55 { pt3dadd( -48.5133, 169.978, 40.3367, 0.67 ) }
    dend_55 { pt3dadd( -49.0712, 171.47, 41.1286, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -12.9293, 55.3549, 51.5781, 0.67 ) }
    dend_66 { pt3dadd( -8.09757, 54.2484, 54.4895, 0.67 ) }
    dend_66 { pt3dadd( -7.53105, 54.1186, 54.8309, 0.67 ) }
    dend_66 { pt3dadd( -5.33252, 53.6152, 56.1556, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -12.9293, 55.3549, 51.5781, 0.33 ) }
    dend_65 { pt3dadd( -10.973, 54.3254, 52.4511, 0.33 ) }
    dend_65 { pt3dadd( -7.95736, 52.4819, 53.5667, 0.33 ) }
    dend_65 { pt3dadd( -3.94519, 49.5948, 54.9249, 0.67 ) }
    dend_65 { pt3dadd( -1.09924, 47.4053, 55.9201, 0.33 ) }
    dend_65 { pt3dadd( 3.39363, 43.8928, 57.6301, 0.33 ) }
    dend_65 { pt3dadd( 5.496, 42.2491, 58.4303, 0.33 ) }
    dend_65 { pt3dadd( 9.24131, 39.3812, 60.1408, 0.67 ) }
    dend_65 { pt3dadd( 11.5618, 37.5037, 61.4667, 0.67 ) }
    dend_65 { pt3dadd( 13.3099, 35.7557, 62.5428, 0.67 ) }
    dend_65 { pt3dadd( 14.2329, 34.8542, 62.9294, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 42/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -24.9661, 115.5, 19.6678, 0.33 ) }
    dend_62 { pt3dadd( -25.397, 116.278, 20.3079, 0.33 ) }
    dend_62 { pt3dadd( -25.5169, 116.494, 20.486, 0.67 ) }
    dend_62 { pt3dadd( -26.1256, 117.593, 21.3903, 0.33 ) }
    dend_62 { pt3dadd( -26.5653, 118.386, 22.0436, 0.67 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 47/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -24.9661, 115.5, 19.6678, 0.67 ) }
    dend_61 { pt3dadd( -23.6144, 116.913, 20.09, 0.67 ) }
    dend_61 { pt3dadd( -18.4295, 122.286, 22.0156, 0.67 ) }
    dend_61 { pt3dadd( -15.4694, 125.112, 23.014, 0.33 ) }
    dend_61 { pt3dadd( -13.8498, 126.688, 23.5603, 0.67 ) }
    dend_61 { pt3dadd( -10.8733, 129.623, 24.6008, 0.33 ) }
    dend_61 { pt3dadd( -8.84981, 131.618, 25.3082, 0.33 ) }
    dend_61 { pt3dadd( -6.23517, 134.156, 26.3701, 0.67 ) }
    dend_61 { pt3dadd( -4.14521, 135.983, 27.1965, 0.33 ) }
    dend_61 { pt3dadd( -2.73654, 137.359, 27.8492, 0.33 ) }
    dend_61 { pt3dadd( -1.77019, 138.187, 28.1862, 0.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -49.0712, 171.47, 41.1286, 0.67 ) }
    dend_59 { pt3dadd( -52.6161, 174.745, 39.8411, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -49.0712, 171.47, 41.1286, 0.67 ) }
    dend_56 { pt3dadd( -50.3065, 171.68, 41.1494, 0.67 ) }
    dend_56 { pt3dadd( -51.3238, 171.853, 41.1665, 0.67 ) }
    dend_56 { pt3dadd( -53.0535, 172.147, 41.1957, 0.33 ) }
    dend_56 { pt3dadd( -55.2261, 172.517, 41.2323, 1.33 ) }
    dend_56 { pt3dadd( -60.3771, 173.393, 41.319, 0.33 ) }
    dend_56 { pt3dadd( -60.7289, 173.453, 41.325, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -60.7289, 173.453, 41.325, 0.33 ) }
    dend_58 { pt3dadd( -63.7587, 173.155, 39.8019, 0.33 ) }
    dend_58 { pt3dadd( -64.2568, 173.114, 39.5615, 0.67 ) }
    dend_58 { pt3dadd( -67.5218, 172.845, 37.9852, 0.33 ) }
    dend_58 { pt3dadd( -69.3303, 172.696, 37.1122, 0.67 ) }
    dend_58 { pt3dadd( -74.4306, 172.276, 34.6499, 0.67 ) }
    dend_58 { pt3dadd( -79.1663, 171.887, 32.3637, 0.33 ) }
    dend_58 { pt3dadd( -79.5148, 171.87, 32.1847, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -60.7289, 173.453, 41.325, 0.67 ) }
    dend_57 { pt3dadd( -62.0807, 177.709, 46.4124, 0.67 ) }
    dend_57 { pt3dadd( -62.9108, 180.322, 49.5361, 0.33 ) }
    dend_57 { pt3dadd( -63.0698, 180.823, 50.1344, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_74 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_51 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_76 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_17 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_69 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_80 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_73 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_75 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_81 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_79 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_82 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_63 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_64 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_66 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_67 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_71 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_77 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_65 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_62 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_78 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_46 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_59 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_40 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_41 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_56 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_42 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_57 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_45 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_58 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_39 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_1 nseg = 9
    dend_32 nseg = 3
    dend_20 nseg = 5
    dend_13 nseg = 9
    dend_43 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 3
    dend_3 nseg = 3
    dend_74 nseg = 7
    dend_51 nseg = 3
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_23 nseg = 3
    dend_15 nseg = 3
    dend_76 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_17 nseg = 3
    dend_72 nseg = 5
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_DBC_f339de2544_0_0


