// Cell: bIR215_L6_NBC_a104961d30_0_0
/*
{
  "id" : "bIR215_L6_NBC_a104961d30_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.36735, -8.08849, 0.0, 2.03688", "4.94549, -7.33368, 0.0, 3.52963", "4.52363, -6.57887, 0.0, 6.0021", "4.10177, -5.82406, 0.0, 7.56762", "3.67992, -5.06925, 0.0, 9.13193", "3.25806, -4.31444, 0.0, 10.2542", "2.8362, -3.55963, 0.0, 11.222", "2.41434, -2.80482, 0.0, 11.981", "1.99249, -2.05001, 0.0, 12.7132", "1.57063, -1.2952, 0.0, 13.4454", "1.14877, -0.540387, 0.0, 14.1776", "0.726915, 0.214423, 0.0, 14.4912", "0.305057, 0.969233, 0.0, 13.9479", "-0.1168, 1.72404, 0.0, 13.0659", "-0.538657, 2.47885, 0.0, 12.184", "-0.960515, 3.23366, 0.0, 11.2453", "-1.38237, 3.98847, 0.0, 10.0927", "-1.80423, 4.74328, 0.0, 8.93171", "-2.22609, 5.49809, 0.0, 7.05094", "-2.64794, 6.2529, 0.0, 4.33066", "-3.0698, 7.00771, 0.0, 2.48073" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.730264, 0.703278, -11.45, 0.92", "-0.730264, 0.703278, -11.45, 0.92", "-2.56673, 2.13959, -12.0469, 0.92", "-4.02591, 3.28082, -12.5212, 1.83", "-5.37775, 4.33809, -12.9606, 0.92", "-6.15006, 4.94212, -13.2116, 0.92", "-7.77219, 6.21078, -13.7389, 0.92", "-8.65096, 6.87216, -14.0197, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "5.04974, -5.72347, -8.55, 0.92", "5.04974, -5.72347, -8.55, 0.92", "6.69754, -7.52908, -8.80962, 0.92", "8.35021, -9.61357, -9.20918, 1.83", "9.25245, -10.8104, -9.46787, 0.92", "9.46745, -11.1288, -9.54514, 0.92", "10.4746, -13.0262, -10.0323, 0.92", "10.8081, -13.8517, -10.2723, 0.92", "11.2031, -15.1948, -10.7613, 1.38", "11.735, -16.9275, -11.503, 0.46", "12.473, -18.7318, -12.4342, 1.83", "13.4588, -20.7224, -13.6139, 0.46", "13.9249, -21.4432, -14.16, 1.38", "14.6748, -22.5102, -15.1462, 0.46", "15.6136, -23.8475, -16.7698, 0.46", "16.4329, -24.8844, -18.4449, 1.38", "16.5595, -25.0011, -18.699, 1.38", "17.3426, -25.5211, -20.1797, 0.46", "17.9872, -26.001, -21.4938, 0.92", "18.651, -26.7501, -23.0992, 0.46", "18.75, -26.95, -23.4171, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "2.71974, -6.86123, -5.05, 0.92", "2.59923, -7.37536, -5.04164, 0.92", "0.998435, -14.6197, -5.08676, 0.92", "0.355826, -17.5038, -5.13252, 1.83", "-0.835802, -22.9995, -5.30528, 0.92", "-1.68969, -27.0455, -5.49961, 0.92", "-2.1301, -29.0055, -5.6187, 1.83", "-3.28471, -33.614, -6.02584, 0.92", "-3.42864, -34.1173, -6.0906, 0.92", "-4.20887, -36.7452, -6.52319, 1.38", "-5.169, -39.9858, -7.13867, 0.46", "-5.94336, -42.7264, -7.74681, 1.38", "-6.73507, -45.5227, -8.41074, 0.46", "-7.0727, -46.7718, -8.72949, 0.46", "-8.05787, -50.5685, -9.76948, 0.92", "-8.73403, -53.2562, -10.5263, 1.83", "-9.45984, -56.5838, -11.512, 0.92", "-9.53745, -57.0823, -11.6659, 0.92", "-9.92962, -60.4969, -12.7568, 0.92", "-10.1797, -62.3218, -13.3892, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.82973, -8.12197, -2.05, 0.46", "7.1276, -8.67022, -2.03739, 0.46", "8.91218, -11.9076, -1.98469, 0.92", "9.15709, -12.3371, -1.96707, 0.92", "10.36, -14.4007, -1.81987, 0.46", "12.1128, -17.3871, -1.51815, 1.38", "14.0235, -20.5325, -1.16018, 0.46", "15.9895, -23.6359, -0.746757, 0.92", "17.8101, -26.3464, -0.319289, 0.46", "20.395, -30.0566, 0.351126, 1.83", "22.1666, -32.5151, 0.8405, 0.46", "23.5258, -34.3625, 1.25724, 1.38", "25.6319, -37.1515, 1.94972, 0.46", "27.7597, -39.9209, 2.66771, 0.46", "29.1299, -41.6868, 3.11746, 1.38", "32.0176, -45.3531, 4.04576, 0.92", "33.3712, -47.0896, 4.47509, 0.92", "34.2983, -48.3614, 4.80201, 2.29", "41.0083, -56.7146, 4.75499, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.12027, -4.36022, -1.17, 0.92", "-4.12027, -4.36022, -1.17, 0.92", "-7.29929, -6.96765, -1.27601, 0.92", "-9.05595, -8.47005, -1.24759, 0.92", "-10.0984, -9.42108, -1.1652, 1.38", "-10.4971, -9.79734, -1.11225, 1.38", "-15.4544, -14.5439, -0.375515, 0.92", "-17.3161, -16.3664, -0.0399757, 0.92", "-18.8341, -17.8925, 0.299512, 1.38", "-21.2537, -20.3225, 0.947029, 0.92", "-23.0489, -22.1224, 1.46242, 0.92", "-24.2715, -23.3576, 1.81659, 1.38", "-24.5685, -23.6516, 1.90609, 1.38", "-27.4433, -26.5641, 2.67266, 0.92", "-29.7262, -28.9451, 3.16771, 0.92", "-31.6215, -31.0021, 3.47561, 1.38", "-33.7829, -33.4264, 3.77399, 0.92", "-34.1388, -33.8463, 3.81926, 0.92", "-35.9887, -36.0876, 4.00847, 1.83", "-39.4786, -40.8654, 4.2045, 0.92", "-41.9244, -44.343, 4.24514, 0.92", "-42.2354, -44.8011, 4.2447, 0.92", "-43.5621, -46.7718, 4.24255, 1.83", "-43.9532, -47.3626, 4.24186, 1.83", "-48.4478, -54.2251, 4.23208, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.92026, 6.96602, 0.0, 0.92", "-4.27608, 7.51256, 0.0, 0.92", "-4.72469, 8.20161, 0.0, 0.92", "-7.58918, 12.6014, 0.0, 0.92", "-9.67451, 15.8044, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007052683877
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.0698, 7.00771, 0.0, 0.92", "-10.3878, 20.1015, 0.0, 0.92", "-17.7058, 33.1952, 0.0, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-8.65096, 6.87216, -14.0197, 0.92", "-11.6964, 2.6978, -15.7787, 0.92", "-13.009, 0.898685, -16.5369, 0.92", "-14.5941, -1.27397, -17.4524, 1.38", "-16.8656, -4.38751, -18.7644, 0.46", "-18.863, -7.12522, -19.918, 0.46" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.65096, 6.87216, -14.0197, 0.46", "-6.76269, 10.5351, -13.6767, 0.46", "-6.60149, 10.8867, -13.6499, 0.46", "-5.90875, 12.4414, -13.5644, 0.92", "-5.72355, 12.9057, -13.5459, 0.92", "-4.63915, 15.6643, -13.5387, 0.92", "-4.413, 16.2628, -13.5596, 0.92", "-3.92484, 17.7393, -13.685, 1.38", "-3.53202, 18.9605, -13.8017, 0.46", "-2.95989, 20.8782, -14.01, 1.38", "-2.12104, 23.8091, -14.391, 0.46", "-1.6208, 25.8858, -14.6987, 0.46", "-1.50725, 26.3686, -14.7703, 0.46", "-1.08927, 28.354, -15.0685, 0.92", "-1.02592, 28.7424, -15.1263, 0.92", "-0.746603, 31.0001, -15.4472, 0.46", "-0.495414, 34.5074, -15.8833, 0.46", "-0.429015, 36.1991, -16.0753, 1.38", "-0.418178, 36.5946, -16.1201, 1.38", "-0.41324, 39.1741, -16.3995, 0.46", "-0.468388, 40.6798, -16.5565, 0.92", "-0.511986, 41.1772, -16.6084, 0.92", "-0.789755, 43.7153, -16.8954, 0.46", "-0.836738, 44.108, -16.9415, 0.46", "-0.968294, 45.6471, -17.1535, 1.38", "-1.16874, 48.7979, -17.6372, 0.46", "-1.31366, 51.3372, -18.0682, 0.46", "-1.37266, 52.8099, -18.3722, 0.92", "-1.38525, 53.297, -18.4908, 0.92", "-1.36121, 55.6872, -19.1654, 0.46", "-1.32367, 56.1606, -19.3241, 0.46", "-1.23958, 56.7442, -19.5543, 0.92", "-1.00903, 58.0112, -20.1453, 0.46", "-0.915137, 58.5651, -20.4478, 0.46", "-0.711601, 60.3143, -21.4207, 0.46", "-0.707343, 60.7622, -21.642, 0.46", "-0.74328, 61.6086, -22.0026, 0.92", "-0.782286, 62.1853, -22.2473, 0.92", "-1.19841, 65.0127, -23.3508, 0.46", "-1.31954, 65.589, -23.5998, 0.46", "-2.04937, 68.391, -24.8591, 0.46", "-2.41178, 69.7593, -25.5138, 0.92", "-2.95285, 71.7482, -26.4919, 0.46", "-3.47747, 73.6419, -27.4458, 0.92", "-4.18946, 76.1854, -28.7455, 0.46", "-4.281, 76.6118, -28.9875, 0.46", "-4.48279, 77.9303, -29.8116, 0.46", "-4.49849, 78.4783, -30.126, 0.46", "-4.38502, 80.1964, -30.8565, 0.46", "-4.26186, 81.1418, -31.1888, 0.92", "-3.89377, 83.8394, -31.9147, 0.46", "-3.82955, 84.32, -32.041, 0.46", "-3.2353, 88.2705, -33.0428, 0.46", "-2.64532, 92.1217, -34.0198, 0.46", "-2.57408, 92.604, -34.1359, 0.46", "-2.35958, 94.1136, -34.4903, 0.92", "-1.85914, 97.8886, -35.2981, 0.46", "-1.51552, 100.274, -35.8508, 0.46", "-1.45174, 100.654, -35.9492, 0.46", "-1.0425, 102.602, -36.4767, 0.46", "-0.926814, 103.074, -36.5979, 0.46", "-0.66091, 104.086, -36.8329, 0.92", "-0.535562, 104.563, -36.9177, 0.92", "0.351962, 108.003, -37.5156, 0.46", "0.498239, 108.609, -37.6509, 0.92", "1.12208, 111.452, -38.4062, 0.46", "1.2445, 112.056, -38.5802, 0.46", "1.35375, 112.651, -38.7811, 0.92", "1.42651, 113.113, -38.9567, 0.92", "1.89038, 116.014, -40.2145, 0.46", "1.96415, 116.465, -40.4165, 0.46", "2.16338, 117.433, -40.8349, 0.92", "2.62037, 119.318, -41.6308, 0.46", "2.71755, 119.674, -41.7747, 0.46", "3.52505, 122.077, -42.7074, 0.46", "3.69282, 122.522, -42.8592, 0.46", "4.58427, 125.093, -43.6525, 0.46", "4.6948, 125.461, -43.7526, 0.46", "4.82101, 126.066, -43.911, 0.92", "4.96163, 127.089, -44.1934, 0.92", "5.08497, 130.648, -45.1867, 0.46", "5.05628, 132.612, -45.7469, 0.46", "5.00882, 133.226, -45.9248, 0.46", "4.66786, 136.619, -46.9072, 0.46", "4.62612, 136.999, -47.016, 0.46", "4.50616, 138.041, -47.3047, 0.92", "4.45334, 138.518, -47.4502, 0.92", "4.06426, 144.024, -49.2641, 0.46", "4.0563, 144.401, -49.3878, 0.46", "4.09204, 145.299, -49.6701, 0.92", "4.1356, 145.784, -49.8211, 0.92", "4.54238, 148.777, -50.7783, 0.46", "5.23467, 152.742, -52.01, 0.46", "5.36839, 153.34, -52.185, 0.92", "6.17951, 156.842, -53.1858, 0.46", "6.48218, 158.047, -53.5054, 0.92", "6.76649, 159.067, -53.7494, 0.92", "8.00692, 162.921, -54.4975, 0.46", "8.35225, 163.916, -54.7066, 0.92", "9.07664, 166.038, -55.1889, 0.46", "9.98083, 168.781, -55.8762, 0.46", "10.1194, 169.246, -55.9999, 0.46", "10.4246, 170.454, -56.3263, 0.92", "11.0046, 173.019, -57.0529, 0.46", "11.0912, 173.493, -57.1873, 0.46", "11.5537, 177.118, -58.1923, 0.46", "11.5993, 177.731, -58.3726, 0.46", "11.7307, 180.22, -59.0942, 0.46", "11.7339, 180.703, -59.2258, 0.46", "11.7181, 181.195, -59.3233, 0.92", "11.6945, 181.585, -59.3986, 0.92" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "18.75, -26.95, -23.4171, 0.46", "21.4354, -29.407, -25.0511, 0.46", "23.0086, -30.824, -26.0234, 1.38", "23.3088, -31.1753, -26.2248, 1.38", "25.384, -34.0857, -27.6656, 0.46", "25.6464, -34.4765, -27.8498, 0.46", "27.7108, -37.5505, -29.2986, 1.38", "28.0118, -38.0634, -29.5302, 1.38", "30.3985, -42.6308, -31.3357, 0.46", "31.2302, -44.3319, -31.9711, 0.46", "31.4441, -44.9059, -32.1592, 0.46" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "18.75, -26.95, -23.4171, 0.92", "16.7821, -28.0867, -23.7654, 0.92", "16.3318, -28.3118, -23.8488, 0.92", "14.6065, -29.1149, -24.1578, 0.46", "13.4202, -29.5959, -24.4188, 0.92", "10.4468, -30.7054, -25.141, 0.46", "8.91691, -31.2396, -25.6156, 0.92", "7.15805, -31.7643, -26.2824, 0.46", "6.81504, -31.8653, -26.4718, 0.46", "5.51333, -32.1413, -27.6324, 0.46", "5.50071, -32.1404, -27.6557, 0.46", "4.98433, -31.8134, -29.6798, 0.46", "4.98022, -31.8092, -29.7056, 0.46", "4.85674, -31.4736, -32.2722, 0.46", "4.8479, -31.3998, -32.9216, 0.46", "4.91085, -31.3802, -35.8691, 0.46", "4.95505, -31.52, -38.5489, 0.46", "4.95438, -31.5228, -38.5751, 0.46", "4.81627, -31.9491, -41.509, 0.46", "4.77138, -32.0279, -41.9033, 0.46", "3.97884, -33.2213, -46.8303, 0.46", "3.88603, -33.3116, -47.2043, 0.46", "3.35034, -33.6651, -48.8748, 0.46", "3.34425, -33.6675, -48.8911, 0.46", "1.96971, -33.8419, -51.991, 0.46", "1.79921, -33.8278, -52.3585, 0.46", "0.722096, -33.2416, -54.2302, 0.46", "0.022723, -32.7118, -55.7103, 0.46", "0.015853, -32.7011, -55.7336, 0.46", "-0.169422, -32.0848, -56.7676, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.1797, -62.3218, -13.3892, 0.46", "-11.3837, -67.2085, -12.2955, 0.46", "-11.5005, -67.6667, -12.1817, 0.92", "-11.6177, -68.1281, -12.0805, 0.92", "-12.3133, -71.0437, -11.5147, 0.92", "-12.9621, -74.0644, -11.0832, 0.46", "-13.3775, -76.1632, -10.8408, 0.92", "-13.4845, -76.7639, -10.7824, 0.92", "-14.3354, -81.6068, -10.4623, 0.46", "-14.6683, -83.5019, -10.3905, 0.92", "-15.4189, -87.8218, -10.3308, 0.46", "-15.6618, -89.2392, -10.3368, 0.92", "-15.7258, -89.614, -10.3408, 0.92", "-16.3625, -93.4827, -10.3698, 0.46", "-16.4645, -94.0846, -10.3676, 0.92", "-17.2175, -98.0275, -10.2664, 0.46", "-17.318, -98.4946, -10.2312, 1.38", "-17.4201, -98.9607, -10.1895, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.1797, -62.3218, -13.3892, 0.46", "-9.8673, -66.0798, -13.9707, 0.46", "-9.62784, -68.397, -14.3418, 0.46", "-9.51649, -69.3698, -14.5025, 1.38", "-9.48503, -69.7293, -14.5581, 1.38", "-9.37422, -73.2551, -15.0567, 0.46", "-9.37584, -73.6164, -15.111, 0.46", "-9.45481, -75.1124, -15.3402, 1.38", "-9.50751, -75.5712, -15.418, 1.38", "-9.89777, -77.9099, -15.8953, 0.92", "-10.2703, -79.5936, -16.29, 0.92", "-10.6168, -80.7049, -16.5901, 0.92", "-11.0102, -82.0828, -16.9768, 1.38", "-11.1014, -82.5154, -17.1025, 1.38", "-11.2882, -84.4025, -17.6726, 0.46", "-11.2086, -86.3474, -18.2706, 0.46", "-11.1586, -86.7878, -18.3931, 0.46", "-10.9465, -88.1838, -18.7287, 1.38", "-10.4719, -90.7112, -19.2936, 0.46", "-10.2539, -91.8698, -19.5339, 1.38", "-9.75834, -94.6136, -20.0394, 0.46", "-9.27524, -97.3526, -20.5126, 0.46", "-8.98965, -99.3046, -20.8442, 1.38", "-8.9537, -99.6547, -20.9043, 1.38", "-8.89569, -101.977, -21.3159, 0.46", "-8.943, -103.835, -21.6669, 0.92", "-8.96972, -104.286, -21.7582, 0.92", "-9.18629, -107.112, -22.3644, 0.46", "-9.28146, -108.159, -22.6002, 1.38", "-9.54727, -111.894, -23.4553, 0.46", "-9.62121, -113.283, -23.78, 1.38", "-9.7246, -116.947, -24.6473, 0.46", "-9.76021, -118.802, -25.0807, 1.38", "-9.76357, -119.252, -25.1801, 1.38", "-9.7711, -122.56, -25.8316, 0.46", "-9.77195, -124.923, -26.2454, 0.46", "-9.78319, -126.51, -26.4922, 1.38", "-9.7916, -127.089, -26.5728, 1.38", "-9.89402, -130.771, -27.0434, 0.46", "-9.98829, -134.066, -27.4289, 0.46", "-10.0741, -136.378, -27.6701, 0.92", "-10.1412, -138.722, -27.8587, 1.38", "-10.2071, -140.59, -27.9803, 0.46", "-10.2149, -140.955, -28.0028, 0.46", "-10.2121, -142.944, -28.1501, 0.92", "-10.2047, -143.41, -28.2028, 0.92", "-10.2375, -145.686, -28.5512, 0.46", "-10.2657, -146.264, -28.6576, 0.46", "-10.4203, -148.595, -29.1583, 0.92", "-10.5772, -150.588, -29.6361, 1.38", "-10.8592, -153.353, -30.3617, 0.46", "-11.0845, -155.695, -30.989, 0.46", "-11.1376, -156.258, -31.1529, 0.46", "-11.2577, -157.673, -31.5437, 0.46", "-11.2986, -158.116, -31.6609, 0.46", "-11.4444, -159.465, -31.9573, 1.38", "-11.7646, -162.677, -32.5888, 0.46", "-11.8114, -163.128, -32.6654, 0.46", "-11.9628, -164.515, -32.8861, 0.92", "-12.016, -164.97, -32.9375, 0.92", "-12.6267, -169.621, -33.3485, 0.46", "-12.6886, -170.077, -33.3723, 0.46", "-12.9701, -171.939, -33.4556, 1.38", "-13.0292, -172.403, -33.4835, 1.38", "-13.4187, -175.657, -33.7032, 0.46", "-13.4488, -176.011, -33.7389, 0.46", "-13.4811, -177.456, -33.9502, 0.92", "-13.4544, -180.101, -34.4642, 0.46", "-13.4229, -181.31, -34.7642, 1.38", "-13.4064, -181.653, -34.859, 1.38", "-13.2056, -184.85, -35.8717, 0.46", "-13.1147, -186.06, -36.2625, 1.38", "-12.9343, -188.385, -37.0288, 0.46", "-12.7293, -190.745, -37.7283, 0.46", "-12.6308, -191.876, -38.0378, 1.38", "-12.5991, -192.228, -38.129, 1.38", "-12.3687, -194.658, -38.6841, 0.46", "-12.2259, -196.067, -38.9714, 1.38", "-11.7663, -199.711, -39.6214, 0.46", "-11.4958, -201.688, -39.8811, 0.46", "-11.4563, -202.05, -39.9151, 0.46", "-11.2344, -204.456, -40.045, 0.92", "-11.1099, -206.424, -40.072, 0.46", "-11.0527, -207.845, -40.0601, 0.92", "-10.9964, -210.004, -40.0263, 0.46", "-10.9615, -212.43, -40.0262, 0.46", "-10.9522, -214.733, -40.1087, 0.92", "-10.9904, -217.511, -40.3003, 0.46", "-11.0191, -218.426, -40.404, 1.38", "-11.0887, -220.853, -40.7843, 0.46", "-11.1011, -222.78, -41.1862, 0.92", "-11.0644, -226.932, -42.1708, 0.46", "-11.0416, -229.201, -42.7505, 0.92", "-10.9866, -231.14, -43.232, 0.46", "-10.9284, -232.273, -43.5018, 0.92", "-10.7163, -235.637, -44.2615, 0.46", "-10.6801, -235.994, -44.3302, 0.46", "-10.4873, -237.359, -44.4961, 0.92", "-9.5265, -243.408, -44.9553, 0.46", "-9.32195, -244.598, -44.9965, 0.92", "-9.26075, -244.958, -45.0029, 0.92", "-8.38667, -250.082, -45.0813, 0.46", "-7.71771, -254.021, -45.1718, 0.46", "-7.64447, -254.475, -45.1902, 0.46", "-7.44192, -255.89, -45.2645, 1.38", "-6.93969, -259.652, -45.552, 0.46", "-6.45381, -263.465, -45.9498, 0.46", "-6.2959, -264.828, -46.1689, 1.38", "-5.92167, -268.083, -46.9071, 0.46", "-5.87813, -268.426, -46.9917, 0.46", "-5.62481, -270.364, -47.5214, 0.92", "-5.56838, -270.707, -47.6305, 0.92", "-5.04524, -273.108, -48.4535, 0.46", "-4.70923, -274.288, -48.901, 0.46", "-4.07205, -276.067, -49.6072, 0.92", "-3.94568, -276.383, -49.735, 0.92", "-3.23827, -278.098, -50.4449, 0.46", "-2.73584, -279.33, -50.944, 0.92", "-2.03478, -281.091, -51.653, 0.46", "-1.64714, -282.148, -52.0364, 0.92", "-1.50545, -282.561, -52.1754, 0.92", "-0.611573, -285.279, -53.0307, 0.46", "-0.0938039, -287.109, -53.5482, 0.92", "0.041959, -287.663, -53.6905, 0.92", "0.725271, -290.94, -54.4217, 0.46", "0.903655, -291.903, -54.6186, 0.92", "0.984105, -292.357, -54.7015, 0.92", "1.39632, -294.694, -55.04, 0.46", "1.63749, -296.048, -55.2315, 0.92", "1.73383, -296.5, -55.3067, 0.92", "2.41769, -299.216, -55.7914, 0.46", "2.55926, -299.645, -55.8734, 0.46", "3.04815, -300.968, -56.1326, 0.92", "4.04596, -303.192, -56.6255, 0.92", "5.31889, -305.685, -57.2401, 0.46", "6.30661, -307.528, -57.7041, 0.92", "7.93639, -310.238, -58.4317, 0.46", "8.12642, -310.535, -58.5159, 0.46", "9.06828, -311.864, -58.9283, 0.92", "9.35052, -312.204, -59.0399, 0.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "41.0083, -56.7146, 4.75499, 0.92", "45.8343, -64.3141, 5.66682, 0.92", "51.9004, -70.862, 6.88654, 0.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "41.0083, -56.7146, 4.75499, 0.46", "46.7936, -63.7763, 5.85447, 0.92", "53.0053, -70.4955, 6.5982, 0.92", "59.3392, -77.0024, 7.91872, 0.92", "65.9994, -83.2938, 8.09221, 0.92", "72.2965, -89.8142, 9.52426, 0.92", "78.4386, -96.109, 12.1382, 0.92", "85.2912, -101.099, 15.5495, 0.92", "92.9026, -105.587, 17.8096, 0.92", "100.001, -110.545, 20.7214, 0.92", "105.736, -117.485, 22.5891, 0.92", "112.367, -123.666, 23.9408, 0.92", "119.289, -129.503, 25.2862, 0.92", "125.644, -135.498, 28.0575, 0.92", "131.459, -141.739, 31.4423, 0.92", "136.974, -147.831, 35.5237, 0.92", "142.151, -154.111, 39.776, 0.92", "147.117, -160.436, 44.2146, 0.92", "152.607, -166.138, 48.8346, 0.92", "156.449, -172.186, 54.5765, 0.92", "161.063, -178.86, 58.9076, 0.92", "165.423, -185.682, 63.2829, 0.92", "170.954, -192.266, 66.5233, 0.92", "175.909, -199.582, 69.1306, 0.92", "180.436, -207.171, 71.7729, 0.92", "184.394, -215.259, 73.8547, 0.92", "187.824, -223.46, 76.4095, 0.92", "192.326, -230.886, 79.507, 0.92", "196.519, -238.608, 82.3325, 0.92", "201.271, -245.99, 85.1385, 0.92", "205.986, -252.82, 89.1117, 0.92", "209.015, -261.155, 91.7608, 0.92", "211.178, -269.383, 95.4124, 0.92", "211.375, -278.162, 98.41, 0.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-48.4478, -54.2251, 4.23208, 0.46", "-48.2107, -58.8679, 3.20996, 0.46", "-48.1326, -60.3974, 2.87324, 0.92", "-48.0936, -61.1622, 2.70487, 0.92", "-47.9335, -64.2964, 2.01486, 0.46", "-47.9025, -64.903, 1.88132, 0.46", "-47.8184, -66.5509, 1.51853, 0.92", "-45.646, -79.2442, -2.53565, 0.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-48.4478, -54.2251, 4.23208, 0.46", "-49.474, -55.0144, 4.27027, 0.46", "-49.6449, -55.1757, 4.26419, 0.46", "-50.2535, -55.8667, 4.26086, 0.92", "-50.4413, -56.0972, 4.26467, 0.92", "-51.4728, -57.4178, 4.2656, 0.46", "-51.706, -57.7165, 4.26581, 1.38", "-53.23, -59.7466, 4.26305, 0.46", "-54.8825, -62.0224, 4.25621, 0.46", "-55.6888, -63.1757, 4.25145, 0.46", "-56.7038, -64.675, 4.24493, 1.38", "-59.2354, -69.1283, 4.70366, 1.38" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.67451, 15.8044, 0.0, 0.92", "-12.7661, 18.7842, 1.56273, 0.92", "-15.5494, 21.4667, 2.96961, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.67451, 15.8044, 0.0, 0.46", "-12.8801, 14.7872, 0.999228, 0.46", "-13.9872, 14.4359, 1.34433, 1.38", "-16.8806, 13.5178, 2.24625, 0.46", "-20.7247, 12.298, 3.44451, 0.46", "-21.5267, 12.0435, 3.69451, 1.38", "-21.9552, 11.9075, 3.8281, 1.38", "-29.1049, 8.80342, 6.02701, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-17.7058, 33.1952, 0.0, 0.92", "-25.0238, 46.289, 0.0, 0.92", "-32.3418, 59.3828, 0.0, 0.92" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-18.863, -7.12522, -19.918, 0.46", "-20.5089, -3.44737, -20.5253, 0.46", "-21.5739, -1.56308, -20.9112, 1.38", "-22.4015, -0.0748399, -21.2822, 0.46", "-23.2601, 1.42226, -21.6905, 0.92", "-24.1963, 3.03019, -22.1775, 0.46", "-24.5342, 3.60642, -22.3607, 0.46", "-25.8774, 5.69473, -23.123, 0.46", "-27.3797, 8.17309, -24.0828, 0.46", "-27.6545, 8.62239, -24.2377, 0.46", "-29.5186, 11.578, -25.1981, 0.92", "-29.5315, 11.5976, -25.2029, 0.92", "-30.8568, 13.6066, -25.5434, 0.46", "-32.2094, 15.732, -25.7349, 0.46", "-34.6915, 19.4953, -25.8124, 0.92", "-34.9955, 19.9563, -25.8032, 0.92", "-37.3451, 23.6375, -25.5139, 0.46", "-38.4903, 25.4646, -25.3143, 0.92", "-40.0447, 28.0481, -24.9712, 0.46", "-41.4357, 30.5037, -24.634, 0.92", "-41.6929, 30.9899, -24.5742, 0.92", "-43.6418, 34.7989, -24.1199, 0.46", "-44.0391, 35.593, -24.0326, 0.92", "-45.4171, 38.4341, -23.7783, 0.46", "-46.4679, 40.6052, -23.5964, 0.92" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-18.863, -7.12522, -19.918, 0.46", "-18.4587, -8.3688, -20.0034, 0.46", "-17.8596, -10.1666, -20.1834, 0.46", "-17.6723, -10.7751, -20.2483, 0.46", "-17.1574, -12.4084, -20.4256, 1.38", "-16.6194, -13.9874, -20.661, 0.46", "-16.1589, -15.1638, -20.8613, 0.46", "-15.9251, -15.604, -20.9576, 0.46", "-15.4196, -16.4462, -21.2072, 1.38", "-15.2051, -16.7703, -21.3078, 1.38", "-14.3207, -18.0541, -21.7728, 0.46", "-13.8828, -18.6736, -22.0054, 1.38", "-12.3244, -21.0375, -22.8264, 0.46", "-11.599, -22.1472, -23.2493, 0.46", "-11.0259, -22.9999, -23.6035, 1.38", "-10.0325, -24.5443, -24.2441, 0.46", "-10.0196, -24.5654, -24.2527, 0.46", "-9.30299, -25.8512, -24.8074, 0.92", "-8.48588, -27.4384, -25.5635, 0.46", "-7.77506, -28.7929, -26.1891, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "31.4441, -44.9059, -32.1592, 0.46", "30.2006, -46.866, -32.608, 0.46", "29.3381, -48.3951, -32.8808, 0.92", "26.6528, -53.4254, -33.5713, 0.46", "25.9692, -54.762, -33.7337, 0.92", "24.1459, -58.3274, -34.1667, 0.46", "23.5085, -59.5737, -34.3181, 0.92", "22.1066, -62.486, -34.598, 0.46", "20.5307, -65.9902, -34.8219, 0.46", "19.9879, -67.2757, -34.8394, 0.92" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "31.4441, -44.9059, -32.1592, 0.46", "32.9365, -46.2483, -32.8518, 0.46", "35.3158, -48.4522, -34.098, 0.46", "36.8207, -49.8361, -34.915, 1.38", "38.86, -51.679, -36.0071, 0.46", "39.4251, -52.1744, -36.3009, 0.92", "41.0816, -53.6139, -37.1634, 0.46", "42.4082, -54.7744, -37.8681, 0.92", "43.5387, -55.7988, -38.5172, 0.46", "44.6091, -56.7513, -39.1388, 1.38", "46.5847, -58.5006, -40.2421, 0.46", "46.9026, -58.7814, -40.4128, 0.46", "48.8591, -60.5763, -41.4546, 1.38", "49.1397, -60.8812, -41.6255, 1.38", "51.501, -63.7055, -43.2532, 0.46", "52.3674, -64.8559, -43.9279, 1.38", "53.7574, -66.7874, -45.1055, 0.46", "54.4543, -67.7842, -45.7229, 1.38", "56.4375, -70.7309, -47.5462, 0.46", "57.2282, -71.8577, -48.2384, 1.38", "59.1959, -74.5676, -49.9681, 0.46", "60.117, -75.8275, -50.7947, 1.38", "61.2048, -77.3481, -51.769, 0.46", "61.7834, -78.1108, -52.2737, 1.38", "63.783, -80.6413, -53.9347, 0.46", "64.5546, -81.6481, -54.5927, 0.46", "64.7988, -81.9707, -54.8096, 0.46", "65.9223, -83.5622, -55.8637, 0.92", "67.0664, -85.218, -57.0212, 0.46", "68.1336, -86.8448, -58.155, 0.92", "69.1011, -88.4131, -59.2143, 0.46", "69.3154, -88.7618, -59.4246, 0.46", "70.8334, -91.2135, -60.8332, 0.92", "71.185, -91.7905, -61.1405, 0.92", "72.8016, -94.5809, -62.4245, 0.46", "72.811, -94.5974, -62.4312, 0.46", "73.849, -96.4382, -63.1135, 0.92", "74.9449, -98.3553, -63.8381, 0.46", "75.6426, -99.57, -64.2887, 0.92", "76.3021, -100.748, -64.7281, 0.46", "77.3233, -102.551, -65.4144, 0.92", "78.7574, -105.04, -66.3943, 0.46", "79.9775, -107.129, -67.2181, 0.46", "80.5106, -108.02, -67.5519, 0.92", "80.8827, -108.617, -67.7778, 0.92", "82.0804, -110.481, -68.4162, 0.46", "82.3182, -110.855, -68.5398, 0.46", "83.4645, -112.688, -69.0694, 0.92", "83.7533, -113.185, -69.2055, 0.92", "85.4032, -116.139, -70.0568, 0.46", "86.2496, -117.675, -70.5034, 0.92", "86.4453, -118.074, -70.6279, 0.92", "87.919, -121.242, -71.6376, 0.46", "88.6631, -122.985, -72.2228, 0.46", "89.1885, -124.399, -72.7025, 0.92", "89.1943, -124.417, -72.7088, 0.92", "90.1895, -128.011, -73.9763, 0.46", "90.5528, -129.371, -74.4571, 0.92", "90.6491, -129.788, -74.6073, 0.92", "91.5907, -134.038, -76.1255, 0.46", "91.6873, -134.464, -76.2807, 0.46", "92.0642, -136.132, -76.8902, 0.92", "92.414, -137.679, -77.5432, 0.46", "92.5129, -138.092, -77.7283, 0.46", "93.0905, -140.055, -78.6412, 0.92", "94.1733, -143.123, -80.0833, 0.46", "94.9914, -145.168, -81.0198, 0.92", "95.9707, -147.544, -82.0726, 0.46", "96.757, -149.473, -82.8808, 0.92", "98.0184, -152.626, -84.1134, 0.46", "98.5254, -153.962, -84.5907, 0.92", "99.6925, -157.24, -85.5371, 0.46", "100.404, -159.452, -86.0641, 0.46", "100.703, -160.655, -86.2823, 0.46", "101.192, -163.1, -86.6827, 0.46", "101.592, -165.55, -87.0335, 0.92", "101.941, -167.595, -87.3484, 0.46", "102.281, -169.291, -87.6379, 0.92", "104.078, -176.511, -89.0263, 0.46", "104.699, -178.6, -89.5075, 0.92", "104.885, -179.133, -89.6521, 0.92", "105.952, -181.83, -90.4862, 0.46", "106.621, -183.452, -91.031, 0.46", "107.039, -184.407, -91.3629, 0.92", "107.897, -186.385, -92.0627, 0.46", "108.346, -187.497, -92.4212, 0.92", "110.361, -192.905, -94.0087, 0.46", "111.123, -195.091, -94.5598, 0.92", "111.312, -195.627, -94.6921, 0.92", "112.643, -199.283, -95.6108, 0.46", "113.185, -200.645, -95.9525, 0.92", "114.502, -203.665, -96.7248, 0.46", "115.234, -205.27, -97.1408, 0.92", "116.801, -208.642, -97.9757, 0.46", "117.596, -210.395, -98.3901, 0.92", "118.971, -213.423, -99.0987, 0.46", "119.854, -215.422, -99.5614, 0.92", "121.642, -219.48, -100.428, 0.46", "122.618, -221.77, -100.898, 0.92", "123.941, -224.955, -101.435, 0.46" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "9.35052, -312.204, -59.0399, 0.46", "11.087, -312.839, -60.4225, 0.46", "11.5869, -313.053, -60.8188, 0.46", "16.0066, -315.927, -64.3284, 0.46", "16.572, -316.389, -64.7784, 0.92", "19.076, -318.566, -66.7761, 0.46", "20.014, -319.427, -67.489, 0.92", "20.4218, -319.876, -67.7931, 0.92", "23.1209, -323.224, -69.7574, 0.46", "24.7635, -325.581, -70.9213, 0.46", "25.1351, -326.085, -71.1872, 0.46", "27.3676, -328.705, -72.8387, 0.92", "27.6903, -329.038, -73.1111, 0.92", "30.1373, -331.314, -75.3683, 0.46", "31.6487, -332.721, -77.0843, 0.92", "31.995, -333.066, -77.5509, 0.92", "33.5904, -335.02, -80.2644, 0.46", "34.6366, -336.559, -82.6852, 0.46", "34.6502, -336.584, -82.722, 0.46", "35.8143, -339.281, -86.4225, 0.46", "35.979, -339.693, -86.9339, 0.46", "36.7599, -341.57, -88.7706, 0.46", "37.0072, -342.065, -89.1663, 0.46", "38.4745, -344.068, -90.7352, 0.92", "40.6721, -346.462, -92.7596, 0.46", "41.0225, -346.747, -93.0489, 0.92", "43.7947, -348.89, -95.2529, 0.46", "45.7158, -350.226, -96.6938, 0.46", "49.2641, -352.62, -99.3786, 0.46", "49.8815, -352.987, -99.8558, 0.46", "53.0203, -354.802, -102.255, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.35052, -312.204, -59.0399, 0.46", "9.90594, -315.627, -59.5246, 0.46", "11.0284, -321.998, -60.4107, 0.46", "11.1903, -322.867, -60.5272, 0.92", "11.4429, -324.243, -60.7062, 0.92", "12.47, -331.263, -61.582, 0.46", "12.7164, -333.421, -61.8443, 0.92", "13.1035, -337.69, -62.3293, 0.46", "13.2353, -339.864, -62.5602, 0.92", "13.2568, -340.42, -62.6188, 0.92", "13.2872, -347.616, -63.4226, 0.46", "13.1359, -350.52, -63.7499, 0.46", "13.0651, -351.216, -63.8346, 0.46", "12.7093, -354.045, -64.2104, 0.92", "12.6255, -354.739, -64.3021, 0.92", "12.0211, -360.483, -65.0647, 0.46", "11.9661, -361.033, -65.143, 0.46", "11.307, -367.446, -66.0878, 0.46", "11.2274, -368.138, -66.1948, 0.46", "10.5584, -372.974, -66.9767, 0.92", "10.4532, -373.663, -67.0776, 0.92", "9.71165, -378.016, -67.6629, 0.46", "9.55789, -378.699, -67.7443, 0.46", "8.75263, -381.579, -68.0063, 0.46", "8.60585, -382.115, -68.0508, 0.46", "7.37759, -386.308, -68.3878, 0.92", "7.18069, -386.982, -68.4355, 0.92", "5.37565, -393.089, -68.7693, 0.46", "2.96974, -401.403, -69.1977, 0.46", "2.37047, -403.519, -69.2962, 0.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "51.9004, -70.862, 6.88654, 0.92", "58.3615, -83.1146, 10.3971, 0.92", "66.4513, -93.956, 14.8311, 0.92", "72.9135, -106.411, 17.573, 0.92", "79.2221, -119.253, 17.9121, 0.92", "86.0341, -131.712, 16.2816, 0.92", "93.1745, -144.078, 16.8689, 0.92", "99.7714, -156.77, 16.8071, 0.92", "105.563, -169.784, 15.3609, 0.92", "110.77, -182.573, 11.625, 0.92", "117.826, -194.032, 6.93972, 0.92", "122.429, -205.917, 0.530705, 0.92", "128.082, -218.439, -3.41292, 0.92", "132.423, -231.966, -5.35778, 0.92", "138.255, -245.045, -5.18034, 0.92", "144.728, -257.664, -3.31774, 0.92", "150.604, -270.707, -3.93432, 0.92", "154.679, -284.469, -3.90939, 0.92", "161.518, -296.744, -6.48108, 0.92", "167.751, -309.482, -8.3532, 0.92", "174.422, -322.134, -8.42463, 0.92", "181.43, -334.534, -7.23214, 0.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "51.9004, -70.862, 6.88654, 0.46", "62.6406, -76.6257, 4.81909, 0.92", "73.9744, -81.3795, 3.69386, 0.92", "85.7618, -84.2382, 1.57135, 0.92", "97.2302, -88.7367, 0.908908, 0.92", "109.098, -91.8907, -0.0443454, 0.92", "121.16, -94.2331, -0.75666, 0.92", "132.871, -96.4426, -3.82644, 0.92", "144.788, -96.971, -6.81428, 0.92", "156.056, -97.3749, -11.7234, 0.92", "167.139, -97.101, -17.0416, 0.92", "177.911, -98.063, -22.8989, 0.92", "188.135, -98.1294, -29.7299, 0.92", "198.43, -98.457, -36.4474, 0.92", "207.987, -101.042, -43.7651, 0.92", "216.903, -105.292, -51.1536, 0.92", "226.166, -109.366, -58.2026, 0.92", "237.428, -110.882, -62.9142, 0.92", "248.029, -112.212, -69.0102, 0.92", "259.724, -113.652, -72.5402, 0.92", "271.556, -115.592, -75.3054, 0.92", "283.324, -115.288, -78.8583, 0.92", "295.124, -115.854, -82.2757, 0.92", "306.507, -115.763, -86.9231, 0.92", "318.396, -114.888, -89.9462, 0.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "211.375, -278.162, 98.41, 0.92", "213.703, -285.256, 100.608, 0.92", "215.67, -291.988, 103.942, 0.92", "218.815, -298.287, 107.184, 0.92", "222.492, -303.941, 110.957, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "211.375, -278.162, 98.41, 0.46", "218.692, -283.495, 100.941, 0.92", "225.748, -288.271, 104.887, 0.92", "233.337, -292.493, 108.418, 0.92", "241.163, -295.486, 112.569, 0.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.5494, 21.4667, 2.96961, 0.46", "-18.5974, 23.8081, 3.08671, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-15.5494, 21.4667, 2.96961, 0.46", "-14.8537, 22.1434, 3.72892, 0.46", "-13.8321, 22.8721, 4.78581, 0.92", "-13.2762, 23.2778, 5.28467, 0.46", "-12.5103, 23.8552, 5.94959, 0.92", "-12.2621, 24.0471, 6.14675, 0.92", "-11.2821, 24.837, 6.88508, 0.46", "-10.4704, 25.4175, 7.48573, 0.92", "-9.22756, 26.2234, 8.30447, 0.46", "-9.01647, 26.3697, 8.42244, 0.46", "-8.20813, 27.0493, 8.82804, 0.92", "-7.94965, 27.2796, 8.94501, 0.92", "-4.33578, 30.3231, 13.0727, 0.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-29.1049, 8.80342, 6.02701, 0.92", "-34.8252, 6.77414, 7.89874, 0.92", "-40.7309, 5.93724, 10.0412, 0.92", "-46.5763, 4.9098, 12.2697, 0.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-29.1049, 8.80342, 6.02701, 0.46", "-38.1783, 5.3253, 8.49547, 0.92", "-47.1161, 1.06076, 10.1607, 0.92", "-55.8101, -4.00655, 10.291, 0.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-46.4679, 40.6052, -23.5964, 0.46", "-47.6249, 42.329, -23.8749, 0.46", "-48.6714, 43.8268, -24.1683, 0.46", "-49.3086, 44.8198, -24.3413, 0.92", "-50.2794, 46.4307, -24.6501, 0.46", "-50.4921, 46.7968, -24.739, 0.46", "-51.2469, 48.2359, -25.1039, 0.46", "-51.4985, 48.7002, -25.2391, 0.46", "-52.3647, 50.0913, -25.6812, 0.92", "-53.533, 51.8127, -26.2574, 0.46", "-54.9726, 53.6595, -26.8644, 0.46", "-55.8522, 54.6871, -27.2071, 0.92", "-58.5965, 57.5236, -28.1244, 0.46", "-60.1279, 58.9795, -28.6095, 0.46", "-60.4447, 59.2549, -28.7036, 0.46", "-61.7961, 60.4088, -29.0366, 0.92", "-63.4863, 62.0329, -29.4725, 0.46", "-64.4988, 63.3856, -29.7862, 0.92", "-65.9115, 66.1561, -30.3398, 0.46", "-65.9179, 66.1736, -30.3429, 0.46", "-66.3721, 67.7421, -30.58, 0.92", "-67.164, 71.3567, -31.0893, 0.46", "-67.9672, 75.9169, -31.6661, 0.46", "-67.9718, 75.9445, -31.6693, 0.46", "-68.5311, 78.8739, -31.9888, 0.46", "-69.025, 81.0496, -32.2193, 0.92", "-69.9518, 84.0903, -32.4978, 0.46", "-69.9623, 84.1165, -32.4994, 0.46", "-70.7937, 85.7962, -32.5809, 0.92", "-72.0545, 88.2265, -32.6824, 0.46", "-72.3221, 88.7036, -32.6967, 0.46", "-74.6853, 92.8126, -32.7954, 0.46", "-74.8959, 93.1932, -32.7957, 0.46", "-75.9497, 95.1694, -32.8157, 0.92", "-77.3625, 97.8463, -32.8583, 0.46", "-77.714, 98.4509, -32.8809, 0.92", "-78.0114, 98.9079, -32.9153, 0.92", "-80.0727, 101.615, -33.2827, 0.46", "-81.6986, 103.303, -33.6139, 0.46", "-82.4106, 103.745, -33.7972, 0.92", "-85.1389, 104.537, -34.5452, 0.46", "-85.5464, 104.542, -34.6659, 0.46", "-86.5624, 104.391, -34.975, 0.46", "-88.7495, 103.849, -35.7103, 0.92", "-90.7743, 103.299, -36.4294, 0.46", "-91.1631, 103.218, -36.5799, 0.46", "-94.115, 102.947, -37.933, 0.92", "-96.1333, 103.026, -38.9871, 0.46", "-97.7301, 103.491, -39.999, 0.92", "-98.1047, 103.724, -40.3071, 0.92", "-99.6628, 105.188, -42.0514, 0.46", "-101.133, 107.062, -44.077, 0.46", "-101.169, 107.122, -44.1378, 0.46", "-102.517, 109.643, -46.7017, 0.46", "-103.654, 111.929, -49.0278, 0.46", "-104.683, 114.14, -51.2363, 1.38", "-105.602, 116.334, -53.3605, 0.46", "-105.611, 116.354, -53.3785, 0.46", "-106.207, 117.625, -54.414, 0.46", "-106.215, 117.639, -54.4232, 0.46", "-108.072, 120.427, -55.6913, 0.46", "-108.083, 120.441, -55.6955, 0.46", "-109.257, 121.871, -55.9725, 0.92", "-111.52, 124.688, -56.2107, 0.46", "-113.236, 126.853, -56.2215, 0.46", "-114.281, 128.186, -56.1454, 0.92", "-116.358, 130.8, -55.8167, 0.46", "-117.685, 132.516, -55.5333, 0.92", "-120.358, 136.153, -54.7903, 0.46", "-120.666, 136.603, -54.6768, 0.46", "-122.25, 138.906, -54.0417, 0.46", "-123.036, 140.036, -53.7437, 0.92", "-125.728, 143.794, -52.7573, 0.46", "-126.412, 144.719, -52.5156, 0.92", "-130.302, 149.86, -51.187, 0.46", "-133.78, 154.401, -50.0316, 0.46", "-136.028, 157.301, -49.3152, 0.46", "-136.45, 157.844, -49.1853, 0.92" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-46.4679, 40.6052, -23.5964, 0.46", "-46.2469, 45.6935, -24.4752, 0.46", "-46.1508, 47.7084, -24.7752, 0.46", "-46.1097, 48.8409, -24.9774, 0.92", "-46.0419, 51.7389, -25.5318, 0.46", "-45.9048, 55.205, -26.271, 0.46", "-45.8846, 55.6461, -26.3688, 0.46", "-45.5411, 60.6078, -27.5691, 0.46", "-45.3082, 63.4779, -28.2835, 0.46", "-45.2691, 63.9045, -28.3917, 0.46", "-44.9745, 67.1371, -29.2056, 0.46", "-44.9311, 67.6875, -29.3469, 0.46", "-44.5597, 71.1696, -30.2694, 0.46", "-44.4925, 71.5876, -30.3935, 0.46", "-44.3438, 72.2839, -30.5384, 0.92" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-7.77506, -28.7929, -26.1891, 0.46", "-6.90166, -27.9513, -26.8644, 0.46", "-5.83326, -26.9219, -27.6904, 0.92", "-4.47484, -25.6129, -28.7407, 0.46", "-3.71395, -24.8798, -29.329, 0.46", "-2.88824, -24.0841, -29.9674, 0.92" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-7.77506, -28.7929, -26.1891, 0.46", "-9.74203, -29.2748, -28.3037, 0.46", "-11.2224, -29.665, -29.7909, 0.46", "-12.8045, -30.2675, -31.1698, 0.92", "-14.1561, -30.8508, -32.1941, 0.46", "-14.5828, -31.0656, -32.4838, 0.46", "-16.108, -31.9002, -33.4526, 0.46", "-18.0238, -32.9514, -34.5541, 0.92", "-20.3768, -34.409, -35.7405, 0.46", "-21.5332, -35.1242, -36.2318, 0.92", "-24.2015, -36.6114, -37.2542, 0.46", "-24.8037, -36.9215, -37.4789, 1.38", "-26.721, -37.7755, -38.1519, 0.46", "-26.7381, -37.7822, -38.1575, 0.46", "-29.6037, -38.7946, -39.0594, 0.92", "-31.6501, -39.4394, -39.6619, 0.46", "-33.2465, -40.034, -40.0679, 0.46", "-33.75, -40.2438, -40.1879, 0.46", "-35.3793, -41.0588, -40.5158, 0.92", "-38.8271, -42.9814, -41.1661, 0.46", "-40.8004, -44.2372, -41.5008, 1.38", "-44.1277, -46.6092, -41.9775, 0.46", "-44.5687, -46.9501, -42.0424, 0.46", "-46.4531, -48.4873, -42.3604, 0.92", "-47.1426, -49.0909, -42.4811, 1.38", "-47.4666, -49.3791, -42.5312, 1.38", "-50.2524, -51.9644, -42.9729, 0.46", "-50.9143, -52.5373, -43.0677, 0.46", "-51.8968, -53.4155, -43.2282, 1.38", "-55.2685, -56.4305, -43.7918, 0.46", "-56.671, -57.6831, -44.0469, 1.38", "-59.2684, -59.8117, -44.639, 0.46", "-60.7192, -60.9396, -44.9686, 1.38", "-62.5932, -62.3807, -45.4138, 0.46", "-63.7064, -63.2501, -45.7385, 0.92", "-65.3626, -64.4653, -46.3856, 0.46", "-67.7417, -66.1619, -47.4732, 0.46" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "123.941, -224.955, -101.435, 0.46", "124.997, -229.026, -100.956, 0.46", "125.659, -231.305, -100.751, 0.46", "126.129, -232.78, -100.644, 0.92", "126.988, -235.237, -100.501, 0.46", "127.481, -236.453, -100.463, 0.92", "129.09, -240.068, -100.414, 0.46", "129.683, -241.229, -100.45, 0.92", "130.291, -242.39, -100.491, 0.46", "131.238, -244.111, -100.558, 0.92", "133.236, -247.805, -100.699, 0.46", "134.135, -249.547, -100.76, 0.92", "136.501, -254.223, -100.916, 0.46", "137.939, -257.101, -100.98, 0.46", "138.925, -259.11, -101.007, 0.92", "140.506, -262.439, -101.017, 0.46", "141.949, -265.616, -100.991, 0.46", "142.116, -265.987, -100.988, 0.92", "143.809, -269.6, -100.953, 0.46", "143.817, -269.615, -100.952, 0.46", "144.001, -269.977, -100.933, 0.92" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "123.941, -224.955, -101.435, 0.46", "126.374, -227.302, -102.956, 0.46", "127.923, -228.713, -103.866, 0.46", "129.174, -229.99, -104.593, 0.46", "129.44, -230.291, -104.739, 0.46", "131.229, -232.366, -105.663, 0.92", "131.494, -232.677, -105.79, 0.92", "132.738, -234.161, -106.374, 0.46", "134.681, -236.418, -107.175, 0.46", "137.098, -239.214, -108.064, 0.46", "137.75, -239.956, -108.288, 0.92", "140.412, -242.996, -109.129, 0.46", "142.037, -244.798, -109.622, 0.46", "143.538, -246.416, -110.058, 0.46", "144.679, -247.597, -110.373, 0.92", "147.029, -249.987, -110.992, 0.46", "148.207, -251.122, -111.3, 0.92", "150.468, -253.192, -111.876, 0.46", "151.207, -253.831, -112.077, 1.38", "152.817, -255.188, -112.569, 0.46", "154.162, -256.272, -113.003, 0.92", "156.266, -257.839, -113.71, 0.46", "158.955, -259.697, -114.613, 0.46", "161.439, -261.285, -115.45, 0.46", "162.903, -262.169, -115.976, 0.46", "164.269, -262.932, -116.517, 0.92", "167.321, -264.647, -117.787, 0.46", "168.363, -265.23, -118.232, 0.92", "170.0, -266.041, -118.95, 0.46", "172.319, -267.094, -119.976, 0.46", "174.128, -267.807, -120.824, 0.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "181.43, -334.534, -7.23214, 0.92", "185.594, -344.104, -7.23571, 0.92", "189.488, -353.687, -5.86516, 0.92", "194.774, -362.621, -5.12253, 0.92", "200.932, -370.984, -5.23133, 0.92", "205.664, -380.173, -3.92742, 0.92" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "181.43, -334.534, -7.23214, 0.46", "186.092, -343.427, -7.99376, 0.92", "189.689, -352.697, -9.69699, 0.92", "192.258, -362.198, -11.9617, 0.92", "195.658, -371.37, -14.4178, 0.92", "199.496, -380.097, -17.6515, 0.92" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "318.396, -114.888, -89.9462, 0.92", "325.759, -115.901, -93.384, 0.92", "333.725, -116.96, -94.9448, 0.92", "341.7, -116.698, -96.7531, 0.92", "349.571, -116.404, -98.97, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "318.396, -114.888, -89.9462, 0.46", "327.948, -116.439, -91.417, 0.92", "337.19, -119.295, -92.9908, 0.92", "346.468, -120.979, -95.637, 0.92", "355.142, -122.667, -99.8773, 0.92", "363.762, -122.963, -104.51, 0.92", "372.527, -121.438, -108.58, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-18.5974, 23.8081, 3.08671, 0.92", "-19.1546, 26.8645, 2.31079, 0.92", "-19.5404, 29.2384, 1.69384, 1.38", "-20.5311, 35.2274, 0.0416804, 0.92", "-20.88, 37.5792, -0.673616, 1.38", "-21.4661, 42.2409, -2.19957, 0.92", "-21.901, 46.3471, -3.63588, 0.92", "-21.9414, 46.9109, -3.86028, 0.92", "-22.0958, 49.9876, -5.25223, 0.92", "-22.168, 52.2575, -6.39278, 0.92", "-22.2996, 56.0676, -8.40517, 1.38", "-22.4231, 58.8738, -9.92669, 0.92", "-22.5998, 62.283, -11.7529, 1.38", "-22.8539, 66.9264, -14.0341, 0.92", "-22.9836, 69.2343, -15.0554, 0.92", "-23.0283, 69.8, -15.2741, 0.92", "-23.1295, 70.9396, -15.6876, 1.38", "-23.447, 74.4467, -16.7996, 0.92", "-23.6607, 77.1768, -17.4775, 0.92", "-23.8168, 79.5855, -17.8708, 1.38", "-23.9691, 81.994, -18.1846, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-18.5974, 23.8081, 3.08671, 0.46", "-21.5165, 21.6735, 3.38032, 0.46", "-22.5887, 20.7715, 3.45547, 0.92", "-22.9337, 20.4812, 3.47966, 0.92", "-25.82, 18.053, 3.68196, 0.46", "-28.2728, 15.9895, 3.85388, 1.38", "-29.9706, 14.5611, 3.97288, 0.46", "-32.4034, 12.8281, 4.00271, 1.38", "-40.4705, 7.28714, 4.39547, 1.38" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.33578, 30.3231, 13.0727, 0.92", "2.70618, 35.9147, 18.4505, 0.92", "8.13369, 42.7868, 24.2717, 0.92", "13.8322, 48.4639, 30.9902, 0.92", "20.2224, 53.7761, 37.3606, 0.92", "27.3992, 59.1666, 42.7552, 0.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.33578, 30.3231, 13.0727, 0.46", "-0.459547, 33.402, 17.7792, 0.92", "2.94184, 36.6792, 22.7196, 0.92", "6.01881, 40.4304, 27.5511, 0.92", "10.1906, 43.1178, 32.2324, 0.92", "14.4774, 45.1335, 37.1246, 0.92", "18.7391, 48.4048, 41.3502, 0.92", "22.9356, 52.2678, 45.1448, 0.92", "26.5521, 55.815, 49.7437, 0.92" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-46.5763, 4.9098, 12.2697, 0.92", "-55.6962, 2.85393, 15.3388, 0.92", "-64.8038, -0.281643, 17.4124, 0.92", "-73.9068, -2.41906, 20.4788, 0.92", "-83.3621, -3.583, 22.906, 0.92", "-92.4347, -3.22101, 26.6632, 0.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-46.5763, 4.9098, 12.2697, 0.46", "-55.4676, 2.88546, 15.4128, 0.92", "-64.5454, 0.226521, 17.3282, 0.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-55.8101, -4.00655, 10.291, 0.92", "-64.1226, -7.71326, 13.8664, 0.92", "-71.5844, -11.8036, 18.7244, 0.92", "-80.028, -15.346, 22.1435, 0.92", "-89.0646, -18.1785, 24.4837, 0.92", "-97.5486, -21.9181, 27.5822, 0.92", "-105.491, -25.0649, 32.3347, 0.92", "-114.11, -28.1649, 35.7229, 0.92", "-123.268, -29.8683, 38.5782, 0.92", "-132.466, -32.7586, 40.0374, 0.92", "-141.963, -34.9115, 40.1243, 0.92", "-151.373, -37.35, 39.5392, 0.92", "-160.588, -39.6094, 37.3665, 0.92", "-169.927, -41.2354, 35.1638, 0.92", "-179.484, -42.1371, 33.567, 0.92", "-188.811, -42.489, 30.8046, 0.92", "-197.716, -42.6108, 26.8659, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-55.8101, -4.00655, 10.291, 0.46", "-66.8797, -9.52389, 12.7609, 0.92", "-76.4227, -16.0741, 17.8919, 0.92", "-86.9402, -22.3479, 20.9986, 0.92", "-97.4732, -28.1932, 24.7954, 0.92", "-108.523, -34.0196, 26.5383, 0.92", "-118.469, -41.8281, 26.8054, 0.92", "-129.277, -48.3326, 26.8458, 0.92", "-139.863, -54.4618, 29.9947, 0.92", "-148.538, -61.5298, 35.9714, 0.92", "-155.499, -71.3698, 40.154, 0.92", "-161.489, -82.3268, 42.8823, 0.92", "-166.346, -94.0299, 44.6992, 0.92", "-170.772, -105.731, 47.4779, 0.92", "-176.807, -116.286, 51.4291, 0.92", "-180.693, -127.022, 57.2643, 0.92", "-183.292, -137.615, 64.0267, 0.92", "-183.819, -147.281, 72.4363, 0.92", "-181.826, -155.294, 82.192, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-67.7417, -66.1619, -47.4732, 0.46", "-70.9889, -69.0243, -47.3631, 0.46", "-72.1702, -70.141, -47.3908, 0.92", "-76.5431, -74.3607, -47.6163, 0.46", "-76.9852, -74.8163, -47.6474, 0.46", "-77.814, -75.6704, -47.7058, 0.92", "-78.3856, -76.2594, -47.746, 0.92", "-81.0476, -79.1537, -48.1339, 0.46", "-81.3773, -79.5296, -48.2008, 0.46", "-82.439, -81.1772, -48.5988, 0.92" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-67.7417, -66.1619, -47.4732, 0.46", "-68.6442, -65.9189, -48.057, 0.46", "-69.0742, -65.8938, -48.2541, 0.46", "-70.0839, -65.9088, -48.6893, 0.92", "-70.4233, -65.9145, -48.8346, 0.92", "-72.0435, -66.0395, -49.6118, 0.46", "-72.3646, -66.0789, -49.7897, 0.46", "-75.9464, -66.6693, -51.9169, 0.46", "-76.7678, -66.8759, -52.4185, 0.92", "-77.1562, -66.9907, -52.6643, 0.92", "-79.1019, -67.7177, -53.8976, 0.46", "-80.4066, -68.3149, -54.727, 0.92", "-80.8671, -68.5536, -55.0221, 0.92", "-83.1383, -69.9045, -56.5423, 0.46", "-83.5885, -70.1744, -56.8275, 0.46", "-85.1714, -71.1218, -57.7369, 0.46", "-85.4468, -71.3194, -57.8879, 0.46", "-86.7088, -72.5226, -58.7085, 0.92", "-86.9926, -72.8349, -58.9308, 0.92", "-88.185, -74.2527, -60.0245, 0.46", "-88.3915, -74.5013, -60.2086, 0.46", "-90.0332, -76.4589, -61.5762, 0.92", "-91.7741, -78.4518, -62.7448, 0.46", "-92.1308, -78.8686, -62.9612, 0.46", "-92.5932, -79.3938, -63.2185, 0.92", "-94.4909, -81.5082, -64.1692, 0.46", "-95.2651, -82.3528, -64.5215, 0.92", "-97.6789, -84.8338, -65.4954, 0.46", "-99.6868, -87.0709, -66.3037, 0.46", "-100.917, -88.5016, -66.8308, 0.92", "-101.957, -89.741, -67.3051, 0.46", "-102.685, -90.6228, -67.6841, 0.92", "-102.952, -90.9714, -67.8541, 0.92", "-104.156, -92.725, -68.8102, 0.46", "-104.869, -93.9225, -69.4786, 0.92", "-105.021, -94.2156, -69.6524, 0.92", "-105.507, -95.4041, -70.3923, 0.46", "-105.968, -96.7516, -71.2167, 0.92", "-106.053, -97.0639, -71.4037, 0.92", "-106.327, -98.3312, -72.1702, 0.46", "-106.357, -98.6553, -72.3544, 0.46", "-106.431, -99.7252, -72.9087, 0.92", "-106.532, -101.345, -73.6919, 0.46", "-106.715, -102.61, -74.2415, 0.46", "-106.775, -102.953, -74.3825, 0.46", "-107.043, -104.241, -74.8245, 0.46", "-107.301, -105.168, -75.1518, 0.46", "-107.455, -105.594, -75.2887, 0.46", "-109.143, -108.912, -76.3032, 0.46", "-109.388, -109.298, -76.4196, 0.46", "-110.197, -110.4, -76.7825, 0.92", "-111.363, -111.749, -77.2597, 0.46", "-112.332, -112.771, -77.6606, 0.92", "-114.644, -115.063, -78.5508, 0.46", "-115.088, -115.469, -78.7147, 0.92", "-115.512, -115.87, -78.8598, 0.92", "-117.354, -117.563, -79.4705, 0.46", "-117.689, -117.88, -79.564, 0.46", "-118.422, -118.547, -79.7535, 1.38", "-120.183, -120.256, -80.2065, 0.46", "-121.157, -121.303, -80.5216, 0.92", "-122.63, -122.998, -81.0669, 0.46", "-123.479, -124.132, -81.4462, 0.92", "-123.675, -124.424, -81.5457, 0.92", "-124.672, -126.346, -82.1944, 0.46", "-125.305, -128.167, -82.7438, 0.46", "-125.375, -128.527, -82.8293, 0.46", "-125.627, -131.061, -83.3121, 0.92", "-125.646, -131.43, -83.3827, 0.92", "-125.713, -134.008, -83.8304, 0.46", "-125.748, -134.95, -83.9585, 0.92", "-125.958, -137.882, -84.3255, 0.92", "-126.024, -138.346, -84.4039, 0.92", "-126.458, -140.018, -84.7959, 0.46", "-126.576, -140.36, -84.8964, 0.46", "-127.219, -141.699, -85.4083, 0.92", "-127.388, -142.111, -85.5673, 0.92", "-128.192, -144.266, -86.3968, 0.46", "-128.343, -144.687, -86.549, 0.46", "-129.619, -148.427, -87.7959, 0.46", "-129.751, -148.858, -87.9375, 0.46", "-130.831, -153.428, -89.3929, 0.46", "-130.857, -153.559, -89.4316, 0.46" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-23.9691, 81.994, -18.1846, 0.92", "-23.8782, 84.7206, -19.0025, 0.92", "-23.7492, 88.5876, -20.1624, 0.92", "-23.6892, 90.3892, -20.7029, 0.92", "-23.6161, 92.5798, -21.36, 1.38", "-23.4699, 96.964, -22.6751, 0.92", "-23.4141, 98.6378, -23.1772, 1.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-23.9691, 81.994, -18.1846, 0.46", "-24.6846, 83.7101, -19.1246, 0.46", "-24.8774, 84.1699, -19.3731, 0.46", "-24.8774, 84.1699, -19.3731, 0.92", "-26.0246, 87.2642, -20.9013, 0.46", "-26.0339, 87.2889, -20.9129, 0.46", "-26.6106, 88.8243, -21.5544, 0.92", "-26.7708, 89.2043, -21.6856, 0.92", "-27.5895, 91.2305, -22.3046, 0.46", "-27.7426, 91.6309, -22.4155, 0.46", "-28.1712, 92.7238, -22.6776, 1.38", "-29.2296, 95.4006, -23.2974, 0.46", "-30.0584, 97.4686, -23.7497, 0.46", "-31.5004, 101.14, -24.5477, 0.46", "-32.3354, 103.24, -24.9923, 0.46", "-33.0656, 105.207, -25.4226, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "26.5521, 55.815, 49.7437, 0.92", "33.155, 61.3821, 58.0973, 0.92", "37.8376, 67.3305, 67.437, 0.92", "40.8106, 71.9265, 78.1051, 0.92", "42.2079, 77.6521, 88.5727, 0.92", "45.176, 82.0826, 99.3084, 0.92", "48.9468, 86.1101, 109.943, 0.92", "50.2329, 89.6514, 121.306, 0.92", "52.2388, 91.863, 132.882, 0.92", "53.9447, 95.4625, 144.171, 0.92", "57.5263, 100.496, 154.459, 0.92", "62.3546, 104.251, 164.757, 0.92", "66.7832, 108.13, 175.189, 0.92", "72.1107, 110.863, 185.545, 0.92", "79.513, 113.395, 194.594, 0.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "26.5521, 55.815, 49.7437, 0.46", "30.3008, 58.8617, 53.8765, 0.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-92.4347, -3.22101, 26.6632, 0.92", "-101.928, -4.96076, 29.7402, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-92.4347, -3.22101, 26.6632, 0.46", "-100.763, -4.71465, 29.0102, 0.92", "-108.761, -4.92141, 32.6107, 0.92", "-116.879, -6.42487, 35.6032, 0.92", "-124.524, -7.88628, 39.6697, 0.92", "-131.77, -10.1883, 44.0857, 0.92", "-139.367, -11.8596, 48.1676, 0.92", "-146.9, -14.9108, 51.5516, 0.92", "-154.385, -18.7337, 54.2164, 0.92", "-162.007, -20.7098, 58.1177, 0.92", "-169.616, -21.8815, 62.3388, 0.92", "-177.182, -22.3961, 66.7542, 0.92", "-185.215, -24.513, 69.6199, 0.92", "-193.257, -27.2852, 71.8625, 0.92", "-201.608, -28.4422, 74.3073, 0.92" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_40", "dend_35", "dend_24", "dend_21", "dend_0", "dend_49", "dend_48", "dend_42", "dend_41", "dend_39", "dend_36", "dend_28", "dend_25", "dend_23", "dend_22", "dend_10", "dend_1", "dend_55", "dend_50", "dend_46", "dend_43", "dend_38", "dend_37", "dend_32", "dend_29", "dend_27", "dend_26", "dend_16", "dend_11", "dend_5", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_44", "dend_34", "dend_33", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_53", "dend_52", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_NBC_a104961d30_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.45000007052683877)
    connect dend_40(0), soma_0(0.45000007052683877)
    connect dend_35(0), soma_0(0.45000007052683877)
    connect dend_24(0), soma_0(0.45000007052683877)
    connect dend_21(0), soma_0(0.45000007052683877)
    connect dend_0(0), soma_0(0.45000007052683877)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.36735, -8.08849, 0.0, 2.03688 ) }
    soma_0 { pt3dadd( 4.94549, -7.33368, 0.0, 3.52963 ) }
    soma_0 { pt3dadd( 4.52363, -6.57887, 0.0, 6.0021 ) }
    soma_0 { pt3dadd( 4.10177, -5.82406, 0.0, 7.56762 ) }
    soma_0 { pt3dadd( 3.67992, -5.06925, 0.0, 9.13193 ) }
    soma_0 { pt3dadd( 3.25806, -4.31444, 0.0, 10.2542 ) }
    soma_0 { pt3dadd( 2.8362, -3.55963, 0.0, 11.222 ) }
    soma_0 { pt3dadd( 2.41434, -2.80482, 0.0, 11.981 ) }
    soma_0 { pt3dadd( 1.99249, -2.05001, 0.0, 12.7132 ) }
    soma_0 { pt3dadd( 1.57063, -1.2952, 0.0, 13.4454 ) }
    soma_0 { pt3dadd( 1.14877, -0.540387, 0.0, 14.1776 ) }
    soma_0 { pt3dadd( 0.726915, 0.214423, 0.0, 14.4912 ) }
    soma_0 { pt3dadd( 0.305057, 0.969233, 0.0, 13.9479 ) }
    soma_0 { pt3dadd( -0.1168, 1.72404, 0.0, 13.0659 ) }
    soma_0 { pt3dadd( -0.538657, 2.47885, 0.0, 12.184 ) }
    soma_0 { pt3dadd( -0.960515, 3.23366, 0.0, 11.2453 ) }
    soma_0 { pt3dadd( -1.38237, 3.98847, 0.0, 10.0927 ) }
    soma_0 { pt3dadd( -1.80423, 4.74328, 0.0, 8.93171 ) }
    soma_0 { pt3dadd( -2.22609, 5.49809, 0.0, 7.05094 ) }
    soma_0 { pt3dadd( -2.64794, 6.2529, 0.0, 4.33066 ) }
    soma_0 { pt3dadd( -3.0698, 7.00771, 0.0, 2.48073 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.730264, 0.703278, -11.45, 0.92 ) }
    dend_47 { pt3dadd( -0.730264, 0.703278, -11.45, 0.92 ) }
    dend_47 { pt3dadd( -2.56673, 2.13959, -12.0469, 0.92 ) }
    dend_47 { pt3dadd( -4.02591, 3.28082, -12.5212, 1.83 ) }
    dend_47 { pt3dadd( -5.37775, 4.33809, -12.9606, 0.92 ) }
    dend_47 { pt3dadd( -6.15006, 4.94212, -13.2116, 0.92 ) }
    dend_47 { pt3dadd( -7.77219, 6.21078, -13.7389, 0.92 ) }
    dend_47 { pt3dadd( -8.65096, 6.87216, -14.0197, 0.92 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 5.04974, -5.72347, -8.55, 0.92 ) }
    dend_40 { pt3dadd( 5.04974, -5.72347, -8.55, 0.92 ) }
    dend_40 { pt3dadd( 6.69754, -7.52908, -8.80962, 0.92 ) }
    dend_40 { pt3dadd( 8.35021, -9.61357, -9.20918, 1.83 ) }
    dend_40 { pt3dadd( 9.25245, -10.8104, -9.46787, 0.92 ) }
    dend_40 { pt3dadd( 9.46745, -11.1288, -9.54514, 0.92 ) }
    dend_40 { pt3dadd( 10.4746, -13.0262, -10.0323, 0.92 ) }
    dend_40 { pt3dadd( 10.8081, -13.8517, -10.2723, 0.92 ) }
    dend_40 { pt3dadd( 11.2031, -15.1948, -10.7613, 1.38 ) }
    dend_40 { pt3dadd( 11.735, -16.9275, -11.503, 0.46 ) }
    dend_40 { pt3dadd( 12.473, -18.7318, -12.4342, 1.83 ) }
    dend_40 { pt3dadd( 13.4588, -20.7224, -13.6139, 0.46 ) }
    dend_40 { pt3dadd( 13.9249, -21.4432, -14.16, 1.38 ) }
    dend_40 { pt3dadd( 14.6748, -22.5102, -15.1462, 0.46 ) }
    dend_40 { pt3dadd( 15.6136, -23.8475, -16.7698, 0.46 ) }
    dend_40 { pt3dadd( 16.4329, -24.8844, -18.4449, 1.38 ) }
    dend_40 { pt3dadd( 16.5595, -25.0011, -18.699, 1.38 ) }
    dend_40 { pt3dadd( 17.3426, -25.5211, -20.1797, 0.46 ) }
    dend_40 { pt3dadd( 17.9872, -26.001, -21.4938, 0.92 ) }
    dend_40 { pt3dadd( 18.651, -26.7501, -23.0992, 0.46 ) }
    dend_40 { pt3dadd( 18.75, -26.95, -23.4171, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 50/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 2.71974, -6.86123, -5.05, 0.92 ) }
    dend_35 { pt3dadd( 2.59923, -7.37536, -5.04164, 0.92 ) }
    dend_35 { pt3dadd( 0.998435, -14.6197, -5.08676, 0.92 ) }
    dend_35 { pt3dadd( 0.355826, -17.5038, -5.13252, 1.83 ) }
    dend_35 { pt3dadd( -0.835802, -22.9995, -5.30528, 0.92 ) }
    dend_35 { pt3dadd( -1.68969, -27.0455, -5.49961, 0.92 ) }
    dend_35 { pt3dadd( -2.1301, -29.0055, -5.6187, 1.83 ) }
    dend_35 { pt3dadd( -3.28471, -33.614, -6.02584, 0.92 ) }
    dend_35 { pt3dadd( -3.42864, -34.1173, -6.0906, 0.92 ) }
    dend_35 { pt3dadd( -4.20887, -36.7452, -6.52319, 1.38 ) }
    dend_35 { pt3dadd( -5.169, -39.9858, -7.13867, 0.46 ) }
    dend_35 { pt3dadd( -5.94336, -42.7264, -7.74681, 1.38 ) }
    dend_35 { pt3dadd( -6.73507, -45.5227, -8.41074, 0.46 ) }
    dend_35 { pt3dadd( -7.0727, -46.7718, -8.72949, 0.46 ) }
    dend_35 { pt3dadd( -8.05787, -50.5685, -9.76948, 0.92 ) }
    dend_35 { pt3dadd( -8.73403, -53.2562, -10.5263, 1.83 ) }
    dend_35 { pt3dadd( -9.45984, -56.5838, -11.512, 0.92 ) }
    dend_35 { pt3dadd( -9.53745, -57.0823, -11.6659, 0.92 ) }
    dend_35 { pt3dadd( -9.92962, -60.4969, -12.7568, 0.92 ) }
    dend_35 { pt3dadd( -10.1797, -62.3218, -13.3892, 0.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.82973, -8.12197, -2.05, 0.46 ) }
    dend_24 { pt3dadd( 7.1276, -8.67022, -2.03739, 0.46 ) }
    dend_24 { pt3dadd( 8.91218, -11.9076, -1.98469, 0.92 ) }
    dend_24 { pt3dadd( 9.15709, -12.3371, -1.96707, 0.92 ) }
    dend_24 { pt3dadd( 10.36, -14.4007, -1.81987, 0.46 ) }
    dend_24 { pt3dadd( 12.1128, -17.3871, -1.51815, 1.38 ) }
    dend_24 { pt3dadd( 14.0235, -20.5325, -1.16018, 0.46 ) }
    dend_24 { pt3dadd( 15.9895, -23.6359, -0.746757, 0.92 ) }
    dend_24 { pt3dadd( 17.8101, -26.3464, -0.319289, 0.46 ) }
    dend_24 { pt3dadd( 20.395, -30.0566, 0.351126, 1.83 ) }
    dend_24 { pt3dadd( 22.1666, -32.5151, 0.8405, 0.46 ) }
    dend_24 { pt3dadd( 23.5258, -34.3625, 1.25724, 1.38 ) }
    dend_24 { pt3dadd( 25.6319, -37.1515, 1.94972, 0.46 ) }
    dend_24 { pt3dadd( 27.7597, -39.9209, 2.66771, 0.46 ) }
    dend_24 { pt3dadd( 29.1299, -41.6868, 3.11746, 1.38 ) }
    dend_24 { pt3dadd( 32.0176, -45.3531, 4.04576, 0.92 ) }
    dend_24 { pt3dadd( 33.3712, -47.0896, 4.47509, 0.92 ) }
    dend_24 { pt3dadd( 34.2983, -48.3614, 4.80201, 2.29 ) }
    dend_24 { pt3dadd( 41.0083, -56.7146, 4.75499, 2.29 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.12027, -4.36022, -1.17, 0.92 ) }
    dend_21 { pt3dadd( -4.12027, -4.36022, -1.17, 0.92 ) }
    dend_21 { pt3dadd( -7.29929, -6.96765, -1.27601, 0.92 ) }
    dend_21 { pt3dadd( -9.05595, -8.47005, -1.24759, 0.92 ) }
    dend_21 { pt3dadd( -10.0984, -9.42108, -1.1652, 1.38 ) }
    dend_21 { pt3dadd( -10.4971, -9.79734, -1.11225, 1.38 ) }
    dend_21 { pt3dadd( -15.4544, -14.5439, -0.375515, 0.92 ) }
    dend_21 { pt3dadd( -17.3161, -16.3664, -0.0399757, 0.92 ) }
    dend_21 { pt3dadd( -18.8341, -17.8925, 0.299512, 1.38 ) }
    dend_21 { pt3dadd( -21.2537, -20.3225, 0.947029, 0.92 ) }
    dend_21 { pt3dadd( -23.0489, -22.1224, 1.46242, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -24.2715, -23.3576, 1.81659, 1.38 ) }
    dend_21 { pt3dadd( -24.5685, -23.6516, 1.90609, 1.38 ) }
    dend_21 { pt3dadd( -27.4433, -26.5641, 2.67266, 0.92 ) }
    dend_21 { pt3dadd( -29.7262, -28.9451, 3.16771, 0.92 ) }
    dend_21 { pt3dadd( -31.6215, -31.0021, 3.47561, 1.38 ) }
    dend_21 { pt3dadd( -33.7829, -33.4264, 3.77399, 0.92 ) }
    dend_21 { pt3dadd( -34.1388, -33.8463, 3.81926, 0.92 ) }
    dend_21 { pt3dadd( -35.9887, -36.0876, 4.00847, 1.83 ) }
    dend_21 { pt3dadd( -39.4786, -40.8654, 4.2045, 0.92 ) }
    dend_21 { pt3dadd( -41.9244, -44.343, 4.24514, 0.92 ) }
    dend_21 { pt3dadd( -42.2354, -44.8011, 4.2447, 0.92 ) }
    dend_21 { pt3dadd( -43.5621, -46.7718, 4.24255, 1.83 ) }
    dend_21 { pt3dadd( -43.9532, -47.3626, 4.24186, 1.83 ) }
    dend_21 { pt3dadd( -48.4478, -54.2251, 4.23208, 0.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.92026, 6.96602, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -4.27608, 7.51256, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -4.72469, 8.20161, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -7.58918, 12.6014, 0.0, 0.92 ) }
    dend_0 { pt3dadd( -9.67451, 15.8044, 0.0, 0.92 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 19/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.0698, 7.00771, 0.0, 0.92 ) }
    axon_0 { pt3dadd( -10.3878, 20.1015, 0.0, 0.92 ) }
    axon_0 { pt3dadd( -17.7058, 33.1952, 0.0, 0.92 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 22/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -8.65096, 6.87216, -14.0197, 0.92 ) }
    dend_49 { pt3dadd( -11.6964, 2.6978, -15.7787, 0.92 ) }
    dend_49 { pt3dadd( -13.009, 0.898685, -16.5369, 0.92 ) }
    dend_49 { pt3dadd( -14.5941, -1.27397, -17.4524, 1.38 ) }
    dend_49 { pt3dadd( -16.8656, -4.38751, -18.7644, 0.46 ) }
    dend_49 { pt3dadd( -18.863, -7.12522, -19.918, 0.46 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 28/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.65096, 6.87216, -14.0197, 0.46 ) }
    dend_48 { pt3dadd( -6.76269, 10.5351, -13.6767, 0.46 ) }
    dend_48 { pt3dadd( -6.60149, 10.8867, -13.6499, 0.46 ) }
    dend_48 { pt3dadd( -5.90875, 12.4414, -13.5644, 0.92 ) }
    dend_48 { pt3dadd( -5.72355, 12.9057, -13.5459, 0.92 ) }
    dend_48 { pt3dadd( -4.63915, 15.6643, -13.5387, 0.92 ) }
    dend_48 { pt3dadd( -4.413, 16.2628, -13.5596, 0.92 ) }
    dend_48 { pt3dadd( -3.92484, 17.7393, -13.685, 1.38 ) }
    dend_48 { pt3dadd( -3.53202, 18.9605, -13.8017, 0.46 ) }
    dend_48 { pt3dadd( -2.95989, 20.8782, -14.01, 1.38 ) }
    dend_48 { pt3dadd( -2.12104, 23.8091, -14.391, 0.46 ) }
    dend_48 { pt3dadd( -1.6208, 25.8858, -14.6987, 0.46 ) }
    dend_48 { pt3dadd( -1.50725, 26.3686, -14.7703, 0.46 ) }
    dend_48 { pt3dadd( -1.08927, 28.354, -15.0685, 0.92 ) }
    dend_48 { pt3dadd( -1.02592, 28.7424, -15.1263, 0.92 ) }
    dend_48 { pt3dadd( -0.746603, 31.0001, -15.4472, 0.46 ) }
    dend_48 { pt3dadd( -0.495414, 34.5074, -15.8833, 0.46 ) }
    dend_48 { pt3dadd( -0.429015, 36.1991, -16.0753, 1.38 ) }
    dend_48 { pt3dadd( -0.418178, 36.5946, -16.1201, 1.38 ) }
    dend_48 { pt3dadd( -0.41324, 39.1741, -16.3995, 0.46 ) }
    dend_48 { pt3dadd( -0.468388, 40.6798, -16.5565, 0.92 ) }
    dend_48 { pt3dadd( -0.511986, 41.1772, -16.6084, 0.92 ) }
    dend_48 { pt3dadd( -0.789755, 43.7153, -16.8954, 0.46 ) }
    dend_48 { pt3dadd( -0.836738, 44.108, -16.9415, 0.46 ) }
    dend_48 { pt3dadd( -0.968294, 45.6471, -17.1535, 1.38 ) }
    dend_48 { pt3dadd( -1.16874, 48.7979, -17.6372, 0.46 ) }
    dend_48 { pt3dadd( -1.31366, 51.3372, -18.0682, 0.46 ) }
    dend_48 { pt3dadd( -1.37266, 52.8099, -18.3722, 0.92 ) }
    dend_48 { pt3dadd( -1.38525, 53.297, -18.4908, 0.92 ) }
    dend_48 { pt3dadd( -1.36121, 55.6872, -19.1654, 0.46 ) }
    dend_48 { pt3dadd( -1.32367, 56.1606, -19.3241, 0.46 ) }
    dend_48 { pt3dadd( -1.23958, 56.7442, -19.5543, 0.92 ) }
    dend_48 { pt3dadd( -1.00903, 58.0112, -20.1453, 0.46 ) }
    dend_48 { pt3dadd( -0.915137, 58.5651, -20.4478, 0.46 ) }
    dend_48 { pt3dadd( -0.711601, 60.3143, -21.4207, 0.46 ) }
    dend_48 { pt3dadd( -0.707343, 60.7622, -21.642, 0.46 ) }
    dend_48 { pt3dadd( -0.74328, 61.6086, -22.0026, 0.92 ) }
    dend_48 { pt3dadd( -0.782286, 62.1853, -22.2473, 0.92 ) }
    dend_48 { pt3dadd( -1.19841, 65.0127, -23.3508, 0.46 ) }
    dend_48 { pt3dadd( -1.31954, 65.589, -23.5998, 0.46 ) }
    dend_48 { pt3dadd( -2.04937, 68.391, -24.8591, 0.46 ) }
    dend_48 { pt3dadd( -2.41178, 69.7593, -25.5138, 0.92 ) }
    dend_48 { pt3dadd( -2.95285, 71.7482, -26.4919, 0.46 ) }
    dend_48 { pt3dadd( -3.47747, 73.6419, -27.4458, 0.92 ) }
    dend_48 { pt3dadd( -4.18946, 76.1854, -28.7455, 0.46 ) }
    dend_48 { pt3dadd( -4.281, 76.6118, -28.9875, 0.46 ) }
    dend_48 { pt3dadd( -4.48279, 77.9303, -29.8116, 0.46 ) }
    dend_48 { pt3dadd( -4.49849, 78.4783, -30.126, 0.46 ) }
    dend_48 { pt3dadd( -4.38502, 80.1964, -30.8565, 0.46 ) }
    dend_48 { pt3dadd( -4.26186, 81.1418, -31.1888, 0.92 ) }
    dend_48 { pt3dadd( -3.89377, 83.8394, -31.9147, 0.46 ) }
    dend_48 { pt3dadd( -3.82955, 84.32, -32.041, 0.46 ) }
    dend_48 { pt3dadd( -3.2353, 88.2705, -33.0428, 0.46 ) }
    dend_48 { pt3dadd( -2.64532, 92.1217, -34.0198, 0.46 ) }
    dend_48 { pt3dadd( -2.57408, 92.604, -34.1359, 0.46 ) }
    dend_48 { pt3dadd( -2.35958, 94.1136, -34.4903, 0.92 ) }
    dend_48 { pt3dadd( -1.85914, 97.8886, -35.2981, 0.46 ) }
    dend_48 { pt3dadd( -1.51552, 100.274, -35.8508, 0.46 ) }
    dend_48 { pt3dadd( -1.45174, 100.654, -35.9492, 0.46 ) }
    dend_48 { pt3dadd( -1.0425, 102.602, -36.4767, 0.46 ) }
    dend_48 { pt3dadd( -0.926814, 103.074, -36.5979, 0.46 ) }
    dend_48 { pt3dadd( -0.66091, 104.086, -36.8329, 0.92 ) }
    dend_48 { pt3dadd( -0.535562, 104.563, -36.9177, 0.92 ) }
    dend_48 { pt3dadd( 0.351962, 108.003, -37.5156, 0.46 ) }
    dend_48 { pt3dadd( 0.498239, 108.609, -37.6509, 0.92 ) }
    dend_48 { pt3dadd( 1.12208, 111.452, -38.4062, 0.46 ) }
    dend_48 { pt3dadd( 1.2445, 112.056, -38.5802, 0.46 ) }
    dend_48 { pt3dadd( 1.35375, 112.651, -38.7811, 0.92 ) }
    dend_48 { pt3dadd( 1.42651, 113.113, -38.9567, 0.92 ) }
    dend_48 { pt3dadd( 1.89038, 116.014, -40.2145, 0.46 ) }
    dend_48 { pt3dadd( 1.96415, 116.465, -40.4165, 0.46 ) }
    dend_48 { pt3dadd( 2.16338, 117.433, -40.8349, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_48 { pt3dadd( 2.62037, 119.318, -41.6308, 0.46 ) }
    dend_48 { pt3dadd( 2.71755, 119.674, -41.7747, 0.46 ) }
    dend_48 { pt3dadd( 3.52505, 122.077, -42.7074, 0.46 ) }
    dend_48 { pt3dadd( 3.69282, 122.522, -42.8592, 0.46 ) }
    dend_48 { pt3dadd( 4.58427, 125.093, -43.6525, 0.46 ) }
    dend_48 { pt3dadd( 4.6948, 125.461, -43.7526, 0.46 ) }
    dend_48 { pt3dadd( 4.82101, 126.066, -43.911, 0.92 ) }
    dend_48 { pt3dadd( 4.96163, 127.089, -44.1934, 0.92 ) }
    dend_48 { pt3dadd( 5.08497, 130.648, -45.1867, 0.46 ) }
    dend_48 { pt3dadd( 5.05628, 132.612, -45.7469, 0.46 ) }
    dend_48 { pt3dadd( 5.00882, 133.226, -45.9248, 0.46 ) }
    dend_48 { pt3dadd( 4.66786, 136.619, -46.9072, 0.46 ) }
    dend_48 { pt3dadd( 4.62612, 136.999, -47.016, 0.46 ) }
    dend_48 { pt3dadd( 4.50616, 138.041, -47.3047, 0.92 ) }
    dend_48 { pt3dadd( 4.45334, 138.518, -47.4502, 0.92 ) }
    dend_48 { pt3dadd( 4.06426, 144.024, -49.2641, 0.46 ) }
    dend_48 { pt3dadd( 4.0563, 144.401, -49.3878, 0.46 ) }
    dend_48 { pt3dadd( 4.09204, 145.299, -49.6701, 0.92 ) }
    dend_48 { pt3dadd( 4.1356, 145.784, -49.8211, 0.92 ) }
    dend_48 { pt3dadd( 4.54238, 148.777, -50.7783, 0.46 ) }
    dend_48 { pt3dadd( 5.23467, 152.742, -52.01, 0.46 ) }
    dend_48 { pt3dadd( 5.36839, 153.34, -52.185, 0.92 ) }
    dend_48 { pt3dadd( 6.17951, 156.842, -53.1858, 0.46 ) }
    dend_48 { pt3dadd( 6.48218, 158.047, -53.5054, 0.92 ) }
    dend_48 { pt3dadd( 6.76649, 159.067, -53.7494, 0.92 ) }
    dend_48 { pt3dadd( 8.00692, 162.921, -54.4975, 0.46 ) }
    dend_48 { pt3dadd( 8.35225, 163.916, -54.7066, 0.92 ) }
    dend_48 { pt3dadd( 9.07664, 166.038, -55.1889, 0.46 ) }
    dend_48 { pt3dadd( 9.98083, 168.781, -55.8762, 0.46 ) }
    dend_48 { pt3dadd( 10.1194, 169.246, -55.9999, 0.46 ) }
    dend_48 { pt3dadd( 10.4246, 170.454, -56.3263, 0.92 ) }
    dend_48 { pt3dadd( 11.0046, 173.019, -57.0529, 0.46 ) }
    dend_48 { pt3dadd( 11.0912, 173.493, -57.1873, 0.46 ) }
    dend_48 { pt3dadd( 11.5537, 177.118, -58.1923, 0.46 ) }
    dend_48 { pt3dadd( 11.5993, 177.731, -58.3726, 0.46 ) }
    dend_48 { pt3dadd( 11.7307, 180.22, -59.0942, 0.46 ) }
    dend_48 { pt3dadd( 11.7339, 180.703, -59.2258, 0.46 ) }
    dend_48 { pt3dadd( 11.7181, 181.195, -59.3233, 0.92 ) }
    dend_48 { pt3dadd( 11.6945, 181.585, -59.3986, 0.92 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 39/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 18.75, -26.95, -23.4171, 0.46 ) }
    dend_42 { pt3dadd( 21.4354, -29.407, -25.0511, 0.46 ) }
    dend_42 { pt3dadd( 23.0086, -30.824, -26.0234, 1.38 ) }
    dend_42 { pt3dadd( 23.3088, -31.1753, -26.2248, 1.38 ) }
    dend_42 { pt3dadd( 25.384, -34.0857, -27.6656, 0.46 ) }
    dend_42 { pt3dadd( 25.6464, -34.4765, -27.8498, 0.46 ) }
    dend_42 { pt3dadd( 27.7108, -37.5505, -29.2986, 1.38 ) }
    dend_42 { pt3dadd( 28.0118, -38.0634, -29.5302, 1.38 ) }
    dend_42 { pt3dadd( 30.3985, -42.6308, -31.3357, 0.46 ) }
    dend_42 { pt3dadd( 31.2302, -44.3319, -31.9711, 0.46 ) }
    dend_42 { pt3dadd( 31.4441, -44.9059, -32.1592, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 50/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 18.75, -26.95, -23.4171, 0.92 ) }
    dend_41 { pt3dadd( 16.7821, -28.0867, -23.7654, 0.92 ) }
    dend_41 { pt3dadd( 16.3318, -28.3118, -23.8488, 0.92 ) }
    dend_41 { pt3dadd( 14.6065, -29.1149, -24.1578, 0.46 ) }
    dend_41 { pt3dadd( 13.4202, -29.5959, -24.4188, 0.92 ) }
    dend_41 { pt3dadd( 10.4468, -30.7054, -25.141, 0.46 ) }
    dend_41 { pt3dadd( 8.91691, -31.2396, -25.6156, 0.92 ) }
    dend_41 { pt3dadd( 7.15805, -31.7643, -26.2824, 0.46 ) }
    dend_41 { pt3dadd( 6.81504, -31.8653, -26.4718, 0.46 ) }
    dend_41 { pt3dadd( 5.51333, -32.1413, -27.6324, 0.46 ) }
    dend_41 { pt3dadd( 5.50071, -32.1404, -27.6557, 0.46 ) }
    dend_41 { pt3dadd( 4.98433, -31.8134, -29.6798, 0.46 ) }
    dend_41 { pt3dadd( 4.98022, -31.8092, -29.7056, 0.46 ) }
    dend_41 { pt3dadd( 4.85674, -31.4736, -32.2722, 0.46 ) }
    dend_41 { pt3dadd( 4.8479, -31.3998, -32.9216, 0.46 ) }
    dend_41 { pt3dadd( 4.91085, -31.3802, -35.8691, 0.46 ) }
    dend_41 { pt3dadd( 4.95505, -31.52, -38.5489, 0.46 ) }
    dend_41 { pt3dadd( 4.95438, -31.5228, -38.5751, 0.46 ) }
    dend_41 { pt3dadd( 4.81627, -31.9491, -41.509, 0.46 ) }
    dend_41 { pt3dadd( 4.77138, -32.0279, -41.9033, 0.46 ) }
    dend_41 { pt3dadd( 3.97884, -33.2213, -46.8303, 0.46 ) }
    dend_41 { pt3dadd( 3.88603, -33.3116, -47.2043, 0.46 ) }
    dend_41 { pt3dadd( 3.35034, -33.6651, -48.8748, 0.46 ) }
    dend_41 { pt3dadd( 3.34425, -33.6675, -48.8911, 0.46 ) }
    dend_41 { pt3dadd( 1.96971, -33.8419, -51.991, 0.46 ) }
    dend_41 { pt3dadd( 1.79921, -33.8278, -52.3585, 0.46 ) }
    dend_41 { pt3dadd( 0.722096, -33.2416, -54.2302, 0.46 ) }
    dend_41 { pt3dadd( 0.022723, -32.7118, -55.7103, 0.46 ) }
    dend_41 { pt3dadd( 0.015853, -32.7011, -55.7336, 0.46 ) }
    dend_41 { pt3dadd( -0.169422, -32.0848, -56.7676, 0.92 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.1797, -62.3218, -13.3892, 0.46 ) }
    dend_39 { pt3dadd( -11.3837, -67.2085, -12.2955, 0.46 ) }
    dend_39 { pt3dadd( -11.5005, -67.6667, -12.1817, 0.92 ) }
    dend_39 { pt3dadd( -11.6177, -68.1281, -12.0805, 0.92 ) }
    dend_39 { pt3dadd( -12.3133, -71.0437, -11.5147, 0.92 ) }
    dend_39 { pt3dadd( -12.9621, -74.0644, -11.0832, 0.46 ) }
    dend_39 { pt3dadd( -13.3775, -76.1632, -10.8408, 0.92 ) }
    dend_39 { pt3dadd( -13.4845, -76.7639, -10.7824, 0.92 ) }
    dend_39 { pt3dadd( -14.3354, -81.6068, -10.4623, 0.46 ) }
    dend_39 { pt3dadd( -14.6683, -83.5019, -10.3905, 0.92 ) }
    dend_39 { pt3dadd( -15.4189, -87.8218, -10.3308, 0.46 ) }
    dend_39 { pt3dadd( -15.6618, -89.2392, -10.3368, 0.92 ) }
    dend_39 { pt3dadd( -15.7258, -89.614, -10.3408, 0.92 ) }
    dend_39 { pt3dadd( -16.3625, -93.4827, -10.3698, 0.46 ) }
    dend_39 { pt3dadd( -16.4645, -94.0846, -10.3676, 0.92 ) }
    dend_39 { pt3dadd( -17.2175, -98.0275, -10.2664, 0.46 ) }
    dend_39 { pt3dadd( -17.318, -98.4946, -10.2312, 1.38 ) }
    dend_39 { pt3dadd( -17.4201, -98.9607, -10.1895, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 98/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.1797, -62.3218, -13.3892, 0.46 ) }
    dend_36 { pt3dadd( -9.8673, -66.0798, -13.9707, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -9.62784, -68.397, -14.3418, 0.46 ) }
    dend_36 { pt3dadd( -9.51649, -69.3698, -14.5025, 1.38 ) }
    dend_36 { pt3dadd( -9.48503, -69.7293, -14.5581, 1.38 ) }
    dend_36 { pt3dadd( -9.37422, -73.2551, -15.0567, 0.46 ) }
    dend_36 { pt3dadd( -9.37584, -73.6164, -15.111, 0.46 ) }
    dend_36 { pt3dadd( -9.45481, -75.1124, -15.3402, 1.38 ) }
    dend_36 { pt3dadd( -9.50751, -75.5712, -15.418, 1.38 ) }
    dend_36 { pt3dadd( -9.89777, -77.9099, -15.8953, 0.92 ) }
    dend_36 { pt3dadd( -10.2703, -79.5936, -16.29, 0.92 ) }
    dend_36 { pt3dadd( -10.6168, -80.7049, -16.5901, 0.92 ) }
    dend_36 { pt3dadd( -11.0102, -82.0828, -16.9768, 1.38 ) }
    dend_36 { pt3dadd( -11.1014, -82.5154, -17.1025, 1.38 ) }
    dend_36 { pt3dadd( -11.2882, -84.4025, -17.6726, 0.46 ) }
    dend_36 { pt3dadd( -11.2086, -86.3474, -18.2706, 0.46 ) }
    dend_36 { pt3dadd( -11.1586, -86.7878, -18.3931, 0.46 ) }
    dend_36 { pt3dadd( -10.9465, -88.1838, -18.7287, 1.38 ) }
    dend_36 { pt3dadd( -10.4719, -90.7112, -19.2936, 0.46 ) }
    dend_36 { pt3dadd( -10.2539, -91.8698, -19.5339, 1.38 ) }
    dend_36 { pt3dadd( -9.75834, -94.6136, -20.0394, 0.46 ) }
    dend_36 { pt3dadd( -9.27524, -97.3526, -20.5126, 0.46 ) }
    dend_36 { pt3dadd( -8.98965, -99.3046, -20.8442, 1.38 ) }
    dend_36 { pt3dadd( -8.9537, -99.6547, -20.9043, 1.38 ) }
    dend_36 { pt3dadd( -8.89569, -101.977, -21.3159, 0.46 ) }
    dend_36 { pt3dadd( -8.943, -103.835, -21.6669, 0.92 ) }
    dend_36 { pt3dadd( -8.96972, -104.286, -21.7582, 0.92 ) }
    dend_36 { pt3dadd( -9.18629, -107.112, -22.3644, 0.46 ) }
    dend_36 { pt3dadd( -9.28146, -108.159, -22.6002, 1.38 ) }
    dend_36 { pt3dadd( -9.54727, -111.894, -23.4553, 0.46 ) }
    dend_36 { pt3dadd( -9.62121, -113.283, -23.78, 1.38 ) }
    dend_36 { pt3dadd( -9.7246, -116.947, -24.6473, 0.46 ) }
    dend_36 { pt3dadd( -9.76021, -118.802, -25.0807, 1.38 ) }
    dend_36 { pt3dadd( -9.76357, -119.252, -25.1801, 1.38 ) }
    dend_36 { pt3dadd( -9.7711, -122.56, -25.8316, 0.46 ) }
    dend_36 { pt3dadd( -9.77195, -124.923, -26.2454, 0.46 ) }
    dend_36 { pt3dadd( -9.78319, -126.51, -26.4922, 1.38 ) }
    dend_36 { pt3dadd( -9.7916, -127.089, -26.5728, 1.38 ) }
    dend_36 { pt3dadd( -9.89402, -130.771, -27.0434, 0.46 ) }
    dend_36 { pt3dadd( -9.98829, -134.066, -27.4289, 0.46 ) }
    dend_36 { pt3dadd( -10.0741, -136.378, -27.6701, 0.92 ) }
    dend_36 { pt3dadd( -10.1412, -138.722, -27.8587, 1.38 ) }
    dend_36 { pt3dadd( -10.2071, -140.59, -27.9803, 0.46 ) }
    dend_36 { pt3dadd( -10.2149, -140.955, -28.0028, 0.46 ) }
    dend_36 { pt3dadd( -10.2121, -142.944, -28.1501, 0.92 ) }
    dend_36 { pt3dadd( -10.2047, -143.41, -28.2028, 0.92 ) }
    dend_36 { pt3dadd( -10.2375, -145.686, -28.5512, 0.46 ) }
    dend_36 { pt3dadd( -10.2657, -146.264, -28.6576, 0.46 ) }
    dend_36 { pt3dadd( -10.4203, -148.595, -29.1583, 0.92 ) }
    dend_36 { pt3dadd( -10.5772, -150.588, -29.6361, 1.38 ) }
    dend_36 { pt3dadd( -10.8592, -153.353, -30.3617, 0.46 ) }
    dend_36 { pt3dadd( -11.0845, -155.695, -30.989, 0.46 ) }
    dend_36 { pt3dadd( -11.1376, -156.258, -31.1529, 0.46 ) }
    dend_36 { pt3dadd( -11.2577, -157.673, -31.5437, 0.46 ) }
    dend_36 { pt3dadd( -11.2986, -158.116, -31.6609, 0.46 ) }
    dend_36 { pt3dadd( -11.4444, -159.465, -31.9573, 1.38 ) }
    dend_36 { pt3dadd( -11.7646, -162.677, -32.5888, 0.46 ) }
    dend_36 { pt3dadd( -11.8114, -163.128, -32.6654, 0.46 ) }
    dend_36 { pt3dadd( -11.9628, -164.515, -32.8861, 0.92 ) }
    dend_36 { pt3dadd( -12.016, -164.97, -32.9375, 0.92 ) }
    dend_36 { pt3dadd( -12.6267, -169.621, -33.3485, 0.46 ) }
    dend_36 { pt3dadd( -12.6886, -170.077, -33.3723, 0.46 ) }
    dend_36 { pt3dadd( -12.9701, -171.939, -33.4556, 1.38 ) }
    dend_36 { pt3dadd( -13.0292, -172.403, -33.4835, 1.38 ) }
    dend_36 { pt3dadd( -13.4187, -175.657, -33.7032, 0.46 ) }
    dend_36 { pt3dadd( -13.4488, -176.011, -33.7389, 0.46 ) }
    dend_36 { pt3dadd( -13.4811, -177.456, -33.9502, 0.92 ) }
    dend_36 { pt3dadd( -13.4544, -180.101, -34.4642, 0.46 ) }
    dend_36 { pt3dadd( -13.4229, -181.31, -34.7642, 1.38 ) }
    dend_36 { pt3dadd( -13.4064, -181.653, -34.859, 1.38 ) }
    dend_36 { pt3dadd( -13.2056, -184.85, -35.8717, 0.46 ) }
    dend_36 { pt3dadd( -13.1147, -186.06, -36.2625, 1.38 ) }
    dend_36 { pt3dadd( -12.9343, -188.385, -37.0288, 0.46 ) }
    dend_36 { pt3dadd( -12.7293, -190.745, -37.7283, 0.46 ) }
    dend_36 { pt3dadd( -12.6308, -191.876, -38.0378, 1.38 ) }
    dend_36 { pt3dadd( -12.5991, -192.228, -38.129, 1.38 ) }
    dend_36 { pt3dadd( -12.3687, -194.658, -38.6841, 0.46 ) }
    dend_36 { pt3dadd( -12.2259, -196.067, -38.9714, 1.38 ) }
    dend_36 { pt3dadd( -11.7663, -199.711, -39.6214, 0.46 ) }
    dend_36 { pt3dadd( -11.4958, -201.688, -39.8811, 0.46 ) }
    dend_36 { pt3dadd( -11.4563, -202.05, -39.9151, 0.46 ) }
    dend_36 { pt3dadd( -11.2344, -204.456, -40.045, 0.92 ) }
    dend_36 { pt3dadd( -11.1099, -206.424, -40.072, 0.46 ) }
    dend_36 { pt3dadd( -11.0527, -207.845, -40.0601, 0.92 ) }
    dend_36 { pt3dadd( -10.9964, -210.004, -40.0263, 0.46 ) }
    dend_36 { pt3dadd( -10.9615, -212.43, -40.0262, 0.46 ) }
    dend_36 { pt3dadd( -10.9522, -214.733, -40.1087, 0.92 ) }
    dend_36 { pt3dadd( -10.9904, -217.511, -40.3003, 0.46 ) }
    dend_36 { pt3dadd( -11.0191, -218.426, -40.404, 1.38 ) }
    dend_36 { pt3dadd( -11.0887, -220.853, -40.7843, 0.46 ) }
    dend_36 { pt3dadd( -11.1011, -222.78, -41.1862, 0.92 ) }
    dend_36 { pt3dadd( -11.0644, -226.932, -42.1708, 0.46 ) }
    dend_36 { pt3dadd( -11.0416, -229.201, -42.7505, 0.92 ) }
    dend_36 { pt3dadd( -10.9866, -231.14, -43.232, 0.46 ) }
    dend_36 { pt3dadd( -10.9284, -232.273, -43.5018, 0.92 ) }
    dend_36 { pt3dadd( -10.7163, -235.637, -44.2615, 0.46 ) }
    dend_36 { pt3dadd( -10.6801, -235.994, -44.3302, 0.46 ) }
    dend_36 { pt3dadd( -10.4873, -237.359, -44.4961, 0.92 ) }
    dend_36 { pt3dadd( -9.5265, -243.408, -44.9553, 0.46 ) }
    dend_36 { pt3dadd( -9.32195, -244.598, -44.9965, 0.92 ) }
    dend_36 { pt3dadd( -9.26075, -244.958, -45.0029, 0.92 ) }
    dend_36 { pt3dadd( -8.38667, -250.082, -45.0813, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -7.71771, -254.021, -45.1718, 0.46 ) }
    dend_36 { pt3dadd( -7.64447, -254.475, -45.1902, 0.46 ) }
    dend_36 { pt3dadd( -7.44192, -255.89, -45.2645, 1.38 ) }
    dend_36 { pt3dadd( -6.93969, -259.652, -45.552, 0.46 ) }
    dend_36 { pt3dadd( -6.45381, -263.465, -45.9498, 0.46 ) }
    dend_36 { pt3dadd( -6.2959, -264.828, -46.1689, 1.38 ) }
    dend_36 { pt3dadd( -5.92167, -268.083, -46.9071, 0.46 ) }
    dend_36 { pt3dadd( -5.87813, -268.426, -46.9917, 0.46 ) }
    dend_36 { pt3dadd( -5.62481, -270.364, -47.5214, 0.92 ) }
    dend_36 { pt3dadd( -5.56838, -270.707, -47.6305, 0.92 ) }
    dend_36 { pt3dadd( -5.04524, -273.108, -48.4535, 0.46 ) }
    dend_36 { pt3dadd( -4.70923, -274.288, -48.901, 0.46 ) }
    dend_36 { pt3dadd( -4.07205, -276.067, -49.6072, 0.92 ) }
    dend_36 { pt3dadd( -3.94568, -276.383, -49.735, 0.92 ) }
    dend_36 { pt3dadd( -3.23827, -278.098, -50.4449, 0.46 ) }
    dend_36 { pt3dadd( -2.73584, -279.33, -50.944, 0.92 ) }
    dend_36 { pt3dadd( -2.03478, -281.091, -51.653, 0.46 ) }
    dend_36 { pt3dadd( -1.64714, -282.148, -52.0364, 0.92 ) }
    dend_36 { pt3dadd( -1.50545, -282.561, -52.1754, 0.92 ) }
    dend_36 { pt3dadd( -0.611573, -285.279, -53.0307, 0.46 ) }
    dend_36 { pt3dadd( -0.0938039, -287.109, -53.5482, 0.92 ) }
    dend_36 { pt3dadd( 0.041959, -287.663, -53.6905, 0.92 ) }
    dend_36 { pt3dadd( 0.725271, -290.94, -54.4217, 0.46 ) }
    dend_36 { pt3dadd( 0.903655, -291.903, -54.6186, 0.92 ) }
    dend_36 { pt3dadd( 0.984105, -292.357, -54.7015, 0.92 ) }
    dend_36 { pt3dadd( 1.39632, -294.694, -55.04, 0.46 ) }
    dend_36 { pt3dadd( 1.63749, -296.048, -55.2315, 0.92 ) }
    dend_36 { pt3dadd( 1.73383, -296.5, -55.3067, 0.92 ) }
    dend_36 { pt3dadd( 2.41769, -299.216, -55.7914, 0.46 ) }
    dend_36 { pt3dadd( 2.55926, -299.645, -55.8734, 0.46 ) }
    dend_36 { pt3dadd( 3.04815, -300.968, -56.1326, 0.92 ) }
    dend_36 { pt3dadd( 4.04596, -303.192, -56.6255, 0.92 ) }
    dend_36 { pt3dadd( 5.31889, -305.685, -57.2401, 0.46 ) }
    dend_36 { pt3dadd( 6.30661, -307.528, -57.7041, 0.92 ) }
    dend_36 { pt3dadd( 7.93639, -310.238, -58.4317, 0.46 ) }
    dend_36 { pt3dadd( 8.12642, -310.535, -58.5159, 0.46 ) }
    dend_36 { pt3dadd( 9.06828, -311.864, -58.9283, 0.92 ) }
    dend_36 { pt3dadd( 9.35052, -312.204, -59.0399, 0.92 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 41.0083, -56.7146, 4.75499, 0.92 ) }
    dend_28 { pt3dadd( 45.8343, -64.3141, 5.66682, 0.92 ) }
    dend_28 { pt3dadd( 51.9004, -70.862, 6.88654, 0.92 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 41/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 41.0083, -56.7146, 4.75499, 0.46 ) }
    dend_25 { pt3dadd( 46.7936, -63.7763, 5.85447, 0.92 ) }
    dend_25 { pt3dadd( 53.0053, -70.4955, 6.5982, 0.92 ) }
    dend_25 { pt3dadd( 59.3392, -77.0024, 7.91872, 0.92 ) }
    dend_25 { pt3dadd( 65.9994, -83.2938, 8.09221, 0.92 ) }
    dend_25 { pt3dadd( 72.2965, -89.8142, 9.52426, 0.92 ) }
    dend_25 { pt3dadd( 78.4386, -96.109, 12.1382, 0.92 ) }
    dend_25 { pt3dadd( 85.2912, -101.099, 15.5495, 0.92 ) }
    dend_25 { pt3dadd( 92.9026, -105.587, 17.8096, 0.92 ) }
    dend_25 { pt3dadd( 100.001, -110.545, 20.7214, 0.92 ) }
    dend_25 { pt3dadd( 105.736, -117.485, 22.5891, 0.92 ) }
    dend_25 { pt3dadd( 112.367, -123.666, 23.9408, 0.92 ) }
    dend_25 { pt3dadd( 119.289, -129.503, 25.2862, 0.92 ) }
    dend_25 { pt3dadd( 125.644, -135.498, 28.0575, 0.92 ) }
    dend_25 { pt3dadd( 131.459, -141.739, 31.4423, 0.92 ) }
    dend_25 { pt3dadd( 136.974, -147.831, 35.5237, 0.92 ) }
    dend_25 { pt3dadd( 142.151, -154.111, 39.776, 0.92 ) }
    dend_25 { pt3dadd( 147.117, -160.436, 44.2146, 0.92 ) }
    dend_25 { pt3dadd( 152.607, -166.138, 48.8346, 0.92 ) }
    dend_25 { pt3dadd( 156.449, -172.186, 54.5765, 0.92 ) }
    dend_25 { pt3dadd( 161.063, -178.86, 58.9076, 0.92 ) }
    dend_25 { pt3dadd( 165.423, -185.682, 63.2829, 0.92 ) }
    dend_25 { pt3dadd( 170.954, -192.266, 66.5233, 0.92 ) }
    dend_25 { pt3dadd( 175.909, -199.582, 69.1306, 0.92 ) }
    dend_25 { pt3dadd( 180.436, -207.171, 71.7729, 0.92 ) }
    dend_25 { pt3dadd( 184.394, -215.259, 73.8547, 0.92 ) }
    dend_25 { pt3dadd( 187.824, -223.46, 76.4095, 0.92 ) }
    dend_25 { pt3dadd( 192.326, -230.886, 79.507, 0.92 ) }
    dend_25 { pt3dadd( 196.519, -238.608, 82.3325, 0.92 ) }
    dend_25 { pt3dadd( 201.271, -245.99, 85.1385, 0.92 ) }
    dend_25 { pt3dadd( 205.986, -252.82, 89.1117, 0.92 ) }
    dend_25 { pt3dadd( 209.015, -261.155, 91.7608, 0.92 ) }
    dend_25 { pt3dadd( 211.178, -269.383, 95.4124, 0.92 ) }
    dend_25 { pt3dadd( 211.375, -278.162, 98.41, 0.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 75/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -48.4478, -54.2251, 4.23208, 0.46 ) }
    dend_23 { pt3dadd( -48.2107, -58.8679, 3.20996, 0.46 ) }
    dend_23 { pt3dadd( -48.1326, -60.3974, 2.87324, 0.92 ) }
    dend_23 { pt3dadd( -48.0936, -61.1622, 2.70487, 0.92 ) }
    dend_23 { pt3dadd( -47.9335, -64.2964, 2.01486, 0.46 ) }
    dend_23 { pt3dadd( -47.9025, -64.903, 1.88132, 0.46 ) }
    dend_23 { pt3dadd( -47.8184, -66.5509, 1.51853, 0.92 ) }
    dend_23 { pt3dadd( -45.646, -79.2442, -2.53565, 0.92 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 83/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -48.4478, -54.2251, 4.23208, 0.46 ) }
    dend_22 { pt3dadd( -49.474, -55.0144, 4.27027, 0.46 ) }
    dend_22 { pt3dadd( -49.6449, -55.1757, 4.26419, 0.46 ) }
    dend_22 { pt3dadd( -50.2535, -55.8667, 4.26086, 0.92 ) }
    dend_22 { pt3dadd( -50.4413, -56.0972, 4.26467, 0.92 ) }
    dend_22 { pt3dadd( -51.4728, -57.4178, 4.2656, 0.46 ) }
    dend_22 { pt3dadd( -51.706, -57.7165, 4.26581, 1.38 ) }
    dend_22 { pt3dadd( -53.23, -59.7466, 4.26305, 0.46 ) }
    dend_22 { pt3dadd( -54.8825, -62.0224, 4.25621, 0.46 ) }
    dend_22 { pt3dadd( -55.6888, -63.1757, 4.25145, 0.46 ) }
    dend_22 { pt3dadd( -56.7038, -64.675, 4.24493, 1.38 ) }
    dend_22 { pt3dadd( -59.2354, -69.1283, 4.70366, 1.38 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 95/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.67451, 15.8044, 0.0, 0.92 ) }
    dend_10 { pt3dadd( -12.7661, 18.7842, 1.56273, 0.92 ) }
    dend_10 { pt3dadd( -15.5494, 21.4667, 2.96961, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 98/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.67451, 15.8044, 0.0, 0.46 ) }
    dend_1 { pt3dadd( -12.8801, 14.7872, 0.999228, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -13.9872, 14.4359, 1.34433, 1.38 ) }
    dend_1 { pt3dadd( -16.8806, 13.5178, 2.24625, 0.46 ) }
    dend_1 { pt3dadd( -20.7247, 12.298, 3.44451, 0.46 ) }
    dend_1 { pt3dadd( -21.5267, 12.0435, 3.69451, 1.38 ) }
    dend_1 { pt3dadd( -21.9552, 11.9075, 3.8281, 1.38 ) }
    dend_1 { pt3dadd( -29.1049, 8.80342, 6.02701, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -17.7058, 33.1952, 0.0, 0.92 ) }
    axon_1 { pt3dadd( -25.0238, 46.289, 0.0, 0.92 ) }
    axon_1 { pt3dadd( -32.3418, 59.3828, 0.0, 0.92 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 9/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -18.863, -7.12522, -19.918, 0.46 ) }
    dend_55 { pt3dadd( -20.5089, -3.44737, -20.5253, 0.46 ) }
    dend_55 { pt3dadd( -21.5739, -1.56308, -20.9112, 1.38 ) }
    dend_55 { pt3dadd( -22.4015, -0.0748399, -21.2822, 0.46 ) }
    dend_55 { pt3dadd( -23.2601, 1.42226, -21.6905, 0.92 ) }
    dend_55 { pt3dadd( -24.1963, 3.03019, -22.1775, 0.46 ) }
    dend_55 { pt3dadd( -24.5342, 3.60642, -22.3607, 0.46 ) }
    dend_55 { pt3dadd( -25.8774, 5.69473, -23.123, 0.46 ) }
    dend_55 { pt3dadd( -27.3797, 8.17309, -24.0828, 0.46 ) }
    dend_55 { pt3dadd( -27.6545, 8.62239, -24.2377, 0.46 ) }
    dend_55 { pt3dadd( -29.5186, 11.578, -25.1981, 0.92 ) }
    dend_55 { pt3dadd( -29.5315, 11.5976, -25.2029, 0.92 ) }
    dend_55 { pt3dadd( -30.8568, 13.6066, -25.5434, 0.46 ) }
    dend_55 { pt3dadd( -32.2094, 15.732, -25.7349, 0.46 ) }
    dend_55 { pt3dadd( -34.6915, 19.4953, -25.8124, 0.92 ) }
    dend_55 { pt3dadd( -34.9955, 19.9563, -25.8032, 0.92 ) }
    dend_55 { pt3dadd( -37.3451, 23.6375, -25.5139, 0.46 ) }
    dend_55 { pt3dadd( -38.4903, 25.4646, -25.3143, 0.92 ) }
    dend_55 { pt3dadd( -40.0447, 28.0481, -24.9712, 0.46 ) }
    dend_55 { pt3dadd( -41.4357, 30.5037, -24.634, 0.92 ) }
    dend_55 { pt3dadd( -41.6929, 30.9899, -24.5742, 0.92 ) }
    dend_55 { pt3dadd( -43.6418, 34.7989, -24.1199, 0.46 ) }
    dend_55 { pt3dadd( -44.0391, 35.593, -24.0326, 0.92 ) }
    dend_55 { pt3dadd( -45.4171, 38.4341, -23.7783, 0.46 ) }
    dend_55 { pt3dadd( -46.4679, 40.6052, -23.5964, 0.92 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 34/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -18.863, -7.12522, -19.918, 0.46 ) }
    dend_50 { pt3dadd( -18.4587, -8.3688, -20.0034, 0.46 ) }
    dend_50 { pt3dadd( -17.8596, -10.1666, -20.1834, 0.46 ) }
    dend_50 { pt3dadd( -17.6723, -10.7751, -20.2483, 0.46 ) }
    dend_50 { pt3dadd( -17.1574, -12.4084, -20.4256, 1.38 ) }
    dend_50 { pt3dadd( -16.6194, -13.9874, -20.661, 0.46 ) }
    dend_50 { pt3dadd( -16.1589, -15.1638, -20.8613, 0.46 ) }
    dend_50 { pt3dadd( -15.9251, -15.604, -20.9576, 0.46 ) }
    dend_50 { pt3dadd( -15.4196, -16.4462, -21.2072, 1.38 ) }
    dend_50 { pt3dadd( -15.2051, -16.7703, -21.3078, 1.38 ) }
    dend_50 { pt3dadd( -14.3207, -18.0541, -21.7728, 0.46 ) }
    dend_50 { pt3dadd( -13.8828, -18.6736, -22.0054, 1.38 ) }
    dend_50 { pt3dadd( -12.3244, -21.0375, -22.8264, 0.46 ) }
    dend_50 { pt3dadd( -11.599, -22.1472, -23.2493, 0.46 ) }
    dend_50 { pt3dadd( -11.0259, -22.9999, -23.6035, 1.38 ) }
    dend_50 { pt3dadd( -10.0325, -24.5443, -24.2441, 0.46 ) }
    dend_50 { pt3dadd( -10.0196, -24.5654, -24.2527, 0.46 ) }
    dend_50 { pt3dadd( -9.30299, -25.8512, -24.8074, 0.92 ) }
    dend_50 { pt3dadd( -8.48588, -27.4384, -25.5635, 0.46 ) }
    dend_50 { pt3dadd( -7.77506, -28.7929, -26.1891, 0.46 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 31.4441, -44.9059, -32.1592, 0.46 ) }
    dend_46 { pt3dadd( 30.2006, -46.866, -32.608, 0.46 ) }
    dend_46 { pt3dadd( 29.3381, -48.3951, -32.8808, 0.92 ) }
    dend_46 { pt3dadd( 26.6528, -53.4254, -33.5713, 0.46 ) }
    dend_46 { pt3dadd( 25.9692, -54.762, -33.7337, 0.92 ) }
    dend_46 { pt3dadd( 24.1459, -58.3274, -34.1667, 0.46 ) }
    dend_46 { pt3dadd( 23.5085, -59.5737, -34.3181, 0.92 ) }
    dend_46 { pt3dadd( 22.1066, -62.486, -34.598, 0.46 ) }
    dend_46 { pt3dadd( 20.5307, -65.9902, -34.8219, 0.46 ) }
    dend_46 { pt3dadd( 19.9879, -67.2757, -34.8394, 0.92 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 31.4441, -44.9059, -32.1592, 0.46 ) }
    dend_43 { pt3dadd( 32.9365, -46.2483, -32.8518, 0.46 ) }
    dend_43 { pt3dadd( 35.3158, -48.4522, -34.098, 0.46 ) }
    dend_43 { pt3dadd( 36.8207, -49.8361, -34.915, 1.38 ) }
    dend_43 { pt3dadd( 38.86, -51.679, -36.0071, 0.46 ) }
    dend_43 { pt3dadd( 39.4251, -52.1744, -36.3009, 0.92 ) }
    dend_43 { pt3dadd( 41.0816, -53.6139, -37.1634, 0.46 ) }
    dend_43 { pt3dadd( 42.4082, -54.7744, -37.8681, 0.92 ) }
    dend_43 { pt3dadd( 43.5387, -55.7988, -38.5172, 0.46 ) }
    dend_43 { pt3dadd( 44.6091, -56.7513, -39.1388, 1.38 ) }
    dend_43 { pt3dadd( 46.5847, -58.5006, -40.2421, 0.46 ) }
    dend_43 { pt3dadd( 46.9026, -58.7814, -40.4128, 0.46 ) }
    dend_43 { pt3dadd( 48.8591, -60.5763, -41.4546, 1.38 ) }
    dend_43 { pt3dadd( 49.1397, -60.8812, -41.6255, 1.38 ) }
    dend_43 { pt3dadd( 51.501, -63.7055, -43.2532, 0.46 ) }
    dend_43 { pt3dadd( 52.3674, -64.8559, -43.9279, 1.38 ) }
    dend_43 { pt3dadd( 53.7574, -66.7874, -45.1055, 0.46 ) }
    dend_43 { pt3dadd( 54.4543, -67.7842, -45.7229, 1.38 ) }
    dend_43 { pt3dadd( 56.4375, -70.7309, -47.5462, 0.46 ) }
    dend_43 { pt3dadd( 57.2282, -71.8577, -48.2384, 1.38 ) }
    dend_43 { pt3dadd( 59.1959, -74.5676, -49.9681, 0.46 ) }
    dend_43 { pt3dadd( 60.117, -75.8275, -50.7947, 1.38 ) }
    dend_43 { pt3dadd( 61.2048, -77.3481, -51.769, 0.46 ) }
    dend_43 { pt3dadd( 61.7834, -78.1108, -52.2737, 1.38 ) }
    dend_43 { pt3dadd( 63.783, -80.6413, -53.9347, 0.46 ) }
    dend_43 { pt3dadd( 64.5546, -81.6481, -54.5927, 0.46 ) }
    dend_43 { pt3dadd( 64.7988, -81.9707, -54.8096, 0.46 ) }
    dend_43 { pt3dadd( 65.9223, -83.5622, -55.8637, 0.92 ) }
    dend_43 { pt3dadd( 67.0664, -85.218, -57.0212, 0.46 ) }
    dend_43 { pt3dadd( 68.1336, -86.8448, -58.155, 0.92 ) }
    dend_43 { pt3dadd( 69.1011, -88.4131, -59.2143, 0.46 ) }
    dend_43 { pt3dadd( 69.3154, -88.7618, -59.4246, 0.46 ) }
    dend_43 { pt3dadd( 70.8334, -91.2135, -60.8332, 0.92 ) }
    dend_43 { pt3dadd( 71.185, -91.7905, -61.1405, 0.92 ) }
    dend_43 { pt3dadd( 72.8016, -94.5809, -62.4245, 0.46 ) }
    dend_43 { pt3dadd( 72.811, -94.5974, -62.4312, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 73.849, -96.4382, -63.1135, 0.92 ) }
    dend_43 { pt3dadd( 74.9449, -98.3553, -63.8381, 0.46 ) }
    dend_43 { pt3dadd( 75.6426, -99.57, -64.2887, 0.92 ) }
    dend_43 { pt3dadd( 76.3021, -100.748, -64.7281, 0.46 ) }
    dend_43 { pt3dadd( 77.3233, -102.551, -65.4144, 0.92 ) }
    dend_43 { pt3dadd( 78.7574, -105.04, -66.3943, 0.46 ) }
    dend_43 { pt3dadd( 79.9775, -107.129, -67.2181, 0.46 ) }
    dend_43 { pt3dadd( 80.5106, -108.02, -67.5519, 0.92 ) }
    dend_43 { pt3dadd( 80.8827, -108.617, -67.7778, 0.92 ) }
    dend_43 { pt3dadd( 82.0804, -110.481, -68.4162, 0.46 ) }
    dend_43 { pt3dadd( 82.3182, -110.855, -68.5398, 0.46 ) }
    dend_43 { pt3dadd( 83.4645, -112.688, -69.0694, 0.92 ) }
    dend_43 { pt3dadd( 83.7533, -113.185, -69.2055, 0.92 ) }
    dend_43 { pt3dadd( 85.4032, -116.139, -70.0568, 0.46 ) }
    dend_43 { pt3dadd( 86.2496, -117.675, -70.5034, 0.92 ) }
    dend_43 { pt3dadd( 86.4453, -118.074, -70.6279, 0.92 ) }
    dend_43 { pt3dadd( 87.919, -121.242, -71.6376, 0.46 ) }
    dend_43 { pt3dadd( 88.6631, -122.985, -72.2228, 0.46 ) }
    dend_43 { pt3dadd( 89.1885, -124.399, -72.7025, 0.92 ) }
    dend_43 { pt3dadd( 89.1943, -124.417, -72.7088, 0.92 ) }
    dend_43 { pt3dadd( 90.1895, -128.011, -73.9763, 0.46 ) }
    dend_43 { pt3dadd( 90.5528, -129.371, -74.4571, 0.92 ) }
    dend_43 { pt3dadd( 90.6491, -129.788, -74.6073, 0.92 ) }
    dend_43 { pt3dadd( 91.5907, -134.038, -76.1255, 0.46 ) }
    dend_43 { pt3dadd( 91.6873, -134.464, -76.2807, 0.46 ) }
    dend_43 { pt3dadd( 92.0642, -136.132, -76.8902, 0.92 ) }
    dend_43 { pt3dadd( 92.414, -137.679, -77.5432, 0.46 ) }
    dend_43 { pt3dadd( 92.5129, -138.092, -77.7283, 0.46 ) }
    dend_43 { pt3dadd( 93.0905, -140.055, -78.6412, 0.92 ) }
    dend_43 { pt3dadd( 94.1733, -143.123, -80.0833, 0.46 ) }
    dend_43 { pt3dadd( 94.9914, -145.168, -81.0198, 0.92 ) }
    dend_43 { pt3dadd( 95.9707, -147.544, -82.0726, 0.46 ) }
    dend_43 { pt3dadd( 96.757, -149.473, -82.8808, 0.92 ) }
    dend_43 { pt3dadd( 98.0184, -152.626, -84.1134, 0.46 ) }
    dend_43 { pt3dadd( 98.5254, -153.962, -84.5907, 0.92 ) }
    dend_43 { pt3dadd( 99.6925, -157.24, -85.5371, 0.46 ) }
    dend_43 { pt3dadd( 100.404, -159.452, -86.0641, 0.46 ) }
    dend_43 { pt3dadd( 100.703, -160.655, -86.2823, 0.46 ) }
    dend_43 { pt3dadd( 101.192, -163.1, -86.6827, 0.46 ) }
    dend_43 { pt3dadd( 101.592, -165.55, -87.0335, 0.92 ) }
    dend_43 { pt3dadd( 101.941, -167.595, -87.3484, 0.46 ) }
    dend_43 { pt3dadd( 102.281, -169.291, -87.6379, 0.92 ) }
    dend_43 { pt3dadd( 104.078, -176.511, -89.0263, 0.46 ) }
    dend_43 { pt3dadd( 104.699, -178.6, -89.5075, 0.92 ) }
    dend_43 { pt3dadd( 104.885, -179.133, -89.6521, 0.92 ) }
    dend_43 { pt3dadd( 105.952, -181.83, -90.4862, 0.46 ) }
    dend_43 { pt3dadd( 106.621, -183.452, -91.031, 0.46 ) }
    dend_43 { pt3dadd( 107.039, -184.407, -91.3629, 0.92 ) }
    dend_43 { pt3dadd( 107.897, -186.385, -92.0627, 0.46 ) }
    dend_43 { pt3dadd( 108.346, -187.497, -92.4212, 0.92 ) }
    dend_43 { pt3dadd( 110.361, -192.905, -94.0087, 0.46 ) }
    dend_43 { pt3dadd( 111.123, -195.091, -94.5598, 0.92 ) }
    dend_43 { pt3dadd( 111.312, -195.627, -94.6921, 0.92 ) }
    dend_43 { pt3dadd( 112.643, -199.283, -95.6108, 0.46 ) }
    dend_43 { pt3dadd( 113.185, -200.645, -95.9525, 0.92 ) }
    dend_43 { pt3dadd( 114.502, -203.665, -96.7248, 0.46 ) }
    dend_43 { pt3dadd( 115.234, -205.27, -97.1408, 0.92 ) }
    dend_43 { pt3dadd( 116.801, -208.642, -97.9757, 0.46 ) }
    dend_43 { pt3dadd( 117.596, -210.395, -98.3901, 0.92 ) }
    dend_43 { pt3dadd( 118.971, -213.423, -99.0987, 0.46 ) }
    dend_43 { pt3dadd( 119.854, -215.422, -99.5614, 0.92 ) }
    dend_43 { pt3dadd( 121.642, -219.48, -100.428, 0.46 ) }
    dend_43 { pt3dadd( 122.618, -221.77, -100.898, 0.92 ) }
    dend_43 { pt3dadd( 123.941, -224.955, -101.435, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 9.35052, -312.204, -59.0399, 0.46 ) }
    dend_38 { pt3dadd( 11.087, -312.839, -60.4225, 0.46 ) }
    dend_38 { pt3dadd( 11.5869, -313.053, -60.8188, 0.46 ) }
    dend_38 { pt3dadd( 16.0066, -315.927, -64.3284, 0.46 ) }
    dend_38 { pt3dadd( 16.572, -316.389, -64.7784, 0.92 ) }
    dend_38 { pt3dadd( 19.076, -318.566, -66.7761, 0.46 ) }
    dend_38 { pt3dadd( 20.014, -319.427, -67.489, 0.92 ) }
    dend_38 { pt3dadd( 20.4218, -319.876, -67.7931, 0.92 ) }
    dend_38 { pt3dadd( 23.1209, -323.224, -69.7574, 0.46 ) }
    dend_38 { pt3dadd( 24.7635, -325.581, -70.9213, 0.46 ) }
    dend_38 { pt3dadd( 25.1351, -326.085, -71.1872, 0.46 ) }
    dend_38 { pt3dadd( 27.3676, -328.705, -72.8387, 0.92 ) }
    dend_38 { pt3dadd( 27.6903, -329.038, -73.1111, 0.92 ) }
    dend_38 { pt3dadd( 30.1373, -331.314, -75.3683, 0.46 ) }
    dend_38 { pt3dadd( 31.6487, -332.721, -77.0843, 0.92 ) }
    dend_38 { pt3dadd( 31.995, -333.066, -77.5509, 0.92 ) }
    dend_38 { pt3dadd( 33.5904, -335.02, -80.2644, 0.46 ) }
    dend_38 { pt3dadd( 34.6366, -336.559, -82.6852, 0.46 ) }
    dend_38 { pt3dadd( 34.6502, -336.584, -82.722, 0.46 ) }
    dend_38 { pt3dadd( 35.8143, -339.281, -86.4225, 0.46 ) }
    dend_38 { pt3dadd( 35.979, -339.693, -86.9339, 0.46 ) }
    dend_38 { pt3dadd( 36.7599, -341.57, -88.7706, 0.46 ) }
    dend_38 { pt3dadd( 37.0072, -342.065, -89.1663, 0.46 ) }
    dend_38 { pt3dadd( 38.4745, -344.068, -90.7352, 0.92 ) }
    dend_38 { pt3dadd( 40.6721, -346.462, -92.7596, 0.46 ) }
    dend_38 { pt3dadd( 41.0225, -346.747, -93.0489, 0.92 ) }
    dend_38 { pt3dadd( 43.7947, -348.89, -95.2529, 0.46 ) }
    dend_38 { pt3dadd( 45.7158, -350.226, -96.6938, 0.46 ) }
    dend_38 { pt3dadd( 49.2641, -352.62, -99.3786, 0.46 ) }
    dend_38 { pt3dadd( 49.8815, -352.987, -99.8558, 0.46 ) }
    dend_38 { pt3dadd( 53.0203, -354.802, -102.255, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 95/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.35052, -312.204, -59.0399, 0.46 ) }
    dend_37 { pt3dadd( 9.90594, -315.627, -59.5246, 0.46 ) }
    dend_37 { pt3dadd( 11.0284, -321.998, -60.4107, 0.46 ) }
    dend_37 { pt3dadd( 11.1903, -322.867, -60.5272, 0.92 ) }
    dend_37 { pt3dadd( 11.4429, -324.243, -60.7062, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 12.47, -331.263, -61.582, 0.46 ) }
    dend_37 { pt3dadd( 12.7164, -333.421, -61.8443, 0.92 ) }
    dend_37 { pt3dadd( 13.1035, -337.69, -62.3293, 0.46 ) }
    dend_37 { pt3dadd( 13.2353, -339.864, -62.5602, 0.92 ) }
    dend_37 { pt3dadd( 13.2568, -340.42, -62.6188, 0.92 ) }
    dend_37 { pt3dadd( 13.2872, -347.616, -63.4226, 0.46 ) }
    dend_37 { pt3dadd( 13.1359, -350.52, -63.7499, 0.46 ) }
    dend_37 { pt3dadd( 13.0651, -351.216, -63.8346, 0.46 ) }
    dend_37 { pt3dadd( 12.7093, -354.045, -64.2104, 0.92 ) }
    dend_37 { pt3dadd( 12.6255, -354.739, -64.3021, 0.92 ) }
    dend_37 { pt3dadd( 12.0211, -360.483, -65.0647, 0.46 ) }
    dend_37 { pt3dadd( 11.9661, -361.033, -65.143, 0.46 ) }
    dend_37 { pt3dadd( 11.307, -367.446, -66.0878, 0.46 ) }
    dend_37 { pt3dadd( 11.2274, -368.138, -66.1948, 0.46 ) }
    dend_37 { pt3dadd( 10.5584, -372.974, -66.9767, 0.92 ) }
    dend_37 { pt3dadd( 10.4532, -373.663, -67.0776, 0.92 ) }
    dend_37 { pt3dadd( 9.71165, -378.016, -67.6629, 0.46 ) }
    dend_37 { pt3dadd( 9.55789, -378.699, -67.7443, 0.46 ) }
    dend_37 { pt3dadd( 8.75263, -381.579, -68.0063, 0.46 ) }
    dend_37 { pt3dadd( 8.60585, -382.115, -68.0508, 0.46 ) }
    dend_37 { pt3dadd( 7.37759, -386.308, -68.3878, 0.92 ) }
    dend_37 { pt3dadd( 7.18069, -386.982, -68.4355, 0.92 ) }
    dend_37 { pt3dadd( 5.37565, -393.089, -68.7693, 0.46 ) }
    dend_37 { pt3dadd( 2.96974, -401.403, -69.1977, 0.46 ) }
    dend_37 { pt3dadd( 2.37047, -403.519, -69.2962, 0.92 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 51.9004, -70.862, 6.88654, 0.92 ) }
    dend_32 { pt3dadd( 58.3615, -83.1146, 10.3971, 0.92 ) }
    dend_32 { pt3dadd( 66.4513, -93.956, 14.8311, 0.92 ) }
    dend_32 { pt3dadd( 72.9135, -106.411, 17.573, 0.92 ) }
    dend_32 { pt3dadd( 79.2221, -119.253, 17.9121, 0.92 ) }
    dend_32 { pt3dadd( 86.0341, -131.712, 16.2816, 0.92 ) }
    dend_32 { pt3dadd( 93.1745, -144.078, 16.8689, 0.92 ) }
    dend_32 { pt3dadd( 99.7714, -156.77, 16.8071, 0.92 ) }
    dend_32 { pt3dadd( 105.563, -169.784, 15.3609, 0.92 ) }
    dend_32 { pt3dadd( 110.77, -182.573, 11.625, 0.92 ) }
    dend_32 { pt3dadd( 117.826, -194.032, 6.93972, 0.92 ) }
    dend_32 { pt3dadd( 122.429, -205.917, 0.530705, 0.92 ) }
    dend_32 { pt3dadd( 128.082, -218.439, -3.41292, 0.92 ) }
    dend_32 { pt3dadd( 132.423, -231.966, -5.35778, 0.92 ) }
    dend_32 { pt3dadd( 138.255, -245.045, -5.18034, 0.92 ) }
    dend_32 { pt3dadd( 144.728, -257.664, -3.31774, 0.92 ) }
    dend_32 { pt3dadd( 150.604, -270.707, -3.93432, 0.92 ) }
    dend_32 { pt3dadd( 154.679, -284.469, -3.90939, 0.92 ) }
    dend_32 { pt3dadd( 161.518, -296.744, -6.48108, 0.92 ) }
    dend_32 { pt3dadd( 167.751, -309.482, -8.3532, 0.92 ) }
    dend_32 { pt3dadd( 174.422, -322.134, -8.42463, 0.92 ) }
    dend_32 { pt3dadd( 181.43, -334.534, -7.23214, 0.92 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 47/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 51.9004, -70.862, 6.88654, 0.46 ) }
    dend_29 { pt3dadd( 62.6406, -76.6257, 4.81909, 0.92 ) }
    dend_29 { pt3dadd( 73.9744, -81.3795, 3.69386, 0.92 ) }
    dend_29 { pt3dadd( 85.7618, -84.2382, 1.57135, 0.92 ) }
    dend_29 { pt3dadd( 97.2302, -88.7367, 0.908908, 0.92 ) }
    dend_29 { pt3dadd( 109.098, -91.8907, -0.0443454, 0.92 ) }
    dend_29 { pt3dadd( 121.16, -94.2331, -0.75666, 0.92 ) }
    dend_29 { pt3dadd( 132.871, -96.4426, -3.82644, 0.92 ) }
    dend_29 { pt3dadd( 144.788, -96.971, -6.81428, 0.92 ) }
    dend_29 { pt3dadd( 156.056, -97.3749, -11.7234, 0.92 ) }
    dend_29 { pt3dadd( 167.139, -97.101, -17.0416, 0.92 ) }
    dend_29 { pt3dadd( 177.911, -98.063, -22.8989, 0.92 ) }
    dend_29 { pt3dadd( 188.135, -98.1294, -29.7299, 0.92 ) }
    dend_29 { pt3dadd( 198.43, -98.457, -36.4474, 0.92 ) }
    dend_29 { pt3dadd( 207.987, -101.042, -43.7651, 0.92 ) }
    dend_29 { pt3dadd( 216.903, -105.292, -51.1536, 0.92 ) }
    dend_29 { pt3dadd( 226.166, -109.366, -58.2026, 0.92 ) }
    dend_29 { pt3dadd( 237.428, -110.882, -62.9142, 0.92 ) }
    dend_29 { pt3dadd( 248.029, -112.212, -69.0102, 0.92 ) }
    dend_29 { pt3dadd( 259.724, -113.652, -72.5402, 0.92 ) }
    dend_29 { pt3dadd( 271.556, -115.592, -75.3054, 0.92 ) }
    dend_29 { pt3dadd( 283.324, -115.288, -78.8583, 0.92 ) }
    dend_29 { pt3dadd( 295.124, -115.854, -82.2757, 0.92 ) }
    dend_29 { pt3dadd( 306.507, -115.763, -86.9231, 0.92 ) }
    dend_29 { pt3dadd( 318.396, -114.888, -89.9462, 0.92 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 211.375, -278.162, 98.41, 0.92 ) }
    dend_27 { pt3dadd( 213.703, -285.256, 100.608, 0.92 ) }
    dend_27 { pt3dadd( 215.67, -291.988, 103.942, 0.92 ) }
    dend_27 { pt3dadd( 218.815, -298.287, 107.184, 0.92 ) }
    dend_27 { pt3dadd( 222.492, -303.941, 110.957, 0.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 211.375, -278.162, 98.41, 0.46 ) }
    dend_26 { pt3dadd( 218.692, -283.495, 100.941, 0.92 ) }
    dend_26 { pt3dadd( 225.748, -288.271, 104.887, 0.92 ) }
    dend_26 { pt3dadd( 233.337, -292.493, 108.418, 0.92 ) }
    dend_26 { pt3dadd( 241.163, -295.486, 112.569, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.5494, 21.4667, 2.96961, 0.46 ) }
    dend_16 { pt3dadd( -18.5974, 23.8081, 3.08671, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -15.5494, 21.4667, 2.96961, 0.46 ) }
    dend_11 { pt3dadd( -14.8537, 22.1434, 3.72892, 0.46 ) }
    dend_11 { pt3dadd( -13.8321, 22.8721, 4.78581, 0.92 ) }
    dend_11 { pt3dadd( -13.2762, 23.2778, 5.28467, 0.46 ) }
    dend_11 { pt3dadd( -12.5103, 23.8552, 5.94959, 0.92 ) }
    dend_11 { pt3dadd( -12.2621, 24.0471, 6.14675, 0.92 ) }
    dend_11 { pt3dadd( -11.2821, 24.837, 6.88508, 0.46 ) }
    dend_11 { pt3dadd( -10.4704, 25.4175, 7.48573, 0.92 ) }
    dend_11 { pt3dadd( -9.22756, 26.2234, 8.30447, 0.46 ) }
    dend_11 { pt3dadd( -9.01647, 26.3697, 8.42244, 0.46 ) }
    dend_11 { pt3dadd( -8.20813, 27.0493, 8.82804, 0.92 ) }
    dend_11 { pt3dadd( -7.94965, 27.2796, 8.94501, 0.92 ) }
    dend_11 { pt3dadd( -4.33578, 30.3231, 13.0727, 0.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 97/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -29.1049, 8.80342, 6.02701, 0.92 ) }
    dend_5 { pt3dadd( -34.8252, 6.77414, 7.89874, 0.92 ) }
    dend_5 { pt3dadd( -40.7309, 5.93724, 10.0412, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( -46.5763, 4.9098, 12.2697, 0.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -29.1049, 8.80342, 6.02701, 0.46 ) }
    dend_2 { pt3dadd( -38.1783, 5.3253, 8.49547, 0.92 ) }
    dend_2 { pt3dadd( -47.1161, 1.06076, 10.1607, 0.92 ) }
    dend_2 { pt3dadd( -55.8101, -4.00655, 10.291, 0.92 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -46.4679, 40.6052, -23.5964, 0.46 ) }
    dend_57 { pt3dadd( -47.6249, 42.329, -23.8749, 0.46 ) }
    dend_57 { pt3dadd( -48.6714, 43.8268, -24.1683, 0.46 ) }
    dend_57 { pt3dadd( -49.3086, 44.8198, -24.3413, 0.92 ) }
    dend_57 { pt3dadd( -50.2794, 46.4307, -24.6501, 0.46 ) }
    dend_57 { pt3dadd( -50.4921, 46.7968, -24.739, 0.46 ) }
    dend_57 { pt3dadd( -51.2469, 48.2359, -25.1039, 0.46 ) }
    dend_57 { pt3dadd( -51.4985, 48.7002, -25.2391, 0.46 ) }
    dend_57 { pt3dadd( -52.3647, 50.0913, -25.6812, 0.92 ) }
    dend_57 { pt3dadd( -53.533, 51.8127, -26.2574, 0.46 ) }
    dend_57 { pt3dadd( -54.9726, 53.6595, -26.8644, 0.46 ) }
    dend_57 { pt3dadd( -55.8522, 54.6871, -27.2071, 0.92 ) }
    dend_57 { pt3dadd( -58.5965, 57.5236, -28.1244, 0.46 ) }
    dend_57 { pt3dadd( -60.1279, 58.9795, -28.6095, 0.46 ) }
    dend_57 { pt3dadd( -60.4447, 59.2549, -28.7036, 0.46 ) }
    dend_57 { pt3dadd( -61.7961, 60.4088, -29.0366, 0.92 ) }
    dend_57 { pt3dadd( -63.4863, 62.0329, -29.4725, 0.46 ) }
    dend_57 { pt3dadd( -64.4988, 63.3856, -29.7862, 0.92 ) }
    dend_57 { pt3dadd( -65.9115, 66.1561, -30.3398, 0.46 ) }
    dend_57 { pt3dadd( -65.9179, 66.1736, -30.3429, 0.46 ) }
    dend_57 { pt3dadd( -66.3721, 67.7421, -30.58, 0.92 ) }
    dend_57 { pt3dadd( -67.164, 71.3567, -31.0893, 0.46 ) }
    dend_57 { pt3dadd( -67.9672, 75.9169, -31.6661, 0.46 ) }
    dend_57 { pt3dadd( -67.9718, 75.9445, -31.6693, 0.46 ) }
    dend_57 { pt3dadd( -68.5311, 78.8739, -31.9888, 0.46 ) }
    dend_57 { pt3dadd( -69.025, 81.0496, -32.2193, 0.92 ) }
    dend_57 { pt3dadd( -69.9518, 84.0903, -32.4978, 0.46 ) }
    dend_57 { pt3dadd( -69.9623, 84.1165, -32.4994, 0.46 ) }
    dend_57 { pt3dadd( -70.7937, 85.7962, -32.5809, 0.92 ) }
    dend_57 { pt3dadd( -72.0545, 88.2265, -32.6824, 0.46 ) }
    dend_57 { pt3dadd( -72.3221, 88.7036, -32.6967, 0.46 ) }
    dend_57 { pt3dadd( -74.6853, 92.8126, -32.7954, 0.46 ) }
    dend_57 { pt3dadd( -74.8959, 93.1932, -32.7957, 0.46 ) }
    dend_57 { pt3dadd( -75.9497, 95.1694, -32.8157, 0.92 ) }
    dend_57 { pt3dadd( -77.3625, 97.8463, -32.8583, 0.46 ) }
    dend_57 { pt3dadd( -77.714, 98.4509, -32.8809, 0.92 ) }
    dend_57 { pt3dadd( -78.0114, 98.9079, -32.9153, 0.92 ) }
    dend_57 { pt3dadd( -80.0727, 101.615, -33.2827, 0.46 ) }
    dend_57 { pt3dadd( -81.6986, 103.303, -33.6139, 0.46 ) }
    dend_57 { pt3dadd( -82.4106, 103.745, -33.7972, 0.92 ) }
    dend_57 { pt3dadd( -85.1389, 104.537, -34.5452, 0.46 ) }
    dend_57 { pt3dadd( -85.5464, 104.542, -34.6659, 0.46 ) }
    dend_57 { pt3dadd( -86.5624, 104.391, -34.975, 0.46 ) }
    dend_57 { pt3dadd( -88.7495, 103.849, -35.7103, 0.92 ) }
    dend_57 { pt3dadd( -90.7743, 103.299, -36.4294, 0.46 ) }
    dend_57 { pt3dadd( -91.1631, 103.218, -36.5799, 0.46 ) }
    dend_57 { pt3dadd( -94.115, 102.947, -37.933, 0.92 ) }
    dend_57 { pt3dadd( -96.1333, 103.026, -38.9871, 0.46 ) }
    dend_57 { pt3dadd( -97.7301, 103.491, -39.999, 0.92 ) }
    dend_57 { pt3dadd( -98.1047, 103.724, -40.3071, 0.92 ) }
    dend_57 { pt3dadd( -99.6628, 105.188, -42.0514, 0.46 ) }
    dend_57 { pt3dadd( -101.133, 107.062, -44.077, 0.46 ) }
    dend_57 { pt3dadd( -101.169, 107.122, -44.1378, 0.46 ) }
    dend_57 { pt3dadd( -102.517, 109.643, -46.7017, 0.46 ) }
    dend_57 { pt3dadd( -103.654, 111.929, -49.0278, 0.46 ) }
    dend_57 { pt3dadd( -104.683, 114.14, -51.2363, 1.38 ) }
    dend_57 { pt3dadd( -105.602, 116.334, -53.3605, 0.46 ) }
    dend_57 { pt3dadd( -105.611, 116.354, -53.3785, 0.46 ) }
    dend_57 { pt3dadd( -106.207, 117.625, -54.414, 0.46 ) }
    dend_57 { pt3dadd( -106.215, 117.639, -54.4232, 0.46 ) }
    dend_57 { pt3dadd( -108.072, 120.427, -55.6913, 0.46 ) }
    dend_57 { pt3dadd( -108.083, 120.441, -55.6955, 0.46 ) }
    dend_57 { pt3dadd( -109.257, 121.871, -55.9725, 0.92 ) }
    dend_57 { pt3dadd( -111.52, 124.688, -56.2107, 0.46 ) }
    dend_57 { pt3dadd( -113.236, 126.853, -56.2215, 0.46 ) }
    dend_57 { pt3dadd( -114.281, 128.186, -56.1454, 0.92 ) }
    dend_57 { pt3dadd( -116.358, 130.8, -55.8167, 0.46 ) }
    dend_57 { pt3dadd( -117.685, 132.516, -55.5333, 0.92 ) }
    dend_57 { pt3dadd( -120.358, 136.153, -54.7903, 0.46 ) }
    dend_57 { pt3dadd( -120.666, 136.603, -54.6768, 0.46 ) }
    dend_57 { pt3dadd( -122.25, 138.906, -54.0417, 0.46 ) }
    dend_57 { pt3dadd( -123.036, 140.036, -53.7437, 0.92 ) }
    dend_57 { pt3dadd( -125.728, 143.794, -52.7573, 0.46 ) }
    dend_57 { pt3dadd( -126.412, 144.719, -52.5156, 0.92 ) }
    dend_57 { pt3dadd( -130.302, 149.86, -51.187, 0.46 ) }
    dend_57 { pt3dadd( -133.78, 154.401, -50.0316, 0.46 ) }
    dend_57 { pt3dadd( -136.028, 157.301, -49.3152, 0.46 ) }
    dend_57 { pt3dadd( -136.45, 157.844, -49.1853, 0.92 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -46.4679, 40.6052, -23.5964, 0.46 ) }
    dend_56 { pt3dadd( -46.2469, 45.6935, -24.4752, 0.46 ) }
    dend_56 { pt3dadd( -46.1508, 47.7084, -24.7752, 0.46 ) }
    dend_56 { pt3dadd( -46.1097, 48.8409, -24.9774, 0.92 ) }
    dend_56 { pt3dadd( -46.0419, 51.7389, -25.5318, 0.46 ) }
    dend_56 { pt3dadd( -45.9048, 55.205, -26.271, 0.46 ) }
    dend_56 { pt3dadd( -45.8846, 55.6461, -26.3688, 0.46 ) }
    dend_56 { pt3dadd( -45.5411, 60.6078, -27.5691, 0.46 ) }
    dend_56 { pt3dadd( -45.3082, 63.4779, -28.2835, 0.46 ) }
    dend_56 { pt3dadd( -45.2691, 63.9045, -28.3917, 0.46 ) }
    dend_56 { pt3dadd( -44.9745, 67.1371, -29.2056, 0.46 ) }
    dend_56 { pt3dadd( -44.9311, 67.6875, -29.3469, 0.46 ) }
    dend_56 { pt3dadd( -44.5597, 71.1696, -30.2694, 0.46 ) }
    dend_56 { pt3dadd( -44.4925, 71.5876, -30.3935, 0.46 ) }
    dend_56 { pt3dadd( -44.3438, 72.2839, -30.5384, 0.92 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 98/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -7.77506, -28.7929, -26.1891, 0.46 ) }
    dend_54 { pt3dadd( -6.90166, -27.9513, -26.8644, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( -5.83326, -26.9219, -27.6904, 0.92 ) }
    dend_54 { pt3dadd( -4.47484, -25.6129, -28.7407, 0.46 ) }
    dend_54 { pt3dadd( -3.71395, -24.8798, -29.329, 0.46 ) }
    dend_54 { pt3dadd( -2.88824, -24.0841, -29.9674, 0.92 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -7.77506, -28.7929, -26.1891, 0.46 ) }
    dend_51 { pt3dadd( -9.74203, -29.2748, -28.3037, 0.46 ) }
    dend_51 { pt3dadd( -11.2224, -29.665, -29.7909, 0.46 ) }
    dend_51 { pt3dadd( -12.8045, -30.2675, -31.1698, 0.92 ) }
    dend_51 { pt3dadd( -14.1561, -30.8508, -32.1941, 0.46 ) }
    dend_51 { pt3dadd( -14.5828, -31.0656, -32.4838, 0.46 ) }
    dend_51 { pt3dadd( -16.108, -31.9002, -33.4526, 0.46 ) }
    dend_51 { pt3dadd( -18.0238, -32.9514, -34.5541, 0.92 ) }
    dend_51 { pt3dadd( -20.3768, -34.409, -35.7405, 0.46 ) }
    dend_51 { pt3dadd( -21.5332, -35.1242, -36.2318, 0.92 ) }
    dend_51 { pt3dadd( -24.2015, -36.6114, -37.2542, 0.46 ) }
    dend_51 { pt3dadd( -24.8037, -36.9215, -37.4789, 1.38 ) }
    dend_51 { pt3dadd( -26.721, -37.7755, -38.1519, 0.46 ) }
    dend_51 { pt3dadd( -26.7381, -37.7822, -38.1575, 0.46 ) }
    dend_51 { pt3dadd( -29.6037, -38.7946, -39.0594, 0.92 ) }
    dend_51 { pt3dadd( -31.6501, -39.4394, -39.6619, 0.46 ) }
    dend_51 { pt3dadd( -33.2465, -40.034, -40.0679, 0.46 ) }
    dend_51 { pt3dadd( -33.75, -40.2438, -40.1879, 0.46 ) }
    dend_51 { pt3dadd( -35.3793, -41.0588, -40.5158, 0.92 ) }
    dend_51 { pt3dadd( -38.8271, -42.9814, -41.1661, 0.46 ) }
    dend_51 { pt3dadd( -40.8004, -44.2372, -41.5008, 1.38 ) }
    dend_51 { pt3dadd( -44.1277, -46.6092, -41.9775, 0.46 ) }
    dend_51 { pt3dadd( -44.5687, -46.9501, -42.0424, 0.46 ) }
    dend_51 { pt3dadd( -46.4531, -48.4873, -42.3604, 0.92 ) }
    dend_51 { pt3dadd( -47.1426, -49.0909, -42.4811, 1.38 ) }
    dend_51 { pt3dadd( -47.4666, -49.3791, -42.5312, 1.38 ) }
    dend_51 { pt3dadd( -50.2524, -51.9644, -42.9729, 0.46 ) }
    dend_51 { pt3dadd( -50.9143, -52.5373, -43.0677, 0.46 ) }
    dend_51 { pt3dadd( -51.8968, -53.4155, -43.2282, 1.38 ) }
    dend_51 { pt3dadd( -55.2685, -56.4305, -43.7918, 0.46 ) }
    dend_51 { pt3dadd( -56.671, -57.6831, -44.0469, 1.38 ) }
    dend_51 { pt3dadd( -59.2684, -59.8117, -44.639, 0.46 ) }
    dend_51 { pt3dadd( -60.7192, -60.9396, -44.9686, 1.38 ) }
    dend_51 { pt3dadd( -62.5932, -62.3807, -45.4138, 0.46 ) }
    dend_51 { pt3dadd( -63.7064, -63.2501, -45.7385, 0.92 ) }
    dend_51 { pt3dadd( -65.3626, -64.4653, -46.3856, 0.46 ) }
    dend_51 { pt3dadd( -67.7417, -66.1619, -47.4732, 0.46 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 123.941, -224.955, -101.435, 0.46 ) }
    dend_45 { pt3dadd( 124.997, -229.026, -100.956, 0.46 ) }
    dend_45 { pt3dadd( 125.659, -231.305, -100.751, 0.46 ) }
    dend_45 { pt3dadd( 126.129, -232.78, -100.644, 0.92 ) }
    dend_45 { pt3dadd( 126.988, -235.237, -100.501, 0.46 ) }
    dend_45 { pt3dadd( 127.481, -236.453, -100.463, 0.92 ) }
    dend_45 { pt3dadd( 129.09, -240.068, -100.414, 0.46 ) }
    dend_45 { pt3dadd( 129.683, -241.229, -100.45, 0.92 ) }
    dend_45 { pt3dadd( 130.291, -242.39, -100.491, 0.46 ) }
    dend_45 { pt3dadd( 131.238, -244.111, -100.558, 0.92 ) }
    dend_45 { pt3dadd( 133.236, -247.805, -100.699, 0.46 ) }
    dend_45 { pt3dadd( 134.135, -249.547, -100.76, 0.92 ) }
    dend_45 { pt3dadd( 136.501, -254.223, -100.916, 0.46 ) }
    dend_45 { pt3dadd( 137.939, -257.101, -100.98, 0.46 ) }
    dend_45 { pt3dadd( 138.925, -259.11, -101.007, 0.92 ) }
    dend_45 { pt3dadd( 140.506, -262.439, -101.017, 0.46 ) }
    dend_45 { pt3dadd( 141.949, -265.616, -100.991, 0.46 ) }
    dend_45 { pt3dadd( 142.116, -265.987, -100.988, 0.92 ) }
    dend_45 { pt3dadd( 143.809, -269.6, -100.953, 0.46 ) }
    dend_45 { pt3dadd( 143.817, -269.615, -100.952, 0.46 ) }
    dend_45 { pt3dadd( 144.001, -269.977, -100.933, 0.92 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 123.941, -224.955, -101.435, 0.46 ) }
    dend_44 { pt3dadd( 126.374, -227.302, -102.956, 0.46 ) }
    dend_44 { pt3dadd( 127.923, -228.713, -103.866, 0.46 ) }
    dend_44 { pt3dadd( 129.174, -229.99, -104.593, 0.46 ) }
    dend_44 { pt3dadd( 129.44, -230.291, -104.739, 0.46 ) }
    dend_44 { pt3dadd( 131.229, -232.366, -105.663, 0.92 ) }
    dend_44 { pt3dadd( 131.494, -232.677, -105.79, 0.92 ) }
    dend_44 { pt3dadd( 132.738, -234.161, -106.374, 0.46 ) }
    dend_44 { pt3dadd( 134.681, -236.418, -107.175, 0.46 ) }
    dend_44 { pt3dadd( 137.098, -239.214, -108.064, 0.46 ) }
    dend_44 { pt3dadd( 137.75, -239.956, -108.288, 0.92 ) }
    dend_44 { pt3dadd( 140.412, -242.996, -109.129, 0.46 ) }
    dend_44 { pt3dadd( 142.037, -244.798, -109.622, 0.46 ) }
    dend_44 { pt3dadd( 143.538, -246.416, -110.058, 0.46 ) }
    dend_44 { pt3dadd( 144.679, -247.597, -110.373, 0.92 ) }
    dend_44 { pt3dadd( 147.029, -249.987, -110.992, 0.46 ) }
    dend_44 { pt3dadd( 148.207, -251.122, -111.3, 0.92 ) }
    dend_44 { pt3dadd( 150.468, -253.192, -111.876, 0.46 ) }
    dend_44 { pt3dadd( 151.207, -253.831, -112.077, 1.38 ) }
    dend_44 { pt3dadd( 152.817, -255.188, -112.569, 0.46 ) }
    dend_44 { pt3dadd( 154.162, -256.272, -113.003, 0.92 ) }
    dend_44 { pt3dadd( 156.266, -257.839, -113.71, 0.46 ) }
    dend_44 { pt3dadd( 158.955, -259.697, -114.613, 0.46 ) }
    dend_44 { pt3dadd( 161.439, -261.285, -115.45, 0.46 ) }
    dend_44 { pt3dadd( 162.903, -262.169, -115.976, 0.46 ) }
    dend_44 { pt3dadd( 164.269, -262.932, -116.517, 0.92 ) }
    dend_44 { pt3dadd( 167.321, -264.647, -117.787, 0.46 ) }
    dend_44 { pt3dadd( 168.363, -265.23, -118.232, 0.92 ) }
    dend_44 { pt3dadd( 170.0, -266.041, -118.95, 0.46 ) }
    dend_44 { pt3dadd( 172.319, -267.094, -119.976, 0.46 ) }
    dend_44 { pt3dadd( 174.128, -267.807, -120.824, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 93/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 181.43, -334.534, -7.23214, 0.92 ) }
    dend_34 { pt3dadd( 185.594, -344.104, -7.23571, 0.92 ) }
    dend_34 { pt3dadd( 189.488, -353.687, -5.86516, 0.92 ) }
    dend_34 { pt3dadd( 194.774, -362.621, -5.12253, 0.92 ) }
    dend_34 { pt3dadd( 200.932, -370.984, -5.23133, 0.92 ) }
    dend_34 { pt3dadd( 205.664, -380.173, -3.92742, 0.92 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 99/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 181.43, -334.534, -7.23214, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( 186.092, -343.427, -7.99376, 0.92 ) }
    dend_33 { pt3dadd( 189.689, -352.697, -9.69699, 0.92 ) }
    dend_33 { pt3dadd( 192.258, -362.198, -11.9617, 0.92 ) }
    dend_33 { pt3dadd( 195.658, -371.37, -14.4178, 0.92 ) }
    dend_33 { pt3dadd( 199.496, -380.097, -17.6515, 0.92 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 5/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 318.396, -114.888, -89.9462, 0.92 ) }
    dend_31 { pt3dadd( 325.759, -115.901, -93.384, 0.92 ) }
    dend_31 { pt3dadd( 333.725, -116.96, -94.9448, 0.92 ) }
    dend_31 { pt3dadd( 341.7, -116.698, -96.7531, 0.92 ) }
    dend_31 { pt3dadd( 349.571, -116.404, -98.97, 0.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 318.396, -114.888, -89.9462, 0.46 ) }
    dend_30 { pt3dadd( 327.948, -116.439, -91.417, 0.92 ) }
    dend_30 { pt3dadd( 337.19, -119.295, -92.9908, 0.92 ) }
    dend_30 { pt3dadd( 346.468, -120.979, -95.637, 0.92 ) }
    dend_30 { pt3dadd( 355.142, -122.667, -99.8773, 0.92 ) }
    dend_30 { pt3dadd( 363.762, -122.963, -104.51, 0.92 ) }
    dend_30 { pt3dadd( 372.527, -121.438, -108.58, 0.92 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 17/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -18.5974, 23.8081, 3.08671, 0.92 ) }
    dend_18 { pt3dadd( -19.1546, 26.8645, 2.31079, 0.92 ) }
    dend_18 { pt3dadd( -19.5404, 29.2384, 1.69384, 1.38 ) }
    dend_18 { pt3dadd( -20.5311, 35.2274, 0.0416804, 0.92 ) }
    dend_18 { pt3dadd( -20.88, 37.5792, -0.673616, 1.38 ) }
    dend_18 { pt3dadd( -21.4661, 42.2409, -2.19957, 0.92 ) }
    dend_18 { pt3dadd( -21.901, 46.3471, -3.63588, 0.92 ) }
    dend_18 { pt3dadd( -21.9414, 46.9109, -3.86028, 0.92 ) }
    dend_18 { pt3dadd( -22.0958, 49.9876, -5.25223, 0.92 ) }
    dend_18 { pt3dadd( -22.168, 52.2575, -6.39278, 0.92 ) }
    dend_18 { pt3dadd( -22.2996, 56.0676, -8.40517, 1.38 ) }
    dend_18 { pt3dadd( -22.4231, 58.8738, -9.92669, 0.92 ) }
    dend_18 { pt3dadd( -22.5998, 62.283, -11.7529, 1.38 ) }
    dend_18 { pt3dadd( -22.8539, 66.9264, -14.0341, 0.92 ) }
    dend_18 { pt3dadd( -22.9836, 69.2343, -15.0554, 0.92 ) }
    dend_18 { pt3dadd( -23.0283, 69.8, -15.2741, 0.92 ) }
    dend_18 { pt3dadd( -23.1295, 70.9396, -15.6876, 1.38 ) }
    dend_18 { pt3dadd( -23.447, 74.4467, -16.7996, 0.92 ) }
    dend_18 { pt3dadd( -23.6607, 77.1768, -17.4775, 0.92 ) }
    dend_18 { pt3dadd( -23.8168, 79.5855, -17.8708, 1.38 ) }
    dend_18 { pt3dadd( -23.9691, 81.994, -18.1846, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -18.5974, 23.8081, 3.08671, 0.46 ) }
    dend_17 { pt3dadd( -21.5165, 21.6735, 3.38032, 0.46 ) }
    dend_17 { pt3dadd( -22.5887, 20.7715, 3.45547, 0.92 ) }
    dend_17 { pt3dadd( -22.9337, 20.4812, 3.47966, 0.92 ) }
    dend_17 { pt3dadd( -25.82, 18.053, 3.68196, 0.46 ) }
    dend_17 { pt3dadd( -28.2728, 15.9895, 3.85388, 1.38 ) }
    dend_17 { pt3dadd( -29.9706, 14.5611, 3.97288, 0.46 ) }
    dend_17 { pt3dadd( -32.4034, 12.8281, 4.00271, 1.38 ) }
    dend_17 { pt3dadd( -40.4705, 7.28714, 4.39547, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.33578, 30.3231, 13.0727, 0.92 ) }
    dend_15 { pt3dadd( 2.70618, 35.9147, 18.4505, 0.92 ) }
    dend_15 { pt3dadd( 8.13369, 42.7868, 24.2717, 0.92 ) }
    dend_15 { pt3dadd( 13.8322, 48.4639, 30.9902, 0.92 ) }
    dend_15 { pt3dadd( 20.2224, 53.7761, 37.3606, 0.92 ) }
    dend_15 { pt3dadd( 27.3992, 59.1666, 42.7552, 0.92 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.33578, 30.3231, 13.0727, 0.46 ) }
    dend_12 { pt3dadd( -0.459547, 33.402, 17.7792, 0.92 ) }
    dend_12 { pt3dadd( 2.94184, 36.6792, 22.7196, 0.92 ) }
    dend_12 { pt3dadd( 6.01881, 40.4304, 27.5511, 0.92 ) }
    dend_12 { pt3dadd( 10.1906, 43.1178, 32.2324, 0.92 ) }
    dend_12 { pt3dadd( 14.4774, 45.1335, 37.1246, 0.92 ) }
    dend_12 { pt3dadd( 18.7391, 48.4048, 41.3502, 0.92 ) }
    dend_12 { pt3dadd( 22.9356, 52.2678, 45.1448, 0.92 ) }
    dend_12 { pt3dadd( 26.5521, 55.815, 49.7437, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 62/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -46.5763, 4.9098, 12.2697, 0.92 ) }
    dend_7 { pt3dadd( -55.6962, 2.85393, 15.3388, 0.92 ) }
    dend_7 { pt3dadd( -64.8038, -0.281643, 17.4124, 0.92 ) }
    dend_7 { pt3dadd( -73.9068, -2.41906, 20.4788, 0.92 ) }
    dend_7 { pt3dadd( -83.3621, -3.583, 22.906, 0.92 ) }
    dend_7 { pt3dadd( -92.4347, -3.22101, 26.6632, 0.92 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -46.5763, 4.9098, 12.2697, 0.46 ) }
    dend_6 { pt3dadd( -55.4676, 2.88546, 15.4128, 0.92 ) }
    dend_6 { pt3dadd( -64.5454, 0.226521, 17.3282, 0.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -55.8101, -4.00655, 10.291, 0.92 ) }
    dend_4 { pt3dadd( -64.1226, -7.71326, 13.8664, 0.92 ) }
    dend_4 { pt3dadd( -71.5844, -11.8036, 18.7244, 0.92 ) }
    dend_4 { pt3dadd( -80.028, -15.346, 22.1435, 0.92 ) }
    dend_4 { pt3dadd( -89.0646, -18.1785, 24.4837, 0.92 ) }
    dend_4 { pt3dadd( -97.5486, -21.9181, 27.5822, 0.92 ) }
    dend_4 { pt3dadd( -105.491, -25.0649, 32.3347, 0.92 ) }
    dend_4 { pt3dadd( -114.11, -28.1649, 35.7229, 0.92 ) }
    dend_4 { pt3dadd( -123.268, -29.8683, 38.5782, 0.92 ) }
    dend_4 { pt3dadd( -132.466, -32.7586, 40.0374, 0.92 ) }
    dend_4 { pt3dadd( -141.963, -34.9115, 40.1243, 0.92 ) }
    dend_4 { pt3dadd( -151.373, -37.35, 39.5392, 0.92 ) }
    dend_4 { pt3dadd( -160.588, -39.6094, 37.3665, 0.92 ) }
    dend_4 { pt3dadd( -169.927, -41.2354, 35.1638, 0.92 ) }
    dend_4 { pt3dadd( -179.484, -42.1371, 33.567, 0.92 ) }
    dend_4 { pt3dadd( -188.811, -42.489, 30.8046, 0.92 ) }
    dend_4 { pt3dadd( -197.716, -42.6108, 26.8659, 0.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 88/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -55.8101, -4.00655, 10.291, 0.46 ) }
    dend_3 { pt3dadd( -66.8797, -9.52389, 12.7609, 0.92 ) }
    dend_3 { pt3dadd( -76.4227, -16.0741, 17.8919, 0.92 ) }
    dend_3 { pt3dadd( -86.9402, -22.3479, 20.9986, 0.92 ) }
    dend_3 { pt3dadd( -97.4732, -28.1932, 24.7954, 0.92 ) }
    dend_3 { pt3dadd( -108.523, -34.0196, 26.5383, 0.92 ) }
    dend_3 { pt3dadd( -118.469, -41.8281, 26.8054, 0.92 ) }
    dend_3 { pt3dadd( -129.277, -48.3326, 26.8458, 0.92 ) }
    dend_3 { pt3dadd( -139.863, -54.4618, 29.9947, 0.92 ) }
    dend_3 { pt3dadd( -148.538, -61.5298, 35.9714, 0.92 ) }
    dend_3 { pt3dadd( -155.499, -71.3698, 40.154, 0.92 ) }
    dend_3 { pt3dadd( -161.489, -82.3268, 42.8823, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( -166.346, -94.0299, 44.6992, 0.92 ) }
    dend_3 { pt3dadd( -170.772, -105.731, 47.4779, 0.92 ) }
    dend_3 { pt3dadd( -176.807, -116.286, 51.4291, 0.92 ) }
    dend_3 { pt3dadd( -180.693, -127.022, 57.2643, 0.92 ) }
    dend_3 { pt3dadd( -183.292, -137.615, 64.0267, 0.92 ) }
    dend_3 { pt3dadd( -183.819, -147.281, 72.4363, 0.92 ) }
    dend_3 { pt3dadd( -181.826, -155.294, 82.192, 0.92 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -67.7417, -66.1619, -47.4732, 0.46 ) }
    dend_53 { pt3dadd( -70.9889, -69.0243, -47.3631, 0.46 ) }
    dend_53 { pt3dadd( -72.1702, -70.141, -47.3908, 0.92 ) }
    dend_53 { pt3dadd( -76.5431, -74.3607, -47.6163, 0.46 ) }
    dend_53 { pt3dadd( -76.9852, -74.8163, -47.6474, 0.46 ) }
    dend_53 { pt3dadd( -77.814, -75.6704, -47.7058, 0.92 ) }
    dend_53 { pt3dadd( -78.3856, -76.2594, -47.746, 0.92 ) }
    dend_53 { pt3dadd( -81.0476, -79.1537, -48.1339, 0.46 ) }
    dend_53 { pt3dadd( -81.3773, -79.5296, -48.2008, 0.46 ) }
    dend_53 { pt3dadd( -82.439, -81.1772, -48.5988, 0.92 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 17/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -67.7417, -66.1619, -47.4732, 0.46 ) }
    dend_52 { pt3dadd( -68.6442, -65.9189, -48.057, 0.46 ) }
    dend_52 { pt3dadd( -69.0742, -65.8938, -48.2541, 0.46 ) }
    dend_52 { pt3dadd( -70.0839, -65.9088, -48.6893, 0.92 ) }
    dend_52 { pt3dadd( -70.4233, -65.9145, -48.8346, 0.92 ) }
    dend_52 { pt3dadd( -72.0435, -66.0395, -49.6118, 0.46 ) }
    dend_52 { pt3dadd( -72.3646, -66.0789, -49.7897, 0.46 ) }
    dend_52 { pt3dadd( -75.9464, -66.6693, -51.9169, 0.46 ) }
    dend_52 { pt3dadd( -76.7678, -66.8759, -52.4185, 0.92 ) }
    dend_52 { pt3dadd( -77.1562, -66.9907, -52.6643, 0.92 ) }
    dend_52 { pt3dadd( -79.1019, -67.7177, -53.8976, 0.46 ) }
    dend_52 { pt3dadd( -80.4066, -68.3149, -54.727, 0.92 ) }
    dend_52 { pt3dadd( -80.8671, -68.5536, -55.0221, 0.92 ) }
    dend_52 { pt3dadd( -83.1383, -69.9045, -56.5423, 0.46 ) }
    dend_52 { pt3dadd( -83.5885, -70.1744, -56.8275, 0.46 ) }
    dend_52 { pt3dadd( -85.1714, -71.1218, -57.7369, 0.46 ) }
    dend_52 { pt3dadd( -85.4468, -71.3194, -57.8879, 0.46 ) }
    dend_52 { pt3dadd( -86.7088, -72.5226, -58.7085, 0.92 ) }
    dend_52 { pt3dadd( -86.9926, -72.8349, -58.9308, 0.92 ) }
    dend_52 { pt3dadd( -88.185, -74.2527, -60.0245, 0.46 ) }
    dend_52 { pt3dadd( -88.3915, -74.5013, -60.2086, 0.46 ) }
    dend_52 { pt3dadd( -90.0332, -76.4589, -61.5762, 0.92 ) }
    dend_52 { pt3dadd( -91.7741, -78.4518, -62.7448, 0.46 ) }
    dend_52 { pt3dadd( -92.1308, -78.8686, -62.9612, 0.46 ) }
    dend_52 { pt3dadd( -92.5932, -79.3938, -63.2185, 0.92 ) }
    dend_52 { pt3dadd( -94.4909, -81.5082, -64.1692, 0.46 ) }
    dend_52 { pt3dadd( -95.2651, -82.3528, -64.5215, 0.92 ) }
    dend_52 { pt3dadd( -97.6789, -84.8338, -65.4954, 0.46 ) }
    dend_52 { pt3dadd( -99.6868, -87.0709, -66.3037, 0.46 ) }
    dend_52 { pt3dadd( -100.917, -88.5016, -66.8308, 0.92 ) }
    dend_52 { pt3dadd( -101.957, -89.741, -67.3051, 0.46 ) }
    dend_52 { pt3dadd( -102.685, -90.6228, -67.6841, 0.92 ) }
    dend_52 { pt3dadd( -102.952, -90.9714, -67.8541, 0.92 ) }
    dend_52 { pt3dadd( -104.156, -92.725, -68.8102, 0.46 ) }
    dend_52 { pt3dadd( -104.869, -93.9225, -69.4786, 0.92 ) }
    dend_52 { pt3dadd( -105.021, -94.2156, -69.6524, 0.92 ) }
    dend_52 { pt3dadd( -105.507, -95.4041, -70.3923, 0.46 ) }
    dend_52 { pt3dadd( -105.968, -96.7516, -71.2167, 0.92 ) }
    dend_52 { pt3dadd( -106.053, -97.0639, -71.4037, 0.92 ) }
    dend_52 { pt3dadd( -106.327, -98.3312, -72.1702, 0.46 ) }
    dend_52 { pt3dadd( -106.357, -98.6553, -72.3544, 0.46 ) }
    dend_52 { pt3dadd( -106.431, -99.7252, -72.9087, 0.92 ) }
    dend_52 { pt3dadd( -106.532, -101.345, -73.6919, 0.46 ) }
    dend_52 { pt3dadd( -106.715, -102.61, -74.2415, 0.46 ) }
    dend_52 { pt3dadd( -106.775, -102.953, -74.3825, 0.46 ) }
    dend_52 { pt3dadd( -107.043, -104.241, -74.8245, 0.46 ) }
    dend_52 { pt3dadd( -107.301, -105.168, -75.1518, 0.46 ) }
    dend_52 { pt3dadd( -107.455, -105.594, -75.2887, 0.46 ) }
    dend_52 { pt3dadd( -109.143, -108.912, -76.3032, 0.46 ) }
    dend_52 { pt3dadd( -109.388, -109.298, -76.4196, 0.46 ) }
    dend_52 { pt3dadd( -110.197, -110.4, -76.7825, 0.92 ) }
    dend_52 { pt3dadd( -111.363, -111.749, -77.2597, 0.46 ) }
    dend_52 { pt3dadd( -112.332, -112.771, -77.6606, 0.92 ) }
    dend_52 { pt3dadd( -114.644, -115.063, -78.5508, 0.46 ) }
    dend_52 { pt3dadd( -115.088, -115.469, -78.7147, 0.92 ) }
    dend_52 { pt3dadd( -115.512, -115.87, -78.8598, 0.92 ) }
    dend_52 { pt3dadd( -117.354, -117.563, -79.4705, 0.46 ) }
    dend_52 { pt3dadd( -117.689, -117.88, -79.564, 0.46 ) }
    dend_52 { pt3dadd( -118.422, -118.547, -79.7535, 1.38 ) }
    dend_52 { pt3dadd( -120.183, -120.256, -80.2065, 0.46 ) }
    dend_52 { pt3dadd( -121.157, -121.303, -80.5216, 0.92 ) }
    dend_52 { pt3dadd( -122.63, -122.998, -81.0669, 0.46 ) }
    dend_52 { pt3dadd( -123.479, -124.132, -81.4462, 0.92 ) }
    dend_52 { pt3dadd( -123.675, -124.424, -81.5457, 0.92 ) }
    dend_52 { pt3dadd( -124.672, -126.346, -82.1944, 0.46 ) }
    dend_52 { pt3dadd( -125.305, -128.167, -82.7438, 0.46 ) }
    dend_52 { pt3dadd( -125.375, -128.527, -82.8293, 0.46 ) }
    dend_52 { pt3dadd( -125.627, -131.061, -83.3121, 0.92 ) }
    dend_52 { pt3dadd( -125.646, -131.43, -83.3827, 0.92 ) }
    dend_52 { pt3dadd( -125.713, -134.008, -83.8304, 0.46 ) }
    dend_52 { pt3dadd( -125.748, -134.95, -83.9585, 0.92 ) }
    dend_52 { pt3dadd( -125.958, -137.882, -84.3255, 0.92 ) }
    dend_52 { pt3dadd( -126.024, -138.346, -84.4039, 0.92 ) }
    dend_52 { pt3dadd( -126.458, -140.018, -84.7959, 0.46 ) }
    dend_52 { pt3dadd( -126.576, -140.36, -84.8964, 0.46 ) }
    dend_52 { pt3dadd( -127.219, -141.699, -85.4083, 0.92 ) }
    dend_52 { pt3dadd( -127.388, -142.111, -85.5673, 0.92 ) }
    dend_52 { pt3dadd( -128.192, -144.266, -86.3968, 0.46 ) }
    dend_52 { pt3dadd( -128.343, -144.687, -86.549, 0.46 ) }
    dend_52 { pt3dadd( -129.619, -148.427, -87.7959, 0.46 ) }
    dend_52 { pt3dadd( -129.751, -148.858, -87.9375, 0.46 ) }
    dend_52 { pt3dadd( -130.831, -153.428, -89.3929, 0.46 ) }
    dend_52 { pt3dadd( -130.857, -153.559, -89.4316, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -23.9691, 81.994, -18.1846, 0.92 ) }
    dend_20 { pt3dadd( -23.8782, 84.7206, -19.0025, 0.92 ) }
    dend_20 { pt3dadd( -23.7492, 88.5876, -20.1624, 0.92 ) }
    dend_20 { pt3dadd( -23.6892, 90.3892, -20.7029, 0.92 ) }
    dend_20 { pt3dadd( -23.6161, 92.5798, -21.36, 1.38 ) }
    dend_20 { pt3dadd( -23.4699, 96.964, -22.6751, 0.92 ) }
    dend_20 { pt3dadd( -23.4141, 98.6378, -23.1772, 1.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -23.9691, 81.994, -18.1846, 0.46 ) }
    dend_19 { pt3dadd( -24.6846, 83.7101, -19.1246, 0.46 ) }
    dend_19 { pt3dadd( -24.8774, 84.1699, -19.3731, 0.46 ) }
    dend_19 { pt3dadd( -24.8774, 84.1699, -19.3731, 0.92 ) }
    dend_19 { pt3dadd( -26.0246, 87.2642, -20.9013, 0.46 ) }
    dend_19 { pt3dadd( -26.0339, 87.2889, -20.9129, 0.46 ) }
    dend_19 { pt3dadd( -26.6106, 88.8243, -21.5544, 0.92 ) }
    dend_19 { pt3dadd( -26.7708, 89.2043, -21.6856, 0.92 ) }
    dend_19 { pt3dadd( -27.5895, 91.2305, -22.3046, 0.46 ) }
    dend_19 { pt3dadd( -27.7426, 91.6309, -22.4155, 0.46 ) }
    dend_19 { pt3dadd( -28.1712, 92.7238, -22.6776, 1.38 ) }
    dend_19 { pt3dadd( -29.2296, 95.4006, -23.2974, 0.46 ) }
    dend_19 { pt3dadd( -30.0584, 97.4686, -23.7497, 0.46 ) }
    dend_19 { pt3dadd( -31.5004, 101.14, -24.5477, 0.46 ) }
    dend_19 { pt3dadd( -32.3354, 103.24, -24.9923, 0.46 ) }
    dend_19 { pt3dadd( -33.0656, 105.207, -25.4226, 0.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 26.5521, 55.815, 49.7437, 0.92 ) }
    dend_14 { pt3dadd( 33.155, 61.3821, 58.0973, 0.92 ) }
    dend_14 { pt3dadd( 37.8376, 67.3305, 67.437, 0.92 ) }
    dend_14 { pt3dadd( 40.8106, 71.9265, 78.1051, 0.92 ) }
    dend_14 { pt3dadd( 42.2079, 77.6521, 88.5727, 0.92 ) }
    dend_14 { pt3dadd( 45.176, 82.0826, 99.3084, 0.92 ) }
    dend_14 { pt3dadd( 48.9468, 86.1101, 109.943, 0.92 ) }
    dend_14 { pt3dadd( 50.2329, 89.6514, 121.306, 0.92 ) }
    dend_14 { pt3dadd( 52.2388, 91.863, 132.882, 0.92 ) }
    dend_14 { pt3dadd( 53.9447, 95.4625, 144.171, 0.92 ) }
    dend_14 { pt3dadd( 57.5263, 100.496, 154.459, 0.92 ) }
    dend_14 { pt3dadd( 62.3546, 104.251, 164.757, 0.92 ) }
    dend_14 { pt3dadd( 66.7832, 108.13, 175.189, 0.92 ) }
    dend_14 { pt3dadd( 72.1107, 110.863, 185.545, 0.92 ) }
    dend_14 { pt3dadd( 79.513, 113.395, 194.594, 0.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 26.5521, 55.815, 49.7437, 0.46 ) }
    dend_13 { pt3dadd( 30.3008, 58.8617, 53.8765, 0.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -92.4347, -3.22101, 26.6632, 0.92 ) }
    dend_9 { pt3dadd( -101.928, -4.96076, 29.7402, 0.92 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -92.4347, -3.22101, 26.6632, 0.46 ) }
    dend_8 { pt3dadd( -100.763, -4.71465, 29.0102, 0.92 ) }
    dend_8 { pt3dadd( -108.761, -4.92141, 32.6107, 0.92 ) }
    dend_8 { pt3dadd( -116.879, -6.42487, 35.6032, 0.92 ) }
    dend_8 { pt3dadd( -124.524, -7.88628, 39.6697, 0.92 ) }
    dend_8 { pt3dadd( -131.77, -10.1883, 44.0857, 0.92 ) }
    dend_8 { pt3dadd( -139.367, -11.8596, 48.1676, 0.92 ) }
    dend_8 { pt3dadd( -146.9, -14.9108, 51.5516, 0.92 ) }
    dend_8 { pt3dadd( -154.385, -18.7337, 54.2164, 0.92 ) }
    dend_8 { pt3dadd( -162.007, -20.7098, 58.1177, 0.92 ) }
    dend_8 { pt3dadd( -169.616, -21.8815, 62.3388, 0.92 ) }
    dend_8 { pt3dadd( -177.182, -22.3961, 66.7542, 0.92 ) }
    dend_8 { pt3dadd( -185.215, -24.513, 69.6199, 0.92 ) }
    dend_8 { pt3dadd( -193.257, -27.2852, 71.8625, 0.92 ) }
    dend_8 { pt3dadd( -201.608, -28.4422, 74.3073, 0.92 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_40, dend_35, dend_24, dend_21, dend_0, dend_49, dend_48, dend_42, dend_41, dend_39, dend_36, dend_28, dend_25, dend_23, dend_22, dend_10, dend_1, dend_55, dend_50, dend_46, dend_43, dend_38, dend_37, dend_32, dend_29, dend_27, dend_26, dend_16, dend_11, dend_5, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_44, dend_34, dend_33, dend_31, dend_30, dend_18, dend_17, dend_15, dend_12, dend_7, dend_6, dend_4, dend_3, dend_53, dend_52, dend_20, dend_19, dend_14, dend_13, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_48 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_41 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_43 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_37 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_45 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_34 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_30 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_12 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_49 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_50 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_56 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_26 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_48 nseg = 9
    dend_41 nseg = 3
    dend_36 nseg = 13
    dend_25 nseg = 15
    dend_55 nseg = 3
    dend_43 nseg = 11
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_32 nseg = 15
    dend_29 nseg = 15
    dend_57 nseg = 9
    dend_51 nseg = 3
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_12 nseg = 3
    dend_7 nseg = 3
    dend_4 nseg = 7
    dend_3 nseg = 11
    dend_52 nseg = 7
    dend_14 nseg = 9
    dend_8 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_NBC_a104961d30_0_0


