// Cell: cACint209_L4_DBC_78b422a17a_0_0
/*
{
  "id" : "cACint209_L4_DBC_78b422a17a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.7707, 14.3445, 1.63673, 2.6356", "1.65855, 13.0663, 1.48326, 4.68599", "1.5464, 11.788, 1.32978, 5.81905", "1.43425, 10.5097, 1.1763, 6.95808", "1.32209, 9.23142, 1.02283, 8.17562", "1.20994, 7.95314, 0.869351, 9.23498", "1.09779, 6.67486, 0.715875, 9.66374", "0.985636, 5.39658, 0.562399, 9.75915", "0.873483, 4.1183, 0.408922, 9.85456", "0.76133, 2.84002, 0.255446, 9.99274", "0.649178, 1.56175, 0.101969, 10.3671", "0.537025, 0.283466, -0.051507, 11.1059", "0.424873, -0.994813, -0.204983, 11.9164", "0.31272, -2.27309, -0.35846, 12.7207", "0.200568, -3.55137, -0.511936, 12.9931", "0.0884149, -4.82965, -0.665413, 12.8706", "-0.0237377, -6.10793, -0.818889, 12.7481", "-0.13589, -7.38621, -0.972365, 11.5655", "-0.248043, -8.66449, -1.12584, 9.82802", "-0.360195, -9.94277, -1.27932, 4.98087", "-0.472348, -11.221, -1.43279, 2.92263" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.24391, 15.5458, 5.96094, 3.33", "1.0239, 20.8219, 6.80101, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.08609, -3.14072, 6.39094, 1.33", "-9.63466, -3.28896, 6.71191, 0.67", "-11.0321, -3.61518, 6.83954, 0.67", "-12.589, -3.98949, 6.95602, 0.67", "-15.5153, -4.43093, 7.14502, 0.67", "-17.3915, -4.60475, 7.25277, 0.67", "-20.9192, -4.72309, 7.43305, 0.67", "-25.5804, -4.67755, 7.61848, 0.67", "-27.1883, -4.66532, 7.7043, 0.67", "-29.7899, -4.69093, 7.87515, 0.67", "-31.1163, -4.80046, 7.85218, 0.67", "-32.9624, -5.01441, 7.52577, 0.67", "-34.2325, -5.10797, 7.13818, 0.67", "-36.0705, -5.14976, 6.5187, 0.67", "-38.233, -5.30404, 5.80602, 0.67", "-43.5273, -5.62975, 4.35662, 0.67", "-46.0906, -5.62071, 3.86657, 0.67", "-48.7703, -5.35975, 3.65003, 0.67", "-51.1017, -4.96828, 3.71919, 0.67", "-52.4289, -4.66459, 3.85506, 0.67", "-55.7609, -3.6799, 4.43842, 0.67", "-59.6358, -2.3841, 5.37052, 0.67", "-63.7832, -0.885889, 6.34517, 0.67", "-66.8676, 0.342891, 7.0334, 0.33", "-67.7759, 0.755274, 7.22391, 0.67", "-69.9583, 1.76249, 7.62647, 1.33", "-75.0144, 4.07208, 8.34418, 0.67", "-76.0645, 4.55463, 8.39514, 0.67", "-78.8305, 5.77467, 8.21231, 1.33", "-81.3175, 6.85386, 7.90796, 0.67", "-85.049, 8.35752, 7.3692, 0.67", "-88.1701, 9.40697, 6.85343, 0.67", "-92.0007, 10.4917, 6.04565, 0.67", "-93.455, 10.852, 5.72359, 1.33", "-95.9592, 11.3632, 5.12997, 0.33", "-97.544, 11.6598, 4.77781, 1.33", "-101.15, 12.4485, 3.95848, 0.67", "-104.345, 12.8517, 3.43003, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.04391, -8.90719, 0.670944, 2.67", "7.04372, -12.0907, 2.92796, 2.0", "10.66, -17.8475, 7.00941, 2.0", "13.9879, -23.145, 10.7652, 2.0", "15.3235, -25.2711, 12.2726, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.472348, -11.221, -1.43279, 0.67", "-1.78337, -26.1636, -1.43279, 0.67", "-3.0944, -41.1062, -1.43279, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "1.0239, 20.8219, 6.80101, 2.67", "0.155256, 22.7859, 8.27915, 2.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.0239, 20.8219, 6.80101, 1.33", "1.64821, 19.6783, -9.13377, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-104.345, 12.8517, 3.43003, 0.67", "-107.924, 14.4835, 3.1145, 0.67", "-112.361, 15.6741, 2.02292, 0.67", "-114.74, 15.9418, 1.28365, 0.33", "-115.678, 16.0277, 0.971689, 0.67", "-117.058, 16.065, 0.416176, 0.67", "-119.103, 16.0654, -0.448504, 0.67", "-124.17, 15.6872, -2.88945, 0.67", "-127.37, 15.4276, -4.61856, 0.67", "-129.215, 15.324, -5.6603, 0.67", "-132.947, 15.3254, -7.74052, 2.0", "-134.69, 15.428, -8.73928, 0.33", "-136.354, 15.6686, -9.68249, 0.67", "-137.548, 15.9537, -10.2554, 1.33", "-140.137, 16.7165, -11.7313, 0.33", "-141.337, 17.0918, -12.3963, 2.0" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-104.345, 12.8517, 3.43003, 0.33", "-104.172, 11.6563, 3.25138, 0.33", "-104.034, 10.707, 3.10951, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.3235, -25.2711, 12.2726, 1.33", "20.1123, -30.8905, 7.63237E-4, 1.33", "21.9658, -33.0654, -4.74887, 0.67", "23.1762, -34.4857, -7.85069, 0.67", "24.1141, -35.5863, -10.2542, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.3235, -25.2711, 12.2726, 0.67", "15.4516, -30.9253, 11.7884, 0.67", "15.8007, -35.0244, 11.8982, 0.67", "16.3232, -40.7179, 12.2659, 0.67", "17.1327, -47.3924, 12.7921, 1.33", "17.8553, -53.1569, 13.2391, 1.33", "19.3744, -63.3773, 13.9943, 1.33", "20.2871, -67.279, 14.3453, 1.33", "21.6048, -72.2267, 14.8463, 1.33", "22.6063, -76.0576, 15.1798, 1.33", "23.6412, -80.2299, 15.5798, 1.33", "24.7003, -84.9382, 15.8266, 1.33", "26.5944, -93.3818, 15.5482, 0.67", "27.4071, -97.2689, 15.4051, 1.33", "28.0009, -99.9837, 15.3025, 1.33", "29.346, -107.45, 15.3459, 1.33", "29.9941, -111.655, 15.334, 1.33", "30.5049, -117.02, 15.2751, 0.67", "30.8394, -123.556, 15.234, 1.33", "31.026, -127.712, 15.1332, 0.67", "31.4224, -139.638, 14.6177, 1.33", "31.5406, -145.329, 14.3749, 1.33", "31.7826, -149.386, 14.1756, 1.33", "32.11, -153.252, 13.9452, 1.33", "32.6923, -158.645, 13.7743, 1.33", "33.0993, -161.543, 13.7418, 1.33", "34.7304, -169.297, 13.6162, 2.0", "36.1106, -174.758, 13.8918, 1.33", "36.8194, -177.086, 14.0546, 2.0", "38.9799, -183.971, 14.7731, 2.0", "39.7699, -186.616, 15.3192, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.0944, -41.1062, -1.43279, 0.33", "-4.40542, -56.0488, -1.43279, 0.33", "-5.71644, -70.9914, -1.43279, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.155256, 22.7859, 8.27915, 0.67", "0.484269, 24.1605, 9.30335, 0.67", "1.04669, 26.5103, 11.0541, 0.67", "2.38099, 32.0849, 15.2077, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.155256, 22.7859, 8.27915, 2.67", "0.702058, 28.7709, 2.25818, 2.67", "1.06942, 32.7919, -1.78696, 2.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.64821, 19.6783, -9.13377, 1.33", "0.475824, 23.6705, -15.9103, 1.33", "-0.226989, 26.0638, -19.9726, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.64821, 19.6783, -9.13377, 0.67", "3.62483, 17.522, -8.35372, 0.67", "5.72103, 15.3839, -7.19394, 0.33", "7.0518, 14.1679, -6.37814, 0.67", "8.1443, 13.2496, -5.70153, 0.67", "9.22119, 12.3328, -5.02955, 0.33", "9.91613, 11.771, -4.60734, 0.67", "12.5095, 10.1404, -3.37002, 0.33", "13.4235, 9.63306, -2.96825, 0.67", "15.3402, 8.58193, -2.26911, 0.33", "16.4323, 8.04809, -1.97794, 0.67", "17.6577, 7.52034, -1.78089, 0.33", "19.501, 6.89575, -1.65036, 0.67", "21.0518, 6.47353, -1.75851, 0.33", "22.2575, 6.16005, -1.85127, 0.67", "23.0364, 6.02274, -1.91576, 0.33", "24.1503, 5.87698, -1.99194, 1.33", "27.1467, 5.47435, -2.10873, 0.33", "28.8647, 5.33008, -2.03432, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-141.337, 17.0918, -12.3963, 0.33", "-142.467, 15.7406, -10.4393, 0.33", "-143.333, 14.7055, -8.94018, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-141.337, 17.0918, -12.3963, 0.33", "-143.889, 17.641, -11.5321, 0.33", "-144.74, 17.8241, -11.244, 0.67", "-147.21, 18.3556, -10.4076, 0.33", "-149.351, 18.816, -9.68292, 0.67", "-150.879, 19.145, -9.16525, 0.33", "-151.814, 19.3462, -8.84862, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "24.1141, -35.5863, -10.2542, 0.67", "27.719, -36.8349, -13.8344, 0.67", "30.3472, -37.809, -16.0654, 0.67", "36.1834, -39.4044, -20.2525, 1.33", "38.1465, -39.6115, -21.3713, 0.67", "42.8316, -39.6155, -23.4861, 0.67", "45.3355, -39.5565, -24.2831, 1.33", "48.5863, -39.3414, -25.1297, 0.67", "52.3184, -38.8852, -25.4901, 0.67", "57.7723, -37.5193, -25.2236, 0.67", "59.9877, -36.752, -24.9758, 0.67", "64.0762, -35.0434, -24.172, 0.67", "69.8159, -32.0614, -22.9167, 1.33", "72.7547, -30.3442, -22.2949, 0.67", "76.1142, -28.1307, -21.6434, 1.33", "77.6935, -26.963, -21.6278, 0.67", "78.7606, -26.1052, -21.8155, 1.33", "80.1663, -24.8117, -22.2863, 0.67", "82.5841, -22.5465, -23.2757, 0.67", "85.4041, -20.123, -24.5546, 1.33", "90.6231, -16.2507, -26.7795, 0.67", "93.2925, -14.3766, -27.8523, 0.33", "95.6934, -12.7427, -28.9375, 0.33", "97.6125, -11.602, -30.0, 0.67", "99.9558, -10.3138, -31.5975, 0.67", "102.331, -9.14869, -33.2636, 0.67", "103.4, -8.62319, -34.0002, 0.67", "108.872, -5.93616, -37.8883, 2.0", "114.232, -3.48723, -41.8701, 0.33", "117.514, -2.00463, -44.5286, 0.67", "118.703, -1.50587, -45.5686, 0.33", "119.884, -0.993398, -46.6726, 0.67", "121.032, -0.503588, -47.7627, 0.33", "124.421, 0.972636, -50.4498, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "24.1141, -35.5863, -10.2542, 0.67", "24.8958, -38.052, -11.1807, 0.67", "25.579, -40.0485, -11.9949, 0.67", "25.8894, -40.8932, -12.3342, 0.67", "26.8895, -43.7186, -13.3896, 1.33", "27.2216, -44.6787, -13.7162, 2.0", "27.7815, -46.3399, -14.239, 0.67", "28.1548, -47.5152, -14.644, 1.33", "28.4892, -48.7716, -15.0349, 0.67", "28.9755, -50.7729, -15.5314, 0.67", "29.3077, -52.3047, -15.7645, 1.33", "29.5237, -53.3367, -15.9431, 0.33", "29.699, -54.2741, -16.1165, 0.33", "29.8639, -55.478, -16.3435, 0.67", "29.9522, -56.2214, -16.5154, 1.33", "30.148, -57.6848, -16.8924, 0.67", "30.397, -59.539, -17.2587, 0.67", "30.6751, -61.6239, -17.5535, 1.33", "30.9215, -63.5705, -17.73, 0.67", "31.0187, -64.6437, -17.7798, 2.67", "31.076, -65.8578, -17.6879, 0.67", "31.081, -68.4958, -17.3653, 0.67", "31.0335, -69.4406, -17.2069, 0.33", "30.967, -70.5268, -17.0187, 0.67", "30.9238, -71.2924, -16.9074, 0.33", "30.7711, -74.0832, -16.6539, 2.0", "30.6758, -77.1234, -16.6712, 0.67", "30.6755, -77.7993, -16.7407, 0.67", "30.7386, -78.8826, -16.8606, 0.67", "30.8653, -80.2268, -17.0291, 1.33", "30.9907, -81.4236, -17.2061, 0.67", "31.2103, -83.2435, -17.5806, 0.67", "31.3201, -84.1809, -17.7291, 1.33", "31.4794, -85.5469, -17.9713, 0.67", "31.7075, -87.6179, -18.4444, 0.67", "31.7897, -88.3567, -18.5959, 0.67", "31.9216, -89.4944, -18.7908, 0.67", "32.0203, -90.5823, -18.9503, 0.67", "32.0689, -91.1727, -19.0648, 1.33", "32.1293, -92.6764, -19.4176, 0.67", "32.299, -94.8079, -19.9362, 2.0", "32.4632, -96.612, -20.2565, 0.67", "32.5145, -97.247, -20.3314, 0.67", "32.6533, -99.6787, -20.5034, 1.33", "32.714, -100.691, -20.5379, 0.67", "32.7973, -102.297, -20.5226, 0.67", "32.8605, -104.239, -20.4766, 1.33", "32.9349, -106.197, -20.3001, 0.67", "32.9801, -107.621, -20.1225, 0.67", "33.0215, -109.049, -19.9485, 0.67", "33.0593, -110.234, -19.9086, 0.67", "33.0968, -111.602, -19.9844, 2.0", "33.2319, -113.606, -20.2616, 0.67", "33.4139, -115.62, -20.6269, 0.67", "33.5978, -117.342, -20.9233, 2.0", "33.8718, -119.625, -21.2608, 0.67", "34.1061, -120.989, -21.432, 1.33", "34.3869, -122.447, -21.561, 0.67", "34.5001, -123.113, -21.5872, 0.67", "34.947, -125.343, -21.5349, 2.0", "35.2278, -126.751, -21.4273, 0.67", "35.465, -127.876, -21.3332, 0.67", "36.1167, -131.02, -21.1566, 0.67", "36.2829, -131.884, -21.1454, 0.67", "36.5534, -133.362, -21.197, 0.67", "36.7749, -134.545, -21.3747, 0.67", "36.9825, -135.908, -21.5881, 2.0", "37.1152, -136.946, -21.7672, 0.67", "37.3839, -138.718, -22.094, 1.33", "37.5328, -139.755, -22.2976, 0.67", "37.7227, -141.847, -22.7614, 0.67", "37.8742, -143.767, -23.2276, 1.33", "37.9634, -145.137, -23.5952, 2.0" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "39.7699, -186.616, 15.3192, 1.33", "38.3708, -187.873, 15.6925, 1.33", "37.303, -188.833, 15.9774, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "39.7699, -186.616, 15.3192, 0.67", "40.2993, -189.732, 14.1402, 0.67", "40.8462, -192.951, 12.9226, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "2.38099, 32.0849, 15.2077, 0.33", "4.12997, 33.9944, 16.5034, 0.33", "5.01042, 34.8695, 17.1035, 0.67", "7.8923, 37.3002, 18.8863, 0.67", "9.2442, 38.4404, 19.7226, 0.33", "10.1482, 39.2028, 20.2818, 0.33", "12.4422, 41.1376, 21.7009, 0.67", "13.3944, 41.9605, 22.4364, 0.33", "15.3015, 43.3961, 23.8268, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "2.38099, 32.0849, 15.2077, 0.67", "3.04774, 34.6227, 17.5473, 0.67", "3.59236, 36.6955, 19.4582, 0.33", "3.99081, 38.2121, 20.8564, 0.67", "5.10124, 42.4385, 24.7527, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "1.06942, 32.7919, -1.78696, 0.67", "4.63054, 36.7152, -8.16179, 0.67", "5.97336, 38.1946, -10.5656, 0.67", "8.93858, 41.4614, -15.8737, 0.67", "10.0517, 42.6878, -17.8664, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.06942, 32.7919, -1.78696, 2.0", "-1.27337, 38.7515, -2.19555, 2.0" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.226989, 26.0638, -19.9726, 0.67", "2.65653, 32.8273, -16.5887, 0.67", "3.78705, 34.985, -15.5144, 0.67", "7.84721, 41.4842, -12.4278, 0.33", "8.93193, 43.0743, -11.7145, 0.33", "10.9776, 46.0026, -10.4735, 1.33", "12.2049, 47.7106, -9.86506, 0.67", "14.4008, 51.0142, -8.67505, 0.33", "16.3524, 53.4428, -8.15893, 1.33", "17.7658, 54.8643, -8.11048, 0.33", "18.7692, 55.8007, -8.09614, 0.67", "21.1783, 57.9595, -8.3693, 0.33", "23.1984, 59.8096, -8.793, 0.67", "25.9558, 62.3781, -9.57832, 1.33", "28.099, 64.5416, -10.0316, 0.33", "29.3875, 65.8627, -10.2005, 0.67", "34.0465, 70.7974, -10.4592, 0.33", "35.6183, 72.6236, -10.4108, 0.33", "37.1074, 74.5848, -10.3073, 0.67", "40.3588, 79.5715, -9.91956, 0.33", "41.5389, 81.5126, -9.72315, 0.33", "42.3719, 83.0055, -9.4992, 0.67", "43.5559, 85.393, -8.96374, 2.0", "44.6856, 87.8552, -8.58399, 0.33", "45.403, 89.5129, -8.42303, 0.33", "45.9834, 90.667, -8.27691, 0.67", "46.9563, 92.4713, -8.02395, 0.33", "47.4319, 93.292, -7.88392, 0.67", "49.1041, 95.9142, -7.31543, 0.33", "50.3637, 97.775, -6.8099, 0.33", "54.1041, 103.227, -5.03205, 0.33", "56.0071, 105.984, -3.95553, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.226989, 26.0638, -19.9726, 0.67", "-2.39907, 28.9049, -24.1081, 0.67", "-3.54906, 30.4091, -26.2976, 0.67", "-7.6488, 35.7717, -34.1033, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "124.421, 0.972636, -50.4498, 0.33", "124.826, 1.58698, -51.6125, 0.33", "124.939, 1.75846, -51.937, 0.67", "125.851, 3.14196, -54.5554, 0.33", "126.277, 3.78812, -55.7782, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "124.421, 0.972636, -50.4498, 0.33", "126.094, 1.05632, -49.5788, 0.33", "126.37, 1.06784, -49.4414, 0.67", "128.537, 0.998363, -49.0172, 0.33", "130.196, 0.82801, -48.9137, 1.33", "133.038, 0.370082, -48.7357, 0.33", "134.128, 0.128772, -48.6588, 0.33", "136.522, -0.736778, -48.5383, 1.33", "141.734, -3.39898, -48.6862, 0.33", "142.776, -4.26948, -48.7859, 0.33", "144.393, -5.98828, -49.0278, 0.67", "145.314, -7.16676, -49.1675, 0.67", "146.516, -8.93779, -49.1718, 0.33", "147.806, -11.1303, -49.0444, 0.67", "150.159, -15.4816, -48.2847, 0.33", "150.303, -15.7377, -48.2507, 0.67", "151.886, -18.3717, -48.0676, 0.33", "152.942, -20.1305, -47.9182, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "37.9634, -145.137, -23.5952, 0.33", "40.8357, -146.328, -22.0224, 0.33", "41.8268, -146.802, -21.4459, 0.67", "42.6783, -147.44, -20.8212, 0.67", "44.1197, -148.577, -19.7571, 0.33", "46.397, -150.336, -18.2303, 2.0", "49.4678, -152.684, -15.9413, 0.33", "50.2926, -153.394, -15.2351, 1.33", "56.1511, -158.875, -9.80636, 0.67", "57.3578, -160.108, -8.62103, 0.33", "58.749, -161.632, -7.16758, 1.33", "62.5616, -166.022, -3.01174, 0.67", "63.6854, -167.301, -1.39785, 0.67", "64.2338, -167.859, -0.350746, 1.33", "64.8694, -168.455, 1.54013, 0.33", "65.4784, -169.364, 4.10727, 0.33", "65.8094, -170.442, 6.50941, 0.33", "66.7922, -173.782, 13.8865, 0.67", "66.9989, -174.349, 15.2494, 0.67", "67.3098, -175.307, 17.5633, 0.67", "67.5814, -176.652, 20.4736, 0.33", "67.6771, -178.972, 24.0966, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "37.9634, -145.137, -23.5952, 0.67", "38.1505, -147.483, -24.549, 0.67", "38.4059, -150.685, -25.8504, 0.67", "38.7543, -155.053, -27.6257, 0.33", "38.9425, -157.413, -28.585, 2.0", "39.2301, -161.018, -30.0503, 0.33", "39.3655, -162.716, -30.7403, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "40.8462, -192.951, 12.9226, 0.33", "36.7148, -195.993, 14.8154, 0.33", "35.4865, -197.017, 15.2253, 0.33", "33.3797, -199.024, 15.6939, 0.33", "32.4998, -199.983, 15.8311, 0.33", "30.5928, -202.07, 15.781, 0.67", "29.4117, -203.375, 15.654, 0.67", "27.9988, -205.005, 15.2414, 1.33", "26.5441, -206.798, 14.7748, 0.33", "25.5788, -208.1, 14.3785, 0.33", "22.964, -211.755, 13.1686, 0.33", "22.1374, -213.042, 12.5921, 1.33", "21.1204, -214.788, 11.7663, 0.33", "20.2503, -216.449, 10.9256, 0.33", "18.7356, -219.608, 9.18976, 0.67", "17.8665, -221.719, 7.96197, 1.33", "16.8132, -226.17, 5.31677, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "40.8462, -192.951, 12.9226, 0.67", "41.1045, -195.211, 13.0477, 0.67", "41.2685, -196.614, 13.1937, 1.33", "41.8059, -201.358, 13.7969, 0.67", "41.9633, -202.412, 13.9288, 0.67", "42.1046, -203.421, 14.0184, 0.67", "42.3637, -205.672, 14.1099, 0.67", "42.4904, -206.882, 14.1626, 1.33", "42.6832, -208.672, 14.2277, 0.67", "43.0051, -211.265, 14.2414, 0.67", "43.2055, -213.218, 14.1416, 0.67", "43.353, -214.872, 13.8774, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "10.0517, 42.6878, -17.8664, 1.33", "12.3348, 44.3295, -16.4165, 0.33", "13.1263, 44.8987, -15.9138, 1.33", "15.5881, 46.6688, -14.3504, 0.33", "17.304, 47.9027, -13.2607, 0.67" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "10.0517, 42.6878, -17.8664, 1.33", "9.65141, 43.2359, -20.4383, 1.33", "9.34623, 44.5944, -25.6718, 0.67", "9.28482, 46.3976, -31.914, 1.33", "9.32188, 47.0277, -34.4571, 1.33", "9.71658, 48.9831, -42.3731, 0.67", "9.97335, 49.6131, -45.1116, 1.33", "10.9934, 51.3693, -52.604, 0.67", "11.2811, 51.6955, -53.8241, 1.33", "12.8982, 52.8929, -58.664, 0.67", "13.8725, 53.3476, -61.0258, 1.33", "16.9473, 54.1183, -67.3434, 0.67", "17.4987, 54.1863, -68.3327, 1.33", "18.967, 54.2488, -70.2155, 0.67", "20.0619, 54.2549, -71.3581, 1.33", "23.0192, 54.1766, -73.2772, 0.33", "24.116, 54.0669, -73.7979, 0.67", "25.6155, 53.9875, -74.21, 0.33", "26.2013, 53.976, -74.3668, 0.33", "28.8886, 53.9139, -75.1008, 2.0", "31.8229, 53.9926, -75.8893, 0.67", "35.162, 54.3786, -76.836, 0.33", "37.746, 54.8427, -77.6165, 1.33", "39.3161, 55.2386, -78.1004, 1.33", "41.6248, 55.9357, -78.8274, 0.33", "42.8125, 56.4105, -79.2728, 1.33", "45.8817, 57.9372, -80.5989, 0.33", "46.4557, 58.2456, -80.8013, 1.33", "47.8159, 59.0149, -81.243, 0.33", "48.3554, 59.3792, -81.4056, 0.67", "50.8483, 61.2988, -82.1147, 0.33", "51.3582, 61.7095, -82.2235, 0.67", "54.095, 63.9238, -82.5749, 0.33", "55.0573, 64.6889, -82.6589, 1.33", "56.3445, 65.6728, -82.7222, 0.33", "56.5885, 65.8542, -82.7591, 0.67", "58.8401, 67.502, -83.4389, 0.33", "59.582, 68.0377, -83.6957, 1.33", "61.6649, 69.3146, -84.469, 0.33", "62.6372, 69.7618, -84.7022, 0.67", "67.1535, 71.0301, -85.2485, 0.67", "69.2558, 71.1343, -85.2027, 0.33", "74.4932, 70.8455, -84.7813, 2.0", "78.0971, 70.3895, -84.1688, 0.33", "80.3073, 69.9196, -83.5333, 0.33", "81.9299, 69.5128, -82.8841, 0.67", "85.658, 68.489, -80.9205, 0.33" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-1.27337, 38.7515, -2.19555, 2.0", "0.246118, 42.5343, -6.47224, 2.0" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.27337, 38.7515, -2.19555, 0.67", "-1.9446, 44.1004, -1.28043, 0.67", "-2.33228, 48.0882, -0.655474, 0.67", "-2.72278, 51.7166, -0.178994, 0.67", "-3.11994, 55.9966, 0.230462, 0.67", "-3.64476, 61.6955, 0.591895, 0.67", "-3.9284, 65.3059, 0.776173, 1.33", "-4.64094, 74.458, 1.06522, 0.67", "-4.83554, 78.0594, 0.926986, 0.67", "-5.0192, 83.7142, 0.64177, 0.67", "-5.00888, 86.6802, 0.529118, 0.67", "-4.88763, 88.9571, 0.451059, 1.33", "-4.7133, 92.5636, 0.622368, 0.67", "-4.66261, 99.7289, 1.78793, 0.67", "-4.57674, 105.359, 3.20829, 0.67", "-4.64208, 108.699, 4.51308, 1.33", "-4.73421, 110.786, 5.59007, 0.67", "-5.15353, 114.062, 7.75467, 0.67", "-5.50864, 115.598, 9.32062, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "56.0071, 105.984, -3.95553, 0.33", "57.0232, 105.931, -4.60413, 0.33", "58.5304, 105.853, -5.56619, 0.67", "59.5389, 105.801, -6.20996, 0.33", "60.1052, 105.771, -6.57146, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "56.0071, 105.984, -3.95553, 1.33", "56.5727, 107.338, -4.75103, 1.33", "57.4965, 109.492, -6.26835, 0.33", "57.6556, 109.833, -6.55757, 0.67", "58.4597, 111.552, -8.21302, 0.33", "58.7881, 112.22, -8.754, 0.67", "61.0445, 116.525, -11.7067, 0.33", "61.3626, 117.028, -12.0109, 0.67", "62.921, 119.171, -13.1779, 0.33", "64.4314, 121.313, -14.0057, 0.67", "68.1207, 126.746, -15.3216, 0.33", "68.5219, 127.354, -15.3858, 0.67", "70.8595, 130.581, -14.922, 0.33", "74.546, 135.78, -14.3437, 1.33", "75.5332, 137.214, -14.1663, 0.33", "75.8476, 137.754, -14.3602, 0.67", "77.201, 140.381, -16.0524, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.6488, 35.7717, -34.1033, 0.33", "-7.65249, 38.225, -37.0556, 0.33", "-7.61617, 40.3878, -39.3032, 0.33", "-7.47338, 43.447, -42.0942, 0.67", "-7.36132, 44.7743, -43.4116, 0.33", "-7.18151, 47.1172, -45.6672, 1.33", "-7.04917, 51.86, -50.1399, 0.33", "-6.97517, 54.6444, -52.5803, 1.33", "-7.03209, 56.6665, -54.1605, 0.33", "-7.27144, 62.4895, -58.0969, 0.33", "-7.42091, 65.1681, -59.7006, 0.33", "-7.66376, 69.4967, -61.7782, 1.33", "-7.85157, 72.8831, -63.076, 0.33", "-8.04551, 75.474, -64.0304, 0.33", "-8.12623, 76.5685, -64.3642, 1.33", "-8.32302, 79.5779, -64.9968, 0.33", "-8.38534, 81.6826, -65.5089, 2.0", "-8.37336, 88.1612, -67.1693, 0.33", "-8.32389, 89.172, -67.3219, 0.67", "-8.0175, 91.7631, -67.4185, 0.33", "-7.86118, 92.5481, -67.3287, 0.67", "-7.23569, 94.9058, -66.7977, 0.33", "-6.8544, 96.3032, -66.4288, 0.67", "-4.27017, 105.222, -63.478, 0.33", "-3.68373, 107.278, -62.9984, 2.67", "-1.75621, 114.124, -61.9187, 0.33", "-1.45751, 115.219, -61.8375, 0.67", "-0.363749, 119.545, -61.89, 0.33", "0.0504153, 121.359, -62.1384, 0.67", "1.22247, 127.369, -63.8887, 0.33", "1.54593, 129.065, -64.4297, 0.67", "1.87821, 130.93, -65.1028, 2.0", "2.33776, 133.297, -65.9621, 0.33", "2.77935, 134.992, -66.5704, 2.0", "3.48604, 137.605, -67.5647, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.6488, 35.7717, -34.1033, 0.67", "-8.94735, 37.0214, -35.8458, 0.67", "-10.3214, 38.5357, -37.1, 0.33", "-13.9833, 42.73, -39.3155, 0.67", "-15.5288, 44.4439, -39.9262, 0.67", "-16.4782, 45.4385, -40.1567, 0.33", "-17.6257, 46.5988, -40.3373, 0.33", "-20.2495, 49.3103, -40.4417, 0.33", "-22.0347, 51.0671, -40.2916, 1.33", "-23.8047, 52.5279, -39.8671, 0.33", "-25.9426, 54.0396, -39.3385, 0.67", "-27.0595, 54.7635, -39.0515, 0.33", "-28.9723, 55.9813, -38.5362, 0.33", "-29.8285, 56.5675, -38.4074, 0.67", "-31.5333, 57.7764, -38.3966, 0.33", "-32.365, 58.3959, -38.5164, 0.33", "-33.3196, 59.0265, -38.873, 1.33", "-35.0891, 60.0053, -39.7935, 1.33", "-39.2043, 61.6547, -42.4007, 0.33", "-40.7274, 62.2441, -43.4406, 0.33", "-41.309, 62.4341, -43.8698, 0.67", "-44.7714, 63.2272, -46.4239, 0.33", "-45.6745, 63.3348, -47.0931, 1.33", "-49.6271, 63.2475, -49.8607, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "126.277, 3.78812, -55.7782, 0.33", "127.422, 5.05996, -55.3045, 0.33", "128.231, 5.95929, -54.9695, 0.67", "129.232, 7.07195, -54.5551, 0.33", "130.091, 8.02694, -54.1994, 0.67", "131.597, 9.70041, -53.5761, 0.33", "131.597, 9.70041, -53.5761, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "126.277, 3.78812, -55.7782, 0.33", "126.366, 4.43636, -56.704, 0.33", "126.42, 4.93412, -57.3928, 1.33", "126.734, 9.52525, -63.2111, 0.33", "126.754, 10.1688, -64.118, 2.0", "126.779, 13.1227, -68.3067, 0.33", "126.789, 14.2714, -69.9355, 1.33", "126.782, 16.4285, -73.1197, 0.33", "126.733, 17.8307, -75.2211, 1.33", "126.083, 22.2357, -81.4122, 0.33", "125.924, 23.1406, -82.8561, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "39.3655, -162.716, -30.7403, 0.33", "37.351, -162.561, -30.1003, 0.33", "33.6973, -162.281, -28.9395, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "39.3655, -162.716, -30.7403, 0.33", "39.7906, -165.345, -30.4268, 0.33", "40.0852, -167.655, -30.1765, 0.67", "40.5424, -171.61, -29.8076, 0.33", "40.9665, -176.142, -29.5021, 1.33", "41.0711, -177.974, -29.4629, 1.33", "41.2176, -181.24, -29.4979, 0.67", "41.1656, -182.91, -29.536, 0.67", "41.0139, -184.761, -29.6224, 0.33", "40.8435, -186.061, -29.7316, 0.67", "40.481, -188.787, -30.2217, 0.33", "39.9664, -191.688, -30.8461, 0.67", "39.3277, -194.373, -31.389, 0.33", "38.8989, -196.474, -31.9638, 1.33", "38.3817, -198.925, -32.6525, 1.33", "37.8797, -201.367, -33.3466, 0.67", "37.1828, -204.757, -34.3685, 0.67", "35.9956, -210.264, -36.2826, 0.67", "35.0347, -215.669, -38.4063, 2.0" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.8132, -226.17, 5.31677, 0.33", "21.4881, -225.137, 7.39261, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.8132, -226.17, 5.31677, 0.33", "16.475, -227.733, 5.9356, 0.33", "16.1336, -229.129, 6.47798, 1.33", "15.3637, -231.651, 7.45973, 0.33", "13.7383, -236.535, 9.29144, 0.33", "13.326, -237.739, 9.76506, 2.0", "12.7257, -239.795, 10.7157, 0.33", "12.6534, -240.025, 10.8388, 0.67", "12.3057, -241.174, 11.5541, 0.33", "12.0145, -242.039, 12.1745, 0.33", "11.5869, -243.332, 12.8671, 1.33", "10.8232, -247.104, 15.3477, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "43.353, -214.872, 13.8774, 0.33", "41.1897, -213.617, 14.342, 0.33", "39.0567, -212.38, 14.8002, 0.33", "35.9472, -210.576, 15.4681, 0.33", "34.7637, -209.889, 15.7223, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "43.353, -214.872, 13.8774, 0.67", "43.3446, -217.013, 18.0173, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "17.304, 47.9027, -13.2607, 0.67", "16.35, 50.2611, -15.75, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "17.304, 47.9027, -13.2607, 0.67", "19.2301, 47.2353, -12.506, 0.67", "22.0851, 46.4417, -11.3876, 0.33", "23.6572, 46.1868, -10.6851, 0.67", "25.5343, 46.079, -9.84726, 0.33", "29.5588, 46.1481, -8.27791, 1.33", "31.445, 46.3076, -7.4733, 0.33", "33.1027, 46.554, -6.78149, 0.67", "35.828, 47.2012, -5.70081, 0.33", "37.4488, 47.6826, -5.00987, 1.33", "40.012, 48.6149, -3.94936, 0.33", "43.8544, 50.2597, -2.51235, 1.33", "46.3649, 51.3984, -1.55859, 0.67", "47.2373, 51.8197, -1.25019, 0.67", "49.9768, 53.2195, -0.198831, 0.33", "51.2843, 53.9642, 0.374375, 0.33", "52.5113, 54.7311, 0.916409, 0.33", "53.9348, 55.5865, 1.40257, 0.33", "54.8724, 56.1864, 1.71449, 1.33", "57.9389, 58.1789, 2.70691, 0.33", "59.3852, 59.1821, 3.12272, 0.67", "61.2264, 60.3345, 3.70236, 0.67", "63.1553, 61.338, 4.3514, 0.33", "65.6703, 62.5457, 5.19287, 1.33", "68.4364, 63.8141, 6.08327, 0.67", "70.662, 64.8115, 6.71019, 0.67", "73.4363, 66.0113, 7.69283, 0.67", "76.2379, 67.2724, 8.98737, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "0.246118, 42.5343, -6.47224, 0.67", "3.12434, 47.5712, -8.24742, 0.67", "4.0831, 49.0276, -8.80218, 0.67", "7.47972, 53.7685, -10.1549, 1.33", "10.1285, 57.4655, -11.2098, 1.33", "11.5201, 59.4079, -11.764, 0.67", "13.1461, 61.6774, -12.4115, 1.33", "15.1192, 64.129, -13.1164, 0.33", "18.4538, 67.6769, -13.8602, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "0.246118, 42.5343, -6.47224, 1.33", "-2.93646, 44.8947, -5.50526, 1.33", "-9.99689, 50.1314, -3.36004, 0.67", "-12.2884, 51.8309, -2.66379, 0.67", "-17.0762, 55.382, -1.20906, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "77.201, 140.381, -16.0524, 0.33", "76.2225, 141.833, -15.9629, 0.33", "76.0235, 142.129, -15.9448, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "77.201, 140.381, -16.0524, 0.33", "78.4503, 143.344, -16.6906, 0.33", "79.1734, 144.393, -17.1931, 0.67", "81.0824, 147.034, -18.6541, 0.33", "82.0428, 148.291, -19.3996, 0.67", "83.4961, 150.074, -20.4581, 0.33", "86.1852, 153.114, -22.2401, 0.67", "89.4204, 156.232, -24.3634, 0.33", "91.223, 157.838, -25.4963, 0.33", "91.9234, 158.399, -25.9008, 0.67", "93.4239, 159.67, -26.8938, 0.33", "94.5526, 160.789, -27.7597, 0.67", "96.8847, 163.837, -29.7337, 0.33", "97.6706, 165.163, -30.5186, 0.67", "98.1112, 165.903, -30.9825, 0.67", "100.646, 170.614, -34.0034, 0.33", "101.086, 171.566, -34.6508, 0.33", "102.173, 174.358, -36.6021, 0.67", "102.538, 175.431, -37.3687, 0.33", "103.367, 177.906, -39.1935, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.48604, 137.605, -67.5647, 0.33", "3.89719, 139.002, -68.4276, 0.33", "4.20987, 140.065, -69.0839, 0.67", "5.09698, 143.078, -70.9457, 0.33", "5.68385, 145.072, -72.1774, 1.33", "6.43446, 147.623, -73.7527, 0.33", "7.12376, 149.964, -75.1994, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.48604, 137.605, -67.5647, 0.33", "3.93784, 139.404, -66.5958, 0.33", "4.53593, 142.308, -65.5876, 0.67", "4.76852, 143.42, -65.3074, 0.33", "4.89806, 144.287, -65.3, 0.67", "5.02161, 145.442, -65.4062, 0.33", "5.1321, 146.639, -65.575, 1.33", "5.44675, 150.518, -66.493, 0.33", "5.5928, 152.761, -67.1796, 0.67", "5.90473, 157.663, -68.7494, 0.33", "5.93556, 158.216, -68.9262, 0.67", "6.04446, 159.904, -69.4761, 0.33", "6.1209, 160.777, -69.7776, 0.67", "6.327, 162.869, -70.5309, 0.33", "6.46421, 163.857, -70.7625, 0.67", "6.81235, 165.782, -70.8799, 0.33", "6.93791, 166.601, -70.9258, 0.33", "7.03915, 167.412, -70.9764, 0.67", "7.16482, 168.667, -71.0495, 0.33", "7.32798, 170.478, -71.1498, 0.67", "7.38478, 172.179, -71.2114, 0.33", "7.39121, 172.851, -71.2184, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-49.6271, 63.2475, -49.8607, 0.33", "-54.063, 68.8545, -52.2629, 0.33", "-54.9662, 69.9618, -52.8125, 2.0", "-58.7988, 74.6536, -55.2079, 0.33", "-59.2707, 75.2062, -55.4639, 0.67", "-60.0474, 76.0994, -55.8376, 0.33", "-62.77, 79.3479, -56.9859, 1.33", "-64.0581, 80.8041, -57.4802, 0.33", "-64.8361, 81.7395, -57.6685, 0.67", "-67.3401, 85.2004, -57.7803, 0.33", "-68.4331, 86.8134, -57.736, 1.33", "-70.158, 89.6689, -57.4899, 0.33", "-71.431, 91.9551, -57.1521, 0.33", "-72.7264, 94.4855, -56.7854, 0.67", "-74.3229, 97.8741, -56.3269, 0.33", "-75.0122, 99.5374, -56.1159, 1.33", "-76.2943, 102.799, -55.712, 0.33", "-76.5911, 103.553, -55.6758, 0.67", "-77.0924, 104.889, -55.7109, 0.33", "-77.514, 106.016, -55.8267, 0.67", "-77.9775, 107.12, -56.029, 0.33", "-78.4099, 108.075, -56.2582, 0.67", "-80.4461, 112.198, -57.5736, 0.33", "-80.4461, 112.198, -57.5736, 0.67", "-81.2013, 113.748, -58.2066, 0.33", "-81.49, 114.306, -58.4537, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-49.6271, 63.2475, -49.8607, 0.33", "-51.1977, 63.7584, -51.3938, 0.33", "-53.0165, 64.3989, -52.8982, 0.67", "-55.5805, 65.2969, -54.8783, 0.33", "-56.0734, 65.4566, -55.2153, 0.67", "-59.5245, 66.4885, -57.3955, 0.33", "-63.5593, 67.4884, -59.6881, 2.67", "-67.3976, 68.2089, -61.9169, 0.33", "-67.7524, 68.2442, -62.1025, 0.67", "-69.85, 68.2552, -63.2079, 0.33", "-70.4125, 68.1909, -63.4534, 1.33", "-72.7896, 67.5963, -64.1341, 0.33", "-75.8576, 66.494, -64.7195, 2.0", "-77.7188, 65.6148, -65.2782, 0.33", "-78.0635, 65.4694, -65.3838, 0.67", "-79.8473, 64.8088, -65.9303, 0.33", "-80.2146, 64.7225, -66.0105, 0.67", "-81.8762, 64.5455, -66.2143, 0.33", "-83.5252, 64.5687, -66.1994, 0.67", "-86.2489, 64.8896, -66.1265, 0.33", "-87.1106, 65.0378, -66.0166, 0.67", "-89.5576, 65.5555, -65.6514, 0.33", "-90.098, 65.6699, -65.5544, 0.67", "-93.0058, 66.3362, -64.852, 0.33", "-93.8205, 66.5402, -64.5743, 0.67", "-96.6209, 67.5257, -63.3871, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "35.0347, -215.669, -38.4063, 0.33", "30.4585, -219.032, -39.5141, 0.33", "28.5045, -220.624, -40.2263, 0.67", "27.7417, -221.289, -40.5977, 0.33", "27.0619, -222.046, -41.2348, 0.33", "26.3885, -223.183, -42.3619, 0.33", "26.2412, -223.715, -42.9834, 0.67", "26.4047, -224.787, -44.5627, 0.33", "26.6334, -225.633, -45.7647, 0.67", "28.1109, -228.61, -49.9785, 0.33", "28.7869, -229.67, -51.3818, 0.67", "30.1642, -231.521, -53.731, 0.33", "30.5921, -232.047, -54.3859, 0.67", "32.2505, -233.904, -56.6128, 0.33", "34.3101, -236.218, -59.1056, 0.67", "35.033, -237.246, -59.9488, 0.33", "35.3446, -237.621, -60.2773, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "35.0347, -215.669, -38.4063, 0.67", "34.756, -217.663, -38.3937, 0.67", "34.5733, -219.502, -38.4265, 0.67", "34.5119, -220.765, -38.458, 0.33", "34.4813, -224.66, -38.6443, 2.67", "34.7051, -227.981, -38.9095, 0.67", "34.9816, -230.446, -39.1297, 0.33", "35.0738, -231.026, -39.1948, 0.67", "35.4942, -233.214, -39.5134, 0.33", "36.3317, -236.751, -40.1996, 0.33", "37.0506, -239.251, -40.8242, 0.67", "37.6386, -241.353, -41.373, 0.33", "38.4176, -244.256, -42.0734, 0.33", "38.9924, -246.502, -42.6626, 0.33", "39.2896, -247.792, -43.0467, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "43.3446, -217.013, 18.0173, 0.33", "42.2161, -219.213, 17.5236, 0.33", "41.3382, -220.924, 17.1396, 0.33", "40.3698, -222.812, 16.7159, 0.33", "39.7468, -224.027, 16.4433, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "43.3446, -217.013, 18.0173, 0.67", "44.1553, -218.926, 18.7553, 0.67", "45.4472, -221.974, 19.9311, 1.33", "46.186, -223.718, 20.6036, 0.67", "47.5452, -226.925, 21.8407, 1.33", "48.3415, -228.804, 22.5655, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "76.2379, 67.2724, 8.98737, 0.33", "78.2355, 66.6835, 8.9855, 0.33", "80.6067, 65.9844, 8.98328, 0.33", "84.8632, 64.7296, 8.97931, 0.33", "86.8876, 64.1327, 8.97742, 0.33", "88.0272, 63.7967, 8.97635, 0.33", "89.5161, 63.3578, 8.97496, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "76.2379, 67.2724, 8.98737, 0.67", "78.2759, 67.9493, 9.74167, 0.67", "80.6198, 68.7278, 10.6091, 0.67", "82.0555, 69.2046, 11.1405, 0.67", "83.3302, 69.628, 11.6123, 0.67", "88.8954, 71.4764, 13.672, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "18.4538, 67.6769, -13.8602, 0.33", "20.2216, 70.7898, -11.6611, 0.33", "20.9244, 72.3422, -10.6874, 0.33", "20.4363, 73.1876, -9.31221, 0.33", "19.7769, 74.1682, -7.53041, 0.33", "18.9772, 75.4027, -5.41484, 1.33", "18.2236, 76.6706, -3.37792, 0.33", "17.6108, 77.6722, -1.77877, 0.67", "13.3525, 84.5209, 8.44977, 0.33", "12.6982, 85.6421, 10.0039, 0.67", "12.0739, 86.7615, 11.5204, 0.33", "11.7162, 87.6374, 12.5809, 0.67", "11.393, 89.2094, 14.2154, 0.33", "11.4263, 89.9204, 14.7342, 0.67", "11.8557, 91.357, 15.2662, 0.33", "12.0889, 92.1517, 15.5368, 0.67", "13.2759, 95.9017, 16.8126, 0.33", "14.1289, 98.6633, 17.6596, 0.33", "14.4021, 99.4461, 17.9119, 0.67", "15.9121, 103.1, 19.2464, 0.33", "16.4008, 104.084, 19.7333, 1.33", "17.5549, 105.962, 20.921, 0.33", "18.3784, 107.015, 21.7759, 1.33", "20.2559, 109.414, 24.4237, 0.67", "21.3501, 110.671, 26.3068, 0.67", "23.406, 112.675, 30.297, 0.67", "24.1107, 113.361, 31.7611, 1.33", "24.6727, 113.9, 32.9752, 0.33", "26.7472, 115.952, 37.5276, 1.33", "28.5023, 117.953, 41.5218, 0.33", "29.8583, 119.671, 44.3905, 0.67", "30.5647, 120.636, 45.6951, 0.33", "30.9374, 121.16, 46.3153, 0.67", "31.5871, 122.101, 47.1561, 0.33", "32.1373, 122.939, 47.6236, 1.33", "33.0945, 125.106, 48.3709, 0.33", "33.8053, 126.999, 48.8881, 0.33", "34.1027, 127.695, 49.0619, 0.67", "35.005, 129.635, 49.4977, 0.33", "35.5032, 130.664, 49.6948, 0.67", "36.0478, 131.746, 49.8865, 0.33", "36.8662, 133.249, 50.1356, 0.33", "37.899, 134.894, 50.4681, 0.67", "38.9273, 136.517, 50.7252, 0.33", "39.1505, 136.828, 50.7641, 0.67" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "18.4538, 67.6769, -13.8602, 0.33", "21.8314, 68.7226, -9.55432, 0.33", "23.1333, 69.1908, -7.97426, 0.67", "26.8536, 70.8088, -3.08449, 0.33", "27.8111, 71.2621, -1.87354, 1.33", "28.9929, 71.8583, -0.411444, 0.33", "29.7252, 72.2635, 0.489873, 0.67", "30.5075, 72.8603, 1.48189, 0.33", "33.4823, 75.3083, 4.06529, 1.33", "34.9393, 76.7443, 4.62763, 0.33", "35.2178, 77.0141, 4.64741, 0.67", "36.2013, 77.9605, 4.5571, 0.33", "37.5755, 79.2495, 4.30642, 0.67", "41.6656, 83.0611, 3.06714, 0.33", "43.798, 85.0212, 2.13512, 0.67", "46.5782, 87.5654, 0.904221, 0.33", "48.9515, 89.6151, -0.133816, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-17.0762, 55.382, -1.20906, 0.33", "-19.7985, 56.0449, -1.31442, 0.33", "-23.7497, 56.8294, -1.32802, 0.33", "-24.5414, 56.9839, -1.32266, 0.67", "-31.2752, 58.1216, -1.38485, 0.33", "-33.6881, 58.5284, -1.45198, 0.67", "-36.4744, 59.0084, -1.55012, 0.33", "-36.879, 59.0665, -1.57878, 0.67", "-38.8794, 59.1912, -1.68187, 0.33", "-42.1221, 59.2454, -1.80433, 0.33", "-45.1962, 59.3027, -1.89696, 0.33", "-46.1602, 59.3214, -1.96431, 1.33", "-50.9579, 59.4666, -2.45843, 0.33", "-53.9802, 59.5109, -2.72535, 0.33", "-55.9775, 59.4174, -2.83168, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-17.0762, 55.382, -1.20906, 0.67", "-18.0916, 59.9403, -1.40489, 0.67", "-19.3098, 65.7543, -1.80093, 0.67", "-19.9334, 69.5874, -2.19726, 0.67", "-20.7355, 75.928, -2.93935, 0.67", "-21.0962, 79.1868, -3.34279, 0.67", "-21.3315, 83.3459, -4.05928, 0.67", "-21.3089, 85.8798, -4.65197, 1.33", "-21.0388, 89.5182, -5.65323, 0.67", "-20.7502, 93.2334, -6.4976, 2.0", "-20.5196, 95.8282, -7.14387, 1.33", "-19.8153, 102.548, -8.74526, 1.33", "-19.5578, 105.553, -9.40579, 0.67", "-19.2886, 110.686, -10.4646, 0.67", "-19.3674, 118.383, -11.8033, 1.33", "-19.6419, 123.773, -12.6541, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "7.12376, 149.964, -75.1994, 0.33", "7.93488, 149.443, -81.8003, 0.33", "7.97782, 149.415, -82.1498, 0.67", "8.09548, 149.339, -83.1073, 0.33", "8.16892, 149.292, -83.705, 0.67", "8.5093, 149.073, -86.475, 0.33", "8.82981, 148.867, -89.0834, 2.0" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.12376, 149.964, -75.1994, 0.33", "6.89262, 150.923, -75.1413, 0.33", "6.84539, 151.119, -75.1294, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "48.9515, 89.6151, -0.133816, 0.33", "48.39, 89.0266, 1.92945, 0.33", "48.2923, 88.9242, 2.2885, 0.67", "47.8656, 88.477, 3.85642, 0.33", "47.7679, 88.3746, 4.21547, 0.67", "46.8168, 87.3778, 7.71038, 0.33", "45.9345, 86.4531, 10.9523, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "48.9515, 89.6151, -0.133816, 0.67", "56.5858, 93.621, -6.28582, 0.67", "58.2578, 94.6984, -7.47537, 1.33", "60.1566, 96.135, -8.55002, 0.33", "61.0075, 96.8321, -8.94704, 0.67", "62.4311, 98.1327, -9.56391, 0.67", "65.6998, 101.371, -10.7045, 0.67", "67.601, 103.768, -10.6296, 0.33", "69.1365, 105.593, -10.5028, 0.33", "69.9529, 106.583, -10.3666, 0.67", "70.9828, 107.847, -10.2513, 0.67", "72.6094, 109.919, -10.0905, 0.33", "74.1419, 111.89, -10.0001, 1.33", "76.229, 114.521, -10.2549, 0.33", "76.8862, 115.431, -10.4101, 0.67", "78.8237, 118.417, -10.8427, 0.33", "79.1747, 119.038, -10.9283, 0.67", "80.8582, 122.993, -11.5201, 0.33", "80.9473, 123.488, -11.4968, 0.67", "80.8016, 125.257, -10.9762, 0.33", "80.1435, 128.113, -9.57284, 0.67", "79.6926, 129.664, -8.69881, 0.33", "79.483, 130.382, -8.29252, 0.67", "78.0715, 135.165, -5.64156, 0.67", "77.5605, 137.522, -4.53929, 0.33", "77.0292, 141.597, -2.97509, 0.33", "76.9603, 143.373, -2.46364, 0.67", "76.9614, 146.75, -1.59706, 0.33", "77.0946, 148.747, -1.23929, 0.67", "77.7211, 151.904, -1.07845, 0.67", "78.3032, 153.853, -0.987116, 0.33", "78.4972, 154.282, -1.01661, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-55.9775, 59.4174, -2.83168, 0.67", "-61.642, 57.4707, -3.4521, 0.67", "-62.8951, 57.0125, -3.60613, 0.67", "-65.1142, 56.1359, -3.88446, 0.33", "-67.4842, 55.1708, -4.21497, 0.67", "-69.2983, 54.3838, -4.48576, 0.33", "-70.1026, 54.02, -4.53523, 0.67", "-72.3028, 53.0374, -4.44606, 0.33", "-73.1977, 52.5953, -4.39759, 0.67", "-75.1634, 51.4816, -4.12625, 0.33", "-75.8883, 51.0111, -3.96377, 0.67", "-80.1537, 48.2482, -2.84923, 0.33", "-82.0018, 47.0658, -2.32125, 0.67", "-85.5618, 44.7452, -1.17088, 0.67", "-89.1884, 42.3834, 0.0322772, 0.67", "-91.843, 40.5323, 1.02977, 0.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-55.9775, 59.4174, -2.83168, 1.33", "-57.8314, 57.8841, -3.92691, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-19.6419, 123.773, -12.6541, 0.67", "-19.674, 125.554, -11.7315, 0.67", "-19.7198, 128.09, -10.4177, 0.67" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-19.6419, 123.773, -12.6541, 0.67", "-21.6699, 125.581, -13.3495, 0.67", "-23.447, 127.404, -14.1244, 0.33", "-24.9411, 129.333, -14.6972, 0.67", "-26.5475, 131.627, -15.2648, 0.33", "-30.2462, 137.228, -16.4849, 0.67", "-33.0407, 141.702, -17.3494, 0.33", "-34.6301, 144.97, -18.0329, 0.67", "-36.8225, 150.761, -19.2777, 0.33", "-37.0228, 151.405, -19.4137, 0.67", "-37.6419, 153.698, -19.8982, 0.33", "-38.5079, 157.221, -20.4647, 2.0", "-40.6166, 165.41, -21.2847, 0.67", "-42.4254, 172.362, -21.7688, 1.33", "-43.2663, 175.703, -22.2403, 0.33", "-43.4173, 176.352, -22.3496, 0.67", "-44.8384, 181.847, -23.0486, 0.33", "-45.1822, 182.871, -23.1131, 0.67", "-46.5596, 186.021, -22.9497, 0.33", "-50.5666, 194.689, -22.3056, 0.67", "-51.4811, 196.642, -22.2049, 0.33", "-54.6393, 203.065, -22.2519, 0.67", "-57.0071, 207.437, -22.8678, 0.67", "-58.3259, 209.546, -22.961, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-57.8314, 57.8841, -3.92691, 0.67", "-61.907, 55.0513, 1.67692, 0.67", "-62.3848, 54.7192, 2.33396, 0.67", "-64.2393, 53.4302, 4.88381, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-57.8314, 57.8841, -3.92691, 0.33", "-58.8639, 56.5265, -3.09836, 0.33", "-60.249, 54.2594, -1.85206, 0.33", "-61.951, 50.9519, -0.310535, 0.67", "-63.1698, 48.5117, 0.727155, 0.33", "-65.1986, 44.6241, 2.31241, 0.33", "-66.148, 42.805, 3.05421, 0.33", "-68.0703, 39.6084, 4.32662, 0.67", "-69.4623, 37.5645, 5.01591, 0.67", "-70.5404, 35.8034, 5.40313, 0.67", "-70.9679, 34.8853, 5.65919, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-19.7198, 128.09, -10.4177, 0.33", "-20.6897, 129.117, -10.7155, 0.33", "-20.9596, 129.402, -10.7983, 0.67", "-22.3298, 130.853, -11.2191, 0.33", "-23.3196, 131.901, -11.523, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-19.7198, 128.09, -10.4177, 0.67", "-19.6605, 128.87, -9.3302, 0.67", "-19.6357, 131.832, -5.09275, 0.67", "-19.56, 133.373, -2.71515, 0.33", "-19.5181, 134.234, -1.41197, 0.67", "-19.4641, 135.841, 0.994306, 0.33", "-19.4275, 136.934, 2.63013, 0.33", "-19.4781, 138.319, 4.77463, 0.67", "-19.508, 139.301, 6.46826, 0.33", "-19.588, 140.053, 7.64276, 0.33", "-19.5725, 140.497, 8.41425, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-58.3259, 209.546, -22.961, 0.67", "-59.4256, 213.373, -27.4163, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-58.3259, 209.546, -22.961, 0.67", "-59.1205, 210.052, -24.7354, 0.67", "-59.7748, 210.469, -26.1966, 0.67", "-60.8874, 211.178, -28.6811, 0.33", "-62.2848, 212.068, -31.8017, 1.33", "-65.5981, 214.179, -39.2006, 0.33", "-65.8243, 214.323, -39.7059, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-65.8243, 214.323, -39.7059, 0.33", "-65.3386, 214.49, -42.095, 0.33", "-65.2656, 214.522, -42.4852, 0.67", "-64.787, 214.733, -45.0426, 0.33", "-64.5218, 214.85, -46.4592, 0.67", "-63.7741, 215.18, -50.4542, 0.67", "-63.0798, 215.487, -54.1636, 0.33", "-63.0212, 215.518, -54.4374, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-65.8243, 214.323, -39.7059, 0.67", "-72.8417, 219.28, -39.1379, 0.67", "-77.1504, 222.324, -38.7891, 0.33", "-77.9756, 222.907, -38.7224, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "axon_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_80", "dend_80", "dend_80", "dend_49", "dend_49", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_2", "dend_2", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_73", "dend_73", "dend_73", "dend_73", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_DBC_78b422a17a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_80, id: dend_80, parent: dend_48
create dend_80
public dend_80
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_73, id: dend_73, parent: dend_49
create dend_73
public dend_73
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_25, dend_0, axon_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, axon_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_61
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999999788066063)
    connect dend_25(0), soma_0(0.49999999788066063)
    connect dend_0(0), soma_0(0.49999999788066063)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_80(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_73(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.7707, 14.3445, 1.63673, 2.6356 ) }
    soma_0 { pt3dadd( 1.65855, 13.0663, 1.48326, 4.68599 ) }
    soma_0 { pt3dadd( 1.5464, 11.788, 1.32978, 5.81905 ) }
    soma_0 { pt3dadd( 1.43425, 10.5097, 1.1763, 6.95808 ) }
    soma_0 { pt3dadd( 1.32209, 9.23142, 1.02283, 8.17562 ) }
    soma_0 { pt3dadd( 1.20994, 7.95314, 0.869351, 9.23498 ) }
    soma_0 { pt3dadd( 1.09779, 6.67486, 0.715875, 9.66374 ) }
    soma_0 { pt3dadd( 0.985636, 5.39658, 0.562399, 9.75915 ) }
    soma_0 { pt3dadd( 0.873483, 4.1183, 0.408922, 9.85456 ) }
    soma_0 { pt3dadd( 0.76133, 2.84002, 0.255446, 9.99274 ) }
    soma_0 { pt3dadd( 0.649178, 1.56175, 0.101969, 10.3671 ) }
    soma_0 { pt3dadd( 0.537025, 0.283466, -0.051507, 11.1059 ) }
    soma_0 { pt3dadd( 0.424873, -0.994813, -0.204983, 11.9164 ) }
    soma_0 { pt3dadd( 0.31272, -2.27309, -0.35846, 12.7207 ) }
    soma_0 { pt3dadd( 0.200568, -3.55137, -0.511936, 12.9931 ) }
    soma_0 { pt3dadd( 0.0884149, -4.82965, -0.665413, 12.8706 ) }
    soma_0 { pt3dadd( -0.0237377, -6.10793, -0.818889, 12.7481 ) }
    soma_0 { pt3dadd( -0.13589, -7.38621, -0.972365, 11.5655 ) }
    soma_0 { pt3dadd( -0.248043, -8.66449, -1.12584, 9.82802 ) }
    soma_0 { pt3dadd( -0.360195, -9.94277, -1.27932, 4.98087 ) }
    soma_0 { pt3dadd( -0.472348, -11.221, -1.43279, 2.92263 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.24391, 15.5458, 5.96094, 3.33 ) }
    dend_30 { pt3dadd( 1.0239, 20.8219, 6.80101, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.08609, -3.14072, 6.39094, 1.33 ) }
    dend_25 { pt3dadd( -9.63466, -3.28896, 6.71191, 0.67 ) }
    dend_25 { pt3dadd( -11.0321, -3.61518, 6.83954, 0.67 ) }
    dend_25 { pt3dadd( -12.589, -3.98949, 6.95602, 0.67 ) }
    dend_25 { pt3dadd( -15.5153, -4.43093, 7.14502, 0.67 ) }
    dend_25 { pt3dadd( -17.3915, -4.60475, 7.25277, 0.67 ) }
    dend_25 { pt3dadd( -20.9192, -4.72309, 7.43305, 0.67 ) }
    dend_25 { pt3dadd( -25.5804, -4.67755, 7.61848, 0.67 ) }
    dend_25 { pt3dadd( -27.1883, -4.66532, 7.7043, 0.67 ) }
    dend_25 { pt3dadd( -29.7899, -4.69093, 7.87515, 0.67 ) }
    dend_25 { pt3dadd( -31.1163, -4.80046, 7.85218, 0.67 ) }
    dend_25 { pt3dadd( -32.9624, -5.01441, 7.52577, 0.67 ) }
    dend_25 { pt3dadd( -34.2325, -5.10797, 7.13818, 0.67 ) }
    dend_25 { pt3dadd( -36.0705, -5.14976, 6.5187, 0.67 ) }
    dend_25 { pt3dadd( -38.233, -5.30404, 5.80602, 0.67 ) }
    dend_25 { pt3dadd( -43.5273, -5.62975, 4.35662, 0.67 ) }
    dend_25 { pt3dadd( -46.0906, -5.62071, 3.86657, 0.67 ) }
    dend_25 { pt3dadd( -48.7703, -5.35975, 3.65003, 0.67 ) }
    dend_25 { pt3dadd( -51.1017, -4.96828, 3.71919, 0.67 ) }
    dend_25 { pt3dadd( -52.4289, -4.66459, 3.85506, 0.67 ) }
    dend_25 { pt3dadd( -55.7609, -3.6799, 4.43842, 0.67 ) }
    dend_25 { pt3dadd( -59.6358, -2.3841, 5.37052, 0.67 ) }
    dend_25 { pt3dadd( -63.7832, -0.885889, 6.34517, 0.67 ) }
    dend_25 { pt3dadd( -66.8676, 0.342891, 7.0334, 0.33 ) }
    dend_25 { pt3dadd( -67.7759, 0.755274, 7.22391, 0.67 ) }
    dend_25 { pt3dadd( -69.9583, 1.76249, 7.62647, 1.33 ) }
    dend_25 { pt3dadd( -75.0144, 4.07208, 8.34418, 0.67 ) }
    dend_25 { pt3dadd( -76.0645, 4.55463, 8.39514, 0.67 ) }
    dend_25 { pt3dadd( -78.8305, 5.77467, 8.21231, 1.33 ) }
    dend_25 { pt3dadd( -81.3175, 6.85386, 7.90796, 0.67 ) }
    dend_25 { pt3dadd( -85.049, 8.35752, 7.3692, 0.67 ) }
    dend_25 { pt3dadd( -88.1701, 9.40697, 6.85343, 0.67 ) }
    dend_25 { pt3dadd( -92.0007, 10.4917, 6.04565, 0.67 ) }
    dend_25 { pt3dadd( -93.455, 10.852, 5.72359, 1.33 ) }
    dend_25 { pt3dadd( -95.9592, 11.3632, 5.12997, 0.33 ) }
    dend_25 { pt3dadd( -97.544, 11.6598, 4.77781, 1.33 ) }
    dend_25 { pt3dadd( -101.15, 12.4485, 3.95848, 0.67 ) }
    dend_25 { pt3dadd( -104.345, 12.8517, 3.43003, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.04391, -8.90719, 0.670944, 2.67 ) }
    dend_0 { pt3dadd( 7.04372, -12.0907, 2.92796, 2.0 ) }
    dend_0 { pt3dadd( 10.66, -17.8475, 7.00941, 2.0 ) }
    dend_0 { pt3dadd( 13.9879, -23.145, 10.7652, 2.0 ) }
    dend_0 { pt3dadd( 15.3235, -25.2711, 12.2726, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.472348, -11.221, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -1.78337, -26.1636, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 1.0239, 20.8219, 6.80101, 2.67 ) }
    dend_48 { pt3dadd( 0.155256, 22.7859, 8.27915, 2.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.0239, 20.8219, 6.80101, 1.33 ) }
    dend_31 { pt3dadd( 1.64821, 19.6783, -9.13377, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -104.345, 12.8517, 3.43003, 0.67 ) }
    dend_27 { pt3dadd( -107.924, 14.4835, 3.1145, 0.67 ) }
    dend_27 { pt3dadd( -112.361, 15.6741, 2.02292, 0.67 ) }
    dend_27 { pt3dadd( -114.74, 15.9418, 1.28365, 0.33 ) }
    dend_27 { pt3dadd( -115.678, 16.0277, 0.971689, 0.67 ) }
    dend_27 { pt3dadd( -117.058, 16.065, 0.416176, 0.67 ) }
    dend_27 { pt3dadd( -119.103, 16.0654, -0.448504, 0.67 ) }
    dend_27 { pt3dadd( -124.17, 15.6872, -2.88945, 0.67 ) }
    dend_27 { pt3dadd( -127.37, 15.4276, -4.61856, 0.67 ) }
    dend_27 { pt3dadd( -129.215, 15.324, -5.6603, 0.67 ) }
    dend_27 { pt3dadd( -132.947, 15.3254, -7.74052, 2.0 ) }
    dend_27 { pt3dadd( -134.69, 15.428, -8.73928, 0.33 ) }
    dend_27 { pt3dadd( -136.354, 15.6686, -9.68249, 0.67 ) }
    dend_27 { pt3dadd( -137.548, 15.9537, -10.2554, 1.33 ) }
    dend_27 { pt3dadd( -140.137, 16.7165, -11.7313, 0.33 ) }
    dend_27 { pt3dadd( -141.337, 17.0918, -12.3963, 2.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -104.345, 12.8517, 3.43003, 0.33 ) }
    dend_26 { pt3dadd( -104.172, 11.6563, 3.25138, 0.33 ) }
    dend_26 { pt3dadd( -104.034, 10.707, 3.10951, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.3235, -25.2711, 12.2726, 1.33 ) }
    dend_12 { pt3dadd( 20.1123, -30.8905, 7.63237E-4, 1.33 ) }
    dend_12 { pt3dadd( 21.9658, -33.0654, -4.74887, 0.67 ) }
    dend_12 { pt3dadd( 23.1762, -34.4857, -7.85069, 0.67 ) }
    dend_12 { pt3dadd( 24.1141, -35.5863, -10.2542, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.3235, -25.2711, 12.2726, 0.67 ) }
    dend_1 { pt3dadd( 15.4516, -30.9253, 11.7884, 0.67 ) }
    dend_1 { pt3dadd( 15.8007, -35.0244, 11.8982, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 16.3232, -40.7179, 12.2659, 0.67 ) }
    dend_1 { pt3dadd( 17.1327, -47.3924, 12.7921, 1.33 ) }
    dend_1 { pt3dadd( 17.8553, -53.1569, 13.2391, 1.33 ) }
    dend_1 { pt3dadd( 19.3744, -63.3773, 13.9943, 1.33 ) }
    dend_1 { pt3dadd( 20.2871, -67.279, 14.3453, 1.33 ) }
    dend_1 { pt3dadd( 21.6048, -72.2267, 14.8463, 1.33 ) }
    dend_1 { pt3dadd( 22.6063, -76.0576, 15.1798, 1.33 ) }
    dend_1 { pt3dadd( 23.6412, -80.2299, 15.5798, 1.33 ) }
    dend_1 { pt3dadd( 24.7003, -84.9382, 15.8266, 1.33 ) }
    dend_1 { pt3dadd( 26.5944, -93.3818, 15.5482, 0.67 ) }
    dend_1 { pt3dadd( 27.4071, -97.2689, 15.4051, 1.33 ) }
    dend_1 { pt3dadd( 28.0009, -99.9837, 15.3025, 1.33 ) }
    dend_1 { pt3dadd( 29.346, -107.45, 15.3459, 1.33 ) }
    dend_1 { pt3dadd( 29.9941, -111.655, 15.334, 1.33 ) }
    dend_1 { pt3dadd( 30.5049, -117.02, 15.2751, 0.67 ) }
    dend_1 { pt3dadd( 30.8394, -123.556, 15.234, 1.33 ) }
    dend_1 { pt3dadd( 31.026, -127.712, 15.1332, 0.67 ) }
    dend_1 { pt3dadd( 31.4224, -139.638, 14.6177, 1.33 ) }
    dend_1 { pt3dadd( 31.5406, -145.329, 14.3749, 1.33 ) }
    dend_1 { pt3dadd( 31.7826, -149.386, 14.1756, 1.33 ) }
    dend_1 { pt3dadd( 32.11, -153.252, 13.9452, 1.33 ) }
    dend_1 { pt3dadd( 32.6923, -158.645, 13.7743, 1.33 ) }
    dend_1 { pt3dadd( 33.0993, -161.543, 13.7418, 1.33 ) }
    dend_1 { pt3dadd( 34.7304, -169.297, 13.6162, 2.0 ) }
    dend_1 { pt3dadd( 36.1106, -174.758, 13.8918, 1.33 ) }
    dend_1 { pt3dadd( 36.8194, -177.086, 14.0546, 2.0 ) }
    dend_1 { pt3dadd( 38.9799, -183.971, 14.7731, 2.0 ) }
    dend_1 { pt3dadd( 39.7699, -186.616, 15.3192, 2.0 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -4.40542, -56.0488, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -5.71644, -70.9914, -1.43279, 0.33 ) }
    // Section: dend_80, id: dend_80, parent: dend_48 (entry count 31/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.155256, 22.7859, 8.27915, 0.67 ) }
    dend_80 { pt3dadd( 0.484269, 24.1605, 9.30335, 0.67 ) }
    dend_80 { pt3dadd( 1.04669, 26.5103, 11.0541, 0.67 ) }
    dend_80 { pt3dadd( 2.38099, 32.0849, 15.2077, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 35/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.155256, 22.7859, 8.27915, 2.67 ) }
    dend_49 { pt3dadd( 0.702058, 28.7709, 2.25818, 2.67 ) }
    dend_49 { pt3dadd( 1.06942, 32.7919, -1.78696, 2.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.64821, 19.6783, -9.13377, 1.33 ) }
    dend_33 { pt3dadd( 0.475824, 23.6705, -15.9103, 1.33 ) }
    dend_33 { pt3dadd( -0.226989, 26.0638, -19.9726, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.64821, 19.6783, -9.13377, 0.67 ) }
    dend_32 { pt3dadd( 3.62483, 17.522, -8.35372, 0.67 ) }
    dend_32 { pt3dadd( 5.72103, 15.3839, -7.19394, 0.33 ) }
    dend_32 { pt3dadd( 7.0518, 14.1679, -6.37814, 0.67 ) }
    dend_32 { pt3dadd( 8.1443, 13.2496, -5.70153, 0.67 ) }
    dend_32 { pt3dadd( 9.22119, 12.3328, -5.02955, 0.33 ) }
    dend_32 { pt3dadd( 9.91613, 11.771, -4.60734, 0.67 ) }
    dend_32 { pt3dadd( 12.5095, 10.1404, -3.37002, 0.33 ) }
    dend_32 { pt3dadd( 13.4235, 9.63306, -2.96825, 0.67 ) }
    dend_32 { pt3dadd( 15.3402, 8.58193, -2.26911, 0.33 ) }
    dend_32 { pt3dadd( 16.4323, 8.04809, -1.97794, 0.67 ) }
    dend_32 { pt3dadd( 17.6577, 7.52034, -1.78089, 0.33 ) }
    dend_32 { pt3dadd( 19.501, 6.89575, -1.65036, 0.67 ) }
    dend_32 { pt3dadd( 21.0518, 6.47353, -1.75851, 0.33 ) }
    dend_32 { pt3dadd( 22.2575, 6.16005, -1.85127, 0.67 ) }
    dend_32 { pt3dadd( 23.0364, 6.02274, -1.91576, 0.33 ) }
    dend_32 { pt3dadd( 24.1503, 5.87698, -1.99194, 1.33 ) }
    dend_32 { pt3dadd( 27.1467, 5.47435, -2.10873, 0.33 ) }
    dend_32 { pt3dadd( 28.8647, 5.33008, -2.03432, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -141.337, 17.0918, -12.3963, 0.33 ) }
    dend_29 { pt3dadd( -142.467, 15.7406, -10.4393, 0.33 ) }
    dend_29 { pt3dadd( -143.333, 14.7055, -8.94018, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -141.337, 17.0918, -12.3963, 0.33 ) }
    dend_28 { pt3dadd( -143.889, 17.641, -11.5321, 0.33 ) }
    dend_28 { pt3dadd( -144.74, 17.8241, -11.244, 0.67 ) }
    dend_28 { pt3dadd( -147.21, 18.3556, -10.4076, 0.33 ) }
    dend_28 { pt3dadd( -149.351, 18.816, -9.68292, 0.67 ) }
    dend_28 { pt3dadd( -150.879, 19.145, -9.16525, 0.33 ) }
    dend_28 { pt3dadd( -151.814, 19.3462, -8.84862, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 24.1141, -35.5863, -10.2542, 0.67 ) }
    dend_20 { pt3dadd( 27.719, -36.8349, -13.8344, 0.67 ) }
    dend_20 { pt3dadd( 30.3472, -37.809, -16.0654, 0.67 ) }
    dend_20 { pt3dadd( 36.1834, -39.4044, -20.2525, 1.33 ) }
    dend_20 { pt3dadd( 38.1465, -39.6115, -21.3713, 0.67 ) }
    dend_20 { pt3dadd( 42.8316, -39.6155, -23.4861, 0.67 ) }
    dend_20 { pt3dadd( 45.3355, -39.5565, -24.2831, 1.33 ) }
    dend_20 { pt3dadd( 48.5863, -39.3414, -25.1297, 0.67 ) }
    dend_20 { pt3dadd( 52.3184, -38.8852, -25.4901, 0.67 ) }
    dend_20 { pt3dadd( 57.7723, -37.5193, -25.2236, 0.67 ) }
    dend_20 { pt3dadd( 59.9877, -36.752, -24.9758, 0.67 ) }
    dend_20 { pt3dadd( 64.0762, -35.0434, -24.172, 0.67 ) }
    dend_20 { pt3dadd( 69.8159, -32.0614, -22.9167, 1.33 ) }
    dend_20 { pt3dadd( 72.7547, -30.3442, -22.2949, 0.67 ) }
    dend_20 { pt3dadd( 76.1142, -28.1307, -21.6434, 1.33 ) }
    dend_20 { pt3dadd( 77.6935, -26.963, -21.6278, 0.67 ) }
    dend_20 { pt3dadd( 78.7606, -26.1052, -21.8155, 1.33 ) }
    dend_20 { pt3dadd( 80.1663, -24.8117, -22.2863, 0.67 ) }
    dend_20 { pt3dadd( 82.5841, -22.5465, -23.2757, 0.67 ) }
    dend_20 { pt3dadd( 85.4041, -20.123, -24.5546, 1.33 ) }
    dend_20 { pt3dadd( 90.6231, -16.2507, -26.7795, 0.67 ) }
    dend_20 { pt3dadd( 93.2925, -14.3766, -27.8523, 0.33 ) }
    dend_20 { pt3dadd( 95.6934, -12.7427, -28.9375, 0.33 ) }
    dend_20 { pt3dadd( 97.6125, -11.602, -30.0, 0.67 ) }
    dend_20 { pt3dadd( 99.9558, -10.3138, -31.5975, 0.67 ) }
    dend_20 { pt3dadd( 102.331, -9.14869, -33.2636, 0.67 ) }
    dend_20 { pt3dadd( 103.4, -8.62319, -34.0002, 0.67 ) }
    dend_20 { pt3dadd( 108.872, -5.93616, -37.8883, 2.0 ) }
    dend_20 { pt3dadd( 114.232, -3.48723, -41.8701, 0.33 ) }
    dend_20 { pt3dadd( 117.514, -2.00463, -44.5286, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 118.703, -1.50587, -45.5686, 0.33 ) }
    dend_20 { pt3dadd( 119.884, -0.993398, -46.6726, 0.67 ) }
    dend_20 { pt3dadd( 121.032, -0.503588, -47.7627, 0.33 ) }
    dend_20 { pt3dadd( 124.421, 0.972636, -50.4498, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 24.1141, -35.5863, -10.2542, 0.67 ) }
    dend_13 { pt3dadd( 24.8958, -38.052, -11.1807, 0.67 ) }
    dend_13 { pt3dadd( 25.579, -40.0485, -11.9949, 0.67 ) }
    dend_13 { pt3dadd( 25.8894, -40.8932, -12.3342, 0.67 ) }
    dend_13 { pt3dadd( 26.8895, -43.7186, -13.3896, 1.33 ) }
    dend_13 { pt3dadd( 27.2216, -44.6787, -13.7162, 2.0 ) }
    dend_13 { pt3dadd( 27.7815, -46.3399, -14.239, 0.67 ) }
    dend_13 { pt3dadd( 28.1548, -47.5152, -14.644, 1.33 ) }
    dend_13 { pt3dadd( 28.4892, -48.7716, -15.0349, 0.67 ) }
    dend_13 { pt3dadd( 28.9755, -50.7729, -15.5314, 0.67 ) }
    dend_13 { pt3dadd( 29.3077, -52.3047, -15.7645, 1.33 ) }
    dend_13 { pt3dadd( 29.5237, -53.3367, -15.9431, 0.33 ) }
    dend_13 { pt3dadd( 29.699, -54.2741, -16.1165, 0.33 ) }
    dend_13 { pt3dadd( 29.8639, -55.478, -16.3435, 0.67 ) }
    dend_13 { pt3dadd( 29.9522, -56.2214, -16.5154, 1.33 ) }
    dend_13 { pt3dadd( 30.148, -57.6848, -16.8924, 0.67 ) }
    dend_13 { pt3dadd( 30.397, -59.539, -17.2587, 0.67 ) }
    dend_13 { pt3dadd( 30.6751, -61.6239, -17.5535, 1.33 ) }
    dend_13 { pt3dadd( 30.9215, -63.5705, -17.73, 0.67 ) }
    dend_13 { pt3dadd( 31.0187, -64.6437, -17.7798, 2.67 ) }
    dend_13 { pt3dadd( 31.076, -65.8578, -17.6879, 0.67 ) }
    dend_13 { pt3dadd( 31.081, -68.4958, -17.3653, 0.67 ) }
    dend_13 { pt3dadd( 31.0335, -69.4406, -17.2069, 0.33 ) }
    dend_13 { pt3dadd( 30.967, -70.5268, -17.0187, 0.67 ) }
    dend_13 { pt3dadd( 30.9238, -71.2924, -16.9074, 0.33 ) }
    dend_13 { pt3dadd( 30.7711, -74.0832, -16.6539, 2.0 ) }
    dend_13 { pt3dadd( 30.6758, -77.1234, -16.6712, 0.67 ) }
    dend_13 { pt3dadd( 30.6755, -77.7993, -16.7407, 0.67 ) }
    dend_13 { pt3dadd( 30.7386, -78.8826, -16.8606, 0.67 ) }
    dend_13 { pt3dadd( 30.8653, -80.2268, -17.0291, 1.33 ) }
    dend_13 { pt3dadd( 30.9907, -81.4236, -17.2061, 0.67 ) }
    dend_13 { pt3dadd( 31.2103, -83.2435, -17.5806, 0.67 ) }
    dend_13 { pt3dadd( 31.3201, -84.1809, -17.7291, 1.33 ) }
    dend_13 { pt3dadd( 31.4794, -85.5469, -17.9713, 0.67 ) }
    dend_13 { pt3dadd( 31.7075, -87.6179, -18.4444, 0.67 ) }
    dend_13 { pt3dadd( 31.7897, -88.3567, -18.5959, 0.67 ) }
    dend_13 { pt3dadd( 31.9216, -89.4944, -18.7908, 0.67 ) }
    dend_13 { pt3dadd( 32.0203, -90.5823, -18.9503, 0.67 ) }
    dend_13 { pt3dadd( 32.0689, -91.1727, -19.0648, 1.33 ) }
    dend_13 { pt3dadd( 32.1293, -92.6764, -19.4176, 0.67 ) }
    dend_13 { pt3dadd( 32.299, -94.8079, -19.9362, 2.0 ) }
    dend_13 { pt3dadd( 32.4632, -96.612, -20.2565, 0.67 ) }
    dend_13 { pt3dadd( 32.5145, -97.247, -20.3314, 0.67 ) }
    dend_13 { pt3dadd( 32.6533, -99.6787, -20.5034, 1.33 ) }
    dend_13 { pt3dadd( 32.714, -100.691, -20.5379, 0.67 ) }
    dend_13 { pt3dadd( 32.7973, -102.297, -20.5226, 0.67 ) }
    dend_13 { pt3dadd( 32.8605, -104.239, -20.4766, 1.33 ) }
    dend_13 { pt3dadd( 32.9349, -106.197, -20.3001, 0.67 ) }
    dend_13 { pt3dadd( 32.9801, -107.621, -20.1225, 0.67 ) }
    dend_13 { pt3dadd( 33.0215, -109.049, -19.9485, 0.67 ) }
    dend_13 { pt3dadd( 33.0593, -110.234, -19.9086, 0.67 ) }
    dend_13 { pt3dadd( 33.0968, -111.602, -19.9844, 2.0 ) }
    dend_13 { pt3dadd( 33.2319, -113.606, -20.2616, 0.67 ) }
    dend_13 { pt3dadd( 33.4139, -115.62, -20.6269, 0.67 ) }
    dend_13 { pt3dadd( 33.5978, -117.342, -20.9233, 2.0 ) }
    dend_13 { pt3dadd( 33.8718, -119.625, -21.2608, 0.67 ) }
    dend_13 { pt3dadd( 34.1061, -120.989, -21.432, 1.33 ) }
    dend_13 { pt3dadd( 34.3869, -122.447, -21.561, 0.67 ) }
    dend_13 { pt3dadd( 34.5001, -123.113, -21.5872, 0.67 ) }
    dend_13 { pt3dadd( 34.947, -125.343, -21.5349, 2.0 ) }
    dend_13 { pt3dadd( 35.2278, -126.751, -21.4273, 0.67 ) }
    dend_13 { pt3dadd( 35.465, -127.876, -21.3332, 0.67 ) }
    dend_13 { pt3dadd( 36.1167, -131.02, -21.1566, 0.67 ) }
    dend_13 { pt3dadd( 36.2829, -131.884, -21.1454, 0.67 ) }
    dend_13 { pt3dadd( 36.5534, -133.362, -21.197, 0.67 ) }
    dend_13 { pt3dadd( 36.7749, -134.545, -21.3747, 0.67 ) }
    dend_13 { pt3dadd( 36.9825, -135.908, -21.5881, 2.0 ) }
    dend_13 { pt3dadd( 37.1152, -136.946, -21.7672, 0.67 ) }
    dend_13 { pt3dadd( 37.3839, -138.718, -22.094, 1.33 ) }
    dend_13 { pt3dadd( 37.5328, -139.755, -22.2976, 0.67 ) }
    dend_13 { pt3dadd( 37.7227, -141.847, -22.7614, 0.67 ) }
    dend_13 { pt3dadd( 37.8742, -143.767, -23.2276, 1.33 ) }
    dend_13 { pt3dadd( 37.9634, -145.137, -23.5952, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 39.7699, -186.616, 15.3192, 1.33 ) }
    dend_11 { pt3dadd( 38.3708, -187.873, 15.6925, 1.33 ) }
    dend_11 { pt3dadd( 37.303, -188.833, 15.9774, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 39.7699, -186.616, 15.3192, 0.67 ) }
    dend_2 { pt3dadd( 40.2993, -189.732, 14.1402, 0.67 ) }
    dend_2 { pt3dadd( 40.8462, -192.951, 12.9226, 2.0 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 2.38099, 32.0849, 15.2077, 0.33 ) }
    dend_82 { pt3dadd( 4.12997, 33.9944, 16.5034, 0.33 ) }
    dend_82 { pt3dadd( 5.01042, 34.8695, 17.1035, 0.67 ) }
    dend_82 { pt3dadd( 7.8923, 37.3002, 18.8863, 0.67 ) }
    dend_82 { pt3dadd( 9.2442, 38.4404, 19.7226, 0.33 ) }
    dend_82 { pt3dadd( 10.1482, 39.2028, 20.2818, 0.33 ) }
    dend_82 { pt3dadd( 12.4422, 41.1376, 21.7009, 0.67 ) }
    dend_82 { pt3dadd( 13.3944, 41.9605, 22.4364, 0.33 ) }
    dend_82 { pt3dadd( 15.3015, 43.3961, 23.8268, 0.33 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 2.38099, 32.0849, 15.2077, 0.67 ) }
    dend_81 { pt3dadd( 3.04774, 34.6227, 17.5473, 0.67 ) }
    dend_81 { pt3dadd( 3.59236, 36.6955, 19.4582, 0.33 ) }
    dend_81 { pt3dadd( 3.99081, 38.2121, 20.8564, 0.67 ) }
    dend_81 { pt3dadd( 5.10124, 42.4385, 24.7527, 0.33 ) }
    // Section: dend_73, id: dend_73, parent: dend_49 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 1.06942, 32.7919, -1.78696, 0.67 ) }
    dend_73 { pt3dadd( 4.63054, 36.7152, -8.16179, 0.67 ) }
    dend_73 { pt3dadd( 5.97336, 38.1946, -10.5656, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_73 { pt3dadd( 8.93858, 41.4614, -15.8737, 0.67 ) }
    dend_73 { pt3dadd( 10.0517, 42.6878, -17.8664, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.06942, 32.7919, -1.78696, 2.0 ) }
    dend_50 { pt3dadd( -1.27337, 38.7515, -2.19555, 2.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.226989, 26.0638, -19.9726, 0.67 ) }
    dend_43 { pt3dadd( 2.65653, 32.8273, -16.5887, 0.67 ) }
    dend_43 { pt3dadd( 3.78705, 34.985, -15.5144, 0.67 ) }
    dend_43 { pt3dadd( 7.84721, 41.4842, -12.4278, 0.33 ) }
    dend_43 { pt3dadd( 8.93193, 43.0743, -11.7145, 0.33 ) }
    dend_43 { pt3dadd( 10.9776, 46.0026, -10.4735, 1.33 ) }
    dend_43 { pt3dadd( 12.2049, 47.7106, -9.86506, 0.67 ) }
    dend_43 { pt3dadd( 14.4008, 51.0142, -8.67505, 0.33 ) }
    dend_43 { pt3dadd( 16.3524, 53.4428, -8.15893, 1.33 ) }
    dend_43 { pt3dadd( 17.7658, 54.8643, -8.11048, 0.33 ) }
    dend_43 { pt3dadd( 18.7692, 55.8007, -8.09614, 0.67 ) }
    dend_43 { pt3dadd( 21.1783, 57.9595, -8.3693, 0.33 ) }
    dend_43 { pt3dadd( 23.1984, 59.8096, -8.793, 0.67 ) }
    dend_43 { pt3dadd( 25.9558, 62.3781, -9.57832, 1.33 ) }
    dend_43 { pt3dadd( 28.099, 64.5416, -10.0316, 0.33 ) }
    dend_43 { pt3dadd( 29.3875, 65.8627, -10.2005, 0.67 ) }
    dend_43 { pt3dadd( 34.0465, 70.7974, -10.4592, 0.33 ) }
    dend_43 { pt3dadd( 35.6183, 72.6236, -10.4108, 0.33 ) }
    dend_43 { pt3dadd( 37.1074, 74.5848, -10.3073, 0.67 ) }
    dend_43 { pt3dadd( 40.3588, 79.5715, -9.91956, 0.33 ) }
    dend_43 { pt3dadd( 41.5389, 81.5126, -9.72315, 0.33 ) }
    dend_43 { pt3dadd( 42.3719, 83.0055, -9.4992, 0.67 ) }
    dend_43 { pt3dadd( 43.5559, 85.393, -8.96374, 2.0 ) }
    dend_43 { pt3dadd( 44.6856, 87.8552, -8.58399, 0.33 ) }
    dend_43 { pt3dadd( 45.403, 89.5129, -8.42303, 0.33 ) }
    dend_43 { pt3dadd( 45.9834, 90.667, -8.27691, 0.67 ) }
    dend_43 { pt3dadd( 46.9563, 92.4713, -8.02395, 0.33 ) }
    dend_43 { pt3dadd( 47.4319, 93.292, -7.88392, 0.67 ) }
    dend_43 { pt3dadd( 49.1041, 95.9142, -7.31543, 0.33 ) }
    dend_43 { pt3dadd( 50.3637, 97.775, -6.8099, 0.33 ) }
    dend_43 { pt3dadd( 54.1041, 103.227, -5.03205, 0.33 ) }
    dend_43 { pt3dadd( 56.0071, 105.984, -3.95553, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.226989, 26.0638, -19.9726, 0.67 ) }
    dend_34 { pt3dadd( -2.39907, 28.9049, -24.1081, 0.67 ) }
    dend_34 { pt3dadd( -3.54906, 30.4091, -26.2976, 0.67 ) }
    dend_34 { pt3dadd( -7.6488, 35.7717, -34.1033, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 124.421, 0.972636, -50.4498, 0.33 ) }
    dend_22 { pt3dadd( 124.826, 1.58698, -51.6125, 0.33 ) }
    dend_22 { pt3dadd( 124.939, 1.75846, -51.937, 0.67 ) }
    dend_22 { pt3dadd( 125.851, 3.14196, -54.5554, 0.33 ) }
    dend_22 { pt3dadd( 126.277, 3.78812, -55.7782, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 124.421, 0.972636, -50.4498, 0.33 ) }
    dend_21 { pt3dadd( 126.094, 1.05632, -49.5788, 0.33 ) }
    dend_21 { pt3dadd( 126.37, 1.06784, -49.4414, 0.67 ) }
    dend_21 { pt3dadd( 128.537, 0.998363, -49.0172, 0.33 ) }
    dend_21 { pt3dadd( 130.196, 0.82801, -48.9137, 1.33 ) }
    dend_21 { pt3dadd( 133.038, 0.370082, -48.7357, 0.33 ) }
    dend_21 { pt3dadd( 134.128, 0.128772, -48.6588, 0.33 ) }
    dend_21 { pt3dadd( 136.522, -0.736778, -48.5383, 1.33 ) }
    dend_21 { pt3dadd( 141.734, -3.39898, -48.6862, 0.33 ) }
    dend_21 { pt3dadd( 142.776, -4.26948, -48.7859, 0.33 ) }
    dend_21 { pt3dadd( 144.393, -5.98828, -49.0278, 0.67 ) }
    dend_21 { pt3dadd( 145.314, -7.16676, -49.1675, 0.67 ) }
    dend_21 { pt3dadd( 146.516, -8.93779, -49.1718, 0.33 ) }
    dend_21 { pt3dadd( 147.806, -11.1303, -49.0444, 0.67 ) }
    dend_21 { pt3dadd( 150.159, -15.4816, -48.2847, 0.33 ) }
    dend_21 { pt3dadd( 150.303, -15.7377, -48.2507, 0.67 ) }
    dend_21 { pt3dadd( 151.886, -18.3717, -48.0676, 0.33 ) }
    dend_21 { pt3dadd( 152.942, -20.1305, -47.9182, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 37.9634, -145.137, -23.5952, 0.33 ) }
    dend_19 { pt3dadd( 40.8357, -146.328, -22.0224, 0.33 ) }
    dend_19 { pt3dadd( 41.8268, -146.802, -21.4459, 0.67 ) }
    dend_19 { pt3dadd( 42.6783, -147.44, -20.8212, 0.67 ) }
    dend_19 { pt3dadd( 44.1197, -148.577, -19.7571, 0.33 ) }
    dend_19 { pt3dadd( 46.397, -150.336, -18.2303, 2.0 ) }
    dend_19 { pt3dadd( 49.4678, -152.684, -15.9413, 0.33 ) }
    dend_19 { pt3dadd( 50.2926, -153.394, -15.2351, 1.33 ) }
    dend_19 { pt3dadd( 56.1511, -158.875, -9.80636, 0.67 ) }
    dend_19 { pt3dadd( 57.3578, -160.108, -8.62103, 0.33 ) }
    dend_19 { pt3dadd( 58.749, -161.632, -7.16758, 1.33 ) }
    dend_19 { pt3dadd( 62.5616, -166.022, -3.01174, 0.67 ) }
    dend_19 { pt3dadd( 63.6854, -167.301, -1.39785, 0.67 ) }
    dend_19 { pt3dadd( 64.2338, -167.859, -0.350746, 1.33 ) }
    dend_19 { pt3dadd( 64.8694, -168.455, 1.54013, 0.33 ) }
    dend_19 { pt3dadd( 65.4784, -169.364, 4.10727, 0.33 ) }
    dend_19 { pt3dadd( 65.8094, -170.442, 6.50941, 0.33 ) }
    dend_19 { pt3dadd( 66.7922, -173.782, 13.8865, 0.67 ) }
    dend_19 { pt3dadd( 66.9989, -174.349, 15.2494, 0.67 ) }
    dend_19 { pt3dadd( 67.3098, -175.307, 17.5633, 0.67 ) }
    dend_19 { pt3dadd( 67.5814, -176.652, 20.4736, 0.33 ) }
    dend_19 { pt3dadd( 67.6771, -178.972, 24.0966, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 37.9634, -145.137, -23.5952, 0.67 ) }
    dend_14 { pt3dadd( 38.1505, -147.483, -24.549, 0.67 ) }
    dend_14 { pt3dadd( 38.4059, -150.685, -25.8504, 0.67 ) }
    dend_14 { pt3dadd( 38.7543, -155.053, -27.6257, 0.33 ) }
    dend_14 { pt3dadd( 38.9425, -157.413, -28.585, 2.0 ) }
    dend_14 { pt3dadd( 39.2301, -161.018, -30.0503, 0.33 ) }
    dend_14 { pt3dadd( 39.3655, -162.716, -30.7403, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 40.8462, -192.951, 12.9226, 0.33 ) }
    dend_8 { pt3dadd( 36.7148, -195.993, 14.8154, 0.33 ) }
    dend_8 { pt3dadd( 35.4865, -197.017, 15.2253, 0.33 ) }
    dend_8 { pt3dadd( 33.3797, -199.024, 15.6939, 0.33 ) }
    dend_8 { pt3dadd( 32.4998, -199.983, 15.8311, 0.33 ) }
    dend_8 { pt3dadd( 30.5928, -202.07, 15.781, 0.67 ) }
    dend_8 { pt3dadd( 29.4117, -203.375, 15.654, 0.67 ) }
    dend_8 { pt3dadd( 27.9988, -205.005, 15.2414, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 26.5441, -206.798, 14.7748, 0.33 ) }
    dend_8 { pt3dadd( 25.5788, -208.1, 14.3785, 0.33 ) }
    dend_8 { pt3dadd( 22.964, -211.755, 13.1686, 0.33 ) }
    dend_8 { pt3dadd( 22.1374, -213.042, 12.5921, 1.33 ) }
    dend_8 { pt3dadd( 21.1204, -214.788, 11.7663, 0.33 ) }
    dend_8 { pt3dadd( 20.2503, -216.449, 10.9256, 0.33 ) }
    dend_8 { pt3dadd( 18.7356, -219.608, 9.18976, 0.67 ) }
    dend_8 { pt3dadd( 17.8665, -221.719, 7.96197, 1.33 ) }
    dend_8 { pt3dadd( 16.8132, -226.17, 5.31677, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 40.8462, -192.951, 12.9226, 0.67 ) }
    dend_3 { pt3dadd( 41.1045, -195.211, 13.0477, 0.67 ) }
    dend_3 { pt3dadd( 41.2685, -196.614, 13.1937, 1.33 ) }
    dend_3 { pt3dadd( 41.8059, -201.358, 13.7969, 0.67 ) }
    dend_3 { pt3dadd( 41.9633, -202.412, 13.9288, 0.67 ) }
    dend_3 { pt3dadd( 42.1046, -203.421, 14.0184, 0.67 ) }
    dend_3 { pt3dadd( 42.3637, -205.672, 14.1099, 0.67 ) }
    dend_3 { pt3dadd( 42.4904, -206.882, 14.1626, 1.33 ) }
    dend_3 { pt3dadd( 42.6832, -208.672, 14.2277, 0.67 ) }
    dend_3 { pt3dadd( 43.0051, -211.265, 14.2414, 0.67 ) }
    dend_3 { pt3dadd( 43.2055, -213.218, 14.1416, 0.67 ) }
    dend_3 { pt3dadd( 43.353, -214.872, 13.8774, 1.33 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 10.0517, 42.6878, -17.8664, 1.33 ) }
    dend_75 { pt3dadd( 12.3348, 44.3295, -16.4165, 0.33 ) }
    dend_75 { pt3dadd( 13.1263, 44.8987, -15.9138, 1.33 ) }
    dend_75 { pt3dadd( 15.5881, 46.6688, -14.3504, 0.33 ) }
    dend_75 { pt3dadd( 17.304, 47.9027, -13.2607, 0.67 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 10.0517, 42.6878, -17.8664, 1.33 ) }
    dend_74 { pt3dadd( 9.65141, 43.2359, -20.4383, 1.33 ) }
    dend_74 { pt3dadd( 9.34623, 44.5944, -25.6718, 0.67 ) }
    dend_74 { pt3dadd( 9.28482, 46.3976, -31.914, 1.33 ) }
    dend_74 { pt3dadd( 9.32188, 47.0277, -34.4571, 1.33 ) }
    dend_74 { pt3dadd( 9.71658, 48.9831, -42.3731, 0.67 ) }
    dend_74 { pt3dadd( 9.97335, 49.6131, -45.1116, 1.33 ) }
    dend_74 { pt3dadd( 10.9934, 51.3693, -52.604, 0.67 ) }
    dend_74 { pt3dadd( 11.2811, 51.6955, -53.8241, 1.33 ) }
    dend_74 { pt3dadd( 12.8982, 52.8929, -58.664, 0.67 ) }
    dend_74 { pt3dadd( 13.8725, 53.3476, -61.0258, 1.33 ) }
    dend_74 { pt3dadd( 16.9473, 54.1183, -67.3434, 0.67 ) }
    dend_74 { pt3dadd( 17.4987, 54.1863, -68.3327, 1.33 ) }
    dend_74 { pt3dadd( 18.967, 54.2488, -70.2155, 0.67 ) }
    dend_74 { pt3dadd( 20.0619, 54.2549, -71.3581, 1.33 ) }
    dend_74 { pt3dadd( 23.0192, 54.1766, -73.2772, 0.33 ) }
    dend_74 { pt3dadd( 24.116, 54.0669, -73.7979, 0.67 ) }
    dend_74 { pt3dadd( 25.6155, 53.9875, -74.21, 0.33 ) }
    dend_74 { pt3dadd( 26.2013, 53.976, -74.3668, 0.33 ) }
    dend_74 { pt3dadd( 28.8886, 53.9139, -75.1008, 2.0 ) }
    dend_74 { pt3dadd( 31.8229, 53.9926, -75.8893, 0.67 ) }
    dend_74 { pt3dadd( 35.162, 54.3786, -76.836, 0.33 ) }
    dend_74 { pt3dadd( 37.746, 54.8427, -77.6165, 1.33 ) }
    dend_74 { pt3dadd( 39.3161, 55.2386, -78.1004, 1.33 ) }
    dend_74 { pt3dadd( 41.6248, 55.9357, -78.8274, 0.33 ) }
    dend_74 { pt3dadd( 42.8125, 56.4105, -79.2728, 1.33 ) }
    dend_74 { pt3dadd( 45.8817, 57.9372, -80.5989, 0.33 ) }
    dend_74 { pt3dadd( 46.4557, 58.2456, -80.8013, 1.33 ) }
    dend_74 { pt3dadd( 47.8159, 59.0149, -81.243, 0.33 ) }
    dend_74 { pt3dadd( 48.3554, 59.3792, -81.4056, 0.67 ) }
    dend_74 { pt3dadd( 50.8483, 61.2988, -82.1147, 0.33 ) }
    dend_74 { pt3dadd( 51.3582, 61.7095, -82.2235, 0.67 ) }
    dend_74 { pt3dadd( 54.095, 63.9238, -82.5749, 0.33 ) }
    dend_74 { pt3dadd( 55.0573, 64.6889, -82.6589, 1.33 ) }
    dend_74 { pt3dadd( 56.3445, 65.6728, -82.7222, 0.33 ) }
    dend_74 { pt3dadd( 56.5885, 65.8542, -82.7591, 0.67 ) }
    dend_74 { pt3dadd( 58.8401, 67.502, -83.4389, 0.33 ) }
    dend_74 { pt3dadd( 59.582, 68.0377, -83.6957, 1.33 ) }
    dend_74 { pt3dadd( 61.6649, 69.3146, -84.469, 0.33 ) }
    dend_74 { pt3dadd( 62.6372, 69.7618, -84.7022, 0.67 ) }
    dend_74 { pt3dadd( 67.1535, 71.0301, -85.2485, 0.67 ) }
    dend_74 { pt3dadd( 69.2558, 71.1343, -85.2027, 0.33 ) }
    dend_74 { pt3dadd( 74.4932, 70.8455, -84.7813, 2.0 ) }
    dend_74 { pt3dadd( 78.0971, 70.3895, -84.1688, 0.33 ) }
    dend_74 { pt3dadd( 80.3073, 69.9196, -83.5333, 0.33 ) }
    dend_74 { pt3dadd( 81.9299, 69.5128, -82.8841, 0.67 ) }
    dend_74 { pt3dadd( 85.658, 68.489, -80.9205, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 73/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -1.27337, 38.7515, -2.19555, 2.0 ) }
    dend_52 { pt3dadd( 0.246118, 42.5343, -6.47224, 2.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.27337, 38.7515, -2.19555, 0.67 ) }
    dend_51 { pt3dadd( -1.9446, 44.1004, -1.28043, 0.67 ) }
    dend_51 { pt3dadd( -2.33228, 48.0882, -0.655474, 0.67 ) }
    dend_51 { pt3dadd( -2.72278, 51.7166, -0.178994, 0.67 ) }
    dend_51 { pt3dadd( -3.11994, 55.9966, 0.230462, 0.67 ) }
    dend_51 { pt3dadd( -3.64476, 61.6955, 0.591895, 0.67 ) }
    dend_51 { pt3dadd( -3.9284, 65.3059, 0.776173, 1.33 ) }
    dend_51 { pt3dadd( -4.64094, 74.458, 1.06522, 0.67 ) }
    dend_51 { pt3dadd( -4.83554, 78.0594, 0.926986, 0.67 ) }
    dend_51 { pt3dadd( -5.0192, 83.7142, 0.64177, 0.67 ) }
    dend_51 { pt3dadd( -5.00888, 86.6802, 0.529118, 0.67 ) }
    dend_51 { pt3dadd( -4.88763, 88.9571, 0.451059, 1.33 ) }
    dend_51 { pt3dadd( -4.7133, 92.5636, 0.622368, 0.67 ) }
    dend_51 { pt3dadd( -4.66261, 99.7289, 1.78793, 0.67 ) }
    dend_51 { pt3dadd( -4.57674, 105.359, 3.20829, 0.67 ) }
    dend_51 { pt3dadd( -4.64208, 108.699, 4.51308, 1.33 ) }
    dend_51 { pt3dadd( -4.73421, 110.786, 5.59007, 0.67 ) }
    dend_51 { pt3dadd( -5.15353, 114.062, 7.75467, 0.67 ) }
    dend_51 { pt3dadd( -5.50864, 115.598, 9.32062, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 56.0071, 105.984, -3.95553, 0.33 ) }
    dend_47 { pt3dadd( 57.0232, 105.931, -4.60413, 0.33 ) }
    dend_47 { pt3dadd( 58.5304, 105.853, -5.56619, 0.67 ) }
    dend_47 { pt3dadd( 59.5389, 105.801, -6.20996, 0.33 ) }
    dend_47 { pt3dadd( 60.1052, 105.771, -6.57146, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 56.0071, 105.984, -3.95553, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 56.5727, 107.338, -4.75103, 1.33 ) }
    dend_44 { pt3dadd( 57.4965, 109.492, -6.26835, 0.33 ) }
    dend_44 { pt3dadd( 57.6556, 109.833, -6.55757, 0.67 ) }
    dend_44 { pt3dadd( 58.4597, 111.552, -8.21302, 0.33 ) }
    dend_44 { pt3dadd( 58.7881, 112.22, -8.754, 0.67 ) }
    dend_44 { pt3dadd( 61.0445, 116.525, -11.7067, 0.33 ) }
    dend_44 { pt3dadd( 61.3626, 117.028, -12.0109, 0.67 ) }
    dend_44 { pt3dadd( 62.921, 119.171, -13.1779, 0.33 ) }
    dend_44 { pt3dadd( 64.4314, 121.313, -14.0057, 0.67 ) }
    dend_44 { pt3dadd( 68.1207, 126.746, -15.3216, 0.33 ) }
    dend_44 { pt3dadd( 68.5219, 127.354, -15.3858, 0.67 ) }
    dend_44 { pt3dadd( 70.8595, 130.581, -14.922, 0.33 ) }
    dend_44 { pt3dadd( 74.546, 135.78, -14.3437, 1.33 ) }
    dend_44 { pt3dadd( 75.5332, 137.214, -14.1663, 0.33 ) }
    dend_44 { pt3dadd( 75.8476, 137.754, -14.3602, 0.67 ) }
    dend_44 { pt3dadd( 77.201, 140.381, -16.0524, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.6488, 35.7717, -34.1033, 0.33 ) }
    dend_38 { pt3dadd( -7.65249, 38.225, -37.0556, 0.33 ) }
    dend_38 { pt3dadd( -7.61617, 40.3878, -39.3032, 0.33 ) }
    dend_38 { pt3dadd( -7.47338, 43.447, -42.0942, 0.67 ) }
    dend_38 { pt3dadd( -7.36132, 44.7743, -43.4116, 0.33 ) }
    dend_38 { pt3dadd( -7.18151, 47.1172, -45.6672, 1.33 ) }
    dend_38 { pt3dadd( -7.04917, 51.86, -50.1399, 0.33 ) }
    dend_38 { pt3dadd( -6.97517, 54.6444, -52.5803, 1.33 ) }
    dend_38 { pt3dadd( -7.03209, 56.6665, -54.1605, 0.33 ) }
    dend_38 { pt3dadd( -7.27144, 62.4895, -58.0969, 0.33 ) }
    dend_38 { pt3dadd( -7.42091, 65.1681, -59.7006, 0.33 ) }
    dend_38 { pt3dadd( -7.66376, 69.4967, -61.7782, 1.33 ) }
    dend_38 { pt3dadd( -7.85157, 72.8831, -63.076, 0.33 ) }
    dend_38 { pt3dadd( -8.04551, 75.474, -64.0304, 0.33 ) }
    dend_38 { pt3dadd( -8.12623, 76.5685, -64.3642, 1.33 ) }
    dend_38 { pt3dadd( -8.32302, 79.5779, -64.9968, 0.33 ) }
    dend_38 { pt3dadd( -8.38534, 81.6826, -65.5089, 2.0 ) }
    dend_38 { pt3dadd( -8.37336, 88.1612, -67.1693, 0.33 ) }
    dend_38 { pt3dadd( -8.32389, 89.172, -67.3219, 0.67 ) }
    dend_38 { pt3dadd( -8.0175, 91.7631, -67.4185, 0.33 ) }
    dend_38 { pt3dadd( -7.86118, 92.5481, -67.3287, 0.67 ) }
    dend_38 { pt3dadd( -7.23569, 94.9058, -66.7977, 0.33 ) }
    dend_38 { pt3dadd( -6.8544, 96.3032, -66.4288, 0.67 ) }
    dend_38 { pt3dadd( -4.27017, 105.222, -63.478, 0.33 ) }
    dend_38 { pt3dadd( -3.68373, 107.278, -62.9984, 2.67 ) }
    dend_38 { pt3dadd( -1.75621, 114.124, -61.9187, 0.33 ) }
    dend_38 { pt3dadd( -1.45751, 115.219, -61.8375, 0.67 ) }
    dend_38 { pt3dadd( -0.363749, 119.545, -61.89, 0.33 ) }
    dend_38 { pt3dadd( 0.0504153, 121.359, -62.1384, 0.67 ) }
    dend_38 { pt3dadd( 1.22247, 127.369, -63.8887, 0.33 ) }
    dend_38 { pt3dadd( 1.54593, 129.065, -64.4297, 0.67 ) }
    dend_38 { pt3dadd( 1.87821, 130.93, -65.1028, 2.0 ) }
    dend_38 { pt3dadd( 2.33776, 133.297, -65.9621, 0.33 ) }
    dend_38 { pt3dadd( 2.77935, 134.992, -66.5704, 2.0 ) }
    dend_38 { pt3dadd( 3.48604, 137.605, -67.5647, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.6488, 35.7717, -34.1033, 0.67 ) }
    dend_35 { pt3dadd( -8.94735, 37.0214, -35.8458, 0.67 ) }
    dend_35 { pt3dadd( -10.3214, 38.5357, -37.1, 0.33 ) }
    dend_35 { pt3dadd( -13.9833, 42.73, -39.3155, 0.67 ) }
    dend_35 { pt3dadd( -15.5288, 44.4439, -39.9262, 0.67 ) }
    dend_35 { pt3dadd( -16.4782, 45.4385, -40.1567, 0.33 ) }
    dend_35 { pt3dadd( -17.6257, 46.5988, -40.3373, 0.33 ) }
    dend_35 { pt3dadd( -20.2495, 49.3103, -40.4417, 0.33 ) }
    dend_35 { pt3dadd( -22.0347, 51.0671, -40.2916, 1.33 ) }
    dend_35 { pt3dadd( -23.8047, 52.5279, -39.8671, 0.33 ) }
    dend_35 { pt3dadd( -25.9426, 54.0396, -39.3385, 0.67 ) }
    dend_35 { pt3dadd( -27.0595, 54.7635, -39.0515, 0.33 ) }
    dend_35 { pt3dadd( -28.9723, 55.9813, -38.5362, 0.33 ) }
    dend_35 { pt3dadd( -29.8285, 56.5675, -38.4074, 0.67 ) }
    dend_35 { pt3dadd( -31.5333, 57.7764, -38.3966, 0.33 ) }
    dend_35 { pt3dadd( -32.365, 58.3959, -38.5164, 0.33 ) }
    dend_35 { pt3dadd( -33.3196, 59.0265, -38.873, 1.33 ) }
    dend_35 { pt3dadd( -35.0891, 60.0053, -39.7935, 1.33 ) }
    dend_35 { pt3dadd( -39.2043, 61.6547, -42.4007, 0.33 ) }
    dend_35 { pt3dadd( -40.7274, 62.2441, -43.4406, 0.33 ) }
    dend_35 { pt3dadd( -41.309, 62.4341, -43.8698, 0.67 ) }
    dend_35 { pt3dadd( -44.7714, 63.2272, -46.4239, 0.33 ) }
    dend_35 { pt3dadd( -45.6745, 63.3348, -47.0931, 1.33 ) }
    dend_35 { pt3dadd( -49.6271, 63.2475, -49.8607, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 126.277, 3.78812, -55.7782, 0.33 ) }
    dend_24 { pt3dadd( 127.422, 5.05996, -55.3045, 0.33 ) }
    dend_24 { pt3dadd( 128.231, 5.95929, -54.9695, 0.67 ) }
    dend_24 { pt3dadd( 129.232, 7.07195, -54.5551, 0.33 ) }
    dend_24 { pt3dadd( 130.091, 8.02694, -54.1994, 0.67 ) }
    dend_24 { pt3dadd( 131.597, 9.70041, -53.5761, 0.33 ) }
    dend_24 { pt3dadd( 131.597, 9.70041, -53.5761, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 126.277, 3.78812, -55.7782, 0.33 ) }
    dend_23 { pt3dadd( 126.366, 4.43636, -56.704, 0.33 ) }
    dend_23 { pt3dadd( 126.42, 4.93412, -57.3928, 1.33 ) }
    dend_23 { pt3dadd( 126.734, 9.52525, -63.2111, 0.33 ) }
    dend_23 { pt3dadd( 126.754, 10.1688, -64.118, 2.0 ) }
    dend_23 { pt3dadd( 126.779, 13.1227, -68.3067, 0.33 ) }
    dend_23 { pt3dadd( 126.789, 14.2714, -69.9355, 1.33 ) }
    dend_23 { pt3dadd( 126.782, 16.4285, -73.1197, 0.33 ) }
    dend_23 { pt3dadd( 126.733, 17.8307, -75.2211, 1.33 ) }
    dend_23 { pt3dadd( 126.083, 22.2357, -81.4122, 0.33 ) }
    dend_23 { pt3dadd( 125.924, 23.1406, -82.8561, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 39.3655, -162.716, -30.7403, 0.33 ) }
    dend_18 { pt3dadd( 37.351, -162.561, -30.1003, 0.33 ) }
    dend_18 { pt3dadd( 33.6973, -162.281, -28.9395, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 39.3655, -162.716, -30.7403, 0.33 ) }
    dend_15 { pt3dadd( 39.7906, -165.345, -30.4268, 0.33 ) }
    dend_15 { pt3dadd( 40.0852, -167.655, -30.1765, 0.67 ) }
    dend_15 { pt3dadd( 40.5424, -171.61, -29.8076, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 40.9665, -176.142, -29.5021, 1.33 ) }
    dend_15 { pt3dadd( 41.0711, -177.974, -29.4629, 1.33 ) }
    dend_15 { pt3dadd( 41.2176, -181.24, -29.4979, 0.67 ) }
    dend_15 { pt3dadd( 41.1656, -182.91, -29.536, 0.67 ) }
    dend_15 { pt3dadd( 41.0139, -184.761, -29.6224, 0.33 ) }
    dend_15 { pt3dadd( 40.8435, -186.061, -29.7316, 0.67 ) }
    dend_15 { pt3dadd( 40.481, -188.787, -30.2217, 0.33 ) }
    dend_15 { pt3dadd( 39.9664, -191.688, -30.8461, 0.67 ) }
    dend_15 { pt3dadd( 39.3277, -194.373, -31.389, 0.33 ) }
    dend_15 { pt3dadd( 38.8989, -196.474, -31.9638, 1.33 ) }
    dend_15 { pt3dadd( 38.3817, -198.925, -32.6525, 1.33 ) }
    dend_15 { pt3dadd( 37.8797, -201.367, -33.3466, 0.67 ) }
    dend_15 { pt3dadd( 37.1828, -204.757, -34.3685, 0.67 ) }
    dend_15 { pt3dadd( 35.9956, -210.264, -36.2826, 0.67 ) }
    dend_15 { pt3dadd( 35.0347, -215.669, -38.4063, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.8132, -226.17, 5.31677, 0.33 ) }
    dend_10 { pt3dadd( 21.4881, -225.137, 7.39261, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 17/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.8132, -226.17, 5.31677, 0.33 ) }
    dend_9 { pt3dadd( 16.475, -227.733, 5.9356, 0.33 ) }
    dend_9 { pt3dadd( 16.1336, -229.129, 6.47798, 1.33 ) }
    dend_9 { pt3dadd( 15.3637, -231.651, 7.45973, 0.33 ) }
    dend_9 { pt3dadd( 13.7383, -236.535, 9.29144, 0.33 ) }
    dend_9 { pt3dadd( 13.326, -237.739, 9.76506, 2.0 ) }
    dend_9 { pt3dadd( 12.7257, -239.795, 10.7157, 0.33 ) }
    dend_9 { pt3dadd( 12.6534, -240.025, 10.8388, 0.67 ) }
    dend_9 { pt3dadd( 12.3057, -241.174, 11.5541, 0.33 ) }
    dend_9 { pt3dadd( 12.0145, -242.039, 12.1745, 0.33 ) }
    dend_9 { pt3dadd( 11.5869, -243.332, 12.8671, 1.33 ) }
    dend_9 { pt3dadd( 10.8232, -247.104, 15.3477, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 43.353, -214.872, 13.8774, 0.33 ) }
    dend_7 { pt3dadd( 41.1897, -213.617, 14.342, 0.33 ) }
    dend_7 { pt3dadd( 39.0567, -212.38, 14.8002, 0.33 ) }
    dend_7 { pt3dadd( 35.9472, -210.576, 15.4681, 0.33 ) }
    dend_7 { pt3dadd( 34.7637, -209.889, 15.7223, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 34/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 43.353, -214.872, 13.8774, 0.67 ) }
    dend_4 { pt3dadd( 43.3446, -217.013, 18.0173, 0.67 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 36/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 17.304, 47.9027, -13.2607, 0.67 ) }
    dend_79 { pt3dadd( 16.35, 50.2611, -15.75, 0.67 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 17.304, 47.9027, -13.2607, 0.67 ) }
    dend_76 { pt3dadd( 19.2301, 47.2353, -12.506, 0.67 ) }
    dend_76 { pt3dadd( 22.0851, 46.4417, -11.3876, 0.33 ) }
    dend_76 { pt3dadd( 23.6572, 46.1868, -10.6851, 0.67 ) }
    dend_76 { pt3dadd( 25.5343, 46.079, -9.84726, 0.33 ) }
    dend_76 { pt3dadd( 29.5588, 46.1481, -8.27791, 1.33 ) }
    dend_76 { pt3dadd( 31.445, 46.3076, -7.4733, 0.33 ) }
    dend_76 { pt3dadd( 33.1027, 46.554, -6.78149, 0.67 ) }
    dend_76 { pt3dadd( 35.828, 47.2012, -5.70081, 0.33 ) }
    dend_76 { pt3dadd( 37.4488, 47.6826, -5.00987, 1.33 ) }
    dend_76 { pt3dadd( 40.012, 48.6149, -3.94936, 0.33 ) }
    dend_76 { pt3dadd( 43.8544, 50.2597, -2.51235, 1.33 ) }
    dend_76 { pt3dadd( 46.3649, 51.3984, -1.55859, 0.67 ) }
    dend_76 { pt3dadd( 47.2373, 51.8197, -1.25019, 0.67 ) }
    dend_76 { pt3dadd( 49.9768, 53.2195, -0.198831, 0.33 ) }
    dend_76 { pt3dadd( 51.2843, 53.9642, 0.374375, 0.33 ) }
    dend_76 { pt3dadd( 52.5113, 54.7311, 0.916409, 0.33 ) }
    dend_76 { pt3dadd( 53.9348, 55.5865, 1.40257, 0.33 ) }
    dend_76 { pt3dadd( 54.8724, 56.1864, 1.71449, 1.33 ) }
    dend_76 { pt3dadd( 57.9389, 58.1789, 2.70691, 0.33 ) }
    dend_76 { pt3dadd( 59.3852, 59.1821, 3.12272, 0.67 ) }
    dend_76 { pt3dadd( 61.2264, 60.3345, 3.70236, 0.67 ) }
    dend_76 { pt3dadd( 63.1553, 61.338, 4.3514, 0.33 ) }
    dend_76 { pt3dadd( 65.6703, 62.5457, 5.19287, 1.33 ) }
    dend_76 { pt3dadd( 68.4364, 63.8141, 6.08327, 0.67 ) }
    dend_76 { pt3dadd( 70.662, 64.8115, 6.71019, 0.67 ) }
    dend_76 { pt3dadd( 73.4363, 66.0113, 7.69283, 0.67 ) }
    dend_76 { pt3dadd( 76.2379, 67.2724, 8.98737, 0.67 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 66/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 0.246118, 42.5343, -6.47224, 0.67 ) }
    dend_68 { pt3dadd( 3.12434, 47.5712, -8.24742, 0.67 ) }
    dend_68 { pt3dadd( 4.0831, 49.0276, -8.80218, 0.67 ) }
    dend_68 { pt3dadd( 7.47972, 53.7685, -10.1549, 1.33 ) }
    dend_68 { pt3dadd( 10.1285, 57.4655, -11.2098, 1.33 ) }
    dend_68 { pt3dadd( 11.5201, 59.4079, -11.764, 0.67 ) }
    dend_68 { pt3dadd( 13.1461, 61.6774, -12.4115, 1.33 ) }
    dend_68 { pt3dadd( 15.1192, 64.129, -13.1164, 0.33 ) }
    dend_68 { pt3dadd( 18.4538, 67.6769, -13.8602, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 75/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 0.246118, 42.5343, -6.47224, 1.33 ) }
    dend_53 { pt3dadd( -2.93646, 44.8947, -5.50526, 1.33 ) }
    dend_53 { pt3dadd( -9.99689, 50.1314, -3.36004, 0.67 ) }
    dend_53 { pt3dadd( -12.2884, 51.8309, -2.66379, 0.67 ) }
    dend_53 { pt3dadd( -17.0762, 55.382, -1.20906, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 77.201, 140.381, -16.0524, 0.33 ) }
    dend_46 { pt3dadd( 76.2225, 141.833, -15.9629, 0.33 ) }
    dend_46 { pt3dadd( 76.0235, 142.129, -15.9448, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 77.201, 140.381, -16.0524, 0.33 ) }
    dend_45 { pt3dadd( 78.4503, 143.344, -16.6906, 0.33 ) }
    dend_45 { pt3dadd( 79.1734, 144.393, -17.1931, 0.67 ) }
    dend_45 { pt3dadd( 81.0824, 147.034, -18.6541, 0.33 ) }
    dend_45 { pt3dadd( 82.0428, 148.291, -19.3996, 0.67 ) }
    dend_45 { pt3dadd( 83.4961, 150.074, -20.4581, 0.33 ) }
    dend_45 { pt3dadd( 86.1852, 153.114, -22.2401, 0.67 ) }
    dend_45 { pt3dadd( 89.4204, 156.232, -24.3634, 0.33 ) }
    dend_45 { pt3dadd( 91.223, 157.838, -25.4963, 0.33 ) }
    dend_45 { pt3dadd( 91.9234, 158.399, -25.9008, 0.67 ) }
    dend_45 { pt3dadd( 93.4239, 159.67, -26.8938, 0.33 ) }
    dend_45 { pt3dadd( 94.5526, 160.789, -27.7597, 0.67 ) }
    dend_45 { pt3dadd( 96.8847, 163.837, -29.7337, 0.33 ) }
    dend_45 { pt3dadd( 97.6706, 165.163, -30.5186, 0.67 ) }
    dend_45 { pt3dadd( 98.1112, 165.903, -30.9825, 0.67 ) }
    dend_45 { pt3dadd( 100.646, 170.614, -34.0034, 0.33 ) }
    dend_45 { pt3dadd( 101.086, 171.566, -34.6508, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( 102.173, 174.358, -36.6021, 0.67 ) }
    dend_45 { pt3dadd( 102.538, 175.431, -37.3687, 0.33 ) }
    dend_45 { pt3dadd( 103.367, 177.906, -39.1935, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.48604, 137.605, -67.5647, 0.33 ) }
    dend_40 { pt3dadd( 3.89719, 139.002, -68.4276, 0.33 ) }
    dend_40 { pt3dadd( 4.20987, 140.065, -69.0839, 0.67 ) }
    dend_40 { pt3dadd( 5.09698, 143.078, -70.9457, 0.33 ) }
    dend_40 { pt3dadd( 5.68385, 145.072, -72.1774, 1.33 ) }
    dend_40 { pt3dadd( 6.43446, 147.623, -73.7527, 0.33 ) }
    dend_40 { pt3dadd( 7.12376, 149.964, -75.1994, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.48604, 137.605, -67.5647, 0.33 ) }
    dend_39 { pt3dadd( 3.93784, 139.404, -66.5958, 0.33 ) }
    dend_39 { pt3dadd( 4.53593, 142.308, -65.5876, 0.67 ) }
    dend_39 { pt3dadd( 4.76852, 143.42, -65.3074, 0.33 ) }
    dend_39 { pt3dadd( 4.89806, 144.287, -65.3, 0.67 ) }
    dend_39 { pt3dadd( 5.02161, 145.442, -65.4062, 0.33 ) }
    dend_39 { pt3dadd( 5.1321, 146.639, -65.575, 1.33 ) }
    dend_39 { pt3dadd( 5.44675, 150.518, -66.493, 0.33 ) }
    dend_39 { pt3dadd( 5.5928, 152.761, -67.1796, 0.67 ) }
    dend_39 { pt3dadd( 5.90473, 157.663, -68.7494, 0.33 ) }
    dend_39 { pt3dadd( 5.93556, 158.216, -68.9262, 0.67 ) }
    dend_39 { pt3dadd( 6.04446, 159.904, -69.4761, 0.33 ) }
    dend_39 { pt3dadd( 6.1209, 160.777, -69.7776, 0.67 ) }
    dend_39 { pt3dadd( 6.327, 162.869, -70.5309, 0.33 ) }
    dend_39 { pt3dadd( 6.46421, 163.857, -70.7625, 0.67 ) }
    dend_39 { pt3dadd( 6.81235, 165.782, -70.8799, 0.33 ) }
    dend_39 { pt3dadd( 6.93791, 166.601, -70.9258, 0.33 ) }
    dend_39 { pt3dadd( 7.03915, 167.412, -70.9764, 0.67 ) }
    dend_39 { pt3dadd( 7.16482, 168.667, -71.0495, 0.33 ) }
    dend_39 { pt3dadd( 7.32798, 170.478, -71.1498, 0.67 ) }
    dend_39 { pt3dadd( 7.38478, 172.179, -71.2114, 0.33 ) }
    dend_39 { pt3dadd( 7.39121, 172.851, -71.2184, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 32/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -49.6271, 63.2475, -49.8607, 0.33 ) }
    dend_37 { pt3dadd( -54.063, 68.8545, -52.2629, 0.33 ) }
    dend_37 { pt3dadd( -54.9662, 69.9618, -52.8125, 2.0 ) }
    dend_37 { pt3dadd( -58.7988, 74.6536, -55.2079, 0.33 ) }
    dend_37 { pt3dadd( -59.2707, 75.2062, -55.4639, 0.67 ) }
    dend_37 { pt3dadd( -60.0474, 76.0994, -55.8376, 0.33 ) }
    dend_37 { pt3dadd( -62.77, 79.3479, -56.9859, 1.33 ) }
    dend_37 { pt3dadd( -64.0581, 80.8041, -57.4802, 0.33 ) }
    dend_37 { pt3dadd( -64.8361, 81.7395, -57.6685, 0.67 ) }
    dend_37 { pt3dadd( -67.3401, 85.2004, -57.7803, 0.33 ) }
    dend_37 { pt3dadd( -68.4331, 86.8134, -57.736, 1.33 ) }
    dend_37 { pt3dadd( -70.158, 89.6689, -57.4899, 0.33 ) }
    dend_37 { pt3dadd( -71.431, 91.9551, -57.1521, 0.33 ) }
    dend_37 { pt3dadd( -72.7264, 94.4855, -56.7854, 0.67 ) }
    dend_37 { pt3dadd( -74.3229, 97.8741, -56.3269, 0.33 ) }
    dend_37 { pt3dadd( -75.0122, 99.5374, -56.1159, 1.33 ) }
    dend_37 { pt3dadd( -76.2943, 102.799, -55.712, 0.33 ) }
    dend_37 { pt3dadd( -76.5911, 103.553, -55.6758, 0.67 ) }
    dend_37 { pt3dadd( -77.0924, 104.889, -55.7109, 0.33 ) }
    dend_37 { pt3dadd( -77.514, 106.016, -55.8267, 0.67 ) }
    dend_37 { pt3dadd( -77.9775, 107.12, -56.029, 0.33 ) }
    dend_37 { pt3dadd( -78.4099, 108.075, -56.2582, 0.67 ) }
    dend_37 { pt3dadd( -80.4461, 112.198, -57.5736, 0.33 ) }
    dend_37 { pt3dadd( -80.4461, 112.198, -57.5736, 0.67 ) }
    dend_37 { pt3dadd( -81.2013, 113.748, -58.2066, 0.33 ) }
    dend_37 { pt3dadd( -81.49, 114.306, -58.4537, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -49.6271, 63.2475, -49.8607, 0.33 ) }
    dend_36 { pt3dadd( -51.1977, 63.7584, -51.3938, 0.33 ) }
    dend_36 { pt3dadd( -53.0165, 64.3989, -52.8982, 0.67 ) }
    dend_36 { pt3dadd( -55.5805, 65.2969, -54.8783, 0.33 ) }
    dend_36 { pt3dadd( -56.0734, 65.4566, -55.2153, 0.67 ) }
    dend_36 { pt3dadd( -59.5245, 66.4885, -57.3955, 0.33 ) }
    dend_36 { pt3dadd( -63.5593, 67.4884, -59.6881, 2.67 ) }
    dend_36 { pt3dadd( -67.3976, 68.2089, -61.9169, 0.33 ) }
    dend_36 { pt3dadd( -67.7524, 68.2442, -62.1025, 0.67 ) }
    dend_36 { pt3dadd( -69.85, 68.2552, -63.2079, 0.33 ) }
    dend_36 { pt3dadd( -70.4125, 68.1909, -63.4534, 1.33 ) }
    dend_36 { pt3dadd( -72.7896, 67.5963, -64.1341, 0.33 ) }
    dend_36 { pt3dadd( -75.8576, 66.494, -64.7195, 2.0 ) }
    dend_36 { pt3dadd( -77.7188, 65.6148, -65.2782, 0.33 ) }
    dend_36 { pt3dadd( -78.0635, 65.4694, -65.3838, 0.67 ) }
    dend_36 { pt3dadd( -79.8473, 64.8088, -65.9303, 0.33 ) }
    dend_36 { pt3dadd( -80.2146, 64.7225, -66.0105, 0.67 ) }
    dend_36 { pt3dadd( -81.8762, 64.5455, -66.2143, 0.33 ) }
    dend_36 { pt3dadd( -83.5252, 64.5687, -66.1994, 0.67 ) }
    dend_36 { pt3dadd( -86.2489, 64.8896, -66.1265, 0.33 ) }
    dend_36 { pt3dadd( -87.1106, 65.0378, -66.0166, 0.67 ) }
    dend_36 { pt3dadd( -89.5576, 65.5555, -65.6514, 0.33 ) }
    dend_36 { pt3dadd( -90.098, 65.6699, -65.5544, 0.67 ) }
    dend_36 { pt3dadd( -93.0058, 66.3362, -64.852, 0.33 ) }
    dend_36 { pt3dadd( -93.8205, 66.5402, -64.5743, 0.67 ) }
    dend_36 { pt3dadd( -96.6209, 67.5257, -63.3871, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 35.0347, -215.669, -38.4063, 0.33 ) }
    dend_17 { pt3dadd( 30.4585, -219.032, -39.5141, 0.33 ) }
    dend_17 { pt3dadd( 28.5045, -220.624, -40.2263, 0.67 ) }
    dend_17 { pt3dadd( 27.7417, -221.289, -40.5977, 0.33 ) }
    dend_17 { pt3dadd( 27.0619, -222.046, -41.2348, 0.33 ) }
    dend_17 { pt3dadd( 26.3885, -223.183, -42.3619, 0.33 ) }
    dend_17 { pt3dadd( 26.2412, -223.715, -42.9834, 0.67 ) }
    dend_17 { pt3dadd( 26.4047, -224.787, -44.5627, 0.33 ) }
    dend_17 { pt3dadd( 26.6334, -225.633, -45.7647, 0.67 ) }
    dend_17 { pt3dadd( 28.1109, -228.61, -49.9785, 0.33 ) }
    dend_17 { pt3dadd( 28.7869, -229.67, -51.3818, 0.67 ) }
    dend_17 { pt3dadd( 30.1642, -231.521, -53.731, 0.33 ) }
    dend_17 { pt3dadd( 30.5921, -232.047, -54.3859, 0.67 ) }
    dend_17 { pt3dadd( 32.2505, -233.904, -56.6128, 0.33 ) }
    dend_17 { pt3dadd( 34.3101, -236.218, -59.1056, 0.67 ) }
    dend_17 { pt3dadd( 35.033, -237.246, -59.9488, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 35.3446, -237.621, -60.2773, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 35.0347, -215.669, -38.4063, 0.67 ) }
    dend_16 { pt3dadd( 34.756, -217.663, -38.3937, 0.67 ) }
    dend_16 { pt3dadd( 34.5733, -219.502, -38.4265, 0.67 ) }
    dend_16 { pt3dadd( 34.5119, -220.765, -38.458, 0.33 ) }
    dend_16 { pt3dadd( 34.4813, -224.66, -38.6443, 2.67 ) }
    dend_16 { pt3dadd( 34.7051, -227.981, -38.9095, 0.67 ) }
    dend_16 { pt3dadd( 34.9816, -230.446, -39.1297, 0.33 ) }
    dend_16 { pt3dadd( 35.0738, -231.026, -39.1948, 0.67 ) }
    dend_16 { pt3dadd( 35.4942, -233.214, -39.5134, 0.33 ) }
    dend_16 { pt3dadd( 36.3317, -236.751, -40.1996, 0.33 ) }
    dend_16 { pt3dadd( 37.0506, -239.251, -40.8242, 0.67 ) }
    dend_16 { pt3dadd( 37.6386, -241.353, -41.373, 0.33 ) }
    dend_16 { pt3dadd( 38.4176, -244.256, -42.0734, 0.33 ) }
    dend_16 { pt3dadd( 38.9924, -246.502, -42.6626, 0.33 ) }
    dend_16 { pt3dadd( 39.2896, -247.792, -43.0467, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 43.3446, -217.013, 18.0173, 0.33 ) }
    dend_6 { pt3dadd( 42.2161, -219.213, 17.5236, 0.33 ) }
    dend_6 { pt3dadd( 41.3382, -220.924, 17.1396, 0.33 ) }
    dend_6 { pt3dadd( 40.3698, -222.812, 16.7159, 0.33 ) }
    dend_6 { pt3dadd( 39.7468, -224.027, 16.4433, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 43.3446, -217.013, 18.0173, 0.67 ) }
    dend_5 { pt3dadd( 44.1553, -218.926, 18.7553, 0.67 ) }
    dend_5 { pt3dadd( 45.4472, -221.974, 19.9311, 1.33 ) }
    dend_5 { pt3dadd( 46.186, -223.718, 20.6036, 0.67 ) }
    dend_5 { pt3dadd( 47.5452, -226.925, 21.8407, 1.33 ) }
    dend_5 { pt3dadd( 48.3415, -228.804, 22.5655, 0.67 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 27/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 76.2379, 67.2724, 8.98737, 0.33 ) }
    dend_78 { pt3dadd( 78.2355, 66.6835, 8.9855, 0.33 ) }
    dend_78 { pt3dadd( 80.6067, 65.9844, 8.98328, 0.33 ) }
    dend_78 { pt3dadd( 84.8632, 64.7296, 8.97931, 0.33 ) }
    dend_78 { pt3dadd( 86.8876, 64.1327, 8.97742, 0.33 ) }
    dend_78 { pt3dadd( 88.0272, 63.7967, 8.97635, 0.33 ) }
    dend_78 { pt3dadd( 89.5161, 63.3578, 8.97496, 0.67 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 34/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 76.2379, 67.2724, 8.98737, 0.67 ) }
    dend_77 { pt3dadd( 78.2759, 67.9493, 9.74167, 0.67 ) }
    dend_77 { pt3dadd( 80.6198, 68.7278, 10.6091, 0.67 ) }
    dend_77 { pt3dadd( 82.0555, 69.2046, 11.1405, 0.67 ) }
    dend_77 { pt3dadd( 83.3302, 69.628, 11.6123, 0.67 ) }
    dend_77 { pt3dadd( 88.8954, 71.4764, 13.672, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 40/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 18.4538, 67.6769, -13.8602, 0.33 ) }
    dend_72 { pt3dadd( 20.2216, 70.7898, -11.6611, 0.33 ) }
    dend_72 { pt3dadd( 20.9244, 72.3422, -10.6874, 0.33 ) }
    dend_72 { pt3dadd( 20.4363, 73.1876, -9.31221, 0.33 ) }
    dend_72 { pt3dadd( 19.7769, 74.1682, -7.53041, 0.33 ) }
    dend_72 { pt3dadd( 18.9772, 75.4027, -5.41484, 1.33 ) }
    dend_72 { pt3dadd( 18.2236, 76.6706, -3.37792, 0.33 ) }
    dend_72 { pt3dadd( 17.6108, 77.6722, -1.77877, 0.67 ) }
    dend_72 { pt3dadd( 13.3525, 84.5209, 8.44977, 0.33 ) }
    dend_72 { pt3dadd( 12.6982, 85.6421, 10.0039, 0.67 ) }
    dend_72 { pt3dadd( 12.0739, 86.7615, 11.5204, 0.33 ) }
    dend_72 { pt3dadd( 11.7162, 87.6374, 12.5809, 0.67 ) }
    dend_72 { pt3dadd( 11.393, 89.2094, 14.2154, 0.33 ) }
    dend_72 { pt3dadd( 11.4263, 89.9204, 14.7342, 0.67 ) }
    dend_72 { pt3dadd( 11.8557, 91.357, 15.2662, 0.33 ) }
    dend_72 { pt3dadd( 12.0889, 92.1517, 15.5368, 0.67 ) }
    dend_72 { pt3dadd( 13.2759, 95.9017, 16.8126, 0.33 ) }
    dend_72 { pt3dadd( 14.1289, 98.6633, 17.6596, 0.33 ) }
    dend_72 { pt3dadd( 14.4021, 99.4461, 17.9119, 0.67 ) }
    dend_72 { pt3dadd( 15.9121, 103.1, 19.2464, 0.33 ) }
    dend_72 { pt3dadd( 16.4008, 104.084, 19.7333, 1.33 ) }
    dend_72 { pt3dadd( 17.5549, 105.962, 20.921, 0.33 ) }
    dend_72 { pt3dadd( 18.3784, 107.015, 21.7759, 1.33 ) }
    dend_72 { pt3dadd( 20.2559, 109.414, 24.4237, 0.67 ) }
    dend_72 { pt3dadd( 21.3501, 110.671, 26.3068, 0.67 ) }
    dend_72 { pt3dadd( 23.406, 112.675, 30.297, 0.67 ) }
    dend_72 { pt3dadd( 24.1107, 113.361, 31.7611, 1.33 ) }
    dend_72 { pt3dadd( 24.6727, 113.9, 32.9752, 0.33 ) }
    dend_72 { pt3dadd( 26.7472, 115.952, 37.5276, 1.33 ) }
    dend_72 { pt3dadd( 28.5023, 117.953, 41.5218, 0.33 ) }
    dend_72 { pt3dadd( 29.8583, 119.671, 44.3905, 0.67 ) }
    dend_72 { pt3dadd( 30.5647, 120.636, 45.6951, 0.33 ) }
    dend_72 { pt3dadd( 30.9374, 121.16, 46.3153, 0.67 ) }
    dend_72 { pt3dadd( 31.5871, 122.101, 47.1561, 0.33 ) }
    dend_72 { pt3dadd( 32.1373, 122.939, 47.6236, 1.33 ) }
    dend_72 { pt3dadd( 33.0945, 125.106, 48.3709, 0.33 ) }
    dend_72 { pt3dadd( 33.8053, 126.999, 48.8881, 0.33 ) }
    dend_72 { pt3dadd( 34.1027, 127.695, 49.0619, 0.67 ) }
    dend_72 { pt3dadd( 35.005, 129.635, 49.4977, 0.33 ) }
    dend_72 { pt3dadd( 35.5032, 130.664, 49.6948, 0.67 ) }
    dend_72 { pt3dadd( 36.0478, 131.746, 49.8865, 0.33 ) }
    dend_72 { pt3dadd( 36.8662, 133.249, 50.1356, 0.33 ) }
    dend_72 { pt3dadd( 37.899, 134.894, 50.4681, 0.67 ) }
    dend_72 { pt3dadd( 38.9273, 136.517, 50.7252, 0.33 ) }
    dend_72 { pt3dadd( 39.1505, 136.828, 50.7641, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 18.4538, 67.6769, -13.8602, 0.33 ) }
    dend_69 { pt3dadd( 21.8314, 68.7226, -9.55432, 0.33 ) }
    dend_69 { pt3dadd( 23.1333, 69.1908, -7.97426, 0.67 ) }
    dend_69 { pt3dadd( 26.8536, 70.8088, -3.08449, 0.33 ) }
    dend_69 { pt3dadd( 27.8111, 71.2621, -1.87354, 1.33 ) }
    dend_69 { pt3dadd( 28.9929, 71.8583, -0.411444, 0.33 ) }
    dend_69 { pt3dadd( 29.7252, 72.2635, 0.489873, 0.67 ) }
    dend_69 { pt3dadd( 30.5075, 72.8603, 1.48189, 0.33 ) }
    dend_69 { pt3dadd( 33.4823, 75.3083, 4.06529, 1.33 ) }
    dend_69 { pt3dadd( 34.9393, 76.7443, 4.62763, 0.33 ) }
    dend_69 { pt3dadd( 35.2178, 77.0141, 4.64741, 0.67 ) }
    dend_69 { pt3dadd( 36.2013, 77.9605, 4.5571, 0.33 ) }
    dend_69 { pt3dadd( 37.5755, 79.2495, 4.30642, 0.67 ) }
    dend_69 { pt3dadd( 41.6656, 83.0611, 3.06714, 0.33 ) }
    dend_69 { pt3dadd( 43.798, 85.0212, 2.13512, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 46.5782, 87.5654, 0.904221, 0.33 ) }
    dend_69 { pt3dadd( 48.9515, 89.6151, -0.133816, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 2/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -17.0762, 55.382, -1.20906, 0.33 ) }
    dend_63 { pt3dadd( -19.7985, 56.0449, -1.31442, 0.33 ) }
    dend_63 { pt3dadd( -23.7497, 56.8294, -1.32802, 0.33 ) }
    dend_63 { pt3dadd( -24.5414, 56.9839, -1.32266, 0.67 ) }
    dend_63 { pt3dadd( -31.2752, 58.1216, -1.38485, 0.33 ) }
    dend_63 { pt3dadd( -33.6881, 58.5284, -1.45198, 0.67 ) }
    dend_63 { pt3dadd( -36.4744, 59.0084, -1.55012, 0.33 ) }
    dend_63 { pt3dadd( -36.879, 59.0665, -1.57878, 0.67 ) }
    dend_63 { pt3dadd( -38.8794, 59.1912, -1.68187, 0.33 ) }
    dend_63 { pt3dadd( -42.1221, 59.2454, -1.80433, 0.33 ) }
    dend_63 { pt3dadd( -45.1962, 59.3027, -1.89696, 0.33 ) }
    dend_63 { pt3dadd( -46.1602, 59.3214, -1.96431, 1.33 ) }
    dend_63 { pt3dadd( -50.9579, 59.4666, -2.45843, 0.33 ) }
    dend_63 { pt3dadd( -53.9802, 59.5109, -2.72535, 0.33 ) }
    dend_63 { pt3dadd( -55.9775, 59.4174, -2.83168, 1.33 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -17.0762, 55.382, -1.20906, 0.67 ) }
    dend_54 { pt3dadd( -18.0916, 59.9403, -1.40489, 0.67 ) }
    dend_54 { pt3dadd( -19.3098, 65.7543, -1.80093, 0.67 ) }
    dend_54 { pt3dadd( -19.9334, 69.5874, -2.19726, 0.67 ) }
    dend_54 { pt3dadd( -20.7355, 75.928, -2.93935, 0.67 ) }
    dend_54 { pt3dadd( -21.0962, 79.1868, -3.34279, 0.67 ) }
    dend_54 { pt3dadd( -21.3315, 83.3459, -4.05928, 0.67 ) }
    dend_54 { pt3dadd( -21.3089, 85.8798, -4.65197, 1.33 ) }
    dend_54 { pt3dadd( -21.0388, 89.5182, -5.65323, 0.67 ) }
    dend_54 { pt3dadd( -20.7502, 93.2334, -6.4976, 2.0 ) }
    dend_54 { pt3dadd( -20.5196, 95.8282, -7.14387, 1.33 ) }
    dend_54 { pt3dadd( -19.8153, 102.548, -8.74526, 1.33 ) }
    dend_54 { pt3dadd( -19.5578, 105.553, -9.40579, 0.67 ) }
    dend_54 { pt3dadd( -19.2886, 110.686, -10.4646, 0.67 ) }
    dend_54 { pt3dadd( -19.3674, 118.383, -11.8033, 1.33 ) }
    dend_54 { pt3dadd( -19.6419, 123.773, -12.6541, 1.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 7.12376, 149.964, -75.1994, 0.33 ) }
    dend_42 { pt3dadd( 7.93488, 149.443, -81.8003, 0.33 ) }
    dend_42 { pt3dadd( 7.97782, 149.415, -82.1498, 0.67 ) }
    dend_42 { pt3dadd( 8.09548, 149.339, -83.1073, 0.33 ) }
    dend_42 { pt3dadd( 8.16892, 149.292, -83.705, 0.67 ) }
    dend_42 { pt3dadd( 8.5093, 149.073, -86.475, 0.33 ) }
    dend_42 { pt3dadd( 8.82981, 148.867, -89.0834, 2.0 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.12376, 149.964, -75.1994, 0.33 ) }
    dend_41 { pt3dadd( 6.89262, 150.923, -75.1413, 0.33 ) }
    dend_41 { pt3dadd( 6.84539, 151.119, -75.1294, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 48.9515, 89.6151, -0.133816, 0.33 ) }
    dend_71 { pt3dadd( 48.39, 89.0266, 1.92945, 0.33 ) }
    dend_71 { pt3dadd( 48.2923, 88.9242, 2.2885, 0.67 ) }
    dend_71 { pt3dadd( 47.8656, 88.477, 3.85642, 0.33 ) }
    dend_71 { pt3dadd( 47.7679, 88.3746, 4.21547, 0.67 ) }
    dend_71 { pt3dadd( 46.8168, 87.3778, 7.71038, 0.33 ) }
    dend_71 { pt3dadd( 45.9345, 86.4531, 10.9523, 0.67 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 50/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 48.9515, 89.6151, -0.133816, 0.67 ) }
    dend_70 { pt3dadd( 56.5858, 93.621, -6.28582, 0.67 ) }
    dend_70 { pt3dadd( 58.2578, 94.6984, -7.47537, 1.33 ) }
    dend_70 { pt3dadd( 60.1566, 96.135, -8.55002, 0.33 ) }
    dend_70 { pt3dadd( 61.0075, 96.8321, -8.94704, 0.67 ) }
    dend_70 { pt3dadd( 62.4311, 98.1327, -9.56391, 0.67 ) }
    dend_70 { pt3dadd( 65.6998, 101.371, -10.7045, 0.67 ) }
    dend_70 { pt3dadd( 67.601, 103.768, -10.6296, 0.33 ) }
    dend_70 { pt3dadd( 69.1365, 105.593, -10.5028, 0.33 ) }
    dend_70 { pt3dadd( 69.9529, 106.583, -10.3666, 0.67 ) }
    dend_70 { pt3dadd( 70.9828, 107.847, -10.2513, 0.67 ) }
    dend_70 { pt3dadd( 72.6094, 109.919, -10.0905, 0.33 ) }
    dend_70 { pt3dadd( 74.1419, 111.89, -10.0001, 1.33 ) }
    dend_70 { pt3dadd( 76.229, 114.521, -10.2549, 0.33 ) }
    dend_70 { pt3dadd( 76.8862, 115.431, -10.4101, 0.67 ) }
    dend_70 { pt3dadd( 78.8237, 118.417, -10.8427, 0.33 ) }
    dend_70 { pt3dadd( 79.1747, 119.038, -10.9283, 0.67 ) }
    dend_70 { pt3dadd( 80.8582, 122.993, -11.5201, 0.33 ) }
    dend_70 { pt3dadd( 80.9473, 123.488, -11.4968, 0.67 ) }
    dend_70 { pt3dadd( 80.8016, 125.257, -10.9762, 0.33 ) }
    dend_70 { pt3dadd( 80.1435, 128.113, -9.57284, 0.67 ) }
    dend_70 { pt3dadd( 79.6926, 129.664, -8.69881, 0.33 ) }
    dend_70 { pt3dadd( 79.483, 130.382, -8.29252, 0.67 ) }
    dend_70 { pt3dadd( 78.0715, 135.165, -5.64156, 0.67 ) }
    dend_70 { pt3dadd( 77.5605, 137.522, -4.53929, 0.33 ) }
    dend_70 { pt3dadd( 77.0292, 141.597, -2.97509, 0.33 ) }
    dend_70 { pt3dadd( 76.9603, 143.373, -2.46364, 0.67 ) }
    dend_70 { pt3dadd( 76.9614, 146.75, -1.59706, 0.33 ) }
    dend_70 { pt3dadd( 77.0946, 148.747, -1.23929, 0.67 ) }
    dend_70 { pt3dadd( 77.7211, 151.904, -1.07845, 0.67 ) }
    dend_70 { pt3dadd( 78.3032, 153.853, -0.987116, 0.33 ) }
    dend_70 { pt3dadd( 78.4972, 154.282, -1.01661, 0.67 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -55.9775, 59.4174, -2.83168, 0.67 ) }
    dend_67 { pt3dadd( -61.642, 57.4707, -3.4521, 0.67 ) }
    dend_67 { pt3dadd( -62.8951, 57.0125, -3.60613, 0.67 ) }
    dend_67 { pt3dadd( -65.1142, 56.1359, -3.88446, 0.33 ) }
    dend_67 { pt3dadd( -67.4842, 55.1708, -4.21497, 0.67 ) }
    dend_67 { pt3dadd( -69.2983, 54.3838, -4.48576, 0.33 ) }
    dend_67 { pt3dadd( -70.1026, 54.02, -4.53523, 0.67 ) }
    dend_67 { pt3dadd( -72.3028, 53.0374, -4.44606, 0.33 ) }
    dend_67 { pt3dadd( -73.1977, 52.5953, -4.39759, 0.67 ) }
    dend_67 { pt3dadd( -75.1634, 51.4816, -4.12625, 0.33 ) }
    dend_67 { pt3dadd( -75.8883, 51.0111, -3.96377, 0.67 ) }
    dend_67 { pt3dadd( -80.1537, 48.2482, -2.84923, 0.33 ) }
    dend_67 { pt3dadd( -82.0018, 47.0658, -2.32125, 0.67 ) }
    dend_67 { pt3dadd( -85.5618, 44.7452, -1.17088, 0.67 ) }
    dend_67 { pt3dadd( -89.1884, 42.3834, 0.0322772, 0.67 ) }
    dend_67 { pt3dadd( -91.843, 40.5323, 1.02977, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -55.9775, 59.4174, -2.83168, 1.33 ) }
    dend_64 { pt3dadd( -57.8314, 57.8841, -3.92691, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 0/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -19.6419, 123.773, -12.6541, 0.67 ) }
    dend_60 { pt3dadd( -19.674, 125.554, -11.7315, 0.67 ) }
    dend_60 { pt3dadd( -19.7198, 128.09, -10.4177, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 3/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -19.6419, 123.773, -12.6541, 0.67 ) }
    dend_55 { pt3dadd( -21.6699, 125.581, -13.3495, 0.67 ) }
    dend_55 { pt3dadd( -23.447, 127.404, -14.1244, 0.33 ) }
    dend_55 { pt3dadd( -24.9411, 129.333, -14.6972, 0.67 ) }
    dend_55 { pt3dadd( -26.5475, 131.627, -15.2648, 0.33 ) }
    dend_55 { pt3dadd( -30.2462, 137.228, -16.4849, 0.67 ) }
    dend_55 { pt3dadd( -33.0407, 141.702, -17.3494, 0.33 ) }
    dend_55 { pt3dadd( -34.6301, 144.97, -18.0329, 0.67 ) }
    dend_55 { pt3dadd( -36.8225, 150.761, -19.2777, 0.33 ) }
    dend_55 { pt3dadd( -37.0228, 151.405, -19.4137, 0.67 ) }
    dend_55 { pt3dadd( -37.6419, 153.698, -19.8982, 0.33 ) }
    dend_55 { pt3dadd( -38.5079, 157.221, -20.4647, 2.0 ) }
    dend_55 { pt3dadd( -40.6166, 165.41, -21.2847, 0.67 ) }
    dend_55 { pt3dadd( -42.4254, 172.362, -21.7688, 1.33 ) }
    dend_55 { pt3dadd( -43.2663, 175.703, -22.2403, 0.33 ) }
    dend_55 { pt3dadd( -43.4173, 176.352, -22.3496, 0.67 ) }
    dend_55 { pt3dadd( -44.8384, 181.847, -23.0486, 0.33 ) }
    dend_55 { pt3dadd( -45.1822, 182.871, -23.1131, 0.67 ) }
    dend_55 { pt3dadd( -46.5596, 186.021, -22.9497, 0.33 ) }
    dend_55 { pt3dadd( -50.5666, 194.689, -22.3056, 0.67 ) }
    dend_55 { pt3dadd( -51.4811, 196.642, -22.2049, 0.33 ) }
    dend_55 { pt3dadd( -54.6393, 203.065, -22.2519, 0.67 ) }
    dend_55 { pt3dadd( -57.0071, 207.437, -22.8678, 0.67 ) }
    dend_55 { pt3dadd( -58.3259, 209.546, -22.961, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -57.8314, 57.8841, -3.92691, 0.67 ) }
    dend_66 { pt3dadd( -61.907, 55.0513, 1.67692, 0.67 ) }
    dend_66 { pt3dadd( -62.3848, 54.7192, 2.33396, 0.67 ) }
    dend_66 { pt3dadd( -64.2393, 53.4302, 4.88381, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -57.8314, 57.8841, -3.92691, 0.33 ) }
    dend_65 { pt3dadd( -58.8639, 56.5265, -3.09836, 0.33 ) }
    dend_65 { pt3dadd( -60.249, 54.2594, -1.85206, 0.33 ) }
    dend_65 { pt3dadd( -61.951, 50.9519, -0.310535, 0.67 ) }
    dend_65 { pt3dadd( -63.1698, 48.5117, 0.727155, 0.33 ) }
    dend_65 { pt3dadd( -65.1986, 44.6241, 2.31241, 0.33 ) }
    dend_65 { pt3dadd( -66.148, 42.805, 3.05421, 0.33 ) }
    dend_65 { pt3dadd( -68.0703, 39.6084, 4.32662, 0.67 ) }
    dend_65 { pt3dadd( -69.4623, 37.5645, 5.01591, 0.67 ) }
    dend_65 { pt3dadd( -70.5404, 35.8034, 5.40313, 0.67 ) }
    dend_65 { pt3dadd( -70.9679, 34.8853, 5.65919, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 42/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -19.7198, 128.09, -10.4177, 0.33 ) }
    dend_62 { pt3dadd( -20.6897, 129.117, -10.7155, 0.33 ) }
    dend_62 { pt3dadd( -20.9596, 129.402, -10.7983, 0.67 ) }
    dend_62 { pt3dadd( -22.3298, 130.853, -11.2191, 0.33 ) }
    dend_62 { pt3dadd( -23.3196, 131.901, -11.523, 0.67 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 47/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -19.7198, 128.09, -10.4177, 0.67 ) }
    dend_61 { pt3dadd( -19.6605, 128.87, -9.3302, 0.67 ) }
    dend_61 { pt3dadd( -19.6357, 131.832, -5.09275, 0.67 ) }
    dend_61 { pt3dadd( -19.56, 133.373, -2.71515, 0.33 ) }
    dend_61 { pt3dadd( -19.5181, 134.234, -1.41197, 0.67 ) }
    dend_61 { pt3dadd( -19.4641, 135.841, 0.994306, 0.33 ) }
    dend_61 { pt3dadd( -19.4275, 136.934, 2.63013, 0.33 ) }
    dend_61 { pt3dadd( -19.4781, 138.319, 4.77463, 0.67 ) }
    dend_61 { pt3dadd( -19.508, 139.301, 6.46826, 0.33 ) }
    dend_61 { pt3dadd( -19.588, 140.053, 7.64276, 0.33 ) }
    dend_61 { pt3dadd( -19.5725, 140.497, 8.41425, 0.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -58.3259, 209.546, -22.961, 0.67 ) }
    dend_59 { pt3dadd( -59.4256, 213.373, -27.4163, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -58.3259, 209.546, -22.961, 0.67 ) }
    dend_56 { pt3dadd( -59.1205, 210.052, -24.7354, 0.67 ) }
    dend_56 { pt3dadd( -59.7748, 210.469, -26.1966, 0.67 ) }
    dend_56 { pt3dadd( -60.8874, 211.178, -28.6811, 0.33 ) }
    dend_56 { pt3dadd( -62.2848, 212.068, -31.8017, 1.33 ) }
    dend_56 { pt3dadd( -65.5981, 214.179, -39.2006, 0.33 ) }
    dend_56 { pt3dadd( -65.8243, 214.323, -39.7059, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -65.8243, 214.323, -39.7059, 0.33 ) }
    dend_58 { pt3dadd( -65.3386, 214.49, -42.095, 0.33 ) }
    dend_58 { pt3dadd( -65.2656, 214.522, -42.4852, 0.67 ) }
    dend_58 { pt3dadd( -64.787, 214.733, -45.0426, 0.33 ) }
    dend_58 { pt3dadd( -64.5218, 214.85, -46.4592, 0.67 ) }
    dend_58 { pt3dadd( -63.7741, 215.18, -50.4542, 0.67 ) }
    dend_58 { pt3dadd( -63.0798, 215.487, -54.1636, 0.33 ) }
    dend_58 { pt3dadd( -63.0212, 215.518, -54.4374, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -65.8243, 214.323, -39.7059, 0.67 ) }
    dend_57 { pt3dadd( -72.8417, 219.28, -39.1379, 0.67 ) }
    dend_57 { pt3dadd( -77.1504, 222.324, -38.7891, 0.33 ) }
    dend_57 { pt3dadd( -77.9756, 222.907, -38.7224, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_25, dend_0, axon_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, axon_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_5 = new SectionList()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_74 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_51 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_76 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_45 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_69 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_67 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_80 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_81 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_82 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_73 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_75 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_79 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_63 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_64 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_66 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_71 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_65 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_78 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_77 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_62 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_46 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_40 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_41 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_42 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_39 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_59 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_56 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_57 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_58 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_17 OneSecGrp_SectionRef_61.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_1 nseg = 9
    dend_20 nseg = 7
    dend_13 nseg = 5
    dend_43 nseg = 5
    dend_19 nseg = 3
    dend_8 nseg = 3
    dend_74 nseg = 7
    dend_51 nseg = 3
    dend_44 nseg = 3
    dend_38 nseg = 5
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_76 nseg = 3
    dend_45 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_72 nseg = 5
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_70 nseg = 5
    dend_67 nseg = 3
    dend_55 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_DBC_78b422a17a_0_0


