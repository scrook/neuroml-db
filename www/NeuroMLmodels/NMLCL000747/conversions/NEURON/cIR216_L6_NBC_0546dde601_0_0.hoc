// Cell: cIR216_L6_NBC_0546dde601_0_0
/*
{
  "id" : "cIR216_L6_NBC_0546dde601_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.18133, 10.1802, -0.0136132, 4.51632", "-3.71511, 9.17715, -0.012728, 5.89932", "-3.24888, 8.1741, -0.0118428, 6.73586", "-2.78266, 7.17105, -0.0109576, 7.77662", "-2.31644, 6.16799, -0.0100724, 8.83653", "-1.85022, 5.16494, -0.00918717, 9.98865", "-1.384, 4.16189, -0.00830196, 11.1793", "-0.917776, 3.15884, -0.00741676, 12.3766", "-0.451555, 2.15579, -0.00653155, 13.3418", "0.0146667, 1.15274, -0.00564635, 14.1684", "0.480888, 0.149684, -0.00476114, 14.5557", "0.94711, -0.853367, -0.00387593, 14.9116", "1.41333, -1.85642, -0.00299073, 14.9294", "1.87955, -2.85947, -0.00210552, 14.4593", "2.34577, -3.86252, -0.00122032, 13.9684", "2.812, -4.86557, -3.35112E-4, 13.2352", "3.27822, -5.86863, 5.50094E-4, 12.4898", "3.74444, -6.87168, 0.0014353, 11.1742", "4.21066, -7.87473, 0.0023205, 8.60206", "4.67688, -8.87778, 0.00320571, 5.94918", "5.1431, -9.88083, 0.00409092, 3.45007" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-4.86983, -2.46696, 10.4413, 1.08", "-6.55737, -3.13182, 10.4555, 1.08", "-7.90566, -3.72943, 10.4652, 0.96", "-8.59389, -4.06853, 10.4696, 0.96", "-10.1916, -4.89904, 10.5934, 0.84", "-11.6728, -5.74364, 10.8102, 0.84", "-13.3897, -6.82913, 11.0917, 0.84", "-14.8993, -7.77722, 11.3737, 0.84", "-16.1514, -8.59878, 11.6424, 0.84", "-17.8449, -9.8329, 12.0681, 0.84", "-18.9883, -10.8267, 12.4325, 0.84", "-20.5865, -12.4595, 13.0987, 0.84", "-27.1254, -15.815, 14.494, 0.84", "-32.6834, -20.6814, 14.7189, 0.84", "-37.682, -26.0383, 14.0874, 0.84", "-42.1676, -31.7617, 13.2134, 0.84", "-46.582, -37.5896, 13.459, 0.84", "-50.2005, -43.8883, 13.8165, 0.84", "-54.5345, -49.7673, 14.1344, 0.84", "-58.6402, -55.7778, 13.5904, 0.84", "-62.4485, -61.9587, 14.1795, 0.84", "-66.2568, -68.1609, 14.4124, 0.84", "-69.9862, -74.3835, 15.0205, 0.84", "-73.5668, -80.6338, 16.0564, 0.84", "-77.7963, -86.259, 18.1132, 0.84", "-81.8277, -91.9541, 20.3473, 0.84", "-85.7332, -98.0156, 21.4506, 0.84", "-89.2129, -104.38, 21.0182, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.44017, -8.44246, -1.30865, 2.77", "4.96834, -9.9183, -1.28682, 2.77", "5.51228, -11.4383, -1.26435, 1.69", "6.12701, -13.1561, -1.23895, 1.69", "6.63953, -14.5882, -1.21777, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.18017, -1.21296, -14.5587, 2.65", "10.3163, -2.67122, -16.026, 2.05", "15.1815, -5.99257, -19.3682, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.00983, 11.308, 0.0313539, 4.22", "-5.85707, 15.0349, 0.0313539, 4.22", "-6.34793, 16.0252, 0.0313539, 4.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.1431, -9.88083, 0.00409092, 1.16334", "11.4656, -23.4833, 0.00409092, 1.16334", "17.788, -37.0857, 0.00409092, 1.16334" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-89.2129, -104.38, 21.0182, 0.24", "-101.704, -105.444, 16.7493, 0.24", "-114.53, -106.255, 13.5337, 0.24", "-127.529, -106.333, 10.9502, 0.24", "-140.362, -104.178, 8.477, 0.24", "-153.029, -102.444, 4.99321, 0.24", "-165.387, -99.889, 0.981661, 0.24", "-177.17, -97.9413, -4.75883, 0.24", "-188.197, -95.2719, -11.591, 0.24", "-198.308, -90.6326, -18.6965, 0.24", "-208.635, -85.4515, -25.0395, 0.24", "-218.953, -81.8972, -32.5171, 0.24", "-228.978, -76.5085, -39.1498, 0.24", "-237.669, -68.6611, -44.9151, 0.24", "-246.41, -62.0974, -52.1819, 0.24", "-256.105, -56.486, -59.0998, 0.24", "-264.677, -49.3621, -65.977, 0.24", "-274.928, -44.2127, -72.471, 0.24", "-283.699, -40.7563, -81.7576, 0.24", "-290.892, -36.9486, -92.1849, 0.24", "-296.597, -34.5734, -103.907, 0.24", "-300.521, -31.2058, -116.093, 0.24", "-304.139, -26.4111, -127.851, 0.24", "-310.053, -19.7693, -137.509, 0.24", "-317.379, -14.7665, -147.277, 0.24", "-325.38, -9.3293, -156.225, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-89.2129, -104.38, 21.0182, 0.24", "-91.791, -113.0, 23.9992, 0.24", "-93.3444, -121.048, 28.8801, 0.24", "-94.9146, -128.634, 34.5214, 0.24", "-94.7264, -137.072, 38.8924, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "6.63953, -14.5882, -1.21777, 0.84", "5.28374, -20.3276, -0.0563841, 0.84", "4.83408, -22.3237, 0.276591, 0.84", "4.39159, -24.4267, 0.584137, 0.84", "4.07441, -26.0684, 0.505951, 0.84", "3.84722, -27.756, 0.187882, 0.72", "3.66931, -29.9379, -0.396905, 0.72", "3.66544, -31.1648, -1.13442, 0.72", "3.71152, -31.9322, -1.70836, 0.72", "4.18972, -36.887, -5.96849, 0.72", "4.35713, -38.6913, -7.64312, 0.72", "4.41739, -39.5245, -8.45765, 0.72", "4.5127, -42.1762, -11.0695, 0.6", "4.51387, -44.1716, -12.9374, 0.6", "4.47097, -46.0529, -14.5613, 0.6", "4.45483, -47.6838, -15.7222, 0.6", "4.50614, -48.6884, -16.5211, 0.6", "4.62162, -49.61, -17.3622, 0.6", "4.74169, -50.2543, -17.9738, 0.6", "5.24359, -52.5942, -20.3234, 0.6", "5.62228, -54.0919, -21.8815, 0.6", "6.30445, -56.7261, -24.7938, 0.6", "6.82215, -59.24, -27.6484, 0.6", "6.97232, -60.3766, -28.9094, 0.6", "6.98864, -61.0383, -29.6642, 0.48", "6.94233, -61.8087, -30.5056, 0.48", "6.53786, -64.2656, -33.0355, 0.48", "6.32793, -65.3027, -33.9889, 0.48", "6.04987, -66.8412, -35.2719, 0.48", "5.39595, -70.7041, -38.3803, 0.24", "5.25879, -71.8245, -39.2285, 0.24", "5.06302, -73.9466, -40.7102, 0.24", "4.99101, -75.3665, -41.5973, 0.24", "4.98431, -77.1608, -42.5762, 0.24", "5.01774, -78.2447, -43.2167, 0.36", "5.32935, -82.2337, -45.7435, 0.36", "5.35496, -82.4595, -45.9067, 0.36", "5.48355, -83.3276, -46.6416, 0.96", "5.9167, -85.9287, -48.9977, 0.36", "6.84187, -90.8785, -53.8911, 1.81", "7.35156, -93.366, -56.4493, 0.6", "7.77186, -95.4044, -58.6283, 0.6", "8.4158, -98.3946, -61.7924, 0.36", "8.73177, -99.612, -63.4455, 0.96", "9.26762, -101.358, -66.0806, 0.36", "9.61346, -102.403, -67.7043, 0.96", "10.6088, -105.283, -72.4266, 0.36", "11.0008, -106.382, -74.3428, 1.57", "13.8266, -114.089, -88.3911, 0.72", "14.2445, -115.25, -90.6866, 0.72", "14.2914, -115.379, -90.9598, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "6.63953, -14.5882, -1.21777, 1.45", "9.06563, -15.5662, -0.953281, 1.45", "11.1467, -16.4052, -0.726409, 1.45", "13.1878, -17.228, -0.503889, 1.45", "14.7698, -17.8657, -0.331431, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "15.1815, -5.99257, -19.3682, 1.33", "18.938, -5.95915, -19.711, 1.33", "25.3215, -5.90236, -20.2934, 1.33", "31.8878, -5.84394, -20.8926, 1.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "15.1815, -5.99257, -19.3682, 0.72", "16.2838, -8.19795, -20.2862, 0.72", "17.1862, -10.412, -21.0654, 0.72", "18.1232, -12.4345, -21.7369, 0.72", "18.9962, -14.087, -22.2679, 0.6", "20.1879, -16.3523, -23.0176, 0.6", "21.3244, -18.4642, -23.7373, 0.6", "22.2653, -20.1137, -24.282, 0.36", "23.7348, -22.6768, -25.148, 0.48", "24.6528, -24.2822, -25.6769, 0.36", "26.5217, -27.6018, -26.9751, 0.36", "28.2049, -30.5672, -28.5123, 0.36", "29.4023, -32.8779, -29.7052, 0.36", "30.5185, -35.1152, -30.9117, 0.36", "32.7131, -39.9252, -33.5791, 0.36", "34.7721, -44.6737, -36.3136, 0.36", "36.7671, -49.3586, -39.1649, 0.24", "38.2647, -53.3465, -41.7642, 0.24" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.34793, 16.0252, 0.0313539, 1.81", "-11.2069, 16.3152, 4.37162, 1.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.34793, 16.0252, 0.0313539, 2.65", "-5.73422, 21.0557, -0.266452, 2.65", "-5.45717, 23.3267, -0.400893, 2.65" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.788, -37.0857, 0.00409092, 0.365715", "24.1105, -50.6882, 0.00409092, 0.365715", "30.4329, -64.2906, 0.00409092, 0.365715" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-94.7264, -137.072, 38.8924, 0.24", "-96.7526, -143.22, 43.6212, 0.24", "-99.9771, -149.751, 46.9649, 0.24", "-102.687, -155.853, 51.4247, 0.24", "-104.47, -162.86, 54.7618, 0.24", "-105.565, -169.488, 59.0606, 0.24", "-107.296, -176.285, 62.8534, 0.24", "-109.693, -183.568, 65.0131, 0.24", "-112.348, -191.065, 65.6469, 0.24", "-117.118, -197.454, 66.9186, 0.24", "-120.628, -204.567, 68.029, 0.24", "-125.015, -211.295, 68.6566, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-94.7264, -137.072, 38.8924, 0.24", "-97.8971, -145.8, 46.2228, 0.24", "-101.071, -153.773, 54.4422, 0.24", "-106.474, -160.345, 62.8913, 0.24", "-109.584, -168.413, 71.0321, 0.24", "-114.189, -176.954, 77.8499, 0.24", "-120.97, -185.322, 82.9176, 0.24", "-128.773, -192.969, 87.7894, 0.24", "-137.922, -200.434, 89.9631, 0.24", "-146.85, -208.34, 91.1845, 0.24", "-154.674, -217.318, 91.5826, 0.24", "-163.666, -225.147, 92.8698, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.7698, -17.8657, -0.331431, 0.36", "16.7701, -19.9984, -1.24379, 0.36", "19.92, -23.3567, -2.68048, 0.36", "22.9415, -26.5781, -4.0586, 0.36", "25.2343, -29.0225, -5.10434, 0.6", "30.0019, -34.1055, -7.27886, 0.6", "32.5089, -36.7783, -8.4223, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "14.7698, -17.8657, -0.331431, 0.84", "16.3735, -18.7113, 1.1237, 0.84", "18.1739, -19.7091, 2.69752, 0.84", "19.4601, -20.4436, 3.74072, 0.72", "21.58, -21.6665, 5.34366, 0.72", "25.6903, -24.1445, 8.25317, 0.72", "27.6207, -25.3974, 9.53785, 0.6", "29.0839, -26.462, 10.496, 0.6", "30.3769, -27.53, 11.24, 0.6", "31.1376, -28.2677, 11.6132, 0.6", "32.481, -29.7035, 12.0274, 0.36", "33.8752, -31.1867, 12.1393, 0.36", "34.9837, -32.3189, 12.3017, 0.36", "36.169, -33.5547, 12.679, 0.36", "37.0929, -34.4216, 13.1027, 0.36", "38.3101, -35.3854, 13.7839, 0.36", "39.0769, -35.8644, 14.2643, 0.36", "41.8199, -37.1476, 16.0577, 0.36", "43.6333, -37.8722, 17.2126, 0.36", "45.3769, -38.499, 18.3939, 0.36", "46.5092, -38.9033, 19.2007, 0.36", "47.1244, -39.1427, 19.6459, 0.36", "48.0949, -39.5515, 20.2526, 0.36", "49.7365, -40.0865, 20.7302, 0.36", "57.1102, -44.9222, 26.5923, 0.36", "63.535, -49.3523, 33.7765, 0.36", "69.6513, -53.3212, 41.5078, 0.36", "74.4838, -58.4441, 49.3939, 0.36", "78.0449, -64.5814, 57.1522, 0.36", "82.7054, -69.5003, 65.2819, 0.36", "87.3413, -75.0841, 72.9357, 0.36", "92.5308, -81.7895, 79.09, 0.36", "96.591, -88.8931, 85.5874, 0.36", "99.6805, -96.9791, 91.2988, 0.36", "102.75, -105.043, 97.0561, 0.36", "105.251, -112.902, 103.372, 0.36" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "31.8878, -5.84394, -20.8926, 1.32", "33.9476, -4.00821, -23.2711, 1.32", "35.5589, -2.75396, -25.1273, 1.32", "37.3966, -1.55375, -27.1944, 1.2", "39.8723, -0.216176, -30.0652, 1.08", "42.5651, 1.25714, -33.7215, 0.96", "45.1847, 2.77948, -37.5838, 0.96", "45.8965, 3.2012, -38.8121, 0.96", "46.8558, 3.82843, -40.6594, 0.96", "47.9286, 4.7235, -43.0847, 0.96", "50.1918, 7.37242, -49.1717, 0.96", "50.8118, 8.36082, -51.1265, 0.96", "51.6038, 9.79971, -53.6421, 0.96", "52.1047, 10.5691, -54.9434, 0.84", "53.5091, 12.2232, -57.7172, 0.72", "54.1702, 12.7889, -58.682, 0.72", "56.8105, 14.3884, -61.6811, 0.84", "58.4063, 15.2782, -63.3623, 1.08", "61.1156, 16.7415, -65.9684, 1.08", "64.3187, 18.3921, -68.784, 1.08", "65.6034, 18.997, -69.8542, 0.96", "67.906, 20.0646, -71.9742, 0.84", "69.1265, 20.6782, -73.2891, 0.84", "70.3769, 21.3394, -74.8101, 0.84", "71.065, 21.6963, -75.7216, 0.84", "73.8692, 23.0165, -79.3953, 0.84", "76.7884, 24.3297, -83.4093, 0.84", "79.5122, 25.5333, -87.2779, 2.16", "80.2698, 25.8828, -88.3656, 2.16", "83.001, 27.2861, -92.1879, 0.72", "84.0185, 27.8983, -93.4979, 0.72", "86.2945, 29.5291, -96.0858, 0.72", "88.2716, 31.0161, -98.0412, 0.72", "89.1184, 31.6625, -98.8248, 0.72", "92.1896, 33.986, -101.808, 2.16", "93.858, 35.2513, -103.425, 1.44", "96.0629, 36.9806, -105.378, 0.48", "97.2924, 38.0337, -106.625, 0.48", "99.3578, 39.9947, -108.98, 1.32", "101.226, 42.0083, -112.365, 1.32", "101.349, 42.1554, -112.642, 1.32", "103.253, 44.5166, -117.317, 0.72", "107.276, 49.5489, -127.041, 0.6", "108.198, 50.7096, -129.17, 0.6", "114.015, 57.661, -141.109, 0.12", "115.027, 58.796, -142.965, 0.96", "115.906, 59.7199, -144.425, 0.48", "117.833, 61.6188, -147.304, 0.36", "120.418, 64.0341, -150.068, 0.24", "122.408, 65.8955, -151.92, 0.24", "125.623, 68.9262, -154.051, 1.2", "126.84, 70.1061, -154.978, 0.72", "129.471, 72.8054, -157.169, 0.24", "130.484, 73.9243, -158.055, 0.24", "132.295, 76.1247, -159.616, 1.08", "132.902, 76.9359, -160.146, 0.6", "135.469, 80.5607, -162.141, 0.48", "136.385, 81.8751, -162.841, 0.48", "137.393, 83.2599, -163.512, 1.2", "138.401, 84.5513, -164.161, 0.6", "141.143, 87.6499, -165.739, 0.24", "142.366, 88.8811, -166.509, 0.24", "143.981, 90.3288, -167.524, 1.32", "145.345, 91.4424, -168.349, 0.72", "148.266, 93.7354, -170.161, 0.48", "150.898, 95.7901, -171.922, 0.48", "153.642, 97.9381, -173.793, 1.08", "154.752, 98.8372, -174.568, 0.36", "157.318, 101.032, -176.317, 0.12", "160.572, 104.039, -178.515, 0.12", "163.038, 106.442, -180.159, 0.12", "163.736, 107.153, -180.609, 0.48", "164.339, 107.781, -181.001, 0.12", "165.437, 108.947, -181.873, 0.12", "165.965, 109.531, -182.342, 0.48", "167.505, 111.412, -183.714, 0.48", "168.376, 112.674, -184.512, 0.24", "169.649, 114.76, -185.675, 0.6", "170.638, 116.552, -186.533, 1.08", "171.568, 118.358, -187.27, 0.48", "173.292, 121.655, -188.527, 0.36", "174.405, 123.659, -189.376, 0.36", "175.937, 126.181, -190.663, 0.36", "176.863, 127.553, -191.436, 0.96", "177.502, 128.416, -191.977, 0.24", "179.942, 131.363, -193.936, 0.12", "182.937, 134.565, -196.048, 0.24", "184.713, 136.331, -197.363, 0.24", "185.837, 137.434, -198.217, 0.24", "187.078, 138.655, -199.073, 0.24", "189.034, 140.618, -200.183, 0.24", "190.027, 141.629, -200.591, 0.24", "193.446, 145.031, -201.858, 1.44", "194.271, 145.845, -202.217, 1.08", "195.816, 147.327, -202.982, 0.12", "196.727, 148.194, -203.604, 0.12", "198.506, 149.851, -205.066, 0.12", "200.6, 151.657, -206.777, 0.6", "201.628, 152.449, -207.526, 0.6", "202.657, 153.183, -208.422, 0.24", "205.822, 155.377, -211.397, 0.72", "206.567, 155.897, -212.164, 0.12", "207.986, 156.906, -213.611, 0.24", "209.28, 157.869, -214.885, 0.24", "214.013, 161.602, -219.566, 0.24", "215.139, 162.587, -220.671, 0.12", "218.301, 165.583, -223.578, 0.24", "219.66, 167.02, -224.848, 0.24", "221.536, 169.259, -226.56, 0.24", "222.484, 170.572, -227.501, 0.72", "223.787, 172.625, -228.718, 0.36", "224.436, 173.691, -229.35, 0.36", "225.315, 175.194, -230.188, 1.08", "226.32, 176.926, -231.244, 0.36", "228.811, 181.322, -233.993, 0.36", "229.358, 182.318, -234.694, 0.36", "230.208, 183.955, -236.092, 1.2", "230.454, 184.44, -236.535, 0.72", "230.971, 185.42, -237.497, 0.36", "231.387, 186.224, -238.313, 0.36", "232.85, 189.165, -240.723, 0.36", "233.847, 191.908, -243.44, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "31.8878, -5.84394, -20.8926, 0.84", "33.7787, -7.65041, -20.7684, 0.84", "35.1423, -9.05578, -20.7936, 0.84", "37.3208, -11.3531, -21.044, 0.6", "38.8423, -12.9869, -21.3045, 0.6", "40.948, -15.3216, -21.8141, 0.6", "42.3179, -16.8714, -22.2038, 0.48", "43.7813, -18.5386, -22.7557, 0.48", "45.1817, -20.1914, -23.3445, 0.48", "46.686, -22.0563, -24.0043, 0.84", "47.9173, -23.5417, -24.5153, 0.72", "49.3057, -25.1684, -24.998, 0.72", "51.4345, -27.5496, -25.5162, 0.72", "52.1596, -28.3815, -25.6097, 0.6", "53.1913, -29.5973, -25.6705, 0.6", "55.3951, -32.2634, -25.7652, 0.84", "56.7329, -33.9388, -25.8075, 0.48", "58.4094, -36.0737, -26.0064, 0.48", "60.7643, -39.1302, -26.4697, 0.48", "61.9231, -40.6001, -26.7398, 0.48", "63.7006, -42.802, -27.2046, 0.84", "65.4031, -44.8715, -27.6641, 0.84", "68.2587, -48.2653, -28.4729, 0.84", "70.5653, -50.9639, -29.1136, 0.72", "72.6621, -53.3594, -29.6725, 0.6", "75.1907, -56.2232, -30.2701, 0.6", "76.7787, -57.9916, -30.5746, 0.6", "78.059, -59.4181, -30.7858, 0.48", "79.7948, -61.3872, -30.9981, 0.48", "80.9019, -62.6148, -31.1502, 0.48", "82.3788, -64.2494, -31.3898, 0.48", "84.1591, -66.2031, -31.692, 0.48", "85.573, -67.6695, -31.9214, 0.36", "86.9141, -68.9492, -32.1156, 0.36", "88.3623, -70.2248, -32.2019, 0.36", "89.7249, -71.3243, -32.1872, 0.36", "90.1066, -71.6104, -32.1487, 0.36", "91.7445, -72.7999, -31.8656, 0.36", "94.1026, -74.4701, -31.3421, 0.24", "96.9145, -76.5402, -30.677, 0.24", "98.2491, -77.5852, -30.3576, 0.24", "99.4355, -78.5719, -30.0882, 0.72", "100.997, -79.9956, -29.7742, 0.36", "102.307, -81.3903, -29.5718, 0.36", "103.679, -83.126, -29.4776, 0.72", "104.437, -84.267, -29.5403, 0.48", "105.242, -85.6116, -29.6623, 0.84", "105.848, -86.6723, -29.7987, 0.48", "106.737, -88.2817, -30.0092, 0.84", "107.225, -89.1367, -30.1205, 0.48", "108.142, -90.6251, -30.2662, 0.96", "109.026, -91.9454, -30.3596, 0.36", "110.138, -93.5408, -30.4696, 0.36", "110.898, -94.5719, -30.5218, 0.36", "112.599, -96.7959, -30.5964, 0.84", "113.497, -97.9013, -30.6421, 0.48", "115.137, -99.882, -30.7112, 0.48", "117.251, -102.425, -30.7896, 0.48", "118.391, -103.778, -30.8309, 0.48", "118.505, -103.912, -30.8362, 0.48", "122.024, -108.17, -31.1149, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-11.2069, 16.3152, 4.37162, 0.6", "-13.0459, 17.7673, 6.62121, 0.6", "-14.5003, 18.8219, 8.19097, 0.6", "-16.3039, 20.2149, 10.04, 0.6", "-17.4053, 21.0822, 11.0241, 0.48", "-18.2711, 21.7565, 11.7004, 0.48", "-19.6374, 22.8205, 12.7677, 0.48", "-22.1111, 24.6482, 14.3408, 0.24", "-23.2871, 25.5135, 14.9274, 0.24", "-24.8329, 26.7085, 15.5193, 0.12", "-25.827, 27.4402, 15.883, 0.12", "-33.3445, 32.4678, 20.0727, 0.12", "-41.6803, 37.6246, 21.861, 0.12", "-50.3836, 41.8507, 24.4358, 0.12", "-58.4545, 46.0742, 28.5851, 0.12", "-65.7991, 51.4893, 32.5383, 0.12", "-73.6303, 55.9605, 36.8538, 0.12", "-81.2566, 60.7935, 41.1014, 0.12", "-87.8086, 66.4275, 45.9929, 0.12", "-95.7923, 69.9029, 50.996, 0.12", "-103.224, 74.0467, 56.273, 0.12", "-112.29, 75.9802, 60.2684, 0.12", "-121.174, 79.5169, 63.3356, 0.12", "-129.175, 84.2212, 67.0198, 0.12", "-137.228, 88.9812, 70.5042, 0.12", "-144.018, 94.1823, 75.5999, 0.12" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.2069, 16.3152, 4.37162, 0.72", "-13.0623, 13.8169, 6.2031, 0.72", "-13.7699, 12.8852, 6.75476, 0.72", "-14.5626, 11.8643, 7.34383, 0.6", "-14.9898, 11.3141, 7.66128, 0.6", "-16.777, 9.01256, 8.98929, 0.6", "-17.6308, 7.91304, 9.62371, 0.6", "-19.4672, 5.69866, 10.835, 0.6", "-20.1885, 4.94815, 11.2937, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.45717, 23.3267, -0.400893, 0.72", "-4.72253, 24.9201, 0.170187, 0.72", "-3.68688, 27.2607, 0.946819, 0.6", "-2.61542, 29.8604, 1.74202, 0.6", "-1.9741, 31.4652, 2.18861, 0.6", "-1.04925, 33.8634, 2.82455, 0.6", "-0.384622, 35.701, 3.27786, 0.6", "0.250472, 37.7016, 3.70839, 0.6", "0.608091, 38.9672, 3.94457, 0.6", "1.20533, 41.1382, 4.43191, 0.6", "1.79936, 43.361, 5.07485, 0.6", "2.34507, 45.4374, 5.73755, 0.48", "2.73891, 46.9811, 6.29478, 0.48", "3.3932, 49.596, 7.31453, 0.48", "4.17185, 52.6611, 8.54946, 0.48", "5.25296, 56.883, 10.2838, 0.48", "5.74401, 58.7651, 11.0749, 0.48", "6.11061, 60.092, 11.6432, 0.48", "6.51822, 61.576, 12.2756, 0.48", "7.00461, 63.3192, 12.9623, 0.48", "7.29278, 64.4316, 13.2983, 0.48", "7.78962, 65.9646, 13.6417, 0.48", "8.12199, 66.8848, 13.8755, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.45717, 23.3267, -0.400893, 2.17", "-5.5615, 27.1054, -1.57801, 2.17", "-5.59838, 28.4412, -1.99415, 1.81", "-5.62693, 29.4753, -2.31628, 1.81", "-5.67343, 31.1594, -2.84088, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "32.5089, -36.7783, -8.4223, 0.72", "32.7374, -39.6689, -10.7833, 0.72", "33.0715, -41.4334, -12.4086, 0.72", "33.4522, -43.0179, -13.9701, 0.72", "33.8109, -44.5062, -15.3834, 0.72", "34.1685, -46.1741, -16.9322, 0.72", "34.6015, -48.5867, -19.0219, 0.72", "34.8888, -50.1649, -20.2312, 1.08", "35.1643, -51.6655, -21.3302, 1.08", "35.3136, -53.2427, -22.3487, 0.48", "35.316, -54.2184, -22.8622, 0.48", "35.2063, -56.1166, -23.6377, 0.48", "35.148, -57.0856, -24.0948, 0.48", "35.0288, -58.4687, -24.932, 0.96", "34.8764, -60.2244, -26.1491, 0.6", "34.8187, -61.8078, -27.5251, 0.48", "34.8064, -62.9097, -28.5908, 0.48", "34.7704, -67.5377, -33.5857, 0.48", "34.7656, -68.8773, -35.2103, 0.36", "34.7366, -69.7163, -36.3339, 0.36", "34.5416, -71.9147, -39.416, 0.36", "34.3737, -72.9734, -40.8971, 0.36", "33.8583, -75.0699, -43.7877, 0.36", "33.4527, -76.8021, -46.1801, 0.36", "33.2455, -78.4422, -48.3853, 0.36", "33.2254, -79.3895, -49.6923, 0.36", "33.2905, -80.1209, -50.6598, 0.36", "33.4362, -80.8888, -51.6614, 0.36", "35.1569, -87.4861, -59.5249, 0.36", "35.7072, -89.4018, -61.6797, 0.36", "36.3902, -91.7098, -64.2676, 0.36", "37.0258, -94.116, -67.1404, 0.36", "37.1013, -95.0513, -68.1132, 0.36", "36.8159, -97.4194, -70.1076, 0.36", "35.7922, -100.362, -72.2799, 0.36", "35.0197, -102.215, -73.7047, 0.36", "33.7531, -105.243, -75.9401, 0.36", "30.8705, -112.946, -81.3694, 0.36", "30.2629, -115.038, -82.7875, 0.36", "28.8742, -122.002, -87.5238, 0.36", "28.5639, -124.946, -89.4738, 0.36", "28.5301, -127.4, -91.0924, 0.36", "28.71, -129.957, -92.763, 0.36", "29.0192, -132.064, -94.2738, 0.36", "29.6474, -136.863, -97.4999, 0.36", "29.9686, -140.601, -99.5165, 0.36", "30.0413, -143.736, -101.116, 0.36", "29.8989, -146.289, -102.458, 0.36", "29.5841, -148.15, -103.544, 0.36", "29.2319, -149.416, -104.297, 0.36", "28.1368, -152.41, -106.122, 0.36", "27.3894, -154.11, -107.251, 0.36", "25.5137, -157.753, -110.027, 0.36", "23.2882, -161.666, -113.354, 0.36", "21.9434, -163.968, -115.416, 0.36", "20.9222, -165.759, -117.218, 0.36", "20.3293, -166.83, -118.43, 0.36", "19.5588, -168.532, -120.46, 0.36", "19.2855, -169.544, -121.619, 0.36", "19.0532, -171.034, -123.289, 0.36", "18.6965, -174.659, -127.629, 0.36", "18.639, -175.822, -129.064, 0.36", "18.6572, -178.574, -132.525, 0.36", "18.8354, -180.815, -135.265, 0.36" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "32.5089, -36.7783, -8.4223, 0.6", "35.6171, -38.9271, -8.96254, 0.6", "38.9361, -41.6126, -9.675, 0.6", "41.3176, -43.7059, -10.2568, 0.48", "44.7117, -46.7054, -11.1159, 0.84", "46.9609, -48.6674, -11.6817, 0.84", "48.9951, -50.4479, -12.1764, 0.72", "52.2229, -53.4206, -12.8718, 0.72", "54.2052, -55.2631, -13.1862, 0.72", "55.8101, -56.727, -13.3943, 1.2", "57.8811, -58.469, -13.6144, 0.84", "60.056, -60.213, -13.9306, 0.84", "62.1703, -61.8762, -14.2719, 0.6", "64.9058, -63.9218, -14.7091, 0.6", "66.2135, -64.8912, -14.9471, 0.6", "69.0303, -67.0442, -15.5234, 0.96", "72.4852, -69.6983, -16.281, 0.72", "74.5741, -71.3109, -16.7706, 0.48", "76.4116, -72.7548, -17.2234, 1.33", "78.9141, -74.7414, -17.7083, 0.72", "81.727, -76.9733, -18.0442, 0.6", "83.6154, -78.5158, -18.2429, 0.48", "84.7692, -79.4479, -18.3485, 0.48", "85.8345, -80.271, -18.4641, 0.36", "87.9991, -81.9299, -18.7186, 0.24", "90.3895, -83.6736, -18.955, 0.96", "96.1779, -87.6358, -19.4229, 0.24", "98.9405, -89.4336, -19.4855, 1.57", "104.046, -92.7017, -19.3367, 0.36", "105.579, -93.6923, -19.2239, 0.36", "108.79, -95.7446, -18.8424, 0.36", "111.524, -97.4821, -18.2979, 1.08", "114.974, -99.69, -17.1714, 0.6", "116.306, -100.628, -16.6707, 0.48", "117.925, -102.041, -16.1994, 0.96", "119.818, -104.014, -15.9075, 0.36", "121.157, -105.674, -15.8954, 0.84", "122.218, -107.079, -15.9871, 0.36", "123.175, -108.423, -16.2001, 0.96", "127.61, -114.759, -17.4606, 0.24", "129.729, -117.997, -18.212, 0.24", "130.611, -119.507, -18.6218, 1.69" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "105.251, -112.902, 103.372, 0.24", "109.643, -118.188, 108.867, 0.24", "113.67, -123.461, 114.647, 0.24", "117.082, -128.615, 120.919, 0.24", "120.006, -133.522, 127.642, 0.24", "122.83, -137.772, 134.882, 0.24", "126.042, -143.357, 140.843, 0.24", "130.179, -148.348, 146.82, 0.24", "133.872, -153.951, 152.477, 0.24", "138.956, -159.171, 157.417, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "105.251, -112.902, 103.372, 0.24", "111.838, -118.558, 109.857, 0.24", "118.957, -123.41, 116.502, 0.24", "125.8, -127.386, 124.016, 0.24", "133.339, -130.437, 131.347, 0.24", "139.587, -134.701, 139.19, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "122.024, -108.17, -31.1149, 0.24", "125.83, -108.706, -35.671, 0.24", "127.051, -108.944, -37.0435, 0.24", "130.805, -109.783, -41.1344, 0.24", "132.617, -110.258, -43.0775, 0.24", "134.539, -110.844, -45.027, 0.24", "136.381, -111.451, -46.8371, 0.24", "137.648, -111.963, -47.9345, 0.24", "138.545, -112.368, -48.6875, 0.24", "139.772, -113.016, -49.5955, 0.24", "141.814, -114.16, -51.083, 0.24", "144.069, -115.531, -52.7101, 0.24", "145.524, -116.442, -53.7968, 0.24", "146.5, -117.031, -54.4871, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "122.024, -108.17, -31.1149, 0.24", "123.506, -111.241, -31.6601, 0.24", "125.404, -115.348, -32.2979, 0.24", "126.801, -118.233, -33.0914, 0.24", "129.078, -122.531, -35.5944, 0.24", "130.276, -124.745, -37.4899, 0.24", "130.958, -126.036, -38.7886, 0.24", "131.975, -127.903, -41.2816, 0.24", "133.823, -131.307, -47.0685, 0.24", "136.274, -135.705, -56.076, 0.24", "137.187, -137.317, -59.8197, 0.24", "137.527, -137.883, -61.171, 0.24", "138.471, -139.404, -64.6694, 0.24", "139.084, -140.337, -66.6459, 0.24", "140.889, -143.25, -71.2763, 0.24", "141.636, -144.392, -72.6106, 0.24", "143.544, -146.753, -75.281, 0.24", "144.743, -148.031, -76.649, 0.24", "145.716, -148.972, -77.5685, 0.24", "147.783, -150.787, -79.2454, 0.24", "149.602, -152.324, -80.5927, 0.24", "154.035, -155.975, -83.8125, 0.24", "157.08, -158.422, -85.9176, 0.24", "159.849, -160.566, -87.7742, 0.24", "161.933, -162.134, -89.1196, 0.24", "164.801, -164.188, -90.8781, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-144.018, 94.1823, 75.5999, 0.12", "-151.02, 98.3447, 82.1105, 0.12", "-156.721, 103.318, 89.2051, 0.12", "-161.878, 108.618, 96.4432, 0.12", "-167.332, 112.157, 104.609, 0.12", "-171.709, 116.6, 112.912, 0.12", "-176.408, 119.033, 121.955, 0.12", "-180.815, 121.91, 130.993, 0.12", "-186.625, 125.42, 138.928, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-144.018, 94.1823, 75.5999, 0.12", "-155.005, 100.923, 79.3114, 0.12", "-165.312, 107.283, 85.0223, 0.12", "-174.196, 112.742, 93.4023, 0.12", "-181.857, 118.638, 102.577, 0.12", "-188.786, 123.532, 112.896, 0.12", "-195.611, 129.447, 122.67, 0.12", "-200.913, 135.127, 133.451, 0.12", "-205.562, 141.787, 143.891, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-20.1885, 4.94815, 11.2937, 0.24", "-22.003, 2.92972, 11.4418, 0.24", "-23.326, 1.54121, 11.5875, 0.24", "-25.3327, -0.564815, 11.8086, 0.24", "-26.5242, -1.81537, 11.9399, 0.24", "-27.2488, -2.57582, 12.0198, 0.24", "-28.2188, -3.59389, 12.1266, 0.24", "-29.1163, -4.3609, 12.3879, 0.24", "-34.8931, -12.4648, 14.147, 0.24", "-40.7438, -19.9285, 17.7372, 0.24", "-47.9384, -26.2463, 21.3353, 0.24", "-54.6765, -31.6453, 26.8886, 0.24", "-60.8275, -38.3079, 31.54, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-20.1885, 4.94815, 11.2937, 0.6", "-21.9245, 4.46093, 11.6186, 0.6", "-23.996, 4.06957, 12.1504, 0.6", "-25.098, 3.93875, 12.4469, 0.6", "-25.8839, 3.88358, 12.6508, 0.6", "-27.5479, 3.81645, 13.0403, 0.48", "-30.4266, 3.7003, 13.7141, 0.48", "-32.0537, 3.68958, 14.1462, 0.48", "-33.8313, 3.75918, 14.6347, 0.48", "-35.1903, 3.87671, 15.0254, 0.48", "-37.0717, 4.14794, 15.5601, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "8.12199, 66.8848, 13.8755, 0.36", "11.8019, 69.8041, 11.7659, 0.36", "13.2286, 70.9359, 10.948, 0.36", "17.1051, 74.0113, 8.72564, 0.36", "25.6398, 79.1719, 5.77766, 0.36", "34.3232, 84.4221, 3.52498, 0.36", "43.2194, 89.5286, 1.80903, 0.36", "52.1455, 94.8349, 1.95321, 0.36", "60.6486, 100.604, 0.598981, 0.36", "68.5435, 106.587, -2.42015, 0.36", "75.4681, 112.709, -7.07984, 0.36", "83.7728, 117.22, -11.4969, 0.36", "92.7224, 120.917, -15.4556, 0.36", "102.283, 124.625, -17.5054, 0.36", "112.12, 128.103, -18.3053, 0.36", "122.25, 130.403, -19.7841, 0.36", "132.75, 130.64, -19.3994, 0.36", "143.124, 129.581, -18.1921, 0.36", "153.485, 128.222, -19.1286, 0.36", "163.302, 125.31, -21.2024, 0.36", "173.755, 124.411, -21.5934, 0.36", "184.131, 123.002, -20.9324, 0.36", "194.483, 121.931, -22.2914, 0.36", "204.967, 122.448, -21.7846, 0.36", "215.3, 123.864, -20.5324, 0.36", "225.778, 123.901, -19.7394, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.12199, 66.8848, 13.8755, 0.36", "8.69522, 69.851, 15.0464, 0.36", "9.19811, 72.4532, 16.0737, 0.36", "12.5998, 81.829, 18.7079, 0.36", "16.0411, 91.1974, 21.3208, 0.36", "20.7322, 99.5552, 25.3774, 0.36", "25.8484, 107.175, 30.406, 0.36", "29.1825, 114.989, 36.4732, 0.36", "33.7143, 122.812, 41.7072, 0.36", "37.135, 131.567, 46.0772, 0.36", "39.8382, 140.596, 50.326, 0.36", "42.4667, 148.647, 56.3924, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.67343, 31.1594, -2.84088, 1.45", "-5.50223, 35.0073, -2.90604, 1.45", "-5.62678, 38.7673, -3.07087, 1.45", "-5.8143, 41.4346, -3.16571, 1.45", "-6.03923, 43.9975, -3.22844, 1.45", "-6.41707, 47.9955, -3.28461, 1.08", "-6.61286, 50.4867, -3.44602, 1.08", "-7.07997, 55.5006, -4.0219, 0.96", "-7.42359, 59.7792, -4.59542, 0.96", "-7.62695, 63.2041, -5.06802, 0.96", "-7.7308, 66.7556, -5.52677, 0.96", "-7.7188, 72.7015, -6.18182, 0.96", "-7.57251, 77.2828, -6.63516, 0.96", "-7.33949, 81.3548, -7.10004, 0.96", "-7.07574, 85.3904, -7.78953, 0.96", "-6.80857, 90.0927, -8.83018, 0.96", "-6.66269, 93.6332, -9.74415, 0.96", "-6.57204, 97.079, -10.7751, 0.96", "-6.47822, 101.797, -12.5027, 0.96", "-6.3409, 107.685, -15.1062, 0.96", "-6.27587, 112.719, -17.4309, 0.96", "-6.31944, 116.444, -19.1826, 0.96", "-6.42128, 119.786, -20.6731, 0.96", "-6.52836, 123.273, -22.0331, 0.96", "-6.67175, 127.416, -23.2693, 0.96", "-6.78442, 132.353, -24.3636, 0.96", "-6.78723, 135.814, -25.0804, 0.96", "-6.79105, 140.575, -25.9496, 0.96", "-6.80537, 145.35, -26.6974, 0.96", "-6.81249, 147.898, -27.0838, 0.96", "-6.85486, 154.661, -27.9873, 0.96", "-6.76445, 158.985, -28.6596, 0.96", "-6.66246, 162.376, -29.1154, 0.96", "-6.53087, 165.796, -29.5864, 0.96", "-6.38513, 169.097, -30.0655, 0.96", "-6.15203, 173.389, -30.6795, 0.96", "-5.83709, 179.52, -31.4703, 0.96", "-5.65687, 182.214, -31.8373, 0.96", "-5.26034, 186.933, -32.6388, 0.96", "-5.09398, 188.886, -33.0228, 0.96", "-4.55458, 195.13, -34.3527, 1.2", "-4.26297, 198.65, -35.1312, 1.08", "-4.06797, 201.427, -35.713, 1.33", "-3.69709, 206.65, -36.7401, 1.08", "-3.47846, 210.238, -37.3553, 1.08", "-3.27355, 213.504, -37.9139, 0.96", "-3.22084, 214.265, -38.0419, 0.96", "-3.02289, 217.448, -38.4754, 0.96", "-2.91356, 220.185, -38.7353, 0.96", "-2.73968, 224.383, -39.0204, 0.72", "-2.60912, 227.646, -39.1781, 0.72", "-2.46117, 232.504, -39.4025, 0.72", "-2.39454, 235.384, -39.5431, 0.96", "-2.36889, 237.953, -39.6759, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.67343, 31.1594, -2.84088, 0.72", "-11.1522, 33.1791, -4.76262, 0.72", "-13.0711, 33.9261, -5.51946, 0.72", "-15.1215, 34.7149, -6.25629, 0.72", "-16.7681, 35.364, -6.78807, 0.72", "-18.9661, 36.3648, -7.5282, 0.6", "-22.5636, 38.3059, -8.81282, 0.6", "-24.8412, 39.7939, -9.61607, 0.6", "-27.0714, 41.5473, -10.5418, 0.6", "-28.2958, 42.5695, -11.1075, 0.36", "-31.2645, 45.1106, -12.4877, 0.6", "-33.3563, 46.9673, -13.4009, 0.6", "-35.2238, 48.5644, -14.1182, 0.6", "-36.2471, 49.3855, -14.5069, 0.48", "-41.086, 53.1698, -16.4685, 1.08", "-42.0753, 53.8536, -16.8498, 0.72", "-43.1237, 54.4141, -17.1744, 0.48", "-45.8777, 55.5628, -17.9316, 0.84", "-48.2945, 56.4132, -18.5345, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "139.587, -134.701, 139.19, 0.24", "143.256, -138.019, 145.721, 0.24", "146.909, -140.374, 152.71, 0.24", "149.45, -142.372, 160.287, 0.24", "152.305, -145.016, 167.523, 0.24", "154.791, -148.319, 174.587, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "139.587, -134.701, 139.19, 0.24", "150.686, -139.731, 146.376, 0.24", "161.453, -146.471, 152.431, 0.24", "172.061, -153.996, 157.696, 0.24", "180.598, -163.757, 162.643, 0.24", "190.888, -172.645, 165.763, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "146.5, -117.031, -54.4871, 0.24", "148.869, -118.945, -56.3203, 0.24", "150.4, -120.209, -57.6948, 0.24", "153.268, -122.631, -60.3666, 0.24", "153.898, -123.158, -60.9374, 0.24", "154.913, -123.968, -61.866, 0.24", "157.663, -126.19, -64.3883, 0.24", "160.299, -128.337, -66.8761, 0.24", "161.333, -129.169, -67.8412, 0.24", "163.36, -130.778, -69.6989, 0.24", "165.749, -132.565, -71.9382, 0.24", "167.314, -133.64, -73.3947, 0.24", "169.206, -134.886, -75.1693, 0.24", "171.173, -136.184, -77.0014, 0.24", "173.303, -137.586, -79.1439, 0.24", "175.733, -139.202, -81.5411, 0.24", "177.226, -140.198, -83.0926, 0.24", "178.816, -141.165, -84.7753, 0.24", "180.495, -142.186, -86.5987, 0.24", "183.727, -144.153, -90.1599, 0.24", "185.777, -145.432, -92.3744, 0.24", "190.13, -148.219, -97.0308, 0.24", "193.169, -150.068, -100.317, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "146.5, -117.031, -54.4871, 0.24", "146.677, -120.256, -54.1079, 0.24", "146.811, -122.679, -53.823, 0.24", "146.962, -125.434, -53.4991, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-37.0717, 4.14794, 15.5601, 0.24", "-38.7831, 3.94931, 14.6365, 0.24", "-40.6432, 3.84042, 13.7029, 0.24", "-41.6247, 3.78297, 13.2103, 0.24", "-43.5693, 3.66914, 12.2344, 0.24", "-45.536, 3.55401, 11.2473, 0.24", "-47.2095, 3.45605, 10.4074, 0.24", "-48.1426, 3.39228, 9.99017, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-37.0717, 4.14794, 15.5601, 0.48", "-38.5213, 3.13638, 14.8549, 0.48", "-39.602, 2.38227, 14.3292, 0.48", "-41.0462, 1.37448, 13.6266, 0.24", "-43.1757, -0.111485, 12.5907, 0.24", "-47.0494, -2.81456, 10.7064, 0.24", "-55.6897, -8.62241, 5.24371, 0.24", "-65.5951, -12.08, -0.332641, 0.24", "-76.837, -14.0272, -3.89112, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "42.4667, 148.647, 56.3924, 0.24", "40.0807, 152.421, 67.7134, 0.24", "36.5182, 154.45, 79.2193, 0.24", "34.3497, 154.882, 91.2488, 0.24", "29.857, 157.89, 102.178, 0.24", "24.3171, 159.467, 112.958, 0.24", "20.2804, 161.421, 124.321, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "42.4667, 148.647, 56.3924, 0.24", "46.7926, 158.235, 56.6538, 0.24", "51.8687, 167.452, 57.5001, 0.24", "57.8442, 176.217, 57.1999, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.36889, 237.953, -39.6759, 0.84", "-1.69478, 243.086, -40.4325, 0.84", "-1.33048, 246.447, -40.8416, 0.84", "-0.841008, 251.342, -41.3436, 0.72", "-0.503116, 254.666, -41.6956, 0.6", "0.298101, 263.211, -42.5736, 0.84", "0.652871, 267.385, -42.9782, 0.84", "0.889381, 271.481, -43.3066, 0.6", "1.03617, 274.765, -43.5999, 0.6", "1.11952, 277.905, -43.8962, 0.6", "1.16449, 282.549, -44.4412, 0.6", "1.15627, 288.868, -45.3617, 0.6", "1.0667, 294.907, -46.2758, 0.6", "0.979411, 298.128, -46.7347, 0.6", "0.795301, 302.612, -47.3024, 0.6", "0.454344, 309.219, -48.0418, 0.6", "0.189555, 314.137, -48.5467, 0.6", "-0.106164, 319.753, -49.0839, 0.6", "-0.281853, 323.894, -49.4742, 0.48", "-0.493858, 328.393, -49.932, 0.48", "-0.712981, 332.021, -50.3044, 0.48", "-0.977161, 335.251, -50.6256, 0.36", "-1.57943, 341.071, -51.4437, 0.36", "-2.17648, 346.12, -52.2856, 0.36", "-2.7239, 350.573, -53.1964, 0.36", "-3.23583, 354.615, -54.0528, 0.36", "-3.82639, 359.748, -55.1194, 0.36", "-4.62925, 367.133, -56.6085, 0.36", "-5.02782, 371.293, -57.381, 0.36", "-5.43672, 376.84, -58.3025, 0.36", "-5.64855, 382.092, -59.0981, 0.36", "-5.7557, 388.55, -59.9358, 0.36", "-5.74497, 393.382, -60.5317, 0.36", "-5.73935, 395.866, -60.8036, 0.36", "-5.7092, 402.485, -61.5103, 0.36", "-5.65357, 406.274, -62.1442, 0.36", "-5.61876, 411.404, -63.2701, 0.36", "-5.68439, 417.069, -64.7841, 0.36", "-5.77941, 421.065, -66.1763, 0.36", "-6.01873, 425.51, -67.9477, 0.36", "-6.70614, 433.968, -71.7445, 0.36", "-7.24487, 438.83, -73.9391, 0.36", "-7.80703, 443.266, -75.7915, 0.36", "-8.78516, 450.394, -78.3814, 0.36", "-9.52151, 455.816, -80.0218, 0.36", "-10.2397, 461.029, -81.24, 0.12", "-10.9642, 467.209, -82.1367, 0.12", "-11.5122, 474.074, -82.8886, 0.12", "-11.7601, 479.346, -83.2547, 0.12", "-11.9031, 487.678, -83.5955, 0.12", "-11.8031, 493.04, -83.8634, 0.12", "-11.418, 502.642, -84.5053, 0.12", "-10.8385, 511.26, -85.3384, 0.12", "-10.1163, 518.735, -86.3397, 0.12", "-9.6775, 522.103, -86.8728, 0.12", "-8.21493, 530.887, -88.538, 0.12", "-7.09252, 536.251, -89.6736, 0.12", "-5.81133, 541.101, -90.8748, 0.12", "-3.34896, 548.355, -92.7941, 0.12", "-0.755019, 554.402, -94.4135, 0.12", "2.30425, 560.26, -96.1079, 0.12", "4.53217, 563.823, -97.1908, 0.12", "7.55899, 568.138, -98.6342, 0.12", "10.5099, 572.248, -100.143, 0.12", "13.3677, 576.06, -101.8, 0.12", "16.3164, 580.109, -103.854, 0.12", "17.7139, 582.52, -105.09, 0.12", "19.1504, 586.037, -106.572, 0.12", "20.5873, 591.788, -108.221, 0.12", "21.2757, 597.175, -109.632, 0.12", "21.3683, 599.713, -110.211, 0.12", "21.4286, 608.335, -111.907, 0.12", "21.3533, 615.872, -113.254, 0.12", "21.0888, 623.739, -114.356, 0.12", "20.5868, 631.186, -115.217, 0.12", "19.8187, 637.829, -115.673, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.36889, 237.953, -39.6759, 0.36", "-2.39737, 240.527, -40.3648, 0.36", "-2.39727, 243.058, -40.9631, 0.36", "-2.32736, 246.341, -41.6097, 0.36", "-2.1953, 249.979, -42.2075, 0.36", "-2.00642, 254.09, -42.8246, 0.36", "-1.87872, 256.134, -43.093, 0.36", "-1.4827, 259.93, -43.5776, 0.36", "-0.981694, 263.961, -44.0822, 0.36", "-0.523808, 267.484, -44.4807, 0.36", "-0.0721984, 271.002, -44.8168, 0.36", "0.468735, 275.501, -45.1981, 0.36", "1.09557, 281.937, -45.8043, 0.36", "1.37164, 286.407, -46.2421, 0.24", "1.47246, 289.516, -46.5879, 0.24", "1.52908, 293.619, -47.0495, 0.24", "1.51173, 295.11, -47.2084, 0.24", "1.35897, 298.655, -47.6046, 0.24", "0.905901, 304.66, -48.2143, 0.24", "0.739101, 306.362, -48.4204, 0.24", "0.444845, 309.277, -48.7782, 0.24", "0.189623, 312.175, -49.1003, 0.24", "-0.0665704, 315.84, -49.4638, 0.24", "-0.296227, 320.205, -49.8187, 0.24", "-0.500243, 324.464, -50.1331, 0.24", "-0.653448, 328.843, -50.4672, 0.24", "-0.719939, 332.663, -50.7913, 0.24", "-0.7179, 334.241, -50.9196, 0.24", "-0.627878, 337.526, -51.1694, 0.24", "-0.414156, 340.412, -51.4224, 0.24", "0.0775926, 344.48, -51.8556, 0.24", "0.504875, 347.694, -52.3016, 0.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-48.2945, 56.4132, -18.5345, 0.48", "-48.9257, 58.0385, -20.0652, 0.48", "-50.0835, 61.0797, -22.3079, 0.48", "-51.3179, 64.1585, -24.0947, 0.48", "-52.0912, 65.958, -25.1639, 0.48", "-52.9914, 67.7483, -26.2777, 0.48", "-54.1469, 70.0335, -27.5733, 0.36", "-55.5427, 72.631, -28.995, 0.6", "-56.8407, 74.957, -30.17, 0.36", "-58.6758, 78.5839, -32.0417, 0.36", "-60.103, 81.7683, -33.7516, 0.36", "-61.3654, 84.7491, -35.6186, 0.84", "-62.6774, 88.1279, -37.8867, 0.48", "-63.1136, 89.3324, -38.817, 0.48", "-63.6603, 91.0625, -40.2337, 0.36", "-64.3866, 93.236, -42.0359, 1.08", "-65.9457, 97.4148, -45.8516, 0.6", "-66.4122, 98.5162, -46.8934, 0.6", "-68.2355, 102.543, -50.6633, 0.36", "-69.4989, 105.18, -53.1048, 0.72", "-70.9721, 108.314, -55.8525, 0.72", "-72.3954, 111.52, -58.5119, 0.36", "-73.5182, 114.089, -60.516, 0.84", "-75.2619, 117.869, -63.3231, 0.36", "-76.0351, 119.584, -64.5299, 0.96", "-78.9464, 126.161, -69.0154, 0.24", "-80.1095, 129.0, -70.8549, 0.72", "-82.0071, 133.533, -73.6462, 0.36", "-83.1015, 135.914, -75.1576, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-48.2945, 56.4132, -18.5345, 0.36", "-49.6861, 57.0927, -19.1956, 0.36", "-51.8168, 58.3708, -20.283, 0.36", "-53.6133, 59.5862, -21.4745, 0.36", "-56.8882, 61.9863, -23.4499, 0.36", "-59.5529, 64.0046, -25.0621, 0.24", "-61.261, 65.2896, -26.0703, 0.12", "-63.5957, 67.1278, -27.4216, 0.12", "-68.5632, 71.1537, -30.245, 0.12", "-72.1199, 73.5381, -31.9862, 0.12", "-74.9642, 75.2258, -33.3228, 0.12", "-76.5397, 76.1234, -33.9554, 0.12", "-78.2037, 77.0456, -34.5881, 0.12", "-78.961, 77.4531, -34.8623, 0.12", "-92.3967, 84.5566, -39.5447, 0.12", "-97.5223, 87.2438, -41.4781, 0.12", "-103.603, 90.4975, -43.686, 0.12", "-110.337, 94.2113, -46.2173, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-48.1426, 3.39228, 9.99017, 0.24", "-50.268, 3.36578, 10.1229, 0.24", "-51.4435, 3.37984, 10.2018, 0.24", "-53.3525, 3.46412, 10.2668, 0.36", "-54.657, 3.56658, 10.2769, 0.36", "-56.066, 3.74151, 10.3733, 0.36", "-56.8382, 3.84976, 10.4457, 0.36", "-58.3169, 4.1148, 10.5731, 0.36", "-60.4006, 4.48862, 10.7767, 0.36", "-61.8914, 4.74541, 10.919, 0.36", "-65.1106, 5.25812, 11.1845, 0.36", "-66.0016, 5.39962, 11.2579, 0.36", "-68.009, 5.69574, 11.4175, 0.36", "-69.3361, 5.87877, 11.5266, 0.36", "-71.2285, 6.08362, 11.6984, 0.36", "-72.5764, 6.16553, 11.7488, 0.36", "-79.7296, 6.41366, 10.9366, 0.36", "-86.8136, 6.10769, 9.73315, 0.36", "-93.6694, 6.93148, 7.68196, 0.36", "-100.177, 9.30964, 5.70323, 0.36", "-105.963, 12.9696, 3.521, 0.36", "-112.776, 14.6865, 1.91057, 0.36", "-119.589, 15.6252, -0.235148, 0.36", "-126.355, 16.1362, -2.63443, 0.36", "-132.723, 17.5564, -5.69106, 0.36", "-139.5, 17.9333, -8.07526, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-48.1426, 3.39228, 9.99017, 0.24", "-46.917, 7.01185, 9.24276, 0.24", "-46.6408, 8.04461, 9.07732, 0.24", "-46.0186, 10.185, 8.79997, 0.24", "-45.7155, 11.1739, 8.70256, 0.24", "-43.8902, 16.6416, 8.24979, 0.24", "-42.9356, 19.2691, 8.07091, 0.24", "-41.8952, 22.0459, 7.97002, 0.24", "-40.2238, 26.211, 7.88534, 0.24", "-39.0824, 28.8335, 7.89855, 0.24", "-37.9041, 31.4416, 7.8948, 0.24", "-37.1571, 33.0375, 7.91451, 0.24", "-36.6463, 34.1165, 7.91074, 0.24", "-35.8648, 35.7226, 7.8224, 0.24", "-34.5069, 38.5199, 7.64201, 0.24", "-31.7972, 43.8897, 7.27881, 0.24", "-30.1407, 47.0741, 7.12694, 0.24", "-28.4663, 50.1295, 6.95834, 0.24", "-25.8922, 54.7075, 6.69839, 0.24", "-23.0969, 59.5533, 6.43008, 0.24", "-21.837, 61.5971, 6.34608, 0.24", "-19.8985, 64.3448, 6.35761, 0.24", "-16.9829, 68.263, 6.31496, 0.24" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.504875, 347.694, -52.3016, 0.24", "1.00808, 351.775, -52.4605, 0.24", "1.30517, 354.574, -52.5339, 0.24", "1.57584, 357.485, -52.5785, 0.24", "2.01339, 362.458, -52.6095, 0.24", "2.42225, 367.184, -52.606, 0.24", "2.65561, 369.765, -52.5856, 0.24", "2.933, 373.089, -52.4192, 0.24", "3.30319, 377.065, -52.1291, 0.24", "3.58717, 380.325, -51.8344, 0.24", "3.76855, 382.931, -51.5861, 0.24", "3.84444, 386.373, -51.2855, 0.24", "3.73375, 389.523, -51.0928, 0.24", "3.4472, 392.421, -51.0032, 0.24", "3.06772, 394.659, -51.0105, 0.24", "2.40028, 397.717, -51.2178, 0.24", "1.39564, 401.673, -51.6809, 0.24", "0.0906716, 406.328, -52.1455, 0.24", "-0.837146, 409.709, -52.4198, 0.24", "-2.32096, 415.283, -52.3981, 0.24", "-3.16268, 418.655, -52.1485, 0.24", "-3.83294, 422.215, -51.7736, 0.24", "-4.82029, 428.866, -50.6591, 0.24", "-5.287, 433.094, -49.7673, 0.24", "-5.64999, 438.041, -48.71, 0.24", "-5.73661, 440.013, -48.301, 0.24", "-6.03896, 446.643, -46.8357, 0.24", "-6.15624, 451.035, -46.0341, 0.24", "-6.18516, 454.086, -45.7713, 0.24", "-6.2584, 458.397, -45.6535, 0.24", "-6.31676, 461.461, -45.8553, 0.24", "-6.45509, 465.149, -46.029, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.504875, 347.694, -52.3016, 0.24", "0.0596146, 350.66, -52.9321, 0.24", "-0.271206, 352.864, -53.4006, 0.24", "-0.642578, 355.338, -53.9265, 0.24", "-1.14108, 358.659, -54.6324, 0.24", "-1.84448, 363.345, -55.6285, 0.24", "-2.20379, 365.739, -56.1373, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-83.1015, 135.914, -75.1576, 0.48", "-90.0319, 139.51, -79.0915, 0.48", "-101.062, 145.186, -84.1323, 0.12", "-109.652, 149.54, -87.4164, 0.24", "-114.916, 152.231, -88.9731, 0.24", "-118.189, 154.007, -89.6631, 0.24", "-122.309, 156.31, -90.4394, 0.24", "-126.043, 158.547, -90.5902, 0.24", "-128.273, 159.798, -90.5703, 0.24", "-133.814, 162.641, -91.3829, 0.24", "-140.587, 166.128, -93.0941, 0.24", "-144.257, 168.152, -94.406, 0.24", "-147.413, 170.11, -95.9204, 0.24", "-155.202, 175.245, -100.647, 0.24", "-161.519, 179.294, -104.954, 0.24", "-163.315, 180.368, -106.222, 0.24", "-166.359, 182.046, -108.317, 0.24", "-170.427, 184.29, -110.762, 0.24", "-173.575, 186.045, -112.444, 0.24", "-180.852, 189.994, -115.399, 0.24", "-184.924, 191.942, -116.834, 0.24", "-189.485, 193.899, -118.38, 0.24", "-192.828, 195.151, -119.427, 0.24", "-197.037, 196.617, -120.567, 0.24", "-201.146, 198.211, -121.658, 0.24", "-205.677, 200.445, -123.078, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-83.1015, 135.914, -75.1576, 0.48", "-85.0144, 140.619, -83.7081, 0.48", "-87.6139, 147.139, -95.8094, 0.24", "-89.8513, 152.97, -106.199, 0.24", "-92.3358, 159.189, -116.932, 0.24", "-93.824, 162.765, -122.896, 0.24", "-95.5283, 166.86, -129.727, 0.24", "-97.5971, 171.802, -137.75, 0.24", "-98.5231, 174.121, -141.544, 0.24", "-100.131, 178.382, -148.44, 0.24", "-102.74, 184.048, -156.67, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-139.5, 17.9333, -8.07526, 0.24", "-150.308, 19.0795, -10.4612, 0.24", "-160.845, 19.2713, -13.9502, 0.24", "-171.159, 20.4985, -17.9052, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-139.5, 17.9333, -8.07526, 0.24", "-148.011, 20.6193, -9.15802, 0.24", "-156.651, 23.0208, -8.69522, 0.24", "-164.899, 25.3137, -6.09681, 0.24", "-172.085, 28.3568, -1.8718, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.20379, 365.739, -56.1373, 0.24", "-1.73905, 370.773, -55.7554, 0.24", "-1.38412, 374.618, -55.4637, 0.24", "-1.12164, 377.461, -55.248, 0.24", "-0.908708, 379.768, -55.073, 0.24", "-0.529269, 383.878, -54.7611, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.20379, 365.739, -56.1373, 0.24", "-2.36457, 370.137, -55.6534, 0.24", "-3.14393, 374.332, -55.2327, 0.24", "-4.17313, 378.007, -55.1095, 0.24", "-5.15902, 380.941, -54.9849, 0.24", "-6.07203, 383.534, -55.0264, 0.24", "-7.04234, 386.402, -55.1652, 0.24", "-9.13618, 392.092, -55.4335, 0.24", "-10.9318, 396.674, -55.8689, 0.24", "-12.3791, 400.481, -56.3988, 0.24", "-13.7272, 405.024, -57.2985, 0.24", "-14.2833, 407.819, -57.8939, 0.24", "-14.5116, 409.106, -58.1176, 0.24", "-14.972, 411.857, -58.4999, 0.24", "-15.3704, 414.157, -58.7354, 0.24", "-16.8249, 421.839, -59.3559, 0.24", "-17.4661, 424.937, -59.4868, 0.24", "-20.3441, 438.017, -59.9834, 0.24", "-21.0963, 441.636, -60.1045, 0.24", "-21.8637, 445.738, -60.2642, 0.24", "-22.479, 449.645, -60.4896, 0.24", "-22.7968, 452.315, -60.6673, 0.24", "-22.9803, 456.665, -61.0831, 0.24", "-22.7656, 460.535, -61.5366, 0.24", "-22.4012, 465.486, -62.1842, 0.24", "-21.8404, 471.91, -63.1118, 0.24", "-21.1641, 478.542, -64.1378, 0.24", "-20.3512, 486.284, -65.3567, 0.24", "-19.7148, 492.447, -66.2731, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-172.085, 28.3568, -1.8718, 0.24", "-178.989, 31.2434, -1.45731, 0.24", "-185.598, 34.6033, -0.502127, 0.24", "-192.203, 37.8892, 0.713873, 0.24", "-198.573, 41.7552, 1.02069, 0.24", "-204.306, 46.3518, 1.98087, 0.24", "-210.644, 50.2775, 2.12244, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-172.085, 28.3568, -1.8718, 0.24", "-182.271, 31.9198, -0.0698928, 0.24", "-192.309, 36.2013, 0.652704, 0.24", "-202.021, 41.1916, 0.878739, 0.24", "-212.582, 44.1708, 0.69958, 0.24", "-223.205, 46.3348, 2.3935, 0.24", "-233.482, 50.0711, 3.00583, 0.24", "-242.951, 55.3159, 4.23184, 0.24", "-251.83, 61.3948, 5.64335, 0.24", "-260.816, 66.8223, 8.38902, 0.24", "-269.597, 72.4805, 11.2712, 0.24", "-278.782, 77.3279, 14.471, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "axon_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "axon_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_NBC_0546dde601_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_44
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_20
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, axon_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, axon_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4499999174985625)
    connect dend_44(0), soma_0(0.4499999174985625)
    connect dend_35(0), soma_0(0.4499999174985625)
    connect dend_0(0), soma_0(0.4499999174985625)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.18133, 10.1802, -0.0136132, 4.51632 ) }
    soma_0 { pt3dadd( -3.71511, 9.17715, -0.012728, 5.89932 ) }
    soma_0 { pt3dadd( -3.24888, 8.1741, -0.0118428, 6.73586 ) }
    soma_0 { pt3dadd( -2.78266, 7.17105, -0.0109576, 7.77662 ) }
    soma_0 { pt3dadd( -2.31644, 6.16799, -0.0100724, 8.83653 ) }
    soma_0 { pt3dadd( -1.85022, 5.16494, -0.00918717, 9.98865 ) }
    soma_0 { pt3dadd( -1.384, 4.16189, -0.00830196, 11.1793 ) }
    soma_0 { pt3dadd( -0.917776, 3.15884, -0.00741676, 12.3766 ) }
    soma_0 { pt3dadd( -0.451555, 2.15579, -0.00653155, 13.3418 ) }
    soma_0 { pt3dadd( 0.0146667, 1.15274, -0.00564635, 14.1684 ) }
    soma_0 { pt3dadd( 0.480888, 0.149684, -0.00476114, 14.5557 ) }
    soma_0 { pt3dadd( 0.94711, -0.853367, -0.00387593, 14.9116 ) }
    soma_0 { pt3dadd( 1.41333, -1.85642, -0.00299073, 14.9294 ) }
    soma_0 { pt3dadd( 1.87955, -2.85947, -0.00210552, 14.4593 ) }
    soma_0 { pt3dadd( 2.34577, -3.86252, -0.00122032, 13.9684 ) }
    soma_0 { pt3dadd( 2.812, -4.86557, -3.35112E-4, 13.2352 ) }
    soma_0 { pt3dadd( 3.27822, -5.86863, 5.50094E-4, 12.4898 ) }
    soma_0 { pt3dadd( 3.74444, -6.87168, 0.0014353, 11.1742 ) }
    soma_0 { pt3dadd( 4.21066, -7.87473, 0.0023205, 8.60206 ) }
    soma_0 { pt3dadd( 4.67688, -8.87778, 0.00320571, 5.94918 ) }
    soma_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 3.45007 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -4.86983, -2.46696, 10.4413, 1.08 ) }
    dend_55 { pt3dadd( -6.55737, -3.13182, 10.4555, 1.08 ) }
    dend_55 { pt3dadd( -7.90566, -3.72943, 10.4652, 0.96 ) }
    dend_55 { pt3dadd( -8.59389, -4.06853, 10.4696, 0.96 ) }
    dend_55 { pt3dadd( -10.1916, -4.89904, 10.5934, 0.84 ) }
    dend_55 { pt3dadd( -11.6728, -5.74364, 10.8102, 0.84 ) }
    dend_55 { pt3dadd( -13.3897, -6.82913, 11.0917, 0.84 ) }
    dend_55 { pt3dadd( -14.8993, -7.77722, 11.3737, 0.84 ) }
    dend_55 { pt3dadd( -16.1514, -8.59878, 11.6424, 0.84 ) }
    dend_55 { pt3dadd( -17.8449, -9.8329, 12.0681, 0.84 ) }
    dend_55 { pt3dadd( -18.9883, -10.8267, 12.4325, 0.84 ) }
    dend_55 { pt3dadd( -20.5865, -12.4595, 13.0987, 0.84 ) }
    dend_55 { pt3dadd( -27.1254, -15.815, 14.494, 0.84 ) }
    dend_55 { pt3dadd( -32.6834, -20.6814, 14.7189, 0.84 ) }
    dend_55 { pt3dadd( -37.682, -26.0383, 14.0874, 0.84 ) }
    dend_55 { pt3dadd( -42.1676, -31.7617, 13.2134, 0.84 ) }
    dend_55 { pt3dadd( -46.582, -37.5896, 13.459, 0.84 ) }
    dend_55 { pt3dadd( -50.2005, -43.8883, 13.8165, 0.84 ) }
    dend_55 { pt3dadd( -54.5345, -49.7673, 14.1344, 0.84 ) }
    dend_55 { pt3dadd( -58.6402, -55.7778, 13.5904, 0.84 ) }
    dend_55 { pt3dadd( -62.4485, -61.9587, 14.1795, 0.84 ) }
    dend_55 { pt3dadd( -66.2568, -68.1609, 14.4124, 0.84 ) }
    dend_55 { pt3dadd( -69.9862, -74.3835, 15.0205, 0.84 ) }
    dend_55 { pt3dadd( -73.5668, -80.6338, 16.0564, 0.84 ) }
    dend_55 { pt3dadd( -77.7963, -86.259, 18.1132, 0.84 ) }
    dend_55 { pt3dadd( -81.8277, -91.9541, 20.3473, 0.84 ) }
    dend_55 { pt3dadd( -85.7332, -98.0156, 21.4506, 0.84 ) }
    dend_55 { pt3dadd( -89.2129, -104.38, 21.0182, 0.84 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 49/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.44017, -8.44246, -1.30865, 2.77 ) }
    dend_44 { pt3dadd( 4.96834, -9.9183, -1.28682, 2.77 ) }
    dend_44 { pt3dadd( 5.51228, -11.4383, -1.26435, 1.69 ) }
    dend_44 { pt3dadd( 6.12701, -13.1561, -1.23895, 1.69 ) }
    dend_44 { pt3dadd( 6.63953, -14.5882, -1.21777, 2.29 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 54/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.18017, -1.21296, -14.5587, 2.65 ) }
    dend_35 { pt3dadd( 10.3163, -2.67122, -16.026, 2.05 ) }
    dend_35 { pt3dadd( 15.1815, -5.99257, -19.3682, 2.41 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.00983, 11.308, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -5.85707, 15.0349, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -6.34793, 16.0252, 0.0313539, 4.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 60/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 1.16334 ) }
    axon_0 { pt3dadd( 11.4656, -23.4833, 0.00409092, 1.16334 ) }
    axon_0 { pt3dadd( 17.788, -37.0857, 0.00409092, 1.16334 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 63/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -89.2129, -104.38, 21.0182, 0.24 ) }
    dend_59 { pt3dadd( -101.704, -105.444, 16.7493, 0.24 ) }
    dend_59 { pt3dadd( -114.53, -106.255, 13.5337, 0.24 ) }
    dend_59 { pt3dadd( -127.529, -106.333, 10.9502, 0.24 ) }
    dend_59 { pt3dadd( -140.362, -104.178, 8.477, 0.24 ) }
    dend_59 { pt3dadd( -153.029, -102.444, 4.99321, 0.24 ) }
    dend_59 { pt3dadd( -165.387, -99.889, 0.981661, 0.24 ) }
    dend_59 { pt3dadd( -177.17, -97.9413, -4.75883, 0.24 ) }
    dend_59 { pt3dadd( -188.197, -95.2719, -11.591, 0.24 ) }
    dend_59 { pt3dadd( -198.308, -90.6326, -18.6965, 0.24 ) }
    dend_59 { pt3dadd( -208.635, -85.4515, -25.0395, 0.24 ) }
    dend_59 { pt3dadd( -218.953, -81.8972, -32.5171, 0.24 ) }
    dend_59 { pt3dadd( -228.978, -76.5085, -39.1498, 0.24 ) }
    dend_59 { pt3dadd( -237.669, -68.6611, -44.9151, 0.24 ) }
    dend_59 { pt3dadd( -246.41, -62.0974, -52.1819, 0.24 ) }
    dend_59 { pt3dadd( -256.105, -56.486, -59.0998, 0.24 ) }
    dend_59 { pt3dadd( -264.677, -49.3621, -65.977, 0.24 ) }
    dend_59 { pt3dadd( -274.928, -44.2127, -72.471, 0.24 ) }
    dend_59 { pt3dadd( -283.699, -40.7563, -81.7576, 0.24 ) }
    dend_59 { pt3dadd( -290.892, -36.9486, -92.1849, 0.24 ) }
    dend_59 { pt3dadd( -296.597, -34.5734, -103.907, 0.24 ) }
    dend_59 { pt3dadd( -300.521, -31.2058, -116.093, 0.24 ) }
    dend_59 { pt3dadd( -304.139, -26.4111, -127.851, 0.24 ) }
    dend_59 { pt3dadd( -310.053, -19.7693, -137.509, 0.24 ) }
    dend_59 { pt3dadd( -317.379, -14.7665, -147.277, 0.24 ) }
    dend_59 { pt3dadd( -325.38, -9.3293, -156.225, 0.24 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -89.2129, -104.38, 21.0182, 0.24 ) }
    dend_56 { pt3dadd( -91.791, -113.0, 23.9992, 0.24 ) }
    dend_56 { pt3dadd( -93.3444, -121.048, 28.8801, 0.24 ) }
    dend_56 { pt3dadd( -94.9146, -128.634, 34.5214, 0.24 ) }
    dend_56 { pt3dadd( -94.7264, -137.072, 38.8924, 0.24 ) }
    // Section: dend_54, id: dend_54, parent: dend_44 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 6.63953, -14.5882, -1.21777, 0.84 ) }
    dend_54 { pt3dadd( 5.28374, -20.3276, -0.0563841, 0.84 ) }
    dend_54 { pt3dadd( 4.83408, -22.3237, 0.276591, 0.84 ) }
    dend_54 { pt3dadd( 4.39159, -24.4267, 0.584137, 0.84 ) }
    dend_54 { pt3dadd( 4.07441, -26.0684, 0.505951, 0.84 ) }
    dend_54 { pt3dadd( 3.84722, -27.756, 0.187882, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_54 { pt3dadd( 3.66931, -29.9379, -0.396905, 0.72 ) }
    dend_54 { pt3dadd( 3.66544, -31.1648, -1.13442, 0.72 ) }
    dend_54 { pt3dadd( 3.71152, -31.9322, -1.70836, 0.72 ) }
    dend_54 { pt3dadd( 4.18972, -36.887, -5.96849, 0.72 ) }
    dend_54 { pt3dadd( 4.35713, -38.6913, -7.64312, 0.72 ) }
    dend_54 { pt3dadd( 4.41739, -39.5245, -8.45765, 0.72 ) }
    dend_54 { pt3dadd( 4.5127, -42.1762, -11.0695, 0.6 ) }
    dend_54 { pt3dadd( 4.51387, -44.1716, -12.9374, 0.6 ) }
    dend_54 { pt3dadd( 4.47097, -46.0529, -14.5613, 0.6 ) }
    dend_54 { pt3dadd( 4.45483, -47.6838, -15.7222, 0.6 ) }
    dend_54 { pt3dadd( 4.50614, -48.6884, -16.5211, 0.6 ) }
    dend_54 { pt3dadd( 4.62162, -49.61, -17.3622, 0.6 ) }
    dend_54 { pt3dadd( 4.74169, -50.2543, -17.9738, 0.6 ) }
    dend_54 { pt3dadd( 5.24359, -52.5942, -20.3234, 0.6 ) }
    dend_54 { pt3dadd( 5.62228, -54.0919, -21.8815, 0.6 ) }
    dend_54 { pt3dadd( 6.30445, -56.7261, -24.7938, 0.6 ) }
    dend_54 { pt3dadd( 6.82215, -59.24, -27.6484, 0.6 ) }
    dend_54 { pt3dadd( 6.97232, -60.3766, -28.9094, 0.6 ) }
    dend_54 { pt3dadd( 6.98864, -61.0383, -29.6642, 0.48 ) }
    dend_54 { pt3dadd( 6.94233, -61.8087, -30.5056, 0.48 ) }
    dend_54 { pt3dadd( 6.53786, -64.2656, -33.0355, 0.48 ) }
    dend_54 { pt3dadd( 6.32793, -65.3027, -33.9889, 0.48 ) }
    dend_54 { pt3dadd( 6.04987, -66.8412, -35.2719, 0.48 ) }
    dend_54 { pt3dadd( 5.39595, -70.7041, -38.3803, 0.24 ) }
    dend_54 { pt3dadd( 5.25879, -71.8245, -39.2285, 0.24 ) }
    dend_54 { pt3dadd( 5.06302, -73.9466, -40.7102, 0.24 ) }
    dend_54 { pt3dadd( 4.99101, -75.3665, -41.5973, 0.24 ) }
    dend_54 { pt3dadd( 4.98431, -77.1608, -42.5762, 0.24 ) }
    dend_54 { pt3dadd( 5.01774, -78.2447, -43.2167, 0.36 ) }
    dend_54 { pt3dadd( 5.32935, -82.2337, -45.7435, 0.36 ) }
    dend_54 { pt3dadd( 5.35496, -82.4595, -45.9067, 0.36 ) }
    dend_54 { pt3dadd( 5.48355, -83.3276, -46.6416, 0.96 ) }
    dend_54 { pt3dadd( 5.9167, -85.9287, -48.9977, 0.36 ) }
    dend_54 { pt3dadd( 6.84187, -90.8785, -53.8911, 1.81 ) }
    dend_54 { pt3dadd( 7.35156, -93.366, -56.4493, 0.6 ) }
    dend_54 { pt3dadd( 7.77186, -95.4044, -58.6283, 0.6 ) }
    dend_54 { pt3dadd( 8.4158, -98.3946, -61.7924, 0.36 ) }
    dend_54 { pt3dadd( 8.73177, -99.612, -63.4455, 0.96 ) }
    dend_54 { pt3dadd( 9.26762, -101.358, -66.0806, 0.36 ) }
    dend_54 { pt3dadd( 9.61346, -102.403, -67.7043, 0.96 ) }
    dend_54 { pt3dadd( 10.6088, -105.283, -72.4266, 0.36 ) }
    dend_54 { pt3dadd( 11.0008, -106.382, -74.3428, 1.57 ) }
    dend_54 { pt3dadd( 13.8266, -114.089, -88.3911, 0.72 ) }
    dend_54 { pt3dadd( 14.2445, -115.25, -90.6866, 0.72 ) }
    dend_54 { pt3dadd( 14.2914, -115.379, -90.9598, 1.45 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 6.63953, -14.5882, -1.21777, 1.45 ) }
    dend_45 { pt3dadd( 9.06563, -15.5662, -0.953281, 1.45 ) }
    dend_45 { pt3dadd( 11.1467, -16.4052, -0.726409, 1.45 ) }
    dend_45 { pt3dadd( 13.1878, -17.228, -0.503889, 1.45 ) }
    dend_45 { pt3dadd( 14.7698, -17.8657, -0.331431, 1.45 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 15.1815, -5.99257, -19.3682, 1.33 ) }
    dend_37 { pt3dadd( 18.938, -5.95915, -19.711, 1.33 ) }
    dend_37 { pt3dadd( 25.3215, -5.90236, -20.2934, 1.33 ) }
    dend_37 { pt3dadd( 31.8878, -5.84394, -20.8926, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 15.1815, -5.99257, -19.3682, 0.72 ) }
    dend_36 { pt3dadd( 16.2838, -8.19795, -20.2862, 0.72 ) }
    dend_36 { pt3dadd( 17.1862, -10.412, -21.0654, 0.72 ) }
    dend_36 { pt3dadd( 18.1232, -12.4345, -21.7369, 0.72 ) }
    dend_36 { pt3dadd( 18.9962, -14.087, -22.2679, 0.6 ) }
    dend_36 { pt3dadd( 20.1879, -16.3523, -23.0176, 0.6 ) }
    dend_36 { pt3dadd( 21.3244, -18.4642, -23.7373, 0.6 ) }
    dend_36 { pt3dadd( 22.2653, -20.1137, -24.282, 0.36 ) }
    dend_36 { pt3dadd( 23.7348, -22.6768, -25.148, 0.48 ) }
    dend_36 { pt3dadd( 24.6528, -24.2822, -25.6769, 0.36 ) }
    dend_36 { pt3dadd( 26.5217, -27.6018, -26.9751, 0.36 ) }
    dend_36 { pt3dadd( 28.2049, -30.5672, -28.5123, 0.36 ) }
    dend_36 { pt3dadd( 29.4023, -32.8779, -29.7052, 0.36 ) }
    dend_36 { pt3dadd( 30.5185, -35.1152, -30.9117, 0.36 ) }
    dend_36 { pt3dadd( 32.7131, -39.9252, -33.5791, 0.36 ) }
    dend_36 { pt3dadd( 34.7721, -44.6737, -36.3136, 0.36 ) }
    dend_36 { pt3dadd( 36.7671, -49.3586, -39.1649, 0.24 ) }
    dend_36 { pt3dadd( 38.2647, -53.3465, -41.7642, 0.24 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.34793, 16.0252, 0.0313539, 1.81 ) }
    dend_20 { pt3dadd( -11.2069, 16.3152, 4.37162, 1.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 74/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.34793, 16.0252, 0.0313539, 2.65 ) }
    dend_1 { pt3dadd( -5.73422, 21.0557, -0.266452, 2.65 ) }
    dend_1 { pt3dadd( -5.45717, 23.3267, -0.400893, 2.65 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.788, -37.0857, 0.00409092, 0.365715 ) }
    axon_1 { pt3dadd( 24.1105, -50.6882, 0.00409092, 0.365715 ) }
    axon_1 { pt3dadd( 30.4329, -64.2906, 0.00409092, 0.365715 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -94.7264, -137.072, 38.8924, 0.24 ) }
    dend_58 { pt3dadd( -96.7526, -143.22, 43.6212, 0.24 ) }
    dend_58 { pt3dadd( -99.9771, -149.751, 46.9649, 0.24 ) }
    dend_58 { pt3dadd( -102.687, -155.853, 51.4247, 0.24 ) }
    dend_58 { pt3dadd( -104.47, -162.86, 54.7618, 0.24 ) }
    dend_58 { pt3dadd( -105.565, -169.488, 59.0606, 0.24 ) }
    dend_58 { pt3dadd( -107.296, -176.285, 62.8534, 0.24 ) }
    dend_58 { pt3dadd( -109.693, -183.568, 65.0131, 0.24 ) }
    dend_58 { pt3dadd( -112.348, -191.065, 65.6469, 0.24 ) }
    dend_58 { pt3dadd( -117.118, -197.454, 66.9186, 0.24 ) }
    dend_58 { pt3dadd( -120.628, -204.567, 68.029, 0.24 ) }
    dend_58 { pt3dadd( -125.015, -211.295, 68.6566, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 92/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -94.7264, -137.072, 38.8924, 0.24 ) }
    dend_57 { pt3dadd( -97.8971, -145.8, 46.2228, 0.24 ) }
    dend_57 { pt3dadd( -101.071, -153.773, 54.4422, 0.24 ) }
    dend_57 { pt3dadd( -106.474, -160.345, 62.8913, 0.24 ) }
    dend_57 { pt3dadd( -109.584, -168.413, 71.0321, 0.24 ) }
    dend_57 { pt3dadd( -114.189, -176.954, 77.8499, 0.24 ) }
    dend_57 { pt3dadd( -120.97, -185.322, 82.9176, 0.24 ) }
    dend_57 { pt3dadd( -128.773, -192.969, 87.7894, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -137.922, -200.434, 89.9631, 0.24 ) }
    dend_57 { pt3dadd( -146.85, -208.34, 91.1845, 0.24 ) }
    dend_57 { pt3dadd( -154.674, -217.318, 91.5826, 0.24 ) }
    dend_57 { pt3dadd( -163.666, -225.147, 92.8698, 0.24 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.7698, -17.8657, -0.331431, 0.36 ) }
    dend_51 { pt3dadd( 16.7701, -19.9984, -1.24379, 0.36 ) }
    dend_51 { pt3dadd( 19.92, -23.3567, -2.68048, 0.36 ) }
    dend_51 { pt3dadd( 22.9415, -26.5781, -4.0586, 0.36 ) }
    dend_51 { pt3dadd( 25.2343, -29.0225, -5.10434, 0.6 ) }
    dend_51 { pt3dadd( 30.0019, -34.1055, -7.27886, 0.6 ) }
    dend_51 { pt3dadd( 32.5089, -36.7783, -8.4223, 1.08 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 11/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 14.7698, -17.8657, -0.331431, 0.84 ) }
    dend_46 { pt3dadd( 16.3735, -18.7113, 1.1237, 0.84 ) }
    dend_46 { pt3dadd( 18.1739, -19.7091, 2.69752, 0.84 ) }
    dend_46 { pt3dadd( 19.4601, -20.4436, 3.74072, 0.72 ) }
    dend_46 { pt3dadd( 21.58, -21.6665, 5.34366, 0.72 ) }
    dend_46 { pt3dadd( 25.6903, -24.1445, 8.25317, 0.72 ) }
    dend_46 { pt3dadd( 27.6207, -25.3974, 9.53785, 0.6 ) }
    dend_46 { pt3dadd( 29.0839, -26.462, 10.496, 0.6 ) }
    dend_46 { pt3dadd( 30.3769, -27.53, 11.24, 0.6 ) }
    dend_46 { pt3dadd( 31.1376, -28.2677, 11.6132, 0.6 ) }
    dend_46 { pt3dadd( 32.481, -29.7035, 12.0274, 0.36 ) }
    dend_46 { pt3dadd( 33.8752, -31.1867, 12.1393, 0.36 ) }
    dend_46 { pt3dadd( 34.9837, -32.3189, 12.3017, 0.36 ) }
    dend_46 { pt3dadd( 36.169, -33.5547, 12.679, 0.36 ) }
    dend_46 { pt3dadd( 37.0929, -34.4216, 13.1027, 0.36 ) }
    dend_46 { pt3dadd( 38.3101, -35.3854, 13.7839, 0.36 ) }
    dend_46 { pt3dadd( 39.0769, -35.8644, 14.2643, 0.36 ) }
    dend_46 { pt3dadd( 41.8199, -37.1476, 16.0577, 0.36 ) }
    dend_46 { pt3dadd( 43.6333, -37.8722, 17.2126, 0.36 ) }
    dend_46 { pt3dadd( 45.3769, -38.499, 18.3939, 0.36 ) }
    dend_46 { pt3dadd( 46.5092, -38.9033, 19.2007, 0.36 ) }
    dend_46 { pt3dadd( 47.1244, -39.1427, 19.6459, 0.36 ) }
    dend_46 { pt3dadd( 48.0949, -39.5515, 20.2526, 0.36 ) }
    dend_46 { pt3dadd( 49.7365, -40.0865, 20.7302, 0.36 ) }
    dend_46 { pt3dadd( 57.1102, -44.9222, 26.5923, 0.36 ) }
    dend_46 { pt3dadd( 63.535, -49.3523, 33.7765, 0.36 ) }
    dend_46 { pt3dadd( 69.6513, -53.3212, 41.5078, 0.36 ) }
    dend_46 { pt3dadd( 74.4838, -58.4441, 49.3939, 0.36 ) }
    dend_46 { pt3dadd( 78.0449, -64.5814, 57.1522, 0.36 ) }
    dend_46 { pt3dadd( 82.7054, -69.5003, 65.2819, 0.36 ) }
    dend_46 { pt3dadd( 87.3413, -75.0841, 72.9357, 0.36 ) }
    dend_46 { pt3dadd( 92.5308, -81.7895, 79.09, 0.36 ) }
    dend_46 { pt3dadd( 96.591, -88.8931, 85.5874, 0.36 ) }
    dend_46 { pt3dadd( 99.6805, -96.9791, 91.2988, 0.36 ) }
    dend_46 { pt3dadd( 102.75, -105.043, 97.0561, 0.36 ) }
    dend_46 { pt3dadd( 105.251, -112.902, 103.372, 0.36 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 31.8878, -5.84394, -20.8926, 1.32 ) }
    dend_43 { pt3dadd( 33.9476, -4.00821, -23.2711, 1.32 ) }
    dend_43 { pt3dadd( 35.5589, -2.75396, -25.1273, 1.32 ) }
    dend_43 { pt3dadd( 37.3966, -1.55375, -27.1944, 1.2 ) }
    dend_43 { pt3dadd( 39.8723, -0.216176, -30.0652, 1.08 ) }
    dend_43 { pt3dadd( 42.5651, 1.25714, -33.7215, 0.96 ) }
    dend_43 { pt3dadd( 45.1847, 2.77948, -37.5838, 0.96 ) }
    dend_43 { pt3dadd( 45.8965, 3.2012, -38.8121, 0.96 ) }
    dend_43 { pt3dadd( 46.8558, 3.82843, -40.6594, 0.96 ) }
    dend_43 { pt3dadd( 47.9286, 4.7235, -43.0847, 0.96 ) }
    dend_43 { pt3dadd( 50.1918, 7.37242, -49.1717, 0.96 ) }
    dend_43 { pt3dadd( 50.8118, 8.36082, -51.1265, 0.96 ) }
    dend_43 { pt3dadd( 51.6038, 9.79971, -53.6421, 0.96 ) }
    dend_43 { pt3dadd( 52.1047, 10.5691, -54.9434, 0.84 ) }
    dend_43 { pt3dadd( 53.5091, 12.2232, -57.7172, 0.72 ) }
    dend_43 { pt3dadd( 54.1702, 12.7889, -58.682, 0.72 ) }
    dend_43 { pt3dadd( 56.8105, 14.3884, -61.6811, 0.84 ) }
    dend_43 { pt3dadd( 58.4063, 15.2782, -63.3623, 1.08 ) }
    dend_43 { pt3dadd( 61.1156, 16.7415, -65.9684, 1.08 ) }
    dend_43 { pt3dadd( 64.3187, 18.3921, -68.784, 1.08 ) }
    dend_43 { pt3dadd( 65.6034, 18.997, -69.8542, 0.96 ) }
    dend_43 { pt3dadd( 67.906, 20.0646, -71.9742, 0.84 ) }
    dend_43 { pt3dadd( 69.1265, 20.6782, -73.2891, 0.84 ) }
    dend_43 { pt3dadd( 70.3769, 21.3394, -74.8101, 0.84 ) }
    dend_43 { pt3dadd( 71.065, 21.6963, -75.7216, 0.84 ) }
    dend_43 { pt3dadd( 73.8692, 23.0165, -79.3953, 0.84 ) }
    dend_43 { pt3dadd( 76.7884, 24.3297, -83.4093, 0.84 ) }
    dend_43 { pt3dadd( 79.5122, 25.5333, -87.2779, 2.16 ) }
    dend_43 { pt3dadd( 80.2698, 25.8828, -88.3656, 2.16 ) }
    dend_43 { pt3dadd( 83.001, 27.2861, -92.1879, 0.72 ) }
    dend_43 { pt3dadd( 84.0185, 27.8983, -93.4979, 0.72 ) }
    dend_43 { pt3dadd( 86.2945, 29.5291, -96.0858, 0.72 ) }
    dend_43 { pt3dadd( 88.2716, 31.0161, -98.0412, 0.72 ) }
    dend_43 { pt3dadd( 89.1184, 31.6625, -98.8248, 0.72 ) }
    dend_43 { pt3dadd( 92.1896, 33.986, -101.808, 2.16 ) }
    dend_43 { pt3dadd( 93.858, 35.2513, -103.425, 1.44 ) }
    dend_43 { pt3dadd( 96.0629, 36.9806, -105.378, 0.48 ) }
    dend_43 { pt3dadd( 97.2924, 38.0337, -106.625, 0.48 ) }
    dend_43 { pt3dadd( 99.3578, 39.9947, -108.98, 1.32 ) }
    dend_43 { pt3dadd( 101.226, 42.0083, -112.365, 1.32 ) }
    dend_43 { pt3dadd( 101.349, 42.1554, -112.642, 1.32 ) }
    dend_43 { pt3dadd( 103.253, 44.5166, -117.317, 0.72 ) }
    dend_43 { pt3dadd( 107.276, 49.5489, -127.041, 0.6 ) }
    dend_43 { pt3dadd( 108.198, 50.7096, -129.17, 0.6 ) }
    dend_43 { pt3dadd( 114.015, 57.661, -141.109, 0.12 ) }
    dend_43 { pt3dadd( 115.027, 58.796, -142.965, 0.96 ) }
    dend_43 { pt3dadd( 115.906, 59.7199, -144.425, 0.48 ) }
    dend_43 { pt3dadd( 117.833, 61.6188, -147.304, 0.36 ) }
    dend_43 { pt3dadd( 120.418, 64.0341, -150.068, 0.24 ) }
    dend_43 { pt3dadd( 122.408, 65.8955, -151.92, 0.24 ) }
    dend_43 { pt3dadd( 125.623, 68.9262, -154.051, 1.2 ) }
    dend_43 { pt3dadd( 126.84, 70.1061, -154.978, 0.72 ) }
    dend_43 { pt3dadd( 129.471, 72.8054, -157.169, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 130.484, 73.9243, -158.055, 0.24 ) }
    dend_43 { pt3dadd( 132.295, 76.1247, -159.616, 1.08 ) }
    dend_43 { pt3dadd( 132.902, 76.9359, -160.146, 0.6 ) }
    dend_43 { pt3dadd( 135.469, 80.5607, -162.141, 0.48 ) }
    dend_43 { pt3dadd( 136.385, 81.8751, -162.841, 0.48 ) }
    dend_43 { pt3dadd( 137.393, 83.2599, -163.512, 1.2 ) }
    dend_43 { pt3dadd( 138.401, 84.5513, -164.161, 0.6 ) }
    dend_43 { pt3dadd( 141.143, 87.6499, -165.739, 0.24 ) }
    dend_43 { pt3dadd( 142.366, 88.8811, -166.509, 0.24 ) }
    dend_43 { pt3dadd( 143.981, 90.3288, -167.524, 1.32 ) }
    dend_43 { pt3dadd( 145.345, 91.4424, -168.349, 0.72 ) }
    dend_43 { pt3dadd( 148.266, 93.7354, -170.161, 0.48 ) }
    dend_43 { pt3dadd( 150.898, 95.7901, -171.922, 0.48 ) }
    dend_43 { pt3dadd( 153.642, 97.9381, -173.793, 1.08 ) }
    dend_43 { pt3dadd( 154.752, 98.8372, -174.568, 0.36 ) }
    dend_43 { pt3dadd( 157.318, 101.032, -176.317, 0.12 ) }
    dend_43 { pt3dadd( 160.572, 104.039, -178.515, 0.12 ) }
    dend_43 { pt3dadd( 163.038, 106.442, -180.159, 0.12 ) }
    dend_43 { pt3dadd( 163.736, 107.153, -180.609, 0.48 ) }
    dend_43 { pt3dadd( 164.339, 107.781, -181.001, 0.12 ) }
    dend_43 { pt3dadd( 165.437, 108.947, -181.873, 0.12 ) }
    dend_43 { pt3dadd( 165.965, 109.531, -182.342, 0.48 ) }
    dend_43 { pt3dadd( 167.505, 111.412, -183.714, 0.48 ) }
    dend_43 { pt3dadd( 168.376, 112.674, -184.512, 0.24 ) }
    dend_43 { pt3dadd( 169.649, 114.76, -185.675, 0.6 ) }
    dend_43 { pt3dadd( 170.638, 116.552, -186.533, 1.08 ) }
    dend_43 { pt3dadd( 171.568, 118.358, -187.27, 0.48 ) }
    dend_43 { pt3dadd( 173.292, 121.655, -188.527, 0.36 ) }
    dend_43 { pt3dadd( 174.405, 123.659, -189.376, 0.36 ) }
    dend_43 { pt3dadd( 175.937, 126.181, -190.663, 0.36 ) }
    dend_43 { pt3dadd( 176.863, 127.553, -191.436, 0.96 ) }
    dend_43 { pt3dadd( 177.502, 128.416, -191.977, 0.24 ) }
    dend_43 { pt3dadd( 179.942, 131.363, -193.936, 0.12 ) }
    dend_43 { pt3dadd( 182.937, 134.565, -196.048, 0.24 ) }
    dend_43 { pt3dadd( 184.713, 136.331, -197.363, 0.24 ) }
    dend_43 { pt3dadd( 185.837, 137.434, -198.217, 0.24 ) }
    dend_43 { pt3dadd( 187.078, 138.655, -199.073, 0.24 ) }
    dend_43 { pt3dadd( 189.034, 140.618, -200.183, 0.24 ) }
    dend_43 { pt3dadd( 190.027, 141.629, -200.591, 0.24 ) }
    dend_43 { pt3dadd( 193.446, 145.031, -201.858, 1.44 ) }
    dend_43 { pt3dadd( 194.271, 145.845, -202.217, 1.08 ) }
    dend_43 { pt3dadd( 195.816, 147.327, -202.982, 0.12 ) }
    dend_43 { pt3dadd( 196.727, 148.194, -203.604, 0.12 ) }
    dend_43 { pt3dadd( 198.506, 149.851, -205.066, 0.12 ) }
    dend_43 { pt3dadd( 200.6, 151.657, -206.777, 0.6 ) }
    dend_43 { pt3dadd( 201.628, 152.449, -207.526, 0.6 ) }
    dend_43 { pt3dadd( 202.657, 153.183, -208.422, 0.24 ) }
    dend_43 { pt3dadd( 205.822, 155.377, -211.397, 0.72 ) }
    dend_43 { pt3dadd( 206.567, 155.897, -212.164, 0.12 ) }
    dend_43 { pt3dadd( 207.986, 156.906, -213.611, 0.24 ) }
    dend_43 { pt3dadd( 209.28, 157.869, -214.885, 0.24 ) }
    dend_43 { pt3dadd( 214.013, 161.602, -219.566, 0.24 ) }
    dend_43 { pt3dadd( 215.139, 162.587, -220.671, 0.12 ) }
    dend_43 { pt3dadd( 218.301, 165.583, -223.578, 0.24 ) }
    dend_43 { pt3dadd( 219.66, 167.02, -224.848, 0.24 ) }
    dend_43 { pt3dadd( 221.536, 169.259, -226.56, 0.24 ) }
    dend_43 { pt3dadd( 222.484, 170.572, -227.501, 0.72 ) }
    dend_43 { pt3dadd( 223.787, 172.625, -228.718, 0.36 ) }
    dend_43 { pt3dadd( 224.436, 173.691, -229.35, 0.36 ) }
    dend_43 { pt3dadd( 225.315, 175.194, -230.188, 1.08 ) }
    dend_43 { pt3dadd( 226.32, 176.926, -231.244, 0.36 ) }
    dend_43 { pt3dadd( 228.811, 181.322, -233.993, 0.36 ) }
    dend_43 { pt3dadd( 229.358, 182.318, -234.694, 0.36 ) }
    dend_43 { pt3dadd( 230.208, 183.955, -236.092, 1.2 ) }
    dend_43 { pt3dadd( 230.454, 184.44, -236.535, 0.72 ) }
    dend_43 { pt3dadd( 230.971, 185.42, -237.497, 0.36 ) }
    dend_43 { pt3dadd( 231.387, 186.224, -238.313, 0.36 ) }
    dend_43 { pt3dadd( 232.85, 189.165, -240.723, 0.36 ) }
    dend_43 { pt3dadd( 233.847, 191.908, -243.44, 0.84 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 69/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 31.8878, -5.84394, -20.8926, 0.84 ) }
    dend_38 { pt3dadd( 33.7787, -7.65041, -20.7684, 0.84 ) }
    dend_38 { pt3dadd( 35.1423, -9.05578, -20.7936, 0.84 ) }
    dend_38 { pt3dadd( 37.3208, -11.3531, -21.044, 0.6 ) }
    dend_38 { pt3dadd( 38.8423, -12.9869, -21.3045, 0.6 ) }
    dend_38 { pt3dadd( 40.948, -15.3216, -21.8141, 0.6 ) }
    dend_38 { pt3dadd( 42.3179, -16.8714, -22.2038, 0.48 ) }
    dend_38 { pt3dadd( 43.7813, -18.5386, -22.7557, 0.48 ) }
    dend_38 { pt3dadd( 45.1817, -20.1914, -23.3445, 0.48 ) }
    dend_38 { pt3dadd( 46.686, -22.0563, -24.0043, 0.84 ) }
    dend_38 { pt3dadd( 47.9173, -23.5417, -24.5153, 0.72 ) }
    dend_38 { pt3dadd( 49.3057, -25.1684, -24.998, 0.72 ) }
    dend_38 { pt3dadd( 51.4345, -27.5496, -25.5162, 0.72 ) }
    dend_38 { pt3dadd( 52.1596, -28.3815, -25.6097, 0.6 ) }
    dend_38 { pt3dadd( 53.1913, -29.5973, -25.6705, 0.6 ) }
    dend_38 { pt3dadd( 55.3951, -32.2634, -25.7652, 0.84 ) }
    dend_38 { pt3dadd( 56.7329, -33.9388, -25.8075, 0.48 ) }
    dend_38 { pt3dadd( 58.4094, -36.0737, -26.0064, 0.48 ) }
    dend_38 { pt3dadd( 60.7643, -39.1302, -26.4697, 0.48 ) }
    dend_38 { pt3dadd( 61.9231, -40.6001, -26.7398, 0.48 ) }
    dend_38 { pt3dadd( 63.7006, -42.802, -27.2046, 0.84 ) }
    dend_38 { pt3dadd( 65.4031, -44.8715, -27.6641, 0.84 ) }
    dend_38 { pt3dadd( 68.2587, -48.2653, -28.4729, 0.84 ) }
    dend_38 { pt3dadd( 70.5653, -50.9639, -29.1136, 0.72 ) }
    dend_38 { pt3dadd( 72.6621, -53.3594, -29.6725, 0.6 ) }
    dend_38 { pt3dadd( 75.1907, -56.2232, -30.2701, 0.6 ) }
    dend_38 { pt3dadd( 76.7787, -57.9916, -30.5746, 0.6 ) }
    dend_38 { pt3dadd( 78.059, -59.4181, -30.7858, 0.48 ) }
    dend_38 { pt3dadd( 79.7948, -61.3872, -30.9981, 0.48 ) }
    dend_38 { pt3dadd( 80.9019, -62.6148, -31.1502, 0.48 ) }
    dend_38 { pt3dadd( 82.3788, -64.2494, -31.3898, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( 84.1591, -66.2031, -31.692, 0.48 ) }
    dend_38 { pt3dadd( 85.573, -67.6695, -31.9214, 0.36 ) }
    dend_38 { pt3dadd( 86.9141, -68.9492, -32.1156, 0.36 ) }
    dend_38 { pt3dadd( 88.3623, -70.2248, -32.2019, 0.36 ) }
    dend_38 { pt3dadd( 89.7249, -71.3243, -32.1872, 0.36 ) }
    dend_38 { pt3dadd( 90.1066, -71.6104, -32.1487, 0.36 ) }
    dend_38 { pt3dadd( 91.7445, -72.7999, -31.8656, 0.36 ) }
    dend_38 { pt3dadd( 94.1026, -74.4701, -31.3421, 0.24 ) }
    dend_38 { pt3dadd( 96.9145, -76.5402, -30.677, 0.24 ) }
    dend_38 { pt3dadd( 98.2491, -77.5852, -30.3576, 0.24 ) }
    dend_38 { pt3dadd( 99.4355, -78.5719, -30.0882, 0.72 ) }
    dend_38 { pt3dadd( 100.997, -79.9956, -29.7742, 0.36 ) }
    dend_38 { pt3dadd( 102.307, -81.3903, -29.5718, 0.36 ) }
    dend_38 { pt3dadd( 103.679, -83.126, -29.4776, 0.72 ) }
    dend_38 { pt3dadd( 104.437, -84.267, -29.5403, 0.48 ) }
    dend_38 { pt3dadd( 105.242, -85.6116, -29.6623, 0.84 ) }
    dend_38 { pt3dadd( 105.848, -86.6723, -29.7987, 0.48 ) }
    dend_38 { pt3dadd( 106.737, -88.2817, -30.0092, 0.84 ) }
    dend_38 { pt3dadd( 107.225, -89.1367, -30.1205, 0.48 ) }
    dend_38 { pt3dadd( 108.142, -90.6251, -30.2662, 0.96 ) }
    dend_38 { pt3dadd( 109.026, -91.9454, -30.3596, 0.36 ) }
    dend_38 { pt3dadd( 110.138, -93.5408, -30.4696, 0.36 ) }
    dend_38 { pt3dadd( 110.898, -94.5719, -30.5218, 0.36 ) }
    dend_38 { pt3dadd( 112.599, -96.7959, -30.5964, 0.84 ) }
    dend_38 { pt3dadd( 113.497, -97.9013, -30.6421, 0.48 ) }
    dend_38 { pt3dadd( 115.137, -99.882, -30.7112, 0.48 ) }
    dend_38 { pt3dadd( 117.251, -102.425, -30.7896, 0.48 ) }
    dend_38 { pt3dadd( 118.391, -103.778, -30.8309, 0.48 ) }
    dend_38 { pt3dadd( 118.505, -103.912, -30.8362, 0.48 ) }
    dend_38 { pt3dadd( 122.024, -108.17, -31.1149, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_20 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -11.2069, 16.3152, 4.37162, 0.6 ) }
    dend_32 { pt3dadd( -13.0459, 17.7673, 6.62121, 0.6 ) }
    dend_32 { pt3dadd( -14.5003, 18.8219, 8.19097, 0.6 ) }
    dend_32 { pt3dadd( -16.3039, 20.2149, 10.04, 0.6 ) }
    dend_32 { pt3dadd( -17.4053, 21.0822, 11.0241, 0.48 ) }
    dend_32 { pt3dadd( -18.2711, 21.7565, 11.7004, 0.48 ) }
    dend_32 { pt3dadd( -19.6374, 22.8205, 12.7677, 0.48 ) }
    dend_32 { pt3dadd( -22.1111, 24.6482, 14.3408, 0.24 ) }
    dend_32 { pt3dadd( -23.2871, 25.5135, 14.9274, 0.24 ) }
    dend_32 { pt3dadd( -24.8329, 26.7085, 15.5193, 0.12 ) }
    dend_32 { pt3dadd( -25.827, 27.4402, 15.883, 0.12 ) }
    dend_32 { pt3dadd( -33.3445, 32.4678, 20.0727, 0.12 ) }
    dend_32 { pt3dadd( -41.6803, 37.6246, 21.861, 0.12 ) }
    dend_32 { pt3dadd( -50.3836, 41.8507, 24.4358, 0.12 ) }
    dend_32 { pt3dadd( -58.4545, 46.0742, 28.5851, 0.12 ) }
    dend_32 { pt3dadd( -65.7991, 51.4893, 32.5383, 0.12 ) }
    dend_32 { pt3dadd( -73.6303, 55.9605, 36.8538, 0.12 ) }
    dend_32 { pt3dadd( -81.2566, 60.7935, 41.1014, 0.12 ) }
    dend_32 { pt3dadd( -87.8086, 66.4275, 45.9929, 0.12 ) }
    dend_32 { pt3dadd( -95.7923, 69.9029, 50.996, 0.12 ) }
    dend_32 { pt3dadd( -103.224, 74.0467, 56.273, 0.12 ) }
    dend_32 { pt3dadd( -112.29, 75.9802, 60.2684, 0.12 ) }
    dend_32 { pt3dadd( -121.174, 79.5169, 63.3356, 0.12 ) }
    dend_32 { pt3dadd( -129.175, 84.2212, 67.0198, 0.12 ) }
    dend_32 { pt3dadd( -137.228, 88.9812, 70.5042, 0.12 ) }
    dend_32 { pt3dadd( -144.018, 94.1823, 75.5999, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.2069, 16.3152, 4.37162, 0.72 ) }
    dend_21 { pt3dadd( -13.0623, 13.8169, 6.2031, 0.72 ) }
    dend_21 { pt3dadd( -13.7699, 12.8852, 6.75476, 0.72 ) }
    dend_21 { pt3dadd( -14.5626, 11.8643, 7.34383, 0.6 ) }
    dend_21 { pt3dadd( -14.9898, 11.3141, 7.66128, 0.6 ) }
    dend_21 { pt3dadd( -16.777, 9.01256, 8.98929, 0.6 ) }
    dend_21 { pt3dadd( -17.6308, 7.91304, 9.62371, 0.6 ) }
    dend_21 { pt3dadd( -19.4672, 5.69866, 10.835, 0.6 ) }
    dend_21 { pt3dadd( -20.1885, 4.94815, 11.2937, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.45717, 23.3267, -0.400893, 0.72 ) }
    dend_15 { pt3dadd( -4.72253, 24.9201, 0.170187, 0.72 ) }
    dend_15 { pt3dadd( -3.68688, 27.2607, 0.946819, 0.6 ) }
    dend_15 { pt3dadd( -2.61542, 29.8604, 1.74202, 0.6 ) }
    dend_15 { pt3dadd( -1.9741, 31.4652, 2.18861, 0.6 ) }
    dend_15 { pt3dadd( -1.04925, 33.8634, 2.82455, 0.6 ) }
    dend_15 { pt3dadd( -0.384622, 35.701, 3.27786, 0.6 ) }
    dend_15 { pt3dadd( 0.250472, 37.7016, 3.70839, 0.6 ) }
    dend_15 { pt3dadd( 0.608091, 38.9672, 3.94457, 0.6 ) }
    dend_15 { pt3dadd( 1.20533, 41.1382, 4.43191, 0.6 ) }
    dend_15 { pt3dadd( 1.79936, 43.361, 5.07485, 0.6 ) }
    dend_15 { pt3dadd( 2.34507, 45.4374, 5.73755, 0.48 ) }
    dend_15 { pt3dadd( 2.73891, 46.9811, 6.29478, 0.48 ) }
    dend_15 { pt3dadd( 3.3932, 49.596, 7.31453, 0.48 ) }
    dend_15 { pt3dadd( 4.17185, 52.6611, 8.54946, 0.48 ) }
    dend_15 { pt3dadd( 5.25296, 56.883, 10.2838, 0.48 ) }
    dend_15 { pt3dadd( 5.74401, 58.7651, 11.0749, 0.48 ) }
    dend_15 { pt3dadd( 6.11061, 60.092, 11.6432, 0.48 ) }
    dend_15 { pt3dadd( 6.51822, 61.576, 12.2756, 0.48 ) }
    dend_15 { pt3dadd( 7.00461, 63.3192, 12.9623, 0.48 ) }
    dend_15 { pt3dadd( 7.29278, 64.4316, 13.2983, 0.48 ) }
    dend_15 { pt3dadd( 7.78962, 65.9646, 13.6417, 0.48 ) }
    dend_15 { pt3dadd( 8.12199, 66.8848, 13.8755, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 88/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.45717, 23.3267, -0.400893, 2.17 ) }
    dend_2 { pt3dadd( -5.5615, 27.1054, -1.57801, 2.17 ) }
    dend_2 { pt3dadd( -5.59838, 28.4412, -1.99415, 1.81 ) }
    dend_2 { pt3dadd( -5.62693, 29.4753, -2.31628, 1.81 ) }
    dend_2 { pt3dadd( -5.67343, 31.1594, -2.84088, 2.65 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 93/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 32.5089, -36.7783, -8.4223, 0.72 ) }
    dend_53 { pt3dadd( 32.7374, -39.6689, -10.7833, 0.72 ) }
    dend_53 { pt3dadd( 33.0715, -41.4334, -12.4086, 0.72 ) }
    dend_53 { pt3dadd( 33.4522, -43.0179, -13.9701, 0.72 ) }
    dend_53 { pt3dadd( 33.8109, -44.5062, -15.3834, 0.72 ) }
    dend_53 { pt3dadd( 34.1685, -46.1741, -16.9322, 0.72 ) }
    dend_53 { pt3dadd( 34.6015, -48.5867, -19.0219, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 34.8888, -50.1649, -20.2312, 1.08 ) }
    dend_53 { pt3dadd( 35.1643, -51.6655, -21.3302, 1.08 ) }
    dend_53 { pt3dadd( 35.3136, -53.2427, -22.3487, 0.48 ) }
    dend_53 { pt3dadd( 35.316, -54.2184, -22.8622, 0.48 ) }
    dend_53 { pt3dadd( 35.2063, -56.1166, -23.6377, 0.48 ) }
    dend_53 { pt3dadd( 35.148, -57.0856, -24.0948, 0.48 ) }
    dend_53 { pt3dadd( 35.0288, -58.4687, -24.932, 0.96 ) }
    dend_53 { pt3dadd( 34.8764, -60.2244, -26.1491, 0.6 ) }
    dend_53 { pt3dadd( 34.8187, -61.8078, -27.5251, 0.48 ) }
    dend_53 { pt3dadd( 34.8064, -62.9097, -28.5908, 0.48 ) }
    dend_53 { pt3dadd( 34.7704, -67.5377, -33.5857, 0.48 ) }
    dend_53 { pt3dadd( 34.7656, -68.8773, -35.2103, 0.36 ) }
    dend_53 { pt3dadd( 34.7366, -69.7163, -36.3339, 0.36 ) }
    dend_53 { pt3dadd( 34.5416, -71.9147, -39.416, 0.36 ) }
    dend_53 { pt3dadd( 34.3737, -72.9734, -40.8971, 0.36 ) }
    dend_53 { pt3dadd( 33.8583, -75.0699, -43.7877, 0.36 ) }
    dend_53 { pt3dadd( 33.4527, -76.8021, -46.1801, 0.36 ) }
    dend_53 { pt3dadd( 33.2455, -78.4422, -48.3853, 0.36 ) }
    dend_53 { pt3dadd( 33.2254, -79.3895, -49.6923, 0.36 ) }
    dend_53 { pt3dadd( 33.2905, -80.1209, -50.6598, 0.36 ) }
    dend_53 { pt3dadd( 33.4362, -80.8888, -51.6614, 0.36 ) }
    dend_53 { pt3dadd( 35.1569, -87.4861, -59.5249, 0.36 ) }
    dend_53 { pt3dadd( 35.7072, -89.4018, -61.6797, 0.36 ) }
    dend_53 { pt3dadd( 36.3902, -91.7098, -64.2676, 0.36 ) }
    dend_53 { pt3dadd( 37.0258, -94.116, -67.1404, 0.36 ) }
    dend_53 { pt3dadd( 37.1013, -95.0513, -68.1132, 0.36 ) }
    dend_53 { pt3dadd( 36.8159, -97.4194, -70.1076, 0.36 ) }
    dend_53 { pt3dadd( 35.7922, -100.362, -72.2799, 0.36 ) }
    dend_53 { pt3dadd( 35.0197, -102.215, -73.7047, 0.36 ) }
    dend_53 { pt3dadd( 33.7531, -105.243, -75.9401, 0.36 ) }
    dend_53 { pt3dadd( 30.8705, -112.946, -81.3694, 0.36 ) }
    dend_53 { pt3dadd( 30.2629, -115.038, -82.7875, 0.36 ) }
    dend_53 { pt3dadd( 28.8742, -122.002, -87.5238, 0.36 ) }
    dend_53 { pt3dadd( 28.5639, -124.946, -89.4738, 0.36 ) }
    dend_53 { pt3dadd( 28.5301, -127.4, -91.0924, 0.36 ) }
    dend_53 { pt3dadd( 28.71, -129.957, -92.763, 0.36 ) }
    dend_53 { pt3dadd( 29.0192, -132.064, -94.2738, 0.36 ) }
    dend_53 { pt3dadd( 29.6474, -136.863, -97.4999, 0.36 ) }
    dend_53 { pt3dadd( 29.9686, -140.601, -99.5165, 0.36 ) }
    dend_53 { pt3dadd( 30.0413, -143.736, -101.116, 0.36 ) }
    dend_53 { pt3dadd( 29.8989, -146.289, -102.458, 0.36 ) }
    dend_53 { pt3dadd( 29.5841, -148.15, -103.544, 0.36 ) }
    dend_53 { pt3dadd( 29.2319, -149.416, -104.297, 0.36 ) }
    dend_53 { pt3dadd( 28.1368, -152.41, -106.122, 0.36 ) }
    dend_53 { pt3dadd( 27.3894, -154.11, -107.251, 0.36 ) }
    dend_53 { pt3dadd( 25.5137, -157.753, -110.027, 0.36 ) }
    dend_53 { pt3dadd( 23.2882, -161.666, -113.354, 0.36 ) }
    dend_53 { pt3dadd( 21.9434, -163.968, -115.416, 0.36 ) }
    dend_53 { pt3dadd( 20.9222, -165.759, -117.218, 0.36 ) }
    dend_53 { pt3dadd( 20.3293, -166.83, -118.43, 0.36 ) }
    dend_53 { pt3dadd( 19.5588, -168.532, -120.46, 0.36 ) }
    dend_53 { pt3dadd( 19.2855, -169.544, -121.619, 0.36 ) }
    dend_53 { pt3dadd( 19.0532, -171.034, -123.289, 0.36 ) }
    dend_53 { pt3dadd( 18.6965, -174.659, -127.629, 0.36 ) }
    dend_53 { pt3dadd( 18.639, -175.822, -129.064, 0.36 ) }
    dend_53 { pt3dadd( 18.6572, -178.574, -132.525, 0.36 ) }
    dend_53 { pt3dadd( 18.8354, -180.815, -135.265, 0.36 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 32.5089, -36.7783, -8.4223, 0.6 ) }
    dend_52 { pt3dadd( 35.6171, -38.9271, -8.96254, 0.6 ) }
    dend_52 { pt3dadd( 38.9361, -41.6126, -9.675, 0.6 ) }
    dend_52 { pt3dadd( 41.3176, -43.7059, -10.2568, 0.48 ) }
    dend_52 { pt3dadd( 44.7117, -46.7054, -11.1159, 0.84 ) }
    dend_52 { pt3dadd( 46.9609, -48.6674, -11.6817, 0.84 ) }
    dend_52 { pt3dadd( 48.9951, -50.4479, -12.1764, 0.72 ) }
    dend_52 { pt3dadd( 52.2229, -53.4206, -12.8718, 0.72 ) }
    dend_52 { pt3dadd( 54.2052, -55.2631, -13.1862, 0.72 ) }
    dend_52 { pt3dadd( 55.8101, -56.727, -13.3943, 1.2 ) }
    dend_52 { pt3dadd( 57.8811, -58.469, -13.6144, 0.84 ) }
    dend_52 { pt3dadd( 60.056, -60.213, -13.9306, 0.84 ) }
    dend_52 { pt3dadd( 62.1703, -61.8762, -14.2719, 0.6 ) }
    dend_52 { pt3dadd( 64.9058, -63.9218, -14.7091, 0.6 ) }
    dend_52 { pt3dadd( 66.2135, -64.8912, -14.9471, 0.6 ) }
    dend_52 { pt3dadd( 69.0303, -67.0442, -15.5234, 0.96 ) }
    dend_52 { pt3dadd( 72.4852, -69.6983, -16.281, 0.72 ) }
    dend_52 { pt3dadd( 74.5741, -71.3109, -16.7706, 0.48 ) }
    dend_52 { pt3dadd( 76.4116, -72.7548, -17.2234, 1.33 ) }
    dend_52 { pt3dadd( 78.9141, -74.7414, -17.7083, 0.72 ) }
    dend_52 { pt3dadd( 81.727, -76.9733, -18.0442, 0.6 ) }
    dend_52 { pt3dadd( 83.6154, -78.5158, -18.2429, 0.48 ) }
    dend_52 { pt3dadd( 84.7692, -79.4479, -18.3485, 0.48 ) }
    dend_52 { pt3dadd( 85.8345, -80.271, -18.4641, 0.36 ) }
    dend_52 { pt3dadd( 87.9991, -81.9299, -18.7186, 0.24 ) }
    dend_52 { pt3dadd( 90.3895, -83.6736, -18.955, 0.96 ) }
    dend_52 { pt3dadd( 96.1779, -87.6358, -19.4229, 0.24 ) }
    dend_52 { pt3dadd( 98.9405, -89.4336, -19.4855, 1.57 ) }
    dend_52 { pt3dadd( 104.046, -92.7017, -19.3367, 0.36 ) }
    dend_52 { pt3dadd( 105.579, -93.6923, -19.2239, 0.36 ) }
    dend_52 { pt3dadd( 108.79, -95.7446, -18.8424, 0.36 ) }
    dend_52 { pt3dadd( 111.524, -97.4821, -18.2979, 1.08 ) }
    dend_52 { pt3dadd( 114.974, -99.69, -17.1714, 0.6 ) }
    dend_52 { pt3dadd( 116.306, -100.628, -16.6707, 0.48 ) }
    dend_52 { pt3dadd( 117.925, -102.041, -16.1994, 0.96 ) }
    dend_52 { pt3dadd( 119.818, -104.014, -15.9075, 0.36 ) }
    dend_52 { pt3dadd( 121.157, -105.674, -15.8954, 0.84 ) }
    dend_52 { pt3dadd( 122.218, -107.079, -15.9871, 0.36 ) }
    dend_52 { pt3dadd( 123.175, -108.423, -16.2001, 0.96 ) }
    dend_52 { pt3dadd( 127.61, -114.759, -17.4606, 0.24 ) }
    dend_52 { pt3dadd( 129.729, -117.997, -18.212, 0.24 ) }
    dend_52 { pt3dadd( 130.611, -119.507, -18.6218, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 99/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 105.251, -112.902, 103.372, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 109.643, -118.188, 108.867, 0.24 ) }
    dend_50 { pt3dadd( 113.67, -123.461, 114.647, 0.24 ) }
    dend_50 { pt3dadd( 117.082, -128.615, 120.919, 0.24 ) }
    dend_50 { pt3dadd( 120.006, -133.522, 127.642, 0.24 ) }
    dend_50 { pt3dadd( 122.83, -137.772, 134.882, 0.24 ) }
    dend_50 { pt3dadd( 126.042, -143.357, 140.843, 0.24 ) }
    dend_50 { pt3dadd( 130.179, -148.348, 146.82, 0.24 ) }
    dend_50 { pt3dadd( 133.872, -153.951, 152.477, 0.24 ) }
    dend_50 { pt3dadd( 138.956, -159.171, 157.417, 0.24 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 9/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 105.251, -112.902, 103.372, 0.24 ) }
    dend_47 { pt3dadd( 111.838, -118.558, 109.857, 0.24 ) }
    dend_47 { pt3dadd( 118.957, -123.41, 116.502, 0.24 ) }
    dend_47 { pt3dadd( 125.8, -127.386, 124.016, 0.24 ) }
    dend_47 { pt3dadd( 133.339, -130.437, 131.347, 0.24 ) }
    dend_47 { pt3dadd( 139.587, -134.701, 139.19, 0.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 15/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 122.024, -108.17, -31.1149, 0.24 ) }
    dend_40 { pt3dadd( 125.83, -108.706, -35.671, 0.24 ) }
    dend_40 { pt3dadd( 127.051, -108.944, -37.0435, 0.24 ) }
    dend_40 { pt3dadd( 130.805, -109.783, -41.1344, 0.24 ) }
    dend_40 { pt3dadd( 132.617, -110.258, -43.0775, 0.24 ) }
    dend_40 { pt3dadd( 134.539, -110.844, -45.027, 0.24 ) }
    dend_40 { pt3dadd( 136.381, -111.451, -46.8371, 0.24 ) }
    dend_40 { pt3dadd( 137.648, -111.963, -47.9345, 0.24 ) }
    dend_40 { pt3dadd( 138.545, -112.368, -48.6875, 0.24 ) }
    dend_40 { pt3dadd( 139.772, -113.016, -49.5955, 0.24 ) }
    dend_40 { pt3dadd( 141.814, -114.16, -51.083, 0.24 ) }
    dend_40 { pt3dadd( 144.069, -115.531, -52.7101, 0.24 ) }
    dend_40 { pt3dadd( 145.524, -116.442, -53.7968, 0.24 ) }
    dend_40 { pt3dadd( 146.5, -117.031, -54.4871, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 122.024, -108.17, -31.1149, 0.24 ) }
    dend_39 { pt3dadd( 123.506, -111.241, -31.6601, 0.24 ) }
    dend_39 { pt3dadd( 125.404, -115.348, -32.2979, 0.24 ) }
    dend_39 { pt3dadd( 126.801, -118.233, -33.0914, 0.24 ) }
    dend_39 { pt3dadd( 129.078, -122.531, -35.5944, 0.24 ) }
    dend_39 { pt3dadd( 130.276, -124.745, -37.4899, 0.24 ) }
    dend_39 { pt3dadd( 130.958, -126.036, -38.7886, 0.24 ) }
    dend_39 { pt3dadd( 131.975, -127.903, -41.2816, 0.24 ) }
    dend_39 { pt3dadd( 133.823, -131.307, -47.0685, 0.24 ) }
    dend_39 { pt3dadd( 136.274, -135.705, -56.076, 0.24 ) }
    dend_39 { pt3dadd( 137.187, -137.317, -59.8197, 0.24 ) }
    dend_39 { pt3dadd( 137.527, -137.883, -61.171, 0.24 ) }
    dend_39 { pt3dadd( 138.471, -139.404, -64.6694, 0.24 ) }
    dend_39 { pt3dadd( 139.084, -140.337, -66.6459, 0.24 ) }
    dend_39 { pt3dadd( 140.889, -143.25, -71.2763, 0.24 ) }
    dend_39 { pt3dadd( 141.636, -144.392, -72.6106, 0.24 ) }
    dend_39 { pt3dadd( 143.544, -146.753, -75.281, 0.24 ) }
    dend_39 { pt3dadd( 144.743, -148.031, -76.649, 0.24 ) }
    dend_39 { pt3dadd( 145.716, -148.972, -77.5685, 0.24 ) }
    dend_39 { pt3dadd( 147.783, -150.787, -79.2454, 0.24 ) }
    dend_39 { pt3dadd( 149.602, -152.324, -80.5927, 0.24 ) }
    dend_39 { pt3dadd( 154.035, -155.975, -83.8125, 0.24 ) }
    dend_39 { pt3dadd( 157.08, -158.422, -85.9176, 0.24 ) }
    dend_39 { pt3dadd( 159.849, -160.566, -87.7742, 0.24 ) }
    dend_39 { pt3dadd( 161.933, -162.134, -89.1196, 0.24 ) }
    dend_39 { pt3dadd( 164.801, -164.188, -90.8781, 0.24 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -144.018, 94.1823, 75.5999, 0.12 ) }
    dend_34 { pt3dadd( -151.02, 98.3447, 82.1105, 0.12 ) }
    dend_34 { pt3dadd( -156.721, 103.318, 89.2051, 0.12 ) }
    dend_34 { pt3dadd( -161.878, 108.618, 96.4432, 0.12 ) }
    dend_34 { pt3dadd( -167.332, 112.157, 104.609, 0.12 ) }
    dend_34 { pt3dadd( -171.709, 116.6, 112.912, 0.12 ) }
    dend_34 { pt3dadd( -176.408, 119.033, 121.955, 0.12 ) }
    dend_34 { pt3dadd( -180.815, 121.91, 130.993, 0.12 ) }
    dend_34 { pt3dadd( -186.625, 125.42, 138.928, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -144.018, 94.1823, 75.5999, 0.12 ) }
    dend_33 { pt3dadd( -155.005, 100.923, 79.3114, 0.12 ) }
    dend_33 { pt3dadd( -165.312, 107.283, 85.0223, 0.12 ) }
    dend_33 { pt3dadd( -174.196, 112.742, 93.4023, 0.12 ) }
    dend_33 { pt3dadd( -181.857, 118.638, 102.577, 0.12 ) }
    dend_33 { pt3dadd( -188.786, 123.532, 112.896, 0.12 ) }
    dend_33 { pt3dadd( -195.611, 129.447, 122.67, 0.12 ) }
    dend_33 { pt3dadd( -200.913, 135.127, 133.451, 0.12 ) }
    dend_33 { pt3dadd( -205.562, 141.787, 143.891, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -20.1885, 4.94815, 11.2937, 0.24 ) }
    dend_31 { pt3dadd( -22.003, 2.92972, 11.4418, 0.24 ) }
    dend_31 { pt3dadd( -23.326, 1.54121, 11.5875, 0.24 ) }
    dend_31 { pt3dadd( -25.3327, -0.564815, 11.8086, 0.24 ) }
    dend_31 { pt3dadd( -26.5242, -1.81537, 11.9399, 0.24 ) }
    dend_31 { pt3dadd( -27.2488, -2.57582, 12.0198, 0.24 ) }
    dend_31 { pt3dadd( -28.2188, -3.59389, 12.1266, 0.24 ) }
    dend_31 { pt3dadd( -29.1163, -4.3609, 12.3879, 0.24 ) }
    dend_31 { pt3dadd( -34.8931, -12.4648, 14.147, 0.24 ) }
    dend_31 { pt3dadd( -40.7438, -19.9285, 17.7372, 0.24 ) }
    dend_31 { pt3dadd( -47.9384, -26.2463, 21.3353, 0.24 ) }
    dend_31 { pt3dadd( -54.6765, -31.6453, 26.8886, 0.24 ) }
    dend_31 { pt3dadd( -60.8275, -38.3079, 31.54, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 86/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -20.1885, 4.94815, 11.2937, 0.6 ) }
    dend_22 { pt3dadd( -21.9245, 4.46093, 11.6186, 0.6 ) }
    dend_22 { pt3dadd( -23.996, 4.06957, 12.1504, 0.6 ) }
    dend_22 { pt3dadd( -25.098, 3.93875, 12.4469, 0.6 ) }
    dend_22 { pt3dadd( -25.8839, 3.88358, 12.6508, 0.6 ) }
    dend_22 { pt3dadd( -27.5479, 3.81645, 13.0403, 0.48 ) }
    dend_22 { pt3dadd( -30.4266, 3.7003, 13.7141, 0.48 ) }
    dend_22 { pt3dadd( -32.0537, 3.68958, 14.1462, 0.48 ) }
    dend_22 { pt3dadd( -33.8313, 3.75918, 14.6347, 0.48 ) }
    dend_22 { pt3dadd( -35.1903, 3.87671, 15.0254, 0.48 ) }
    dend_22 { pt3dadd( -37.0717, 4.14794, 15.5601, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 8.12199, 66.8848, 13.8755, 0.36 ) }
    dend_19 { pt3dadd( 11.8019, 69.8041, 11.7659, 0.36 ) }
    dend_19 { pt3dadd( 13.2286, 70.9359, 10.948, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 17.1051, 74.0113, 8.72564, 0.36 ) }
    dend_19 { pt3dadd( 25.6398, 79.1719, 5.77766, 0.36 ) }
    dend_19 { pt3dadd( 34.3232, 84.4221, 3.52498, 0.36 ) }
    dend_19 { pt3dadd( 43.2194, 89.5286, 1.80903, 0.36 ) }
    dend_19 { pt3dadd( 52.1455, 94.8349, 1.95321, 0.36 ) }
    dend_19 { pt3dadd( 60.6486, 100.604, 0.598981, 0.36 ) }
    dend_19 { pt3dadd( 68.5435, 106.587, -2.42015, 0.36 ) }
    dend_19 { pt3dadd( 75.4681, 112.709, -7.07984, 0.36 ) }
    dend_19 { pt3dadd( 83.7728, 117.22, -11.4969, 0.36 ) }
    dend_19 { pt3dadd( 92.7224, 120.917, -15.4556, 0.36 ) }
    dend_19 { pt3dadd( 102.283, 124.625, -17.5054, 0.36 ) }
    dend_19 { pt3dadd( 112.12, 128.103, -18.3053, 0.36 ) }
    dend_19 { pt3dadd( 122.25, 130.403, -19.7841, 0.36 ) }
    dend_19 { pt3dadd( 132.75, 130.64, -19.3994, 0.36 ) }
    dend_19 { pt3dadd( 143.124, 129.581, -18.1921, 0.36 ) }
    dend_19 { pt3dadd( 153.485, 128.222, -19.1286, 0.36 ) }
    dend_19 { pt3dadd( 163.302, 125.31, -21.2024, 0.36 ) }
    dend_19 { pt3dadd( 173.755, 124.411, -21.5934, 0.36 ) }
    dend_19 { pt3dadd( 184.131, 123.002, -20.9324, 0.36 ) }
    dend_19 { pt3dadd( 194.483, 121.931, -22.2914, 0.36 ) }
    dend_19 { pt3dadd( 204.967, 122.448, -21.7846, 0.36 ) }
    dend_19 { pt3dadd( 215.3, 123.864, -20.5324, 0.36 ) }
    dend_19 { pt3dadd( 225.778, 123.901, -19.7394, 0.36 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.12199, 66.8848, 13.8755, 0.36 ) }
    dend_16 { pt3dadd( 8.69522, 69.851, 15.0464, 0.36 ) }
    dend_16 { pt3dadd( 9.19811, 72.4532, 16.0737, 0.36 ) }
    dend_16 { pt3dadd( 12.5998, 81.829, 18.7079, 0.36 ) }
    dend_16 { pt3dadd( 16.0411, 91.1974, 21.3208, 0.36 ) }
    dend_16 { pt3dadd( 20.7322, 99.5552, 25.3774, 0.36 ) }
    dend_16 { pt3dadd( 25.8484, 107.175, 30.406, 0.36 ) }
    dend_16 { pt3dadd( 29.1825, 114.989, 36.4732, 0.36 ) }
    dend_16 { pt3dadd( 33.7143, 122.812, 41.7072, 0.36 ) }
    dend_16 { pt3dadd( 37.135, 131.567, 46.0772, 0.36 ) }
    dend_16 { pt3dadd( 39.8382, 140.596, 50.326, 0.36 ) }
    dend_16 { pt3dadd( 42.4667, 148.647, 56.3924, 0.36 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.67343, 31.1594, -2.84088, 1.45 ) }
    dend_8 { pt3dadd( -5.50223, 35.0073, -2.90604, 1.45 ) }
    dend_8 { pt3dadd( -5.62678, 38.7673, -3.07087, 1.45 ) }
    dend_8 { pt3dadd( -5.8143, 41.4346, -3.16571, 1.45 ) }
    dend_8 { pt3dadd( -6.03923, 43.9975, -3.22844, 1.45 ) }
    dend_8 { pt3dadd( -6.41707, 47.9955, -3.28461, 1.08 ) }
    dend_8 { pt3dadd( -6.61286, 50.4867, -3.44602, 1.08 ) }
    dend_8 { pt3dadd( -7.07997, 55.5006, -4.0219, 0.96 ) }
    dend_8 { pt3dadd( -7.42359, 59.7792, -4.59542, 0.96 ) }
    dend_8 { pt3dadd( -7.62695, 63.2041, -5.06802, 0.96 ) }
    dend_8 { pt3dadd( -7.7308, 66.7556, -5.52677, 0.96 ) }
    dend_8 { pt3dadd( -7.7188, 72.7015, -6.18182, 0.96 ) }
    dend_8 { pt3dadd( -7.57251, 77.2828, -6.63516, 0.96 ) }
    dend_8 { pt3dadd( -7.33949, 81.3548, -7.10004, 0.96 ) }
    dend_8 { pt3dadd( -7.07574, 85.3904, -7.78953, 0.96 ) }
    dend_8 { pt3dadd( -6.80857, 90.0927, -8.83018, 0.96 ) }
    dend_8 { pt3dadd( -6.66269, 93.6332, -9.74415, 0.96 ) }
    dend_8 { pt3dadd( -6.57204, 97.079, -10.7751, 0.96 ) }
    dend_8 { pt3dadd( -6.47822, 101.797, -12.5027, 0.96 ) }
    dend_8 { pt3dadd( -6.3409, 107.685, -15.1062, 0.96 ) }
    dend_8 { pt3dadd( -6.27587, 112.719, -17.4309, 0.96 ) }
    dend_8 { pt3dadd( -6.31944, 116.444, -19.1826, 0.96 ) }
    dend_8 { pt3dadd( -6.42128, 119.786, -20.6731, 0.96 ) }
    dend_8 { pt3dadd( -6.52836, 123.273, -22.0331, 0.96 ) }
    dend_8 { pt3dadd( -6.67175, 127.416, -23.2693, 0.96 ) }
    dend_8 { pt3dadd( -6.78442, 132.353, -24.3636, 0.96 ) }
    dend_8 { pt3dadd( -6.78723, 135.814, -25.0804, 0.96 ) }
    dend_8 { pt3dadd( -6.79105, 140.575, -25.9496, 0.96 ) }
    dend_8 { pt3dadd( -6.80537, 145.35, -26.6974, 0.96 ) }
    dend_8 { pt3dadd( -6.81249, 147.898, -27.0838, 0.96 ) }
    dend_8 { pt3dadd( -6.85486, 154.661, -27.9873, 0.96 ) }
    dend_8 { pt3dadd( -6.76445, 158.985, -28.6596, 0.96 ) }
    dend_8 { pt3dadd( -6.66246, 162.376, -29.1154, 0.96 ) }
    dend_8 { pt3dadd( -6.53087, 165.796, -29.5864, 0.96 ) }
    dend_8 { pt3dadd( -6.38513, 169.097, -30.0655, 0.96 ) }
    dend_8 { pt3dadd( -6.15203, 173.389, -30.6795, 0.96 ) }
    dend_8 { pt3dadd( -5.83709, 179.52, -31.4703, 0.96 ) }
    dend_8 { pt3dadd( -5.65687, 182.214, -31.8373, 0.96 ) }
    dend_8 { pt3dadd( -5.26034, 186.933, -32.6388, 0.96 ) }
    dend_8 { pt3dadd( -5.09398, 188.886, -33.0228, 0.96 ) }
    dend_8 { pt3dadd( -4.55458, 195.13, -34.3527, 1.2 ) }
    dend_8 { pt3dadd( -4.26297, 198.65, -35.1312, 1.08 ) }
    dend_8 { pt3dadd( -4.06797, 201.427, -35.713, 1.33 ) }
    dend_8 { pt3dadd( -3.69709, 206.65, -36.7401, 1.08 ) }
    dend_8 { pt3dadd( -3.47846, 210.238, -37.3553, 1.08 ) }
    dend_8 { pt3dadd( -3.27355, 213.504, -37.9139, 0.96 ) }
    dend_8 { pt3dadd( -3.22084, 214.265, -38.0419, 0.96 ) }
    dend_8 { pt3dadd( -3.02289, 217.448, -38.4754, 0.96 ) }
    dend_8 { pt3dadd( -2.91356, 220.185, -38.7353, 0.96 ) }
    dend_8 { pt3dadd( -2.73968, 224.383, -39.0204, 0.72 ) }
    dend_8 { pt3dadd( -2.60912, 227.646, -39.1781, 0.72 ) }
    dend_8 { pt3dadd( -2.46117, 232.504, -39.4025, 0.72 ) }
    dend_8 { pt3dadd( -2.39454, 235.384, -39.5431, 0.96 ) }
    dend_8 { pt3dadd( -2.36889, 237.953, -39.6759, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.67343, 31.1594, -2.84088, 0.72 ) }
    dend_3 { pt3dadd( -11.1522, 33.1791, -4.76262, 0.72 ) }
    dend_3 { pt3dadd( -13.0711, 33.9261, -5.51946, 0.72 ) }
    dend_3 { pt3dadd( -15.1215, 34.7149, -6.25629, 0.72 ) }
    dend_3 { pt3dadd( -16.7681, 35.364, -6.78807, 0.72 ) }
    dend_3 { pt3dadd( -18.9661, 36.3648, -7.5282, 0.6 ) }
    dend_3 { pt3dadd( -22.5636, 38.3059, -8.81282, 0.6 ) }
    dend_3 { pt3dadd( -24.8412, 39.7939, -9.61607, 0.6 ) }
    dend_3 { pt3dadd( -27.0714, 41.5473, -10.5418, 0.6 ) }
    dend_3 { pt3dadd( -28.2958, 42.5695, -11.1075, 0.36 ) }
    dend_3 { pt3dadd( -31.2645, 45.1106, -12.4877, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -33.3563, 46.9673, -13.4009, 0.6 ) }
    dend_3 { pt3dadd( -35.2238, 48.5644, -14.1182, 0.6 ) }
    dend_3 { pt3dadd( -36.2471, 49.3855, -14.5069, 0.48 ) }
    dend_3 { pt3dadd( -41.086, 53.1698, -16.4685, 1.08 ) }
    dend_3 { pt3dadd( -42.0753, 53.8536, -16.8498, 0.72 ) }
    dend_3 { pt3dadd( -43.1237, 54.4141, -17.1744, 0.48 ) }
    dend_3 { pt3dadd( -45.8777, 55.5628, -17.9316, 0.84 ) }
    dend_3 { pt3dadd( -48.2945, 56.4132, -18.5345, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 139.587, -134.701, 139.19, 0.24 ) }
    dend_49 { pt3dadd( 143.256, -138.019, 145.721, 0.24 ) }
    dend_49 { pt3dadd( 146.909, -140.374, 152.71, 0.24 ) }
    dend_49 { pt3dadd( 149.45, -142.372, 160.287, 0.24 ) }
    dend_49 { pt3dadd( 152.305, -145.016, 167.523, 0.24 ) }
    dend_49 { pt3dadd( 154.791, -148.319, 174.587, 0.24 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 14/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 139.587, -134.701, 139.19, 0.24 ) }
    dend_48 { pt3dadd( 150.686, -139.731, 146.376, 0.24 ) }
    dend_48 { pt3dadd( 161.453, -146.471, 152.431, 0.24 ) }
    dend_48 { pt3dadd( 172.061, -153.996, 157.696, 0.24 ) }
    dend_48 { pt3dadd( 180.598, -163.757, 162.643, 0.24 ) }
    dend_48 { pt3dadd( 190.888, -172.645, 165.763, 0.24 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 146.5, -117.031, -54.4871, 0.24 ) }
    dend_42 { pt3dadd( 148.869, -118.945, -56.3203, 0.24 ) }
    dend_42 { pt3dadd( 150.4, -120.209, -57.6948, 0.24 ) }
    dend_42 { pt3dadd( 153.268, -122.631, -60.3666, 0.24 ) }
    dend_42 { pt3dadd( 153.898, -123.158, -60.9374, 0.24 ) }
    dend_42 { pt3dadd( 154.913, -123.968, -61.866, 0.24 ) }
    dend_42 { pt3dadd( 157.663, -126.19, -64.3883, 0.24 ) }
    dend_42 { pt3dadd( 160.299, -128.337, -66.8761, 0.24 ) }
    dend_42 { pt3dadd( 161.333, -129.169, -67.8412, 0.24 ) }
    dend_42 { pt3dadd( 163.36, -130.778, -69.6989, 0.24 ) }
    dend_42 { pt3dadd( 165.749, -132.565, -71.9382, 0.24 ) }
    dend_42 { pt3dadd( 167.314, -133.64, -73.3947, 0.24 ) }
    dend_42 { pt3dadd( 169.206, -134.886, -75.1693, 0.24 ) }
    dend_42 { pt3dadd( 171.173, -136.184, -77.0014, 0.24 ) }
    dend_42 { pt3dadd( 173.303, -137.586, -79.1439, 0.24 ) }
    dend_42 { pt3dadd( 175.733, -139.202, -81.5411, 0.24 ) }
    dend_42 { pt3dadd( 177.226, -140.198, -83.0926, 0.24 ) }
    dend_42 { pt3dadd( 178.816, -141.165, -84.7753, 0.24 ) }
    dend_42 { pt3dadd( 180.495, -142.186, -86.5987, 0.24 ) }
    dend_42 { pt3dadd( 183.727, -144.153, -90.1599, 0.24 ) }
    dend_42 { pt3dadd( 185.777, -145.432, -92.3744, 0.24 ) }
    dend_42 { pt3dadd( 190.13, -148.219, -97.0308, 0.24 ) }
    dend_42 { pt3dadd( 193.169, -150.068, -100.317, 0.24 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 43/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 146.5, -117.031, -54.4871, 0.24 ) }
    dend_41 { pt3dadd( 146.677, -120.256, -54.1079, 0.24 ) }
    dend_41 { pt3dadd( 146.811, -122.679, -53.823, 0.24 ) }
    dend_41 { pt3dadd( 146.962, -125.434, -53.4991, 0.24 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -37.0717, 4.14794, 15.5601, 0.24 ) }
    dend_24 { pt3dadd( -38.7831, 3.94931, 14.6365, 0.24 ) }
    dend_24 { pt3dadd( -40.6432, 3.84042, 13.7029, 0.24 ) }
    dend_24 { pt3dadd( -41.6247, 3.78297, 13.2103, 0.24 ) }
    dend_24 { pt3dadd( -43.5693, 3.66914, 12.2344, 0.24 ) }
    dend_24 { pt3dadd( -45.536, 3.55401, 11.2473, 0.24 ) }
    dend_24 { pt3dadd( -47.2095, 3.45605, 10.4074, 0.24 ) }
    dend_24 { pt3dadd( -48.1426, 3.39228, 9.99017, 0.24 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -37.0717, 4.14794, 15.5601, 0.48 ) }
    dend_23 { pt3dadd( -38.5213, 3.13638, 14.8549, 0.48 ) }
    dend_23 { pt3dadd( -39.602, 2.38227, 14.3292, 0.48 ) }
    dend_23 { pt3dadd( -41.0462, 1.37448, 13.6266, 0.24 ) }
    dend_23 { pt3dadd( -43.1757, -0.111485, 12.5907, 0.24 ) }
    dend_23 { pt3dadd( -47.0494, -2.81456, 10.7064, 0.24 ) }
    dend_23 { pt3dadd( -55.6897, -8.62241, 5.24371, 0.24 ) }
    dend_23 { pt3dadd( -65.5951, -12.08, -0.332641, 0.24 ) }
    dend_23 { pt3dadd( -76.837, -14.0272, -3.89112, 0.24 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 42.4667, 148.647, 56.3924, 0.24 ) }
    dend_18 { pt3dadd( 40.0807, 152.421, 67.7134, 0.24 ) }
    dend_18 { pt3dadd( 36.5182, 154.45, 79.2193, 0.24 ) }
    dend_18 { pt3dadd( 34.3497, 154.882, 91.2488, 0.24 ) }
    dend_18 { pt3dadd( 29.857, 157.89, 102.178, 0.24 ) }
    dend_18 { pt3dadd( 24.3171, 159.467, 112.958, 0.24 ) }
    dend_18 { pt3dadd( 20.2804, 161.421, 124.321, 0.24 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 42.4667, 148.647, 56.3924, 0.24 ) }
    dend_17 { pt3dadd( 46.7926, 158.235, 56.6538, 0.24 ) }
    dend_17 { pt3dadd( 51.8687, 167.452, 57.5001, 0.24 ) }
    dend_17 { pt3dadd( 57.8442, 176.217, 57.1999, 0.24 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.36889, 237.953, -39.6759, 0.84 ) }
    dend_14 { pt3dadd( -1.69478, 243.086, -40.4325, 0.84 ) }
    dend_14 { pt3dadd( -1.33048, 246.447, -40.8416, 0.84 ) }
    dend_14 { pt3dadd( -0.841008, 251.342, -41.3436, 0.72 ) }
    dend_14 { pt3dadd( -0.503116, 254.666, -41.6956, 0.6 ) }
    dend_14 { pt3dadd( 0.298101, 263.211, -42.5736, 0.84 ) }
    dend_14 { pt3dadd( 0.652871, 267.385, -42.9782, 0.84 ) }
    dend_14 { pt3dadd( 0.889381, 271.481, -43.3066, 0.6 ) }
    dend_14 { pt3dadd( 1.03617, 274.765, -43.5999, 0.6 ) }
    dend_14 { pt3dadd( 1.11952, 277.905, -43.8962, 0.6 ) }
    dend_14 { pt3dadd( 1.16449, 282.549, -44.4412, 0.6 ) }
    dend_14 { pt3dadd( 1.15627, 288.868, -45.3617, 0.6 ) }
    dend_14 { pt3dadd( 1.0667, 294.907, -46.2758, 0.6 ) }
    dend_14 { pt3dadd( 0.979411, 298.128, -46.7347, 0.6 ) }
    dend_14 { pt3dadd( 0.795301, 302.612, -47.3024, 0.6 ) }
    dend_14 { pt3dadd( 0.454344, 309.219, -48.0418, 0.6 ) }
    dend_14 { pt3dadd( 0.189555, 314.137, -48.5467, 0.6 ) }
    dend_14 { pt3dadd( -0.106164, 319.753, -49.0839, 0.6 ) }
    dend_14 { pt3dadd( -0.281853, 323.894, -49.4742, 0.48 ) }
    dend_14 { pt3dadd( -0.493858, 328.393, -49.932, 0.48 ) }
    dend_14 { pt3dadd( -0.712981, 332.021, -50.3044, 0.48 ) }
    dend_14 { pt3dadd( -0.977161, 335.251, -50.6256, 0.36 ) }
    dend_14 { pt3dadd( -1.57943, 341.071, -51.4437, 0.36 ) }
    dend_14 { pt3dadd( -2.17648, 346.12, -52.2856, 0.36 ) }
    dend_14 { pt3dadd( -2.7239, 350.573, -53.1964, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -3.23583, 354.615, -54.0528, 0.36 ) }
    dend_14 { pt3dadd( -3.82639, 359.748, -55.1194, 0.36 ) }
    dend_14 { pt3dadd( -4.62925, 367.133, -56.6085, 0.36 ) }
    dend_14 { pt3dadd( -5.02782, 371.293, -57.381, 0.36 ) }
    dend_14 { pt3dadd( -5.43672, 376.84, -58.3025, 0.36 ) }
    dend_14 { pt3dadd( -5.64855, 382.092, -59.0981, 0.36 ) }
    dend_14 { pt3dadd( -5.7557, 388.55, -59.9358, 0.36 ) }
    dend_14 { pt3dadd( -5.74497, 393.382, -60.5317, 0.36 ) }
    dend_14 { pt3dadd( -5.73935, 395.866, -60.8036, 0.36 ) }
    dend_14 { pt3dadd( -5.7092, 402.485, -61.5103, 0.36 ) }
    dend_14 { pt3dadd( -5.65357, 406.274, -62.1442, 0.36 ) }
    dend_14 { pt3dadd( -5.61876, 411.404, -63.2701, 0.36 ) }
    dend_14 { pt3dadd( -5.68439, 417.069, -64.7841, 0.36 ) }
    dend_14 { pt3dadd( -5.77941, 421.065, -66.1763, 0.36 ) }
    dend_14 { pt3dadd( -6.01873, 425.51, -67.9477, 0.36 ) }
    dend_14 { pt3dadd( -6.70614, 433.968, -71.7445, 0.36 ) }
    dend_14 { pt3dadd( -7.24487, 438.83, -73.9391, 0.36 ) }
    dend_14 { pt3dadd( -7.80703, 443.266, -75.7915, 0.36 ) }
    dend_14 { pt3dadd( -8.78516, 450.394, -78.3814, 0.36 ) }
    dend_14 { pt3dadd( -9.52151, 455.816, -80.0218, 0.36 ) }
    dend_14 { pt3dadd( -10.2397, 461.029, -81.24, 0.12 ) }
    dend_14 { pt3dadd( -10.9642, 467.209, -82.1367, 0.12 ) }
    dend_14 { pt3dadd( -11.5122, 474.074, -82.8886, 0.12 ) }
    dend_14 { pt3dadd( -11.7601, 479.346, -83.2547, 0.12 ) }
    dend_14 { pt3dadd( -11.9031, 487.678, -83.5955, 0.12 ) }
    dend_14 { pt3dadd( -11.8031, 493.04, -83.8634, 0.12 ) }
    dend_14 { pt3dadd( -11.418, 502.642, -84.5053, 0.12 ) }
    dend_14 { pt3dadd( -10.8385, 511.26, -85.3384, 0.12 ) }
    dend_14 { pt3dadd( -10.1163, 518.735, -86.3397, 0.12 ) }
    dend_14 { pt3dadd( -9.6775, 522.103, -86.8728, 0.12 ) }
    dend_14 { pt3dadd( -8.21493, 530.887, -88.538, 0.12 ) }
    dend_14 { pt3dadd( -7.09252, 536.251, -89.6736, 0.12 ) }
    dend_14 { pt3dadd( -5.81133, 541.101, -90.8748, 0.12 ) }
    dend_14 { pt3dadd( -3.34896, 548.355, -92.7941, 0.12 ) }
    dend_14 { pt3dadd( -0.755019, 554.402, -94.4135, 0.12 ) }
    dend_14 { pt3dadd( 2.30425, 560.26, -96.1079, 0.12 ) }
    dend_14 { pt3dadd( 4.53217, 563.823, -97.1908, 0.12 ) }
    dend_14 { pt3dadd( 7.55899, 568.138, -98.6342, 0.12 ) }
    dend_14 { pt3dadd( 10.5099, 572.248, -100.143, 0.12 ) }
    dend_14 { pt3dadd( 13.3677, 576.06, -101.8, 0.12 ) }
    dend_14 { pt3dadd( 16.3164, 580.109, -103.854, 0.12 ) }
    dend_14 { pt3dadd( 17.7139, 582.52, -105.09, 0.12 ) }
    dend_14 { pt3dadd( 19.1504, 586.037, -106.572, 0.12 ) }
    dend_14 { pt3dadd( 20.5873, 591.788, -108.221, 0.12 ) }
    dend_14 { pt3dadd( 21.2757, 597.175, -109.632, 0.12 ) }
    dend_14 { pt3dadd( 21.3683, 599.713, -110.211, 0.12 ) }
    dend_14 { pt3dadd( 21.4286, 608.335, -111.907, 0.12 ) }
    dend_14 { pt3dadd( 21.3533, 615.872, -113.254, 0.12 ) }
    dend_14 { pt3dadd( 21.0888, 623.739, -114.356, 0.12 ) }
    dend_14 { pt3dadd( 20.5868, 631.186, -115.217, 0.12 ) }
    dend_14 { pt3dadd( 19.8187, 637.829, -115.673, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.36889, 237.953, -39.6759, 0.36 ) }
    dend_9 { pt3dadd( -2.39737, 240.527, -40.3648, 0.36 ) }
    dend_9 { pt3dadd( -2.39727, 243.058, -40.9631, 0.36 ) }
    dend_9 { pt3dadd( -2.32736, 246.341, -41.6097, 0.36 ) }
    dend_9 { pt3dadd( -2.1953, 249.979, -42.2075, 0.36 ) }
    dend_9 { pt3dadd( -2.00642, 254.09, -42.8246, 0.36 ) }
    dend_9 { pt3dadd( -1.87872, 256.134, -43.093, 0.36 ) }
    dend_9 { pt3dadd( -1.4827, 259.93, -43.5776, 0.36 ) }
    dend_9 { pt3dadd( -0.981694, 263.961, -44.0822, 0.36 ) }
    dend_9 { pt3dadd( -0.523808, 267.484, -44.4807, 0.36 ) }
    dend_9 { pt3dadd( -0.0721984, 271.002, -44.8168, 0.36 ) }
    dend_9 { pt3dadd( 0.468735, 275.501, -45.1981, 0.36 ) }
    dend_9 { pt3dadd( 1.09557, 281.937, -45.8043, 0.36 ) }
    dend_9 { pt3dadd( 1.37164, 286.407, -46.2421, 0.24 ) }
    dend_9 { pt3dadd( 1.47246, 289.516, -46.5879, 0.24 ) }
    dend_9 { pt3dadd( 1.52908, 293.619, -47.0495, 0.24 ) }
    dend_9 { pt3dadd( 1.51173, 295.11, -47.2084, 0.24 ) }
    dend_9 { pt3dadd( 1.35897, 298.655, -47.6046, 0.24 ) }
    dend_9 { pt3dadd( 0.905901, 304.66, -48.2143, 0.24 ) }
    dend_9 { pt3dadd( 0.739101, 306.362, -48.4204, 0.24 ) }
    dend_9 { pt3dadd( 0.444845, 309.277, -48.7782, 0.24 ) }
    dend_9 { pt3dadd( 0.189623, 312.175, -49.1003, 0.24 ) }
    dend_9 { pt3dadd( -0.0665704, 315.84, -49.4638, 0.24 ) }
    dend_9 { pt3dadd( -0.296227, 320.205, -49.8187, 0.24 ) }
    dend_9 { pt3dadd( -0.500243, 324.464, -50.1331, 0.24 ) }
    dend_9 { pt3dadd( -0.653448, 328.843, -50.4672, 0.24 ) }
    dend_9 { pt3dadd( -0.719939, 332.663, -50.7913, 0.24 ) }
    dend_9 { pt3dadd( -0.7179, 334.241, -50.9196, 0.24 ) }
    dend_9 { pt3dadd( -0.627878, 337.526, -51.1694, 0.24 ) }
    dend_9 { pt3dadd( -0.414156, 340.412, -51.4224, 0.24 ) }
    dend_9 { pt3dadd( 0.0775926, 344.48, -51.8556, 0.24 ) }
    dend_9 { pt3dadd( 0.504875, 347.694, -52.3016, 0.24 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -48.2945, 56.4132, -18.5345, 0.48 ) }
    dend_5 { pt3dadd( -48.9257, 58.0385, -20.0652, 0.48 ) }
    dend_5 { pt3dadd( -50.0835, 61.0797, -22.3079, 0.48 ) }
    dend_5 { pt3dadd( -51.3179, 64.1585, -24.0947, 0.48 ) }
    dend_5 { pt3dadd( -52.0912, 65.958, -25.1639, 0.48 ) }
    dend_5 { pt3dadd( -52.9914, 67.7483, -26.2777, 0.48 ) }
    dend_5 { pt3dadd( -54.1469, 70.0335, -27.5733, 0.36 ) }
    dend_5 { pt3dadd( -55.5427, 72.631, -28.995, 0.6 ) }
    dend_5 { pt3dadd( -56.8407, 74.957, -30.17, 0.36 ) }
    dend_5 { pt3dadd( -58.6758, 78.5839, -32.0417, 0.36 ) }
    dend_5 { pt3dadd( -60.103, 81.7683, -33.7516, 0.36 ) }
    dend_5 { pt3dadd( -61.3654, 84.7491, -35.6186, 0.84 ) }
    dend_5 { pt3dadd( -62.6774, 88.1279, -37.8867, 0.48 ) }
    dend_5 { pt3dadd( -63.1136, 89.3324, -38.817, 0.48 ) }
    dend_5 { pt3dadd( -63.6603, 91.0625, -40.2337, 0.36 ) }
    dend_5 { pt3dadd( -64.3866, 93.236, -42.0359, 1.08 ) }
    dend_5 { pt3dadd( -65.9457, 97.4148, -45.8516, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( -66.4122, 98.5162, -46.8934, 0.6 ) }
    dend_5 { pt3dadd( -68.2355, 102.543, -50.6633, 0.36 ) }
    dend_5 { pt3dadd( -69.4989, 105.18, -53.1048, 0.72 ) }
    dend_5 { pt3dadd( -70.9721, 108.314, -55.8525, 0.72 ) }
    dend_5 { pt3dadd( -72.3954, 111.52, -58.5119, 0.36 ) }
    dend_5 { pt3dadd( -73.5182, 114.089, -60.516, 0.84 ) }
    dend_5 { pt3dadd( -75.2619, 117.869, -63.3231, 0.36 ) }
    dend_5 { pt3dadd( -76.0351, 119.584, -64.5299, 0.96 ) }
    dend_5 { pt3dadd( -78.9464, 126.161, -69.0154, 0.24 ) }
    dend_5 { pt3dadd( -80.1095, 129.0, -70.8549, 0.72 ) }
    dend_5 { pt3dadd( -82.0071, 133.533, -73.6462, 0.36 ) }
    dend_5 { pt3dadd( -83.1015, 135.914, -75.1576, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 12/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -48.2945, 56.4132, -18.5345, 0.36 ) }
    dend_4 { pt3dadd( -49.6861, 57.0927, -19.1956, 0.36 ) }
    dend_4 { pt3dadd( -51.8168, 58.3708, -20.283, 0.36 ) }
    dend_4 { pt3dadd( -53.6133, 59.5862, -21.4745, 0.36 ) }
    dend_4 { pt3dadd( -56.8882, 61.9863, -23.4499, 0.36 ) }
    dend_4 { pt3dadd( -59.5529, 64.0046, -25.0621, 0.24 ) }
    dend_4 { pt3dadd( -61.261, 65.2896, -26.0703, 0.12 ) }
    dend_4 { pt3dadd( -63.5957, 67.1278, -27.4216, 0.12 ) }
    dend_4 { pt3dadd( -68.5632, 71.1537, -30.245, 0.12 ) }
    dend_4 { pt3dadd( -72.1199, 73.5381, -31.9862, 0.12 ) }
    dend_4 { pt3dadd( -74.9642, 75.2258, -33.3228, 0.12 ) }
    dend_4 { pt3dadd( -76.5397, 76.1234, -33.9554, 0.12 ) }
    dend_4 { pt3dadd( -78.2037, 77.0456, -34.5881, 0.12 ) }
    dend_4 { pt3dadd( -78.961, 77.4531, -34.8623, 0.12 ) }
    dend_4 { pt3dadd( -92.3967, 84.5566, -39.5447, 0.12 ) }
    dend_4 { pt3dadd( -97.5223, 87.2438, -41.4781, 0.12 ) }
    dend_4 { pt3dadd( -103.603, 90.4975, -43.686, 0.12 ) }
    dend_4 { pt3dadd( -110.337, 94.2113, -46.2173, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -48.1426, 3.39228, 9.99017, 0.24 ) }
    dend_26 { pt3dadd( -50.268, 3.36578, 10.1229, 0.24 ) }
    dend_26 { pt3dadd( -51.4435, 3.37984, 10.2018, 0.24 ) }
    dend_26 { pt3dadd( -53.3525, 3.46412, 10.2668, 0.36 ) }
    dend_26 { pt3dadd( -54.657, 3.56658, 10.2769, 0.36 ) }
    dend_26 { pt3dadd( -56.066, 3.74151, 10.3733, 0.36 ) }
    dend_26 { pt3dadd( -56.8382, 3.84976, 10.4457, 0.36 ) }
    dend_26 { pt3dadd( -58.3169, 4.1148, 10.5731, 0.36 ) }
    dend_26 { pt3dadd( -60.4006, 4.48862, 10.7767, 0.36 ) }
    dend_26 { pt3dadd( -61.8914, 4.74541, 10.919, 0.36 ) }
    dend_26 { pt3dadd( -65.1106, 5.25812, 11.1845, 0.36 ) }
    dend_26 { pt3dadd( -66.0016, 5.39962, 11.2579, 0.36 ) }
    dend_26 { pt3dadd( -68.009, 5.69574, 11.4175, 0.36 ) }
    dend_26 { pt3dadd( -69.3361, 5.87877, 11.5266, 0.36 ) }
    dend_26 { pt3dadd( -71.2285, 6.08362, 11.6984, 0.36 ) }
    dend_26 { pt3dadd( -72.5764, 6.16553, 11.7488, 0.36 ) }
    dend_26 { pt3dadd( -79.7296, 6.41366, 10.9366, 0.36 ) }
    dend_26 { pt3dadd( -86.8136, 6.10769, 9.73315, 0.36 ) }
    dend_26 { pt3dadd( -93.6694, 6.93148, 7.68196, 0.36 ) }
    dend_26 { pt3dadd( -100.177, 9.30964, 5.70323, 0.36 ) }
    dend_26 { pt3dadd( -105.963, 12.9696, 3.521, 0.36 ) }
    dend_26 { pt3dadd( -112.776, 14.6865, 1.91057, 0.36 ) }
    dend_26 { pt3dadd( -119.589, 15.6252, -0.235148, 0.36 ) }
    dend_26 { pt3dadd( -126.355, 16.1362, -2.63443, 0.36 ) }
    dend_26 { pt3dadd( -132.723, 17.5564, -5.69106, 0.36 ) }
    dend_26 { pt3dadd( -139.5, 17.9333, -8.07526, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 56/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -48.1426, 3.39228, 9.99017, 0.24 ) }
    dend_25 { pt3dadd( -46.917, 7.01185, 9.24276, 0.24 ) }
    dend_25 { pt3dadd( -46.6408, 8.04461, 9.07732, 0.24 ) }
    dend_25 { pt3dadd( -46.0186, 10.185, 8.79997, 0.24 ) }
    dend_25 { pt3dadd( -45.7155, 11.1739, 8.70256, 0.24 ) }
    dend_25 { pt3dadd( -43.8902, 16.6416, 8.24979, 0.24 ) }
    dend_25 { pt3dadd( -42.9356, 19.2691, 8.07091, 0.24 ) }
    dend_25 { pt3dadd( -41.8952, 22.0459, 7.97002, 0.24 ) }
    dend_25 { pt3dadd( -40.2238, 26.211, 7.88534, 0.24 ) }
    dend_25 { pt3dadd( -39.0824, 28.8335, 7.89855, 0.24 ) }
    dend_25 { pt3dadd( -37.9041, 31.4416, 7.8948, 0.24 ) }
    dend_25 { pt3dadd( -37.1571, 33.0375, 7.91451, 0.24 ) }
    dend_25 { pt3dadd( -36.6463, 34.1165, 7.91074, 0.24 ) }
    dend_25 { pt3dadd( -35.8648, 35.7226, 7.8224, 0.24 ) }
    dend_25 { pt3dadd( -34.5069, 38.5199, 7.64201, 0.24 ) }
    dend_25 { pt3dadd( -31.7972, 43.8897, 7.27881, 0.24 ) }
    dend_25 { pt3dadd( -30.1407, 47.0741, 7.12694, 0.24 ) }
    dend_25 { pt3dadd( -28.4663, 50.1295, 6.95834, 0.24 ) }
    dend_25 { pt3dadd( -25.8922, 54.7075, 6.69839, 0.24 ) }
    dend_25 { pt3dadd( -23.0969, 59.5533, 6.43008, 0.24 ) }
    dend_25 { pt3dadd( -21.837, 61.5971, 6.34608, 0.24 ) }
    dend_25 { pt3dadd( -19.8985, 64.3448, 6.35761, 0.24 ) }
    dend_25 { pt3dadd( -16.9829, 68.263, 6.31496, 0.24 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.504875, 347.694, -52.3016, 0.24 ) }
    dend_13 { pt3dadd( 1.00808, 351.775, -52.4605, 0.24 ) }
    dend_13 { pt3dadd( 1.30517, 354.574, -52.5339, 0.24 ) }
    dend_13 { pt3dadd( 1.57584, 357.485, -52.5785, 0.24 ) }
    dend_13 { pt3dadd( 2.01339, 362.458, -52.6095, 0.24 ) }
    dend_13 { pt3dadd( 2.42225, 367.184, -52.606, 0.24 ) }
    dend_13 { pt3dadd( 2.65561, 369.765, -52.5856, 0.24 ) }
    dend_13 { pt3dadd( 2.933, 373.089, -52.4192, 0.24 ) }
    dend_13 { pt3dadd( 3.30319, 377.065, -52.1291, 0.24 ) }
    dend_13 { pt3dadd( 3.58717, 380.325, -51.8344, 0.24 ) }
    dend_13 { pt3dadd( 3.76855, 382.931, -51.5861, 0.24 ) }
    dend_13 { pt3dadd( 3.84444, 386.373, -51.2855, 0.24 ) }
    dend_13 { pt3dadd( 3.73375, 389.523, -51.0928, 0.24 ) }
    dend_13 { pt3dadd( 3.4472, 392.421, -51.0032, 0.24 ) }
    dend_13 { pt3dadd( 3.06772, 394.659, -51.0105, 0.24 ) }
    dend_13 { pt3dadd( 2.40028, 397.717, -51.2178, 0.24 ) }
    dend_13 { pt3dadd( 1.39564, 401.673, -51.6809, 0.24 ) }
    dend_13 { pt3dadd( 0.0906716, 406.328, -52.1455, 0.24 ) }
    dend_13 { pt3dadd( -0.837146, 409.709, -52.4198, 0.24 ) }
    dend_13 { pt3dadd( -2.32096, 415.283, -52.3981, 0.24 ) }
    dend_13 { pt3dadd( -3.16268, 418.655, -52.1485, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -3.83294, 422.215, -51.7736, 0.24 ) }
    dend_13 { pt3dadd( -4.82029, 428.866, -50.6591, 0.24 ) }
    dend_13 { pt3dadd( -5.287, 433.094, -49.7673, 0.24 ) }
    dend_13 { pt3dadd( -5.64999, 438.041, -48.71, 0.24 ) }
    dend_13 { pt3dadd( -5.73661, 440.013, -48.301, 0.24 ) }
    dend_13 { pt3dadd( -6.03896, 446.643, -46.8357, 0.24 ) }
    dend_13 { pt3dadd( -6.15624, 451.035, -46.0341, 0.24 ) }
    dend_13 { pt3dadd( -6.18516, 454.086, -45.7713, 0.24 ) }
    dend_13 { pt3dadd( -6.2584, 458.397, -45.6535, 0.24 ) }
    dend_13 { pt3dadd( -6.31676, 461.461, -45.8553, 0.24 ) }
    dend_13 { pt3dadd( -6.45509, 465.149, -46.029, 0.24 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 11/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.504875, 347.694, -52.3016, 0.24 ) }
    dend_10 { pt3dadd( 0.0596146, 350.66, -52.9321, 0.24 ) }
    dend_10 { pt3dadd( -0.271206, 352.864, -53.4006, 0.24 ) }
    dend_10 { pt3dadd( -0.642578, 355.338, -53.9265, 0.24 ) }
    dend_10 { pt3dadd( -1.14108, 358.659, -54.6324, 0.24 ) }
    dend_10 { pt3dadd( -1.84448, 363.345, -55.6285, 0.24 ) }
    dend_10 { pt3dadd( -2.20379, 365.739, -56.1373, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -83.1015, 135.914, -75.1576, 0.48 ) }
    dend_7 { pt3dadd( -90.0319, 139.51, -79.0915, 0.48 ) }
    dend_7 { pt3dadd( -101.062, 145.186, -84.1323, 0.12 ) }
    dend_7 { pt3dadd( -109.652, 149.54, -87.4164, 0.24 ) }
    dend_7 { pt3dadd( -114.916, 152.231, -88.9731, 0.24 ) }
    dend_7 { pt3dadd( -118.189, 154.007, -89.6631, 0.24 ) }
    dend_7 { pt3dadd( -122.309, 156.31, -90.4394, 0.24 ) }
    dend_7 { pt3dadd( -126.043, 158.547, -90.5902, 0.24 ) }
    dend_7 { pt3dadd( -128.273, 159.798, -90.5703, 0.24 ) }
    dend_7 { pt3dadd( -133.814, 162.641, -91.3829, 0.24 ) }
    dend_7 { pt3dadd( -140.587, 166.128, -93.0941, 0.24 ) }
    dend_7 { pt3dadd( -144.257, 168.152, -94.406, 0.24 ) }
    dend_7 { pt3dadd( -147.413, 170.11, -95.9204, 0.24 ) }
    dend_7 { pt3dadd( -155.202, 175.245, -100.647, 0.24 ) }
    dend_7 { pt3dadd( -161.519, 179.294, -104.954, 0.24 ) }
    dend_7 { pt3dadd( -163.315, 180.368, -106.222, 0.24 ) }
    dend_7 { pt3dadd( -166.359, 182.046, -108.317, 0.24 ) }
    dend_7 { pt3dadd( -170.427, 184.29, -110.762, 0.24 ) }
    dend_7 { pt3dadd( -173.575, 186.045, -112.444, 0.24 ) }
    dend_7 { pt3dadd( -180.852, 189.994, -115.399, 0.24 ) }
    dend_7 { pt3dadd( -184.924, 191.942, -116.834, 0.24 ) }
    dend_7 { pt3dadd( -189.485, 193.899, -118.38, 0.24 ) }
    dend_7 { pt3dadd( -192.828, 195.151, -119.427, 0.24 ) }
    dend_7 { pt3dadd( -197.037, 196.617, -120.567, 0.24 ) }
    dend_7 { pt3dadd( -201.146, 198.211, -121.658, 0.24 ) }
    dend_7 { pt3dadd( -205.677, 200.445, -123.078, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -83.1015, 135.914, -75.1576, 0.48 ) }
    dend_6 { pt3dadd( -85.0144, 140.619, -83.7081, 0.48 ) }
    dend_6 { pt3dadd( -87.6139, 147.139, -95.8094, 0.24 ) }
    dend_6 { pt3dadd( -89.8513, 152.97, -106.199, 0.24 ) }
    dend_6 { pt3dadd( -92.3358, 159.189, -116.932, 0.24 ) }
    dend_6 { pt3dadd( -93.824, 162.765, -122.896, 0.24 ) }
    dend_6 { pt3dadd( -95.5283, 166.86, -129.727, 0.24 ) }
    dend_6 { pt3dadd( -97.5971, 171.802, -137.75, 0.24 ) }
    dend_6 { pt3dadd( -98.5231, 174.121, -141.544, 0.24 ) }
    dend_6 { pt3dadd( -100.131, 178.382, -148.44, 0.24 ) }
    dend_6 { pt3dadd( -102.74, 184.048, -156.67, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -139.5, 17.9333, -8.07526, 0.24 ) }
    dend_30 { pt3dadd( -150.308, 19.0795, -10.4612, 0.24 ) }
    dend_30 { pt3dadd( -160.845, 19.2713, -13.9502, 0.24 ) }
    dend_30 { pt3dadd( -171.159, 20.4985, -17.9052, 0.24 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -139.5, 17.9333, -8.07526, 0.24 ) }
    dend_27 { pt3dadd( -148.011, 20.6193, -9.15802, 0.24 ) }
    dend_27 { pt3dadd( -156.651, 23.0208, -8.69522, 0.24 ) }
    dend_27 { pt3dadd( -164.899, 25.3137, -6.09681, 0.24 ) }
    dend_27 { pt3dadd( -172.085, 28.3568, -1.8718, 0.24 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.20379, 365.739, -56.1373, 0.24 ) }
    dend_12 { pt3dadd( -1.73905, 370.773, -55.7554, 0.24 ) }
    dend_12 { pt3dadd( -1.38412, 374.618, -55.4637, 0.24 ) }
    dend_12 { pt3dadd( -1.12164, 377.461, -55.248, 0.24 ) }
    dend_12 { pt3dadd( -0.908708, 379.768, -55.073, 0.24 ) }
    dend_12 { pt3dadd( -0.529269, 383.878, -54.7611, 0.24 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.20379, 365.739, -56.1373, 0.24 ) }
    dend_11 { pt3dadd( -2.36457, 370.137, -55.6534, 0.24 ) }
    dend_11 { pt3dadd( -3.14393, 374.332, -55.2327, 0.24 ) }
    dend_11 { pt3dadd( -4.17313, 378.007, -55.1095, 0.24 ) }
    dend_11 { pt3dadd( -5.15902, 380.941, -54.9849, 0.24 ) }
    dend_11 { pt3dadd( -6.07203, 383.534, -55.0264, 0.24 ) }
    dend_11 { pt3dadd( -7.04234, 386.402, -55.1652, 0.24 ) }
    dend_11 { pt3dadd( -9.13618, 392.092, -55.4335, 0.24 ) }
    dend_11 { pt3dadd( -10.9318, 396.674, -55.8689, 0.24 ) }
    dend_11 { pt3dadd( -12.3791, 400.481, -56.3988, 0.24 ) }
    dend_11 { pt3dadd( -13.7272, 405.024, -57.2985, 0.24 ) }
    dend_11 { pt3dadd( -14.2833, 407.819, -57.8939, 0.24 ) }
    dend_11 { pt3dadd( -14.5116, 409.106, -58.1176, 0.24 ) }
    dend_11 { pt3dadd( -14.972, 411.857, -58.4999, 0.24 ) }
    dend_11 { pt3dadd( -15.3704, 414.157, -58.7354, 0.24 ) }
    dend_11 { pt3dadd( -16.8249, 421.839, -59.3559, 0.24 ) }
    dend_11 { pt3dadd( -17.4661, 424.937, -59.4868, 0.24 ) }
    dend_11 { pt3dadd( -20.3441, 438.017, -59.9834, 0.24 ) }
    dend_11 { pt3dadd( -21.0963, 441.636, -60.1045, 0.24 ) }
    dend_11 { pt3dadd( -21.8637, 445.738, -60.2642, 0.24 ) }
    dend_11 { pt3dadd( -22.479, 449.645, -60.4896, 0.24 ) }
    dend_11 { pt3dadd( -22.7968, 452.315, -60.6673, 0.24 ) }
    dend_11 { pt3dadd( -22.9803, 456.665, -61.0831, 0.24 ) }
    dend_11 { pt3dadd( -22.7656, 460.535, -61.5366, 0.24 ) }
    dend_11 { pt3dadd( -22.4012, 465.486, -62.1842, 0.24 ) }
    dend_11 { pt3dadd( -21.8404, 471.91, -63.1118, 0.24 ) }
    dend_11 { pt3dadd( -21.1641, 478.542, -64.1378, 0.24 ) }
    dend_11 { pt3dadd( -20.3512, 486.284, -65.3567, 0.24 ) }
    dend_11 { pt3dadd( -19.7148, 492.447, -66.2731, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -172.085, 28.3568, -1.8718, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -178.989, 31.2434, -1.45731, 0.24 ) }
    dend_29 { pt3dadd( -185.598, 34.6033, -0.502127, 0.24 ) }
    dend_29 { pt3dadd( -192.203, 37.8892, 0.713873, 0.24 ) }
    dend_29 { pt3dadd( -198.573, 41.7552, 1.02069, 0.24 ) }
    dend_29 { pt3dadd( -204.306, 46.3518, 1.98087, 0.24 ) }
    dend_29 { pt3dadd( -210.644, 50.2775, 2.12244, 0.24 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -172.085, 28.3568, -1.8718, 0.24 ) }
    dend_28 { pt3dadd( -182.271, 31.9198, -0.0698928, 0.24 ) }
    dend_28 { pt3dadd( -192.309, 36.2013, 0.652704, 0.24 ) }
    dend_28 { pt3dadd( -202.021, 41.1916, 0.878739, 0.24 ) }
    dend_28 { pt3dadd( -212.582, 44.1708, 0.69958, 0.24 ) }
    dend_28 { pt3dadd( -223.205, 46.3348, 2.3935, 0.24 ) }
    dend_28 { pt3dadd( -233.482, 50.0711, 3.00583, 0.24 ) }
    dend_28 { pt3dadd( -242.951, 55.3159, 4.23184, 0.24 ) }
    dend_28 { pt3dadd( -251.83, 61.3948, 5.64335, 0.24 ) }
    dend_28 { pt3dadd( -260.816, 66.8223, 8.38902, 0.24 ) }
    dend_28 { pt3dadd( -269.597, 72.4805, 11.2712, 0.24 ) }
    dend_28 { pt3dadd( -278.782, 77.3279, 14.471, 0.24 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, axon_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, axon_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_5 = new SectionList()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_58 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_46 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_47 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_49 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_29 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_28 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_51 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_24 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_30 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_27 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 7
    dend_59 nseg = 17
    dend_54 nseg = 7
    dend_36 nseg = 3
    dend_58 nseg = 5
    dend_57 nseg = 7
    dend_46 nseg = 9
    dend_43 nseg = 19
    dend_38 nseg = 7
    dend_32 nseg = 9
    dend_15 nseg = 3
    dend_53 nseg = 9
    dend_52 nseg = 7
    dend_50 nseg = 3
    dend_47 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_31 nseg = 3
    dend_19 nseg = 13
    dend_16 nseg = 5
    dend_8 nseg = 11
    dend_3 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_42 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_14 nseg = 21
    dend_9 nseg = 5
    dend_5 nseg = 5
    dend_4 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_13 nseg = 5
    dend_7 nseg = 7
    dend_6 nseg = 5
    dend_11 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_NBC_0546dde601_0_0


