// Cell: cACint209_L6_SBC_02fff5e56a_0_0
/*
{
  "id" : "cACint209_L6_SBC_02fff5e56a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.46247, 5.85861, -0.00377942, 7.43125", "-6.65141, 5.3667, -0.00311965, 9.16559", "-5.84034, 4.87478, -0.00245988, 11.1008", "-5.02928, 4.38287, -0.0018001, 12.7187", "-4.21821, 3.89095, -0.00114033, 13.407", "-3.40715, 3.39904, -4.80554E-4, 14.0331", "-2.59608, 2.90712, 1.79219E-4, 14.6433", "-1.78502, 2.41521, 8.38993E-4, 15.2536", "-0.973954, 1.92329, 0.00149877, 15.5093", "-0.162889, 1.43138, 0.00215854, 15.3073", "0.648176, 0.939463, 0.00281831, 15.1053", "1.45924, 0.447548, 0.00347809, 14.9033", "2.27031, -0.0443665, 0.00413786, 14.4818", "3.08137, -0.536281, 0.00479764, 13.7638", "3.89244, -1.0282, 0.00545741, 12.8143", "4.7035, -1.52011, 0.00611718, 11.7232", "5.51457, -2.01203, 0.00677696, 10.29", "6.32563, -2.50394, 0.00743673, 8.85677", "7.1367, -2.99586, 0.0080965, 7.04177", "7.94776, -3.48777, 0.00875628, 4.64246", "8.75883, -3.97969, 0.00941605, 2.78846" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.16814, 8.01014, -1.4503, 1.32", "-2.60596, 9.24009, -1.99541, 1.32", "-2.93658, 10.173, -2.46321, 1.32", "-3.75461, 12.2834, -3.61986, 2.04", "-5.00742, 14.995, -5.2235, 1.32", "-5.94214, 16.9571, -6.39095, 1.8", "-6.84469, 18.8516, -7.51824, 1.32", "-7.60511, 20.4106, -8.52875, 1.68", "-8.2695, 21.7402, -9.47252, 1.68", "-9.25134, 23.6392, -10.9895, 1.08", "-9.97492, 24.8197, -11.8843, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.03186, -3.37986, -1.5003, 1.8", "6.89949, -3.99113, -2.43553, 1.8", "8.73913, -5.2872, -4.41849, 1.8", "9.99334, -6.1708, -5.77038, 1.8", "11.1717, -7.001, -7.04057, 2.16", "13.2193, -8.44364, -9.24779, 2.4", "13.5327, -8.66442, -9.58558, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.09186, -5.27986, 5.0897, 2.64", "3.16408, -5.78529, 5.45446, 2.64", "3.2816, -6.41298, 5.87872, 2.64", "3.92491, -8.98912, 7.45993, 1.92", "4.3961, -10.4928, 8.30328, 1.92", "4.96406, -12.0276, 9.09887, 1.92", "5.66562, -13.7844, 9.94587, 2.4", "6.01184, -14.5586, 10.291, 2.4", "6.70798, -15.9709, 10.8719, 1.8", "7.67119, -17.6932, 11.4268, 1.56", "8.67496, -19.3281, 11.8821, 1.8", "9.28185, -20.2652, 12.089, 1.8", "9.49529, -20.5797, 12.1553, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.79815, 0.930143, -0.0303001, 5.65", "-10.3922, -0.240187, -0.0183076, 4.93", "-11.8839, -0.913157, -0.0114115, 4.81", "-15.3206, -2.46365, 0.00447654, 1.92", "-17.7152, -3.54401, 0.0155471, 1.68", "-20.2601, -4.69216, 0.0273124, 1.68", "-25.0903, -6.87132, 0.0496425, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.75883, -3.97969, 0.00941605, 1.21105", "21.5843, -11.7584, 0.00941605, 1.21105", "34.4097, -19.5371, 0.00941605, 1.21105" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.97492, 24.8197, -11.8843, 0.6", "-11.0275, 26.9659, -12.2707, 0.6", "-11.7638, 28.4527, -12.683, 0.6", "-12.2733, 29.4107, -13.0091, 0.6", "-12.9555, 30.9146, -13.792, 1.68", "-13.6276, 32.846, -14.9523, 0.72", "-13.8816, 33.5758, -15.3908, 0.72", "-14.8679, 36.6452, -17.5123, 0.6", "-15.4765, 38.7151, -19.1234, 1.44", "-16.435, 42.4365, -22.3449, 0.84", "-16.7292, 44.0572, -23.929, 1.8" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-9.97492, 24.8197, -11.8843, 1.32", "-9.51665, 26.2375, -14.2942, 1.32", "-8.82637, 28.7321, -18.2914, 1.32", "-8.35424, 30.5224, -20.9398, 1.32", "-7.81869, 32.5417, -23.7906, 0.96", "-7.29853, 34.5029, -26.5595, 0.96", "-6.9289, 35.8966, -28.527, 1.2", "-6.52505, 37.7084, -31.0529, 0.48", "-6.10812, 39.6279, -33.4132, 1.32", "-5.85707, 40.8479, -34.7664, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.5327, -8.66442, -9.58558, 1.56", "13.9129, -9.26301, -10.9244, 1.56", "14.6431, -10.9287, -13.9349, 1.32", "14.842, -11.9333, -15.5494, 1.32", "14.9361, -12.9517, -16.9552, 1.68", "14.9627, -13.7021, -17.8833, 1.68", "14.9629, -14.3571, -18.5914, 1.68", "14.8678, -15.8168, -19.781, 1.2", "14.441, -19.063, -21.6811, 1.2", "14.2211, -20.4957, -22.4032, 1.56", "14.1296, -21.1104, -22.6843, 1.56", "13.9424, -22.5568, -23.3088, 1.2", "13.8051, -23.7489, -23.8392, 1.2", "13.635, -26.0695, -24.9005, 1.2", "13.6248, -26.9686, -25.3106, 1.2", "13.641, -27.6066, -25.6212, 1.56", "13.6916, -29.2243, -26.4851, 1.08", "13.7421, -30.8865, -27.458, 2.04", "13.7614, -31.6863, -27.9193, 2.04", "13.7858, -33.1088, -28.5561, 1.32", "13.8576, -35.4395, -29.5118, 2.16" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.5327, -8.66442, -9.58558, 1.32", "16.5648, -9.54602, -9.09877, 1.32", "18.1617, -10.0104, -8.84237, 1.32", "21.4556, -10.9681, -8.31353, 1.32", "22.7611, -11.3476, -8.10394, 1.32", "27.2524, -12.6535, -7.38283, 1.2" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "9.49529, -20.5797, 12.1553, 1.2", "10.5035, -21.2362, 12.9108, 1.2", "11.974, -22.187, 14.0369, 1.2", "13.0472, -22.8561, 14.8695, 1.2", "14.3533, -23.6421, 15.8744, 2.04", "16.7971, -25.0824, 17.7289, 1.08", "18.0294, -25.8187, 18.661, 1.08", "18.7848, -26.3102, 19.2778, 1.08", "19.6339, -26.8584, 19.9805, 1.08", "20.3533, -27.2875, 20.5022, 1.08", "20.9972, -27.6487, 20.8746, 1.08", "21.5063, -27.8992, 21.071, 1.08", "22.6091, -28.4669, 21.4899, 1.08", "23.2625, -28.8129, 21.7046, 1.08", "24.0403, -29.2481, 22.0284, 1.08", "24.6558, -29.5948, 22.3113, 1.08", "25.5677, -30.1, 22.7901, 1.08", "26.107, -30.3694, 23.1114, 1.08", "27.6413, -31.0342, 24.1713, 1.92", "29.5564, -31.6477, 25.6744, 0.96", "30.1342, -31.7482, 26.1708, 0.96", "31.4431, -31.7259, 27.348, 0.72", "32.3009, -31.4959, 28.1108, 1.32", "33.1853, -31.0459, 28.8713, 1.32", "34.5647, -30.044, 29.8985, 0.84", "34.9661, -29.731, 30.1161, 0.84", "35.6941, -29.1903, 30.4426, 0.84", "36.3511, -28.7567, 30.6055, 0.84", "36.8636, -28.5052, 30.6466, 0.84", "38.322, -27.993, 30.6012, 0.72", "39.2632, -27.7978, 30.4915, 0.72", "39.8778, -27.6842, 30.3985, 0.72", "41.0952, -27.4659, 30.1413, 0.72", "41.6891, -27.3778, 29.9907, 0.72", "41.9566, -27.337, 29.9042, 0.72", "43.3183, -27.115, 29.2359, 0.96", "49.8954, -28.7324, 33.2792, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "9.49529, -20.5797, 12.1553, 0.96", "9.02416, -23.5776, 12.7934, 0.96", "8.52825, -26.7332, 13.465, 1.08", "8.27284, -28.3584, 13.8109, 1.08", "7.83225, -31.1619, 14.4076, 1.56", "7.53703, -33.0404, 14.8074, 1.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-25.0903, -6.87132, 0.0496425, 1.08", "-25.8256, -8.94679, -0.446234, 1.08", "-26.0931, -9.76451, -0.688136, 1.08", "-26.4055, -10.8747, -1.03843, 1.08", "-26.6383, -11.9127, -1.3431, 1.08", "-26.8825, -13.2078, -1.81361, 1.08", "-27.0422, -14.1601, -2.22102, 1.32", "-27.374, -16.7415, -3.49999, 1.8", "-27.4111, -17.4486, -3.89857, 1.8", "-27.3694, -18.754, -4.75196, 1.56", "-27.1337, -20.8341, -6.30402, 1.44", "-26.9123, -22.0177, -7.29768, 1.44", "-26.6595, -23.08, -8.24436, 1.56", "-26.2997, -24.4425, -9.45605, 1.32", "-25.9712, -25.7951, -10.6653, 1.32", "-25.6836, -27.0514, -11.8382, 2.04", "-25.4845, -28.0037, -12.7118, 2.04", "-25.3024, -29.0228, -13.7035, 1.08", "-25.1332, -30.3052, -15.0365, 1.44", "-25.0096, -31.5757, -16.4379, 1.44", "-24.8839, -32.7179, -17.7494, 0.96", "-24.7881, -33.4792, -18.6596, 1.56", "-24.6222, -34.5967, -20.0208, 1.56", "-24.3781, -35.8395, -21.5539, 2.16", "-24.1122, -36.8117, -22.7057, 1.56", "-23.8136, -37.5614, -23.4599, 1.56", "-23.028, -39.04, -24.8428, 1.8", "-22.6704, -39.5973, -25.3488, 1.8", "-22.2108, -40.2389, -25.9092, 1.8", "-21.6566, -40.9777, -26.5195, 1.8", "-20.0669, -43.0261, -28.3104, 1.56", "-18.4964, -44.9308, -30.0791, 1.56", "-17.8828, -45.6017, -30.7655, 1.56", "-17.4014, -46.1012, -31.5674, 1.56", "-16.8852, -46.6332, -32.5143, 1.8", "-15.822, -47.7414, -34.7679, 1.44", "-15.4073, -48.1794, -35.8653, 1.44", "-14.7206, -48.8841, -37.9936, 1.8", "-12.6366, -50.9023, -45.5113, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-25.0903, -6.87132, 0.0496425, 1.56", "-26.4233, -8.0402, 0.933375, 1.56", "-27.8886, -9.32502, 1.90477, 1.32", "-28.9684, -10.2719, 2.62067, 1.32", "-30.3951, -11.5229, 3.5665, 1.68", "-31.652, -12.6251, 4.39976, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "34.4097, -19.5371, 0.00941605, 0.119526", "47.2351, -27.3158, 0.00941605, 0.119526", "60.0606, -35.0945, 0.00941605, 0.119526" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.7292, 44.0572, -23.929, 0.84", "-15.7992, 45.1397, -16.9688, 0.84", "-15.5453, 45.4352, -15.0685, 1.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.7292, 44.0572, -23.929, 0.96", "-16.5015, 45.6298, -25.2305, 0.96", "-16.3905, 46.8341, -26.0599, 0.96", "-16.1586, 48.9297, -27.5499, 1.2", "-15.5654, 52.7736, -30.2265, 0.96", "-15.3465, 53.9509, -30.9456, 0.72", "-14.9224, 55.7899, -31.945, 1.44", "-14.5522, 56.8712, -32.4587, 1.44", "-13.0171, 60.416, -33.877, 0.84", "-12.3296, 61.5969, -34.4318, 0.72", "-11.0248, 63.4081, -35.5287, 1.68", "-9.84215, 64.8859, -36.5067, 0.72", "-8.53344, 66.3463, -37.5823, 1.2", "-7.26891, 67.6563, -38.638, 1.32", "-2.70021, 72.0178, -42.4463, 0.72", "-0.452823, 74.0414, -44.6479, 0.72" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.85707, 40.8479, -34.7664, 0.84", "-4.71796, 42.9122, -35.8353, 0.84", "-3.59798, 44.8534, -36.8937, 0.84", "-2.94755, 45.9902, -37.6237, 0.84", "-2.10459, 47.4789, -38.79, 0.6", "-1.38811, 48.7442, -39.7814, 0.6", "-0.367621, 50.5464, -41.1934, 1.32", "0.82668, 52.7424, -43.0793, 0.72", "2.17446, 55.1732, -45.1928, 1.56", "3.80357, 58.0507, -47.9165, 0.84" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.85707, 40.8479, -34.7664, 0.84", "-8.86448, 45.4486, -44.7284, 0.84", "-9.42915, 46.3124, -46.5988, 1.2", "-10.226, 47.5315, -49.2385, 0.84", "-10.9425, 48.6275, -51.6116, 1.2", "-12.3375, 50.7615, -56.2325, 0.84", "-13.0467, 51.8464, -58.5816, 1.2" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.8576, -35.4395, -29.5118, 0.72", "12.345, -38.98, -30.2846, 0.72", "11.7744, -40.2545, -30.4878, 1.2", "11.3624, -41.1197, -30.5988, 1.2", "10.678, -42.415, -30.8305, 0.6", "9.81334, -43.8971, -31.1368, 1.92", "8.8411, -45.4256, -31.5341, 1.08", "7.55443, -47.1443, -32.1516, 1.68", "6.65281, -48.1851, -32.6311, 1.68", "4.85865, -50.0241, -33.6743, 0.96", "4.04157, -50.757, -34.1789, 0.96", "2.63383, -51.8482, -35.1125, 1.44", "0.9629, -52.9628, -36.254, 0.96", "-0.235111, -53.7052, -37.1494, 1.44", "-1.52905, -54.502, -38.1461, 0.96", "-2.50123, -55.1367, -38.891, 1.56", "-4.07846, -56.2313, -40.1204, 0.84", "-5.61449, -57.3713, -41.2957, 1.56", "-7.70029, -59.0469, -42.898, 1.08", "-8.79649, -60.0015, -43.7489, 0.84", "-10.1362, -61.2838, -44.8212, 1.08", "-10.4317, -61.5889, -45.0605, 0.72", "-11.5779, -62.8707, -46.0112, 1.2", "-12.7209, -64.2325, -46.9576, 0.6", "-13.6131, -65.2825, -47.6185, 1.08", "-14.6109, -66.4244, -48.3542, 0.72", "-15.6917, -67.5959, -49.1762, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.8576, -35.4395, -29.5118, 0.48", "16.0203, -36.8301, -30.5626, 0.48", "18.1485, -38.226, -31.6369, 1.32", "19.5876, -39.1955, -32.3869, 0.96", "20.6363, -39.9022, -32.9355, 1.56", "22.4574, -41.1472, -33.8999, 0.96", "24.1513, -42.3388, -34.8163, 1.68", "25.9424, -43.6368, -35.852, 1.08", "27.3271, -44.7116, -36.6989, 1.8", "27.8515, -45.1622, -37.034, 1.8", "29.6731, -46.8934, -38.28, 1.08", "30.6729, -47.9909, -39.0573, 1.56", "31.3932, -48.9257, -39.6802, 1.08", "32.0604, -49.9542, -40.2989, 1.56", "32.9802, -51.6521, -41.215, 1.08", "33.5789, -52.9205, -41.8503, 1.68", "34.2699, -54.5817, -42.6159, 1.2", "34.8567, -56.0049, -43.2398, 1.2", "35.6333, -57.8881, -44.0391, 1.8", "36.3221, -59.7016, -44.8234, 1.2", "36.6842, -60.7882, -45.441, 1.8", "37.3928, -63.0317, -46.9207, 1.2", "38.1573, -65.4226, -48.6942, 1.68", "38.6542, -66.8796, -49.8612, 1.2", "39.3384, -68.8423, -51.6312, 1.68", "40.8615, -73.028, -55.7335, 1.2", "41.2496, -74.0537, -56.7987, 1.2", "41.5698, -74.8789, -57.7027, 1.2", "42.1485, -76.3278, -59.365, 1.56", "43.3573, -79.0125, -62.4859, 0.96", "44.0488, -80.2684, -63.8852, 1.44", "44.6506, -81.3123, -64.8594, 0.72", "45.1919, -82.3444, -65.9269, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "27.2524, -12.6535, -7.38283, 0.72", "29.2592, -11.7159, -7.44707, 0.72", "30.7046, -10.8995, -7.50789, 0.72", "31.7944, -10.2027, -7.5649, 0.72", "32.8157, -9.45722, -7.65679, 0.72", "34.0045, -8.48087, -7.87133, 0.48", "34.3406, -8.1581, -7.97445, 0.96", "35.534, -6.74178, -8.59219, 0.6", "36.508, -5.42552, -9.35886, 1.44", "37.4657, -4.04829, -10.3433, 0.72", "38.4926, -2.60554, -11.6546, 1.2", "39.7482, -0.841397, -13.401, 0.6", "41.0554, 1.00166, -15.3521, 1.2", "42.1181, 2.51751, -17.1134, 0.84", "43.0855, 3.90165, -18.8918, 1.68", "44.3359, 5.56289, -21.2834, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "27.2524, -12.6535, -7.38283, 0.48", "29.3112, -13.8395, -7.83875, 0.48", "30.8148, -14.8884, -8.27412, 0.96", "31.3895, -15.3648, -8.49273, 0.72", "33.4586, -17.3353, -9.41782, 1.2", "35.1593, -19.1788, -10.2733, 0.84", "36.6709, -21.0398, -11.1331, 1.68", "37.7439, -22.7319, -11.932, 0.96", "38.6324, -24.5595, -12.78, 1.92", "39.0375, -25.6421, -13.2632, 1.92", "39.4091, -27.1065, -13.8769, 0.96", "39.7068, -28.6701, -14.4542, 1.44", "39.8374, -29.5235, -14.6962, 1.44", "40.1926, -31.7905, -15.1372, 0.72", "40.3362, -32.5985, -15.2316, 0.72", "40.6348, -34.1393, -15.3265, 1.32", "41.2362, -36.7122, -15.179, 1.32", "41.5742, -37.8679, -14.9744, 1.32", "41.9452, -38.9263, -14.7052, 1.32", "42.2049, -39.5991, -14.4904, 1.32", "43.0047, -41.5592, -13.7804, 0.72", "44.1228, -44.1964, -12.6881, 1.8", "44.8564, -45.78, -12.0408, 1.8", "45.3593, -46.7863, -11.5885, 1.8" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "7.53703, -33.0404, 14.8074, 1.44", "9.06755, -34.2516, 14.9739, 1.44", "10.3629, -35.45, 15.2044, 1.44", "11.3425, -36.475, 15.4431, 1.44", "12.2679, -37.5826, 15.7373, 1.44", "12.9118, -38.415, 15.9602, 1.44", "13.8688, -39.7403, 16.3317, 1.44", "14.4087, -40.6051, 16.6061, 1.08", "14.9434, -41.5378, 16.9639, 1.44", "15.9225, -43.2864, 17.6525, 1.08", "16.5547, -44.3547, 18.0466, 1.56", "17.3955, -45.6339, 18.5137, 0.96", "18.0225, -46.4657, 18.8104, 0.96", "19.3112, -48.02, 19.3656, 0.96", "20.2452, -49.0698, 19.7527, 0.96", "20.8686, -49.7325, 20.0163, 0.96", "21.4774, -50.3779, 20.2824, 0.96", "22.3837, -51.3219, 20.6819, 0.72", "22.8352, -51.8148, 20.8909, 0.72", "23.6357, -52.7467, 21.2917, 0.72", "24.2719, -53.5158, 21.7038, 0.72", "24.62, -53.9331, 21.9443, 0.72", "25.1171, -54.4797, 22.2879, 0.72", "25.4864, -54.8664, 22.5473, 0.72", "26.3794, -55.7206, 23.1375, 0.72", "26.7731, -56.0597, 23.3654, 0.72", "27.4151, -56.5461, 23.7043, 0.72", "28.223, -57.1067, 24.121, 0.72", "35.0038, -61.5252, 26.7485, 0.72" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "7.53703, -33.0404, 14.8074, 1.44", "5.88736, -34.0831, 15.9924, 1.44", "3.28691, -35.9407, 17.4036, 1.44", "1.83597, -37.1294, 18.0397, 1.2", "0.474396, -38.4087, 18.5134, 1.2", "-1.71258, -40.6261, 19.0752, 1.08", "-2.85912, -41.7869, 19.2988, 1.08", "-5.45305, -44.3592, 19.3885, 1.32", "-6.80445, -45.6921, 19.2373, 1.32", "-8.19077, -47.1111, 19.0179, 0.96", "-9.52247, -48.5129, 18.7149, 0.96", "-11.2396, -50.3128, 18.2768, 1.32", "-12.8503, -51.9066, 17.8684, 0.96", "-14.1928, -53.1318, 17.6057, 0.96", "-16.7672, -55.382, 17.128, 1.44", "-19.4776, -57.6947, 16.6766, 0.96", "-20.2054, -58.3357, 16.5658, 0.96", "-22.5881, -60.5585, 16.2182, 1.8", "-24.3346, -62.2589, 15.832, 1.32", "-25.075, -62.9728, 15.649, 1.32", "-25.5971, -63.4604, 15.5241, 1.32", "-26.733, -64.4933, 15.3046, 0.96", "-27.3269, -65.0276, 15.1613, 0.96", "-31.4606, -68.7511, 14.0338, 2.4", "-34.2589, -71.297, 13.1933, 0.84", "-36.524, -73.357, 12.4873, 2.16", "-37.4167, -74.1624, 12.2055, 2.16", "-40.7449, -77.0594, 11.1789, 0.84", "-42.6714, -78.6623, 10.6697, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.6366, -50.9023, -45.5113, 0.84", "-11.9796, -52.0913, -46.3078, 0.84", "-11.5304, -52.9188, -46.8757, 0.96", "-10.8968, -54.1793, -47.7575, 0.72", "-9.90306, -56.2474, -49.2485, 0.72", "-8.75933, -58.8333, -51.1292, 1.08", "-7.92581, -60.8706, -52.5213, 1.08", "-7.61712, -61.6841, -53.0526, 1.08", "-6.93627, -63.8126, -54.3991, 0.6", "-6.46758, -65.6638, -55.5048, 1.32", "-6.16071, -67.3945, -56.4446, 1.32", "-5.88436, -69.4332, -57.533, 0.72", "-5.77417, -70.2748, -58.0014, 0.72", "-5.47399, -72.1266, -59.001, 1.2", "-5.13636, -73.7034, -59.7982, 0.48", "-4.766, -75.131, -60.5112, 1.08", "-4.2276, -76.8601, -61.4282, 0.6", "-3.38586, -79.286, -62.8458, 1.2", "-2.29028, -82.1227, -64.4389, 0.72", "-1.29618, -84.3765, -65.6284, 1.32", "-0.371149, -86.2456, -66.5602, 0.72", "0.536721, -87.9426, -67.3212, 1.08", "1.52649, -89.7558, -68.085, 0.48", "2.44915, -91.4124, -68.7709, 0.48", "3.34457, -93.0713, -69.5664, 1.32", "3.86218, -94.1469, -70.0736, 1.32", "4.531, -95.8702, -70.8292, 0.72", "4.80903, -97.3119, -71.4961, 1.32", "4.56489, -98.8568, -72.5525, 0.6", "3.847, -100.064, -73.8124, 1.56", "3.22875, -100.669, -74.6352, 1.56", "2.35524, -101.311, -75.6787, 0.72", "0.438517, -102.434, -77.8449, 1.68", "-1.96069, -103.719, -80.6111, 1.2", "-2.99989, -104.287, -81.9133, 1.56", "-4.13196, -105.01, -83.5286, 0.96", "-4.96923, -105.708, -84.943, 0.96", "-5.52144, -106.411, -86.1677, 1.56", "-6.0742, -107.539, -87.8155, 1.56", "-6.57285, -108.893, -89.3418, 1.2", "-6.91219, -109.932, -90.343, 1.2", "-7.54475, -111.795, -91.9982, 1.68", "-8.50508, -114.51, -94.2366, 0.96", "-9.05397, -115.985, -95.3248, 0.96", "-10.346, -119.31, -97.5617, 0.48", "-10.8411, -120.606, -98.3703, 1.56", "-12.0664, -124.081, -100.441, 0.96", "-12.2897, -124.785, -100.835, 0.96", "-12.9535, -127.481, -102.163, 1.44", "-13.1701, -129.182, -102.991, 1.08", "-13.1531, -131.625, -104.241, 0.72", "-12.9765, -133.45, -105.139, 0.72", "-12.7891, -134.469, -105.593, 0.72", "-12.2942, -136.756, -106.611, 1.32", "-11.7067, -139.073, -107.683, 0.72", "-11.3646, -140.44, -108.341, 0.72", "-11.1805, -141.131, -108.587, 0.72", "-10.9296, -142.023, -108.82, 0.72", "-10.3221, -144.057, -109.247, 1.2", "-9.64432, -146.231, -109.614, 0.6", "-9.01823, -148.177, -109.822, 1.2", "-7.39633, -152.992, -110.113, 0.72", "-6.64179, -155.071, -110.199, 0.72", "-5.92768, -156.876, -110.271, 1.32", "-5.19527, -158.615, -110.364, 0.6", "-4.20707, -160.969, -110.558, 1.2", "-3.18745, -163.471, -110.857, 0.72", "-2.47923, -165.35, -111.223, 0.72", "-1.7187, -167.508, -111.575, 1.2", "-1.08426, -169.405, -111.843, 0.6", "-0.6307, -170.798, -112.016, 1.2", "0.210566, -173.405, -112.301, 0.48", "0.81225, -175.339, -112.516, 1.44", "1.44536, -177.655, -112.676, 0.96", "1.69732, -178.731, -112.689, 0.96", "1.81016, -179.315, -112.695, 0.96", "1.98236, -180.504, -112.768, 0.96", "2.09036, -182.149, -113.021, 0.96", "2.10346, -184.112, -113.489, 1.68", "2.02611, -186.855, -114.045, 0.96", "1.95586, -188.848, -114.374, 1.32", "1.87576, -191.169, -114.652, 0.72", "1.84208, -193.257, -114.81, 0.72", "1.87941, -195.086, -114.884, 1.2", "2.20083, -199.478, -114.941, 0.6", "2.36557, -200.915, -114.909, 0.96", "2.73989, -203.107, -114.72, 0.6", "3.08078, -204.848, -114.496, 1.32", "3.29423, -205.953, -114.329, 1.32", "3.42411, -206.781, -114.208, 1.32", "3.53589, -207.964, -114.116, 1.32", "3.59543, -209.687, -113.92, 0.96", "3.53264, -212.085, -113.678, 1.44", "3.41333, -213.661, -113.477, 1.44", "3.21666, -215.383, -113.219, 0.72", "2.97115, -217.064, -112.922, 1.2", "2.60766, -219.14, -112.531, 0.48", "2.11216, -221.101, -112.146, 1.08", "1.58511, -223.059, -111.729, 0.6", "1.15686, -224.54, -111.415, 1.2", "0.583897, -226.348, -111.02, 0.6", "0.271447, -227.246, -110.812, 0.6", "-0.468325, -229.203, -110.312, 1.2", "-1.12887, -230.901, -109.767, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.6366, -50.9023, -45.5113, 0.96", "-11.4933, -51.8614, -46.7399, 0.96", "-10.3496, -52.821, -47.969, 0.96", "-8.97534, -53.9739, -49.4458, 2.64" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-31.652, -12.6251, 4.39976, 1.32", "-33.7199, -12.4783, 6.03169, 1.32", "-35.8869, -12.3245, 7.74175, 1.32", "-38.2296, -12.1583, 9.59055, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-31.652, -12.6251, 4.39976, 0.96", "-32.8172, -15.3431, 4.99519, 0.96", "-33.2306, -16.0631, 5.2437, 1.44", "-33.9342, -17.0103, 5.69732, 1.44", "-34.4986, -17.686, 6.08656, 1.44", "-35.221, -18.5286, 6.60229, 1.44", "-36.824, -20.414, 7.80274, 1.68", "-38.024, -21.6992, 8.8047, 1.2", "-39.1531, -22.9251, 9.81758, 1.2", "-39.6133, -23.4266, 10.2654, 1.2", "-40.134, -24.0464, 10.7934, 1.2", "-40.6257, -24.7092, 11.3106, 1.2", "-40.8529, -25.1509, 11.5702, 1.2", "-41.0548, -25.7375, 11.8713, 1.2", "-41.2567, -26.4717, 12.2187, 1.2", "-41.7684, -28.2038, 13.023, 1.56", "-42.1948, -29.2735, 13.5247, 1.08", "-42.6535, -30.1833, 13.943, 1.08", "-43.1331, -30.8947, 14.3228, 1.08", "-43.7413, -31.7193, 14.7731, 1.08", "-44.1433, -32.213, 15.0422, 1.08", "-45.3503, -33.4237, 15.8088, 1.08", "-45.7637, -33.7433, 16.0191, 1.08", "-47.3912, -34.6662, 16.7346, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-15.6917, -67.5959, -49.1762, 1.08", "-15.0581, -68.9188, -49.2881, 1.08", "-14.3221, -70.4556, -49.4182, 1.32" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-15.6917, -67.5959, -49.1762, 0.84", "-16.4539, -68.0397, -49.4329, 0.84", "-17.2078, -68.5424, -49.9226, 1.44", "-17.9597, -69.0437, -50.4111, 0.6", "-18.5981, -69.4693, -50.8257, 1.08", "-19.7928, -70.2658, -51.6017, 0.48", "-20.7858, -70.9279, -52.2467, 1.56", "-22.1119, -71.8556, -53.3481, 0.96" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "45.3593, -46.7863, -11.5885, 0.84", "45.4483, -47.7211, -11.5838, 0.84", "45.5124, -48.4362, -11.5774, 1.44", "45.7074, -50.4212, -11.5634, 0.48", "45.8685, -52.0625, -11.5518, 0.48", "45.9776, -53.1738, -11.544, 1.44", "46.1328, -54.7538, -11.5328, 0.6", "46.2105, -55.4424, -11.5357, 0.6", "46.3222, -56.3695, -11.5329, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "45.3593, -46.7863, -11.5885, 0.6", "46.4486, -47.6072, -11.4362, 0.6", "47.7701, -48.5413, -11.1785, 1.2", "48.1923, -48.8516, -11.0818, 1.2", "48.9591, -49.451, -10.8941, 0.6", "51.0098, -51.1716, -10.34, 1.68", "51.7849, -51.8439, -10.1088, 1.68", "53.0523, -52.9588, -9.69747, 0.84", "54.2061, -53.9328, -9.29447, 0.84", "55.3953, -54.9103, -8.85861, 1.44", "56.8334, -56.1064, -8.30621, 0.84", "58.5247, -57.5831, -7.63133, 1.56", "60.476, -59.2922, -6.83843, 1.08", "61.7131, -60.3513, -6.33961, 1.56", "63.3665, -61.697, -5.66681, 2.04", "65.0841, -63.0318, -4.95562, 1.2", "66.5164, -64.1055, -4.36465, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-42.6714, -78.6623, 10.6697, 0.48", "-42.8253, -80.0881, 11.1151, 0.48", "-42.9476, -81.5191, 11.4655, 1.56", "-43.115, -84.0393, 11.9201, 0.6", "-43.1347, -85.6626, 12.105, 1.8", "-43.115, -87.4308, 12.2242, 0.6", "-43.09, -88.3915, 12.2586, 0.6", "-43.0279, -89.5462, 12.2278, 0.6", "-42.9014, -90.886, 12.1436, 1.56", "-42.5905, -92.9744, 11.8816, 0.48", "-42.3107, -94.4141, 11.6876, 0.48", "-42.159, -95.0978, 11.5975, 0.48", "-41.8409, -96.4502, 11.4485, 1.68", "-41.3621, -98.386, 11.301, 1.08", "-41.0244, -99.6116, 11.2579, 1.08", "-40.0524, -107.233, 10.2936, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-42.6714, -78.6623, 10.6697, 0.72", "-45.3446, -79.3037, 10.3618, 0.72", "-46.9032, -79.7144, 10.1117, 1.56", "-48.3813, -80.1813, 9.85593, 0.72", "-50.595, -80.9736, 9.41956, 1.32", "-53.0372, -81.9965, 9.15504, 0.72", "-54.9355, -82.9018, 9.06878, 1.56", "-57.2715, -84.3003, 9.03324, 0.84", "-58.4671, -85.1619, 9.08985, 0.84", "-60.4732, -86.9169, 9.32452, 1.92", "-63.5459, -90.193, 10.0411, 0.96", "-64.6795, -91.559, 10.4159, 0.96", "-66.8032, -94.409, 11.3265, 0.72", "-67.4475, -95.3682, 11.6609, 1.32", "-68.5965, -97.171, 12.3066, 0.84", "-69.5328, -98.9333, 12.9114, 1.2", "-79.6815, -105.511, 14.0287, 1.2" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-8.97534, -53.9739, -49.4458, 0.96", "-10.1222, -55.7663, -50.9952, 0.96", "-11.1318, -57.5339, -52.5488, 0.96", "-11.5131, -58.2427, -53.1553, 0.96", "-11.8946, -58.9862, -53.771, 0.96", "-12.4582, -60.1618, -54.6853, 0.96", "-12.7396, -60.7771, -55.1407, 0.96", "-12.8506, -61.121, -55.3881, 0.96", "-13.074, -61.858, -55.8232, 0.96", "-13.2248, -62.2087, -56.0218, 0.96", "-13.7307, -63.0691, -56.5457, 0.96", "-14.1687, -63.5999, -56.9317, 0.96", "-14.9235, -64.3544, -57.6118, 0.6", "-16.0026, -65.305, -58.6114, 1.56", "-17.4854, -66.4695, -60.0058, 0.96", "-18.3985, -67.1164, -60.848, 0.96", "-20.1893, -68.3206, -62.4581, 0.72", "-22.0078, -69.5836, -64.0949, 1.2", "-23.3777, -70.5716, -65.316, 0.72", "-24.8401, -71.722, -66.6289, 1.2", "-26.5107, -73.1798, -68.1313, 0.72", "-27.289, -73.9422, -68.86, 0.72", "-29.1751, -76.0705, -70.7125, 1.2", "-30.3391, -77.5689, -71.8579, 1.2", "-31.6335, -79.3971, -73.1479, 0.72", "-32.0933, -80.1118, -73.62, 0.72", "-33.057, -81.6942, -74.6163, 1.32", "-33.7346, -82.8333, -75.3421, 1.32", "-34.7751, -84.5612, -76.4335, 0.6", "-35.5475, -85.7869, -77.2286, 1.08", "-37.5246, -88.4515, -79.135, 0.6", "-38.5532, -89.657, -80.0683, 1.2", "-39.5964, -90.7564, -80.9007, 0.6", "-40.7235, -91.7594, -81.721, 1.2", "-41.9048, -92.6544, -82.5455, 0.48", "-44.2984, -94.346, -84.1281, 1.44", "-44.8652, -94.7311, -84.4907, 1.44", "-46.623, -95.9835, -85.5995, 0.72", "-48.7322, -97.6495, -86.9281, 1.56", "-51.3664, -100.117, -88.6468, 0.84", "-52.139, -101.035, -89.1628, 0.84", "-53.5451, -103.096, -90.3022, 1.56", "-54.2714, -104.316, -91.0373, 1.56", "-55.357, -106.402, -92.4482, 0.72", "-56.329, -108.404, -94.0896, 1.2", "-57.3938, -110.77, -96.0816, 0.72", "-58.8095, -113.849, -98.9024, 1.56", "-59.5632, -115.454, -100.545, 1.08", "-60.2822, -116.92, -102.304, 1.56", "-61.9802, -120.025, -107.004, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.97534, -53.9739, -49.4458, 0.48", "-5.7553, -56.1257, -51.499, 0.48", "-4.297, -57.1242, -52.3806, 0.48", "-1.91074, -58.758, -53.8232, 1.56", "-0.00134325, -60.0654, -54.9775, 0.36", "0.65481, -60.5146, -55.3741, 0.36", "3.04109, -62.1485, -56.8167, 1.32", "4.63618, -63.2228, -57.5259, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-38.2296, -12.1583, 9.59055, 1.44", "-38.6664, -11.8535, 12.9165, 1.44", "-39.2529, -11.7669, 15.6091, 1.2", "-39.6081, -11.703, 16.9205, 1.2", "-39.9211, -11.6466, 18.0767, 0.84", "-40.0745, -11.619, 18.6431, 0.84", "-40.4119, -11.5583, 19.8889, 1.2", "-41.3976, -11.5612, 22.0808, 1.08", "-42.0981, -11.6323, 23.1125, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-38.2296, -12.1583, 9.59055, 1.92", "-39.4604, -11.6278, 10.6463, 1.92", "-40.1914, -11.2971, 11.174, 1.92", "-41.3382, -10.6831, 11.9157, 1.56", "-42.2938, -10.1123, 12.4958, 1.32", "-43.1891, -9.49246, 13.0386, 1.8", "-44.1816, -8.74031, 13.631, 1.2", "-44.9792, -8.02779, 14.0561, 1.2", "-46.0752, -6.97365, 14.633, 0.96", "-46.5871, -6.45301, 14.8829, 0.96", "-47.4462, -5.57911, 15.2469, 1.32", "-48.2632, -4.81656, 15.5708, 1.32", "-48.8502, -4.36457, 15.7634, 1.32", "-49.5585, -3.95299, 15.941, 0.96", "-50.088, -3.75234, 16.0274, 0.96", "-50.9549, -3.50477, 16.2227, 0.96", "-51.8971, -3.32602, 16.4006, 0.96", "-53.3789, -3.12337, 16.6571, 1.44", "-54.1386, -3.03798, 16.7855, 1.44", "-54.7337, -2.9461, 16.8973, 1.44", "-56.6373, -2.49754, 17.4553, 1.2" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-47.3912, -34.6662, 16.7346, 0.96", "-48.197, -34.6385, 17.8329, 0.96", "-49.3074, -34.5205, 19.4155, 0.96", "-50.3135, -34.3822, 20.8526, 0.96", "-52.0772, -34.0875, 23.3154, 0.6", "-53.7178, -33.7916, 25.516, 1.2", "-56.4329, -33.1506, 29.1523, 0.72", "-56.9319, -32.9734, 29.8932, 0.72", "-57.1735, -32.8666, 30.2672, 0.72", "-57.7201, -32.5631, 31.1332, 0.72", "-58.1374, -32.2167, 31.8583, 0.72", "-59.2144, -31.0098, 34.0345, 1.2", "-60.6498, -29.1502, 36.7664, 0.84", "-69.4846, -26.7903, 45.3289, 0.84" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-47.3912, -34.6662, 16.7346, 0.84", "-48.3801, -35.3495, 16.6222, 0.84", "-49.1417, -35.781, 16.5359, 0.84", "-50.2811, -36.422, 16.4183, 0.6", "-51.0625, -36.8334, 16.3414, 0.6", "-52.1806, -37.3681, 16.2302, 0.6", "-53.3865, -37.8941, 16.1094, 0.6", "-54.5252, -38.2984, 15.9617, 0.6", "-55.4425, -38.5831, 15.8587, 0.6", "-56.4207, -38.8527, 15.7895, 0.6", "-56.9699, -38.988, 15.7526, 0.6", "-57.6298, -39.1395, 15.711, 0.6", "-58.0335, -39.2027, 15.6769, 1.08", "-59.4009, -39.3407, 15.552, 0.72", "-60.9018, -39.4349, 15.4077, 0.72", "-62.0757, -39.5131, 15.2962, 0.72", "-62.6332, -39.5535, 15.2438, 0.72", "-64.0858, -39.5865, 15.0963, 1.08", "-72.6219, -42.9806, 13.0412, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "66.5164, -64.1055, -4.36465, 0.72", "66.3499, -66.6281, -5.16478, 0.72", "66.2481, -68.1717, -5.65439, 1.32" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "66.5164, -64.1055, -4.36465, 0.96", "67.5552, -65.31, -4.11959, 0.96", "68.5989, -66.6002, -3.80695, 0.96", "69.7767, -68.1258, -3.42652, 1.56", "71.1908, -69.9505, -2.99178, 0.84", "72.4621, -71.6046, -2.63518, 1.32", "74.0618, -73.8254, -2.10025, 0.6", "74.9758, -75.1779, -1.73598, 1.32", "76.2172, -77.0577, -1.20195, 0.72", "77.3141, -78.6983, -0.726116, 0.72", "78.1438, -79.8632, -0.342988, 1.68", "80.3586, -82.6667, 0.725363, 0.72", "81.7448, -84.1608, 1.42868, 0.72", "82.5923, -84.9236, 1.89727, 0.72", "83.4817, -85.5429, 2.46985, 0.72", "84.8803, -86.2434, 3.4273, 1.08", "85.9405, -86.6106, 4.15682, 0.48", "87.2006, -86.7889, 4.96076, 0.96", "88.2269, -86.8295, 5.6927, 0.96", "89.4736, -86.813, 6.67535, 0.72", "90.9255, -86.7364, 7.91092, 0.48", "96.3797, -92.0321, 11.2088, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-61.9802, -120.025, -107.004, 0.84", "-63.4279, -121.21, -105.566, 0.84", "-65.0082, -122.411, -104.204, 0.84", "-68.6056, -125.126, -101.542, 1.32", "-71.7147, -127.566, -99.4069, 0.84", "-72.6987, -128.379, -98.8086, 0.84", "-74.5528, -129.986, -97.7806, 1.44", "-77.1394, -132.503, -96.5345, 0.96", "-78.6629, -134.261, -96.0483, 0.96", "-79.68, -135.681, -96.116, 1.44", "-80.8859, -137.858, -96.6409, 0.96", "-81.1987, -138.568, -96.8617, 0.96", "-82.0128, -140.893, -97.7351, 1.44", "-82.6729, -143.11, -98.6088, 1.08", "-83.5128, -145.663, -99.6095, 1.44", "-84.4622, -148.236, -100.449, 0.84", "-85.0332, -149.616, -100.692, 0.84", "-85.3689, -150.363, -100.797, 0.84", "-86.8665, -153.304, -100.966, 1.2", "-87.6353, -154.62, -100.829, 1.2", "-89.7786, -157.63, -99.5819, 0.84", "-91.5087, -159.608, -97.8502, 0.48" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-61.9802, -120.025, -107.004, 0.72", "-62.4885, -121.847, -107.353, 0.72", "-63.7513, -125.347, -108.254, 1.2", "-64.5956, -127.288, -108.853, 0.84", "-65.6381, -129.369, -109.582, 1.32", "-67.1602, -132.174, -110.597, 0.72", "-68.2482, -134.067, -111.307, 1.32", "-70.1303, -137.002, -112.535, 0.84", "-71.9358, -139.515, -113.686, 1.32", "-73.7706, -141.953, -114.854, 0.84", "-74.7365, -143.203, -115.455, 0.84", "-76.559, -145.556, -116.6, 1.44", "-77.2231, -146.456, -117.04, 1.44", "-78.9733, -149.077, -118.355, 0.96", "-81.0778, -152.588, -120.161, 1.44", "-82.8866, -155.931, -121.882, 0.84", "-83.5095, -157.159, -122.514, 1.32", "-84.4958, -159.232, -123.506, 0.84", "-86.2297, -163.09, -125.066, 1.32", "-87.312, -165.552, -125.966, 0.84", "-88.7703, -168.726, -127.061, 1.44", "-89.5166, -170.276, -127.606, 0.72", "-91.1788, -173.407, -128.869, 1.32", "-93.2243, -177.034, -130.321, 0.6", "-95.1864, -180.292, -131.645, 1.08", "-97.3098, -183.643, -133.098, 0.48", "-99.6901, -187.237, -134.882, 1.44", "-101.786, -190.292, -136.673, 0.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "4.63618, -63.2228, -57.5259, 0.84", "3.04381, -64.6589, -58.4796, 0.84", "1.42, -65.974, -59.4711, 0.96", "0.268524, -66.8976, -60.2193, 0.72", "-0.549342, -67.5392, -60.7687, 0.72", "-2.1642, -68.768, -61.8781, 0.72", "-3.5258, -69.8041, -62.8188, 0.72", "-4.29862, -70.3759, -63.359, 0.72", "-5.28605, -71.1097, -64.1176, 0.72", "-6.39433, -72.0, -65.0082, 1.08", "-7.43089, -72.8605, -65.813, 1.08", "-7.89108, -73.2937, -66.1625, 1.08", "-8.81443, -74.2104, -66.8574, 0.6", "-9.52421, -74.8772, -67.3787, 0.6", "-11.2292, -76.3624, -68.52, 1.08", "-12.5546, -77.4827, -69.4113, 1.08", "-14.5367, -79.062, -70.6403, 0.6", "-15.8351, -80.0208, -71.3831, 0.6", "-18.2646, -81.7379, -72.6715, 1.56", "-20.078, -83.0167, -73.5975, 0.84", "-21.604, -84.1174, -74.36, 1.44", "-23.6007, -85.6373, -75.3527, 0.96", "-25.1876, -86.899, -76.1367, 1.56", "-27.0213, -88.5283, -77.1024, 0.96", "-27.8897, -89.4229, -77.575, 0.96", "-29.0963, -90.8216, -78.3313, 1.56", "-29.7346, -91.6388, -78.786, 1.56", "-31.08, -93.576, -79.9522, 1.08", "-32.3099, -95.4773, -81.1242, 1.68", "-33.4344, -97.3218, -82.2813, 1.68", "-34.6017, -99.3657, -83.5955, 0.96", "-35.5198, -101.163, -84.7718, 1.56", "-36.3261, -102.813, -85.8847, 0.96", "-37.1543, -104.7, -87.1404, 1.8", "-38.1908, -107.249, -88.8463, 1.2", "-38.8682, -109.081, -90.0939, 0.72", "-39.6548, -111.476, -91.7112, 1.2", "-40.1774, -113.215, -92.8771, 0.72", "-40.7168, -115.274, -94.2954, 0.72", "-40.9746, -116.42, -95.1237, 0.72", "-41.3149, -118.12, -96.4187, 1.2", "-41.5357, -119.259, -97.2907, 0.72", "-41.882, -121.057, -98.7249, 1.2", "-42.2436, -122.897, -100.215, 0.6", "-42.5266, -124.045, -101.137, 1.2", "-43.115, -125.924, -102.499, 0.6", "-43.5359, -127.084, -103.268, 0.6", "-44.215, -128.637, -104.223, 1.32", "-45.8431, -131.915, -106.158, 0.72", "-47.0538, -134.133, -107.42, 1.2", "-48.5259, -136.704, -108.849, 0.72", "-48.9284, -137.408, -109.237, 0.72", "-50.3048, -139.886, -110.613, 1.32", "-51.5101, -142.128, -111.913, 0.6", "-52.5762, -144.16, -113.138, 1.32", "-53.8485, -146.542, -114.668, 0.6", "-55.7629, -150.047, -117.057, 0.6", "-56.9093, -152.101, -118.495, 1.2", "-59.207, -156.164, -121.399, 0.72", "-60.0474, -157.532, -122.399, 1.2", "-61.5337, -159.805, -124.133, 1.08", "-62.7145, -161.519, -125.523, 0.72", "-63.7312, -162.919, -126.754, 0.72", "-64.8214, -164.473, -128.139, 1.2", "-65.9412, -166.199, -129.617, 0.6", "-67.1192, -168.161, -131.278, 1.08", "-67.9264, -169.712, -132.478, 0.6", "-68.6091, -171.174, -133.551, 1.2", "-69.9566, -174.411, -135.796, 0.6", "-70.5257, -176.012, -136.867, 0.6", "-70.8219, -176.985, -137.579, 1.2", "-71.447, -179.096, -139.085, 0.72", "-71.8442, -180.522, -140.077, 1.2", "-72.0967, -181.521, -140.787, 1.2", "-72.3845, -183.128, -142.132, 1.2", "-72.7406, -186.189, -145.149, 0.72" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.63618, -63.2228, -57.5259, 0.72", "7.2253, -64.6194, -57.7159, 0.72", "8.73349, -65.4641, -57.734, 0.72", "10.0585, -66.2685, -57.7952, 1.56", "11.4857, -67.1961, -57.9189, 0.96", "13.7922, -68.754, -58.2289, 1.56", "15.6163, -70.0132, -58.5604, 1.56", "17.2032, -71.1842, -58.9823, 0.96", "19.1725, -72.7489, -59.5902, 1.2", "20.5201, -73.957, -60.1143, 1.2", "21.7446, -75.2632, -60.7516, 1.56", "22.6864, -76.375, -61.3913, 1.56", "23.6286, -77.5796, -62.1556, 0.84", "24.6489, -78.9531, -63.1023, 1.44", "25.7667, -80.5875, -64.1947, 0.84", "26.6918, -82.1133, -65.1935, 1.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-42.0981, -11.6323, 23.1125, 0.72", "-43.412, -12.1106, 24.4486, 0.72", "-45.3908, -12.8044, 26.0635, 1.2", "-47.1711, -13.4286, 27.5164, 1.2", "-48.4238, -13.8679, 28.5388, 0.96", "-49.4954, -14.2436, 29.4133, 0.72", "-51.4031, -14.9125, 30.9702, 0.72", "-52.951, -15.5467, 32.1519, 1.2", "-60.7847, -18.2158, 39.8869, 1.2", "-70.4495, -19.5402, 45.6453, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-42.0981, -11.6323, 23.1125, 1.08", "-41.0179, -12.1832, 24.2175, 1.08", "-40.7352, -12.3365, 24.5418, 1.08", "-39.8992, -12.7221, 25.493, 0.96", "-39.2098, -13.0172, 26.2318, 0.96", "-38.166, -13.4333, 27.269, 1.44", "-36.698, -14.0185, 28.7277, 1.44", "-35.623, -14.3763, 29.7622, 0.96", "-34.878, -14.6292, 30.5027, 1.32", "-34.3702, -14.8349, 31.0396, 1.32", "-33.9013, -15.0282, 31.5265, 1.32", "-29.3451, -17.5858, 38.0585, 1.32", "-24.4481, -20.029, 44.3845, 1.32", "-19.0363, -23.103, 49.973, 1.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-56.6373, -2.49754, 17.4553, 0.72", "-57.7329, -2.01974, 18.6194, 0.72", "-58.4179, -1.72101, 19.3472, 0.72", "-59.119, -1.41523, 20.0921, 0.72", "-60.3343, -0.885227, 21.3834, 1.2", "-62.0318, -0.144929, 23.187, 0.72", "-63.1401, 0.338392, 24.3645, 1.08", "-69.173, 2.4304, 32.0398, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-56.6373, -2.49754, 17.4553, 1.08", "-57.8238, -2.43603, 18.8472, 1.08", "-58.4785, -2.50101, 19.5812, 1.08", "-59.9097, -2.7783, 21.1331, 1.2", "-60.8567, -2.9693, 22.1391, 1.2", "-61.5009, -3.09472, 22.895, 1.44", "-62.3902, -3.24613, 23.9796, 1.08", "-62.8782, -3.37438, 24.6304, 0.84", "-63.3623, -3.50208, 25.302, 0.84", "-64.0089, -3.6194, 26.2139, 0.84", "-64.974, -3.60791, 27.5154, 1.2", "-65.7636, -3.46094, 28.5188, 1.2", "-66.8778, -3.15524, 29.7592, 1.08", "-67.4543, -3.01377, 30.3084, 0.96", "-68.214, -2.82833, 30.9806, 0.96", "-69.6037, -2.52809, 32.0686, 1.32", "-70.2676, -2.39461, 32.5016, 1.32", "-71.8742, -2.05513, 33.4632, 1.32", "-73.5212, -1.69526, 34.2988, 0.84", "-81.343, 0.0486049, 41.1647, 0.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.6918, -82.1133, -65.1935, 0.6", "28.8818, -82.3225, -66.5689, 0.6", "30.3246, -82.4603, -67.475, 0.6" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "26.6918, -82.1133, -65.1935, 0.6", "26.2807, -85.0864, -66.2398, 0.6", "26.1312, -87.5583, -67.5549, 1.08", "26.1424, -89.3306, -68.6615, 1.08", "26.2094, -90.6901, -69.6027, 1.08", "26.3207, -92.1567, -70.6503, 1.08", "26.6275, -95.436, -72.7876, 0.72", "26.9911, -97.5212, -74.104, 1.2", "27.2155, -98.6624, -74.7699, 1.2", "27.3993, -99.6575, -75.2837, 1.2", "27.7176, -101.543, -76.1325, 0.84", "28.2184, -104.454, -77.4391, 0.6", "28.8231, -108.014, -78.8642, 1.32", "29.1515, -110.071, -79.7211, 1.32", "29.4715, -112.2, -80.781, 0.72", "29.701, -113.786, -81.6383, 1.2", "30.2345, -117.835, -84.0206, 1.2", "30.3456, -118.893, -84.7113, 0.72", "30.5423, -121.356, -86.3641, 1.56", "30.6576, -124.568, -88.4898, 0.72", "30.6224, -127.131, -90.165, 0.72", "30.5182, -129.167, -91.4737, 1.44", "30.3765, -130.86, -92.4877, 0.84", "30.2868, -132.135, -93.2607, 0.84", "30.2846, -134.022, -94.2745, 1.44", "30.5557, -137.148, -95.8141, 0.84", "30.7285, -138.524, -96.5468, 0.84", "30.9968, -139.955, -97.3023, 1.32", "31.3199, -141.196, -97.9094, 1.32", "32.6516, -145.108, -99.6921, 0.72", "33.517, -146.849, -100.333, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-19.0363, -23.103, 49.973, 0.96", "-13.343, -27.0105, 56.1697, 0.96", "-8.41309, -30.171, 63.3661, 0.96", "-4.62103, -31.7535, 71.6846, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-19.0363, -23.103, 49.973, 0.84", "-12.608, -24.8279, 58.3753, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "33.517, -146.849, -100.333, 0.6", "34.6699, -147.18, -100.237, 0.6", "35.6981, -147.561, -100.108, 0.96", "37.0434, -148.06, -99.9393, 0.6", "37.8809, -148.37, -99.8343, 0.6", "39.224, -148.868, -99.6659, 1.2", "40.8327, -149.464, -99.4642, 0.72", "41.9172, -149.968, -99.2938, 1.2" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "33.517, -146.849, -100.333, 0.48", "33.8901, -148.03, -100.736, 0.48", "34.5151, -149.494, -101.721, 1.08", "35.1898, -151.098, -102.756, 0.6", "35.6824, -152.391, -103.53, 0.36", "36.3164, -154.048, -104.488, 0.36", "36.8971, -155.532, -105.353, 0.84", "38.0951, -158.402, -107.215, 0.6", "39.0708, -160.574, -108.738, 0.6", "39.9837, -162.515, -110.119, 1.08", "40.385, -163.355, -110.67, 0.72", "40.9809, -164.57, -111.386, 1.08", "42.1086, -166.655, -112.551, 0.48", "43.1982, -168.421, -113.512, 0.48", "43.7111, -169.136, -113.955, 0.48", "44.6381, -170.328, -114.709, 0.48", "45.4174, -171.327, -115.316, 0.48", "46.6433, -172.835, -116.157, 1.08", "47.3552, -173.643, -116.568, 0.48", "48.6145, -174.986, -117.295, 1.08" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "axon_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "axon_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_11", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_SBC_02fff5e56a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, axon_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, axon_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999997377214663)
    connect dend_34(0), soma_0(0.4999997377214663)
    connect dend_27(0), soma_0(0.4999997377214663)
    connect dend_0(0), soma_0(0.4999997377214663)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.46247, 5.85861, -0.00377942, 7.43125 ) }
    soma_0 { pt3dadd( -6.65141, 5.3667, -0.00311965, 9.16559 ) }
    soma_0 { pt3dadd( -5.84034, 4.87478, -0.00245988, 11.1008 ) }
    soma_0 { pt3dadd( -5.02928, 4.38287, -0.0018001, 12.7187 ) }
    soma_0 { pt3dadd( -4.21821, 3.89095, -0.00114033, 13.407 ) }
    soma_0 { pt3dadd( -3.40715, 3.39904, -4.80554E-4, 14.0331 ) }
    soma_0 { pt3dadd( -2.59608, 2.90712, 1.79219E-4, 14.6433 ) }
    soma_0 { pt3dadd( -1.78502, 2.41521, 8.38993E-4, 15.2536 ) }
    soma_0 { pt3dadd( -0.973954, 1.92329, 0.00149877, 15.5093 ) }
    soma_0 { pt3dadd( -0.162889, 1.43138, 0.00215854, 15.3073 ) }
    soma_0 { pt3dadd( 0.648176, 0.939463, 0.00281831, 15.1053 ) }
    soma_0 { pt3dadd( 1.45924, 0.447548, 0.00347809, 14.9033 ) }
    soma_0 { pt3dadd( 2.27031, -0.0443665, 0.00413786, 14.4818 ) }
    soma_0 { pt3dadd( 3.08137, -0.536281, 0.00479764, 13.7638 ) }
    soma_0 { pt3dadd( 3.89244, -1.0282, 0.00545741, 12.8143 ) }
    soma_0 { pt3dadd( 4.7035, -1.52011, 0.00611718, 11.7232 ) }
    soma_0 { pt3dadd( 5.51457, -2.01203, 0.00677696, 10.29 ) }
    soma_0 { pt3dadd( 6.32563, -2.50394, 0.00743673, 8.85677 ) }
    soma_0 { pt3dadd( 7.1367, -2.99586, 0.0080965, 7.04177 ) }
    soma_0 { pt3dadd( 7.94776, -3.48777, 0.00875628, 4.64246 ) }
    soma_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 2.78846 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.16814, 8.01014, -1.4503, 1.32 ) }
    dend_47 { pt3dadd( -2.60596, 9.24009, -1.99541, 1.32 ) }
    dend_47 { pt3dadd( -2.93658, 10.173, -2.46321, 1.32 ) }
    dend_47 { pt3dadd( -3.75461, 12.2834, -3.61986, 2.04 ) }
    dend_47 { pt3dadd( -5.00742, 14.995, -5.2235, 1.32 ) }
    dend_47 { pt3dadd( -5.94214, 16.9571, -6.39095, 1.8 ) }
    dend_47 { pt3dadd( -6.84469, 18.8516, -7.51824, 1.32 ) }
    dend_47 { pt3dadd( -7.60511, 20.4106, -8.52875, 1.68 ) }
    dend_47 { pt3dadd( -8.2695, 21.7402, -9.47252, 1.68 ) }
    dend_47 { pt3dadd( -9.25134, 23.6392, -10.9895, 1.08 ) }
    dend_47 { pt3dadd( -9.97492, 24.8197, -11.8843, 1.56 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.03186, -3.37986, -1.5003, 1.8 ) }
    dend_34 { pt3dadd( 6.89949, -3.99113, -2.43553, 1.8 ) }
    dend_34 { pt3dadd( 8.73913, -5.2872, -4.41849, 1.8 ) }
    dend_34 { pt3dadd( 9.99334, -6.1708, -5.77038, 1.8 ) }
    dend_34 { pt3dadd( 11.1717, -7.001, -7.04057, 2.16 ) }
    dend_34 { pt3dadd( 13.2193, -8.44364, -9.24779, 2.4 ) }
    dend_34 { pt3dadd( 13.5327, -8.66442, -9.58558, 2.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.09186, -5.27986, 5.0897, 2.64 ) }
    dend_27 { pt3dadd( 3.16408, -5.78529, 5.45446, 2.64 ) }
    dend_27 { pt3dadd( 3.2816, -6.41298, 5.87872, 2.64 ) }
    dend_27 { pt3dadd( 3.92491, -8.98912, 7.45993, 1.92 ) }
    dend_27 { pt3dadd( 4.3961, -10.4928, 8.30328, 1.92 ) }
    dend_27 { pt3dadd( 4.96406, -12.0276, 9.09887, 1.92 ) }
    dend_27 { pt3dadd( 5.66562, -13.7844, 9.94587, 2.4 ) }
    dend_27 { pt3dadd( 6.01184, -14.5586, 10.291, 2.4 ) }
    dend_27 { pt3dadd( 6.70798, -15.9709, 10.8719, 1.8 ) }
    dend_27 { pt3dadd( 7.67119, -17.6932, 11.4268, 1.56 ) }
    dend_27 { pt3dadd( 8.67496, -19.3281, 11.8821, 1.8 ) }
    dend_27 { pt3dadd( 9.28185, -20.2652, 12.089, 1.8 ) }
    dend_27 { pt3dadd( 9.49529, -20.5797, 12.1553, 1.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.79815, 0.930143, -0.0303001, 5.65 ) }
    dend_0 { pt3dadd( -10.3922, -0.240187, -0.0183076, 4.93 ) }
    dend_0 { pt3dadd( -11.8839, -0.913157, -0.0114115, 4.81 ) }
    dend_0 { pt3dadd( -15.3206, -2.46365, 0.00447654, 1.92 ) }
    dend_0 { pt3dadd( -17.7152, -3.54401, 0.0155471, 1.68 ) }
    dend_0 { pt3dadd( -20.2601, -4.69216, 0.0273124, 1.68 ) }
    dend_0 { pt3dadd( -25.0903, -6.87132, 0.0496425, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 1.21105 ) }
    axon_0 { pt3dadd( 21.5843, -11.7584, 0.00941605, 1.21105 ) }
    axon_0 { pt3dadd( 34.4097, -19.5371, 0.00941605, 1.21105 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 62/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.97492, 24.8197, -11.8843, 0.6 ) }
    dend_51 { pt3dadd( -11.0275, 26.9659, -12.2707, 0.6 ) }
    dend_51 { pt3dadd( -11.7638, 28.4527, -12.683, 0.6 ) }
    dend_51 { pt3dadd( -12.2733, 29.4107, -13.0091, 0.6 ) }
    dend_51 { pt3dadd( -12.9555, 30.9146, -13.792, 1.68 ) }
    dend_51 { pt3dadd( -13.6276, 32.846, -14.9523, 0.72 ) }
    dend_51 { pt3dadd( -13.8816, 33.5758, -15.3908, 0.72 ) }
    dend_51 { pt3dadd( -14.8679, 36.6452, -17.5123, 0.6 ) }
    dend_51 { pt3dadd( -15.4765, 38.7151, -19.1234, 1.44 ) }
    dend_51 { pt3dadd( -16.435, 42.4365, -22.3449, 0.84 ) }
    dend_51 { pt3dadd( -16.7292, 44.0572, -23.929, 1.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -9.97492, 24.8197, -11.8843, 1.32 ) }
    dend_48 { pt3dadd( -9.51665, 26.2375, -14.2942, 1.32 ) }
    dend_48 { pt3dadd( -8.82637, 28.7321, -18.2914, 1.32 ) }
    dend_48 { pt3dadd( -8.35424, 30.5224, -20.9398, 1.32 ) }
    dend_48 { pt3dadd( -7.81869, 32.5417, -23.7906, 0.96 ) }
    dend_48 { pt3dadd( -7.29853, 34.5029, -26.5595, 0.96 ) }
    dend_48 { pt3dadd( -6.9289, 35.8966, -28.527, 1.2 ) }
    dend_48 { pt3dadd( -6.52505, 37.7084, -31.0529, 0.48 ) }
    dend_48 { pt3dadd( -6.10812, 39.6279, -33.4132, 1.32 ) }
    dend_48 { pt3dadd( -5.85707, 40.8479, -34.7664, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.5327, -8.66442, -9.58558, 1.56 ) }
    dend_42 { pt3dadd( 13.9129, -9.26301, -10.9244, 1.56 ) }
    dend_42 { pt3dadd( 14.6431, -10.9287, -13.9349, 1.32 ) }
    dend_42 { pt3dadd( 14.842, -11.9333, -15.5494, 1.32 ) }
    dend_42 { pt3dadd( 14.9361, -12.9517, -16.9552, 1.68 ) }
    dend_42 { pt3dadd( 14.9627, -13.7021, -17.8833, 1.68 ) }
    dend_42 { pt3dadd( 14.9629, -14.3571, -18.5914, 1.68 ) }
    dend_42 { pt3dadd( 14.8678, -15.8168, -19.781, 1.2 ) }
    dend_42 { pt3dadd( 14.441, -19.063, -21.6811, 1.2 ) }
    dend_42 { pt3dadd( 14.2211, -20.4957, -22.4032, 1.56 ) }
    dend_42 { pt3dadd( 14.1296, -21.1104, -22.6843, 1.56 ) }
    dend_42 { pt3dadd( 13.9424, -22.5568, -23.3088, 1.2 ) }
    dend_42 { pt3dadd( 13.8051, -23.7489, -23.8392, 1.2 ) }
    dend_42 { pt3dadd( 13.635, -26.0695, -24.9005, 1.2 ) }
    dend_42 { pt3dadd( 13.6248, -26.9686, -25.3106, 1.2 ) }
    dend_42 { pt3dadd( 13.641, -27.6066, -25.6212, 1.56 ) }
    dend_42 { pt3dadd( 13.6916, -29.2243, -26.4851, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 13.7421, -30.8865, -27.458, 2.04 ) }
    dend_42 { pt3dadd( 13.7614, -31.6863, -27.9193, 2.04 ) }
    dend_42 { pt3dadd( 13.7858, -33.1088, -28.5561, 1.32 ) }
    dend_42 { pt3dadd( 13.8576, -35.4395, -29.5118, 2.16 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.5327, -8.66442, -9.58558, 1.32 ) }
    dend_35 { pt3dadd( 16.5648, -9.54602, -9.09877, 1.32 ) }
    dend_35 { pt3dadd( 18.1617, -10.0104, -8.84237, 1.32 ) }
    dend_35 { pt3dadd( 21.4556, -10.9681, -8.31353, 1.32 ) }
    dend_35 { pt3dadd( 22.7611, -11.3476, -8.10394, 1.32 ) }
    dend_35 { pt3dadd( 27.2524, -12.6535, -7.38283, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 9.49529, -20.5797, 12.1553, 1.2 ) }
    dend_33 { pt3dadd( 10.5035, -21.2362, 12.9108, 1.2 ) }
    dend_33 { pt3dadd( 11.974, -22.187, 14.0369, 1.2 ) }
    dend_33 { pt3dadd( 13.0472, -22.8561, 14.8695, 1.2 ) }
    dend_33 { pt3dadd( 14.3533, -23.6421, 15.8744, 2.04 ) }
    dend_33 { pt3dadd( 16.7971, -25.0824, 17.7289, 1.08 ) }
    dend_33 { pt3dadd( 18.0294, -25.8187, 18.661, 1.08 ) }
    dend_33 { pt3dadd( 18.7848, -26.3102, 19.2778, 1.08 ) }
    dend_33 { pt3dadd( 19.6339, -26.8584, 19.9805, 1.08 ) }
    dend_33 { pt3dadd( 20.3533, -27.2875, 20.5022, 1.08 ) }
    dend_33 { pt3dadd( 20.9972, -27.6487, 20.8746, 1.08 ) }
    dend_33 { pt3dadd( 21.5063, -27.8992, 21.071, 1.08 ) }
    dend_33 { pt3dadd( 22.6091, -28.4669, 21.4899, 1.08 ) }
    dend_33 { pt3dadd( 23.2625, -28.8129, 21.7046, 1.08 ) }
    dend_33 { pt3dadd( 24.0403, -29.2481, 22.0284, 1.08 ) }
    dend_33 { pt3dadd( 24.6558, -29.5948, 22.3113, 1.08 ) }
    dend_33 { pt3dadd( 25.5677, -30.1, 22.7901, 1.08 ) }
    dend_33 { pt3dadd( 26.107, -30.3694, 23.1114, 1.08 ) }
    dend_33 { pt3dadd( 27.6413, -31.0342, 24.1713, 1.92 ) }
    dend_33 { pt3dadd( 29.5564, -31.6477, 25.6744, 0.96 ) }
    dend_33 { pt3dadd( 30.1342, -31.7482, 26.1708, 0.96 ) }
    dend_33 { pt3dadd( 31.4431, -31.7259, 27.348, 0.72 ) }
    dend_33 { pt3dadd( 32.3009, -31.4959, 28.1108, 1.32 ) }
    dend_33 { pt3dadd( 33.1853, -31.0459, 28.8713, 1.32 ) }
    dend_33 { pt3dadd( 34.5647, -30.044, 29.8985, 0.84 ) }
    dend_33 { pt3dadd( 34.9661, -29.731, 30.1161, 0.84 ) }
    dend_33 { pt3dadd( 35.6941, -29.1903, 30.4426, 0.84 ) }
    dend_33 { pt3dadd( 36.3511, -28.7567, 30.6055, 0.84 ) }
    dend_33 { pt3dadd( 36.8636, -28.5052, 30.6466, 0.84 ) }
    dend_33 { pt3dadd( 38.322, -27.993, 30.6012, 0.72 ) }
    dend_33 { pt3dadd( 39.2632, -27.7978, 30.4915, 0.72 ) }
    dend_33 { pt3dadd( 39.8778, -27.6842, 30.3985, 0.72 ) }
    dend_33 { pt3dadd( 41.0952, -27.4659, 30.1413, 0.72 ) }
    dend_33 { pt3dadd( 41.6891, -27.3778, 29.9907, 0.72 ) }
    dend_33 { pt3dadd( 41.9566, -27.337, 29.9042, 0.72 ) }
    dend_33 { pt3dadd( 43.3183, -27.115, 29.2359, 0.96 ) }
    dend_33 { pt3dadd( 49.8954, -28.7324, 33.2792, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 9.49529, -20.5797, 12.1553, 0.96 ) }
    dend_28 { pt3dadd( 9.02416, -23.5776, 12.7934, 0.96 ) }
    dend_28 { pt3dadd( 8.52825, -26.7332, 13.465, 1.08 ) }
    dend_28 { pt3dadd( 8.27284, -28.3584, 13.8109, 1.08 ) }
    dend_28 { pt3dadd( 7.83225, -31.1619, 14.4076, 1.56 ) }
    dend_28 { pt3dadd( 7.53703, -33.0404, 14.8074, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -25.0903, -6.87132, 0.0496425, 1.08 ) }
    dend_14 { pt3dadd( -25.8256, -8.94679, -0.446234, 1.08 ) }
    dend_14 { pt3dadd( -26.0931, -9.76451, -0.688136, 1.08 ) }
    dend_14 { pt3dadd( -26.4055, -10.8747, -1.03843, 1.08 ) }
    dend_14 { pt3dadd( -26.6383, -11.9127, -1.3431, 1.08 ) }
    dend_14 { pt3dadd( -26.8825, -13.2078, -1.81361, 1.08 ) }
    dend_14 { pt3dadd( -27.0422, -14.1601, -2.22102, 1.32 ) }
    dend_14 { pt3dadd( -27.374, -16.7415, -3.49999, 1.8 ) }
    dend_14 { pt3dadd( -27.4111, -17.4486, -3.89857, 1.8 ) }
    dend_14 { pt3dadd( -27.3694, -18.754, -4.75196, 1.56 ) }
    dend_14 { pt3dadd( -27.1337, -20.8341, -6.30402, 1.44 ) }
    dend_14 { pt3dadd( -26.9123, -22.0177, -7.29768, 1.44 ) }
    dend_14 { pt3dadd( -26.6595, -23.08, -8.24436, 1.56 ) }
    dend_14 { pt3dadd( -26.2997, -24.4425, -9.45605, 1.32 ) }
    dend_14 { pt3dadd( -25.9712, -25.7951, -10.6653, 1.32 ) }
    dend_14 { pt3dadd( -25.6836, -27.0514, -11.8382, 2.04 ) }
    dend_14 { pt3dadd( -25.4845, -28.0037, -12.7118, 2.04 ) }
    dend_14 { pt3dadd( -25.3024, -29.0228, -13.7035, 1.08 ) }
    dend_14 { pt3dadd( -25.1332, -30.3052, -15.0365, 1.44 ) }
    dend_14 { pt3dadd( -25.0096, -31.5757, -16.4379, 1.44 ) }
    dend_14 { pt3dadd( -24.8839, -32.7179, -17.7494, 0.96 ) }
    dend_14 { pt3dadd( -24.7881, -33.4792, -18.6596, 1.56 ) }
    dend_14 { pt3dadd( -24.6222, -34.5967, -20.0208, 1.56 ) }
    dend_14 { pt3dadd( -24.3781, -35.8395, -21.5539, 2.16 ) }
    dend_14 { pt3dadd( -24.1122, -36.8117, -22.7057, 1.56 ) }
    dend_14 { pt3dadd( -23.8136, -37.5614, -23.4599, 1.56 ) }
    dend_14 { pt3dadd( -23.028, -39.04, -24.8428, 1.8 ) }
    dend_14 { pt3dadd( -22.6704, -39.5973, -25.3488, 1.8 ) }
    dend_14 { pt3dadd( -22.2108, -40.2389, -25.9092, 1.8 ) }
    dend_14 { pt3dadd( -21.6566, -40.9777, -26.5195, 1.8 ) }
    dend_14 { pt3dadd( -20.0669, -43.0261, -28.3104, 1.56 ) }
    dend_14 { pt3dadd( -18.4964, -44.9308, -30.0791, 1.56 ) }
    dend_14 { pt3dadd( -17.8828, -45.6017, -30.7655, 1.56 ) }
    dend_14 { pt3dadd( -17.4014, -46.1012, -31.5674, 1.56 ) }
    dend_14 { pt3dadd( -16.8852, -46.6332, -32.5143, 1.8 ) }
    dend_14 { pt3dadd( -15.822, -47.7414, -34.7679, 1.44 ) }
    dend_14 { pt3dadd( -15.4073, -48.1794, -35.8653, 1.44 ) }
    dend_14 { pt3dadd( -14.7206, -48.8841, -37.9936, 1.8 ) }
    dend_14 { pt3dadd( -12.6366, -50.9023, -45.5113, 1.8 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -25.0903, -6.87132, 0.0496425, 1.56 ) }
    dend_1 { pt3dadd( -26.4233, -8.0402, 0.933375, 1.56 ) }
    dend_1 { pt3dadd( -27.8886, -9.32502, 1.90477, 1.32 ) }
    dend_1 { pt3dadd( -28.9684, -10.2719, 2.62067, 1.32 ) }
    dend_1 { pt3dadd( -30.3951, -11.5229, 3.5665, 1.68 ) }
    dend_1 { pt3dadd( -31.652, -12.6251, 4.39976, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 34.4097, -19.5371, 0.00941605, 0.119526 ) }
    axon_1 { pt3dadd( 47.2351, -27.3158, 0.00941605, 0.119526 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 60.0606, -35.0945, 0.00941605, 0.119526 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 1/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.7292, 44.0572, -23.929, 0.84 ) }
    dend_53 { pt3dadd( -15.7992, 45.1397, -16.9688, 0.84 ) }
    dend_53 { pt3dadd( -15.5453, 45.4352, -15.0685, 1.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.7292, 44.0572, -23.929, 0.96 ) }
    dend_52 { pt3dadd( -16.5015, 45.6298, -25.2305, 0.96 ) }
    dend_52 { pt3dadd( -16.3905, 46.8341, -26.0599, 0.96 ) }
    dend_52 { pt3dadd( -16.1586, 48.9297, -27.5499, 1.2 ) }
    dend_52 { pt3dadd( -15.5654, 52.7736, -30.2265, 0.96 ) }
    dend_52 { pt3dadd( -15.3465, 53.9509, -30.9456, 0.72 ) }
    dend_52 { pt3dadd( -14.9224, 55.7899, -31.945, 1.44 ) }
    dend_52 { pt3dadd( -14.5522, 56.8712, -32.4587, 1.44 ) }
    dend_52 { pt3dadd( -13.0171, 60.416, -33.877, 0.84 ) }
    dend_52 { pt3dadd( -12.3296, 61.5969, -34.4318, 0.72 ) }
    dend_52 { pt3dadd( -11.0248, 63.4081, -35.5287, 1.68 ) }
    dend_52 { pt3dadd( -9.84215, 64.8859, -36.5067, 0.72 ) }
    dend_52 { pt3dadd( -8.53344, 66.3463, -37.5823, 1.2 ) }
    dend_52 { pt3dadd( -7.26891, 67.6563, -38.638, 1.32 ) }
    dend_52 { pt3dadd( -2.70021, 72.0178, -42.4463, 0.72 ) }
    dend_52 { pt3dadd( -0.452823, 74.0414, -44.6479, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 20/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.85707, 40.8479, -34.7664, 0.84 ) }
    dend_50 { pt3dadd( -4.71796, 42.9122, -35.8353, 0.84 ) }
    dend_50 { pt3dadd( -3.59798, 44.8534, -36.8937, 0.84 ) }
    dend_50 { pt3dadd( -2.94755, 45.9902, -37.6237, 0.84 ) }
    dend_50 { pt3dadd( -2.10459, 47.4789, -38.79, 0.6 ) }
    dend_50 { pt3dadd( -1.38811, 48.7442, -39.7814, 0.6 ) }
    dend_50 { pt3dadd( -0.367621, 50.5464, -41.1934, 1.32 ) }
    dend_50 { pt3dadd( 0.82668, 52.7424, -43.0793, 0.72 ) }
    dend_50 { pt3dadd( 2.17446, 55.1732, -45.1928, 1.56 ) }
    dend_50 { pt3dadd( 3.80357, 58.0507, -47.9165, 0.84 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.85707, 40.8479, -34.7664, 0.84 ) }
    dend_49 { pt3dadd( -8.86448, 45.4486, -44.7284, 0.84 ) }
    dend_49 { pt3dadd( -9.42915, 46.3124, -46.5988, 1.2 ) }
    dend_49 { pt3dadd( -10.226, 47.5315, -49.2385, 0.84 ) }
    dend_49 { pt3dadd( -10.9425, 48.6275, -51.6116, 1.2 ) }
    dend_49 { pt3dadd( -12.3375, 50.7615, -56.2325, 0.84 ) }
    dend_49 { pt3dadd( -13.0467, 51.8464, -58.5816, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.8576, -35.4395, -29.5118, 0.72 ) }
    dend_44 { pt3dadd( 12.345, -38.98, -30.2846, 0.72 ) }
    dend_44 { pt3dadd( 11.7744, -40.2545, -30.4878, 1.2 ) }
    dend_44 { pt3dadd( 11.3624, -41.1197, -30.5988, 1.2 ) }
    dend_44 { pt3dadd( 10.678, -42.415, -30.8305, 0.6 ) }
    dend_44 { pt3dadd( 9.81334, -43.8971, -31.1368, 1.92 ) }
    dend_44 { pt3dadd( 8.8411, -45.4256, -31.5341, 1.08 ) }
    dend_44 { pt3dadd( 7.55443, -47.1443, -32.1516, 1.68 ) }
    dend_44 { pt3dadd( 6.65281, -48.1851, -32.6311, 1.68 ) }
    dend_44 { pt3dadd( 4.85865, -50.0241, -33.6743, 0.96 ) }
    dend_44 { pt3dadd( 4.04157, -50.757, -34.1789, 0.96 ) }
    dend_44 { pt3dadd( 2.63383, -51.8482, -35.1125, 1.44 ) }
    dend_44 { pt3dadd( 0.9629, -52.9628, -36.254, 0.96 ) }
    dend_44 { pt3dadd( -0.235111, -53.7052, -37.1494, 1.44 ) }
    dend_44 { pt3dadd( -1.52905, -54.502, -38.1461, 0.96 ) }
    dend_44 { pt3dadd( -2.50123, -55.1367, -38.891, 1.56 ) }
    dend_44 { pt3dadd( -4.07846, -56.2313, -40.1204, 0.84 ) }
    dend_44 { pt3dadd( -5.61449, -57.3713, -41.2957, 1.56 ) }
    dend_44 { pt3dadd( -7.70029, -59.0469, -42.898, 1.08 ) }
    dend_44 { pt3dadd( -8.79649, -60.0015, -43.7489, 0.84 ) }
    dend_44 { pt3dadd( -10.1362, -61.2838, -44.8212, 1.08 ) }
    dend_44 { pt3dadd( -10.4317, -61.5889, -45.0605, 0.72 ) }
    dend_44 { pt3dadd( -11.5779, -62.8707, -46.0112, 1.2 ) }
    dend_44 { pt3dadd( -12.7209, -64.2325, -46.9576, 0.6 ) }
    dend_44 { pt3dadd( -13.6131, -65.2825, -47.6185, 1.08 ) }
    dend_44 { pt3dadd( -14.6109, -66.4244, -48.3542, 0.72 ) }
    dend_44 { pt3dadd( -15.6917, -67.5959, -49.1762, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.8576, -35.4395, -29.5118, 0.48 ) }
    dend_43 { pt3dadd( 16.0203, -36.8301, -30.5626, 0.48 ) }
    dend_43 { pt3dadd( 18.1485, -38.226, -31.6369, 1.32 ) }
    dend_43 { pt3dadd( 19.5876, -39.1955, -32.3869, 0.96 ) }
    dend_43 { pt3dadd( 20.6363, -39.9022, -32.9355, 1.56 ) }
    dend_43 { pt3dadd( 22.4574, -41.1472, -33.8999, 0.96 ) }
    dend_43 { pt3dadd( 24.1513, -42.3388, -34.8163, 1.68 ) }
    dend_43 { pt3dadd( 25.9424, -43.6368, -35.852, 1.08 ) }
    dend_43 { pt3dadd( 27.3271, -44.7116, -36.6989, 1.8 ) }
    dend_43 { pt3dadd( 27.8515, -45.1622, -37.034, 1.8 ) }
    dend_43 { pt3dadd( 29.6731, -46.8934, -38.28, 1.08 ) }
    dend_43 { pt3dadd( 30.6729, -47.9909, -39.0573, 1.56 ) }
    dend_43 { pt3dadd( 31.3932, -48.9257, -39.6802, 1.08 ) }
    dend_43 { pt3dadd( 32.0604, -49.9542, -40.2989, 1.56 ) }
    dend_43 { pt3dadd( 32.9802, -51.6521, -41.215, 1.08 ) }
    dend_43 { pt3dadd( 33.5789, -52.9205, -41.8503, 1.68 ) }
    dend_43 { pt3dadd( 34.2699, -54.5817, -42.6159, 1.2 ) }
    dend_43 { pt3dadd( 34.8567, -56.0049, -43.2398, 1.2 ) }
    dend_43 { pt3dadd( 35.6333, -57.8881, -44.0391, 1.8 ) }
    dend_43 { pt3dadd( 36.3221, -59.7016, -44.8234, 1.2 ) }
    dend_43 { pt3dadd( 36.6842, -60.7882, -45.441, 1.8 ) }
    dend_43 { pt3dadd( 37.3928, -63.0317, -46.9207, 1.2 ) }
    dend_43 { pt3dadd( 38.1573, -65.4226, -48.6942, 1.68 ) }
    dend_43 { pt3dadd( 38.6542, -66.8796, -49.8612, 1.2 ) }
    dend_43 { pt3dadd( 39.3384, -68.8423, -51.6312, 1.68 ) }
    dend_43 { pt3dadd( 40.8615, -73.028, -55.7335, 1.2 ) }
    dend_43 { pt3dadd( 41.2496, -74.0537, -56.7987, 1.2 ) }
    dend_43 { pt3dadd( 41.5698, -74.8789, -57.7027, 1.2 ) }
    dend_43 { pt3dadd( 42.1485, -76.3278, -59.365, 1.56 ) }
    dend_43 { pt3dadd( 43.3573, -79.0125, -62.4859, 0.96 ) }
    dend_43 { pt3dadd( 44.0488, -80.2684, -63.8852, 1.44 ) }
    dend_43 { pt3dadd( 44.6506, -81.3123, -64.8594, 0.72 ) }
    dend_43 { pt3dadd( 45.1919, -82.3444, -65.9269, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 27.2524, -12.6535, -7.38283, 0.72 ) }
    dend_41 { pt3dadd( 29.2592, -11.7159, -7.44707, 0.72 ) }
    dend_41 { pt3dadd( 30.7046, -10.8995, -7.50789, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 31.7944, -10.2027, -7.5649, 0.72 ) }
    dend_41 { pt3dadd( 32.8157, -9.45722, -7.65679, 0.72 ) }
    dend_41 { pt3dadd( 34.0045, -8.48087, -7.87133, 0.48 ) }
    dend_41 { pt3dadd( 34.3406, -8.1581, -7.97445, 0.96 ) }
    dend_41 { pt3dadd( 35.534, -6.74178, -8.59219, 0.6 ) }
    dend_41 { pt3dadd( 36.508, -5.42552, -9.35886, 1.44 ) }
    dend_41 { pt3dadd( 37.4657, -4.04829, -10.3433, 0.72 ) }
    dend_41 { pt3dadd( 38.4926, -2.60554, -11.6546, 1.2 ) }
    dend_41 { pt3dadd( 39.7482, -0.841397, -13.401, 0.6 ) }
    dend_41 { pt3dadd( 41.0554, 1.00166, -15.3521, 1.2 ) }
    dend_41 { pt3dadd( 42.1181, 2.51751, -17.1134, 0.84 ) }
    dend_41 { pt3dadd( 43.0855, 3.90165, -18.8918, 1.68 ) }
    dend_41 { pt3dadd( 44.3359, 5.56289, -21.2834, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 27.2524, -12.6535, -7.38283, 0.48 ) }
    dend_36 { pt3dadd( 29.3112, -13.8395, -7.83875, 0.48 ) }
    dend_36 { pt3dadd( 30.8148, -14.8884, -8.27412, 0.96 ) }
    dend_36 { pt3dadd( 31.3895, -15.3648, -8.49273, 0.72 ) }
    dend_36 { pt3dadd( 33.4586, -17.3353, -9.41782, 1.2 ) }
    dend_36 { pt3dadd( 35.1593, -19.1788, -10.2733, 0.84 ) }
    dend_36 { pt3dadd( 36.6709, -21.0398, -11.1331, 1.68 ) }
    dend_36 { pt3dadd( 37.7439, -22.7319, -11.932, 0.96 ) }
    dend_36 { pt3dadd( 38.6324, -24.5595, -12.78, 1.92 ) }
    dend_36 { pt3dadd( 39.0375, -25.6421, -13.2632, 1.92 ) }
    dend_36 { pt3dadd( 39.4091, -27.1065, -13.8769, 0.96 ) }
    dend_36 { pt3dadd( 39.7068, -28.6701, -14.4542, 1.44 ) }
    dend_36 { pt3dadd( 39.8374, -29.5235, -14.6962, 1.44 ) }
    dend_36 { pt3dadd( 40.1926, -31.7905, -15.1372, 0.72 ) }
    dend_36 { pt3dadd( 40.3362, -32.5985, -15.2316, 0.72 ) }
    dend_36 { pt3dadd( 40.6348, -34.1393, -15.3265, 1.32 ) }
    dend_36 { pt3dadd( 41.2362, -36.7122, -15.179, 1.32 ) }
    dend_36 { pt3dadd( 41.5742, -37.8679, -14.9744, 1.32 ) }
    dend_36 { pt3dadd( 41.9452, -38.9263, -14.7052, 1.32 ) }
    dend_36 { pt3dadd( 42.2049, -39.5991, -14.4904, 1.32 ) }
    dend_36 { pt3dadd( 43.0047, -41.5592, -13.7804, 0.72 ) }
    dend_36 { pt3dadd( 44.1228, -44.1964, -12.6881, 1.8 ) }
    dend_36 { pt3dadd( 44.8564, -45.78, -12.0408, 1.8 ) }
    dend_36 { pt3dadd( 45.3593, -46.7863, -11.5885, 1.8 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 7.53703, -33.0404, 14.8074, 1.44 ) }
    dend_32 { pt3dadd( 9.06755, -34.2516, 14.9739, 1.44 ) }
    dend_32 { pt3dadd( 10.3629, -35.45, 15.2044, 1.44 ) }
    dend_32 { pt3dadd( 11.3425, -36.475, 15.4431, 1.44 ) }
    dend_32 { pt3dadd( 12.2679, -37.5826, 15.7373, 1.44 ) }
    dend_32 { pt3dadd( 12.9118, -38.415, 15.9602, 1.44 ) }
    dend_32 { pt3dadd( 13.8688, -39.7403, 16.3317, 1.44 ) }
    dend_32 { pt3dadd( 14.4087, -40.6051, 16.6061, 1.08 ) }
    dend_32 { pt3dadd( 14.9434, -41.5378, 16.9639, 1.44 ) }
    dend_32 { pt3dadd( 15.9225, -43.2864, 17.6525, 1.08 ) }
    dend_32 { pt3dadd( 16.5547, -44.3547, 18.0466, 1.56 ) }
    dend_32 { pt3dadd( 17.3955, -45.6339, 18.5137, 0.96 ) }
    dend_32 { pt3dadd( 18.0225, -46.4657, 18.8104, 0.96 ) }
    dend_32 { pt3dadd( 19.3112, -48.02, 19.3656, 0.96 ) }
    dend_32 { pt3dadd( 20.2452, -49.0698, 19.7527, 0.96 ) }
    dend_32 { pt3dadd( 20.8686, -49.7325, 20.0163, 0.96 ) }
    dend_32 { pt3dadd( 21.4774, -50.3779, 20.2824, 0.96 ) }
    dend_32 { pt3dadd( 22.3837, -51.3219, 20.6819, 0.72 ) }
    dend_32 { pt3dadd( 22.8352, -51.8148, 20.8909, 0.72 ) }
    dend_32 { pt3dadd( 23.6357, -52.7467, 21.2917, 0.72 ) }
    dend_32 { pt3dadd( 24.2719, -53.5158, 21.7038, 0.72 ) }
    dend_32 { pt3dadd( 24.62, -53.9331, 21.9443, 0.72 ) }
    dend_32 { pt3dadd( 25.1171, -54.4797, 22.2879, 0.72 ) }
    dend_32 { pt3dadd( 25.4864, -54.8664, 22.5473, 0.72 ) }
    dend_32 { pt3dadd( 26.3794, -55.7206, 23.1375, 0.72 ) }
    dend_32 { pt3dadd( 26.7731, -56.0597, 23.3654, 0.72 ) }
    dend_32 { pt3dadd( 27.4151, -56.5461, 23.7043, 0.72 ) }
    dend_32 { pt3dadd( 28.223, -57.1067, 24.121, 0.72 ) }
    dend_32 { pt3dadd( 35.0038, -61.5252, 26.7485, 0.72 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 7.53703, -33.0404, 14.8074, 1.44 ) }
    dend_29 { pt3dadd( 5.88736, -34.0831, 15.9924, 1.44 ) }
    dend_29 { pt3dadd( 3.28691, -35.9407, 17.4036, 1.44 ) }
    dend_29 { pt3dadd( 1.83597, -37.1294, 18.0397, 1.2 ) }
    dend_29 { pt3dadd( 0.474396, -38.4087, 18.5134, 1.2 ) }
    dend_29 { pt3dadd( -1.71258, -40.6261, 19.0752, 1.08 ) }
    dend_29 { pt3dadd( -2.85912, -41.7869, 19.2988, 1.08 ) }
    dend_29 { pt3dadd( -5.45305, -44.3592, 19.3885, 1.32 ) }
    dend_29 { pt3dadd( -6.80445, -45.6921, 19.2373, 1.32 ) }
    dend_29 { pt3dadd( -8.19077, -47.1111, 19.0179, 0.96 ) }
    dend_29 { pt3dadd( -9.52247, -48.5129, 18.7149, 0.96 ) }
    dend_29 { pt3dadd( -11.2396, -50.3128, 18.2768, 1.32 ) }
    dend_29 { pt3dadd( -12.8503, -51.9066, 17.8684, 0.96 ) }
    dend_29 { pt3dadd( -14.1928, -53.1318, 17.6057, 0.96 ) }
    dend_29 { pt3dadd( -16.7672, -55.382, 17.128, 1.44 ) }
    dend_29 { pt3dadd( -19.4776, -57.6947, 16.6766, 0.96 ) }
    dend_29 { pt3dadd( -20.2054, -58.3357, 16.5658, 0.96 ) }
    dend_29 { pt3dadd( -22.5881, -60.5585, 16.2182, 1.8 ) }
    dend_29 { pt3dadd( -24.3346, -62.2589, 15.832, 1.32 ) }
    dend_29 { pt3dadd( -25.075, -62.9728, 15.649, 1.32 ) }
    dend_29 { pt3dadd( -25.5971, -63.4604, 15.5241, 1.32 ) }
    dend_29 { pt3dadd( -26.733, -64.4933, 15.3046, 0.96 ) }
    dend_29 { pt3dadd( -27.3269, -65.0276, 15.1613, 0.96 ) }
    dend_29 { pt3dadd( -31.4606, -68.7511, 14.0338, 2.4 ) }
    dend_29 { pt3dadd( -34.2589, -71.297, 13.1933, 0.84 ) }
    dend_29 { pt3dadd( -36.524, -73.357, 12.4873, 2.16 ) }
    dend_29 { pt3dadd( -37.4167, -74.1624, 12.2055, 2.16 ) }
    dend_29 { pt3dadd( -40.7449, -77.0594, 11.1789, 0.84 ) }
    dend_29 { pt3dadd( -42.6714, -78.6623, 10.6697, 1.32 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.6366, -50.9023, -45.5113, 0.84 ) }
    dend_26 { pt3dadd( -11.9796, -52.0913, -46.3078, 0.84 ) }
    dend_26 { pt3dadd( -11.5304, -52.9188, -46.8757, 0.96 ) }
    dend_26 { pt3dadd( -10.8968, -54.1793, -47.7575, 0.72 ) }
    dend_26 { pt3dadd( -9.90306, -56.2474, -49.2485, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -8.75933, -58.8333, -51.1292, 1.08 ) }
    dend_26 { pt3dadd( -7.92581, -60.8706, -52.5213, 1.08 ) }
    dend_26 { pt3dadd( -7.61712, -61.6841, -53.0526, 1.08 ) }
    dend_26 { pt3dadd( -6.93627, -63.8126, -54.3991, 0.6 ) }
    dend_26 { pt3dadd( -6.46758, -65.6638, -55.5048, 1.32 ) }
    dend_26 { pt3dadd( -6.16071, -67.3945, -56.4446, 1.32 ) }
    dend_26 { pt3dadd( -5.88436, -69.4332, -57.533, 0.72 ) }
    dend_26 { pt3dadd( -5.77417, -70.2748, -58.0014, 0.72 ) }
    dend_26 { pt3dadd( -5.47399, -72.1266, -59.001, 1.2 ) }
    dend_26 { pt3dadd( -5.13636, -73.7034, -59.7982, 0.48 ) }
    dend_26 { pt3dadd( -4.766, -75.131, -60.5112, 1.08 ) }
    dend_26 { pt3dadd( -4.2276, -76.8601, -61.4282, 0.6 ) }
    dend_26 { pt3dadd( -3.38586, -79.286, -62.8458, 1.2 ) }
    dend_26 { pt3dadd( -2.29028, -82.1227, -64.4389, 0.72 ) }
    dend_26 { pt3dadd( -1.29618, -84.3765, -65.6284, 1.32 ) }
    dend_26 { pt3dadd( -0.371149, -86.2456, -66.5602, 0.72 ) }
    dend_26 { pt3dadd( 0.536721, -87.9426, -67.3212, 1.08 ) }
    dend_26 { pt3dadd( 1.52649, -89.7558, -68.085, 0.48 ) }
    dend_26 { pt3dadd( 2.44915, -91.4124, -68.7709, 0.48 ) }
    dend_26 { pt3dadd( 3.34457, -93.0713, -69.5664, 1.32 ) }
    dend_26 { pt3dadd( 3.86218, -94.1469, -70.0736, 1.32 ) }
    dend_26 { pt3dadd( 4.531, -95.8702, -70.8292, 0.72 ) }
    dend_26 { pt3dadd( 4.80903, -97.3119, -71.4961, 1.32 ) }
    dend_26 { pt3dadd( 4.56489, -98.8568, -72.5525, 0.6 ) }
    dend_26 { pt3dadd( 3.847, -100.064, -73.8124, 1.56 ) }
    dend_26 { pt3dadd( 3.22875, -100.669, -74.6352, 1.56 ) }
    dend_26 { pt3dadd( 2.35524, -101.311, -75.6787, 0.72 ) }
    dend_26 { pt3dadd( 0.438517, -102.434, -77.8449, 1.68 ) }
    dend_26 { pt3dadd( -1.96069, -103.719, -80.6111, 1.2 ) }
    dend_26 { pt3dadd( -2.99989, -104.287, -81.9133, 1.56 ) }
    dend_26 { pt3dadd( -4.13196, -105.01, -83.5286, 0.96 ) }
    dend_26 { pt3dadd( -4.96923, -105.708, -84.943, 0.96 ) }
    dend_26 { pt3dadd( -5.52144, -106.411, -86.1677, 1.56 ) }
    dend_26 { pt3dadd( -6.0742, -107.539, -87.8155, 1.56 ) }
    dend_26 { pt3dadd( -6.57285, -108.893, -89.3418, 1.2 ) }
    dend_26 { pt3dadd( -6.91219, -109.932, -90.343, 1.2 ) }
    dend_26 { pt3dadd( -7.54475, -111.795, -91.9982, 1.68 ) }
    dend_26 { pt3dadd( -8.50508, -114.51, -94.2366, 0.96 ) }
    dend_26 { pt3dadd( -9.05397, -115.985, -95.3248, 0.96 ) }
    dend_26 { pt3dadd( -10.346, -119.31, -97.5617, 0.48 ) }
    dend_26 { pt3dadd( -10.8411, -120.606, -98.3703, 1.56 ) }
    dend_26 { pt3dadd( -12.0664, -124.081, -100.441, 0.96 ) }
    dend_26 { pt3dadd( -12.2897, -124.785, -100.835, 0.96 ) }
    dend_26 { pt3dadd( -12.9535, -127.481, -102.163, 1.44 ) }
    dend_26 { pt3dadd( -13.1701, -129.182, -102.991, 1.08 ) }
    dend_26 { pt3dadd( -13.1531, -131.625, -104.241, 0.72 ) }
    dend_26 { pt3dadd( -12.9765, -133.45, -105.139, 0.72 ) }
    dend_26 { pt3dadd( -12.7891, -134.469, -105.593, 0.72 ) }
    dend_26 { pt3dadd( -12.2942, -136.756, -106.611, 1.32 ) }
    dend_26 { pt3dadd( -11.7067, -139.073, -107.683, 0.72 ) }
    dend_26 { pt3dadd( -11.3646, -140.44, -108.341, 0.72 ) }
    dend_26 { pt3dadd( -11.1805, -141.131, -108.587, 0.72 ) }
    dend_26 { pt3dadd( -10.9296, -142.023, -108.82, 0.72 ) }
    dend_26 { pt3dadd( -10.3221, -144.057, -109.247, 1.2 ) }
    dend_26 { pt3dadd( -9.64432, -146.231, -109.614, 0.6 ) }
    dend_26 { pt3dadd( -9.01823, -148.177, -109.822, 1.2 ) }
    dend_26 { pt3dadd( -7.39633, -152.992, -110.113, 0.72 ) }
    dend_26 { pt3dadd( -6.64179, -155.071, -110.199, 0.72 ) }
    dend_26 { pt3dadd( -5.92768, -156.876, -110.271, 1.32 ) }
    dend_26 { pt3dadd( -5.19527, -158.615, -110.364, 0.6 ) }
    dend_26 { pt3dadd( -4.20707, -160.969, -110.558, 1.2 ) }
    dend_26 { pt3dadd( -3.18745, -163.471, -110.857, 0.72 ) }
    dend_26 { pt3dadd( -2.47923, -165.35, -111.223, 0.72 ) }
    dend_26 { pt3dadd( -1.7187, -167.508, -111.575, 1.2 ) }
    dend_26 { pt3dadd( -1.08426, -169.405, -111.843, 0.6 ) }
    dend_26 { pt3dadd( -0.6307, -170.798, -112.016, 1.2 ) }
    dend_26 { pt3dadd( 0.210566, -173.405, -112.301, 0.48 ) }
    dend_26 { pt3dadd( 0.81225, -175.339, -112.516, 1.44 ) }
    dend_26 { pt3dadd( 1.44536, -177.655, -112.676, 0.96 ) }
    dend_26 { pt3dadd( 1.69732, -178.731, -112.689, 0.96 ) }
    dend_26 { pt3dadd( 1.81016, -179.315, -112.695, 0.96 ) }
    dend_26 { pt3dadd( 1.98236, -180.504, -112.768, 0.96 ) }
    dend_26 { pt3dadd( 2.09036, -182.149, -113.021, 0.96 ) }
    dend_26 { pt3dadd( 2.10346, -184.112, -113.489, 1.68 ) }
    dend_26 { pt3dadd( 2.02611, -186.855, -114.045, 0.96 ) }
    dend_26 { pt3dadd( 1.95586, -188.848, -114.374, 1.32 ) }
    dend_26 { pt3dadd( 1.87576, -191.169, -114.652, 0.72 ) }
    dend_26 { pt3dadd( 1.84208, -193.257, -114.81, 0.72 ) }
    dend_26 { pt3dadd( 1.87941, -195.086, -114.884, 1.2 ) }
    dend_26 { pt3dadd( 2.20083, -199.478, -114.941, 0.6 ) }
    dend_26 { pt3dadd( 2.36557, -200.915, -114.909, 0.96 ) }
    dend_26 { pt3dadd( 2.73989, -203.107, -114.72, 0.6 ) }
    dend_26 { pt3dadd( 3.08078, -204.848, -114.496, 1.32 ) }
    dend_26 { pt3dadd( 3.29423, -205.953, -114.329, 1.32 ) }
    dend_26 { pt3dadd( 3.42411, -206.781, -114.208, 1.32 ) }
    dend_26 { pt3dadd( 3.53589, -207.964, -114.116, 1.32 ) }
    dend_26 { pt3dadd( 3.59543, -209.687, -113.92, 0.96 ) }
    dend_26 { pt3dadd( 3.53264, -212.085, -113.678, 1.44 ) }
    dend_26 { pt3dadd( 3.41333, -213.661, -113.477, 1.44 ) }
    dend_26 { pt3dadd( 3.21666, -215.383, -113.219, 0.72 ) }
    dend_26 { pt3dadd( 2.97115, -217.064, -112.922, 1.2 ) }
    dend_26 { pt3dadd( 2.60766, -219.14, -112.531, 0.48 ) }
    dend_26 { pt3dadd( 2.11216, -221.101, -112.146, 1.08 ) }
    dend_26 { pt3dadd( 1.58511, -223.059, -111.729, 0.6 ) }
    dend_26 { pt3dadd( 1.15686, -224.54, -111.415, 1.2 ) }
    dend_26 { pt3dadd( 0.583897, -226.348, -111.02, 0.6 ) }
    dend_26 { pt3dadd( 0.271447, -227.246, -110.812, 0.6 ) }
    dend_26 { pt3dadd( -0.468325, -229.203, -110.312, 1.2 ) }
    dend_26 { pt3dadd( -1.12887, -230.901, -109.767, 0.72 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.6366, -50.9023, -45.5113, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( -11.4933, -51.8614, -46.7399, 0.96 ) }
    dend_15 { pt3dadd( -10.3496, -52.821, -47.969, 0.96 ) }
    dend_15 { pt3dadd( -8.97534, -53.9739, -49.4458, 2.64 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -31.652, -12.6251, 4.39976, 1.32 ) }
    dend_5 { pt3dadd( -33.7199, -12.4783, 6.03169, 1.32 ) }
    dend_5 { pt3dadd( -35.8869, -12.3245, 7.74175, 1.32 ) }
    dend_5 { pt3dadd( -38.2296, -12.1583, 9.59055, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -31.652, -12.6251, 4.39976, 0.96 ) }
    dend_2 { pt3dadd( -32.8172, -15.3431, 4.99519, 0.96 ) }
    dend_2 { pt3dadd( -33.2306, -16.0631, 5.2437, 1.44 ) }
    dend_2 { pt3dadd( -33.9342, -17.0103, 5.69732, 1.44 ) }
    dend_2 { pt3dadd( -34.4986, -17.686, 6.08656, 1.44 ) }
    dend_2 { pt3dadd( -35.221, -18.5286, 6.60229, 1.44 ) }
    dend_2 { pt3dadd( -36.824, -20.414, 7.80274, 1.68 ) }
    dend_2 { pt3dadd( -38.024, -21.6992, 8.8047, 1.2 ) }
    dend_2 { pt3dadd( -39.1531, -22.9251, 9.81758, 1.2 ) }
    dend_2 { pt3dadd( -39.6133, -23.4266, 10.2654, 1.2 ) }
    dend_2 { pt3dadd( -40.134, -24.0464, 10.7934, 1.2 ) }
    dend_2 { pt3dadd( -40.6257, -24.7092, 11.3106, 1.2 ) }
    dend_2 { pt3dadd( -40.8529, -25.1509, 11.5702, 1.2 ) }
    dend_2 { pt3dadd( -41.0548, -25.7375, 11.8713, 1.2 ) }
    dend_2 { pt3dadd( -41.2567, -26.4717, 12.2187, 1.2 ) }
    dend_2 { pt3dadd( -41.7684, -28.2038, 13.023, 1.56 ) }
    dend_2 { pt3dadd( -42.1948, -29.2735, 13.5247, 1.08 ) }
    dend_2 { pt3dadd( -42.6535, -30.1833, 13.943, 1.08 ) }
    dend_2 { pt3dadd( -43.1331, -30.8947, 14.3228, 1.08 ) }
    dend_2 { pt3dadd( -43.7413, -31.7193, 14.7731, 1.08 ) }
    dend_2 { pt3dadd( -44.1433, -32.213, 15.0422, 1.08 ) }
    dend_2 { pt3dadd( -45.3503, -33.4237, 15.8088, 1.08 ) }
    dend_2 { pt3dadd( -45.7637, -33.7433, 16.0191, 1.08 ) }
    dend_2 { pt3dadd( -47.3912, -34.6662, 16.7346, 1.32 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -15.6917, -67.5959, -49.1762, 1.08 ) }
    dend_46 { pt3dadd( -15.0581, -68.9188, -49.2881, 1.08 ) }
    dend_46 { pt3dadd( -14.3221, -70.4556, -49.4182, 1.32 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -15.6917, -67.5959, -49.1762, 0.84 ) }
    dend_45 { pt3dadd( -16.4539, -68.0397, -49.4329, 0.84 ) }
    dend_45 { pt3dadd( -17.2078, -68.5424, -49.9226, 1.44 ) }
    dend_45 { pt3dadd( -17.9597, -69.0437, -50.4111, 0.6 ) }
    dend_45 { pt3dadd( -18.5981, -69.4693, -50.8257, 1.08 ) }
    dend_45 { pt3dadd( -19.7928, -70.2658, -51.6017, 0.48 ) }
    dend_45 { pt3dadd( -20.7858, -70.9279, -52.2467, 1.56 ) }
    dend_45 { pt3dadd( -22.1119, -71.8556, -53.3481, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 42/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 45.3593, -46.7863, -11.5885, 0.84 ) }
    dend_40 { pt3dadd( 45.4483, -47.7211, -11.5838, 0.84 ) }
    dend_40 { pt3dadd( 45.5124, -48.4362, -11.5774, 1.44 ) }
    dend_40 { pt3dadd( 45.7074, -50.4212, -11.5634, 0.48 ) }
    dend_40 { pt3dadd( 45.8685, -52.0625, -11.5518, 0.48 ) }
    dend_40 { pt3dadd( 45.9776, -53.1738, -11.544, 1.44 ) }
    dend_40 { pt3dadd( 46.1328, -54.7538, -11.5328, 0.6 ) }
    dend_40 { pt3dadd( 46.2105, -55.4424, -11.5357, 0.6 ) }
    dend_40 { pt3dadd( 46.3222, -56.3695, -11.5329, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 51/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 45.3593, -46.7863, -11.5885, 0.6 ) }
    dend_37 { pt3dadd( 46.4486, -47.6072, -11.4362, 0.6 ) }
    dend_37 { pt3dadd( 47.7701, -48.5413, -11.1785, 1.2 ) }
    dend_37 { pt3dadd( 48.1923, -48.8516, -11.0818, 1.2 ) }
    dend_37 { pt3dadd( 48.9591, -49.451, -10.8941, 0.6 ) }
    dend_37 { pt3dadd( 51.0098, -51.1716, -10.34, 1.68 ) }
    dend_37 { pt3dadd( 51.7849, -51.8439, -10.1088, 1.68 ) }
    dend_37 { pt3dadd( 53.0523, -52.9588, -9.69747, 0.84 ) }
    dend_37 { pt3dadd( 54.2061, -53.9328, -9.29447, 0.84 ) }
    dend_37 { pt3dadd( 55.3953, -54.9103, -8.85861, 1.44 ) }
    dend_37 { pt3dadd( 56.8334, -56.1064, -8.30621, 0.84 ) }
    dend_37 { pt3dadd( 58.5247, -57.5831, -7.63133, 1.56 ) }
    dend_37 { pt3dadd( 60.476, -59.2922, -6.83843, 1.08 ) }
    dend_37 { pt3dadd( 61.7131, -60.3513, -6.33961, 1.56 ) }
    dend_37 { pt3dadd( 63.3665, -61.697, -5.66681, 2.04 ) }
    dend_37 { pt3dadd( 65.0841, -63.0318, -4.95562, 1.2 ) }
    dend_37 { pt3dadd( 66.5164, -64.1055, -4.36465, 1.2 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -42.6714, -78.6623, 10.6697, 0.48 ) }
    dend_31 { pt3dadd( -42.8253, -80.0881, 11.1151, 0.48 ) }
    dend_31 { pt3dadd( -42.9476, -81.5191, 11.4655, 1.56 ) }
    dend_31 { pt3dadd( -43.115, -84.0393, 11.9201, 0.6 ) }
    dend_31 { pt3dadd( -43.1347, -85.6626, 12.105, 1.8 ) }
    dend_31 { pt3dadd( -43.115, -87.4308, 12.2242, 0.6 ) }
    dend_31 { pt3dadd( -43.09, -88.3915, 12.2586, 0.6 ) }
    dend_31 { pt3dadd( -43.0279, -89.5462, 12.2278, 0.6 ) }
    dend_31 { pt3dadd( -42.9014, -90.886, 12.1436, 1.56 ) }
    dend_31 { pt3dadd( -42.5905, -92.9744, 11.8816, 0.48 ) }
    dend_31 { pt3dadd( -42.3107, -94.4141, 11.6876, 0.48 ) }
    dend_31 { pt3dadd( -42.159, -95.0978, 11.5975, 0.48 ) }
    dend_31 { pt3dadd( -41.8409, -96.4502, 11.4485, 1.68 ) }
    dend_31 { pt3dadd( -41.3621, -98.386, 11.301, 1.08 ) }
    dend_31 { pt3dadd( -41.0244, -99.6116, 11.2579, 1.08 ) }
    dend_31 { pt3dadd( -40.0524, -107.233, 10.2936, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -42.6714, -78.6623, 10.6697, 0.72 ) }
    dend_30 { pt3dadd( -45.3446, -79.3037, 10.3618, 0.72 ) }
    dend_30 { pt3dadd( -46.9032, -79.7144, 10.1117, 1.56 ) }
    dend_30 { pt3dadd( -48.3813, -80.1813, 9.85593, 0.72 ) }
    dend_30 { pt3dadd( -50.595, -80.9736, 9.41956, 1.32 ) }
    dend_30 { pt3dadd( -53.0372, -81.9965, 9.15504, 0.72 ) }
    dend_30 { pt3dadd( -54.9355, -82.9018, 9.06878, 1.56 ) }
    dend_30 { pt3dadd( -57.2715, -84.3003, 9.03324, 0.84 ) }
    dend_30 { pt3dadd( -58.4671, -85.1619, 9.08985, 0.84 ) }
    dend_30 { pt3dadd( -60.4732, -86.9169, 9.32452, 1.92 ) }
    dend_30 { pt3dadd( -63.5459, -90.193, 10.0411, 0.96 ) }
    dend_30 { pt3dadd( -64.6795, -91.559, 10.4159, 0.96 ) }
    dend_30 { pt3dadd( -66.8032, -94.409, 11.3265, 0.72 ) }
    dend_30 { pt3dadd( -67.4475, -95.3682, 11.6609, 1.32 ) }
    dend_30 { pt3dadd( -68.5965, -97.171, 12.3066, 0.84 ) }
    dend_30 { pt3dadd( -69.5328, -98.9333, 12.9114, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -79.6815, -105.511, 14.0287, 1.2 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -8.97534, -53.9739, -49.4458, 0.96 ) }
    dend_23 { pt3dadd( -10.1222, -55.7663, -50.9952, 0.96 ) }
    dend_23 { pt3dadd( -11.1318, -57.5339, -52.5488, 0.96 ) }
    dend_23 { pt3dadd( -11.5131, -58.2427, -53.1553, 0.96 ) }
    dend_23 { pt3dadd( -11.8946, -58.9862, -53.771, 0.96 ) }
    dend_23 { pt3dadd( -12.4582, -60.1618, -54.6853, 0.96 ) }
    dend_23 { pt3dadd( -12.7396, -60.7771, -55.1407, 0.96 ) }
    dend_23 { pt3dadd( -12.8506, -61.121, -55.3881, 0.96 ) }
    dend_23 { pt3dadd( -13.074, -61.858, -55.8232, 0.96 ) }
    dend_23 { pt3dadd( -13.2248, -62.2087, -56.0218, 0.96 ) }
    dend_23 { pt3dadd( -13.7307, -63.0691, -56.5457, 0.96 ) }
    dend_23 { pt3dadd( -14.1687, -63.5999, -56.9317, 0.96 ) }
    dend_23 { pt3dadd( -14.9235, -64.3544, -57.6118, 0.6 ) }
    dend_23 { pt3dadd( -16.0026, -65.305, -58.6114, 1.56 ) }
    dend_23 { pt3dadd( -17.4854, -66.4695, -60.0058, 0.96 ) }
    dend_23 { pt3dadd( -18.3985, -67.1164, -60.848, 0.96 ) }
    dend_23 { pt3dadd( -20.1893, -68.3206, -62.4581, 0.72 ) }
    dend_23 { pt3dadd( -22.0078, -69.5836, -64.0949, 1.2 ) }
    dend_23 { pt3dadd( -23.3777, -70.5716, -65.316, 0.72 ) }
    dend_23 { pt3dadd( -24.8401, -71.722, -66.6289, 1.2 ) }
    dend_23 { pt3dadd( -26.5107, -73.1798, -68.1313, 0.72 ) }
    dend_23 { pt3dadd( -27.289, -73.9422, -68.86, 0.72 ) }
    dend_23 { pt3dadd( -29.1751, -76.0705, -70.7125, 1.2 ) }
    dend_23 { pt3dadd( -30.3391, -77.5689, -71.8579, 1.2 ) }
    dend_23 { pt3dadd( -31.6335, -79.3971, -73.1479, 0.72 ) }
    dend_23 { pt3dadd( -32.0933, -80.1118, -73.62, 0.72 ) }
    dend_23 { pt3dadd( -33.057, -81.6942, -74.6163, 1.32 ) }
    dend_23 { pt3dadd( -33.7346, -82.8333, -75.3421, 1.32 ) }
    dend_23 { pt3dadd( -34.7751, -84.5612, -76.4335, 0.6 ) }
    dend_23 { pt3dadd( -35.5475, -85.7869, -77.2286, 1.08 ) }
    dend_23 { pt3dadd( -37.5246, -88.4515, -79.135, 0.6 ) }
    dend_23 { pt3dadd( -38.5532, -89.657, -80.0683, 1.2 ) }
    dend_23 { pt3dadd( -39.5964, -90.7564, -80.9007, 0.6 ) }
    dend_23 { pt3dadd( -40.7235, -91.7594, -81.721, 1.2 ) }
    dend_23 { pt3dadd( -41.9048, -92.6544, -82.5455, 0.48 ) }
    dend_23 { pt3dadd( -44.2984, -94.346, -84.1281, 1.44 ) }
    dend_23 { pt3dadd( -44.8652, -94.7311, -84.4907, 1.44 ) }
    dend_23 { pt3dadd( -46.623, -95.9835, -85.5995, 0.72 ) }
    dend_23 { pt3dadd( -48.7322, -97.6495, -86.9281, 1.56 ) }
    dend_23 { pt3dadd( -51.3664, -100.117, -88.6468, 0.84 ) }
    dend_23 { pt3dadd( -52.139, -101.035, -89.1628, 0.84 ) }
    dend_23 { pt3dadd( -53.5451, -103.096, -90.3022, 1.56 ) }
    dend_23 { pt3dadd( -54.2714, -104.316, -91.0373, 1.56 ) }
    dend_23 { pt3dadd( -55.357, -106.402, -92.4482, 0.72 ) }
    dend_23 { pt3dadd( -56.329, -108.404, -94.0896, 1.2 ) }
    dend_23 { pt3dadd( -57.3938, -110.77, -96.0816, 0.72 ) }
    dend_23 { pt3dadd( -58.8095, -113.849, -98.9024, 1.56 ) }
    dend_23 { pt3dadd( -59.5632, -115.454, -100.545, 1.08 ) }
    dend_23 { pt3dadd( -60.2822, -116.92, -102.304, 1.56 ) }
    dend_23 { pt3dadd( -61.9802, -120.025, -107.004, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.97534, -53.9739, -49.4458, 0.48 ) }
    dend_16 { pt3dadd( -5.7553, -56.1257, -51.499, 0.48 ) }
    dend_16 { pt3dadd( -4.297, -57.1242, -52.3806, 0.48 ) }
    dend_16 { pt3dadd( -1.91074, -58.758, -53.8232, 1.56 ) }
    dend_16 { pt3dadd( -0.00134325, -60.0654, -54.9775, 0.36 ) }
    dend_16 { pt3dadd( 0.65481, -60.5146, -55.3741, 0.36 ) }
    dend_16 { pt3dadd( 3.04109, -62.1485, -56.8167, 1.32 ) }
    dend_16 { pt3dadd( 4.63618, -63.2228, -57.5259, 1.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -38.2296, -12.1583, 9.59055, 1.44 ) }
    dend_9 { pt3dadd( -38.6664, -11.8535, 12.9165, 1.44 ) }
    dend_9 { pt3dadd( -39.2529, -11.7669, 15.6091, 1.2 ) }
    dend_9 { pt3dadd( -39.6081, -11.703, 16.9205, 1.2 ) }
    dend_9 { pt3dadd( -39.9211, -11.6466, 18.0767, 0.84 ) }
    dend_9 { pt3dadd( -40.0745, -11.619, 18.6431, 0.84 ) }
    dend_9 { pt3dadd( -40.4119, -11.5583, 19.8889, 1.2 ) }
    dend_9 { pt3dadd( -41.3976, -11.5612, 22.0808, 1.08 ) }
    dend_9 { pt3dadd( -42.0981, -11.6323, 23.1125, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -38.2296, -12.1583, 9.59055, 1.92 ) }
    dend_6 { pt3dadd( -39.4604, -11.6278, 10.6463, 1.92 ) }
    dend_6 { pt3dadd( -40.1914, -11.2971, 11.174, 1.92 ) }
    dend_6 { pt3dadd( -41.3382, -10.6831, 11.9157, 1.56 ) }
    dend_6 { pt3dadd( -42.2938, -10.1123, 12.4958, 1.32 ) }
    dend_6 { pt3dadd( -43.1891, -9.49246, 13.0386, 1.8 ) }
    dend_6 { pt3dadd( -44.1816, -8.74031, 13.631, 1.2 ) }
    dend_6 { pt3dadd( -44.9792, -8.02779, 14.0561, 1.2 ) }
    dend_6 { pt3dadd( -46.0752, -6.97365, 14.633, 0.96 ) }
    dend_6 { pt3dadd( -46.5871, -6.45301, 14.8829, 0.96 ) }
    dend_6 { pt3dadd( -47.4462, -5.57911, 15.2469, 1.32 ) }
    dend_6 { pt3dadd( -48.2632, -4.81656, 15.5708, 1.32 ) }
    dend_6 { pt3dadd( -48.8502, -4.36457, 15.7634, 1.32 ) }
    dend_6 { pt3dadd( -49.5585, -3.95299, 15.941, 0.96 ) }
    dend_6 { pt3dadd( -50.088, -3.75234, 16.0274, 0.96 ) }
    dend_6 { pt3dadd( -50.9549, -3.50477, 16.2227, 0.96 ) }
    dend_6 { pt3dadd( -51.8971, -3.32602, 16.4006, 0.96 ) }
    dend_6 { pt3dadd( -53.3789, -3.12337, 16.6571, 1.44 ) }
    dend_6 { pt3dadd( -54.1386, -3.03798, 16.7855, 1.44 ) }
    dend_6 { pt3dadd( -54.7337, -2.9461, 16.8973, 1.44 ) }
    dend_6 { pt3dadd( -56.6373, -2.49754, 17.4553, 1.2 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -47.3912, -34.6662, 16.7346, 0.96 ) }
    dend_4 { pt3dadd( -48.197, -34.6385, 17.8329, 0.96 ) }
    dend_4 { pt3dadd( -49.3074, -34.5205, 19.4155, 0.96 ) }
    dend_4 { pt3dadd( -50.3135, -34.3822, 20.8526, 0.96 ) }
    dend_4 { pt3dadd( -52.0772, -34.0875, 23.3154, 0.6 ) }
    dend_4 { pt3dadd( -53.7178, -33.7916, 25.516, 1.2 ) }
    dend_4 { pt3dadd( -56.4329, -33.1506, 29.1523, 0.72 ) }
    dend_4 { pt3dadd( -56.9319, -32.9734, 29.8932, 0.72 ) }
    dend_4 { pt3dadd( -57.1735, -32.8666, 30.2672, 0.72 ) }
    dend_4 { pt3dadd( -57.7201, -32.5631, 31.1332, 0.72 ) }
    dend_4 { pt3dadd( -58.1374, -32.2167, 31.8583, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -59.2144, -31.0098, 34.0345, 1.2 ) }
    dend_4 { pt3dadd( -60.6498, -29.1502, 36.7664, 0.84 ) }
    dend_4 { pt3dadd( -69.4846, -26.7903, 45.3289, 0.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -47.3912, -34.6662, 16.7346, 0.84 ) }
    dend_3 { pt3dadd( -48.3801, -35.3495, 16.6222, 0.84 ) }
    dend_3 { pt3dadd( -49.1417, -35.781, 16.5359, 0.84 ) }
    dend_3 { pt3dadd( -50.2811, -36.422, 16.4183, 0.6 ) }
    dend_3 { pt3dadd( -51.0625, -36.8334, 16.3414, 0.6 ) }
    dend_3 { pt3dadd( -52.1806, -37.3681, 16.2302, 0.6 ) }
    dend_3 { pt3dadd( -53.3865, -37.8941, 16.1094, 0.6 ) }
    dend_3 { pt3dadd( -54.5252, -38.2984, 15.9617, 0.6 ) }
    dend_3 { pt3dadd( -55.4425, -38.5831, 15.8587, 0.6 ) }
    dend_3 { pt3dadd( -56.4207, -38.8527, 15.7895, 0.6 ) }
    dend_3 { pt3dadd( -56.9699, -38.988, 15.7526, 0.6 ) }
    dend_3 { pt3dadd( -57.6298, -39.1395, 15.711, 0.6 ) }
    dend_3 { pt3dadd( -58.0335, -39.2027, 15.6769, 1.08 ) }
    dend_3 { pt3dadd( -59.4009, -39.3407, 15.552, 0.72 ) }
    dend_3 { pt3dadd( -60.9018, -39.4349, 15.4077, 0.72 ) }
    dend_3 { pt3dadd( -62.0757, -39.5131, 15.2962, 0.72 ) }
    dend_3 { pt3dadd( -62.6332, -39.5535, 15.2438, 0.72 ) }
    dend_3 { pt3dadd( -64.0858, -39.5865, 15.0963, 1.08 ) }
    dend_3 { pt3dadd( -72.6219, -42.9806, 13.0412, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 66.5164, -64.1055, -4.36465, 0.72 ) }
    dend_39 { pt3dadd( 66.3499, -66.6281, -5.16478, 0.72 ) }
    dend_39 { pt3dadd( 66.2481, -68.1717, -5.65439, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 66.5164, -64.1055, -4.36465, 0.96 ) }
    dend_38 { pt3dadd( 67.5552, -65.31, -4.11959, 0.96 ) }
    dend_38 { pt3dadd( 68.5989, -66.6002, -3.80695, 0.96 ) }
    dend_38 { pt3dadd( 69.7767, -68.1258, -3.42652, 1.56 ) }
    dend_38 { pt3dadd( 71.1908, -69.9505, -2.99178, 0.84 ) }
    dend_38 { pt3dadd( 72.4621, -71.6046, -2.63518, 1.32 ) }
    dend_38 { pt3dadd( 74.0618, -73.8254, -2.10025, 0.6 ) }
    dend_38 { pt3dadd( 74.9758, -75.1779, -1.73598, 1.32 ) }
    dend_38 { pt3dadd( 76.2172, -77.0577, -1.20195, 0.72 ) }
    dend_38 { pt3dadd( 77.3141, -78.6983, -0.726116, 0.72 ) }
    dend_38 { pt3dadd( 78.1438, -79.8632, -0.342988, 1.68 ) }
    dend_38 { pt3dadd( 80.3586, -82.6667, 0.725363, 0.72 ) }
    dend_38 { pt3dadd( 81.7448, -84.1608, 1.42868, 0.72 ) }
    dend_38 { pt3dadd( 82.5923, -84.9236, 1.89727, 0.72 ) }
    dend_38 { pt3dadd( 83.4817, -85.5429, 2.46985, 0.72 ) }
    dend_38 { pt3dadd( 84.8803, -86.2434, 3.4273, 1.08 ) }
    dend_38 { pt3dadd( 85.9405, -86.6106, 4.15682, 0.48 ) }
    dend_38 { pt3dadd( 87.2006, -86.7889, 4.96076, 0.96 ) }
    dend_38 { pt3dadd( 88.2269, -86.8295, 5.6927, 0.96 ) }
    dend_38 { pt3dadd( 89.4736, -86.813, 6.67535, 0.72 ) }
    dend_38 { pt3dadd( 90.9255, -86.7364, 7.91092, 0.48 ) }
    dend_38 { pt3dadd( 96.3797, -92.0321, 11.2088, 0.48 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -61.9802, -120.025, -107.004, 0.84 ) }
    dend_25 { pt3dadd( -63.4279, -121.21, -105.566, 0.84 ) }
    dend_25 { pt3dadd( -65.0082, -122.411, -104.204, 0.84 ) }
    dend_25 { pt3dadd( -68.6056, -125.126, -101.542, 1.32 ) }
    dend_25 { pt3dadd( -71.7147, -127.566, -99.4069, 0.84 ) }
    dend_25 { pt3dadd( -72.6987, -128.379, -98.8086, 0.84 ) }
    dend_25 { pt3dadd( -74.5528, -129.986, -97.7806, 1.44 ) }
    dend_25 { pt3dadd( -77.1394, -132.503, -96.5345, 0.96 ) }
    dend_25 { pt3dadd( -78.6629, -134.261, -96.0483, 0.96 ) }
    dend_25 { pt3dadd( -79.68, -135.681, -96.116, 1.44 ) }
    dend_25 { pt3dadd( -80.8859, -137.858, -96.6409, 0.96 ) }
    dend_25 { pt3dadd( -81.1987, -138.568, -96.8617, 0.96 ) }
    dend_25 { pt3dadd( -82.0128, -140.893, -97.7351, 1.44 ) }
    dend_25 { pt3dadd( -82.6729, -143.11, -98.6088, 1.08 ) }
    dend_25 { pt3dadd( -83.5128, -145.663, -99.6095, 1.44 ) }
    dend_25 { pt3dadd( -84.4622, -148.236, -100.449, 0.84 ) }
    dend_25 { pt3dadd( -85.0332, -149.616, -100.692, 0.84 ) }
    dend_25 { pt3dadd( -85.3689, -150.363, -100.797, 0.84 ) }
    dend_25 { pt3dadd( -86.8665, -153.304, -100.966, 1.2 ) }
    dend_25 { pt3dadd( -87.6353, -154.62, -100.829, 1.2 ) }
    dend_25 { pt3dadd( -89.7786, -157.63, -99.5819, 0.84 ) }
    dend_25 { pt3dadd( -91.5087, -159.608, -97.8502, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -61.9802, -120.025, -107.004, 0.72 ) }
    dend_24 { pt3dadd( -62.4885, -121.847, -107.353, 0.72 ) }
    dend_24 { pt3dadd( -63.7513, -125.347, -108.254, 1.2 ) }
    dend_24 { pt3dadd( -64.5956, -127.288, -108.853, 0.84 ) }
    dend_24 { pt3dadd( -65.6381, -129.369, -109.582, 1.32 ) }
    dend_24 { pt3dadd( -67.1602, -132.174, -110.597, 0.72 ) }
    dend_24 { pt3dadd( -68.2482, -134.067, -111.307, 1.32 ) }
    dend_24 { pt3dadd( -70.1303, -137.002, -112.535, 0.84 ) }
    dend_24 { pt3dadd( -71.9358, -139.515, -113.686, 1.32 ) }
    dend_24 { pt3dadd( -73.7706, -141.953, -114.854, 0.84 ) }
    dend_24 { pt3dadd( -74.7365, -143.203, -115.455, 0.84 ) }
    dend_24 { pt3dadd( -76.559, -145.556, -116.6, 1.44 ) }
    dend_24 { pt3dadd( -77.2231, -146.456, -117.04, 1.44 ) }
    dend_24 { pt3dadd( -78.9733, -149.077, -118.355, 0.96 ) }
    dend_24 { pt3dadd( -81.0778, -152.588, -120.161, 1.44 ) }
    dend_24 { pt3dadd( -82.8866, -155.931, -121.882, 0.84 ) }
    dend_24 { pt3dadd( -83.5095, -157.159, -122.514, 1.32 ) }
    dend_24 { pt3dadd( -84.4958, -159.232, -123.506, 0.84 ) }
    dend_24 { pt3dadd( -86.2297, -163.09, -125.066, 1.32 ) }
    dend_24 { pt3dadd( -87.312, -165.552, -125.966, 0.84 ) }
    dend_24 { pt3dadd( -88.7703, -168.726, -127.061, 1.44 ) }
    dend_24 { pt3dadd( -89.5166, -170.276, -127.606, 0.72 ) }
    dend_24 { pt3dadd( -91.1788, -173.407, -128.869, 1.32 ) }
    dend_24 { pt3dadd( -93.2243, -177.034, -130.321, 0.6 ) }
    dend_24 { pt3dadd( -95.1864, -180.292, -131.645, 1.08 ) }
    dend_24 { pt3dadd( -97.3098, -183.643, -133.098, 0.48 ) }
    dend_24 { pt3dadd( -99.6901, -187.237, -134.882, 1.44 ) }
    dend_24 { pt3dadd( -101.786, -190.292, -136.673, 0.72 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 4.63618, -63.2228, -57.5259, 0.84 ) }
    dend_22 { pt3dadd( 3.04381, -64.6589, -58.4796, 0.84 ) }
    dend_22 { pt3dadd( 1.42, -65.974, -59.4711, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 0.268524, -66.8976, -60.2193, 0.72 ) }
    dend_22 { pt3dadd( -0.549342, -67.5392, -60.7687, 0.72 ) }
    dend_22 { pt3dadd( -2.1642, -68.768, -61.8781, 0.72 ) }
    dend_22 { pt3dadd( -3.5258, -69.8041, -62.8188, 0.72 ) }
    dend_22 { pt3dadd( -4.29862, -70.3759, -63.359, 0.72 ) }
    dend_22 { pt3dadd( -5.28605, -71.1097, -64.1176, 0.72 ) }
    dend_22 { pt3dadd( -6.39433, -72.0, -65.0082, 1.08 ) }
    dend_22 { pt3dadd( -7.43089, -72.8605, -65.813, 1.08 ) }
    dend_22 { pt3dadd( -7.89108, -73.2937, -66.1625, 1.08 ) }
    dend_22 { pt3dadd( -8.81443, -74.2104, -66.8574, 0.6 ) }
    dend_22 { pt3dadd( -9.52421, -74.8772, -67.3787, 0.6 ) }
    dend_22 { pt3dadd( -11.2292, -76.3624, -68.52, 1.08 ) }
    dend_22 { pt3dadd( -12.5546, -77.4827, -69.4113, 1.08 ) }
    dend_22 { pt3dadd( -14.5367, -79.062, -70.6403, 0.6 ) }
    dend_22 { pt3dadd( -15.8351, -80.0208, -71.3831, 0.6 ) }
    dend_22 { pt3dadd( -18.2646, -81.7379, -72.6715, 1.56 ) }
    dend_22 { pt3dadd( -20.078, -83.0167, -73.5975, 0.84 ) }
    dend_22 { pt3dadd( -21.604, -84.1174, -74.36, 1.44 ) }
    dend_22 { pt3dadd( -23.6007, -85.6373, -75.3527, 0.96 ) }
    dend_22 { pt3dadd( -25.1876, -86.899, -76.1367, 1.56 ) }
    dend_22 { pt3dadd( -27.0213, -88.5283, -77.1024, 0.96 ) }
    dend_22 { pt3dadd( -27.8897, -89.4229, -77.575, 0.96 ) }
    dend_22 { pt3dadd( -29.0963, -90.8216, -78.3313, 1.56 ) }
    dend_22 { pt3dadd( -29.7346, -91.6388, -78.786, 1.56 ) }
    dend_22 { pt3dadd( -31.08, -93.576, -79.9522, 1.08 ) }
    dend_22 { pt3dadd( -32.3099, -95.4773, -81.1242, 1.68 ) }
    dend_22 { pt3dadd( -33.4344, -97.3218, -82.2813, 1.68 ) }
    dend_22 { pt3dadd( -34.6017, -99.3657, -83.5955, 0.96 ) }
    dend_22 { pt3dadd( -35.5198, -101.163, -84.7718, 1.56 ) }
    dend_22 { pt3dadd( -36.3261, -102.813, -85.8847, 0.96 ) }
    dend_22 { pt3dadd( -37.1543, -104.7, -87.1404, 1.8 ) }
    dend_22 { pt3dadd( -38.1908, -107.249, -88.8463, 1.2 ) }
    dend_22 { pt3dadd( -38.8682, -109.081, -90.0939, 0.72 ) }
    dend_22 { pt3dadd( -39.6548, -111.476, -91.7112, 1.2 ) }
    dend_22 { pt3dadd( -40.1774, -113.215, -92.8771, 0.72 ) }
    dend_22 { pt3dadd( -40.7168, -115.274, -94.2954, 0.72 ) }
    dend_22 { pt3dadd( -40.9746, -116.42, -95.1237, 0.72 ) }
    dend_22 { pt3dadd( -41.3149, -118.12, -96.4187, 1.2 ) }
    dend_22 { pt3dadd( -41.5357, -119.259, -97.2907, 0.72 ) }
    dend_22 { pt3dadd( -41.882, -121.057, -98.7249, 1.2 ) }
    dend_22 { pt3dadd( -42.2436, -122.897, -100.215, 0.6 ) }
    dend_22 { pt3dadd( -42.5266, -124.045, -101.137, 1.2 ) }
    dend_22 { pt3dadd( -43.115, -125.924, -102.499, 0.6 ) }
    dend_22 { pt3dadd( -43.5359, -127.084, -103.268, 0.6 ) }
    dend_22 { pt3dadd( -44.215, -128.637, -104.223, 1.32 ) }
    dend_22 { pt3dadd( -45.8431, -131.915, -106.158, 0.72 ) }
    dend_22 { pt3dadd( -47.0538, -134.133, -107.42, 1.2 ) }
    dend_22 { pt3dadd( -48.5259, -136.704, -108.849, 0.72 ) }
    dend_22 { pt3dadd( -48.9284, -137.408, -109.237, 0.72 ) }
    dend_22 { pt3dadd( -50.3048, -139.886, -110.613, 1.32 ) }
    dend_22 { pt3dadd( -51.5101, -142.128, -111.913, 0.6 ) }
    dend_22 { pt3dadd( -52.5762, -144.16, -113.138, 1.32 ) }
    dend_22 { pt3dadd( -53.8485, -146.542, -114.668, 0.6 ) }
    dend_22 { pt3dadd( -55.7629, -150.047, -117.057, 0.6 ) }
    dend_22 { pt3dadd( -56.9093, -152.101, -118.495, 1.2 ) }
    dend_22 { pt3dadd( -59.207, -156.164, -121.399, 0.72 ) }
    dend_22 { pt3dadd( -60.0474, -157.532, -122.399, 1.2 ) }
    dend_22 { pt3dadd( -61.5337, -159.805, -124.133, 1.08 ) }
    dend_22 { pt3dadd( -62.7145, -161.519, -125.523, 0.72 ) }
    dend_22 { pt3dadd( -63.7312, -162.919, -126.754, 0.72 ) }
    dend_22 { pt3dadd( -64.8214, -164.473, -128.139, 1.2 ) }
    dend_22 { pt3dadd( -65.9412, -166.199, -129.617, 0.6 ) }
    dend_22 { pt3dadd( -67.1192, -168.161, -131.278, 1.08 ) }
    dend_22 { pt3dadd( -67.9264, -169.712, -132.478, 0.6 ) }
    dend_22 { pt3dadd( -68.6091, -171.174, -133.551, 1.2 ) }
    dend_22 { pt3dadd( -69.9566, -174.411, -135.796, 0.6 ) }
    dend_22 { pt3dadd( -70.5257, -176.012, -136.867, 0.6 ) }
    dend_22 { pt3dadd( -70.8219, -176.985, -137.579, 1.2 ) }
    dend_22 { pt3dadd( -71.447, -179.096, -139.085, 0.72 ) }
    dend_22 { pt3dadd( -71.8442, -180.522, -140.077, 1.2 ) }
    dend_22 { pt3dadd( -72.0967, -181.521, -140.787, 1.2 ) }
    dend_22 { pt3dadd( -72.3845, -183.128, -142.132, 1.2 ) }
    dend_22 { pt3dadd( -72.7406, -186.189, -145.149, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.63618, -63.2228, -57.5259, 0.72 ) }
    dend_17 { pt3dadd( 7.2253, -64.6194, -57.7159, 0.72 ) }
    dend_17 { pt3dadd( 8.73349, -65.4641, -57.734, 0.72 ) }
    dend_17 { pt3dadd( 10.0585, -66.2685, -57.7952, 1.56 ) }
    dend_17 { pt3dadd( 11.4857, -67.1961, -57.9189, 0.96 ) }
    dend_17 { pt3dadd( 13.7922, -68.754, -58.2289, 1.56 ) }
    dend_17 { pt3dadd( 15.6163, -70.0132, -58.5604, 1.56 ) }
    dend_17 { pt3dadd( 17.2032, -71.1842, -58.9823, 0.96 ) }
    dend_17 { pt3dadd( 19.1725, -72.7489, -59.5902, 1.2 ) }
    dend_17 { pt3dadd( 20.5201, -73.957, -60.1143, 1.2 ) }
    dend_17 { pt3dadd( 21.7446, -75.2632, -60.7516, 1.56 ) }
    dend_17 { pt3dadd( 22.6864, -76.375, -61.3913, 1.56 ) }
    dend_17 { pt3dadd( 23.6286, -77.5796, -62.1556, 0.84 ) }
    dend_17 { pt3dadd( 24.6489, -78.9531, -63.1023, 1.44 ) }
    dend_17 { pt3dadd( 25.7667, -80.5875, -64.1947, 0.84 ) }
    dend_17 { pt3dadd( 26.6918, -82.1133, -65.1935, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -42.0981, -11.6323, 23.1125, 0.72 ) }
    dend_13 { pt3dadd( -43.412, -12.1106, 24.4486, 0.72 ) }
    dend_13 { pt3dadd( -45.3908, -12.8044, 26.0635, 1.2 ) }
    dend_13 { pt3dadd( -47.1711, -13.4286, 27.5164, 1.2 ) }
    dend_13 { pt3dadd( -48.4238, -13.8679, 28.5388, 0.96 ) }
    dend_13 { pt3dadd( -49.4954, -14.2436, 29.4133, 0.72 ) }
    dend_13 { pt3dadd( -51.4031, -14.9125, 30.9702, 0.72 ) }
    dend_13 { pt3dadd( -52.951, -15.5467, 32.1519, 1.2 ) }
    dend_13 { pt3dadd( -60.7847, -18.2158, 39.8869, 1.2 ) }
    dend_13 { pt3dadd( -70.4495, -19.5402, 45.6453, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -42.0981, -11.6323, 23.1125, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( -41.0179, -12.1832, 24.2175, 1.08 ) }
    dend_10 { pt3dadd( -40.7352, -12.3365, 24.5418, 1.08 ) }
    dend_10 { pt3dadd( -39.8992, -12.7221, 25.493, 0.96 ) }
    dend_10 { pt3dadd( -39.2098, -13.0172, 26.2318, 0.96 ) }
    dend_10 { pt3dadd( -38.166, -13.4333, 27.269, 1.44 ) }
    dend_10 { pt3dadd( -36.698, -14.0185, 28.7277, 1.44 ) }
    dend_10 { pt3dadd( -35.623, -14.3763, 29.7622, 0.96 ) }
    dend_10 { pt3dadd( -34.878, -14.6292, 30.5027, 1.32 ) }
    dend_10 { pt3dadd( -34.3702, -14.8349, 31.0396, 1.32 ) }
    dend_10 { pt3dadd( -33.9013, -15.0282, 31.5265, 1.32 ) }
    dend_10 { pt3dadd( -29.3451, -17.5858, 38.0585, 1.32 ) }
    dend_10 { pt3dadd( -24.4481, -20.029, 44.3845, 1.32 ) }
    dend_10 { pt3dadd( -19.0363, -23.103, 49.973, 1.32 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -56.6373, -2.49754, 17.4553, 0.72 ) }
    dend_8 { pt3dadd( -57.7329, -2.01974, 18.6194, 0.72 ) }
    dend_8 { pt3dadd( -58.4179, -1.72101, 19.3472, 0.72 ) }
    dend_8 { pt3dadd( -59.119, -1.41523, 20.0921, 0.72 ) }
    dend_8 { pt3dadd( -60.3343, -0.885227, 21.3834, 1.2 ) }
    dend_8 { pt3dadd( -62.0318, -0.144929, 23.187, 0.72 ) }
    dend_8 { pt3dadd( -63.1401, 0.338392, 24.3645, 1.08 ) }
    dend_8 { pt3dadd( -69.173, 2.4304, 32.0398, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -56.6373, -2.49754, 17.4553, 1.08 ) }
    dend_7 { pt3dadd( -57.8238, -2.43603, 18.8472, 1.08 ) }
    dend_7 { pt3dadd( -58.4785, -2.50101, 19.5812, 1.08 ) }
    dend_7 { pt3dadd( -59.9097, -2.7783, 21.1331, 1.2 ) }
    dend_7 { pt3dadd( -60.8567, -2.9693, 22.1391, 1.2 ) }
    dend_7 { pt3dadd( -61.5009, -3.09472, 22.895, 1.44 ) }
    dend_7 { pt3dadd( -62.3902, -3.24613, 23.9796, 1.08 ) }
    dend_7 { pt3dadd( -62.8782, -3.37438, 24.6304, 0.84 ) }
    dend_7 { pt3dadd( -63.3623, -3.50208, 25.302, 0.84 ) }
    dend_7 { pt3dadd( -64.0089, -3.6194, 26.2139, 0.84 ) }
    dend_7 { pt3dadd( -64.974, -3.60791, 27.5154, 1.2 ) }
    dend_7 { pt3dadd( -65.7636, -3.46094, 28.5188, 1.2 ) }
    dend_7 { pt3dadd( -66.8778, -3.15524, 29.7592, 1.08 ) }
    dend_7 { pt3dadd( -67.4543, -3.01377, 30.3084, 0.96 ) }
    dend_7 { pt3dadd( -68.214, -2.82833, 30.9806, 0.96 ) }
    dend_7 { pt3dadd( -69.6037, -2.52809, 32.0686, 1.32 ) }
    dend_7 { pt3dadd( -70.2676, -2.39461, 32.5016, 1.32 ) }
    dend_7 { pt3dadd( -71.8742, -2.05513, 33.4632, 1.32 ) }
    dend_7 { pt3dadd( -73.5212, -1.69526, 34.2988, 0.84 ) }
    dend_7 { pt3dadd( -81.343, 0.0486049, 41.1647, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.6918, -82.1133, -65.1935, 0.6 ) }
    dend_21 { pt3dadd( 28.8818, -82.3225, -66.5689, 0.6 ) }
    dend_21 { pt3dadd( 30.3246, -82.4603, -67.475, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 26.6918, -82.1133, -65.1935, 0.6 ) }
    dend_18 { pt3dadd( 26.2807, -85.0864, -66.2398, 0.6 ) }
    dend_18 { pt3dadd( 26.1312, -87.5583, -67.5549, 1.08 ) }
    dend_18 { pt3dadd( 26.1424, -89.3306, -68.6615, 1.08 ) }
    dend_18 { pt3dadd( 26.2094, -90.6901, -69.6027, 1.08 ) }
    dend_18 { pt3dadd( 26.3207, -92.1567, -70.6503, 1.08 ) }
    dend_18 { pt3dadd( 26.6275, -95.436, -72.7876, 0.72 ) }
    dend_18 { pt3dadd( 26.9911, -97.5212, -74.104, 1.2 ) }
    dend_18 { pt3dadd( 27.2155, -98.6624, -74.7699, 1.2 ) }
    dend_18 { pt3dadd( 27.3993, -99.6575, -75.2837, 1.2 ) }
    dend_18 { pt3dadd( 27.7176, -101.543, -76.1325, 0.84 ) }
    dend_18 { pt3dadd( 28.2184, -104.454, -77.4391, 0.6 ) }
    dend_18 { pt3dadd( 28.8231, -108.014, -78.8642, 1.32 ) }
    dend_18 { pt3dadd( 29.1515, -110.071, -79.7211, 1.32 ) }
    dend_18 { pt3dadd( 29.4715, -112.2, -80.781, 0.72 ) }
    dend_18 { pt3dadd( 29.701, -113.786, -81.6383, 1.2 ) }
    dend_18 { pt3dadd( 30.2345, -117.835, -84.0206, 1.2 ) }
    dend_18 { pt3dadd( 30.3456, -118.893, -84.7113, 0.72 ) }
    dend_18 { pt3dadd( 30.5423, -121.356, -86.3641, 1.56 ) }
    dend_18 { pt3dadd( 30.6576, -124.568, -88.4898, 0.72 ) }
    dend_18 { pt3dadd( 30.6224, -127.131, -90.165, 0.72 ) }
    dend_18 { pt3dadd( 30.5182, -129.167, -91.4737, 1.44 ) }
    dend_18 { pt3dadd( 30.3765, -130.86, -92.4877, 0.84 ) }
    dend_18 { pt3dadd( 30.2868, -132.135, -93.2607, 0.84 ) }
    dend_18 { pt3dadd( 30.2846, -134.022, -94.2745, 1.44 ) }
    dend_18 { pt3dadd( 30.5557, -137.148, -95.8141, 0.84 ) }
    dend_18 { pt3dadd( 30.7285, -138.524, -96.5468, 0.84 ) }
    dend_18 { pt3dadd( 30.9968, -139.955, -97.3023, 1.32 ) }
    dend_18 { pt3dadd( 31.3199, -141.196, -97.9094, 1.32 ) }
    dend_18 { pt3dadd( 32.6516, -145.108, -99.6921, 0.72 ) }
    dend_18 { pt3dadd( 33.517, -146.849, -100.333, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -19.0363, -23.103, 49.973, 0.96 ) }
    dend_12 { pt3dadd( -13.343, -27.0105, 56.1697, 0.96 ) }
    dend_12 { pt3dadd( -8.41309, -30.171, 63.3661, 0.96 ) }
    dend_12 { pt3dadd( -4.62103, -31.7535, 71.6846, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -19.0363, -23.103, 49.973, 0.84 ) }
    dend_11 { pt3dadd( -12.608, -24.8279, 58.3753, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 33.517, -146.849, -100.333, 0.6 ) }
    dend_20 { pt3dadd( 34.6699, -147.18, -100.237, 0.6 ) }
    dend_20 { pt3dadd( 35.6981, -147.561, -100.108, 0.96 ) }
    dend_20 { pt3dadd( 37.0434, -148.06, -99.9393, 0.6 ) }
    dend_20 { pt3dadd( 37.8809, -148.37, -99.8343, 0.6 ) }
    dend_20 { pt3dadd( 39.224, -148.868, -99.6659, 1.2 ) }
    dend_20 { pt3dadd( 40.8327, -149.464, -99.4642, 0.72 ) }
    dend_20 { pt3dadd( 41.9172, -149.968, -99.2938, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 33.517, -146.849, -100.333, 0.48 ) }
    dend_19 { pt3dadd( 33.8901, -148.03, -100.736, 0.48 ) }
    dend_19 { pt3dadd( 34.5151, -149.494, -101.721, 1.08 ) }
    dend_19 { pt3dadd( 35.1898, -151.098, -102.756, 0.6 ) }
    dend_19 { pt3dadd( 35.6824, -152.391, -103.53, 0.36 ) }
    dend_19 { pt3dadd( 36.3164, -154.048, -104.488, 0.36 ) }
    dend_19 { pt3dadd( 36.8971, -155.532, -105.353, 0.84 ) }
    dend_19 { pt3dadd( 38.0951, -158.402, -107.215, 0.6 ) }
    dend_19 { pt3dadd( 39.0708, -160.574, -108.738, 0.6 ) }
    dend_19 { pt3dadd( 39.9837, -162.515, -110.119, 1.08 ) }
    dend_19 { pt3dadd( 40.385, -163.355, -110.67, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 40.9809, -164.57, -111.386, 1.08 ) }
    dend_19 { pt3dadd( 42.1086, -166.655, -112.551, 0.48 ) }
    dend_19 { pt3dadd( 43.1982, -168.421, -113.512, 0.48 ) }
    dend_19 { pt3dadd( 43.7111, -169.136, -113.955, 0.48 ) }
    dend_19 { pt3dadd( 44.6381, -170.328, -114.709, 0.48 ) }
    dend_19 { pt3dadd( 45.4174, -171.327, -115.316, 0.48 ) }
    dend_19 { pt3dadd( 46.6433, -172.835, -116.157, 1.08 ) }
    dend_19 { pt3dadd( 47.3552, -173.643, -116.568, 0.48 ) }
    dend_19 { pt3dadd( 48.6145, -174.986, -117.295, 1.08 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, axon_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, axon_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_47 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_44 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_25 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_24 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_51 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_48 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_50 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_39 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_12 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 3
    dend_14 nseg = 3
    dend_52 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_36 nseg = 3
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 11
    dend_30 nseg = 3
    dend_23 nseg = 5
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 9
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_SBC_02fff5e56a_0_0


