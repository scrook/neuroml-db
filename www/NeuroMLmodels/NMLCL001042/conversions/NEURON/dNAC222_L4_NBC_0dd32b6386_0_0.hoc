// Cell: dNAC222_L4_NBC_0dd32b6386_0_0
/*
{
  "id" : "dNAC222_L4_NBC_0dd32b6386_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.06688, 8.74128, -1.1272, 2.20257", "-0.937306, 7.82691, -0.999547, 3.85541", "-0.807729, 6.91254, -0.871898, 5.84624", "-0.678152, 5.99818, -0.744249, 7.26434", "-0.548576, 5.08381, -0.6166, 10.3712", "-0.418999, 4.16944, -0.488951, 11.2076", "-0.289422, 3.25508, -0.361302, 11.8779", "-0.159846, 2.34071, -0.233653, 11.9642", "-0.0302691, 1.42634, -0.106004, 11.5058", "0.0993075, 0.511976, 0.0216455, 11.0473", "0.228884, -0.402391, 0.149295, 10.6248", "0.358461, -1.31676, 0.276944, 10.1128", "0.488037, -2.23113, 0.404593, 9.57755", "0.617614, -3.14549, 0.532242, 9.04063", "0.747191, -4.05986, 0.659891, 8.48926", "0.876767, -4.97423, 0.78754, 7.85518", "1.00634, -5.88859, 0.915189, 7.19302", "1.13592, -6.80296, 1.04284, 6.47635", "1.2655, -7.71733, 1.17049, 5.43009", "1.39507, -8.63169, 1.29814, 3.7337", "1.52465, -9.54606, 1.42578, 2.56951" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.70824, 3.54878, -7.70142, 0.83", "-5.95756, 3.80366, -9.12052, 0.83", "-6.99335, 3.72516, -10.2233, 1.11", "-8.86387, 3.57148, -12.1132, 1.11", "-10.5129, 3.27244, -14.5906, 1.11", "-11.0141, 3.13876, -15.4049, 0.83", "-12.6091, 2.6025, -18.0321, 0.83", "-13.1487, 2.3291, -19.0525, 0.55", "-14.1026, 1.596, -21.0155, 0.55", "-16.2539, -0.507503, -25.6615, 0.83", "-17.2148, -1.49357, -27.8208, 0.55", "-17.5085, -1.75462, -28.6007, 0.83", "-17.8369, -1.99774, -29.6816, 0.55", "-18.081, -2.17569, -30.5523, 1.11", "-18.7326, -2.60875, -32.9251, 1.11", "-19.6263, -2.97208, -35.7634, 0.83", "-20.5498, -3.21367, -39.0375, 0.83", "-21.4167, -3.2805, -41.9568, 0.28", "-21.5718, -3.26437, -42.429, 0.55", "-21.9833, -3.1618, -43.573, 0.28", "-22.4405, -2.9788, -44.6736, 0.55", "-22.9023, -2.73565, -45.5558, 0.28", "-23.4041, -2.52043, -46.257, 0.83", "-24.6042, -1.92179, -48.0617, 0.28", "-24.6846, -1.87591, -48.1965, 0.55", "-25.2235, -1.51993, -49.2585, 0.28", "-25.7292, -1.15194, -50.3983, 0.83", "-25.8521, -1.07114, -50.7102, 0.83", "-27.2125, -0.301484, -54.4647, 0.28", "-27.4031, -0.211873, -54.9831, 0.55", "-28.2139, 0.087749, -57.1103, 0.28", "-28.5552, 0.184341, -58.0302, 0.83", "-29.2411, 0.367607, -59.788, 0.28", "-29.5988, 0.453582, -60.6099, 0.55", "-29.9816, 0.520592, -61.365, 0.28", "-30.185, 0.565352, -61.7751, 0.55", "-32.1669, 1.13275, -65.5516, 0.28", "-32.4077, 1.243, -66.0403, 0.55", "-32.6369, 1.38203, -66.5322, 0.28", "-32.825, 1.54304, -67.0294, 0.83", "-33.4787, 2.29089, -69.1844, 0.28", "-33.5526, 2.41563, -69.4955, 0.83", "-33.8378, 3.11293, -70.9758, 0.28", "-33.8844, 3.2123, -71.2258, 0.83", "-34.1929, 3.85599, -72.9065, 0.28", "-34.2434, 3.95974, -73.1799, 0.83", "-34.5931, 4.6585, -75.0109, 0.28", "-34.6563, 4.78197, -75.3444, 0.83", "-35.612, 6.44869, -80.0325, 0.28", "-36.1489, 7.26856, -82.4595, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.88824, 6.74078, -6.65142, 1.11", "-5.42047, 7.6709, -9.26822, 1.11", "-6.55095, 7.9741, -10.8749, 1.11", "-8.94106, 8.15913, -14.1952, 0.83", "-10.8451, 8.09346, -16.7538, 1.38", "-17.3457, 7.33382, -25.4492, 0.83", "-20.4374, 6.91543, -29.737, 0.83", "-27.3424, 5.53166, -40.2137, 0.83", "-35.3006, 3.54469, -52.4161, 0.83", "-37.8862, 2.7296, -56.3113, 0.83", "-39.5876, 2.11496, -58.7479, 0.83", "-41.9009, 1.17656, -61.9541, 0.83", "-43.8746, 0.216739, -65.2687, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.44824, 7.70678, -3.11142, 0.83", "-4.29342, 10.5156, -3.18349, 0.55", "-5.38805, 12.2593, -3.2134, 0.55", "-6.29494, 13.7946, -3.32983, 1.11", "-7.55895, 16.0115, -3.54046, 0.83", "-9.96711, 20.8566, -4.08688, 0.83", "-11.5924, 24.5237, -4.51939, 0.83", "-13.2694, 28.7011, -5.01737, 0.83", "-14.3632, 31.9099, -5.26631, 0.83", "-15.1556, 34.9925, -5.4043, 1.38", "-15.8593, 39.2939, -5.36977, 0.55", "-15.9802, 42.4159, -5.13404, 0.55", "-15.9658, 44.5937, -4.8112, 0.55", "-15.9413, 48.6423, -4.01985, 0.55", "-15.9484, 50.3243, -3.62931, 0.55", "-16.067, 53.5198, -2.88138, 0.55", "-16.6144, 59.5559, -1.63606, 0.55", "-16.9042, 62.176, -1.22203, 0.28", "-17.2671, 65.03, -0.948289, 0.28", "-17.539, 67.4177, -0.854111, 0.55", "-17.7214, 69.833, -0.889513, 0.28", "-17.9454, 76.4348, -1.36498, 0.83", "-17.8896, 79.1102, -1.73984, 0.55", "-17.6418, 82.1911, -2.30419, 0.28", "-17.3866, 84.4099, -2.75768, 0.55", "-16.3259, 91.3946, -4.35931, 0.28", "-16.081, 92.5807, -4.67215, 0.83", "-14.9247, 96.9198, -6.08552, 0.28", "-14.5522, 98.1772, -6.53912, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.69824, 6.66728, 3.79858, 1.11", "-5.1509, 11.0182, 3.95697, 1.11", "-7.32839, 17.0127, 4.28224, 1.11", "-8.68632, 20.9219, 4.43182, 1.11", "-10.5523, 25.9983, 4.66748, 1.11", "-12.568, 31.2294, 4.90175, 1.11", "-14.1745, 35.5416, 5.00601, 1.11", "-15.4638, 38.8497, 4.88967, 1.11", "-17.0783, 42.9152, 4.4738, 1.11", "-18.3786, 46.4878, 3.98246, 1.11", "-19.7818, 50.8998, 3.24759, 1.11", "-21.3291, 56.2061, 2.19171, 1.11", "-23.1771, 63.4196, 0.485854, 1.11", "-23.8781, 66.2845, -0.221, 1.11", "-24.7168, 69.8976, -1.10992, 0.83", "-25.3363, 73.1971, -1.94719, 0.83", "-25.9646, 76.9585, -2.85065, 1.11", "-26.6539, 81.2958, -3.7343, 1.11", "-26.8335, 82.6919, -3.95974, 0.28", "-27.1836, 85.2688, -4.34678, 0.55", "-27.4785, 87.0727, -4.59873, 0.55", "-28.0215, 89.9178, -5.03199, 0.55", "-28.5398, 92.3676, -5.44833, 0.28", "-28.7324, 93.2276, -5.65163, 0.83", "-29.1919, 95.1196, -6.15091, 0.28", "-30.5389, 100.209, -7.36805, 0.55", "-31.4156, 103.363, -8.1517, 0.28", "-31.9962, 105.582, -8.72805, 1.11", "-33.0934, 110.168, -9.97599, 0.28", "-33.7272, 113.288, -10.808, 1.11", "-34.3366, 117.019, -11.7924, 0.28", "-34.5709, 119.5, -12.4169, 0.55", "-34.6219, 122.187, -12.9453, 0.28", "-34.5425, 123.592, -13.1678, 0.28", "-34.338, 125.114, -13.3446, 0.55", "-33.9606, 127.135, -13.6275, 0.28", "-33.6383, 128.683, -13.8752, 0.83", "-33.1276, 131.138, -14.1426, 0.28", "-33.0005, 131.81, -14.2137, 0.83", "-32.5151, 134.628, -14.5378, 0.55", "-32.1507, 136.885, -14.8293, 0.28", "-32.0213, 137.756, -14.9335, 0.55", "-31.6045, 140.307, -15.2689, 0.28", "-31.5121, 140.921, -15.3544, 0.55", "-31.1923, 142.888, -15.6289, 0.28", "-31.0749, 143.564, -15.7293, 0.55", "-30.7907, 145.734, -16.0466, 0.28", "-30.5625, 148.849, -16.5014, 0.83", "-30.5312, 150.751, -16.7752, 0.28", "-30.6177, 151.993, -17.0171, 0.83", "-30.8978, 154.186, -17.5362, 0.28", "-31.1638, 155.953, -18.0287, 0.55", "-31.3868, 157.25, -18.426, 0.28", "-31.8584, 159.605, -19.193, 0.83", "-32.7617, 164.207, -20.7265, 0.28", "-32.9699, 165.288, -21.0829, 0.55", "-33.8991, 170.212, -22.703, 0.55", "-33.9949, 170.803, -22.902, 0.55", "-34.2997, 172.973, -23.6239, 0.28", "-34.4505, 174.077, -23.9773, 0.55", "-34.614, 175.453, -24.3011, 0.28", "-34.8641, 176.847, -24.5943, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.18176, 5.02928, -6.33142, 0.83", "4.5281, 7.25365, -9.40105, 0.83", "4.45245, 8.67286, -11.7347, 0.83", "4.36988, 9.83298, -13.5822, 1.94", "4.28776, 11.844, -16.9323, 0.83", "4.23484, 13.1011, -18.9685, 1.11", "4.12835, 16.0162, -23.3111, 1.38", "3.89223, 17.5059, -25.491, 0.28", "3.58248, 18.892, -27.3633, 0.83", "2.82154, 21.7844, -30.6471, 0.28", "2.51264, 22.9273, -31.6336, 0.83", "1.97889, 24.9433, -32.9359, 0.83", "1.28302, 27.3818, -34.1772, 1.11", "-0.031996, 31.3788, -36.1121, 0.28", "-0.807065, 33.3075, -37.0125, 0.83", "-2.06103, 36.0981, -38.2075, 0.55", "-2.98898, 38.0071, -39.0788, 0.83", "-4.21707, 40.3737, -40.1889, 0.28", "-5.82685, 43.3862, -41.631, 0.83", "-7.33183, 46.22, -42.8328, 0.55", "-8.44186, 48.2714, -43.6965, 0.83", "-10.4946, 51.7806, -45.1171, 0.28", "-11.0022, 52.6308, -45.437, 0.55", "-11.8522, 54.0424, -45.9169, 0.28", "-13.623, 56.9108, -46.8242, 0.83", "-14.9315, 59.1447, -47.5031, 0.28", "-16.0482, 61.1072, -48.0897, 0.83", "-16.4883, 61.9094, -48.303, 0.28", "-17.5251, 63.8092, -48.8206, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.99176, 3.58028, -9.40142, 1.11", "9.01639, 3.40342, -9.40142, 1.11", "12.0454, 3.27031, -9.40142, 1.11", "16.3011, 3.0833, -9.40142, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.36824, 1.24928, 0.248578, 0.55", "-6.97483, 1.47648, -0.88325, 0.55", "-8.35993, 1.67236, -1.85905, 0.83", "-11.0747, 2.05629, -3.77162, 0.83", "-15.9396, 2.74428, -7.19889, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.65176, -8.34772, -3.47142, 0.83", "3.26613, -11.4152, -4.6997, 0.83", "3.69641, -14.3458, -6.11101, 0.83", "4.09024, -18.1672, -8.47543, 1.11", "4.56435, -23.1937, -11.9016, 0.83", "5.09362, -28.488, -15.7559, 0.83", "5.59168, -33.45, -19.5291, 0.55", "5.78856, -35.5876, -21.3574, 0.83", "6.16155, -39.8803, -25.5258, 0.55", "6.24964, -41.0021, -26.7877, 0.55", "6.2235, -43.6527, -30.1632, 0.83", "6.01761, -45.7351, -33.1405, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.14824, -10.3952, 4.18858, 2.22", "-0.733547, -12.3771, 4.29539, 2.22", "-1.43317, -14.746, 4.42305, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.52465, -9.54606, 1.42578, 1.11", "3.6293, -24.3977, 1.42578, 1.11", "5.73394, -39.2493, 1.42578, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-17.5251, 63.8092, -48.8206, 0.28", "-20.7145, 65.0995, -48.3577, 0.28", "-21.866, 65.5504, -48.2013, 0.28", "-23.3258, 66.1323, -48.0227, 0.55", "-24.831, 66.716, -47.8412, 0.28", "-26.0229, 67.1686, -47.7025, 0.55", "-28.3302, 68.0339, -47.4432, 0.28", "-30.2725, 68.7665, -47.1725, 0.28", "-32.1902, 69.5647, -46.8955, 0.55", "-34.8353, 70.7283, -46.5608, 0.28", "-35.9811, 71.2899, -46.4846, 0.28", "-36.8443, 71.7627, -46.4559, 0.55", "-40.7981, 74.3091, -46.5346, 0.28", "-43.9392, 76.4991, -46.688, 0.28", "-45.0547, 77.3479, -46.7879, 0.55", "-48.8749, 80.5481, -47.2055, 0.28", "-49.7169, 81.2925, -47.3017, 0.55", "-54.5396, 85.6808, -47.9323, 0.28", "-55.1367, 86.2455, -48.0266, 1.38", "-59.8792, 90.8028, -48.7231, 0.28", "-63.8889, 94.6839, -49.181, 0.28", "-66.2926, 97.0234, -49.3575, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.5251, 63.8092, -48.8206, 0.83", "-17.9115, 64.8087, -49.6828, 0.83", "-18.3523, 65.9487, -50.6662, 0.28", "-19.1457, 68.0009, -52.4365, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "16.3011, 3.0833, -9.40142, 1.11", "18.3708, 2.95074, -10.5594, 1.11", "20.114, 2.71845, -11.6102, 1.11", "22.004, 2.51294, -12.8822, 1.11", "24.2068, 2.32797, -14.4557, 1.11", "27.2747, 2.06107, -16.6604, 1.11", "30.2408, 1.80302, -18.792, 1.11", "33.1296, 1.69191, -20.9413, 0.83", "35.4059, 1.64491, -22.7269, 0.83", "37.0238, 1.58877, -24.0509, 0.83", "40.0882, 1.47379, -26.6392, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "16.3011, 3.0833, -9.40142, 0.55", "18.3795, 4.53767, -9.28231, 0.55", "19.9679, 5.64906, -9.19128, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.9396, 2.74428, -7.19889, 0.83", "-18.5445, 2.54238, -8.10294, 0.83", "-20.005, 2.63676, -8.67157, 0.83", "-21.368, 2.63907, -9.20814, 1.94", "-23.6687, 2.35256, -10.9986, 0.55", "-25.3641, 2.09985, -12.4482, 0.55", "-27.6177, 1.83067, -14.3931, 0.83", "-29.2767, 1.62645, -15.8433, 0.83", "-31.0144, 1.50135, -17.4518, 0.83", "-37.5525, 1.30013, -23.6127, 1.38", "-40.049, 1.3015, -25.9521, 0.55", "-42.1577, 1.3017, -27.9924, 0.55", "-43.7502, 1.28747, -29.5249, 1.11", "-46.3445, 1.39869, -31.8551, 0.28", "-46.8264, 1.47634, -32.2117, 0.28", "-47.5844, 1.69105, -32.5606, 0.83", "-50.4751, 2.73262, -33.7427, 0.28", "-51.191, 3.0318, -33.9973, 0.55", "-53.3556, 4.07991, -34.7638, 0.28", "-55.8784, 5.25623, -35.7556, 1.11", "-57.6233, 6.08656, -36.574, 0.28", "-58.8733, 6.68727, -37.2429, 0.83", "-62.0488, 8.31382, -39.1366, 0.28", "-63.3735, 9.05655, -40.09, 0.83", "-66.0266, 10.6304, -42.3005, 0.55", "-67.2854, 11.4349, -43.4629, 0.55", "-68.2952, 12.1054, -44.4144, 0.83", "-69.2372, 12.7874, -45.3478, 0.83", "-71.8316, 14.9994, -48.0226, 0.28", "-72.0624, 15.2156, -48.256, 0.83", "-73.2285, 16.5148, -49.4414, 0.28", "-73.759, 17.1073, -49.9963, 0.55", "-74.6428, 18.0643, -50.907, 0.28", "-75.3844, 18.7417, -51.6304, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.9396, 2.74428, -7.19889, 0.28", "-16.8817, 1.30572, -7.45608, 0.28", "-17.1853, 0.830482, -7.52161, 0.83", "-18.0292, -0.644972, -7.85447, 0.28", "-18.7377, -1.85083, -8.15856, 0.28", "-19.0171, -2.30075, -8.28571, 0.55", "-20.1597, -4.07602, -8.82155, 0.28", "-20.8868, -5.19611, -9.1656, 1.11", "-23.4952, -8.88031, -10.324, 0.28", "-24.0888, -9.66375, -10.5783, 0.55", "-24.7428, -10.4927, -10.8401, 0.28", "-25.6092, -11.5121, -11.1658, 0.28", "-26.188, -12.1183, -11.3647, 0.55", "-27.4755, -13.4172, -11.6114, 0.28", "-27.8386, -13.7954, -11.5169, 0.55", "-28.9263, -15.0487, -10.9496, 0.28", "-29.3379, -15.6048, -10.6242, 0.55", "-29.9504, -16.4835, -10.0523, 0.28", "-30.9534, -17.9387, -9.13661, 0.83", "-33.1877, -21.3399, -7.11893, 0.28", "-33.5492, -21.8938, -6.82235, 0.83", "-34.8363, -24.0381, -5.87219, 0.28", "-35.3145, -24.8749, -5.57021, 0.55", "-36.8526, -27.7137, -4.80378, 0.28", "-37.4199, -28.8189, -4.66953, 0.28", "-37.8783, -29.7503, -4.67991, 0.55", "-38.6091, -31.3286, -4.72817, 0.28", "-38.8312, -31.8274, -4.76485, 1.11", "-39.9946, -35.0176, -4.95946, 0.28", "-40.339, -36.3684, -5.02311, 0.83", "-44.0095, -44.2092, -3.41146, 0.83", "-47.6889, -52.1253, -2.16568, 0.83", "-50.1631, -60.6692, -1.94371, 0.83", "-52.7201, -69.1815, -1.65276, 0.83", "-56.5269, -77.0647, -3.06853, 0.83", "-59.6062, -85.3924, -3.06105, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.01761, -45.7351, -33.1405, 0.83", "8.1869, -47.1605, -33.8623, 0.83", "10.5734, -48.7252, -34.5871, 0.28", "11.7261, -49.4856, -34.9205, 1.11", "14.2921, -51.2775, -35.6603, 0.55", "15.9961, -52.4389, -36.1178, 0.55", "19.8589, -54.9704, -37.1053, 1.38", "21.6587, -56.014, -37.6675, 0.28", "22.0702, -56.2445, -37.8175, 0.55", "23.2085, -56.8598, -38.3835, 0.55", "25.3897, -57.9786, -39.6413, 0.55", "26.7483, -58.6659, -40.6532, 1.38", "30.454, -60.5279, -43.8231, 0.55", "31.5478, -61.1044, -44.7706, 1.11", "34.9843, -62.9363, -47.7435, 0.28", "36.3867, -63.6912, -48.9566, 1.11", "38.8105, -65.1082, -51.0669, 0.55", "41.4154, -66.6634, -53.1648, 0.28", "42.5263, -67.309, -53.8976, 1.11", "44.6408, -68.4, -55.1033, 0.28", "44.9323, -68.5266, -55.2236, 0.55", "46.3649, -69.066, -55.7107, 0.28", "47.3182, -69.3582, -55.9197, 0.55", "48.9819, -69.7734, -56.1971, 0.28", "50.2871, -70.1175, -56.3998, 0.55", "51.9089, -70.5444, -56.5862, 0.28", "53.0116, -70.847, -56.7611, 0.28", "53.5448, -70.9907, -56.859, 0.55", "55.8758, -71.7293, -57.407, 0.28", "56.7023, -72.0214, -57.6353, 0.55", "58.5559, -72.8723, -58.4131, 0.55", "60.0324, -73.64, -59.2069, 0.28", "60.4311, -73.852, -59.5164, 0.55", "61.9425, -74.646, -60.7721, 0.28", "62.2038, -74.7767, -60.993, 0.55", "65.2473, -76.213, -63.5381, 0.28", "65.8628, -76.5001, -64.0355, 0.83", "69.2538, -77.8459, -66.441, 0.28", "71.626, -78.6681, -67.9649, 0.28", "72.8556, -79.023, -68.6218, 0.55", "76.3644, -79.8895, -70.1627, 0.28", "77.7275, -80.1355, -70.5484, 0.83", "80.0885, -80.5282, -70.9705, 0.28", "80.7576, -80.6502, -71.0148, 0.28", "83.6625, -81.1482, -71.0861, 0.28", "84.1285, -81.2315, -71.0758, 0.83", "87.2216, -81.7914, -70.8116, 0.28", "89.5984, -82.2519, -70.6096, 0.55", "91.7168, -82.7232, -70.4179, 0.55", "93.772, -83.1909, -70.2207, 0.28", "94.5036, -83.3577, -70.1439, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "6.01761, -45.7351, -33.1405, 0.28", "4.89298, -48.5067, -33.9277, 0.28", "4.60655, -49.2127, -34.1282, 0.55", "3.97101, -50.7789, -34.573, 0.28", "3.57446, -51.7563, -34.8506, 0.83", "1.9141, -55.8482, -36.0127, 0.28", "1.6354, -56.5351, -36.2078, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.43317, -14.746, 4.42305, 2.22", "-1.42528, -19.9762, 6.11397, 2.22", "-1.41688, -25.5467, 7.9149, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.43317, -14.746, 4.42305, 0.55", "-4.64623, -14.391, 4.25508, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.73394, -39.2493, 1.42578, 1.11", "7.83859, -54.1009, 1.42578, 1.11", "9.94324, -68.9525, 1.42578, 1.11" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-19.1457, 68.0009, -52.4365, 0.28", "-20.4371, 69.4326, -52.2925, 0.28", "-21.0545, 70.2172, -52.3711, 1.11", "-21.6531, 71.0234, -52.4645, 0.28", "-22.2239, 71.8385, -52.5978, 0.55", "-22.8242, 72.7551, -52.7529, 0.28", "-23.5169, 73.8903, -52.9406, 1.38", "-25.0433, 76.6049, -53.433, 0.28", "-25.4277, 77.3777, -53.5985, 0.55", "-26.1378, 78.9698, -53.966, 0.28", "-26.5366, 80.0298, -54.2741, 0.83", "-27.2292, 82.0651, -54.9352, 0.28", "-27.3757, 82.5205, -55.0794, 0.55", "-28.3969, 85.7447, -56.094, 0.28", "-28.604, 86.3857, -56.3115, 0.55", "-29.5762, 89.344, -57.3168, 0.28", "-29.9146, 90.3622, -57.6925, 0.55", "-30.2432, 91.3584, -58.0822, 0.28", "-30.3557, 91.6918, -58.2116, 1.11", "-31.2942, 93.9948, -59.0326, 0.28", "-31.5731, 94.6331, -59.2388, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-19.1457, 68.0009, -52.4365, 0.55", "-17.703, 68.1977, -52.242, 0.55", "-16.4907, 68.3631, -52.0785, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "40.0882, 1.47379, -26.6392, 0.28", "43.0908, 1.61505, -32.1455, 0.28", "45.6667, 1.87097, -36.7877, 0.83", "49.5764, 2.34672, -43.3609, 0.28", "50.591, 2.45283, -44.9308, 0.83", "53.6367, 2.77275, -49.2422, 0.28", "54.445, 2.86746, -50.3059, 0.55", "55.7602, 3.10491, -51.6774, 0.28", "57.4968, 3.5498, -53.0719, 0.28", "59.5054, 4.06584, -54.1835, 0.83", "61.0987, 4.50093, -55.0364, 0.83", "63.909, 5.25108, -56.433, 0.28", "66.1719, 5.94511, -57.6329, 0.83", "69.4654, 7.07726, -59.3696, 0.28", "69.4654, 7.07726, -59.3696, 0.55", "72.6607, 8.40309, -61.0375, 0.28", "73.6496, 8.78016, -61.5441, 0.55", "76.1512, 9.83708, -63.0987, 0.28", "77.9064, 10.6899, -64.5105, 1.11", "80.3367, 12.0625, -67.2568, 0.28", "81.8922, 13.0231, -69.2639, 0.55", "83.2244, 13.9434, -71.1544, 0.28", "86.9336, 16.8058, -76.8449, 0.55", "88.8087, 18.4177, -79.938, 1.11", "92.4546, 21.8909, -86.2512, 0.28", "93.1614, 22.6842, -87.5226, 0.55", "94.2055, 24.0396, -89.3592, 0.28", "94.8719, 25.0201, -90.4106, 0.55", "96.2883, 27.1644, -92.1757, 0.28", "96.9216, 28.3267, -92.9795, 1.38", "99.1535, 33.1243, -95.8246, 0.28", "99.6837, 34.4712, -96.706, 0.83", "100.945, 38.1048, -99.2573, 0.28", "101.222, 39.0122, -99.9351, 0.55", "102.097, 42.2233, -102.365, 0.28", "102.306, 43.0401, -102.993, 0.55", "103.214, 46.6545, -105.642, 0.28", "103.475, 47.5809, -106.285, 0.55", "104.39, 50.6931, -108.26, 0.28", "104.725, 51.6542, -108.778, 0.83", "105.749, 54.171, -109.869, 0.28", "106.401, 55.5649, -110.329, 0.55", "108.722, 59.6177, -111.113, 0.28", "109.413, 60.6252, -111.179, 0.83", "112.036, 63.9433, -111.016, 0.28", "112.419, 64.3545, -110.969, 0.55", "114.978, 66.755, -110.517, 0.28", "116.592, 68.1909, -110.169, 0.55", "120.209, 71.2236, -109.148, 0.28", "120.502, 71.461, -109.068, 0.55", "124.661, 74.8372, -108.089, 0.28", "124.949, 75.0633, -108.025, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "40.0882, 1.47379, -26.6392, 0.83", "41.9178, 1.92987, -27.6939, 0.83", "42.8058, 2.14953, -28.2124, 0.55", "43.4482, 2.25777, -28.5856, 0.55", "44.9452, 2.45464, -29.455, 1.11", "47.7621, 2.71875, -31.2802, 0.28", "48.1805, 2.74942, -31.5522, 1.11", "49.997, 2.82248, -32.821, 0.28", "51.301, 2.85679, -33.7043, 0.28", "52.3062, 2.88283, -34.3573, 0.83", "54.3746, 2.97358, -35.6679, 0.28", "55.7398, 2.98706, -36.4312, 0.28", "56.4696, 3.0109, -36.8463, 1.11", "58.2525, 3.14209, -37.8622, 0.28", "58.852, 3.24343, -38.1864, 0.55", "61.3302, 3.73583, -39.3466, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-75.3844, 18.7417, -51.6304, 0.28", "-77.4166, 20.0849, -51.8314, 0.28", "-77.9222, 20.4411, -51.9759, 0.55", "-79.3513, 21.4143, -52.4611, 0.28", "-80.8552, 22.4716, -53.0904, 0.55", "-82.5336, 23.6639, -53.7821, 0.28", "-82.8932, 23.9194, -53.9295, 0.55", "-85.3104, 25.6506, -55.014, 0.28", "-85.9947, 26.1569, -55.3431, 0.83", "-87.7444, 27.5641, -56.3445, 0.28", "-88.8664, 28.5514, -57.0474, 0.83", "-90.9312, 30.52, -58.3106, 0.28", "-91.1137, 30.7051, -58.4103, 0.83", "-92.833, 32.5823, -59.2396, 0.28", "-94.7834, 34.9735, -60.265, 0.83", "-95.9571, 36.5644, -60.8968, 0.28", "-96.4009, 37.2879, -61.1996, 0.55", "-97.0584, 38.5669, -61.7254, 0.28", "-97.4529, 39.4137, -62.0239, 0.55", "-98.3811, 41.65, -62.6065, 0.28", "-98.609, 42.1886, -62.6526, 0.83", "-99.7744, 44.8971, -62.7504, 0.28", "-100.051, 45.5512, -62.7431, 0.55", "-100.97, 47.6864, -62.6333, 0.28", "-101.31, 48.4717, -62.5287, 0.83", "-103.786, 54.1379, -61.5107, 0.28", "-104.392, 55.5574, -61.1927, 0.55", "-107.24, 62.3748, -59.4156, 0.28", "-107.584, 63.1912, -59.1969, 0.83", "-111.391, 72.1836, -56.8023, 0.28", "-111.949, 73.505, -56.4377, 0.83", "-113.401, 76.991, -55.4031, 0.28", "-116.063, 83.3036, -53.4506, 0.28", "-117.001, 85.4874, -52.7417, 0.28", "-117.356, 86.3034, -52.4942, 0.83", "-118.091, 87.8806, -52.0481, 0.28", "-118.962, 89.6897, -51.6001, 0.55", "-119.711, 91.1971, -51.3363, 0.28", "-120.117, 92.0009, -51.2161, 0.55", "-120.853, 93.4356, -51.0165, 0.28", "-121.284, 94.1697, -50.8814, 0.55", "-123.846, 98.0195, -50.0418, 0.28", "-126.255, 101.144, -49.2701, 0.28", "-127.284, 102.358, -48.9357, 0.28", "-127.977, 103.108, -48.7264, 1.11", "-130.771, 105.9, -47.934, 0.28", "-131.513, 106.578, -47.723, 0.55", "-134.922, 109.323, -46.7903, 0.28", "-135.152, 109.501, -46.7302, 0.55", "-137.603, 111.572, -46.1228, 0.28", "-137.902, 111.844, -46.056, 0.83", "-141.206, 114.942, -45.4494, 0.28", "-142.077, 115.771, -45.2743, 0.55", "-144.412, 117.998, -44.7705, 0.28", "-146.451, 119.976, -44.3376, 0.28", "-149.195, 122.606, -43.7759, 0.28", "-149.867, 123.231, -43.6487, 0.83", "-152.062, 125.173, -43.2842, 0.28", "-152.563, 125.583, -43.1806, 0.55", "-156.191, 128.281, -42.2878, 0.28", "-157.142, 128.915, -42.0317, 0.55", "-158.501, 129.781, -41.6173, 0.28", "-159.026, 130.109, -41.4286, 0.55", "-161.726, 131.663, -40.3361, 0.28", "-162.534, 132.183, -39.954, 0.55", "-163.5, 132.842, -39.4431, 0.28", "-164.139, 133.353, -39.0848, 0.55", "-166.2, 135.2, -37.9196, 0.28", "-166.372, 135.386, -37.8266, 0.55", "-169.278, 138.972, -36.4017, 0.28", "-169.868, 139.777, -36.0844, 0.55", "-170.708, 140.999, -35.5852, 0.28", "-171.25, 141.832, -35.2299, 0.55", "-173.947, 146.54, -33.2811, 0.28", "-174.385, 147.352, -32.9267, 0.55", "-175.624, 149.788, -31.8372, 0.28", "-176.164, 150.892, -31.3338, 0.83", "-177.545, 153.749, -29.996, 0.28", "-179.557, 158.053, -27.8389, 0.28", "-179.831, 158.656, -27.4912, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-75.3844, 18.7417, -51.6304, 0.28", "-76.8944, 18.3499, -51.7049, 0.28", "-77.5462, 18.1808, -51.7371, 0.55", "-79.3871, 17.7032, -51.828, 0.28", "-79.962, 17.554, -51.8564, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.41688, -25.5467, 7.9149, 1.66", "-2.31511, -29.9267, 7.34445, 1.66", "-3.33634, -34.9065, 6.6959, 1.66", "-4.33569, -39.7795, 6.06124, 1.66", "-5.30709, -44.5163, 5.44433, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.41688, -25.5467, 7.9149, 0.83", "1.25717, -27.008, 13.182, 0.83", "2.26906, -27.8912, 15.5351, 0.55", "3.12724, -28.9624, 18.1593, 1.11", "3.71641, -30.0425, 20.4298, 0.55", "4.24529, -31.012, 22.4678, 0.55", "5.31111, -32.9657, 26.575, 0.28", "5.62051, -34.1254, 28.4468, 0.83", "6.08919, -36.0596, 31.814, 0.83", "6.24203, -37.5762, 34.3075, 0.55", "10.4672, -41.2526, 43.5932, 0.55", "13.1219, -46.1598, 52.9458, 0.55", "16.4019, -53.0269, 60.8886, 0.55", "17.9859, -59.7939, 69.3935, 0.55", "18.6984, -66.4396, 78.0925, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.64623, -14.391, 4.25508, 0.83", "-5.10562, -14.4067, 4.22761, 0.83", "-9.89992, -14.4213, 4.0714, 0.83", "-14.6643, -14.4097, 3.95327, 0.83", "-18.3356, -14.2564, 3.86909, 0.83", "-19.7818, -14.1668, 3.83308, 0.83", "-21.8833, -13.9852, 3.78677, 1.11", "-26.2825, -13.5749, 3.56624, 0.83", "-28.9103, -13.1898, 3.33822, 0.83", "-31.6007, -12.5933, 2.79786, 0.55", "-33.1115, -12.2063, 2.23087, 0.55", "-34.6138, -11.788, 1.47187, 0.55", "-37.8024, -11.0115, -0.624366, 0.55", "-39.6939, -10.7312, -2.09165, 0.55", "-42.5357, -10.3985, -4.5824, 0.55", "-46.3859, -10.1455, -8.03737, 0.55", "-47.9784, -10.0856, -9.41584, 0.55", "-50.2039, -10.0883, -11.3447, 0.28", "-52.5082, -10.1842, -13.2693, 0.55", "-54.512, -10.3713, -14.8619, 0.28", "-57.2138, -10.6044, -16.7806, 0.83", "-58.9354, -10.7854, -17.844, 0.28", "-62.058, -11.192, -19.5812, 0.55", "-64.6629, -11.4849, -20.8644, 0.55", "-67.11, -11.8345, -21.9527, 0.55", "-68.9788, -12.2133, -22.6756, 0.83", "-72.8, -13.1196, -24.0883, 0.55", "-74.9507, -13.6324, -24.7674, 0.28", "-75.642, -13.7952, -24.9568, 0.83", "-78.129, -14.399, -25.6518, 0.83", "-80.0284, -14.9198, -26.2663, 0.55", "-81.9321, -15.4704, -26.9991, 0.28", "-85.7737, -16.601, -28.5062, 0.55", "-88.2751, -17.4027, -29.4493, 0.28", "-89.3525, -17.7655, -29.8156, 0.55", "-91.5136, -18.4864, -30.4399, 0.28", "-92.1656, -18.7045, -30.5753, 0.83", "-94.9241, -19.7584, -30.9963, 0.28", "-95.5673, -20.0558, -31.2046, 0.55", "-98.7871, -21.7213, -32.3784, 0.28", "-100.044, -22.4287, -32.9771, 0.55", "-101.458, -23.2336, -33.6951, 0.28", "-102.983, -24.0797, -34.5224, 0.55", "-109.093, -27.1738, -38.4206, 0.28", "-111.764, -28.3236, -40.0956, 0.55", "-115.146, -29.6429, -42.1764, 0.28", "-116.692, -30.1763, -43.1416, 0.55", "-119.923, -31.168, -45.0518, 0.28", "-122.429, -31.7268, -46.239, 0.55", "-125.323, -32.0902, -47.1912, 0.28", "-126.371, -32.083, -47.6065, 0.55", "-129.141, -31.6873, -48.6553, 0.28", "-129.808, -31.4595, -49.1076, 0.55", "-131.136, -30.6053, -50.3782, 0.28", "-131.63, -30.2002, -50.7984, 0.83", "-133.981, -27.725, -52.6613, 0.28", "-134.894, -26.6102, -53.1657, 0.83", "-139.651, -19.8948, -54.3711, 0.28", "-139.981, -19.354, -54.3838, 0.83", "-143.944, -12.0075, -53.3217, 0.28", "-144.403, -11.1284, -52.999, 1.11", "-145.04, -9.97165, -51.9547, 0.28", "-145.379, -9.37099, -51.1991, 0.55", "-145.847, -8.60845, -49.9674, 0.28", "-146.139, -8.09082, -49.2425, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.64623, -14.391, 4.25508, 0.55", "-6.39121, -14.6152, 4.33416, 0.55", "-8.72795, -15.0818, 4.53701, 0.55", "-12.3711, -15.8594, 4.79904, 0.55", "-14.6784, -16.3179, 4.91887, 0.55", "-15.8383, -16.5484, 4.97912, 0.83", "-18.3711, -17.0516, 5.11066, 0.83", "-20.7617, -17.5015, 5.25572, 0.83", "-22.2801, -17.925, 5.37831, 0.55", "-24.4273, -18.6067, 5.57826, 0.55", "-34.0447, -21.1432, 7.28167, 0.55", "-43.7668, -23.8554, 7.32152, 0.55", "-53.6895, -25.2265, 8.36986, 0.55", "-63.6932, -26.1502, 9.029, 0.55", "-73.5202, -27.1672, 10.9723, 0.55", "-82.8834, -29.1018, 14.1672, 0.55", "-92.2118, -29.2113, 17.947, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "61.3302, 3.73583, -39.3466, 0.55", "63.4043, 3.82613, -39.0421, 0.55", "65.0199, 3.95225, -38.7975, 0.55", "67.3816, 4.14888, -38.4031, 0.28", "68.9708, 4.28683, -38.1292, 0.28", "69.6887, 4.34421, -38.0016, 0.55", "72.6185, 4.56151, -37.4822, 0.28", "74.197, 4.67916, -37.1427, 0.83", "75.9719, 4.82497, -36.6945, 0.28", "76.6686, 4.82927, -36.4565, 0.55", "77.9589, 4.71838, -35.9594, 0.28", "78.8773, 4.61605, -35.5735, 0.55", "81.5193, 4.2115, -34.3096, 0.28", "82.9263, 3.91536, -33.5988, 0.83", "86.5054, 3.03957, -31.6621, 0.28", "87.8786, 2.65275, -30.8683, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "61.3302, 3.73583, -39.3466, 0.55", "61.3227, 2.28626, -40.2169, 0.55", "61.4181, -0.172557, -41.5919, 0.55", "61.492, -1.29451, -41.8418, 0.83", "61.5655, -2.16017, -41.9422, 0.28", "61.6117, -2.70679, -41.988, 0.55", "61.7623, -4.79434, -42.1416, 0.28", "61.849, -5.78451, -42.1645, 0.83", "62.3114, -11.0606, -42.0179, 0.28", "62.3931, -11.8383, -41.995, 0.55", "62.5146, -12.979, -41.9849, 0.28", "62.5617, -13.5893, -41.9949, 0.55", "62.6134, -15.3681, -42.1341, 0.28", "62.6028, -15.6495, -42.1898, 0.55", "62.5384, -16.3875, -42.5055, 0.28", "62.4958, -17.2018, -42.7471, 0.55", "62.4474, -19.4065, -43.2663, 0.28", "62.4348, -20.0203, -43.398, 0.83", "62.3605, -22.345, -43.8366, 0.28", "62.2653, -25.3138, -44.3788, 0.83", "62.1686, -29.7357, -45.1381, 0.28", "62.1731, -30.1217, -45.2028, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.30709, -44.5163, 5.44433, 1.11", "-5.14097, -48.174, 5.42114, 1.11", "-5.00946, -50.2995, 5.47642, 1.11", "-5.11371, -54.3745, 5.46239, 1.11", "-5.3821, -58.9882, 5.37338, 1.11", "-5.67188, -63.0407, 5.34073, 1.11", "-6.02032, -67.1744, 5.32395, 1.11", "-7.05139, -75.2176, 5.31725, 1.11", "-8.30169, -83.4862, 5.27251, 1.11", "-9.15981, -88.5997, 5.23146, 1.11", "-9.96361, -93.1432, 5.20128, 1.11", "-10.5602, -96.4324, 5.18365, 1.11", "-11.1425, -99.8552, 5.21208, 1.11", "-11.8818, -104.964, 5.29623, 1.11", "-12.2274, -109.667, 5.48858, 1.11", "-12.4733, -115.333, 5.71906, 1.11", "-12.3939, -118.784, 5.77994, 1.11", "-11.9969, -123.352, 5.85588, 1.11", "-11.4466, -126.614, 5.96755, 1.11", "-10.6893, -129.854, 6.10444, 1.11", "-9.66443, -133.583, 6.28213, 1.11", "-8.03909, -138.798, 6.52023, 1.11", "-5.0605, -147.759, 6.98873, 1.11", "-2.88571, -153.565, 7.42346, 1.11", "-1.4061, -157.778, 7.77428, 0.83", "-0.429594, -160.652, 8.06875, 0.83", "1.28138, -166.117, 8.76028, 0.83", "3.0629, -172.22, 9.77937, 0.83", "4.39552, -177.218, 10.6657, 0.83", "5.98859, -184.494, 11.9561, 0.83", "7.09861, -190.058, 13.0219, 0.83", "7.94269, -195.214, 14.2377, 0.83", "8.8076, -203.274, 17.0111, 0.83", "9.0964, -206.416, 18.2171, 0.83", "9.24488, -208.891, 19.2568, 0.83", "9.41698, -211.31, 20.4901, 0.83", "9.48507, -218.657, 24.6509, 0.83", "9.26888, -225.587, 29.6168, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.30709, -44.5163, 5.44433, 0.83", "-3.75514, -45.3196, 5.78472, 0.83", "-2.11437, -46.1688, 6.14459, 0.83", "0.594761, -47.571, 6.73878, 0.83", "0.924327, -47.7415, 6.81107, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.6984, -66.4396, 78.0925, 0.83", "22.1507, -72.2779, 87.134, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "18.6984, -66.4396, 78.0925, 0.55", "20.2837, -70.5132, 85.6711, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-92.2118, -29.2113, 17.947, 0.83", "-103.833, -32.0606, 11.5977, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-92.2118, -29.2113, 17.947, 0.55", "-95.9917, -29.4498, 28.4816, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "9.26888, -225.587, 29.6168, 0.55", "8.48401, -227.972, 28.5041, 0.55", "7.67002, -231.009, 27.2152, 0.55", "7.06939, -233.484, 26.2058, 0.28", "6.6215, -235.916, 25.2583, 0.55", "6.32347, -237.902, 24.5313, 0.28", "6.22926, -238.612, 24.2826, 0.55", "5.77777, -242.876, 23.0191, 0.28", "5.72677, -243.414, 22.881, 0.83", "5.33609, -246.971, 22.0652, 0.28", "5.1105, -248.886, 21.62, 0.28", "4.96737, -249.905, 21.4035, 0.55", "4.49687, -252.931, 20.7769, 0.28", "4.39828, -253.433, 20.6841, 0.55", "4.03172, -254.915, 20.4269, 0.28", "3.47473, -256.253, 20.2247, 0.83", "3.49711, -264.636, 18.1717, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "9.26888, -225.587, 29.6168, 0.55", "9.60176, -227.981, 32.4165, 0.55", "9.94408, -229.317, 33.955, 0.28", "10.1601, -229.896, 34.624, 0.55", "10.9521, -231.586, 36.6104, 0.55", "11.6931, -233.098, 38.3129, 0.55", "12.4711, -234.685, 40.1002, 0.55", "13.3295, -236.265, 41.6546, 0.55", "13.8671, -237.098, 42.5191, 0.28", "14.3023, -237.667, 43.1346, 0.55", "15.9623, -239.384, 44.994, 0.28", "19.363, -245.464, 53.0923, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.924327, -47.7415, 6.81107, 0.28", "0.751839, -45.3243, 5.57573, 0.28", "0.736995, -45.0816, 5.47075, 0.83", "0.652833, -43.64, 4.92947, 0.28", "0.57945, -42.8857, 4.71305, 0.83", "0.228216, -39.7917, 4.05864, 0.28", "0.170225, -39.0336, 3.9009, 0.55", "0.072119, -37.5474, 3.57999, 0.28", "0.0376091, -36.7826, 3.43234, 0.55", "0.00848588, -35.2453, 3.18995, 0.28", "-0.035315, -33.9151, 3.05148, 0.55", "-0.234815, -30.9001, 3.06603, 0.28", "-0.253894, -30.0737, 3.02207, 0.55", "-2.14787, -20.7828, 2.20461, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.924327, -47.7415, 6.81107, 0.83", "1.0895, -49.7742, 7.0101, 0.83", "1.19113, -52.4063, 7.29558, 0.83", "1.21867, -53.8188, 7.44957, 0.83", "1.32552, -56.5587, 7.76739, 0.83", "1.64502, -60.1257, 8.20617, 0.83", "1.8525, -61.4907, 8.38948, 0.83", "2.18835, -63.1494, 8.65165, 0.83", "2.76349, -65.3722, 8.97598, 0.83", "3.42614, -67.4352, 9.26472, 0.83", "4.2463, -69.629, 9.52479, 0.83", "5.37054, -72.4268, 9.72014, 0.83", "5.9587, -73.7992, 9.80147, 0.83", "7.99246, -78.214, 10.0534, 0.83", "8.5622, -79.4408, 10.1219, 0.83", "10.0986, -82.8632, 10.302, 0.83", "11.0137, -85.1288, 10.5074, 0.83", "12.1079, -87.925, 10.8806, 0.83", "12.5966, -89.2921, 11.1096, 0.55", "13.1658, -91.388, 11.5122, 0.55", "13.4495, -92.7927, 11.8211, 0.83", "14.0602, -96.8265, 12.7999, 0.83", "14.3342, -99.3268, 13.4303, 0.55", "14.5093, -102.25, 14.1414, 0.55", "14.5995, -105.614, 14.921, 0.55", "14.6049, -107.945, 15.4356, 0.55", "14.5686, -112.855, 16.3869, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "14.5686, -112.855, 16.3869, 0.55", "15.665, -114.677, 17.0504, 0.55", "17.1772, -116.954, 17.744, 0.55", "20.5243, -121.988, 19.0692, 0.55", "22.723, -125.358, 19.8376, 0.55", "24.4978, -128.15, 20.4206, 0.55", "26.5012, -131.123, 20.8806, 0.55", "29.1816, -134.917, 21.2191, 0.55", "30.6442, -136.909, 21.2605, 0.55", "32.3418, -139.226, 21.1948, 0.55", "33.7212, -141.017, 21.2061, 0.83", "37.0478, -145.584, 21.3612, 0.55", "37.6951, -146.519, 21.4372, 0.55", "39.2065, -148.844, 21.7524, 0.55", "41.8283, -152.927, 22.4636, 0.55", "43.4078, -155.554, 23.015, 0.55", "45.7659, -159.932, 24.0625, 0.55", "46.6838, -161.922, 24.622, 0.83", "47.2698, -163.206, 24.9674, 0.28", "47.4401, -163.589, 25.0599, 0.55", "47.9395, -164.795, 25.2977, 0.28", "48.3066, -165.675, 25.4842, 0.55", "49.1426, -167.439, 25.9961, 0.28", "50.6077, -170.079, 27.0303, 0.55", "52.3297, -172.736, 28.3252, 0.28", "52.8271, -173.401, 28.7244, 0.83", "54.923, -175.76, 30.41, 0.28", "55.9432, -176.77, 31.2489, 0.55", "57.4891, -178.122, 32.5646, 0.55", "58.9385, -179.202, 33.7963, 0.55", "60.5256, -180.266, 35.1582, 0.55", "62.2003, -181.38, 36.5741, 0.28", "62.6674, -181.714, 36.9509, 0.55", "63.9497, -182.777, 37.9304, 0.28", "64.2228, -183.042, 38.1292, 0.55", "65.5705, -184.464, 39.1067, 0.28", "65.9405, -184.885, 39.3481, 0.83", "68.9592, -188.41, 41.2012, 0.28", "69.1676, -188.635, 41.2988, 0.55", "71.4027, -190.888, 42.1767, 0.28", "72.0824, -191.544, 42.4011, 0.55", "74.0352, -193.391, 42.9627, 0.28", "74.2551, -193.6, 43.0287, 0.55", "77.8655, -196.93, 44.0996, 0.28", "78.5064, -197.539, 44.3083, 0.55", "80.157, -199.223, 44.8875, 0.28", "81.3667, -200.473, 45.3598, 0.83", "83.9304, -203.233, 46.5284, 0.28", "83.9304, -203.233, 46.5284, 0.55", "85.1476, -204.421, 47.0927, 0.55", "86.2092, -205.402, 47.5906, 0.55", "89.4437, -208.179, 49.1941, 0.28", "90.3836, -208.937, 49.6594, 0.55", "92.9598, -210.854, 51.0033, 0.28", "94.2226, -211.779, 51.7088, 0.28", "96.2067, -213.078, 52.7886, 0.55", "96.8064, -213.454, 53.1301, 0.28", "97.1164, -213.663, 53.3183, 0.55", "98.727, -214.813, 54.2929, 0.28", "99.4366, -215.27, 54.6618, 0.55", "103.753, -217.891, 56.704, 0.28", "105.186, -218.673, 57.2213, 0.83", "106.58, -219.413, 57.6406, 0.28", "107.131, -219.701, 57.7918, 0.55", "112.182, -222.28, 58.9594, 0.28", "114.063, -223.171, 59.3651, 0.55", "117.972, -224.916, 60.0339, 0.28", "118.542, -225.125, 60.0945, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "14.5686, -112.855, 16.3869, 0.55", "14.3134, -115.25, 16.9388, 0.55", "14.1489, -117.252, 17.4429, 0.28", "14.0521, -118.455, 17.7296, 0.83", "13.81, -120.725, 18.2998, 0.28", "13.7543, -121.298, 18.4222, 0.83", "13.4295, -123.773, 18.9282, 0.28", "13.3947, -124.061, 18.9766, 0.55", "13.2433, -125.1, 19.1035, 0.55", "12.9747, -126.567, 19.2361, 0.28", "12.6535, -128.371, 19.356, 0.55", "11.97, -131.697, 19.6204, 0.28", "11.6183, -133.273, 19.7747, 0.83", "11.0472, -135.712, 20.0326, 0.28", "10.4664, -138.076, 20.3242, 0.28", "9.79829, -140.564, 20.6274, 0.28", "9.0501, -142.96, 20.9544, 0.83", "8.46645, -144.816, 21.1797, 0.28", "7.80102, -146.773, 21.454, 0.83", "7.11778, -148.729, 21.7007, 0.28", "6.81306, -149.553, 21.8171, 0.28", "5.98765, -151.43, 21.9701, 0.55", "5.26361, -153.331, 21.963, 0.55", "2.25267, -163.317, 22.7462, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_NBC_0dd32b6386_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.45000007819020027)
    connect dend_41(0), soma_0(0.45000007819020027)
    connect dend_40(0), soma_0(0.45000007819020027)
    connect dend_39(0), soma_0(0.45000007819020027)
    connect dend_34(0), soma_0(0.45000007819020027)
    connect dend_27(0), soma_0(0.45000007819020027)
    connect dend_22(0), soma_0(0.45000007819020027)
    connect dend_19(0), soma_0(0.45000007819020027)
    connect dend_0(0), soma_0(0.45000007819020027)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.06688, 8.74128, -1.1272, 2.20257 ) }
    soma_0 { pt3dadd( -0.937306, 7.82691, -0.999547, 3.85541 ) }
    soma_0 { pt3dadd( -0.807729, 6.91254, -0.871898, 5.84624 ) }
    soma_0 { pt3dadd( -0.678152, 5.99818, -0.744249, 7.26434 ) }
    soma_0 { pt3dadd( -0.548576, 5.08381, -0.6166, 10.3712 ) }
    soma_0 { pt3dadd( -0.418999, 4.16944, -0.488951, 11.2076 ) }
    soma_0 { pt3dadd( -0.289422, 3.25508, -0.361302, 11.8779 ) }
    soma_0 { pt3dadd( -0.159846, 2.34071, -0.233653, 11.9642 ) }
    soma_0 { pt3dadd( -0.0302691, 1.42634, -0.106004, 11.5058 ) }
    soma_0 { pt3dadd( 0.0993075, 0.511976, 0.0216455, 11.0473 ) }
    soma_0 { pt3dadd( 0.228884, -0.402391, 0.149295, 10.6248 ) }
    soma_0 { pt3dadd( 0.358461, -1.31676, 0.276944, 10.1128 ) }
    soma_0 { pt3dadd( 0.488037, -2.23113, 0.404593, 9.57755 ) }
    soma_0 { pt3dadd( 0.617614, -3.14549, 0.532242, 9.04063 ) }
    soma_0 { pt3dadd( 0.747191, -4.05986, 0.659891, 8.48926 ) }
    soma_0 { pt3dadd( 0.876767, -4.97423, 0.78754, 7.85518 ) }
    soma_0 { pt3dadd( 1.00634, -5.88859, 0.915189, 7.19302 ) }
    soma_0 { pt3dadd( 1.13592, -6.80296, 1.04284, 6.47635 ) }
    soma_0 { pt3dadd( 1.2655, -7.71733, 1.17049, 5.43009 ) }
    soma_0 { pt3dadd( 1.39507, -8.63169, 1.29814, 3.7337 ) }
    soma_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 2.56951 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.70824, 3.54878, -7.70142, 0.83 ) }
    dend_42 { pt3dadd( -5.95756, 3.80366, -9.12052, 0.83 ) }
    dend_42 { pt3dadd( -6.99335, 3.72516, -10.2233, 1.11 ) }
    dend_42 { pt3dadd( -8.86387, 3.57148, -12.1132, 1.11 ) }
    dend_42 { pt3dadd( -10.5129, 3.27244, -14.5906, 1.11 ) }
    dend_42 { pt3dadd( -11.0141, 3.13876, -15.4049, 0.83 ) }
    dend_42 { pt3dadd( -12.6091, 2.6025, -18.0321, 0.83 ) }
    dend_42 { pt3dadd( -13.1487, 2.3291, -19.0525, 0.55 ) }
    dend_42 { pt3dadd( -14.1026, 1.596, -21.0155, 0.55 ) }
    dend_42 { pt3dadd( -16.2539, -0.507503, -25.6615, 0.83 ) }
    dend_42 { pt3dadd( -17.2148, -1.49357, -27.8208, 0.55 ) }
    dend_42 { pt3dadd( -17.5085, -1.75462, -28.6007, 0.83 ) }
    dend_42 { pt3dadd( -17.8369, -1.99774, -29.6816, 0.55 ) }
    dend_42 { pt3dadd( -18.081, -2.17569, -30.5523, 1.11 ) }
    dend_42 { pt3dadd( -18.7326, -2.60875, -32.9251, 1.11 ) }
    dend_42 { pt3dadd( -19.6263, -2.97208, -35.7634, 0.83 ) }
    dend_42 { pt3dadd( -20.5498, -3.21367, -39.0375, 0.83 ) }
    dend_42 { pt3dadd( -21.4167, -3.2805, -41.9568, 0.28 ) }
    dend_42 { pt3dadd( -21.5718, -3.26437, -42.429, 0.55 ) }
    dend_42 { pt3dadd( -21.9833, -3.1618, -43.573, 0.28 ) }
    dend_42 { pt3dadd( -22.4405, -2.9788, -44.6736, 0.55 ) }
    dend_42 { pt3dadd( -22.9023, -2.73565, -45.5558, 0.28 ) }
    dend_42 { pt3dadd( -23.4041, -2.52043, -46.257, 0.83 ) }
    dend_42 { pt3dadd( -24.6042, -1.92179, -48.0617, 0.28 ) }
    dend_42 { pt3dadd( -24.6846, -1.87591, -48.1965, 0.55 ) }
    dend_42 { pt3dadd( -25.2235, -1.51993, -49.2585, 0.28 ) }
    dend_42 { pt3dadd( -25.7292, -1.15194, -50.3983, 0.83 ) }
    dend_42 { pt3dadd( -25.8521, -1.07114, -50.7102, 0.83 ) }
    dend_42 { pt3dadd( -27.2125, -0.301484, -54.4647, 0.28 ) }
    dend_42 { pt3dadd( -27.4031, -0.211873, -54.9831, 0.55 ) }
    dend_42 { pt3dadd( -28.2139, 0.087749, -57.1103, 0.28 ) }
    dend_42 { pt3dadd( -28.5552, 0.184341, -58.0302, 0.83 ) }
    dend_42 { pt3dadd( -29.2411, 0.367607, -59.788, 0.28 ) }
    dend_42 { pt3dadd( -29.5988, 0.453582, -60.6099, 0.55 ) }
    dend_42 { pt3dadd( -29.9816, 0.520592, -61.365, 0.28 ) }
    dend_42 { pt3dadd( -30.185, 0.565352, -61.7751, 0.55 ) }
    dend_42 { pt3dadd( -32.1669, 1.13275, -65.5516, 0.28 ) }
    dend_42 { pt3dadd( -32.4077, 1.243, -66.0403, 0.55 ) }
    dend_42 { pt3dadd( -32.6369, 1.38203, -66.5322, 0.28 ) }
    dend_42 { pt3dadd( -32.825, 1.54304, -67.0294, 0.83 ) }
    dend_42 { pt3dadd( -33.4787, 2.29089, -69.1844, 0.28 ) }
    dend_42 { pt3dadd( -33.5526, 2.41563, -69.4955, 0.83 ) }
    dend_42 { pt3dadd( -33.8378, 3.11293, -70.9758, 0.28 ) }
    dend_42 { pt3dadd( -33.8844, 3.2123, -71.2258, 0.83 ) }
    dend_42 { pt3dadd( -34.1929, 3.85599, -72.9065, 0.28 ) }
    dend_42 { pt3dadd( -34.2434, 3.95974, -73.1799, 0.83 ) }
    dend_42 { pt3dadd( -34.5931, 4.6585, -75.0109, 0.28 ) }
    dend_42 { pt3dadd( -34.6563, 4.78197, -75.3444, 0.83 ) }
    dend_42 { pt3dadd( -35.612, 6.44869, -80.0325, 0.28 ) }
    dend_42 { pt3dadd( -36.1489, 7.26856, -82.4595, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 71/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.88824, 6.74078, -6.65142, 1.11 ) }
    dend_41 { pt3dadd( -5.42047, 7.6709, -9.26822, 1.11 ) }
    dend_41 { pt3dadd( -6.55095, 7.9741, -10.8749, 1.11 ) }
    dend_41 { pt3dadd( -8.94106, 8.15913, -14.1952, 0.83 ) }
    dend_41 { pt3dadd( -10.8451, 8.09346, -16.7538, 1.38 ) }
    dend_41 { pt3dadd( -17.3457, 7.33382, -25.4492, 0.83 ) }
    dend_41 { pt3dadd( -20.4374, 6.91543, -29.737, 0.83 ) }
    dend_41 { pt3dadd( -27.3424, 5.53166, -40.2137, 0.83 ) }
    dend_41 { pt3dadd( -35.3006, 3.54469, -52.4161, 0.83 ) }
    dend_41 { pt3dadd( -37.8862, 2.7296, -56.3113, 0.83 ) }
    dend_41 { pt3dadd( -39.5876, 2.11496, -58.7479, 0.83 ) }
    dend_41 { pt3dadd( -41.9009, 1.17656, -61.9541, 0.83 ) }
    dend_41 { pt3dadd( -43.8746, 0.216739, -65.2687, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.44824, 7.70678, -3.11142, 0.83 ) }
    dend_40 { pt3dadd( -4.29342, 10.5156, -3.18349, 0.55 ) }
    dend_40 { pt3dadd( -5.38805, 12.2593, -3.2134, 0.55 ) }
    dend_40 { pt3dadd( -6.29494, 13.7946, -3.32983, 1.11 ) }
    dend_40 { pt3dadd( -7.55895, 16.0115, -3.54046, 0.83 ) }
    dend_40 { pt3dadd( -9.96711, 20.8566, -4.08688, 0.83 ) }
    dend_40 { pt3dadd( -11.5924, 24.5237, -4.51939, 0.83 ) }
    dend_40 { pt3dadd( -13.2694, 28.7011, -5.01737, 0.83 ) }
    dend_40 { pt3dadd( -14.3632, 31.9099, -5.26631, 0.83 ) }
    dend_40 { pt3dadd( -15.1556, 34.9925, -5.4043, 1.38 ) }
    dend_40 { pt3dadd( -15.8593, 39.2939, -5.36977, 0.55 ) }
    dend_40 { pt3dadd( -15.9802, 42.4159, -5.13404, 0.55 ) }
    dend_40 { pt3dadd( -15.9658, 44.5937, -4.8112, 0.55 ) }
    dend_40 { pt3dadd( -15.9413, 48.6423, -4.01985, 0.55 ) }
    dend_40 { pt3dadd( -15.9484, 50.3243, -3.62931, 0.55 ) }
    dend_40 { pt3dadd( -16.067, 53.5198, -2.88138, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_40 { pt3dadd( -16.6144, 59.5559, -1.63606, 0.55 ) }
    dend_40 { pt3dadd( -16.9042, 62.176, -1.22203, 0.28 ) }
    dend_40 { pt3dadd( -17.2671, 65.03, -0.948289, 0.28 ) }
    dend_40 { pt3dadd( -17.539, 67.4177, -0.854111, 0.55 ) }
    dend_40 { pt3dadd( -17.7214, 69.833, -0.889513, 0.28 ) }
    dend_40 { pt3dadd( -17.9454, 76.4348, -1.36498, 0.83 ) }
    dend_40 { pt3dadd( -17.8896, 79.1102, -1.73984, 0.55 ) }
    dend_40 { pt3dadd( -17.6418, 82.1911, -2.30419, 0.28 ) }
    dend_40 { pt3dadd( -17.3866, 84.4099, -2.75768, 0.55 ) }
    dend_40 { pt3dadd( -16.3259, 91.3946, -4.35931, 0.28 ) }
    dend_40 { pt3dadd( -16.081, 92.5807, -4.67215, 0.83 ) }
    dend_40 { pt3dadd( -14.9247, 96.9198, -6.08552, 0.28 ) }
    dend_40 { pt3dadd( -14.5522, 98.1772, -6.53912, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.69824, 6.66728, 3.79858, 1.11 ) }
    dend_39 { pt3dadd( -5.1509, 11.0182, 3.95697, 1.11 ) }
    dend_39 { pt3dadd( -7.32839, 17.0127, 4.28224, 1.11 ) }
    dend_39 { pt3dadd( -8.68632, 20.9219, 4.43182, 1.11 ) }
    dend_39 { pt3dadd( -10.5523, 25.9983, 4.66748, 1.11 ) }
    dend_39 { pt3dadd( -12.568, 31.2294, 4.90175, 1.11 ) }
    dend_39 { pt3dadd( -14.1745, 35.5416, 5.00601, 1.11 ) }
    dend_39 { pt3dadd( -15.4638, 38.8497, 4.88967, 1.11 ) }
    dend_39 { pt3dadd( -17.0783, 42.9152, 4.4738, 1.11 ) }
    dend_39 { pt3dadd( -18.3786, 46.4878, 3.98246, 1.11 ) }
    dend_39 { pt3dadd( -19.7818, 50.8998, 3.24759, 1.11 ) }
    dend_39 { pt3dadd( -21.3291, 56.2061, 2.19171, 1.11 ) }
    dend_39 { pt3dadd( -23.1771, 63.4196, 0.485854, 1.11 ) }
    dend_39 { pt3dadd( -23.8781, 66.2845, -0.221, 1.11 ) }
    dend_39 { pt3dadd( -24.7168, 69.8976, -1.10992, 0.83 ) }
    dend_39 { pt3dadd( -25.3363, 73.1971, -1.94719, 0.83 ) }
    dend_39 { pt3dadd( -25.9646, 76.9585, -2.85065, 1.11 ) }
    dend_39 { pt3dadd( -26.6539, 81.2958, -3.7343, 1.11 ) }
    dend_39 { pt3dadd( -26.8335, 82.6919, -3.95974, 0.28 ) }
    dend_39 { pt3dadd( -27.1836, 85.2688, -4.34678, 0.55 ) }
    dend_39 { pt3dadd( -27.4785, 87.0727, -4.59873, 0.55 ) }
    dend_39 { pt3dadd( -28.0215, 89.9178, -5.03199, 0.55 ) }
    dend_39 { pt3dadd( -28.5398, 92.3676, -5.44833, 0.28 ) }
    dend_39 { pt3dadd( -28.7324, 93.2276, -5.65163, 0.83 ) }
    dend_39 { pt3dadd( -29.1919, 95.1196, -6.15091, 0.28 ) }
    dend_39 { pt3dadd( -30.5389, 100.209, -7.36805, 0.55 ) }
    dend_39 { pt3dadd( -31.4156, 103.363, -8.1517, 0.28 ) }
    dend_39 { pt3dadd( -31.9962, 105.582, -8.72805, 1.11 ) }
    dend_39 { pt3dadd( -33.0934, 110.168, -9.97599, 0.28 ) }
    dend_39 { pt3dadd( -33.7272, 113.288, -10.808, 1.11 ) }
    dend_39 { pt3dadd( -34.3366, 117.019, -11.7924, 0.28 ) }
    dend_39 { pt3dadd( -34.5709, 119.5, -12.4169, 0.55 ) }
    dend_39 { pt3dadd( -34.6219, 122.187, -12.9453, 0.28 ) }
    dend_39 { pt3dadd( -34.5425, 123.592, -13.1678, 0.28 ) }
    dend_39 { pt3dadd( -34.338, 125.114, -13.3446, 0.55 ) }
    dend_39 { pt3dadd( -33.9606, 127.135, -13.6275, 0.28 ) }
    dend_39 { pt3dadd( -33.6383, 128.683, -13.8752, 0.83 ) }
    dend_39 { pt3dadd( -33.1276, 131.138, -14.1426, 0.28 ) }
    dend_39 { pt3dadd( -33.0005, 131.81, -14.2137, 0.83 ) }
    dend_39 { pt3dadd( -32.5151, 134.628, -14.5378, 0.55 ) }
    dend_39 { pt3dadd( -32.1507, 136.885, -14.8293, 0.28 ) }
    dend_39 { pt3dadd( -32.0213, 137.756, -14.9335, 0.55 ) }
    dend_39 { pt3dadd( -31.6045, 140.307, -15.2689, 0.28 ) }
    dend_39 { pt3dadd( -31.5121, 140.921, -15.3544, 0.55 ) }
    dend_39 { pt3dadd( -31.1923, 142.888, -15.6289, 0.28 ) }
    dend_39 { pt3dadd( -31.0749, 143.564, -15.7293, 0.55 ) }
    dend_39 { pt3dadd( -30.7907, 145.734, -16.0466, 0.28 ) }
    dend_39 { pt3dadd( -30.5625, 148.849, -16.5014, 0.83 ) }
    dend_39 { pt3dadd( -30.5312, 150.751, -16.7752, 0.28 ) }
    dend_39 { pt3dadd( -30.6177, 151.993, -17.0171, 0.83 ) }
    dend_39 { pt3dadd( -30.8978, 154.186, -17.5362, 0.28 ) }
    dend_39 { pt3dadd( -31.1638, 155.953, -18.0287, 0.55 ) }
    dend_39 { pt3dadd( -31.3868, 157.25, -18.426, 0.28 ) }
    dend_39 { pt3dadd( -31.8584, 159.605, -19.193, 0.83 ) }
    dend_39 { pt3dadd( -32.7617, 164.207, -20.7265, 0.28 ) }
    dend_39 { pt3dadd( -32.9699, 165.288, -21.0829, 0.55 ) }
    dend_39 { pt3dadd( -33.8991, 170.212, -22.703, 0.55 ) }
    dend_39 { pt3dadd( -33.9949, 170.803, -22.902, 0.55 ) }
    dend_39 { pt3dadd( -34.2997, 172.973, -23.6239, 0.28 ) }
    dend_39 { pt3dadd( -34.4505, 174.077, -23.9773, 0.55 ) }
    dend_39 { pt3dadd( -34.614, 175.453, -24.3011, 0.28 ) }
    dend_39 { pt3dadd( -34.8641, 176.847, -24.5943, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.18176, 5.02928, -6.33142, 0.83 ) }
    dend_34 { pt3dadd( 4.5281, 7.25365, -9.40105, 0.83 ) }
    dend_34 { pt3dadd( 4.45245, 8.67286, -11.7347, 0.83 ) }
    dend_34 { pt3dadd( 4.36988, 9.83298, -13.5822, 1.94 ) }
    dend_34 { pt3dadd( 4.28776, 11.844, -16.9323, 0.83 ) }
    dend_34 { pt3dadd( 4.23484, 13.1011, -18.9685, 1.11 ) }
    dend_34 { pt3dadd( 4.12835, 16.0162, -23.3111, 1.38 ) }
    dend_34 { pt3dadd( 3.89223, 17.5059, -25.491, 0.28 ) }
    dend_34 { pt3dadd( 3.58248, 18.892, -27.3633, 0.83 ) }
    dend_34 { pt3dadd( 2.82154, 21.7844, -30.6471, 0.28 ) }
    dend_34 { pt3dadd( 2.51264, 22.9273, -31.6336, 0.83 ) }
    dend_34 { pt3dadd( 1.97889, 24.9433, -32.9359, 0.83 ) }
    dend_34 { pt3dadd( 1.28302, 27.3818, -34.1772, 1.11 ) }
    dend_34 { pt3dadd( -0.031996, 31.3788, -36.1121, 0.28 ) }
    dend_34 { pt3dadd( -0.807065, 33.3075, -37.0125, 0.83 ) }
    dend_34 { pt3dadd( -2.06103, 36.0981, -38.2075, 0.55 ) }
    dend_34 { pt3dadd( -2.98898, 38.0071, -39.0788, 0.83 ) }
    dend_34 { pt3dadd( -4.21707, 40.3737, -40.1889, 0.28 ) }
    dend_34 { pt3dadd( -5.82685, 43.3862, -41.631, 0.83 ) }
    dend_34 { pt3dadd( -7.33183, 46.22, -42.8328, 0.55 ) }
    dend_34 { pt3dadd( -8.44186, 48.2714, -43.6965, 0.83 ) }
    dend_34 { pt3dadd( -10.4946, 51.7806, -45.1171, 0.28 ) }
    dend_34 { pt3dadd( -11.0022, 52.6308, -45.437, 0.55 ) }
    dend_34 { pt3dadd( -11.8522, 54.0424, -45.9169, 0.28 ) }
    dend_34 { pt3dadd( -13.623, 56.9108, -46.8242, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -14.9315, 59.1447, -47.5031, 0.28 ) }
    dend_34 { pt3dadd( -16.0482, 61.1072, -48.0897, 0.83 ) }
    dend_34 { pt3dadd( -16.4883, 61.9094, -48.303, 0.28 ) }
    dend_34 { pt3dadd( -17.5251, 63.8092, -48.8206, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.99176, 3.58028, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 9.01639, 3.40342, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 12.0454, 3.27031, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 16.3011, 3.0833, -9.40142, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 8/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.36824, 1.24928, 0.248578, 0.55 ) }
    dend_22 { pt3dadd( -6.97483, 1.47648, -0.88325, 0.55 ) }
    dend_22 { pt3dadd( -8.35993, 1.67236, -1.85905, 0.83 ) }
    dend_22 { pt3dadd( -11.0747, 2.05629, -3.77162, 0.83 ) }
    dend_22 { pt3dadd( -15.9396, 2.74428, -7.19889, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 13/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.65176, -8.34772, -3.47142, 0.83 ) }
    dend_19 { pt3dadd( 3.26613, -11.4152, -4.6997, 0.83 ) }
    dend_19 { pt3dadd( 3.69641, -14.3458, -6.11101, 0.83 ) }
    dend_19 { pt3dadd( 4.09024, -18.1672, -8.47543, 1.11 ) }
    dend_19 { pt3dadd( 4.56435, -23.1937, -11.9016, 0.83 ) }
    dend_19 { pt3dadd( 5.09362, -28.488, -15.7559, 0.83 ) }
    dend_19 { pt3dadd( 5.59168, -33.45, -19.5291, 0.55 ) }
    dend_19 { pt3dadd( 5.78856, -35.5876, -21.3574, 0.83 ) }
    dend_19 { pt3dadd( 6.16155, -39.8803, -25.5258, 0.55 ) }
    dend_19 { pt3dadd( 6.24964, -41.0021, -26.7877, 0.55 ) }
    dend_19 { pt3dadd( 6.2235, -43.6527, -30.1632, 0.83 ) }
    dend_19 { pt3dadd( 6.01761, -45.7351, -33.1405, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.14824, -10.3952, 4.18858, 2.22 ) }
    dend_0 { pt3dadd( -0.733547, -12.3771, 4.29539, 2.22 ) }
    dend_0 { pt3dadd( -1.43317, -14.746, 4.42305, 3.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 3.6293, -24.3977, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 31/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -17.5251, 63.8092, -48.8206, 0.28 ) }
    dend_38 { pt3dadd( -20.7145, 65.0995, -48.3577, 0.28 ) }
    dend_38 { pt3dadd( -21.866, 65.5504, -48.2013, 0.28 ) }
    dend_38 { pt3dadd( -23.3258, 66.1323, -48.0227, 0.55 ) }
    dend_38 { pt3dadd( -24.831, 66.716, -47.8412, 0.28 ) }
    dend_38 { pt3dadd( -26.0229, 67.1686, -47.7025, 0.55 ) }
    dend_38 { pt3dadd( -28.3302, 68.0339, -47.4432, 0.28 ) }
    dend_38 { pt3dadd( -30.2725, 68.7665, -47.1725, 0.28 ) }
    dend_38 { pt3dadd( -32.1902, 69.5647, -46.8955, 0.55 ) }
    dend_38 { pt3dadd( -34.8353, 70.7283, -46.5608, 0.28 ) }
    dend_38 { pt3dadd( -35.9811, 71.2899, -46.4846, 0.28 ) }
    dend_38 { pt3dadd( -36.8443, 71.7627, -46.4559, 0.55 ) }
    dend_38 { pt3dadd( -40.7981, 74.3091, -46.5346, 0.28 ) }
    dend_38 { pt3dadd( -43.9392, 76.4991, -46.688, 0.28 ) }
    dend_38 { pt3dadd( -45.0547, 77.3479, -46.7879, 0.55 ) }
    dend_38 { pt3dadd( -48.8749, 80.5481, -47.2055, 0.28 ) }
    dend_38 { pt3dadd( -49.7169, 81.2925, -47.3017, 0.55 ) }
    dend_38 { pt3dadd( -54.5396, 85.6808, -47.9323, 0.28 ) }
    dend_38 { pt3dadd( -55.1367, 86.2455, -48.0266, 1.38 ) }
    dend_38 { pt3dadd( -59.8792, 90.8028, -48.7231, 0.28 ) }
    dend_38 { pt3dadd( -63.8889, 94.6839, -49.181, 0.28 ) }
    dend_38 { pt3dadd( -66.2926, 97.0234, -49.3575, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.5251, 63.8092, -48.8206, 0.83 ) }
    dend_35 { pt3dadd( -17.9115, 64.8087, -49.6828, 0.83 ) }
    dend_35 { pt3dadd( -18.3523, 65.9487, -50.6662, 0.28 ) }
    dend_35 { pt3dadd( -19.1457, 68.0009, -52.4365, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 16.3011, 3.0833, -9.40142, 1.11 ) }
    dend_29 { pt3dadd( 18.3708, 2.95074, -10.5594, 1.11 ) }
    dend_29 { pt3dadd( 20.114, 2.71845, -11.6102, 1.11 ) }
    dend_29 { pt3dadd( 22.004, 2.51294, -12.8822, 1.11 ) }
    dend_29 { pt3dadd( 24.2068, 2.32797, -14.4557, 1.11 ) }
    dend_29 { pt3dadd( 27.2747, 2.06107, -16.6604, 1.11 ) }
    dend_29 { pt3dadd( 30.2408, 1.80302, -18.792, 1.11 ) }
    dend_29 { pt3dadd( 33.1296, 1.69191, -20.9413, 0.83 ) }
    dend_29 { pt3dadd( 35.4059, 1.64491, -22.7269, 0.83 ) }
    dend_29 { pt3dadd( 37.0238, 1.58877, -24.0509, 0.83 ) }
    dend_29 { pt3dadd( 40.0882, 1.47379, -26.6392, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 16.3011, 3.0833, -9.40142, 0.55 ) }
    dend_28 { pt3dadd( 18.3795, 4.53767, -9.28231, 0.55 ) }
    dend_28 { pt3dadd( 19.9679, 5.64906, -9.19128, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.9396, 2.74428, -7.19889, 0.83 ) }
    dend_24 { pt3dadd( -18.5445, 2.54238, -8.10294, 0.83 ) }
    dend_24 { pt3dadd( -20.005, 2.63676, -8.67157, 0.83 ) }
    dend_24 { pt3dadd( -21.368, 2.63907, -9.20814, 1.94 ) }
    dend_24 { pt3dadd( -23.6687, 2.35256, -10.9986, 0.55 ) }
    dend_24 { pt3dadd( -25.3641, 2.09985, -12.4482, 0.55 ) }
    dend_24 { pt3dadd( -27.6177, 1.83067, -14.3931, 0.83 ) }
    dend_24 { pt3dadd( -29.2767, 1.62645, -15.8433, 0.83 ) }
    dend_24 { pt3dadd( -31.0144, 1.50135, -17.4518, 0.83 ) }
    dend_24 { pt3dadd( -37.5525, 1.30013, -23.6127, 1.38 ) }
    dend_24 { pt3dadd( -40.049, 1.3015, -25.9521, 0.55 ) }
    dend_24 { pt3dadd( -42.1577, 1.3017, -27.9924, 0.55 ) }
    dend_24 { pt3dadd( -43.7502, 1.28747, -29.5249, 1.11 ) }
    dend_24 { pt3dadd( -46.3445, 1.39869, -31.8551, 0.28 ) }
    dend_24 { pt3dadd( -46.8264, 1.47634, -32.2117, 0.28 ) }
    dend_24 { pt3dadd( -47.5844, 1.69105, -32.5606, 0.83 ) }
    dend_24 { pt3dadd( -50.4751, 2.73262, -33.7427, 0.28 ) }
    dend_24 { pt3dadd( -51.191, 3.0318, -33.9973, 0.55 ) }
    dend_24 { pt3dadd( -53.3556, 4.07991, -34.7638, 0.28 ) }
    dend_24 { pt3dadd( -55.8784, 5.25623, -35.7556, 1.11 ) }
    dend_24 { pt3dadd( -57.6233, 6.08656, -36.574, 0.28 ) }
    dend_24 { pt3dadd( -58.8733, 6.68727, -37.2429, 0.83 ) }
    dend_24 { pt3dadd( -62.0488, 8.31382, -39.1366, 0.28 ) }
    dend_24 { pt3dadd( -63.3735, 9.05655, -40.09, 0.83 ) }
    dend_24 { pt3dadd( -66.0266, 10.6304, -42.3005, 0.55 ) }
    dend_24 { pt3dadd( -67.2854, 11.4349, -43.4629, 0.55 ) }
    dend_24 { pt3dadd( -68.2952, 12.1054, -44.4144, 0.83 ) }
    dend_24 { pt3dadd( -69.2372, 12.7874, -45.3478, 0.83 ) }
    dend_24 { pt3dadd( -71.8316, 14.9994, -48.0226, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( -72.0624, 15.2156, -48.256, 0.83 ) }
    dend_24 { pt3dadd( -73.2285, 16.5148, -49.4414, 0.28 ) }
    dend_24 { pt3dadd( -73.759, 17.1073, -49.9963, 0.55 ) }
    dend_24 { pt3dadd( -74.6428, 18.0643, -50.907, 0.28 ) }
    dend_24 { pt3dadd( -75.3844, 18.7417, -51.6304, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.9396, 2.74428, -7.19889, 0.28 ) }
    dend_23 { pt3dadd( -16.8817, 1.30572, -7.45608, 0.28 ) }
    dend_23 { pt3dadd( -17.1853, 0.830482, -7.52161, 0.83 ) }
    dend_23 { pt3dadd( -18.0292, -0.644972, -7.85447, 0.28 ) }
    dend_23 { pt3dadd( -18.7377, -1.85083, -8.15856, 0.28 ) }
    dend_23 { pt3dadd( -19.0171, -2.30075, -8.28571, 0.55 ) }
    dend_23 { pt3dadd( -20.1597, -4.07602, -8.82155, 0.28 ) }
    dend_23 { pt3dadd( -20.8868, -5.19611, -9.1656, 1.11 ) }
    dend_23 { pt3dadd( -23.4952, -8.88031, -10.324, 0.28 ) }
    dend_23 { pt3dadd( -24.0888, -9.66375, -10.5783, 0.55 ) }
    dend_23 { pt3dadd( -24.7428, -10.4927, -10.8401, 0.28 ) }
    dend_23 { pt3dadd( -25.6092, -11.5121, -11.1658, 0.28 ) }
    dend_23 { pt3dadd( -26.188, -12.1183, -11.3647, 0.55 ) }
    dend_23 { pt3dadd( -27.4755, -13.4172, -11.6114, 0.28 ) }
    dend_23 { pt3dadd( -27.8386, -13.7954, -11.5169, 0.55 ) }
    dend_23 { pt3dadd( -28.9263, -15.0487, -10.9496, 0.28 ) }
    dend_23 { pt3dadd( -29.3379, -15.6048, -10.6242, 0.55 ) }
    dend_23 { pt3dadd( -29.9504, -16.4835, -10.0523, 0.28 ) }
    dend_23 { pt3dadd( -30.9534, -17.9387, -9.13661, 0.83 ) }
    dend_23 { pt3dadd( -33.1877, -21.3399, -7.11893, 0.28 ) }
    dend_23 { pt3dadd( -33.5492, -21.8938, -6.82235, 0.83 ) }
    dend_23 { pt3dadd( -34.8363, -24.0381, -5.87219, 0.28 ) }
    dend_23 { pt3dadd( -35.3145, -24.8749, -5.57021, 0.55 ) }
    dend_23 { pt3dadd( -36.8526, -27.7137, -4.80378, 0.28 ) }
    dend_23 { pt3dadd( -37.4199, -28.8189, -4.66953, 0.28 ) }
    dend_23 { pt3dadd( -37.8783, -29.7503, -4.67991, 0.55 ) }
    dend_23 { pt3dadd( -38.6091, -31.3286, -4.72817, 0.28 ) }
    dend_23 { pt3dadd( -38.8312, -31.8274, -4.76485, 1.11 ) }
    dend_23 { pt3dadd( -39.9946, -35.0176, -4.95946, 0.28 ) }
    dend_23 { pt3dadd( -40.339, -36.3684, -5.02311, 0.83 ) }
    dend_23 { pt3dadd( -44.0095, -44.2092, -3.41146, 0.83 ) }
    dend_23 { pt3dadd( -47.6889, -52.1253, -2.16568, 0.83 ) }
    dend_23 { pt3dadd( -50.1631, -60.6692, -1.94371, 0.83 ) }
    dend_23 { pt3dadd( -52.7201, -69.1815, -1.65276, 0.83 ) }
    dend_23 { pt3dadd( -56.5269, -77.0647, -3.06853, 0.83 ) }
    dend_23 { pt3dadd( -59.6062, -85.3924, -3.06105, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.01761, -45.7351, -33.1405, 0.83 ) }
    dend_21 { pt3dadd( 8.1869, -47.1605, -33.8623, 0.83 ) }
    dend_21 { pt3dadd( 10.5734, -48.7252, -34.5871, 0.28 ) }
    dend_21 { pt3dadd( 11.7261, -49.4856, -34.9205, 1.11 ) }
    dend_21 { pt3dadd( 14.2921, -51.2775, -35.6603, 0.55 ) }
    dend_21 { pt3dadd( 15.9961, -52.4389, -36.1178, 0.55 ) }
    dend_21 { pt3dadd( 19.8589, -54.9704, -37.1053, 1.38 ) }
    dend_21 { pt3dadd( 21.6587, -56.014, -37.6675, 0.28 ) }
    dend_21 { pt3dadd( 22.0702, -56.2445, -37.8175, 0.55 ) }
    dend_21 { pt3dadd( 23.2085, -56.8598, -38.3835, 0.55 ) }
    dend_21 { pt3dadd( 25.3897, -57.9786, -39.6413, 0.55 ) }
    dend_21 { pt3dadd( 26.7483, -58.6659, -40.6532, 1.38 ) }
    dend_21 { pt3dadd( 30.454, -60.5279, -43.8231, 0.55 ) }
    dend_21 { pt3dadd( 31.5478, -61.1044, -44.7706, 1.11 ) }
    dend_21 { pt3dadd( 34.9843, -62.9363, -47.7435, 0.28 ) }
    dend_21 { pt3dadd( 36.3867, -63.6912, -48.9566, 1.11 ) }
    dend_21 { pt3dadd( 38.8105, -65.1082, -51.0669, 0.55 ) }
    dend_21 { pt3dadd( 41.4154, -66.6634, -53.1648, 0.28 ) }
    dend_21 { pt3dadd( 42.5263, -67.309, -53.8976, 1.11 ) }
    dend_21 { pt3dadd( 44.6408, -68.4, -55.1033, 0.28 ) }
    dend_21 { pt3dadd( 44.9323, -68.5266, -55.2236, 0.55 ) }
    dend_21 { pt3dadd( 46.3649, -69.066, -55.7107, 0.28 ) }
    dend_21 { pt3dadd( 47.3182, -69.3582, -55.9197, 0.55 ) }
    dend_21 { pt3dadd( 48.9819, -69.7734, -56.1971, 0.28 ) }
    dend_21 { pt3dadd( 50.2871, -70.1175, -56.3998, 0.55 ) }
    dend_21 { pt3dadd( 51.9089, -70.5444, -56.5862, 0.28 ) }
    dend_21 { pt3dadd( 53.0116, -70.847, -56.7611, 0.28 ) }
    dend_21 { pt3dadd( 53.5448, -70.9907, -56.859, 0.55 ) }
    dend_21 { pt3dadd( 55.8758, -71.7293, -57.407, 0.28 ) }
    dend_21 { pt3dadd( 56.7023, -72.0214, -57.6353, 0.55 ) }
    dend_21 { pt3dadd( 58.5559, -72.8723, -58.4131, 0.55 ) }
    dend_21 { pt3dadd( 60.0324, -73.64, -59.2069, 0.28 ) }
    dend_21 { pt3dadd( 60.4311, -73.852, -59.5164, 0.55 ) }
    dend_21 { pt3dadd( 61.9425, -74.646, -60.7721, 0.28 ) }
    dend_21 { pt3dadd( 62.2038, -74.7767, -60.993, 0.55 ) }
    dend_21 { pt3dadd( 65.2473, -76.213, -63.5381, 0.28 ) }
    dend_21 { pt3dadd( 65.8628, -76.5001, -64.0355, 0.83 ) }
    dend_21 { pt3dadd( 69.2538, -77.8459, -66.441, 0.28 ) }
    dend_21 { pt3dadd( 71.626, -78.6681, -67.9649, 0.28 ) }
    dend_21 { pt3dadd( 72.8556, -79.023, -68.6218, 0.55 ) }
    dend_21 { pt3dadd( 76.3644, -79.8895, -70.1627, 0.28 ) }
    dend_21 { pt3dadd( 77.7275, -80.1355, -70.5484, 0.83 ) }
    dend_21 { pt3dadd( 80.0885, -80.5282, -70.9705, 0.28 ) }
    dend_21 { pt3dadd( 80.7576, -80.6502, -71.0148, 0.28 ) }
    dend_21 { pt3dadd( 83.6625, -81.1482, -71.0861, 0.28 ) }
    dend_21 { pt3dadd( 84.1285, -81.2315, -71.0758, 0.83 ) }
    dend_21 { pt3dadd( 87.2216, -81.7914, -70.8116, 0.28 ) }
    dend_21 { pt3dadd( 89.5984, -82.2519, -70.6096, 0.55 ) }
    dend_21 { pt3dadd( 91.7168, -82.7232, -70.4179, 0.55 ) }
    dend_21 { pt3dadd( 93.772, -83.1909, -70.2207, 0.28 ) }
    dend_21 { pt3dadd( 94.5036, -83.3577, -70.1439, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 6.01761, -45.7351, -33.1405, 0.28 ) }
    dend_20 { pt3dadd( 4.89298, -48.5067, -33.9277, 0.28 ) }
    dend_20 { pt3dadd( 4.60655, -49.2127, -34.1282, 0.55 ) }
    dend_20 { pt3dadd( 3.97101, -50.7789, -34.573, 0.28 ) }
    dend_20 { pt3dadd( 3.57446, -51.7563, -34.8506, 0.83 ) }
    dend_20 { pt3dadd( 1.9141, -55.8482, -36.0127, 0.28 ) }
    dend_20 { pt3dadd( 1.6354, -56.5351, -36.2078, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 99/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.43317, -14.746, 4.42305, 2.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( -1.42528, -19.9762, 6.11397, 2.22 ) }
    dend_6 { pt3dadd( -1.41688, -25.5467, 7.9149, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.43317, -14.746, 4.42305, 0.55 ) }
    dend_1 { pt3dadd( -4.64623, -14.391, 4.25508, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    axon_1 { pt3dadd( 7.83859, -54.1009, 1.42578, 1.11 ) }
    axon_1 { pt3dadd( 9.94324, -68.9525, 1.42578, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -19.1457, 68.0009, -52.4365, 0.28 ) }
    dend_37 { pt3dadd( -20.4371, 69.4326, -52.2925, 0.28 ) }
    dend_37 { pt3dadd( -21.0545, 70.2172, -52.3711, 1.11 ) }
    dend_37 { pt3dadd( -21.6531, 71.0234, -52.4645, 0.28 ) }
    dend_37 { pt3dadd( -22.2239, 71.8385, -52.5978, 0.55 ) }
    dend_37 { pt3dadd( -22.8242, 72.7551, -52.7529, 0.28 ) }
    dend_37 { pt3dadd( -23.5169, 73.8903, -52.9406, 1.38 ) }
    dend_37 { pt3dadd( -25.0433, 76.6049, -53.433, 0.28 ) }
    dend_37 { pt3dadd( -25.4277, 77.3777, -53.5985, 0.55 ) }
    dend_37 { pt3dadd( -26.1378, 78.9698, -53.966, 0.28 ) }
    dend_37 { pt3dadd( -26.5366, 80.0298, -54.2741, 0.83 ) }
    dend_37 { pt3dadd( -27.2292, 82.0651, -54.9352, 0.28 ) }
    dend_37 { pt3dadd( -27.3757, 82.5205, -55.0794, 0.55 ) }
    dend_37 { pt3dadd( -28.3969, 85.7447, -56.094, 0.28 ) }
    dend_37 { pt3dadd( -28.604, 86.3857, -56.3115, 0.55 ) }
    dend_37 { pt3dadd( -29.5762, 89.344, -57.3168, 0.28 ) }
    dend_37 { pt3dadd( -29.9146, 90.3622, -57.6925, 0.55 ) }
    dend_37 { pt3dadd( -30.2432, 91.3584, -58.0822, 0.28 ) }
    dend_37 { pt3dadd( -30.3557, 91.6918, -58.2116, 1.11 ) }
    dend_37 { pt3dadd( -31.2942, 93.9948, -59.0326, 0.28 ) }
    dend_37 { pt3dadd( -31.5731, 94.6331, -59.2388, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -19.1457, 68.0009, -52.4365, 0.55 ) }
    dend_36 { pt3dadd( -17.703, 68.1977, -52.242, 0.55 ) }
    dend_36 { pt3dadd( -16.4907, 68.3631, -52.0785, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 31/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 40.0882, 1.47379, -26.6392, 0.28 ) }
    dend_33 { pt3dadd( 43.0908, 1.61505, -32.1455, 0.28 ) }
    dend_33 { pt3dadd( 45.6667, 1.87097, -36.7877, 0.83 ) }
    dend_33 { pt3dadd( 49.5764, 2.34672, -43.3609, 0.28 ) }
    dend_33 { pt3dadd( 50.591, 2.45283, -44.9308, 0.83 ) }
    dend_33 { pt3dadd( 53.6367, 2.77275, -49.2422, 0.28 ) }
    dend_33 { pt3dadd( 54.445, 2.86746, -50.3059, 0.55 ) }
    dend_33 { pt3dadd( 55.7602, 3.10491, -51.6774, 0.28 ) }
    dend_33 { pt3dadd( 57.4968, 3.5498, -53.0719, 0.28 ) }
    dend_33 { pt3dadd( 59.5054, 4.06584, -54.1835, 0.83 ) }
    dend_33 { pt3dadd( 61.0987, 4.50093, -55.0364, 0.83 ) }
    dend_33 { pt3dadd( 63.909, 5.25108, -56.433, 0.28 ) }
    dend_33 { pt3dadd( 66.1719, 5.94511, -57.6329, 0.83 ) }
    dend_33 { pt3dadd( 69.4654, 7.07726, -59.3696, 0.28 ) }
    dend_33 { pt3dadd( 69.4654, 7.07726, -59.3696, 0.55 ) }
    dend_33 { pt3dadd( 72.6607, 8.40309, -61.0375, 0.28 ) }
    dend_33 { pt3dadd( 73.6496, 8.78016, -61.5441, 0.55 ) }
    dend_33 { pt3dadd( 76.1512, 9.83708, -63.0987, 0.28 ) }
    dend_33 { pt3dadd( 77.9064, 10.6899, -64.5105, 1.11 ) }
    dend_33 { pt3dadd( 80.3367, 12.0625, -67.2568, 0.28 ) }
    dend_33 { pt3dadd( 81.8922, 13.0231, -69.2639, 0.55 ) }
    dend_33 { pt3dadd( 83.2244, 13.9434, -71.1544, 0.28 ) }
    dend_33 { pt3dadd( 86.9336, 16.8058, -76.8449, 0.55 ) }
    dend_33 { pt3dadd( 88.8087, 18.4177, -79.938, 1.11 ) }
    dend_33 { pt3dadd( 92.4546, 21.8909, -86.2512, 0.28 ) }
    dend_33 { pt3dadd( 93.1614, 22.6842, -87.5226, 0.55 ) }
    dend_33 { pt3dadd( 94.2055, 24.0396, -89.3592, 0.28 ) }
    dend_33 { pt3dadd( 94.8719, 25.0201, -90.4106, 0.55 ) }
    dend_33 { pt3dadd( 96.2883, 27.1644, -92.1757, 0.28 ) }
    dend_33 { pt3dadd( 96.9216, 28.3267, -92.9795, 1.38 ) }
    dend_33 { pt3dadd( 99.1535, 33.1243, -95.8246, 0.28 ) }
    dend_33 { pt3dadd( 99.6837, 34.4712, -96.706, 0.83 ) }
    dend_33 { pt3dadd( 100.945, 38.1048, -99.2573, 0.28 ) }
    dend_33 { pt3dadd( 101.222, 39.0122, -99.9351, 0.55 ) }
    dend_33 { pt3dadd( 102.097, 42.2233, -102.365, 0.28 ) }
    dend_33 { pt3dadd( 102.306, 43.0401, -102.993, 0.55 ) }
    dend_33 { pt3dadd( 103.214, 46.6545, -105.642, 0.28 ) }
    dend_33 { pt3dadd( 103.475, 47.5809, -106.285, 0.55 ) }
    dend_33 { pt3dadd( 104.39, 50.6931, -108.26, 0.28 ) }
    dend_33 { pt3dadd( 104.725, 51.6542, -108.778, 0.83 ) }
    dend_33 { pt3dadd( 105.749, 54.171, -109.869, 0.28 ) }
    dend_33 { pt3dadd( 106.401, 55.5649, -110.329, 0.55 ) }
    dend_33 { pt3dadd( 108.722, 59.6177, -111.113, 0.28 ) }
    dend_33 { pt3dadd( 109.413, 60.6252, -111.179, 0.83 ) }
    dend_33 { pt3dadd( 112.036, 63.9433, -111.016, 0.28 ) }
    dend_33 { pt3dadd( 112.419, 64.3545, -110.969, 0.55 ) }
    dend_33 { pt3dadd( 114.978, 66.755, -110.517, 0.28 ) }
    dend_33 { pt3dadd( 116.592, 68.1909, -110.169, 0.55 ) }
    dend_33 { pt3dadd( 120.209, 71.2236, -109.148, 0.28 ) }
    dend_33 { pt3dadd( 120.502, 71.461, -109.068, 0.55 ) }
    dend_33 { pt3dadd( 124.661, 74.8372, -108.089, 0.28 ) }
    dend_33 { pt3dadd( 124.949, 75.0633, -108.025, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 83/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 40.0882, 1.47379, -26.6392, 0.83 ) }
    dend_30 { pt3dadd( 41.9178, 1.92987, -27.6939, 0.83 ) }
    dend_30 { pt3dadd( 42.8058, 2.14953, -28.2124, 0.55 ) }
    dend_30 { pt3dadd( 43.4482, 2.25777, -28.5856, 0.55 ) }
    dend_30 { pt3dadd( 44.9452, 2.45464, -29.455, 1.11 ) }
    dend_30 { pt3dadd( 47.7621, 2.71875, -31.2802, 0.28 ) }
    dend_30 { pt3dadd( 48.1805, 2.74942, -31.5522, 1.11 ) }
    dend_30 { pt3dadd( 49.997, 2.82248, -32.821, 0.28 ) }
    dend_30 { pt3dadd( 51.301, 2.85679, -33.7043, 0.28 ) }
    dend_30 { pt3dadd( 52.3062, 2.88283, -34.3573, 0.83 ) }
    dend_30 { pt3dadd( 54.3746, 2.97358, -35.6679, 0.28 ) }
    dend_30 { pt3dadd( 55.7398, 2.98706, -36.4312, 0.28 ) }
    dend_30 { pt3dadd( 56.4696, 3.0109, -36.8463, 1.11 ) }
    dend_30 { pt3dadd( 58.2525, 3.14209, -37.8622, 0.28 ) }
    dend_30 { pt3dadd( 58.852, 3.24343, -38.1864, 0.55 ) }
    dend_30 { pt3dadd( 61.3302, 3.73583, -39.3466, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 99/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -75.3844, 18.7417, -51.6304, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -77.4166, 20.0849, -51.8314, 0.28 ) }
    dend_26 { pt3dadd( -77.9222, 20.4411, -51.9759, 0.55 ) }
    dend_26 { pt3dadd( -79.3513, 21.4143, -52.4611, 0.28 ) }
    dend_26 { pt3dadd( -80.8552, 22.4716, -53.0904, 0.55 ) }
    dend_26 { pt3dadd( -82.5336, 23.6639, -53.7821, 0.28 ) }
    dend_26 { pt3dadd( -82.8932, 23.9194, -53.9295, 0.55 ) }
    dend_26 { pt3dadd( -85.3104, 25.6506, -55.014, 0.28 ) }
    dend_26 { pt3dadd( -85.9947, 26.1569, -55.3431, 0.83 ) }
    dend_26 { pt3dadd( -87.7444, 27.5641, -56.3445, 0.28 ) }
    dend_26 { pt3dadd( -88.8664, 28.5514, -57.0474, 0.83 ) }
    dend_26 { pt3dadd( -90.9312, 30.52, -58.3106, 0.28 ) }
    dend_26 { pt3dadd( -91.1137, 30.7051, -58.4103, 0.83 ) }
    dend_26 { pt3dadd( -92.833, 32.5823, -59.2396, 0.28 ) }
    dend_26 { pt3dadd( -94.7834, 34.9735, -60.265, 0.83 ) }
    dend_26 { pt3dadd( -95.9571, 36.5644, -60.8968, 0.28 ) }
    dend_26 { pt3dadd( -96.4009, 37.2879, -61.1996, 0.55 ) }
    dend_26 { pt3dadd( -97.0584, 38.5669, -61.7254, 0.28 ) }
    dend_26 { pt3dadd( -97.4529, 39.4137, -62.0239, 0.55 ) }
    dend_26 { pt3dadd( -98.3811, 41.65, -62.6065, 0.28 ) }
    dend_26 { pt3dadd( -98.609, 42.1886, -62.6526, 0.83 ) }
    dend_26 { pt3dadd( -99.7744, 44.8971, -62.7504, 0.28 ) }
    dend_26 { pt3dadd( -100.051, 45.5512, -62.7431, 0.55 ) }
    dend_26 { pt3dadd( -100.97, 47.6864, -62.6333, 0.28 ) }
    dend_26 { pt3dadd( -101.31, 48.4717, -62.5287, 0.83 ) }
    dend_26 { pt3dadd( -103.786, 54.1379, -61.5107, 0.28 ) }
    dend_26 { pt3dadd( -104.392, 55.5574, -61.1927, 0.55 ) }
    dend_26 { pt3dadd( -107.24, 62.3748, -59.4156, 0.28 ) }
    dend_26 { pt3dadd( -107.584, 63.1912, -59.1969, 0.83 ) }
    dend_26 { pt3dadd( -111.391, 72.1836, -56.8023, 0.28 ) }
    dend_26 { pt3dadd( -111.949, 73.505, -56.4377, 0.83 ) }
    dend_26 { pt3dadd( -113.401, 76.991, -55.4031, 0.28 ) }
    dend_26 { pt3dadd( -116.063, 83.3036, -53.4506, 0.28 ) }
    dend_26 { pt3dadd( -117.001, 85.4874, -52.7417, 0.28 ) }
    dend_26 { pt3dadd( -117.356, 86.3034, -52.4942, 0.83 ) }
    dend_26 { pt3dadd( -118.091, 87.8806, -52.0481, 0.28 ) }
    dend_26 { pt3dadd( -118.962, 89.6897, -51.6001, 0.55 ) }
    dend_26 { pt3dadd( -119.711, 91.1971, -51.3363, 0.28 ) }
    dend_26 { pt3dadd( -120.117, 92.0009, -51.2161, 0.55 ) }
    dend_26 { pt3dadd( -120.853, 93.4356, -51.0165, 0.28 ) }
    dend_26 { pt3dadd( -121.284, 94.1697, -50.8814, 0.55 ) }
    dend_26 { pt3dadd( -123.846, 98.0195, -50.0418, 0.28 ) }
    dend_26 { pt3dadd( -126.255, 101.144, -49.2701, 0.28 ) }
    dend_26 { pt3dadd( -127.284, 102.358, -48.9357, 0.28 ) }
    dend_26 { pt3dadd( -127.977, 103.108, -48.7264, 1.11 ) }
    dend_26 { pt3dadd( -130.771, 105.9, -47.934, 0.28 ) }
    dend_26 { pt3dadd( -131.513, 106.578, -47.723, 0.55 ) }
    dend_26 { pt3dadd( -134.922, 109.323, -46.7903, 0.28 ) }
    dend_26 { pt3dadd( -135.152, 109.501, -46.7302, 0.55 ) }
    dend_26 { pt3dadd( -137.603, 111.572, -46.1228, 0.28 ) }
    dend_26 { pt3dadd( -137.902, 111.844, -46.056, 0.83 ) }
    dend_26 { pt3dadd( -141.206, 114.942, -45.4494, 0.28 ) }
    dend_26 { pt3dadd( -142.077, 115.771, -45.2743, 0.55 ) }
    dend_26 { pt3dadd( -144.412, 117.998, -44.7705, 0.28 ) }
    dend_26 { pt3dadd( -146.451, 119.976, -44.3376, 0.28 ) }
    dend_26 { pt3dadd( -149.195, 122.606, -43.7759, 0.28 ) }
    dend_26 { pt3dadd( -149.867, 123.231, -43.6487, 0.83 ) }
    dend_26 { pt3dadd( -152.062, 125.173, -43.2842, 0.28 ) }
    dend_26 { pt3dadd( -152.563, 125.583, -43.1806, 0.55 ) }
    dend_26 { pt3dadd( -156.191, 128.281, -42.2878, 0.28 ) }
    dend_26 { pt3dadd( -157.142, 128.915, -42.0317, 0.55 ) }
    dend_26 { pt3dadd( -158.501, 129.781, -41.6173, 0.28 ) }
    dend_26 { pt3dadd( -159.026, 130.109, -41.4286, 0.55 ) }
    dend_26 { pt3dadd( -161.726, 131.663, -40.3361, 0.28 ) }
    dend_26 { pt3dadd( -162.534, 132.183, -39.954, 0.55 ) }
    dend_26 { pt3dadd( -163.5, 132.842, -39.4431, 0.28 ) }
    dend_26 { pt3dadd( -164.139, 133.353, -39.0848, 0.55 ) }
    dend_26 { pt3dadd( -166.2, 135.2, -37.9196, 0.28 ) }
    dend_26 { pt3dadd( -166.372, 135.386, -37.8266, 0.55 ) }
    dend_26 { pt3dadd( -169.278, 138.972, -36.4017, 0.28 ) }
    dend_26 { pt3dadd( -169.868, 139.777, -36.0844, 0.55 ) }
    dend_26 { pt3dadd( -170.708, 140.999, -35.5852, 0.28 ) }
    dend_26 { pt3dadd( -171.25, 141.832, -35.2299, 0.55 ) }
    dend_26 { pt3dadd( -173.947, 146.54, -33.2811, 0.28 ) }
    dend_26 { pt3dadd( -174.385, 147.352, -32.9267, 0.55 ) }
    dend_26 { pt3dadd( -175.624, 149.788, -31.8372, 0.28 ) }
    dend_26 { pt3dadd( -176.164, 150.892, -31.3338, 0.83 ) }
    dend_26 { pt3dadd( -177.545, 153.749, -29.996, 0.28 ) }
    dend_26 { pt3dadd( -179.557, 158.053, -27.8389, 0.28 ) }
    dend_26 { pt3dadd( -179.831, 158.656, -27.4912, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -75.3844, 18.7417, -51.6304, 0.28 ) }
    dend_25 { pt3dadd( -76.8944, 18.3499, -51.7049, 0.28 ) }
    dend_25 { pt3dadd( -77.5462, 18.1808, -51.7371, 0.55 ) }
    dend_25 { pt3dadd( -79.3871, 17.7032, -51.828, 0.28 ) }
    dend_25 { pt3dadd( -79.962, 17.554, -51.8564, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.41688, -25.5467, 7.9149, 1.66 ) }
    dend_10 { pt3dadd( -2.31511, -29.9267, 7.34445, 1.66 ) }
    dend_10 { pt3dadd( -3.33634, -34.9065, 6.6959, 1.66 ) }
    dend_10 { pt3dadd( -4.33569, -39.7795, 6.06124, 1.66 ) }
    dend_10 { pt3dadd( -5.30709, -44.5163, 5.44433, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.41688, -25.5467, 7.9149, 0.83 ) }
    dend_7 { pt3dadd( 1.25717, -27.008, 13.182, 0.83 ) }
    dend_7 { pt3dadd( 2.26906, -27.8912, 15.5351, 0.55 ) }
    dend_7 { pt3dadd( 3.12724, -28.9624, 18.1593, 1.11 ) }
    dend_7 { pt3dadd( 3.71641, -30.0425, 20.4298, 0.55 ) }
    dend_7 { pt3dadd( 4.24529, -31.012, 22.4678, 0.55 ) }
    dend_7 { pt3dadd( 5.31111, -32.9657, 26.575, 0.28 ) }
    dend_7 { pt3dadd( 5.62051, -34.1254, 28.4468, 0.83 ) }
    dend_7 { pt3dadd( 6.08919, -36.0596, 31.814, 0.83 ) }
    dend_7 { pt3dadd( 6.24203, -37.5762, 34.3075, 0.55 ) }
    dend_7 { pt3dadd( 10.4672, -41.2526, 43.5932, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 13.1219, -46.1598, 52.9458, 0.55 ) }
    dend_7 { pt3dadd( 16.4019, -53.0269, 60.8886, 0.55 ) }
    dend_7 { pt3dadd( 17.9859, -59.7939, 69.3935, 0.55 ) }
    dend_7 { pt3dadd( 18.6984, -66.4396, 78.0925, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.64623, -14.391, 4.25508, 0.83 ) }
    dend_5 { pt3dadd( -5.10562, -14.4067, 4.22761, 0.83 ) }
    dend_5 { pt3dadd( -9.89992, -14.4213, 4.0714, 0.83 ) }
    dend_5 { pt3dadd( -14.6643, -14.4097, 3.95327, 0.83 ) }
    dend_5 { pt3dadd( -18.3356, -14.2564, 3.86909, 0.83 ) }
    dend_5 { pt3dadd( -19.7818, -14.1668, 3.83308, 0.83 ) }
    dend_5 { pt3dadd( -21.8833, -13.9852, 3.78677, 1.11 ) }
    dend_5 { pt3dadd( -26.2825, -13.5749, 3.56624, 0.83 ) }
    dend_5 { pt3dadd( -28.9103, -13.1898, 3.33822, 0.83 ) }
    dend_5 { pt3dadd( -31.6007, -12.5933, 2.79786, 0.55 ) }
    dend_5 { pt3dadd( -33.1115, -12.2063, 2.23087, 0.55 ) }
    dend_5 { pt3dadd( -34.6138, -11.788, 1.47187, 0.55 ) }
    dend_5 { pt3dadd( -37.8024, -11.0115, -0.624366, 0.55 ) }
    dend_5 { pt3dadd( -39.6939, -10.7312, -2.09165, 0.55 ) }
    dend_5 { pt3dadd( -42.5357, -10.3985, -4.5824, 0.55 ) }
    dend_5 { pt3dadd( -46.3859, -10.1455, -8.03737, 0.55 ) }
    dend_5 { pt3dadd( -47.9784, -10.0856, -9.41584, 0.55 ) }
    dend_5 { pt3dadd( -50.2039, -10.0883, -11.3447, 0.28 ) }
    dend_5 { pt3dadd( -52.5082, -10.1842, -13.2693, 0.55 ) }
    dend_5 { pt3dadd( -54.512, -10.3713, -14.8619, 0.28 ) }
    dend_5 { pt3dadd( -57.2138, -10.6044, -16.7806, 0.83 ) }
    dend_5 { pt3dadd( -58.9354, -10.7854, -17.844, 0.28 ) }
    dend_5 { pt3dadd( -62.058, -11.192, -19.5812, 0.55 ) }
    dend_5 { pt3dadd( -64.6629, -11.4849, -20.8644, 0.55 ) }
    dend_5 { pt3dadd( -67.11, -11.8345, -21.9527, 0.55 ) }
    dend_5 { pt3dadd( -68.9788, -12.2133, -22.6756, 0.83 ) }
    dend_5 { pt3dadd( -72.8, -13.1196, -24.0883, 0.55 ) }
    dend_5 { pt3dadd( -74.9507, -13.6324, -24.7674, 0.28 ) }
    dend_5 { pt3dadd( -75.642, -13.7952, -24.9568, 0.83 ) }
    dend_5 { pt3dadd( -78.129, -14.399, -25.6518, 0.83 ) }
    dend_5 { pt3dadd( -80.0284, -14.9198, -26.2663, 0.55 ) }
    dend_5 { pt3dadd( -81.9321, -15.4704, -26.9991, 0.28 ) }
    dend_5 { pt3dadd( -85.7737, -16.601, -28.5062, 0.55 ) }
    dend_5 { pt3dadd( -88.2751, -17.4027, -29.4493, 0.28 ) }
    dend_5 { pt3dadd( -89.3525, -17.7655, -29.8156, 0.55 ) }
    dend_5 { pt3dadd( -91.5136, -18.4864, -30.4399, 0.28 ) }
    dend_5 { pt3dadd( -92.1656, -18.7045, -30.5753, 0.83 ) }
    dend_5 { pt3dadd( -94.9241, -19.7584, -30.9963, 0.28 ) }
    dend_5 { pt3dadd( -95.5673, -20.0558, -31.2046, 0.55 ) }
    dend_5 { pt3dadd( -98.7871, -21.7213, -32.3784, 0.28 ) }
    dend_5 { pt3dadd( -100.044, -22.4287, -32.9771, 0.55 ) }
    dend_5 { pt3dadd( -101.458, -23.2336, -33.6951, 0.28 ) }
    dend_5 { pt3dadd( -102.983, -24.0797, -34.5224, 0.55 ) }
    dend_5 { pt3dadd( -109.093, -27.1738, -38.4206, 0.28 ) }
    dend_5 { pt3dadd( -111.764, -28.3236, -40.0956, 0.55 ) }
    dend_5 { pt3dadd( -115.146, -29.6429, -42.1764, 0.28 ) }
    dend_5 { pt3dadd( -116.692, -30.1763, -43.1416, 0.55 ) }
    dend_5 { pt3dadd( -119.923, -31.168, -45.0518, 0.28 ) }
    dend_5 { pt3dadd( -122.429, -31.7268, -46.239, 0.55 ) }
    dend_5 { pt3dadd( -125.323, -32.0902, -47.1912, 0.28 ) }
    dend_5 { pt3dadd( -126.371, -32.083, -47.6065, 0.55 ) }
    dend_5 { pt3dadd( -129.141, -31.6873, -48.6553, 0.28 ) }
    dend_5 { pt3dadd( -129.808, -31.4595, -49.1076, 0.55 ) }
    dend_5 { pt3dadd( -131.136, -30.6053, -50.3782, 0.28 ) }
    dend_5 { pt3dadd( -131.63, -30.2002, -50.7984, 0.83 ) }
    dend_5 { pt3dadd( -133.981, -27.725, -52.6613, 0.28 ) }
    dend_5 { pt3dadd( -134.894, -26.6102, -53.1657, 0.83 ) }
    dend_5 { pt3dadd( -139.651, -19.8948, -54.3711, 0.28 ) }
    dend_5 { pt3dadd( -139.981, -19.354, -54.3838, 0.83 ) }
    dend_5 { pt3dadd( -143.944, -12.0075, -53.3217, 0.28 ) }
    dend_5 { pt3dadd( -144.403, -11.1284, -52.999, 1.11 ) }
    dend_5 { pt3dadd( -145.04, -9.97165, -51.9547, 0.28 ) }
    dend_5 { pt3dadd( -145.379, -9.37099, -51.1991, 0.55 ) }
    dend_5 { pt3dadd( -145.847, -8.60845, -49.9674, 0.28 ) }
    dend_5 { pt3dadd( -146.139, -8.09082, -49.2425, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.64623, -14.391, 4.25508, 0.55 ) }
    dend_2 { pt3dadd( -6.39121, -14.6152, 4.33416, 0.55 ) }
    dend_2 { pt3dadd( -8.72795, -15.0818, 4.53701, 0.55 ) }
    dend_2 { pt3dadd( -12.3711, -15.8594, 4.79904, 0.55 ) }
    dend_2 { pt3dadd( -14.6784, -16.3179, 4.91887, 0.55 ) }
    dend_2 { pt3dadd( -15.8383, -16.5484, 4.97912, 0.83 ) }
    dend_2 { pt3dadd( -18.3711, -17.0516, 5.11066, 0.83 ) }
    dend_2 { pt3dadd( -20.7617, -17.5015, 5.25572, 0.83 ) }
    dend_2 { pt3dadd( -22.2801, -17.925, 5.37831, 0.55 ) }
    dend_2 { pt3dadd( -24.4273, -18.6067, 5.57826, 0.55 ) }
    dend_2 { pt3dadd( -34.0447, -21.1432, 7.28167, 0.55 ) }
    dend_2 { pt3dadd( -43.7668, -23.8554, 7.32152, 0.55 ) }
    dend_2 { pt3dadd( -53.6895, -25.2265, 8.36986, 0.55 ) }
    dend_2 { pt3dadd( -63.6932, -26.1502, 9.029, 0.55 ) }
    dend_2 { pt3dadd( -73.5202, -27.1672, 10.9723, 0.55 ) }
    dend_2 { pt3dadd( -82.8834, -29.1018, 14.1672, 0.55 ) }
    dend_2 { pt3dadd( -92.2118, -29.2113, 17.947, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 61.3302, 3.73583, -39.3466, 0.55 ) }
    dend_32 { pt3dadd( 63.4043, 3.82613, -39.0421, 0.55 ) }
    dend_32 { pt3dadd( 65.0199, 3.95225, -38.7975, 0.55 ) }
    dend_32 { pt3dadd( 67.3816, 4.14888, -38.4031, 0.28 ) }
    dend_32 { pt3dadd( 68.9708, 4.28683, -38.1292, 0.28 ) }
    dend_32 { pt3dadd( 69.6887, 4.34421, -38.0016, 0.55 ) }
    dend_32 { pt3dadd( 72.6185, 4.56151, -37.4822, 0.28 ) }
    dend_32 { pt3dadd( 74.197, 4.67916, -37.1427, 0.83 ) }
    dend_32 { pt3dadd( 75.9719, 4.82497, -36.6945, 0.28 ) }
    dend_32 { pt3dadd( 76.6686, 4.82927, -36.4565, 0.55 ) }
    dend_32 { pt3dadd( 77.9589, 4.71838, -35.9594, 0.28 ) }
    dend_32 { pt3dadd( 78.8773, 4.61605, -35.5735, 0.55 ) }
    dend_32 { pt3dadd( 81.5193, 4.2115, -34.3096, 0.28 ) }
    dend_32 { pt3dadd( 82.9263, 3.91536, -33.5988, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 86.5054, 3.03957, -31.6621, 0.28 ) }
    dend_32 { pt3dadd( 87.8786, 2.65275, -30.8683, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 61.3302, 3.73583, -39.3466, 0.55 ) }
    dend_31 { pt3dadd( 61.3227, 2.28626, -40.2169, 0.55 ) }
    dend_31 { pt3dadd( 61.4181, -0.172557, -41.5919, 0.55 ) }
    dend_31 { pt3dadd( 61.492, -1.29451, -41.8418, 0.83 ) }
    dend_31 { pt3dadd( 61.5655, -2.16017, -41.9422, 0.28 ) }
    dend_31 { pt3dadd( 61.6117, -2.70679, -41.988, 0.55 ) }
    dend_31 { pt3dadd( 61.7623, -4.79434, -42.1416, 0.28 ) }
    dend_31 { pt3dadd( 61.849, -5.78451, -42.1645, 0.83 ) }
    dend_31 { pt3dadd( 62.3114, -11.0606, -42.0179, 0.28 ) }
    dend_31 { pt3dadd( 62.3931, -11.8383, -41.995, 0.55 ) }
    dend_31 { pt3dadd( 62.5146, -12.979, -41.9849, 0.28 ) }
    dend_31 { pt3dadd( 62.5617, -13.5893, -41.9949, 0.55 ) }
    dend_31 { pt3dadd( 62.6134, -15.3681, -42.1341, 0.28 ) }
    dend_31 { pt3dadd( 62.6028, -15.6495, -42.1898, 0.55 ) }
    dend_31 { pt3dadd( 62.5384, -16.3875, -42.5055, 0.28 ) }
    dend_31 { pt3dadd( 62.4958, -17.2018, -42.7471, 0.55 ) }
    dend_31 { pt3dadd( 62.4474, -19.4065, -43.2663, 0.28 ) }
    dend_31 { pt3dadd( 62.4348, -20.0203, -43.398, 0.83 ) }
    dend_31 { pt3dadd( 62.3605, -22.345, -43.8366, 0.28 ) }
    dend_31 { pt3dadd( 62.2653, -25.3138, -44.3788, 0.83 ) }
    dend_31 { pt3dadd( 62.1686, -29.7357, -45.1381, 0.28 ) }
    dend_31 { pt3dadd( 62.1731, -30.1217, -45.2028, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.30709, -44.5163, 5.44433, 1.11 ) }
    dend_16 { pt3dadd( -5.14097, -48.174, 5.42114, 1.11 ) }
    dend_16 { pt3dadd( -5.00946, -50.2995, 5.47642, 1.11 ) }
    dend_16 { pt3dadd( -5.11371, -54.3745, 5.46239, 1.11 ) }
    dend_16 { pt3dadd( -5.3821, -58.9882, 5.37338, 1.11 ) }
    dend_16 { pt3dadd( -5.67188, -63.0407, 5.34073, 1.11 ) }
    dend_16 { pt3dadd( -6.02032, -67.1744, 5.32395, 1.11 ) }
    dend_16 { pt3dadd( -7.05139, -75.2176, 5.31725, 1.11 ) }
    dend_16 { pt3dadd( -8.30169, -83.4862, 5.27251, 1.11 ) }
    dend_16 { pt3dadd( -9.15981, -88.5997, 5.23146, 1.11 ) }
    dend_16 { pt3dadd( -9.96361, -93.1432, 5.20128, 1.11 ) }
    dend_16 { pt3dadd( -10.5602, -96.4324, 5.18365, 1.11 ) }
    dend_16 { pt3dadd( -11.1425, -99.8552, 5.21208, 1.11 ) }
    dend_16 { pt3dadd( -11.8818, -104.964, 5.29623, 1.11 ) }
    dend_16 { pt3dadd( -12.2274, -109.667, 5.48858, 1.11 ) }
    dend_16 { pt3dadd( -12.4733, -115.333, 5.71906, 1.11 ) }
    dend_16 { pt3dadd( -12.3939, -118.784, 5.77994, 1.11 ) }
    dend_16 { pt3dadd( -11.9969, -123.352, 5.85588, 1.11 ) }
    dend_16 { pt3dadd( -11.4466, -126.614, 5.96755, 1.11 ) }
    dend_16 { pt3dadd( -10.6893, -129.854, 6.10444, 1.11 ) }
    dend_16 { pt3dadd( -9.66443, -133.583, 6.28213, 1.11 ) }
    dend_16 { pt3dadd( -8.03909, -138.798, 6.52023, 1.11 ) }
    dend_16 { pt3dadd( -5.0605, -147.759, 6.98873, 1.11 ) }
    dend_16 { pt3dadd( -2.88571, -153.565, 7.42346, 1.11 ) }
    dend_16 { pt3dadd( -1.4061, -157.778, 7.77428, 0.83 ) }
    dend_16 { pt3dadd( -0.429594, -160.652, 8.06875, 0.83 ) }
    dend_16 { pt3dadd( 1.28138, -166.117, 8.76028, 0.83 ) }
    dend_16 { pt3dadd( 3.0629, -172.22, 9.77937, 0.83 ) }
    dend_16 { pt3dadd( 4.39552, -177.218, 10.6657, 0.83 ) }
    dend_16 { pt3dadd( 5.98859, -184.494, 11.9561, 0.83 ) }
    dend_16 { pt3dadd( 7.09861, -190.058, 13.0219, 0.83 ) }
    dend_16 { pt3dadd( 7.94269, -195.214, 14.2377, 0.83 ) }
    dend_16 { pt3dadd( 8.8076, -203.274, 17.0111, 0.83 ) }
    dend_16 { pt3dadd( 9.0964, -206.416, 18.2171, 0.83 ) }
    dend_16 { pt3dadd( 9.24488, -208.891, 19.2568, 0.83 ) }
    dend_16 { pt3dadd( 9.41698, -211.31, 20.4901, 0.83 ) }
    dend_16 { pt3dadd( 9.48507, -218.657, 24.6509, 0.83 ) }
    dend_16 { pt3dadd( 9.26888, -225.587, 29.6168, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.30709, -44.5163, 5.44433, 0.83 ) }
    dend_11 { pt3dadd( -3.75514, -45.3196, 5.78472, 0.83 ) }
    dend_11 { pt3dadd( -2.11437, -46.1688, 6.14459, 0.83 ) }
    dend_11 { pt3dadd( 0.594761, -47.571, 6.73878, 0.83 ) }
    dend_11 { pt3dadd( 0.924327, -47.7415, 6.81107, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 67/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.6984, -66.4396, 78.0925, 0.83 ) }
    dend_9 { pt3dadd( 22.1507, -72.2779, 87.134, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 69/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 18.6984, -66.4396, 78.0925, 0.55 ) }
    dend_8 { pt3dadd( 20.2837, -70.5132, 85.6711, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -92.2118, -29.2113, 17.947, 0.83 ) }
    dend_4 { pt3dadd( -103.833, -32.0606, 11.5977, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -92.2118, -29.2113, 17.947, 0.55 ) }
    dend_3 { pt3dadd( -95.9917, -29.4498, 28.4816, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 75/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 9.26888, -225.587, 29.6168, 0.55 ) }
    dend_18 { pt3dadd( 8.48401, -227.972, 28.5041, 0.55 ) }
    dend_18 { pt3dadd( 7.67002, -231.009, 27.2152, 0.55 ) }
    dend_18 { pt3dadd( 7.06939, -233.484, 26.2058, 0.28 ) }
    dend_18 { pt3dadd( 6.6215, -235.916, 25.2583, 0.55 ) }
    dend_18 { pt3dadd( 6.32347, -237.902, 24.5313, 0.28 ) }
    dend_18 { pt3dadd( 6.22926, -238.612, 24.2826, 0.55 ) }
    dend_18 { pt3dadd( 5.77777, -242.876, 23.0191, 0.28 ) }
    dend_18 { pt3dadd( 5.72677, -243.414, 22.881, 0.83 ) }
    dend_18 { pt3dadd( 5.33609, -246.971, 22.0652, 0.28 ) }
    dend_18 { pt3dadd( 5.1105, -248.886, 21.62, 0.28 ) }
    dend_18 { pt3dadd( 4.96737, -249.905, 21.4035, 0.55 ) }
    dend_18 { pt3dadd( 4.49687, -252.931, 20.7769, 0.28 ) }
    dend_18 { pt3dadd( 4.39828, -253.433, 20.6841, 0.55 ) }
    dend_18 { pt3dadd( 4.03172, -254.915, 20.4269, 0.28 ) }
    dend_18 { pt3dadd( 3.47473, -256.253, 20.2247, 0.83 ) }
    dend_18 { pt3dadd( 3.49711, -264.636, 18.1717, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 9.26888, -225.587, 29.6168, 0.55 ) }
    dend_17 { pt3dadd( 9.60176, -227.981, 32.4165, 0.55 ) }
    dend_17 { pt3dadd( 9.94408, -229.317, 33.955, 0.28 ) }
    dend_17 { pt3dadd( 10.1601, -229.896, 34.624, 0.55 ) }
    dend_17 { pt3dadd( 10.9521, -231.586, 36.6104, 0.55 ) }
    dend_17 { pt3dadd( 11.6931, -233.098, 38.3129, 0.55 ) }
    dend_17 { pt3dadd( 12.4711, -234.685, 40.1002, 0.55 ) }
    dend_17 { pt3dadd( 13.3295, -236.265, 41.6546, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 13.8671, -237.098, 42.5191, 0.28 ) }
    dend_17 { pt3dadd( 14.3023, -237.667, 43.1346, 0.55 ) }
    dend_17 { pt3dadd( 15.9623, -239.384, 44.994, 0.28 ) }
    dend_17 { pt3dadd( 19.363, -245.464, 53.0923, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.924327, -47.7415, 6.81107, 0.28 ) }
    dend_15 { pt3dadd( 0.751839, -45.3243, 5.57573, 0.28 ) }
    dend_15 { pt3dadd( 0.736995, -45.0816, 5.47075, 0.83 ) }
    dend_15 { pt3dadd( 0.652833, -43.64, 4.92947, 0.28 ) }
    dend_15 { pt3dadd( 0.57945, -42.8857, 4.71305, 0.83 ) }
    dend_15 { pt3dadd( 0.228216, -39.7917, 4.05864, 0.28 ) }
    dend_15 { pt3dadd( 0.170225, -39.0336, 3.9009, 0.55 ) }
    dend_15 { pt3dadd( 0.072119, -37.5474, 3.57999, 0.28 ) }
    dend_15 { pt3dadd( 0.0376091, -36.7826, 3.43234, 0.55 ) }
    dend_15 { pt3dadd( 0.00848588, -35.2453, 3.18995, 0.28 ) }
    dend_15 { pt3dadd( -0.035315, -33.9151, 3.05148, 0.55 ) }
    dend_15 { pt3dadd( -0.234815, -30.9001, 3.06603, 0.28 ) }
    dend_15 { pt3dadd( -0.253894, -30.0737, 3.02207, 0.55 ) }
    dend_15 { pt3dadd( -2.14787, -20.7828, 2.20461, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 18/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.924327, -47.7415, 6.81107, 0.83 ) }
    dend_12 { pt3dadd( 1.0895, -49.7742, 7.0101, 0.83 ) }
    dend_12 { pt3dadd( 1.19113, -52.4063, 7.29558, 0.83 ) }
    dend_12 { pt3dadd( 1.21867, -53.8188, 7.44957, 0.83 ) }
    dend_12 { pt3dadd( 1.32552, -56.5587, 7.76739, 0.83 ) }
    dend_12 { pt3dadd( 1.64502, -60.1257, 8.20617, 0.83 ) }
    dend_12 { pt3dadd( 1.8525, -61.4907, 8.38948, 0.83 ) }
    dend_12 { pt3dadd( 2.18835, -63.1494, 8.65165, 0.83 ) }
    dend_12 { pt3dadd( 2.76349, -65.3722, 8.97598, 0.83 ) }
    dend_12 { pt3dadd( 3.42614, -67.4352, 9.26472, 0.83 ) }
    dend_12 { pt3dadd( 4.2463, -69.629, 9.52479, 0.83 ) }
    dend_12 { pt3dadd( 5.37054, -72.4268, 9.72014, 0.83 ) }
    dend_12 { pt3dadd( 5.9587, -73.7992, 9.80147, 0.83 ) }
    dend_12 { pt3dadd( 7.99246, -78.214, 10.0534, 0.83 ) }
    dend_12 { pt3dadd( 8.5622, -79.4408, 10.1219, 0.83 ) }
    dend_12 { pt3dadd( 10.0986, -82.8632, 10.302, 0.83 ) }
    dend_12 { pt3dadd( 11.0137, -85.1288, 10.5074, 0.83 ) }
    dend_12 { pt3dadd( 12.1079, -87.925, 10.8806, 0.83 ) }
    dend_12 { pt3dadd( 12.5966, -89.2921, 11.1096, 0.55 ) }
    dend_12 { pt3dadd( 13.1658, -91.388, 11.5122, 0.55 ) }
    dend_12 { pt3dadd( 13.4495, -92.7927, 11.8211, 0.83 ) }
    dend_12 { pt3dadd( 14.0602, -96.8265, 12.7999, 0.83 ) }
    dend_12 { pt3dadd( 14.3342, -99.3268, 13.4303, 0.55 ) }
    dend_12 { pt3dadd( 14.5093, -102.25, 14.1414, 0.55 ) }
    dend_12 { pt3dadd( 14.5995, -105.614, 14.921, 0.55 ) }
    dend_12 { pt3dadd( 14.6049, -107.945, 15.4356, 0.55 ) }
    dend_12 { pt3dadd( 14.5686, -112.855, 16.3869, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 14.5686, -112.855, 16.3869, 0.55 ) }
    dend_14 { pt3dadd( 15.665, -114.677, 17.0504, 0.55 ) }
    dend_14 { pt3dadd( 17.1772, -116.954, 17.744, 0.55 ) }
    dend_14 { pt3dadd( 20.5243, -121.988, 19.0692, 0.55 ) }
    dend_14 { pt3dadd( 22.723, -125.358, 19.8376, 0.55 ) }
    dend_14 { pt3dadd( 24.4978, -128.15, 20.4206, 0.55 ) }
    dend_14 { pt3dadd( 26.5012, -131.123, 20.8806, 0.55 ) }
    dend_14 { pt3dadd( 29.1816, -134.917, 21.2191, 0.55 ) }
    dend_14 { pt3dadd( 30.6442, -136.909, 21.2605, 0.55 ) }
    dend_14 { pt3dadd( 32.3418, -139.226, 21.1948, 0.55 ) }
    dend_14 { pt3dadd( 33.7212, -141.017, 21.2061, 0.83 ) }
    dend_14 { pt3dadd( 37.0478, -145.584, 21.3612, 0.55 ) }
    dend_14 { pt3dadd( 37.6951, -146.519, 21.4372, 0.55 ) }
    dend_14 { pt3dadd( 39.2065, -148.844, 21.7524, 0.55 ) }
    dend_14 { pt3dadd( 41.8283, -152.927, 22.4636, 0.55 ) }
    dend_14 { pt3dadd( 43.4078, -155.554, 23.015, 0.55 ) }
    dend_14 { pt3dadd( 45.7659, -159.932, 24.0625, 0.55 ) }
    dend_14 { pt3dadd( 46.6838, -161.922, 24.622, 0.83 ) }
    dend_14 { pt3dadd( 47.2698, -163.206, 24.9674, 0.28 ) }
    dend_14 { pt3dadd( 47.4401, -163.589, 25.0599, 0.55 ) }
    dend_14 { pt3dadd( 47.9395, -164.795, 25.2977, 0.28 ) }
    dend_14 { pt3dadd( 48.3066, -165.675, 25.4842, 0.55 ) }
    dend_14 { pt3dadd( 49.1426, -167.439, 25.9961, 0.28 ) }
    dend_14 { pt3dadd( 50.6077, -170.079, 27.0303, 0.55 ) }
    dend_14 { pt3dadd( 52.3297, -172.736, 28.3252, 0.28 ) }
    dend_14 { pt3dadd( 52.8271, -173.401, 28.7244, 0.83 ) }
    dend_14 { pt3dadd( 54.923, -175.76, 30.41, 0.28 ) }
    dend_14 { pt3dadd( 55.9432, -176.77, 31.2489, 0.55 ) }
    dend_14 { pt3dadd( 57.4891, -178.122, 32.5646, 0.55 ) }
    dend_14 { pt3dadd( 58.9385, -179.202, 33.7963, 0.55 ) }
    dend_14 { pt3dadd( 60.5256, -180.266, 35.1582, 0.55 ) }
    dend_14 { pt3dadd( 62.2003, -181.38, 36.5741, 0.28 ) }
    dend_14 { pt3dadd( 62.6674, -181.714, 36.9509, 0.55 ) }
    dend_14 { pt3dadd( 63.9497, -182.777, 37.9304, 0.28 ) }
    dend_14 { pt3dadd( 64.2228, -183.042, 38.1292, 0.55 ) }
    dend_14 { pt3dadd( 65.5705, -184.464, 39.1067, 0.28 ) }
    dend_14 { pt3dadd( 65.9405, -184.885, 39.3481, 0.83 ) }
    dend_14 { pt3dadd( 68.9592, -188.41, 41.2012, 0.28 ) }
    dend_14 { pt3dadd( 69.1676, -188.635, 41.2988, 0.55 ) }
    dend_14 { pt3dadd( 71.4027, -190.888, 42.1767, 0.28 ) }
    dend_14 { pt3dadd( 72.0824, -191.544, 42.4011, 0.55 ) }
    dend_14 { pt3dadd( 74.0352, -193.391, 42.9627, 0.28 ) }
    dend_14 { pt3dadd( 74.2551, -193.6, 43.0287, 0.55 ) }
    dend_14 { pt3dadd( 77.8655, -196.93, 44.0996, 0.28 ) }
    dend_14 { pt3dadd( 78.5064, -197.539, 44.3083, 0.55 ) }
    dend_14 { pt3dadd( 80.157, -199.223, 44.8875, 0.28 ) }
    dend_14 { pt3dadd( 81.3667, -200.473, 45.3598, 0.83 ) }
    dend_14 { pt3dadd( 83.9304, -203.233, 46.5284, 0.28 ) }
    dend_14 { pt3dadd( 83.9304, -203.233, 46.5284, 0.55 ) }
    dend_14 { pt3dadd( 85.1476, -204.421, 47.0927, 0.55 ) }
    dend_14 { pt3dadd( 86.2092, -205.402, 47.5906, 0.55 ) }
    dend_14 { pt3dadd( 89.4437, -208.179, 49.1941, 0.28 ) }
    dend_14 { pt3dadd( 90.3836, -208.937, 49.6594, 0.55 ) }
    dend_14 { pt3dadd( 92.9598, -210.854, 51.0033, 0.28 ) }
    dend_14 { pt3dadd( 94.2226, -211.779, 51.7088, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 96.2067, -213.078, 52.7886, 0.55 ) }
    dend_14 { pt3dadd( 96.8064, -213.454, 53.1301, 0.28 ) }
    dend_14 { pt3dadd( 97.1164, -213.663, 53.3183, 0.55 ) }
    dend_14 { pt3dadd( 98.727, -214.813, 54.2929, 0.28 ) }
    dend_14 { pt3dadd( 99.4366, -215.27, 54.6618, 0.55 ) }
    dend_14 { pt3dadd( 103.753, -217.891, 56.704, 0.28 ) }
    dend_14 { pt3dadd( 105.186, -218.673, 57.2213, 0.83 ) }
    dend_14 { pt3dadd( 106.58, -219.413, 57.6406, 0.28 ) }
    dend_14 { pt3dadd( 107.131, -219.701, 57.7918, 0.55 ) }
    dend_14 { pt3dadd( 112.182, -222.28, 58.9594, 0.28 ) }
    dend_14 { pt3dadd( 114.063, -223.171, 59.3651, 0.55 ) }
    dend_14 { pt3dadd( 117.972, -224.916, 60.0339, 0.28 ) }
    dend_14 { pt3dadd( 118.542, -225.125, 60.0945, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 14.5686, -112.855, 16.3869, 0.55 ) }
    dend_13 { pt3dadd( 14.3134, -115.25, 16.9388, 0.55 ) }
    dend_13 { pt3dadd( 14.1489, -117.252, 17.4429, 0.28 ) }
    dend_13 { pt3dadd( 14.0521, -118.455, 17.7296, 0.83 ) }
    dend_13 { pt3dadd( 13.81, -120.725, 18.2998, 0.28 ) }
    dend_13 { pt3dadd( 13.7543, -121.298, 18.4222, 0.83 ) }
    dend_13 { pt3dadd( 13.4295, -123.773, 18.9282, 0.28 ) }
    dend_13 { pt3dadd( 13.3947, -124.061, 18.9766, 0.55 ) }
    dend_13 { pt3dadd( 13.2433, -125.1, 19.1035, 0.55 ) }
    dend_13 { pt3dadd( 12.9747, -126.567, 19.2361, 0.28 ) }
    dend_13 { pt3dadd( 12.6535, -128.371, 19.356, 0.55 ) }
    dend_13 { pt3dadd( 11.97, -131.697, 19.6204, 0.28 ) }
    dend_13 { pt3dadd( 11.6183, -133.273, 19.7747, 0.83 ) }
    dend_13 { pt3dadd( 11.0472, -135.712, 20.0326, 0.28 ) }
    dend_13 { pt3dadd( 10.4664, -138.076, 20.3242, 0.28 ) }
    dend_13 { pt3dadd( 9.79829, -140.564, 20.6274, 0.28 ) }
    dend_13 { pt3dadd( 9.0501, -142.96, 20.9544, 0.83 ) }
    dend_13 { pt3dadd( 8.46645, -144.816, 21.1797, 0.28 ) }
    dend_13 { pt3dadd( 7.80102, -146.773, 21.454, 0.83 ) }
    dend_13 { pt3dadd( 7.11778, -148.729, 21.7007, 0.28 ) }
    dend_13 { pt3dadd( 6.81306, -149.553, 21.8171, 0.28 ) }
    dend_13 { pt3dadd( 5.98765, -151.43, 21.9701, 0.55 ) }
    dend_13 { pt3dadd( 5.26361, -153.331, 21.963, 0.55 ) }
    dend_13 { pt3dadd( 2.25267, -163.317, 22.7462, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_40 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_39 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_19 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_38 OneSecGrp_SectionRef_12.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_7 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_32 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 5
    dend_41 nseg = 3
    dend_40 nseg = 5
    dend_39 nseg = 9
    dend_34 nseg = 5
    dend_19 nseg = 3
    dend_38 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_21 nseg = 5
    dend_33 nseg = 7
    dend_26 nseg = 9
    dend_7 nseg = 5
    dend_5 nseg = 9
    dend_2 nseg = 5
    dend_16 nseg = 9
    dend_18 nseg = 3
    dend_12 nseg = 3
    dend_14 nseg = 9
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_NBC_0dd32b6386_0_0


