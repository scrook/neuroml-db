// Cell: cACint209_L4_ChC_55f3c5c127_0_0
/*
{
  "id" : "cACint209_L4_ChC_55f3c5c127_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -6.91316, -8.0337, 1.77", "-3.66144, -6.91316, -8.0337, 1.77", "-3.22318, -8.29373, -8.23861, 1.77", "-2.88939, -9.32144, -8.40183, 1.77", "-2.37924, -10.9323, -8.64272, 1.55", "-2.07961, -12.0005, -8.83403, 1.69", "-1.87449, -12.8304, -9.00074, 1.77", "-1.69479, -13.6379, -9.20237, 1.77", "-1.46666, -14.7203, -9.5413, 1.25", "-1.09687, -16.3808, -9.99823, 0.74", "-1.80771, -15.6573, -10.781, 0.74", "-2.36203, -15.4015, -11.614, 0.74", "-3.33401, -15.0539, -13.1115, 1.18", "-3.85652, -14.9666, -13.9653, 1.18", "-4.64025, -14.791, -15.1456, 0.52", "-5.56769, -14.4715, -16.4134, 0.52", "-6.62192, -14.5178, -18.0159, 0.74", "-7.06617, -14.7504, -19.106, 0.74", "-7.27812, -15.1089, -20.0573, 0.74", "-7.62018, -15.5709, -21.4929, 1.11", "-7.92553, -15.8121, -22.4118, 1.69", "-8.42527, -15.9781, -23.3397, 1.77", "-9.56374, -16.2975, -25.3902, 1.33", "-10.1697, -16.5833, -26.6401, 1.4", "-10.5267, -16.9641, -27.5788, 1.55", "-10.7296, -17.5974, -28.5619, 1.33", "-10.7517, -18.6893, -29.8097, 0.74", "-10.5618, -19.5833, -30.5348, 1.03", "-10.2844, -20.3339, -30.9932, 1.47", "-9.98998, -20.8273, -31.3225, 1.62", "-9.52369, -21.4164, -31.7765, 1.62", "-8.99525, -21.8899, -32.1944, 0.52", "-8.36712, -22.3353, -32.6555, 0.52", "-8.21084, -22.568, -33.0517, 0.52", "-8.24261, -23.0444, -34.0781, 0.66", "-8.4458, -23.5122, -35.1626, 0.74", "-8.77717, -23.7031, -35.9276, 0.44", "-9.34815, -23.7008, -36.737, 0.44", "-10.1898, -23.6026, -37.7661, 0.44", "-10.7881, -23.6604, -38.6818, 0.44", "-11.1208, -23.7743, -39.3312, 0.44", "-11.7392, -24.1549, -40.593, 0.66", "-12.0412, -24.7456, -41.8679, 1.11", "-12.1975, -24.9621, -42.3107, 0.96", "-12.6059, -25.4187, -43.3258, 1.18", "-12.7648, -25.6141, -43.7226, 1.69", "-13.0231, -25.9148, -44.2977, 1.69", "-14.0074, -26.9794, -46.2223, 0.88", "-14.6086, -27.4859, -47.2273, 2.14", "-15.9723, -28.1705, -49.0843, 2.28", "-16.1638, -28.2199, -49.2968, 2.28", "-17.27, -28.3171, -50.3288, 0.44", "-17.9016, -28.2689, -50.7929, 0.44", "-18.6476, -28.1243, -51.2208, 0.81", "-19.4129, -27.9393, -51.6778, 0.81", "-19.7618, -27.8938, -51.9279, 0.96", "-20.4549, -27.953, -52.5372, 0.66", "-21.1519, -28.1781, -53.2528, 1.99", "-21.6739, -28.4476, -53.8566, 2.21", "-22.1836, -28.8028, -54.4872, 2.5", "-23.586, -30.0221, -56.3565, 0.66", "-24.313, -30.8176, -57.4605, 0.66", "-24.7621, -31.436, -58.219, 0.66", "-25.2246, -32.1715, -59.0307, 1.55", "-25.4393, -32.5333, -59.3901, 2.21", "-25.6465, -32.9112, -59.7331, 2.21", "-26.2181, -34.1127, -60.7646, 0.29", "-26.5238, -34.8877, -61.4816, 0.29", "-26.7237, -35.4228, -61.967, 1.55", "-26.9729, -36.0685, -62.5398, 1.99", "-27.2021, -36.6464, -63.0646, 2.36", "-27.8465, -38.2184, -64.5358, 0.59", "-28.1668, -39.0242, -65.341, 1.84", "-28.2929, -39.3982, -65.7603, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.62167, 2.1563, 1.92", "-6.50143, -1.62167, 2.1563, 1.92", "-6.8798, -2.25794, 2.1262, 1.92", "-7.52341, -3.51962, 2.06075, 1.92", "-8.1871, -4.67066, 1.99473, 2.14", "-8.6987, -5.44909, 1.93889, 2.36", "-9.42366, -6.39103, 1.86191, 2.28", "-10.2201, -7.2607, 1.77386, 2.36", "-11.1113, -8.06546, 1.65954, 2.36", "-12.4944, -8.96768, 1.49637, 1.77", "-13.2551, -9.26455, 1.4392, 1.77", "-14.448, -9.50655, 1.4074, 1.99", "-15.511, -9.6059, 1.47489, 1.99", "-16.0369, -9.62396, 1.53983, 1.99", "-16.8209, -9.6601, 1.6797, 1.77", "-18.0343, -9.86103, 1.99363, 1.47", "-18.9102, -10.1583, 2.24144, 1.47", "-20.0142, -10.7637, 2.52039, 1.33", "-20.516, -11.1341, 2.61384, 1.99", "-21.3689, -11.8914, 2.70746, 1.99", "-22.3514, -12.8754, 2.72001, 1.77", "-23.4381, -14.0777, 2.62438, 1.92", "-24.4431, -15.2204, 2.41935, 1.69", "-25.061, -15.8838, 2.22063, 1.69", "-25.8352, -16.6309, 1.92789, 1.84", "-26.5415, -17.2558, 1.65817, 1.84", "-27.4557, -18.0363, 1.32327, 1.69", "-28.4604, -18.9057, 1.00982, 1.55", "-29.475, -19.8467, 0.773036, 1.4", "-30.3063, -20.6213, 0.604292, 1.25", "-31.1761, -21.4685, 0.447605, 1.33", "-31.9998, -22.3492, 0.35646, 1.47", "-32.7709, -23.2836, 0.393425, 1.62", "-33.3162, -24.1576, 0.585481, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.29066, -4.9037, 3.61", "0.448551, -8.29066, -4.9037, 3.61", "0.61792, -9.42833, -4.84787, 2.95", "0.860669, -11.1938, -4.76386, 2.8", "1.00064, -12.3769, -4.68382, 2.8", "1.12255, -13.6999, -4.58296, 3.02", "1.18088, -14.578, -4.51543, 3.02", "1.20528, -15.4394, -4.44566, 3.02", "1.18176, -16.7372, -4.33864, 3.02", "1.08635, -18.1101, -4.22095, 2.36", "0.830326, -20.5117, -4.09233, 2.36", "0.645496, -21.857, -4.07978, 2.43", "0.432868, -23.1592, -4.11183, 2.43", "0.154946, -24.6855, -4.20279, 2.43", "-0.277173, -26.7929, -4.38844, 2.28", "-0.742808, -28.9551, -4.63129, 2.14", "-1.39289, -31.8195, -5.01126, 2.06", "-1.84406, -33.8075, -5.30805, 2.43", "-2.12905, -35.0735, -5.52345, 2.58", "-2.43463, -36.4076, -5.78113, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.21333, -7.5337, 1.62", "-0.472643, 7.9956, -7.5963, 1.62", "-0.616919, 9.14648, -7.63271, 1.92", "-0.8345, 10.6839, -7.69565, 1.33", "-1.10891, 12.3387, -7.78838, 1.69", "-1.33398, 13.563, -7.83557, 2.21", "-1.5269, 14.5866, -7.82745, 2.21", "-1.75918, 15.7387, -7.77108, 1.99", "-1.97717, 16.7185, -7.68552, 1.77", "-2.23602, 17.8085, -7.55971, 1.99", "-2.51676, 18.9621, -7.42147, 1.99", "-2.99663, 20.9887, -7.21991, 1.11", "-3.29284, 22.2557, -7.13345, 1.11", "-3.61027, 23.5304, -7.09912, 1.25", "-3.9129, 24.6008, -7.09322, 1.4", "-4.30904, 25.7707, -7.16165, 0.81", "-4.77558, 26.8788, -7.33657, 0.74", "-5.14633, 27.6034, -7.52278, 0.74", "-5.60334, 28.3894, -7.77467, 0.74", "-6.13444, 29.2454, -8.09495, 0.96", "-6.63516, 30.0512, -8.41843, 0.96", "-7.15757, 30.8602, -8.75113, 1.55", "-7.74765, 31.7673, -9.13764, 2.06", "-8.24688, 32.5932, -9.49811, 2.43", "-8.81943, 33.7055, -9.98745, 2.36", "-9.46768, 35.2206, -10.6369, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 7.89733, 0.346303, 2.5", "-2.4071, 8.07694, 0.347277, 2.5", "-3.76519, 10.5932, 0.294796, 1.77", "-4.71312, 12.2936, 0.304496, 1.55", "-5.82492, 14.229, 0.395037, 1.55", "-6.67207, 15.7058, 0.52134, 1.33", "-7.96462, 17.9964, 0.790097, 1.33", "-8.77291, 19.3958, 0.996883, 1.55", "-9.99244, 21.4689, 1.34832, 1.55", "-11.259, 23.7234, 1.73814, 1.62", "-12.2702, 25.7327, 2.06554, 1.4", "-13.213, 27.9442, 2.38529, 1.4", "-13.7493, 29.3026, 2.58389, 1.4", "-14.5833, 31.4873, 2.88576, 1.4", "-15.375, 33.6698, 3.09647, 1.4", "-16.2653, 36.3673, 3.23934, 1.77", "-17.0147, 38.7875, 3.26605, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 3.96433, 1.3463, 2.58", "6.89086, 4.02209, 1.35196, 2.58", "7.67625, 4.76853, 1.43398, 2.58", "8.56737, 5.62427, 1.55459, 1.84", "9.22705, 6.24513, 1.66161, 2.06", "10.0788, 7.04452, 1.82163, 2.06", "10.6416, 7.5605, 1.96378, 2.58", "11.2663, 8.12933, 2.15762, 2.58", "11.6793, 8.51157, 2.31425, 2.58", "12.4122, 9.15943, 2.62735, 2.58", "12.9277, 9.58284, 2.85986, 2.43", "14.0078, 10.4184, 3.38902, 2.21", "14.7957, 10.9927, 3.79101, 1.99", "15.428, 11.4266, 4.09409, 1.99", "16.2481, 11.9066, 4.44828, 1.69", "16.9335, 12.1813, 4.70827, 1.69", "18.1473, 12.3393, 5.10726, 2.06", "18.9092, 12.2128, 5.31472, 2.06", "20.7093, 11.4675, 5.79634, 1.69", "21.9474, 10.8224, 6.10924, 1.92", "23.8831, 9.57249, 6.56386, 1.92", "25.7263, 8.134, 6.95683, 2.06", "26.6712, 7.23767, 7.13462, 2.28", "27.38, 6.42104, 7.27753, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.835316", "4.36343, 23.5449, 1.13455, 0.835316", "6.95552, 38.3192, 1.13455, 0.835316" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-28.2929, -39.3982, -65.7603, 0.96", "-27.0325, -42.6572, -70.2068, 0.96", "-26.8279, -43.3511, -71.0343, 0.96", "-26.6041, -44.2647, -72.0046, 0.96", "-26.3248, -45.5278, -73.2412, 1.55", "-26.1347, -46.5714, -74.1758, 0.22", "-25.9793, -47.7501, -75.0857, 0.22", "-25.9777, -48.4654, -75.427, 1.11", "-25.9991, -49.1277, -75.6952, 1.4", "-26.0081, -50.0255, -75.9794, 1.4", "-25.9842, -51.9626, -76.4608, 0.22", "-25.8628, -53.9679, -76.8799, 0.22", "-25.7933, -54.6333, -77.0021, 0.74", "-25.7489, -54.9905, -77.0551, 0.74", "-25.4976, -56.8942, -77.2791, 0.15", "-25.4545, -57.1895, -77.3008, 0.37", "-25.1417, -58.8145, -77.3552, 0.22", "-24.922, -59.732, -77.4019, 0.22", "-24.7484, -60.4633, -77.4367, 0.74", "-24.6082, -61.197, -77.4612, 0.88", "-24.5937, -61.4371, -77.4668, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-28.2929, -39.3982, -65.7603, 2.87", "-29.0328, -39.6118, -65.8705, 2.87", "-31.3713, -40.4722, -66.3188, 0.22", "-33.4911, -41.5159, -66.7801, 0.22", "-34.5162, -42.0772, -67.0085, 1.69", "-34.8386, -42.2664, -67.0809, 2.21", "-35.3631, -42.5885, -67.1985, 2.21", "-37.2924, -43.9497, -67.6188, 0.22", "-38.9913, -45.408, -68.0347, 0.22", "-39.5181, -45.9015, -68.1744, 1.25", "-39.9484, -46.3093, -68.2897, 1.25", "-40.5195, -46.8441, -68.4506, 1.25", "-41.6837, -47.8624, -68.7771, 0.15", "-42.3439, -48.4151, -68.9558, 0.15", "-42.8636, -48.803, -69.1026, 0.96", "-43.4535, -49.1995, -69.2885, 1.18", "-43.724, -49.3572, -69.3775, 1.18", "-45.4681, -50.2245, -70.05, 0.22", "-45.9313, -50.3902, -70.2499, 0.52", "-46.3523, -50.5174, -70.436, 0.52", "-47.4352, -50.8107, -70.9078, 0.22", "-48.1074, -50.9858, -71.2081, 1.25", "-49.0951, -51.2784, -71.6357, 1.4", "-51.002, -52.0144, -72.5161, 0.22", "-52.3054, -52.6784, -73.1279, 0.22", "-52.7997, -53.0038, -73.3664, 0.74", "-53.4334, -53.5432, -73.6774, 0.88", "-54.3142, -54.6473, -74.2675, 0.22", "-55.0137, -56.089, -74.8701, 0.22", "-55.2896, -57.0384, -75.2091, 1.99", "-55.3986, -57.6225, -75.3841, 2.36", "-55.4813, -58.1967, -75.5541, 2.36", "-55.7984, -61.4237, -76.4943, 0.15", "-55.8993, -63.4308, -77.1155, 0.15", "-55.9111, -63.9536, -77.2561, 0.44", "-55.9022, -64.9613, -77.5008, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.3162, -24.1576, 0.585481, 0.96", "-33.883, -24.3626, 0.373687, 0.96", "-34.4228, -24.5759, 0.168357, 1.25", "-35.2006, -24.8829, -0.124083, 1.25", "-36.556, -25.3753, -0.595863, 1.18", "-37.4787, -25.6714, -0.886432, 1.11", "-38.1894, -25.8832, -1.10288, 0.88", "-39.1254, -26.1676, -1.40241, 0.96", "-39.6612, -26.3304, -1.57864, 0.96", "-40.4477, -26.575, -1.84223, 0.96", "-41.223, -26.819, -2.0582, 0.96", "-41.8823, -27.0199, -2.20345, 1.18", "-42.6931, -27.2551, -2.34655, 1.03", "-43.0945, -27.3595, -2.37628, 1.03", "-43.9341, -27.5478, -2.34541, 1.18", "-44.4442, -27.6396, -2.25079, 1.18", "-45.593, -27.7771, -1.81119, 0.96", "-46.0146, -27.8026, -1.60813, 1.11", "-46.8352, -27.8353, -1.16948, 1.11", "-47.4929, -27.8779, -0.809799, 1.11", "-48.2666, -27.9572, -0.386647, 1.11", "-49.2994, -28.1477, 0.166786, 1.55", "-50.0385, -28.3653, 0.53285, 1.03", "-50.9224, -28.7328, 0.957633, 0.88", "-51.6759, -29.1527, 1.29447, 0.74", "-52.1072, -29.4649, 1.47329, 0.74", "-52.6633, -29.9748, 1.6594, 0.74", "-53.2145, -30.5929, 1.78945, 0.66", "-53.7071, -31.2326, 1.87997, 0.88", "-54.0282, -31.6997, 1.91684, 1.03", "-54.3624, -32.2499, 1.94128, 1.03", "-54.7894, -32.9588, 1.9607, 0.88", "-55.3226, -33.7918, 1.97206, 0.88", "-55.6253, -34.2093, 1.97075, 0.88", "-56.0758, -34.7219, 1.96986, 0.88", "-56.9566, -35.5426, 1.97325, 0.88", "-57.4734, -35.9141, 1.97646, 0.88", "-58.2161, -36.3036, 1.98298, 0.88", "-58.7176, -36.4822, 1.985, 0.96", "-59.3088, -36.6376, 1.97031, 0.96", "-59.8468, -36.7383, 1.95874, 0.96", "-60.4493, -36.8327, 1.95133, 0.52", "-60.8601, -36.9648, 1.95497, 0.52", "-61.168, -37.2024, 1.98704, 0.52", "-61.465, -37.648, 2.09376, 0.81", "-61.6912, -38.1197, 2.23533, 0.96", "-61.8527, -38.665, 2.40788, 0.96", "-62.0256, -39.6421, 2.72211, 0.81", "-62.0794, -40.1204, 2.88124, 0.81", "-62.1206, -40.7261, 3.11017, 1.11", "-62.1668, -41.0689, 3.2681, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-33.3162, -24.1576, 0.585481, 1.33", "-33.8989, -24.4101, 1.17727, 1.33", "-34.4725, -24.6639, 1.67607, 1.18", "-35.5549, -25.1096, 2.57674, 0.88", "-36.0824, -25.2953, 2.9827, 0.74", "-36.8647, -25.5189, 3.52494, 0.74", "-37.6603, -25.6965, 4.07943, 0.74", "-38.264, -25.8105, 4.47594, 0.59", "-38.9744, -25.9042, 4.94168, 0.59", "-39.5331, -25.9417, 5.31645, 0.52", "-40.0897, -25.9208, 5.75138, 0.52", "-41.1251, -25.7574, 6.68395, 0.74", "-41.7739, -25.6001, 7.33722, 0.59", "-42.3692, -25.4495, 7.96001, 0.44", "-43.0092, -25.3292, 8.64523, 0.37", "-43.5213, -25.2932, 9.19163, 0.66", "-43.9893, -25.33, 9.60227, 0.66", "-44.3048, -25.3937, 9.79144, 0.66", "-44.7258, -25.5002, 10.0128, 0.44", "-45.2177, -25.6535, 10.2402, 0.44", "-46.0982, -25.9283, 10.6222, 0.44", "-47.3134, -26.3364, 11.1493, 0.74", "-48.0343, -26.6039, 11.4548, 0.74", "-49.0317, -26.9616, 11.8649, 0.52", "-49.9657, -27.2817, 12.2393, 0.59", "-50.7693, -27.5489, 12.5475, 0.44", "-51.8866, -27.9651, 12.9683, 0.37", "-52.6904, -28.3366, 13.264, 0.37", "-53.5689, -28.8589, 13.5448, 0.29", "-53.9879, -29.1906, 13.6535, 0.29", "-54.4769, -29.6943, 13.8031, 0.29", "-54.8899, -30.177, 13.9575, 0.37", "-55.351, -30.7486, 14.1749, 0.37", "-55.813, -31.3096, 14.4414, 0.37", "-56.304, -31.9719, 14.7644, 0.66", "-56.7914, -32.6196, 15.1057, 0.81", "-57.1672, -33.0716, 15.3794, 0.81", "-57.721, -33.6186, 15.7715, 0.22", "-58.4046, -34.1879, 16.2531, 0.22", "-65.2312, -35.8381, 20.4035, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.43463, -36.4076, -5.78113, 1.55", "-2.18836, -37.2487, -5.67082, 1.55", "-1.94471, -38.1052, -5.55877, 1.55", "-1.73899, -38.8577, -5.46557, 1.55", "-1.51567, -39.7112, -5.35802, 1.69", "-1.35891, -40.3658, -5.27542, 1.69", "-1.25766, -40.855, -5.21731, 1.69", "-1.1283, -41.6662, -5.12944, 1.55", "-0.999354, -42.7271, -5.02705, 1.47", "-0.942589, -43.6101, -4.94632, 1.33", "-0.947376, -44.4553, -4.8764, 1.33", "-1.03475, -45.5761, -4.79912, 1.33", "-1.16717, -46.3967, -4.74833, 1.11", "-1.29909, -46.9124, -4.72061, 1.11", "-1.67537, -48.0342, -4.668, 1.25", "-1.97179, -48.7781, -4.63969, 1.25", "-2.2675, -49.4468, -4.61936, 1.25", "-2.701, -50.3753, -4.60446, 1.4", "-3.13973, -51.2911, -4.60404, 1.4", "-3.48236, -52.0348, -4.61907, 1.55", "-3.6979, -52.5844, -4.64697, 1.55", "-3.95582, -53.4005, -4.70204, 1.33", "-4.2024, -54.4237, -4.79563, 0.96", "-4.27052, -54.8308, -4.84503, 0.81", "-4.32421, -55.2898, -4.89937, 0.81", "-4.40877, -56.3517, -5.00976, 0.96", "-4.44424, -57.0878, -5.06872, 1.33", "-4.47388, -57.9003, -5.11576, 1.69", "-4.50035, -58.3922, -5.13373, 1.84", "-4.54666, -58.9491, -5.14081, 1.99", "-4.63917, -59.6065, -5.1348, 2.06", "-4.73216, -60.168, -5.11765, 2.06", "-4.83265, -60.7388, -5.07726, 1.84", "-4.93915, -61.3475, -5.00421, 1.62", "-5.05909, -62.0788, -4.88769, 1.18", "-5.14182, -62.6647, -4.78267, 0.88", "-5.24894, -63.4655, -4.62345, 0.88", "-5.32307, -64.0162, -4.49279, 1.03", "-5.40525, -64.5822, -4.34131, 1.11", "-5.47519, -64.9848, -4.23048, 1.11", "-5.70134, -65.9874, -3.96556, 1.03", "-5.88123, -66.6406, -3.80178, 1.18", "-6.03926, -67.1736, -3.68056, 1.25", "-6.28578, -67.9848, -3.52025, 1.18", "-6.51708, -68.7205, -3.40132, 1.03", "-6.76213, -69.4547, -3.3106, 0.96", "-7.04189, -70.2497, -3.24789, 0.88", "-7.24044, -70.7806, -3.23827, 0.88", "-7.56391, -71.5803, -3.30503, 1.25", "-7.90789, -72.3779, -3.43673, 1.55", "-8.16935, -72.9884, -3.56676, 1.62", "-8.36263, -73.4779, -3.67858, 1.62", "-8.58831, -74.1198, -3.82212, 1.4", "-8.8722, -75.0302, -4.00302, 1.11", "-9.11286, -75.9701, -4.15513, 1.11", "-9.32894, -77.0094, -4.26741, 1.11", "-9.52645, -78.1188, -4.3502, 1.11", "-9.66032, -78.9305, -4.3903, 1.4", "-9.79032, -79.7717, -4.41581, 1.4", "-9.98766, -81.0834, -4.43283, 1.25", "-10.1888, -82.4266, -4.45439, 1.25", "-10.3284, -83.3101, -4.4724, 1.62", "-10.4604, -84.0836, -4.49941, 1.77", "-10.6337, -85.1191, -4.5526, 1.33", "-10.7844, -86.0576, -4.60582, 0.88", "-10.9268, -87.1045, -4.67099, 1.25", "-10.9856, -87.6238, -4.70809, 1.84", "-11.0326, -88.2059, -4.75456, 2.28", "-11.062, -88.8097, -4.81146, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.43463, -36.4076, -5.78113, 2.14", "-2.32239, -37.0048, -5.99418, 2.14", "-2.10453, -37.9498, -6.29173, 2.14", "-1.732, -39.5658, -6.80054, 1.69", "-1.41984, -40.9198, -7.22688, 1.84", "-1.11659, -42.2352, -7.64106, 1.99", "-0.871265, -43.2994, -7.97612, 2.36", "-0.666919, -44.0803, -8.19188, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.46768, 35.2206, -10.6369, 1.25", "-9.11107, 36.2495, -10.8808, 1.25", "-8.81052, 36.9404, -11.0302, 1.03", "-8.41051, 37.7617, -11.1929, 0.81", "-7.96224, 38.6818, -11.3576, 0.81", "-7.56879, 39.601, -11.5063, 1.11", "-7.32146, 40.269, -11.604, 1.11", "-7.05724, 41.0516, -11.6762, 0.96", "-6.74659, 42.1005, -11.74, 0.66", "-6.55895, 42.8268, -11.7793, 0.52", "-6.34131, 43.781, -11.8205, 0.52", "-6.20535, 44.4907, -11.8476, 0.52", "-5.91152, 46.0086, -11.9312, 1.18", "-5.7557, 46.7853, -11.9827, 1.62", "-5.63477, 47.3424, -12.0264, 1.69", "-5.40292, 48.2645, -12.1274, 1.33", "-5.25587, 48.7202, -12.1967, 0.74", "-4.98495, 49.4184, -12.3322, 0.59", "-4.52288, 50.5218, -12.6131, 0.66", "-4.28379, 51.1185, -12.7814, 0.44", "-4.13054, 51.5648, -12.9077, 0.44", "-3.89041, 52.3841, -13.1417, 0.37", "-3.68495, 53.0738, -13.3321, 0.37", "-3.51319, 53.575, -13.4556, 0.37", "-3.1763, 54.363, -13.6669, 0.37", "-2.84774, 55.0646, -13.8699, 0.44", "-2.55894, 55.748, -14.0935, 0.44", "-2.17077, 56.8549, -14.4929, 0.81", "-1.92653, 57.6377, -14.7861, 1.03", "-1.69621, 58.3446, -15.0624, 1.03", "-1.48577, 58.9878, -15.3405, 0.81", "-1.19985, 59.9269, -15.7903, 0.29", "-1.07761, 60.3942, -16.0255, 0.29", "-0.842162, 61.5252, -16.588, 1.77", "-0.771054, 61.902, -16.7708, 2.36", "-0.665883, 62.424, -17.0022, 2.36", "-0.442713, 63.4174, -17.4118, 2.28", "-0.135966, 64.6093, -17.8568, 0.66", "0.0392924, 65.2612, -18.1002, 0.88", "0.219659, 65.9399, -18.3572, 0.88", "0.422854, 66.7018, -18.6267, 0.37", "0.561379, 67.2163, -18.8007, 0.37", "0.839012, 68.2891, -19.1387, 0.37", "1.03716, 69.0985, -19.3812, 1.11", "1.18243, 69.7453, -19.5669, 1.47", "1.27248, 70.2082, -19.6912, 1.69", "1.39669, 70.9911, -19.8844, 1.33", "1.50294, 71.8516, -20.0744, 0.44", "1.54843, 72.7678, -20.2501, 0.29", "1.55542, 73.4873, -20.3833, 0.52", "1.54525, 74.0252, -20.4807, 0.52", "1.50747, 74.9286, -20.6656, 0.29", "1.48342, 75.8585, -20.8609, 0.29", "1.47676, 77.4975, -21.2337, 1.18", "1.48398, 78.1137, -21.3741, 1.62", "1.49159, 78.77, -21.5117, 1.84", "1.50395, 79.5988, -21.6698, 1.33", "1.53406, 81.9635, -22.0995, 0.22", "1.56077, 83.4774, -22.3592, 0.22", "1.58447, 84.8458, -22.5717, 0.22", "1.58979, 86.2922, -22.7674, 0.74", "1.58437, 87.0807, -22.8664, 1.03", "1.57497, 87.4525, -22.9082, 1.03", "1.48822, 88.6385, -23.0681, 0.15", "1.44494, 89.0934, -23.1516, 0.15", "1.39029, 89.6143, -23.2853, 0.44", "1.33932, 90.11, -23.4365, 0.66", "1.29327, 90.5667, -23.5773, 0.66", "1.20248, 91.8836, -23.9761, 1.55", "1.16587, 92.8519, -24.2564, 2.58", "1.15973, 93.6948, -24.4983, 2.58", "1.23634, 95.5659, -24.9974, 0.29", "1.36602, 96.816, -25.2713, 0.29", "1.65333, 98.6082, -25.5707, 0.29", "1.90246, 99.7338, -25.7004, 0.96", "2.05739, 100.311, -25.7377, 0.96", "2.65835, 102.192, -25.772, 0.22", "3.37418, 104.195, -25.7201, 0.22", "3.85605, 105.453, -25.6452, 1.77", "4.05568, 105.944, -25.6008, 2.36", "4.30428, 106.545, -25.541, 2.5", "5.10746, 108.485, -25.3333, 0.15", "5.50758, 109.462, -25.2358, 0.29", "5.77036, 110.116, -25.1838, 0.29", "6.10079, 110.952, -25.1614, 0.15", "6.42305, 111.808, -25.1929, 1.18", "6.62322, 112.339, -25.2409, 1.55", "6.84518, 112.928, -25.3178, 1.18", "7.00698, 113.353, -25.3865, 0.74", "7.46724, 114.673, -25.6095, 0.22", "7.79996, 115.703, -25.787, 0.22", "8.32916, 117.506, -26.0596, 0.22", "8.5921, 118.476, -26.1852, 0.81", "8.6889, 118.865, -26.2273, 0.81", "9.23729, 121.302, -26.4137, 0.22", "9.47725, 122.527, -26.4378, 0.22", "9.65413, 123.635, -26.4469, 1.25", "9.67962, 123.929, -26.4482, 1.69", "9.69123, 124.261, -26.4481, 1.69", "9.69051, 124.969, -26.4425, 1.33", "9.66154, 125.588, -26.4457, 0.59", "9.57725, 126.877, -26.4866, 0.22", "9.47681, 128.714, -26.6043, 0.22", "9.41587, 129.844, -26.6906, 1.03", "9.38872, 130.321, -26.7301, 1.03", "9.37644, 130.819, -26.7712, 1.03", "9.38719, 131.558, -26.8254, 0.52", "9.47777, 133.213, -26.9124, 0.22", "9.58559, 134.011, -26.9523, 0.59", "9.68714, 134.522, -26.9745, 0.59", "10.2426, 136.766, -27.0524, 0.22", "10.4541, 137.462, -27.0684, 0.66", "10.64, 137.959, -27.0784, 0.66", "11.1168, 139.113, -27.111, 0.15", "11.3935, 139.755, -27.139, 0.81", "11.5829, 140.196, -27.1663, 0.81", "11.8532, 140.847, -27.2238, 0.81", "12.3299, 142.089, -27.3557, 0.22", "12.7923, 143.35, -27.5229, 1.33", "12.9766, 143.88, -27.6035, 1.55", "13.0855, 144.189, -27.6524, 1.55", "13.2012, 144.516, -27.7095, 1.03", "13.7539, 146.008, -27.9943, 0.22", "14.283, 147.336, -28.2669, 0.22", "14.5868, 148.032, -28.428, 0.22", "14.9433, 148.856, -28.621, 1.25", "15.1588, 149.388, -28.7496, 1.77", "15.337, 149.87, -28.8709, 1.77", "15.4773, 150.276, -28.9828, 1.18", "15.6849, 150.92, -29.1682, 0.66", "16.3132, 152.882, -29.7797, 0.22", "16.739, 154.191, -30.23, 0.22", "17.0378, 155.085, -30.5356, 1.11", "17.2508, 155.659, -30.726, 1.4", "17.463, 156.169, -30.8934, 1.4", "17.7402, 156.759, -31.1055, 0.96", "18.5976, 158.429, -31.7555, 0.22", "19.5635, 160.164, -32.4376, 0.22", "20.3359, 161.494, -32.9507, 1.77", "20.6142, 161.963, -33.1238, 2.65", "21.0606, 162.696, -33.3806, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.46768, 35.2206, -10.6369, 0.66", "-11.262, 36.2461, -10.3864, 0.66", "-11.9787, 36.6223, -10.2813, 0.66", "-12.8193, 37.032, -10.1484, 0.66", "-13.783, 37.4592, -9.99493, 1.11", "-14.3841, 37.6967, -9.90149, 1.33", "-15.2918, 38.0438, -9.76249, 1.33", "-16.2792, 38.3907, -9.60741, 0.96", "-16.953, 38.6355, -9.47873, 0.88", "-17.7496, 38.9297, -9.29932, 0.88", "-18.6816, 39.2785, -9.03906, 0.37", "-19.1554, 39.4546, -8.88272, 0.37", "-19.9549, 39.7555, -8.58482, 0.81", "-20.639, 40.0249, -8.30751, 0.88", "-21.2688, 40.2804, -8.04122, 0.81", "-21.9299, 40.5552, -7.74969, 0.29", "-22.354, 40.7242, -7.56865, 0.29", "-23.1062, 40.9663, -7.28465, 0.74", "-23.676, 41.128, -7.09675, 0.74", "-24.0001, 41.2349, -6.98633, 0.74", "-24.364, 41.3898, -6.83329, 0.74", "-24.7999, 41.6024, -6.61898, 0.59", "-25.2154, 41.8047, -6.37959, 0.59", "-25.57, 41.9703, -6.13447, 0.37", "-26.5273, 42.3583, -5.44206, 0.37", "-27.2039, 42.5831, -4.94209, 0.37", "-27.5674, 42.6802, -4.67196, 0.22", "-28.1855, 42.8087, -4.22175, 0.22", "-28.527, 42.8545, -3.99564, 0.22", "-29.5522, 42.9613, -3.38182, 1.03", "-30.0702, 43.024, -3.11125, 1.4", "-30.3811, 43.0786, -2.95738, 1.4", "-31.1369, 43.26, -2.60108, 0.81", "-32.1107, 43.5351, -2.18075, 0.22", "-32.6397, 43.6911, -1.96473, 0.22", "-33.7144, 44.0205, -1.55606, 1.11", "-34.2674, 44.1952, -1.36188, 1.4", "-34.6626, 44.3203, -1.23187, 1.4", "-35.5915, 44.6097, -0.947337, 0.66", "-36.4689, 44.8706, -0.688996, 0.52", "-37.5376, 45.1552, -0.386918, 0.74", "-38.2346, 45.3346, -0.198775, 0.88", "-39.2256, 45.6006, 0.058598, 0.66", "-39.9297, 45.7965, 0.235628, 0.66", "-40.5084, 45.9638, 0.373926, 0.66", "-41.5944, 46.299, 0.635937, 0.29", "-42.4563, 46.5855, 0.86702, 1.03", "-43.1803, 46.8407, 1.08688, 1.25", "-43.4041, 46.9332, 1.17435, 1.25", "-43.9632, 47.2104, 1.43864, 0.81", "-44.6163, 47.5745, 1.8026, 0.29", "-45.0255, 47.8273, 2.07169, 0.52", "-45.2934, 48.0087, 2.25964, 0.66", "-46.2681, 48.6957, 2.93854, 0.22", "-46.8243, 49.0911, 3.30498, 0.22", "-47.2882, 49.4149, 3.58162, 0.22", "-47.9277, 49.8526, 3.90003, 0.22", "-48.8032, 50.4456, 4.28336, 0.59", "-49.3118, 50.7889, 4.47732, 0.81", "-49.7961, 51.1252, 4.61438, 0.81", "-50.5449, 51.676, 4.786, 0.52", "-51.5594, 52.463, 4.9712, 1.03", "-52.1709, 52.9507, 5.06042, 1.18", "-52.6266, 53.3269, 5.11197, 1.25", "-53.6451, 54.1972, 5.20057, 0.29", "-54.569, 55.0049, 5.2611, 0.74", "-54.9173, 55.3119, 5.27705, 0.96", "-55.225, 55.5788, 5.28281, 0.96", "-56.2579, 56.4395, 5.28584, 0.22", "-56.6705, 56.7646, 5.28629, 0.22", "-57.237, 57.1834, 5.29618, 0.66", "-57.6267, 57.4577, 5.29554, 0.88", "-58.0903, 57.7696, 5.29677, 0.44", "-58.6942, 58.1684, 5.30508, 0.37", "-59.057, 58.4048, 5.31905, 0.44", "-59.5389, 58.7304, 5.33794, 0.44", "-59.8855, 58.9675, 5.35105, 0.44", "-60.5503, 59.4328, 5.38304, 0.22", "-60.9796, 59.7462, 5.41658, 0.22", "-61.4826, 60.1464, 5.46515, 0.29", "-61.7726, 60.3961, 5.50367, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.0147, 38.7875, 3.26605, 1.47", "-16.6573, 39.607, 2.95851, 1.47", "-16.3417, 40.5021, 2.6585, 0.81", "-16.1494, 41.1586, 2.45909, 0.81", "-15.9571, 42.0792, 2.21604, 0.81", "-15.7677, 43.2013, 1.94298, 0.81", "-15.5999, 44.441, 1.66327, 0.81", "-15.5137, 45.6795, 1.41666, 1.03", "-15.4753, 46.7947, 1.214, 1.03", "-15.4483, 48.5016, 0.911909, 1.18", "-15.4352, 49.5599, 0.732081, 1.18", "-15.5021, 51.3991, 0.446381, 1.18", "-15.5966, 52.7071, 0.255834, 1.4", "-15.6555, 53.6336, 0.114706, 1.4", "-15.7046, 54.2924, 0.0131895, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.0147, 38.7875, 3.26605, 0.96", "-19.2204, 39.6488, 2.82074, 0.96", "-20.0091, 39.9797, 2.67941, 0.96", "-21.1023, 40.448, 2.48406, 0.96", "-22.2412, 40.9531, 2.26851, 0.81", "-23.2215, 41.4057, 2.0837, 0.81", "-24.5717, 42.0494, 1.84267, 1.03", "-25.4845, 42.5253, 1.67898, 1.03", "-26.3304, 43.052, 1.52247, 1.03", "-27.3792, 43.8136, 1.32157, 0.81", "-28.1459, 44.3978, 1.17466, 0.81", "-28.9856, 45.0627, 1.0239, 0.81", "-29.9727, 45.8975, 0.842141, 0.52", "-30.8776, 46.7513, 0.680187, 0.52", "-31.3827, 47.2777, 0.606126, 0.52", "-32.1012, 48.092, 0.51844, 0.52", "-32.9907, 49.1463, 0.418232, 0.52", "-33.4556, 49.7254, 0.373511, 0.52", "-33.9224, 50.3293, 0.346525, 0.52", "-34.4651, 51.0534, 0.335783, 0.66", "-34.9637, 51.7753, 0.33813, 0.88", "-35.4445, 52.5533, 0.345957, 0.88", "-35.9779, 53.4696, 0.350579, 0.59", "-36.5207, 54.3777, 0.345818, 0.88", "-36.9145, 55.0304, 0.334093, 0.88", "-37.2379, 55.6133, 0.313122, 0.96", "-37.5252, 56.1462, 0.281979, 0.96", "-37.7876, 56.6105, 0.245815, 0.96", "-38.2637, 57.3652, 0.173911, 0.74", "-39.0279, 58.4697, 0.0497263, 1.25", "-39.5625, 59.2021, -0.0412, 1.25", "-40.1724, 60.0183, -0.144646, 0.29", "-40.5766, 60.5623, -0.207068, 0.29", "-40.9826, 61.1155, -0.258958, 0.66", "-41.3451, 61.6176, -0.290563, 0.81", "-41.6443, 62.0455, -0.302188, 0.81", "-42.1321, 62.8121, -0.292813, 0.37", "-42.594, 63.6629, -0.316552, 0.37", "-42.8652, 64.2193, -0.357105, 1.03", "-43.0991, 64.7107, -0.409809, 1.25", "-43.4055, 65.3094, -0.490479, 1.25", "-43.6769, 65.7812, -0.568879, 0.81", "-44.2712, 66.7116, -0.740875, 0.59", "-44.6298, 67.2403, -0.842794, 0.44", "-45.1256, 67.9892, -0.961021, 0.88", "-45.5012, 68.5693, -1.02912, 0.88", "-46.1325, 69.5918, -1.09101, 0.59", "-46.535, 70.276, -1.11676, 0.59", "-47.149, 71.3913, -1.12571, 0.44", "-47.8131, 72.6806, -1.12839, 1.03", "-48.3353, 73.7821, -1.11093, 1.55", "-48.6221, 74.4701, -1.08279, 1.62", "-48.9985, 75.4821, -1.02364, 1.11", "-49.3753, 76.5968, -0.946979, 0.59", "-49.6146, 77.3701, -0.877269, 0.59", "-49.9847, 78.6661, -0.737615, 0.59", "-50.3483, 79.9596, -0.578059, 0.52", "-50.588, 80.8073, -0.453005, 0.52", "-50.8889, 81.8668, -0.255169, 0.52", "-51.2143, 82.9724, -0.0375126, 0.52", "-51.6009, 84.1805, 0.196991, 0.37", "-52.2004, 85.7804, 0.504307, 1.55", "-52.4365, 86.3046, 0.60254, 1.92", "-52.6893, 86.7781, 0.687154, 1.92", "-52.9368, 87.1784, 0.748035, 1.92", "-53.4857, 87.9284, 0.844128, 0.88", "-54.2391, 88.8717, 0.941206, 0.44", "-54.8144, 89.5672, 1.00112, 0.44", "-55.4361, 90.3189, 1.04852, 0.44", "-56.3007, 91.3899, 1.10751, 0.37", "-56.7611, 91.9733, 1.13684, 0.37", "-57.708, 93.2269, 1.19456, 0.74", "-58.083, 93.7438, 1.22277, 0.74", "-58.5451, 94.4098, 1.25873, 0.52", "-59.1603, 95.3297, 1.28727, 1.25", "-59.5927, 95.9732, 1.28047, 1.47", "-59.8845, 96.4087, 1.2597, 1.47", "-60.2945, 96.9408, 1.2012, 0.81", "-60.8607, 97.5996, 1.09717, 0.59", "-61.4384, 98.1985, 0.960016, 0.88", "-61.9317, 98.6759, 0.826229, 1.18", "-62.2412, 98.968, 0.735445, 1.18", "-62.9962, 99.7158, 0.532948, 0.96", "-63.7895, 100.576, 0.357885, 0.52", "-64.2344, 101.124, 0.309476, 0.37", "-64.8517, 101.991, 0.32443, 0.37", "-65.4206, 102.904, 0.405051, 0.37", "-65.9242, 103.829, 0.530894, 0.37", "-66.2555, 104.553, 0.661336, 0.81", "-66.7123, 105.724, 0.88934, 1.84", "-66.893, 106.197, 0.981803, 1.92", "-67.0337, 106.538, 1.04074, 1.92", "-67.2924, 107.168, 1.12748, 1.62", "-67.6587, 108.056, 1.19468, 0.88", "-68.0349, 109.01, 1.22885, 0.29", "-68.6177, 110.493, 1.24819, 0.29", "-69.0614, 111.559, 1.26396, 0.29", "-69.3531, 112.179, 1.28557, 0.29", "-69.5094, 112.467, 1.30196, 0.29", "-69.9156, 113.096, 1.35378, 0.66", "-70.4384, 113.783, 1.42803, 0.81", "-70.8204, 114.235, 1.48449, 0.81", "-71.5537, 115.088, 1.58931, 0.37", "-72.1325, 115.742, 1.67153, 0.37", "-72.6802, 116.369, 1.7489, 0.81", "-73.0651, 116.815, 1.80681, 0.81", "-73.6084, 117.459, 1.89638, 0.37", "-74.1473, 118.058, 1.99062, 0.37", "-74.6986, 118.615, 2.09426, 0.88", "-75.3768, 119.267, 2.2256, 1.47", "-75.888, 119.755, 2.32128, 1.69", "-76.3031, 120.154, 2.39358, 1.69", "-77.4364, 121.219, 2.58246, 0.37", "-77.8253, 121.59, 2.64506, 0.37", "-78.5527, 122.332, 2.74944, 0.37", "-79.3876, 123.253, 2.85421, 0.81", "-79.9236, 123.929, 2.9096, 1.33", "-80.2464, 124.38, 2.93377, 1.33", "-80.6781, 125.015, 2.95681, 0.81", "-81.5538, 126.258, 2.98957, 0.52", "-82.2885, 127.216, 3.00894, 0.52", "-83.12, 128.275, 3.02081, 0.52", "-83.5801, 128.859, 3.02285, 0.52", "-84.1725, 129.614, 3.0191, 0.52", "-84.8386, 130.461, 3.0056, 0.52", "-85.9762, 131.884, 2.97196, 0.52", "-86.3889, 132.398, 2.95855, 0.52", "-87.4151, 133.655, 2.93051, 1.25", "-87.7047, 134.011, 2.92488, 1.47", "-88.086, 134.474, 2.91264, 1.47", "-88.6481, 135.114, 2.8903, 0.88", "-89.336, 135.82, 2.86392, 0.29", "-89.6232, 136.081, 2.85728, 0.29", "-90.219, 136.575, 2.85459, 0.44", "-90.6916, 136.952, 2.86392, 0.44", "-91.1358, 137.298, 2.8845, 0.44", "-91.3974, 137.509, 2.88634, 0.44", "-91.7651, 137.827, 2.90598, 0.29", "-92.2301, 138.359, 2.95896, 0.29", "-92.3867, 138.564, 2.99198, 0.44", "-92.5757, 138.825, 3.04537, 0.44", "-93.0733, 139.499, 3.20209, 0.37", "-93.7472, 140.374, 3.42543, 0.44", "-94.8592, 141.759, 3.70569, 2.28", "-95.3098, 142.308, 3.78838, 2.5", "-95.6587, 142.742, 3.82749, 2.5", "-96.2294, 143.453, 3.85382, 1.92", "-96.8053, 144.17, 3.82433, 0.81", "-97.563, 145.148, 3.65215, 0.52", "-97.881, 145.597, 3.54216, 0.52", "-98.5547, 146.637, 3.25759, 0.88", "-98.9285, 147.281, 3.07657, 0.88", "-99.3385, 148.063, 2.86294, 0.66", "-99.6493, 148.708, 2.6921, 0.44", "-100.065, 149.651, 2.47281, 0.29", "-100.513, 150.74, 2.206, 0.29", "-100.979, 151.984, 1.87293, 0.29", "-101.196, 152.602, 1.69539, 0.29", "-101.591, 153.741, 1.30701, 0.52", "-101.876, 154.519, 1.00129, 0.88", "-102.13, 155.153, 0.704217, 0.88", "-102.446, 155.843, 0.33976, 0.44", "-103.085, 156.925, -0.285572, 1.11", "-103.779, 157.851, -0.850576, 2.43", "-104.365, 158.468, -1.24305, 2.43", "-104.784, 158.821, -1.47365, 2.43", "-105.381, 159.232, -1.72145, 1.69", "-106.248, 159.746, -2.01372, 0.59", "-107.213, 160.231, -2.25136, 0.74", "-107.538, 160.379, -2.2987, 0.74", "-108.084, 160.615, -2.3653, 0.52", "-108.924, 160.982, -2.43805, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.38, 6.42104, 7.27753, 1.99", "29.0833, 6.55983, 7.29128, 1.99", "30.0822, 6.87568, 7.38456, 1.99", "30.7854, 7.35385, 7.50427, 1.69", "31.774, 8.02605, 7.67255, 1.69", "32.1904, 8.30917, 7.74343, 1.69", "32.8822, 8.77959, 7.8612, 1.69", "33.3255, 9.26409, 7.9251, 1.92", "33.9777, 10.2735, 8.12204, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "27.38, 6.42104, 7.27753, 0.74", "28.2447, 8.68176, 8.33346, 0.74", "28.5585, 9.66128, 8.77577, 0.74", "28.9795, 11.1997, 9.44718, 0.74", "29.2991, 12.5243, 10.0127, 0.44", "29.5375, 13.6429, 10.4961, 0.44", "29.8473, 15.2975, 11.2162, 0.66", "29.951, 16.0951, 11.5493, 0.88", "30.0775, 17.2428, 12.0645, 0.88", "30.1771, 18.2874, 12.5845, 1.03", "30.3412, 19.7736, 13.373, 0.96", "30.4784, 20.8231, 13.9506, 0.52", "30.6202, 21.6667, 14.423, 0.52", "30.7732, 22.7837, 15.0577, 0.88", "30.8988, 23.6928, 15.5794, 0.66", "31.0451, 24.7077, 16.1734, 0.88", "31.1743, 25.6115, 16.7106, 0.88", "31.3489, 26.9397, 17.5211, 0.29", "31.4593, 28.0117, 18.1719, 0.29", "31.5238, 28.7535, 18.6074, 0.29", "31.6323, 30.0151, 19.3581, 0.44", "31.7192, 30.7631, 19.8273, 0.74", "31.8647, 31.6636, 20.4009, 0.88", "31.9783, 32.2075, 20.7568, 1.11", "32.0826, 32.6396, 21.0355, 1.11", "32.2702, 33.6284, 21.6366, 0.29", "32.4733, 34.6211, 22.1786, 0.29", "32.7145, 35.5722, 22.6624, 0.29", "35.0496, 45.0519, 30.4185, 0.29", "38.9341, 54.7007, 37.3348, 0.29", "41.3521, 65.2683, 43.4013, 0.29", "42.558, 76.2763, 48.9544, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-62.1668, -41.0689, 3.2681, 0.44", "-64.8493, -42.2336, 4.46384, 0.44", "-66.2095, -42.9222, 5.04299, 0.29", "-67.6502, -43.7152, 5.59555, 0.29", "-68.4974, -44.1969, 5.90026, 0.29", "-70.3032, -45.2009, 6.50743, 0.37", "-71.1269, -45.6363, 6.79292, 0.37", "-72.3968, -46.2575, 7.12543, 0.29", "-73.609, -46.9436, 7.46005, 0.29", "-74.5336, -47.5433, 7.72286, 0.29", "-75.1757, -47.9818, 7.90171, 0.29", "-76.1776, -48.6453, 8.17608, 0.29", "-77.1685, -49.2137, 8.43581, 0.44", "-78.5358, -49.9105, 8.79788, 0.44", "-79.2566, -50.3054, 9.02191, 0.44", "-80.3015, -50.9643, 9.40157, 0.66", "-81.3363, -51.7649, 9.84766, 0.66", "-81.8607, -52.2999, 10.133, 0.52", "-82.7282, -53.601, 10.8407, 0.44", "-83.0436, -54.5193, 11.3332, 0.66", "-83.1883, -55.4816, 11.8445, 0.66", "-83.2554, -56.5948, 12.4287, 0.52", "-83.3322, -58.0722, 13.2169, 0.52", "-83.3559, -59.4208, 13.9176, 0.44", "-83.3417, -60.6037, 14.5215, 0.37", "-83.3873, -62.4411, 15.4596, 0.37", "-83.4975, -63.8891, 16.2302, 0.29", "-83.7403, -65.3543, 17.0954, 0.29", "-93.6733, -75.084, 19.7049, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-62.1668, -41.0689, 3.2681, 1.11", "-62.907, -41.3622, 3.39902, 1.11", "-63.4819, -41.6423, 3.49175, 1.11", "-64.6469, -42.2504, 3.68793, 0.88", "-65.5353, -42.6886, 3.83421, 0.88", "-66.8874, -43.3015, 4.04871, 0.88", "-68.2985, -43.8822, 4.25478, 0.88", "-69.0716, -44.196, 4.36522, 0.88", "-69.7901, -44.4809, 4.44793, 0.81", "-70.597, -44.79, 4.51803, 0.81", "-71.1804, -44.9907, 4.56254, 0.81", "-72.2178, -45.3112, 4.64029, 0.96", "-72.7592, -45.4957, 4.67782, 0.96", "-73.3109, -45.7417, 4.70659, 0.96", "-73.8315, -46.0593, 4.72078, 0.96", "-74.5085, -46.5581, 4.73489, 0.96", "-74.7336, -46.733, 4.7348, 0.96", "-75.4222, -47.2571, 4.71362, 0.88", "-76.2863, -47.8368, 4.65625, 0.88", "-76.9051, -48.2357, 4.60555, 1.11", "-77.5295, -48.6399, 4.55158, 1.11", "-78.2504, -49.1261, 4.47611, 0.96", "-78.8603, -49.5733, 4.43303, 0.96", "-79.698, -50.2471, 4.40835, 0.88", "-80.6574, -51.0958, 4.37639, 0.88", "-81.3958, -51.7848, 4.31744, 0.96", "-81.9852, -52.3468, 4.24223, 0.96", "-82.825, -53.124, 4.10523, 0.88", "-83.2232, -53.4733, 4.01762, 0.74", "-84.1173, -54.2084, 3.77916, 0.96", "-84.9094, -54.7965, 3.55315, 1.11", "-85.5552, -55.2506, 3.37764, 1.25", "-86.1168, -55.6449, 3.24205, 1.25", "-87.0222, -56.2941, 3.04644, 1.03", "-88.2458, -57.2223, 2.85801, 0.88", "-89.1334, -57.9569, 2.77293, 0.88", "-90.0284, -58.7483, 2.70992, 0.88", "-90.7747, -59.4175, 2.65639, 0.88", "-91.4964, -60.0372, 2.60318, 1.33", "-92.0646, -60.4776, 2.56472, 1.33", "-92.7429, -60.9669, 2.51172, 1.18", "-93.2205, -61.2915, 2.46813, 0.96", "-94.0815, -61.8332, 2.39453, 0.96", "-94.8771, -62.2761, 2.3358, 0.96", "-95.9509, -62.788, 2.28591, 0.88", "-96.8846, -63.1341, 2.27821, 0.81", "-97.4119, -63.2756, 2.29949, 0.81", "-98.0278, -63.4154, 2.34091, 0.74", "-98.4838, -63.5336, 2.38117, 0.74", "-99.0649, -63.7333, 2.44298, 0.74", "-99.8947, -64.1269, 2.54373, 0.74", "-100.356, -64.4426, 2.60114, 1.11", "-101.054, -65.1219, 2.68476, 1.11", "-101.905, -66.1433, 2.77446, 0.88", "-102.455, -66.9048, 2.82987, 0.88", "-102.875, -67.5454, 2.86939, 0.88", "-103.452, -68.4397, 2.91781, 0.81", "-104.248, -69.5976, 2.9416, 0.81", "-104.657, -70.1418, 2.93511, 1.18", "-105.109, -70.7262, 2.90146, 1.33", "-105.6, -71.3184, 2.84517, 1.33", "-106.406, -72.2097, 2.73177, 0.88", "-107.208, -73.0249, 2.5892, 0.81", "-108.05, -73.8171, 2.43162, 0.81", "-109.052, -74.7151, 2.22579, 0.81", "-109.811, -75.3694, 2.04455, 0.81", "-110.526, -75.9695, 1.86517, 1.11", "-110.96, -76.3297, 1.75006, 1.25", "-111.479, -76.7585, 1.61303, 2.14", "-111.979, -77.1967, 1.46546, 2.5", "-112.663, -77.7885, 1.26245, 1.92", "-113.646, -78.7636, 0.931421, 1.11", "-114.064, -79.2372, 0.775509, 0.96", "-114.636, -79.9455, 0.55585, 1.4", "-115.366, -80.9027, 0.236717, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-11.062, -88.8097, -4.81146, 0.37", "-10.4764, -91.1238, -3.70914, 0.37", "-10.2976, -91.7228, -3.44525, 0.52", "-10.0648, -92.4575, -3.15087, 0.66", "-9.7999, -93.2946, -2.83619, 0.37", "-9.59824, -93.9136, -2.61119, 0.44", "-9.35913, -94.6342, -2.35993, 0.44", "-9.04649, -95.4954, -2.14545, 0.29", "-8.72425, -96.3046, -1.93465, 0.29", "-8.39765, -96.9864, -1.74565, 0.59", "-8.05462, -97.5754, -1.58423, 0.59", "-7.62309, -98.1932, -1.41678, 0.37", "-7.14585, -98.7781, -1.26461, 0.66", "-6.67104, -99.2748, -1.13584, 0.52", "-5.93456, -99.9425, -0.969901, 0.37", "-5.36339, -100.413, -0.863831, 0.37", "-4.49716, -101.109, -0.730753, 0.37", "-3.64883, -101.779, -0.623976, 1.03", "-3.02904, -102.269, -0.562936, 1.18", "-2.44156, -102.74, -0.524922, 0.81", "-1.97641, -103.12, -0.508636, 0.52", "-1.10611, -103.834, -0.479375, 0.52", "-0.281033, -104.539, -0.454897, 0.59", "0.439607, -105.202, -0.461629, 0.59", "1.02517, -105.796, -0.486621, 0.81", "1.49991, -106.312, -0.516582, 0.81", "2.02042, -106.91, -0.561213, 0.66", "2.39485, -107.365, -0.60346, 0.29", "3.24813, -108.471, -0.717528, 0.52", "3.97369, -109.434, -0.821343, 1.03", "4.23355, -109.786, -0.86392, 1.47", "4.71099, -110.402, -0.943293, 1.62", "5.35953, -111.152, -1.04642, 1.03", "5.99244, -111.801, -1.12343, 0.29", "6.60991, -112.368, -1.17295, 0.29", "7.33692, -112.979, -1.22819, 0.37", "8.09468, -113.608, -1.28486, 0.66", "8.48529, -113.93, -1.30889, 0.81", "9.10342, -114.422, -1.3299, 0.96", "9.57003, -114.788, -1.33417, 0.44", "9.94003, -115.075, -1.32566, 0.29", "10.6553, -115.618, -1.28091, 0.29", "11.1909, -116.07, -1.23909, 0.59", "11.6988, -116.556, -1.19192, 0.74", "12.1012, -116.985, -1.15034, 0.74", "12.6347, -117.624, -1.09364, 0.74", "13.0575, -118.181, -1.0541, 0.44", "13.6141, -118.979, -1.00859, 0.29", "13.9407, -119.479, -0.989135, 0.66", "14.3466, -120.115, -0.975822, 0.88", "14.7263, -120.703, -0.968628, 0.96", "15.2739, -121.527, -0.949834, 0.66", "15.8385, -122.372, -0.923837, 0.37", "16.5104, -123.325, -0.884427, 0.74", "16.8861, -123.841, -0.86005, 0.81", "17.319, -124.445, -0.827586, 0.37", "17.8939, -125.288, -0.779686, 0.37", "18.3844, -126.043, -0.736633, 0.37", "18.7899, -126.69, -0.702863, 0.37", "19.1137, -127.232, -0.679471, 0.52", "19.5013, -127.872, -0.660671, 0.52", "19.9037, -128.524, -0.653277, 0.37", "20.3176, -129.209, -0.661608, 0.37", "20.8045, -129.991, -0.671189, 0.81", "21.1029, -130.421, -0.674802, 0.88", "21.6188, -131.08, -0.678383, 0.59", "22.0701, -131.608, -0.677937, 0.37", "22.5355, -132.109, -0.675156, 0.37", "23.1335, -132.715, -0.664703, 0.44", "24.3674, -133.875, -0.630712, 0.44", "25.182, -134.556, -0.601693, 1.18", "25.7985, -135.033, -0.574221, 1.47", "26.4845, -135.534, -0.552138, 1.47", "27.4974, -136.265, -0.534832, 1.18", "28.2839, -136.866, -0.543038, 0.29", "28.7729, -137.273, -0.56516, 0.29", "29.1455, -137.604, -0.601517, 0.29", "29.8134, -138.251, -0.724218, 0.59", "30.4589, -138.949, -0.896805, 0.66", "30.8132, -139.384, -1.02751, 0.74", "31.1739, -139.89, -1.18293, 0.59", "31.566, -140.512, -1.36775, 0.44", "32.0313, -141.305, -1.60504, 0.29", "32.2986, -141.839, -1.75605, 0.37", "32.6822, -142.733, -2.0006, 0.52", "32.9311, -143.416, -2.15876, 1.03", "33.1681, -144.13, -2.32373, 1.55", "33.3724, -144.748, -2.45735, 1.55", "33.8781, -146.308, -2.78974, 0.44", "34.2294, -147.327, -3.01719, 0.37", "35.1491, -149.605, -3.58469, 0.29", "35.3896, -150.091, -3.71573, 0.29", "36.168, -151.347, -4.07083, 1.47", "36.4951, -151.759, -4.19744, 1.92", "37.1784, -152.423, -4.43898, 2.06", "38.243, -153.25, -4.83628, 0.81", "39.6653, -154.134, -5.42062, 0.29", "40.5706, -154.658, -5.81726, 0.29", "41.7572, -155.32, -6.32607, 0.44", "42.3372, -155.651, -6.55061, 0.52", "43.7027, -156.465, -7.0051, 0.29", "44.6953, -157.097, -7.25538, 0.88", "45.2621, -157.484, -7.32906, 0.74", "46.5582, -158.481, -7.2773, 0.29", "47.4426, -159.212, -7.09199, 0.29", "48.2895, -159.945, -6.81475, 0.59", "48.8272, -160.431, -6.58475, 0.66", "49.8366, -161.376, -6.10908, 0.29", "50.8421, -162.366, -5.63908, 0.29", "51.5001, -163.076, -5.37286, 0.29", "52.1009, -163.809, -5.1639, 1.03", "52.5381, -164.383, -5.04527, 1.47", "52.9364, -164.936, -4.97544, 1.18", "53.6712, -166.014, -4.91732, 0.22", "54.3308, -167.008, -4.89873, 0.22", "55.1773, -168.292, -4.91078, 0.22", "55.5407, -168.821, -4.91763, 0.52", "56.1713, -169.705, -4.93218, 0.29", "56.7723, -170.523, -4.95437, 0.29", "57.1583, -171.017, -4.97991, 0.88", "57.6854, -171.681, -4.9923, 0.88", "58.4575, -172.683, -4.98968, 0.29", "58.8052, -173.147, -4.96924, 0.29", "59.4047, -173.946, -4.87148, 0.96", "59.8176, -174.474, -4.74885, 1.4", "60.2491, -175.01, -4.57791, 1.77", "60.5174, -175.325, -4.45092, 1.77", "61.5706, -176.493, -3.92862, 0.22", "62.6495, -177.613, -3.35618, 0.22", "63.5058, -178.425, -2.91105, 0.88", "63.8962, -178.777, -2.7218, 1.33", "64.3031, -179.125, -2.55187, 1.33", "65.2409, -179.898, -2.19479, 0.22", "66.4166, -180.83, -1.8057, 0.22", "67.6794, -181.835, -1.46545, 0.22", "68.8363, -182.79, -1.22282, 0.22", "69.5125, -183.372, -1.10643, 0.74", "69.8779, -183.705, -1.05725, 0.88", "70.3067, -184.129, -1.02267, 0.52", "71.0602, -184.981, -1.01866, 0.22", "71.4357, -185.465, -1.0325, 0.88", "71.8419, -186.037, -1.0438, 1.33", "72.159, -186.511, -1.04456, 1.33", "72.8856, -187.669, -1.02642, 0.29", "73.7125, -189.086, -0.968019, 0.29", "74.103, -189.79, -0.91421, 0.44", "74.4356, -190.408, -0.844441, 0.59", "74.7337, -190.974, -0.761733, 0.59", "75.2039, -191.879, -0.601428, 0.22", "75.6755, -192.808, -0.420972, 0.22", "75.9693, -193.375, -0.309199, 0.74", "76.1487, -193.713, -0.248391, 0.88", "76.3941, -194.146, -0.185783, 0.88", "76.8883, -194.993, -0.0657416, 0.22", "77.7764, -196.43, 0.119057, 0.22", "78.1798, -197.061, 0.179994, 0.52", "78.445, -197.472, 0.205822, 0.66", "78.8636, -198.112, 0.232467, 0.44", "85.5599, -204.726, -0.803619, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.062, -88.8097, -4.81146, 2.28", "-11.6562, -89.8284, -4.69699, 2.28", "-12.2203, -90.6968, -4.5548, 1.62", "-12.9382, -91.7263, -4.3843, 1.33", "-13.6508, -92.6921, -4.24346, 0.88", "-13.9966, -93.1362, -4.18873, 0.88", "-14.5403, -93.7864, -4.1228, 1.03", "-15.6129, -94.9426, -4.0386, 1.03", "-16.5284, -95.8206, -4.00692, 0.96", "-17.2464, -96.4517, -4.02312, 0.88", "-17.8536, -96.99, -4.07667, 1.11", "-18.5101, -97.6439, -4.1907, 1.33", "-19.0182, -98.2729, -4.3346, 1.55", "-19.417, -98.921, -4.50911, 1.25", "-19.6999, -99.5816, -4.69256, 0.96", "-19.9359, -100.498, -4.93307, 0.88", "-20.101, -101.642, -5.22623, 0.88", "-20.1946, -102.87, -5.52362, 0.88", "-20.2387, -103.952, -5.77088, 1.03", "-20.2545, -104.965, -5.98556, 1.03", "-20.2637, -106.158, -6.21101, 1.03", "-20.2669, -107.246, -6.38959, 1.25", "-20.258, -108.501, -6.55264, 1.55", "-20.232, -109.462, -6.64089, 1.55", "-20.158, -110.789, -6.71806, 1.33", "-20.0761, -111.874, -6.75544, 1.33", "-20.0074, -112.843, -6.77652, 1.11", "-19.9357, -113.879, -6.75147, 1.11", "-19.8864, -115.017, -6.6894, 0.96", "-19.8838, -115.862, -6.62595, 0.96", "-19.9351, -117.083, -6.49633, 0.88", "-20.0581, -118.69, -6.29272, 0.88", "-20.206, -120.083, -6.08583, 1.03", "-20.3682, -121.321, -5.87848, 1.25", "-20.5494, -122.496, -5.66779, 1.33", "-20.7087, -123.421, -5.49483, 1.62", "-20.8666, -124.372, -5.30309, 2.5", "-20.9334, -124.889, -5.1974, 2.8", "-20.9967, -125.53, -5.09527, 3.02", "-21.0295, -126.132, -4.99056, 3.02", "-21.0466, -126.535, -4.9217, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.666919, -44.0803, -8.19188, 0.81", "-1.04133, -45.7122, -8.16054, 0.81", "-1.38661, -46.809, -8.09591, 0.66", "-1.85888, -48.0328, -8.00832, 0.66", "-2.40733, -49.3135, -7.9155, 0.52", "-2.63462, -49.8249, -7.87967, 0.52", "-3.23665, -51.1723, -7.79023, 0.74", "-3.84138, -52.543, -7.63643, 0.74", "-4.37566, -53.6759, -7.52197, 0.88", "-4.99779, -54.9027, -7.43033, 0.59", "-5.40637, -55.7017, -7.40455, 1.03", "-5.77963, -56.4866, -7.38673, 1.25", "-6.14615, -57.411, -7.36643, 1.03", "-6.53058, -58.607, -7.34251, 0.66", "-6.818, -59.5829, -7.32671, 0.66", "-7.11194, -60.59, -7.32668, 0.81", "-7.43472, -61.7692, -7.36111, 0.81", "-7.66245, -62.7566, -7.43331, 0.66", "-7.8373, -63.8036, -7.55622, 0.52", "-7.91036, -64.4256, -7.66812, 0.52", "-7.98904, -65.1878, -7.82696, 0.52", "-8.10593, -66.2736, -8.08286, 0.66", "-8.23009, -67.2591, -8.32692, 0.66", "-8.38524, -68.2998, -8.59639, 0.59", "-8.5853, -69.4401, -8.88303, 1.18", "-8.75143, -70.4336, -9.12185, 1.55", "-8.93343, -71.3834, -9.33119, 1.99", "-9.24259, -72.5306, -9.56239, 2.73", "-9.5387, -73.3769, -9.71747, 2.87", "-9.86442, -74.1646, -9.8661, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.666919, -44.0803, -8.19188, 0.52", "-0.330387, -45.4072, -9.6749, 0.52", "-0.2521, -45.7209, -9.98848, 0.52", "0.0349823, -46.7562, -11.0338, 0.52", "0.287457, -47.5218, -11.8287, 0.66", "0.470886, -47.9894, -12.3058, 0.66", "0.652441, -48.3832, -12.7084, 0.44", "0.859443, -48.9289, -13.2457, 0.88", "1.05072, -49.4428, -13.7079, 1.33", "1.27613, -49.9967, -14.1697, 1.47", "1.51114, -50.6371, -14.7769, 1.03", "1.71018, -51.6364, -15.8041, 0.44", "1.61407, -52.2509, -16.4985, 0.44", "1.24624, -52.9589, -17.4481, 0.37", "0.859078, -53.473, -18.243, 0.37", "0.311488, -54.1301, -19.4427, 0.37", "-0.0518703, -54.5574, -20.3645, 0.74", "-0.275047, -54.8454, -21.0728, 0.96", "-0.498354, -55.2434, -22.067, 0.96", "-0.80423, -55.9647, -23.826, 0.44", "-0.930024, -56.461, -24.958, 1.33", "-1.021, -57.144, -26.3945, 1.55", "-1.08294, -57.7741, -27.6492, 1.33", "-1.12825, -58.6368, -29.2277, 0.81", "-1.1226, -59.0077, -29.842, 1.25", "-1.07103, -59.4684, -30.5213, 0.88", "-1.00096, -59.9886, -31.1791, 0.37", "-0.926206, -60.4495, -31.6647, 0.81", "-0.845293, -60.9453, -32.1246, 1.03", "-0.778779, -61.2438, -32.3759, 1.03", "-0.497843, -62.278, -33.2228, 0.29", "-0.333474, -62.8033, -33.6334, 0.29", "-0.0754049, -63.4832, -34.1413, 1.84", "0.188891, -64.0541, -34.5829, 2.14", "0.949965, -65.4578, -35.7552, 0.29", "1.35783, -66.0987, -36.3254, 0.81", "1.78645, -66.6719, -36.8656, 0.81", "2.24085, -67.2032, -37.4137, 0.52", "2.86216, -67.8542, -38.1741, 1.25", "3.26607, -68.2476, -38.6836, 1.4", "4.30446, -69.2183, -39.9936, 0.22", "4.95311, -69.8092, -40.7719, 0.22", "5.69688, -70.4858, -41.6195, 1.4", "6.16758, -70.938, -42.1299, 2.21", "6.38724, -71.1636, -42.3481, 2.21", "7.83715, -72.7657, -43.6702, 0.22", "8.22882, -73.2187, -44.0135, 0.74", "8.57343, -73.6396, -44.3239, 1.03", "9.12722, -74.371, -44.8366, 0.59", "10.4161, -76.1809, -46.0516, 0.22", "12.038, -78.5353, -47.6346, 0.22", "12.5939, -79.3726, -48.222, 0.81", "13.0029, -79.9911, -48.6702, 0.96", "14.3167, -82.0064, -50.1723, 0.22", "15.1257, -83.2493, -51.1568, 0.22", "15.5605, -83.9354, -51.7415, 0.88", "15.9774, -84.5996, -52.3589, 0.88", "17.139, -86.4542, -54.1445, 0.15", "18.0338, -87.8079, -55.4311, 0.15", "18.5602, -88.5718, -56.1747, 0.15", "19.0409, -89.2681, -56.8413, 1.62", "19.3426, -89.7182, -57.2488, 1.92", "19.5881, -90.0801, -57.5497, 1.92", "21.2024, -92.4918, -59.4137, 0.22", "21.555, -93.0077, -59.7874, 0.66", "21.8251, -93.4091, -60.064, 0.88", "22.1018, -93.8184, -60.3495, 0.88", "22.953, -95.1542, -61.3861, 0.15", "23.5309, -96.2374, -62.3349, 0.15", "23.8024, -96.899, -62.9632, 0.81", "23.9461, -97.3737, -63.4122, 1.03", "24.0346, -97.8057, -63.8164, 1.03", "24.1765, -99.2644, -65.176, 0.22", "24.1467, -100.855, -66.6627, 0.22", "24.0975, -101.503, -67.3, 0.22", "23.9979, -102.441, -68.2686, 1.03", "23.947, -102.927, -68.7771, 1.62", "23.8891, -103.419, -69.3183, 1.62", "23.7942, -104.245, -70.292, 1.03", "23.6147, -105.936, -72.3908, 0.22", "23.5004, -106.725, -73.4731, 0.44", "23.4446, -107.157, -74.1026, 0.44", "23.3328, -108.11, -75.5053, 0.66", "23.2925, -108.589, -76.1966, 0.96", "23.2643, -109.143, -76.9837, 0.37", "23.2442, -110.917, -79.4281, 0.66", "23.2593, -111.28, -79.9216, 0.66", "23.3435, -112.601, -81.7363, 0.22", "23.4305, -113.296, -82.666, 0.22", "23.5381, -113.915, -83.4844, 0.81", "23.6858, -114.47, -84.2114, 0.96", "23.8429, -114.83, -84.5906, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "21.0606, 162.696, -33.3806, 0.37", "22.3841, 162.029, -31.0496, 0.37", "22.6542, 161.892, -30.574, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "21.0606, 162.696, -33.3806, 0.22", "21.9363, 164.543, -33.4876, 0.22", "22.3832, 165.546, -33.5915, 0.22", "22.7253, 166.34, -33.693, 0.74", "22.8457, 166.634, -33.7337, 0.74", "23.4035, 167.996, -33.9224, 0.15", "23.7644, 168.878, -34.0445, 0.15", "24.0283, 169.512, -34.2086, 0.66", "24.1608, 169.904, -34.2962, 0.88", "24.3006, 170.353, -34.3702, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.7046, 54.2924, 0.0131895, 0.66", "-16.3062, 56.404, -0.378542, 0.66", "-16.4562, 57.2093, -0.514395, 0.96", "-16.6215, 58.1572, -0.657947, 0.96", "-16.8333, 59.4549, -0.840644, 0.59", "-17.0045, 60.6065, -0.997778, 0.59", "-17.1829, 61.9696, -1.18274, 0.59", "-17.3747, 63.9614, -1.40415, 0.59", "-17.4347, 64.9021, -1.51404, 0.52", "-17.4921, 66.3087, -1.68182, 0.88", "-17.5369, 67.3269, -1.81063, 1.11", "-17.6201, 68.5391, -1.97176, 1.11", "-17.7352, 69.9349, -2.14981, 0.74", "-17.8883, 71.3981, -2.32454, 0.74", "-18.1014, 73.2713, -2.53605, 0.74", "-18.2765, 74.5618, -2.68123, 0.52", "-18.4996, 75.9384, -2.84714, 0.52", "-18.6775, 76.9276, -2.97548, 0.96", "-18.9549, 78.3828, -3.19544, 1.11", "-19.3855, 80.5344, -3.55707, 1.11", "-19.6734, 81.9451, -3.8144, 1.11", "-19.9337, 83.3532, -4.06771, 0.81", "-20.1374, 84.5926, -4.28883, 0.74", "-20.3156, 85.8865, -4.5164, 0.74", "-20.443, 87.1031, -4.72153, 0.44", "-20.535, 88.1357, -4.87631, 0.44", "-20.6768, 89.8428, -5.0812, 0.74", "-20.7659, 91.0251, -5.19834, 0.74", "-20.8489, 92.2839, -5.31472, 0.37", "-20.8949, 93.5922, -5.44006, 0.74", "-20.933, 94.7278, -5.59786, 0.96", "-20.9822, 96.0217, -5.83504, 0.96", "-21.0523, 97.4337, -6.17324, 0.81", "-21.1196, 98.7524, -6.53694, 0.52", "-21.1828, 100.125, -6.95747, 0.52", "-21.2273, 101.922, -7.55501, 1.03", "-21.2335, 102.876, -7.88945, 1.55", "-21.233, 103.736, -8.20324, 1.69", "-21.2313, 104.297, -8.40769, 1.69", "-21.2115, 105.688, -8.89033, 0.37", "-21.1725, 106.859, -9.25142, 0.44", "-21.1147, 107.475, -9.40845, 0.44", "-21.0186, 108.187, -9.57544, 0.44", "-20.8253, 109.372, -9.8325, 0.29", "-20.7245, 109.876, -9.94468, 0.59", "-20.5136, 110.732, -10.1448, 0.44", "-20.1636, 112.08, -10.4601, 0.29", "-19.8582, 113.33, -10.7411, 1.18", "-19.7053, 114.003, -10.8854, 1.18", "-19.4847, 115.013, -11.1016, 0.52", "-19.275, 115.982, -11.3086, 0.29", "-19.017, 117.093, -11.516, 0.29", "-18.7841, 118.109, -11.6433, 0.29", "-18.6436, 118.777, -11.6895, 0.29", "-18.3922, 120.117, -11.7224, 0.81", "-18.1826, 121.296, -11.7153, 0.44", "-17.9643, 122.424, -11.7224, 0.22", "-17.6991, 123.56, -11.7599, 0.44", "-17.5866, 123.996, -11.7734, 0.44", "-17.3506, 124.932, -11.7955, 0.29", "-17.1543, 125.779, -11.8038, 0.29", "-16.8899, 126.932, -11.8408, 0.29", "-16.7239, 127.664, -11.8922, 0.29", "-16.5071, 128.604, -11.9717, 0.66", "-16.3335, 129.37, -12.0273, 0.66", "-16.1284, 130.334, -12.1199, 0.74", "-15.9481, 131.385, -12.2012, 0.37", "-15.8318, 132.208, -12.2528, 0.37", "-15.6872, 133.353, -12.3573, 0.52", "-15.5846, 134.212, -12.4708, 0.59", "-15.4314, 135.517, -12.6626, 0.44", "-15.3223, 136.434, -12.8081, 0.29", "-15.2367, 137.079, -12.9097, 0.29", "-15.0445, 138.506, -13.1162, 1.11", "-14.9338, 139.324, -13.2239, 1.25", "-14.8542, 139.909, -13.2938, 1.25", "-14.6667, 141.138, -13.4463, 0.66", "-14.5358, 141.868, -13.568, 0.29", "-14.2999, 143.001, -13.7831, 0.29", "-14.0631, 144.011, -13.9943, 0.29", "-13.8246, 144.924, -14.2013, 0.29", "-13.4399, 146.286, -14.5338, 0.96", "-13.2745, 146.876, -14.689, 1.47", "-13.1499, 147.378, -14.8254, 1.47", "-13.0887, 147.674, -14.9071, 1.47", "-12.9445, 148.54, -15.134, 0.74", "-12.801, 149.535, -15.379, 0.29", "-12.6824, 150.556, -15.6119, 0.52", "-12.5699, 151.501, -15.8215, 0.74", "-12.3938, 152.703, -16.0882, 0.44", "-12.2254, 153.659, -16.3031, 0.29", "-12.0865, 154.332, -16.4577, 0.29", "-11.8551, 155.255, -16.6772, 0.66", "-11.6679, 155.914, -16.842, 0.74", "-11.3922, 156.843, -17.0801, 0.74", "-11.0888, 157.886, -17.3367, 0.29", "-10.835, 158.82, -17.5544, 0.29", "-10.365, 160.7, -17.97, 0.29", "-10.0647, 161.994, -18.1762, 0.52", "-9.89681, 162.781, -18.2642, 1.18", "-9.76703, 163.467, -18.313, 1.4", "-9.5852, 164.587, -18.3539, 1.4", "-9.46673, 165.47, -18.3625, 0.66", "-9.2135, 167.538, -18.3679, 0.29", "-9.04613, 168.837, -18.4029, 0.29", "-8.93455, 169.613, -18.4741, 0.37", "-8.77286, 170.65, -18.6354, 0.37", "-8.58898, 171.713, -18.8567, 0.37", "-8.2298, 173.581, -19.346, 0.37", "-7.80189, 175.591, -20.0054, 0.37", "-7.34033, 177.537, -20.6854, 1.33", "-7.09079, 178.466, -21.0421, 1.99", "-6.87895, 179.202, -21.3429, 1.99", "-6.7894, 179.513, -21.4743, 1.99", "-6.62138, 180.086, -21.7174, 1.99", "-6.25849, 181.286, -22.2031, 0.59", "-5.80982, 182.689, -22.7191, 0.29", "-5.46743, 183.678, -23.029, 0.59", "-5.18936, 184.446, -23.2466, 0.59", "-4.58338, 186.064, -23.6593, 0.37", "-4.24968, 186.966, -23.8597, 0.37", "-3.72495, 188.436, -24.1338, 0.37", "-3.12637, 190.213, -24.4036, 0.74", "-2.91262, 190.944, -24.5034, 0.74", "-2.72897, 191.703, -24.5867, 0.88", "-2.52431, 192.806, -24.6807, 0.44", "-2.27931, 194.708, -24.8525, 0.29", "-2.21987, 195.718, -24.9819, 0.52", "-2.22187, 197.576, -25.3108, 1.25", "-2.25099, 198.365, -25.4664, 1.62", "-2.28476, 198.879, -25.5921, 1.62", "-2.37881, 199.928, -25.8956, 0.96", "-2.53741, 201.479, -26.425, 0.29", "-2.61068, 202.367, -26.758, 0.29", "-2.66343, 203.449, -27.1665, 0.29", "-2.69984, 204.588, -27.5607, 0.74", "-2.71428, 205.109, -27.7127, 0.96", "-2.72673, 205.719, -27.8572, 0.96", "-2.75451, 207.268, -28.1802, 0.52", "-2.80109, 209.406, -28.6355, 0.37", "-2.83616, 210.873, -28.942, 0.29", "-2.89038, 212.256, -29.2321, 0.66", "-2.94093, 213.18, -29.4425, 0.66", "-3.06701, 214.909, -29.8642, 0.29", "-3.13307, 215.766, -30.08, 0.29", "-3.2994, 218.023, -30.6581, 0.29", "-3.44266, 220.482, -31.2897, 1.99", "-3.47027, 221.041, -31.4255, 2.28", "-3.50998, 221.836, -31.5965, 1.55", "-3.54545, 222.713, -31.7393, 0.88", "-3.59403, 224.158, -31.886, 0.22", "-3.61763, 224.839, -31.9208, 0.22", "-3.65725, 226.089, -31.9363, 0.66", "-3.68272, 226.88, -31.9459, 0.66", "-3.72061, 228.217, -31.9788, 0.29", "-3.78783, 230.349, -32.077, 0.22", "-3.80047, 231.427, -32.1491, 0.22", "-3.79179, 232.565, -32.2531, 0.52", "-3.72388, 233.985, -32.4352, 0.44", "-3.61748, 235.218, -32.6359, 0.44", "-3.45131, 236.636, -32.9196, 0.44", "-3.10424, 238.829, -33.4215, 0.22", "-2.80627, 240.459, -33.8176, 0.66", "-2.52998, 241.778, -34.1563, 1.77", "-2.36588, 242.474, -34.3434, 1.77", "-2.20045, 243.099, -34.5175, 1.77", "-1.91479, 244.013, -34.785, 0.88", "-1.5493, 245.037, -35.0534, 0.29", "-1.2823, 245.735, -35.2129, 0.52", "-0.594491, 247.547, -35.5782, 0.22", "-0.202227, 248.58, -35.7924, 0.52", "0.238639, 249.741, -36.0499, 0.52", "1.18056, 252.289, -36.6423, 0.22", "1.8827, 254.233, -37.1225, 0.37", "2.33425, 255.512, -37.4408, 0.37", "2.81564, 256.933, -37.801, 1.92", "3.02202, 257.585, -37.9734, 2.21", "3.20739, 258.257, -38.17, 2.21", "3.37804, 259.035, -38.4912, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.7046, 54.2924, 0.0131895, 0.66", "-15.3663, 55.4764, -0.15847, 0.66", "-15.1617, 56.1963, -0.269134, 0.81", "-15.0065, 56.7345, -0.336373, 0.37", "-14.8295, 57.3835, -0.408455, 0.29", "-14.5318, 58.4701, -0.538247, 0.29", "-14.3427, 59.1061, -0.621621, 0.29", "-14.1354, 59.7143, -0.732211, 0.29", "-13.8064, 60.518, -0.890664, 0.29", "-13.511, 61.1778, -1.02856, 0.29", "-13.2168, 61.8349, -1.16634, 0.74", "-13.0104, 62.2773, -1.25721, 0.74", "-12.6193, 63.0268, -1.42829, 0.29", "-12.3855, 63.458, -1.52541, 0.37", "-11.8527, 64.4599, -1.75578, 0.37", "-11.5685, 65.0272, -1.87369, 0.37", "-11.2759, 65.6975, -1.99358, 0.37", "-11.1576, 66.0065, -2.04167, 0.37", "-10.9668, 66.5707, -2.11445, 0.22", "-10.7954, 67.1187, -2.17868, 0.22", "-10.6477, 67.5501, -2.24037, 0.66", "-10.4948, 68.0653, -2.32984, 0.96", "-9.04647, 74.1361, -3.76434, 0.96", "-5.76708, 79.6432, -4.70246, 0.96", "-2.7741, 85.3796, -4.65372, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "33.9777, 10.2735, 8.12204, 0.66", "34.7928, 8.79815, 7.91808, 0.66", "35.0226, 8.33151, 7.82229, 0.66", "35.4011, 7.61201, 7.69774, 0.88", "36.086, 6.44869, 7.54387, 0.88", "36.5789, 5.70585, 7.47771, 0.88", "37.0544, 5.0882, 7.44507, 1.03", "37.6132, 4.42009, 7.41877, 1.03", "38.4241, 3.89407, 7.5411, 0.88", "39.0724, 3.76162, 7.71321, 0.88", "39.6307, 3.70926, 7.88806, 0.88", "40.5157, 3.59709, 8.18857, 0.81", "41.5352, 3.33822, 8.54967, 0.81", "42.1833, 3.05476, 8.75243, 0.81", "43.0056, 2.51409, 8.92738, 0.74", "43.8819, 1.81713, 9.05859, 0.88", "44.6597, 1.12115, 9.12568, 0.88", "45.493, 0.28053, 9.14581, 0.52", "45.9112, -0.149824, 9.11871, 0.52", "46.4245, -0.596404, 9.03324, 0.52", "47.0868, -1.04287, 8.89062, 0.52", "47.8478, -1.41367, 8.70701, 0.74", "48.623, -1.70936, 8.5072, 0.74", "49.6081, -2.0191, 8.2455, 0.74", "50.9107, -2.37836, 7.90957, 0.74", "51.8143, -2.60252, 7.67256, 0.74", "52.5303, -2.74594, 7.49302, 0.74", "53.3089, -2.82783, 7.31541, 0.74", "53.7652, -2.84409, 7.23371, 0.88", "55.0544, -2.79752, 7.03837, 0.88", "56.1534, -2.72538, 6.89681, 0.88", "57.5144, -2.64853, 6.73609, 0.66", "58.5099, -2.61356, 6.63987, 0.66", "61.0715, -2.55196, 6.45399, 0.59", "61.9599, -2.53935, 6.4047, 0.52", "63.3046, -2.49418, 6.35516, 0.52", "64.1144, -2.4267, 6.34322, 0.52", "64.9945, -2.2757, 6.34231, 0.52", "66.0461, -2.03084, 6.35357, 0.52", "66.749, -1.85231, 6.3717, 0.52", "67.897, -1.60929, 6.40894, 0.52", "69.1424, -1.34643, 6.45819, 0.52", "70.3103, -1.13565, 6.50874, 0.52", "71.3978, -1.02465, 6.55717, 0.52", "72.6383, -1.04141, 6.6152, 0.52", "73.4919, -1.18703, 6.66479, 0.52", "74.2868, -1.42045, 6.75378, 0.52", "74.8212, -1.59697, 6.84453, 0.52", "75.4957, -1.80726, 6.99011, 0.52", "76.8624, -2.16091, 7.37054, 0.29", "79.3057, -2.62121, 8.17582, 0.29", "81.5218, -2.89844, 8.98125, 0.29", "82.6523, -2.95883, 9.43538, 0.29", "83.464, -2.96658, 9.77934, 0.44", "84.3237, -2.91226, 10.181, 0.59", "84.8637, -2.81396, 10.4949, 0.59", "85.7414, -2.36324, 11.1812, 0.59", "86.2048, -1.92302, 11.5951, 0.59", "95.3568, -4.69632, 12.9785, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "33.9777, 10.2735, 8.12204, 1.11", "35.7662, 9.88216, 8.0108, 1.11", "36.8713, 9.50873, 7.91216, 1.11", "38.1383, 9.14422, 7.6919, 1.25", "39.1216, 8.95631, 7.49505, 1.47", "40.4621, 8.84253, 7.22098, 1.4", "41.6567, 8.85008, 6.9773, 1.4", "43.004, 8.92346, 6.64678, 1.18", "44.8297, 9.3531, 6.16871, 1.18", "46.0793, 9.91016, 5.82517, 1.18", "47.1455, 10.4837, 5.52019, 1.18", "47.7789, 10.8306, 5.33881, 0.88", "48.4146, 11.1132, 5.15989, 0.88", "49.42, 11.3448, 4.88115, 0.88", "50.9673, 11.3348, 4.46659, 1.11", "52.1458, 11.1626, 4.13386, 1.11", "53.3402, 10.9031, 3.78266, 1.11", "54.6914, 10.5395, 3.38037, 1.25", "56.0704, 10.1022, 2.96919, 1.33", "56.7084, 9.87286, 2.78298, 1.47", "57.7616, 9.50459, 2.50181, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-115.366, -80.9027, 0.236717, 0.59", "-115.264, -82.8491, 0.191702, 0.59", "-115.214, -83.6665, 0.207962, 0.59", "-115.152, -84.3792, 0.246809, 0.52", "-115.072, -85.1981, 0.316273, 0.52", "-115.009, -86.0827, 0.402961, 0.88", "-114.947, -87.0618, 0.508736, 1.03", "-114.922, -87.6427, 0.617287, 1.03", "-114.85, -88.6639, 0.828661, 1.03", "-114.761, -89.54, 1.02494, 0.29", "-114.704, -90.1639, 1.16838, 0.29", "-114.672, -90.6788, 1.28825, 0.29", "-114.665, -91.6543, 1.50479, 0.59", "-114.709, -92.4488, 1.7149, 0.74", "-114.776, -93.0123, 1.88422, 0.88", "-114.866, -93.5561, 2.05789, 0.88", "-114.965, -94.0578, 2.23328, 0.88", "-115.143, -94.7259, 2.47749, 0.81", "-115.587, -96.1648, 3.00542, 0.37", "-115.827, -96.9413, 3.29808, 1.03", "-116.071, -97.7073, 3.62336, 1.33", "-116.305, -98.4035, 3.94159, 1.33", "-116.629, -99.291, 4.36366, 1.03", "-116.92, -100.035, 4.72076, 0.74", "-117.185, -100.683, 5.00625, 0.37", "-117.552, -101.529, 5.43352, 0.74", "-117.776, -102.013, 5.69277, 0.74", "-118.026, -102.614, 5.967, 0.59", "-118.187, -103.077, 6.14413, 0.37", "-118.381, -103.763, 6.33564, 0.37", "-118.67, -104.914, 6.50608, 0.66", "-118.878, -105.745, 6.53241, 0.74", "-119.261, -107.164, 6.47954, 0.52", "-119.424, -107.761, 6.42879, 0.52", "-119.658, -108.471, 6.34539, 1.33", "-119.963, -109.359, 6.2162, 1.55", "-120.374, -110.521, 6.06895, 1.99", "-120.644, -111.21, 6.02328, 2.21", "-121.025, -112.058, 6.01483, 1.99", "-121.51, -113.08, 6.0074, 1.11", "-122.024, -114.253, 5.99467, 0.37", "-122.405, -115.254, 5.98956, 1.11", "-122.579, -115.762, 5.98502, 1.25", "-122.796, -116.418, 5.97995, 1.25", "-123.283, -117.868, 5.93007, 0.29", "-123.596, -118.794, 5.87704, 0.29", "-123.919, -119.643, 5.81975, 0.44", "-124.269, -120.524, 5.7512, 0.59", "-124.692, -121.562, 5.68035, 0.88", "-125.052, -122.422, 5.63501, 0.96", "-125.452, -123.246, 5.6056, 0.66", "-126.007, -124.22, 5.60582, 0.37", "-126.434, -124.912, 5.61562, 0.29", "-126.913, -125.628, 5.65991, 0.29", "-127.331, -126.25, 5.72991, 0.29", "-127.916, -127.081, 5.85947, 0.29", "-128.798, -128.221, 6.03471, 0.74", "-129.489, -129.002, 6.18646, 1.03", "-130.355, -129.901, 6.39528, 2.28", "-131.041, -130.551, 6.56495, 2.8", "-131.7, -131.164, 6.72708, 3.09", "-132.762, -132.189, 6.98887, 1.84", "-133.991, -133.365, 7.28018, 0.29", "-134.593, -133.972, 7.43404, 0.29", "-135.378, -134.843, 7.64024, 0.29", "-136.165, -135.801, 7.87252, 0.29", "-136.7, -136.595, 8.07826, 0.88", "-137.11, -137.311, 8.26447, 1.11", "-137.427, -137.931, 8.40336, 0.81", "-137.682, -138.468, 8.52638, 0.52", "-138.069, -139.37, 8.73992, 0.29", "-138.501, -140.438, 9.00504, 0.29", "-138.846, -141.352, 9.23672, 0.29", "-139.04, -141.845, 9.36002, 0.29", "-139.407, -142.828, 9.60959, 0.81", "-139.719, -143.74, 9.8464, 1.11", "-139.94, -144.456, 10.0353, 0.88", "-140.249, -145.473, 10.3013, 0.29", "-140.619, -146.713, 10.6292, 0.29", "-140.98, -147.828, 10.8779, 0.29", "-141.119, -148.237, 10.9568, 0.29", "-141.446, -149.217, 11.121, 0.74", "-141.681, -149.922, 11.221, 0.74", "-141.997, -150.92, 11.3477, 0.44", "-142.347, -152.082, 11.4805, 0.29", "-142.528, -152.661, 11.5398, 0.29", "-142.772, -153.461, 11.6546, 0.29", "-143.019, -154.415, 11.8444, 0.29", "-143.144, -154.959, 11.9909, 0.74", "-143.255, -155.456, 12.1586, 0.74", "-143.457, -156.339, 12.5241, 0.44", "-143.707, -157.334, 12.9553, 0.29", "-143.941, -158.186, 13.3609, 0.74", "-144.113, -158.783, 13.6526, 1.11", "-144.279, -159.287, 13.8934, 1.69", "-144.423, -159.71, 14.0889, 1.92", "-144.631, -160.328, 14.3546, 1.92", "-144.924, -161.267, 14.712, 1.62", "-145.275, -162.41, 15.1198, 0.29", "-145.544, -163.33, 15.4278, 0.22", "-145.784, -164.092, 15.6691, 0.22", "-146.12, -165.127, 15.9715, 0.59", "-146.415, -165.988, 16.2006, 0.74", "-146.642, -166.59, 16.3514, 0.74", "-146.961, -167.362, 16.5506, 0.44", "-147.268, -168.015, 16.7191, 0.29", "-147.637, -168.66, 16.9076, 0.29", "-148.519, -169.938, 17.3366, 0.44", "-149.039, -170.594, 17.5522, 0.59", "-149.56, -171.203, 17.7441, 0.59", "-150.175, -171.905, 17.9334, 0.52", "-151.116, -172.963, 18.1736, 1.33", "-151.89, -173.823, 18.3301, 2.06", "-152.612, -174.663, 18.4461, 2.21", "-153.132, -175.341, 18.5128, 2.21", "-153.879, -176.456, 18.5864, 0.81", "-154.324, -177.271, 18.6095, 0.29", "-154.655, -178.019, 18.602, 0.44", "-154.855, -178.589, 18.5971, 0.44", "-155.105, -179.424, 18.605, 0.29", "-155.289, -180.053, 18.5967, 0.29", "-155.523, -180.834, 18.5858, 0.29", "-155.701, -181.342, 18.5781, 0.74", "-155.895, -181.8, 18.5856, 0.88", "-156.155, -182.334, 18.6147, 0.88", "-156.587, -183.192, 18.713, 0.29", "-157.029, -184.036, 18.8784, 0.29", "-157.453, -184.877, 19.1308, 0.29", "-157.925, -185.882, 19.4961, 0.52", "-158.139, -186.351, 19.6888, 0.52", "-158.507, -187.199, 20.0864, 0.29", "-158.729, -187.777, 20.4084, 0.29", "-159.105, -188.938, 21.1368, 0.59", "-159.299, -189.589, 21.5891, 0.29", "-159.435, -190.011, 21.913, 0.29", "-159.664, -190.585, 22.3937, 0.74", "-160.088, -191.322, 23.0663, 0.88", "-160.515, -191.864, 23.5793, 0.29", "-161.014, -192.35, 24.0596, 0.29", "-161.723, -192.956, 24.63, 0.96", "-162.305, -193.444, 25.0285, 1.11", "-163.037, -194.079, 25.4275, 1.11", "-163.812, -194.825, 25.7889, 0.29", "-164.311, -195.393, 26.018, 0.22", "-164.706, -195.971, 26.2039, 0.44", "-165.077, -196.667, 26.3818, 0.44", "-165.572, -197.856, 26.608, 0.22", "-165.839, -198.607, 26.7089, 0.22", "-166.015, -199.173, 26.7535, 0.22", "-166.212, -199.819, 26.7807, 0.59", "-166.351, -200.284, 26.7966, 0.74", "-166.771, -201.662, 26.8038, 0.29", "-166.997, -202.396, 26.7934, 0.29", "-167.284, -203.312, 26.7703, 0.44", "-167.545, -204.188, 26.7498, 0.44", "-167.874, -205.347, 26.744, 0.52", "-168.061, -206.008, 26.7536, 0.96", "-168.259, -206.662, 26.7822, 1.4", "-168.482, -207.324, 26.8084, 1.4", "-169.079, -208.836, 26.9499, 0.29", "-169.723, -210.286, 27.1682, 0.22", "-170.067, -210.983, 27.3213, 0.37", "-170.65, -212.072, 27.6382, 0.37", "-171.259, -213.123, 28.0069, 0.29", "-172.115, -214.478, 28.5581, 0.74", "-172.596, -215.158, 28.8733, 1.11", "-173.153, -215.871, 29.2162, 1.25", "-173.742, -216.573, 29.5404, 1.11", "-174.307, -217.218, 29.8164, 0.59", "-175.047, -218.058, 30.1213, 0.29", "-175.482, -218.578, 30.2383, 0.29", "-176.291, -219.58, 30.4133, 0.22", "-176.824, -220.271, 30.5132, 0.22", "-177.12, -220.666, 30.567, 0.66", "-177.577, -221.285, 30.6517, 0.66", "-178.506, -222.572, 30.8606, 0.29", "-179.072, -223.343, 31.0001, 0.29", "-179.67, -224.11, 31.1454, 0.29", "-180.298, -224.865, 31.285, 0.66", "-180.803, -225.44, 31.3856, 0.66", "-181.615, -226.324, 31.5295, 0.22", "-182.174, -226.918, 31.6164, 0.22", "-183.112, -227.916, 31.7467, 0.22", "-184.745, -229.695, 31.9278, 0.22", "-185.23, -230.275, 31.9663, 0.22", "-185.729, -230.942, 31.991, 1.11", "-185.993, -231.361, 31.9902, 1.11", "-186.113, -231.606, 31.9887, 1.11", "-186.348, -232.251, 31.9871, 0.66", "-186.624, -233.324, 31.9808, 0.22", "-186.75, -233.983, 31.9871, 0.52", "-186.937, -235.497, 32.0299, 0.22", "-187.082, -236.726, 32.0763, 0.22", "-187.145, -237.251, 32.1015, 0.59", "-187.226, -237.916, 32.1438, 0.59", "-187.341, -238.878, 32.2038, 0.52", "-187.493, -240.298, 32.2884, 0.22", "-187.564, -241.131, 32.3371, 0.22", "-187.59, -241.629, 32.3687, 0.22", "-187.605, -242.194, 32.4051, 0.66", "-187.598, -242.999, 32.5125, 0.81", "-187.527, -243.873, 32.716, 0.59", "-187.272, -245.095, 33.1929, 1.25", "-187.041, -245.727, 33.5333, 1.69", "-186.87, -246.032, 33.7462, 1.92", "-186.099, -246.987, 34.5908, 1.18", "-185.315, -247.68, 35.3842, 0.22", "-184.357, -248.294, 36.2532, 0.22", "-183.689, -248.623, 36.806, 0.22", "-182.835, -248.993, 37.4464, 0.22", "-182.207, -249.251, 37.8706, 0.66", "-181.733, -249.453, 38.1456, 0.66", "-180.434, -250.016, 38.8274, 0.22", "-179.937, -250.244, 39.0686, 0.37", "-179.434, -250.53, 39.322, 0.37", "-179.035, -250.813, 39.5465, 0.22", "-178.435, -251.311, 39.9081, 0.22", "-182.751, -260.364, 41.7513, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-115.366, -80.9027, 0.236717, 0.37", "-116.966, -80.5308, 0.158376, 0.37", "-117.637, -80.4101, 0.104186, 0.37", "-119.065, -80.2281, -0.0908672, 0.29", "-120.15, -80.1363, -0.267481, 0.44", "-121.195, -80.0865, -0.454289, 0.66", "-121.794, -80.0793, -0.574598, 0.81", "-122.312, -80.1008, -0.70295, 0.81", "-123.91, -80.2343, -1.1607, 0.22", "-124.408, -80.2957, -1.32751, 0.22", "-125.303, -80.4116, -1.62789, 0.74", "-126.037, -80.5062, -1.88107, 0.88", "-127.253, -80.6795, -2.33565, 0.22", "-127.747, -80.7547, -2.56787, 0.22", "-128.199, -80.8386, -2.82162, 0.22", "-128.709, -80.9518, -3.14013, 0.74", "-129.243, -81.1128, -3.51095, 0.88", "-129.816, -81.3787, -3.98207, 0.88", "-131.049, -82.2054, -5.17684, 0.22", "-131.478, -82.5512, -5.63305, 0.22", "-131.826, -82.8607, -6.03518, 0.74", "-132.247, -83.3087, -6.61564, 0.74", "-133.139, -84.2324, -7.73172, 0.29", "-133.423, -84.5134, -8.05355, 0.29", "-133.895, -84.9607, -8.53471, 0.88", "-134.467, -85.4468, -9.08306, 1.03", "-136.211, -86.7443, -10.6702, 0.22", "-137.885, -87.8712, -12.0944, 0.22", "-138.574, -88.2769, -12.6195, 0.22", "-138.985, -88.5047, -12.917, 1.11", "-139.486, -88.7749, -13.2536, 1.11", "-140.033, -89.0401, -13.5593, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-21.0466, -126.535, -4.9217, 0.81", "-19.9566, -127.145, -4.7091, 0.81", "-19.0684, -127.586, -4.55165, 0.52", "-17.7949, -128.17, -4.34428, 0.52", "-17.2376, -128.433, -4.25849, 0.37", "-16.1237, -128.974, -4.09228, 0.37", "-15.6816, -129.196, -4.02709, 0.66", "-15.2837, -129.395, -3.98222, 0.88", "-14.954, -129.564, -3.94174, 0.88", "-14.1157, -130.08, -3.83779, 0.59", "-13.377, -130.631, -3.74372, 0.66", "-12.6465, -131.258, -3.64537, 0.74", "-12.1999, -131.639, -3.58398, 0.74", "-11.8522, -131.913, -3.53555, 0.52", "-11.2821, -132.313, -3.45867, 0.29", "-10.671, -132.657, -3.36794, 0.96", "-10.1154, -132.925, -3.27646, 1.03", "-9.75044, -133.086, -3.2075, 1.03", "-8.92496, -133.437, -3.03055, 0.66", "-8.57799, -133.588, -2.95761, 0.52", "-7.78109, -133.947, -2.79188, 0.59", "-6.9935, -134.349, -2.62894, 0.59", "-6.27056, -134.766, -2.48402, 0.52", "-5.67319, -135.153, -2.37018, 0.52", "-5.04778, -135.599, -2.25805, 0.96", "-4.65534, -135.882, -2.1996, 1.18", "-3.99968, -136.343, -2.12278, 0.66", "-3.22226, -136.844, -2.03947, 0.37", "-2.73343, -137.129, -1.99104, 0.37", "-1.71668, -137.662, -1.89681, 0.88", "-0.821057, -138.115, -1.78961, 1.03", "-0.142504, -138.459, -1.69723, 0.81", "0.479657, -138.777, -1.59707, 0.52", "1.20575, -139.151, -1.46086, 0.52", "1.76919, -139.456, -1.33708, 0.52", "2.53787, -139.934, -1.14363, 0.52", "3.17883, -140.384, -0.963227, 1.33", "3.57642, -140.695, -0.845351, 1.69", "4.02883, -141.095, -0.704871, 1.69", "4.79206, -141.81, -0.530069, 1.11", "5.63245, -142.603, -0.402403, 0.44", "6.18908, -143.098, -0.372304, 0.44", "6.64701, -143.483, -0.377809, 0.29", "7.17962, -143.907, -0.426979, 0.29", "8.40688, -144.82, -0.612212, 1.03", "8.77008, -145.071, -0.686988, 1.4", "9.167, -145.346, -0.789689, 1.4", "10.4412, -146.308, -1.17468, 0.22", "11.1156, -146.844, -1.38368, 0.52", "11.4457, -147.119, -1.48115, 0.52", "12.0055, -147.637, -1.63078, 0.29", "12.7882, -148.387, -1.84556, 0.29", "13.2652, -148.852, -1.96784, 0.29", "13.7466, -149.346, -2.09521, 0.66", "14.0958, -149.716, -2.16701, 0.81", "14.3476, -149.986, -2.21125, 0.81", "14.766, -150.408, -2.25972, 0.59", "15.2412, -150.84, -2.30161, 0.29", "15.6877, -151.268, -2.3176, 0.29", "16.1776, -151.823, -2.30735, 0.66", "16.5337, -152.312, -2.26081, 0.66", "16.9758, -153.059, -2.13804, 0.29", "17.2032, -153.54, -2.02826, 0.29", "17.5515, -154.418, -1.78528, 0.66", "17.7717, -155.041, -1.57801, 0.66", "18.0168, -155.853, -1.27249, 0.44", "18.2208, -156.68, -0.940683, 1.47", "18.3528, -157.346, -0.667011, 1.84", "18.4198, -157.737, -0.509057, 1.84", "18.4612, -157.979, -0.423335, 1.84", "18.5767, -158.6, -0.214273, 1.33", "18.7419, -159.348, 0.0258513, 0.52", "18.8381, -159.742, 0.149191, 0.52", "18.9721, -160.278, 0.316443, 0.52", "19.1847, -161.134, 0.591365, 0.29", "19.2982, -161.577, 0.740083, 0.29", "19.471, -162.208, 0.969663, 0.29", "19.6429, -162.789, 1.19623, 0.44", "19.9173, -163.571, 1.51584, 0.44", "20.1945, -164.209, 1.77708, 0.44", "20.4259, -164.656, 1.95072, 1.33", "20.7099, -165.168, 2.12021, 1.84", "21.002, -165.624, 2.25871, 1.84", "21.5125, -166.331, 2.46642, 0.96", "22.2024, -167.196, 2.71047, 0.22", "22.8026, -167.896, 2.90026, 0.22", "23.6682, -168.841, 3.14515, 0.22", "24.1986, -169.372, 3.28439, 0.22", "24.8103, -169.918, 3.43497, 0.22", "25.3595, -170.359, 3.55463, 0.44", "26.0256, -170.843, 3.67625, 0.88", "26.6769, -171.29, 3.76688, 1.03", "27.1063, -171.581, 3.81658, 1.03", "27.6069, -171.943, 3.86824, 0.88", "28.1103, -172.286, 3.91385, 0.29", "28.472, -172.518, 3.95656, 0.29", "29.0216, -172.843, 4.05311, 0.29", "29.7081, -173.22, 4.20845, 0.37", "30.2206, -173.479, 4.35431, 0.37", "30.667, -173.685, 4.50259, 0.29", "31.5191, -174.032, 4.82085, 0.29", "32.1877, -174.283, 5.07293, 0.81", "32.5643, -174.424, 5.20965, 0.81", "33.2853, -174.735, 5.47333, 0.59", "33.8025, -175.023, 5.67732, 0.29", "34.2383, -175.315, 5.86316, 0.29", "34.6876, -175.658, 6.07, 0.66", "35.0115, -175.926, 6.23783, 0.66", "35.9539, -176.745, 6.78578, 0.29", "36.5337, -177.26, 7.17384, 0.29", "37.1106, -177.79, 7.63027, 0.29", "37.5298, -178.197, 8.01531, 0.29", "37.9287, -178.593, 8.43483, 0.88", "38.1069, -178.769, 8.62814, 0.88", "38.5711, -179.24, 9.16913, 0.66", "39.1918, -179.876, 9.95018, 0.29", "39.5014, -180.209, 10.3735, 0.29", "39.864, -180.616, 10.8777, 0.66", "40.1757, -180.974, 11.2793, 0.44", "45.7869, -186.524, 14.3809, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.0466, -126.535, -4.9217, 2.14", "-21.5474, -127.696, -5.18087, 2.14", "-21.9614, -128.757, -5.39018, 1.33", "-22.3359, -129.803, -5.57015, 1.03", "-22.5828, -130.599, -5.68423, 1.03", "-22.7383, -131.142, -5.75525, 1.25", "-22.8846, -131.673, -5.82006, 1.25", "-23.1061, -132.679, -5.91614, 0.96", "-23.2679, -133.496, -5.96856, 0.96", "-23.5633, -134.926, -6.04666, 0.88", "-23.7421, -135.77, -6.07357, 0.88", "-23.8916, -136.57, -6.08385, 0.96", "-24.0348, -137.484, -6.07878, 0.96", "-24.1414, -138.266, -6.05488, 0.74", "-24.2324, -139.019, -6.01635, 0.52", "-24.3011, -139.646, -5.96966, 0.52", "-24.3796, -140.415, -5.89793, 0.37", "-24.4393, -141.029, -5.83823, 0.74", "-24.5178, -141.694, -5.77253, 0.74", "-24.6153, -142.444, -5.68927, 1.03", "-24.686, -142.92, -5.63366, 1.18", "-24.7937, -143.578, -5.56277, 1.33", "-24.8875, -144.074, -5.50807, 1.33", "-24.9808, -144.603, -5.42186, 1.18", "-25.1181, -145.375, -5.21166, 0.96", "-25.2254, -145.967, -4.98423, 0.81", "-25.328, -146.564, -4.70646, 0.81", "-25.4189, -147.221, -4.36505, 0.81", "-25.4883, -147.796, -4.05699, 0.59", "-25.587, -148.747, -3.56851, 0.66", "-25.6439, -149.152, -3.38265, 0.66", "-25.7932, -149.875, -3.12518, 1.18", "-26.0388, -150.615, -2.98782, 1.47", "-26.3382, -151.248, -2.97958, 1.55", "-26.63, -151.704, -3.04068, 1.55", "-27.1218, -152.313, -3.18935, 1.4", "-27.8165, -153.013, -3.38951, 1.18", "-28.6537, -153.747, -3.61449, 0.66", "-29.356, -154.32, -3.78446, 0.74", "-30.2747, -155.038, -3.97882, 1.18", "-31.0404, -155.614, -4.10511, 1.25", "-31.8503, -156.206, -4.19117, 1.25", "-32.5435, -156.697, -4.21392, 1.25", "-33.2517, -157.151, -4.19806, 1.33", "-33.6622, -157.378, -4.16501, 1.33", "-34.3289, -157.685, -4.05482, 1.03", "-34.9068, -157.9, -3.91334, 0.74", "-35.3692, -158.044, -3.77894, 0.59", "-35.9794, -158.235, -3.58316, 0.59", "-36.5902, -158.458, -3.37605, 0.88", "-37.2021, -158.768, -3.14466, 1.18", "-37.7767, -159.152, -2.88851, 1.18", "-38.285, -159.566, -2.63164, 1.18", "-38.7634, -160.029, -2.38081, 1.18", "-39.1325, -160.435, -2.18961, 1.18", "-39.6455, -161.06, -1.93035, 0.81", "-39.9542, -161.474, -1.78217, 0.59", "-40.2397, -161.908, -1.6549, 0.52", "-40.7893, -162.835, -1.43632, 0.96", "-41.1085, -163.457, -1.32794, 1.18", "-41.3763, -164.037, -1.25752, 1.18", "-41.7207, -164.829, -1.20161, 0.88", "-42.055, -165.627, -1.17152, 0.59", "-42.3315, -166.345, -1.15371, 0.59", "-42.6353, -167.183, -1.13518, 0.59", "-42.9185, -167.965, -1.11671, 0.74", "-43.2477, -168.839, -1.09359, 1.33", "-43.5432, -169.598, -1.07202, 1.69", "-43.9212, -170.535, -1.04424, 1.77", "-44.1382, -171.086, -1.02953, 1.77", "-44.406, -171.781, -1.02976, 1.77", "-44.6299, -172.45, -1.05142, 1.47", "-44.843, -173.193, -1.09992, 1.03", "-45.0376, -173.925, -1.16765, 1.03", "-45.2623, -174.78, -1.26882, 1.03", "-45.4836, -175.667, -1.37613, 1.11", "-45.6794, -176.502, -1.47032, 1.33", "-45.828, -177.266, -1.54264, 1.03", "-45.9767, -178.302, -1.61953, 0.81", "-46.0511, -179.03, -1.65728, 1.03", "-46.1109, -179.946, -1.68373, 0.81", "-46.1299, -180.447, -1.6863, 0.81", "-46.1522, -181.803, -1.68546, 0.74", "-46.147, -183.167, -1.67778, 0.74", "-46.1183, -184.264, -1.66996, 0.74", "-46.0794, -185.867, -1.65786, 0.74", "-46.0796, -186.972, -1.65653, 0.74", "-46.11, -187.689, -1.65598, 1.18", "-46.1997, -188.422, -1.64758, 1.4", "-46.381, -189.177, -1.62356, 1.4", "-46.6569, -189.889, -1.58166, 1.47", "-47.1178, -190.668, -1.51473, 1.55", "-47.4831, -191.129, -1.46826, 1.55", "-48.1748, -191.841, -1.38117, 1.11", "-49.0912, -192.635, -1.2613, 0.88", "-49.7622, -193.146, -1.15259, 0.88", "-50.5333, -193.667, -1.00756, 1.03", "-51.067, -194.005, -0.902679, 1.03", "-51.4907, -194.28, -0.813974, 1.03", "-52.1133, -194.747, -0.65397, 0.81", "-52.8335, -195.415, -0.442209, 0.59", "-53.625, -196.341, -0.187639, 0.59", "-54.1259, -197.067, -0.0117855, 0.88", "-54.5032, -197.743, 0.136505, 0.88", "-54.9891, -198.809, 0.33774, 0.74", "-55.2598, -199.546, 0.455059, 0.96", "-55.4799, -200.274, 0.535167, 1.11", "-55.6106, -200.798, 0.580607, 1.11", "-55.7387, -201.349, 0.608677, 0.88", "-55.9257, -202.106, 0.601982, 0.66", "-56.0698, -202.637, 0.579129, 0.66", "-56.3101, -203.53, 0.542981, 0.96", "-56.4873, -204.213, 0.512463, 0.96", "-56.7052, -205.087, 0.468915, 0.66", "-56.9039, -205.884, 0.427735, 0.74", "-57.2141, -207.164, 0.37672, 0.96", "-57.3871, -207.904, 0.369774, 0.96", "-57.5628, -208.676, 0.367065, 0.96", "-57.7728, -209.56, 0.349143, 0.66", "-58.0875, -210.865, 0.297095, 0.66", "-58.357, -212.112, 0.208374, 0.66", "-58.5011, -212.857, 0.130551, 0.81", "-58.7255, -214.161, -0.0362738, 0.74", "-58.8794, -215.195, -0.193264, 0.74", "-59.0083, -216.286, -0.380172, 0.96", "-59.093, -217.203, -0.550176, 0.96", "-59.1474, -217.812, -0.657222, 1.62", "-59.1952, -218.146, -0.700421, 1.62", "-59.2855, -218.584, -0.717054, 1.62", "-59.4461, -219.226, -0.703666, 1.4", "-59.6468, -219.896, -0.66437, 0.88", "-59.9171, -220.752, -0.593361, 0.59", "-60.2773, -221.917, -0.482216, 0.81", "-60.5679, -222.855, -0.384203, 0.96", "-60.7923, -223.613, -0.310761, 0.96", "-61.045, -224.528, -0.239239, 1.11", "-61.2107, -225.127, -0.200789, 1.11", "-61.3491, -225.589, -0.177964, 1.33", "-61.4934, -226.038, -0.159855, 1.33", "-61.7803, -226.767, -0.115358, 1.03", "-62.1265, -227.483, -0.0528488, 0.66", "-62.4149, -228.016, 0.00371242, 0.37", "-62.633, -228.405, 0.0476081, 0.37", "-62.8994, -228.915, 0.105705, 0.37", "-63.1398, -229.401, 0.162262, 1.03", "-63.4003, -229.941, 0.2247, 1.25", "-63.571, -230.344, 0.270318, 1.25", "-63.8453, -231.099, 0.347375, 0.96", "-64.1513, -232.049, 0.43244, 0.52", "-64.4142, -232.905, 0.498745, 0.52", "-64.7578, -234.099, 0.575841, 0.52", "-65.005, -235.073, 0.629168, 0.81", "-65.1788, -235.784, 0.669764, 1.03", "-65.3418, -236.426, 0.708727, 1.03", "-65.4728, -236.92, 0.738991, 0.81", "-65.6444, -237.516, 0.77363, 0.81", "-65.918, -238.35, 0.816602, 0.59", "-66.2662, -239.223, 0.856302, 0.44", "-66.807, -240.315, 0.919072, 0.88", "-67.0848, -240.781, 0.952362, 0.88", "-67.5023, -241.381, 1.00287, 0.59", "-67.9444, -241.888, 1.05948, 0.59", "-68.6492, -242.517, 1.14207, 0.59", "-69.4116, -243.062, 1.22099, 0.81", "-69.8474, -243.319, 1.26528, 0.81", "-70.1994, -243.502, 1.30033, 0.81", "-70.9951, -243.85, 1.37452, 0.59", "-71.8691, -244.155, 1.45272, 0.88", "-72.738, -244.392, 1.52472, 1.03", "-73.5678, -244.578, 1.58748, 1.03", "-74.2533, -244.696, 1.64234, 0.59", "-74.8704, -244.786, 1.69983, 0.59", "-75.394, -244.864, 1.75574, 0.59", "-75.8425, -244.929, 1.81788, 0.59", "-76.3198, -245.019, 1.88999, 0.59", "-76.9436, -245.166, 1.99402, 0.44", "-77.8771, -245.448, 2.16192, 0.81", "-78.6552, -245.738, 2.31494, 1.11", "-79.5025, -246.116, 2.49891, 0.81", "-80.3497, -246.563, 2.69471, 0.66", "-80.7377, -246.797, 2.78711, 0.66", "-81.2045, -247.121, 2.90043, 0.52", "-81.7375, -247.53, 3.03641, 0.52", "-82.2767, -247.996, 3.1783, 0.52", "-82.8179, -248.5, 3.32454, 0.52", "-83.1443, -248.835, 3.4154, 1.11", "-83.8694, -249.655, 3.61089, 1.4", "-84.2621, -250.149, 3.71302, 1.84", "-84.6949, -250.749, 3.81232, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.86442, -74.1646, -9.8661, 0.66", "-9.92395, -75.8996, -9.87153, 0.66", "-9.97976, -76.9689, -9.87756, 0.37", "-10.0137, -77.6823, -9.90874, 0.81", "-10.042, -78.6034, -9.97056, 1.03", "-10.068, -79.4039, -10.0307, 1.11", "-10.1032, -80.2576, -10.1087, 0.88", "-10.1512, -81.2394, -10.2354, 0.59", "-10.1834, -82.3802, -10.4247, 0.29", "-10.1841, -83.2062, -10.5893, 0.29", "-10.1665, -83.5841, -10.6764, 0.29", "-10.0664, -84.4333, -10.9149, 0.74", "-9.9059, -85.2215, -11.1744, 1.11", "-9.76959, -85.7181, -11.3491, 1.11", "-9.54421, -86.4487, -11.6119, 1.11", "-9.25477, -87.2971, -11.8843, 0.81", "-8.7666, -88.7005, -12.2654, 0.44", "-8.31749, -90.037, -12.5563, 0.59", "-8.076, -90.8438, -12.6942, 0.88", "-7.86413, -91.6955, -12.7952, 0.88", "-7.62423, -92.9182, -12.884, 0.81", "-7.45224, -94.1218, -12.9061, 0.44", "-7.3643, -95.074, -12.8691, 1.03", "-7.31885, -95.8722, -12.8194, 0.74", "-7.28304, -96.8726, -12.7619, 0.52", "-7.26687, -97.6465, -12.7299, 0.88", "-7.27268, -98.3556, -12.7452, 1.18", "-7.28066, -98.9696, -12.7709, 1.18", "-7.29935, -99.6726, -12.8077, 0.88", "-7.33903, -100.894, -12.8859, 0.29", "-7.37813, -101.818, -12.9569, 0.29", "-7.44833, -103.139, -13.0879, 1.03", "-7.49156, -104.016, -13.1913, 1.47", "-7.52009, -104.568, -13.2574, 1.47", "-7.54706, -105.176, -13.3315, 1.47", "-7.56463, -106.084, -13.4433, 1.25", "-7.56649, -107.195, -13.5689, 0.44", "-7.54405, -108.112, -13.6592, 0.44", "-7.51305, -109.007, -13.7545, 0.44", "-7.49064, -109.468, -13.8063, 0.59", "-7.43501, -110.548, -13.9299, 0.59", "-7.37748, -111.371, -14.0306, 0.37", "-7.32773, -112.058, -14.1147, 0.81", "-7.2816, -112.688, -14.1827, 1.03", "-7.24943, -113.149, -14.2241, 1.03", "-7.22155, -113.721, -14.2603, 0.59", "-7.16949, -114.655, -14.3037, 0.22", "-7.11514, -115.239, -14.3299, 0.22", "-7.03112, -115.929, -14.3616, 0.22", "-6.92612, -116.672, -14.3965, 0.66", "-6.78597, -117.56, -14.4437, 0.88", "-6.55165, -118.854, -14.5222, 0.88", "-6.26756, -120.359, -14.6193, 0.96", "-6.05309, -121.491, -14.7122, 1.18", "-5.89843, -122.408, -14.8047, 0.66", "-5.77956, -123.16, -14.8836, 0.52", "-5.5861, -124.596, -15.0439, 0.52", "-5.46313, -125.705, -15.1734, 0.81", "-5.35388, -126.823, -15.3127, 0.52", "-5.27068, -127.66, -15.4144, 0.52", "-5.16849, -128.649, -15.5562, 1.47", "-5.05604, -129.66, -15.7279, 1.77", "-4.96196, -130.438, -15.8952, 1.77", "-4.89485, -130.885, -16.0059, 1.77", "-4.75916, -131.624, -16.199, 1.25", "-4.58343, -132.479, -16.4279, 0.81", "-4.37628, -133.518, -16.7097, 0.44", "-4.10824, -134.82, -17.0579, 0.37", "-3.94266, -135.622, -17.2657, 0.52", "-3.72685, -136.59, -17.5117, 0.52", "-3.55227, -137.316, -17.6922, 0.66", "-3.3023, -138.27, -17.9335, 0.66", "-2.97121, -139.487, -18.2924, 0.88", "-2.67576, -140.507, -18.6343, 1.25", "-2.50278, -141.08, -18.8592, 1.25", "-2.34213, -141.572, -19.0766, 1.25", "-2.00898, -142.534, -19.5453, 1.11", "-1.70431, -143.382, -19.9887, 0.74", "-1.43055, -144.125, -20.4019, 0.29", "-1.27178, -144.564, -20.6566, 0.29", "-0.898866, -145.637, -21.2614, 0.44", "-0.693478, -146.255, -21.5806, 0.88", "-0.526652, -146.817, -21.8289, 1.33", "-0.347107, -147.487, -22.0726, 1.47", "-0.172946, -148.216, -22.2896, 1.47", "-0.0267456, -148.867, -22.4499, 1.25", "0.165142, -149.758, -22.6341, 0.44", "0.451271, -151.069, -22.8188, 0.29", "0.670262, -152.111, -22.898, 0.29", "0.878953, -153.178, -22.9209, 0.29", "1.02933, -154.03, -22.8992, 0.74", "1.11804, -154.635, -22.859, 0.88", "1.24194, -155.866, -22.7253, 0.96", "1.28175, -156.92, -22.5841, 1.03", "1.25346, -157.715, -22.4811, 1.03", "1.18035, -158.507, -22.3731, 0.59", "1.08158, -159.353, -22.2632, 0.22", "1.01609, -159.886, -22.2107, 0.22", "0.865633, -161.11, -22.1605, 0.96", "0.775672, -161.834, -22.1528, 1.11", "0.692719, -162.631, -22.1267, 1.11", "0.642349, -163.393, -22.078, 0.59", "0.620042, -164.169, -22.0132, 0.29", "0.62482, -164.832, -21.9419, 0.29", "0.634792, -165.385, -21.8662, 0.29", "0.667233, -166.586, -21.6789, 0.44", "0.701059, -167.604, -21.4929, 0.66", "0.740623, -168.679, -21.2859, 0.66", "0.777151, -169.456, -21.1446, 0.81", "0.820531, -170.319, -21.0088, 0.81", "0.863785, -171.143, -20.8957, 0.52", "0.889462, -172.189, -20.7792, 0.66", "0.894724, -172.964, -20.6971, 0.66", "0.851258, -174.267, -20.6198, 0.37", "0.774306, -175.418, -20.6076, 0.37", "0.680492, -176.336, -20.6381, 1.03", "0.554083, -177.257, -20.7344, 1.47", "0.392687, -178.159, -20.887, 1.62", "0.0311802, -179.764, -21.2543, 0.88", "-0.288145, -180.805, -21.5733, 0.59", "-0.604848, -181.596, -21.875, 0.37", "-1.24022, -182.868, -22.4183, 0.29", "-1.45908, -183.243, -22.5725, 0.29", "-1.8139, -183.781, -22.7695, 0.29", "-2.48473, -184.784, -23.0608, 0.29", "-3.14988, -185.731, -23.3312, 0.59", "-3.84002, -186.736, -23.5995, 0.59", "-4.27234, -187.358, -23.7585, 0.44", "-4.81191, -188.104, -23.9606, 0.44", "-5.17959, -188.558, -24.1231, 0.29", "-5.72947, -189.201, -24.4135, 1.4", "-6.56034, -189.931, -24.8881, 1.62", "-7.34399, -190.428, -25.3155, 1.4", "-8.11367, -190.782, -25.7052, 1.11", "-9.40054, -191.252, -26.3027, 0.81", "-10.1147, -191.494, -26.6281, 0.59", "-10.9036, -191.784, -27.0135, 0.74", "-11.6626, -192.139, -27.4135, 0.81", "-12.2549, -192.596, -27.7634, 0.52", "-12.6924, -193.061, -28.0565, 0.52", "-13.0893, -193.583, -28.3206, 0.74", "-13.637, -194.324, -28.7137, 0.74", "-13.9226, -194.786, -28.9327, 0.74", "-14.216, -195.306, -29.1939, 0.52", "-14.6448, -196.129, -29.563, 0.52", "-14.8763, -196.581, -29.7494, 0.52", "-15.3088, -197.471, -30.0569, 1.69", "-15.565, -198.062, -30.215, 2.14", "-16.0206, -199.313, -30.477, 1.55", "-16.4298, -200.628, -30.6892, 0.29", "-16.6406, -201.398, -30.7849, 0.29", "-16.9097, -202.458, -30.8867, 0.44", "-17.1543, -203.471, -30.9467, 0.59", "-17.3666, -204.37, -30.9772, 0.59", "-17.5752, -205.288, -30.9716, 0.29", "-17.6887, -205.782, -30.9694, 0.29", "-17.8446, -206.47, -30.9667, 0.96", "-17.9709, -207.074, -30.9667, 1.03", "-18.1237, -207.913, -30.9761, 0.52", "-18.286, -209.007, -31.0021, 0.29", "-18.3587, -209.628, -31.0214, 0.81", "-18.4279, -210.349, -31.0445, 0.96", "-18.4759, -210.905, -31.0642, 0.96", "-18.5586, -211.88, -31.1016, 0.29", "-18.6719, -212.993, -31.1382, 0.29", "-18.8131, -214.157, -31.2068, 1.47", "-18.9173, -214.971, -31.2712, 1.92", "-18.9646, -215.367, -31.3079, 1.92", "-19.078, -216.352, -31.3931, 1.33", "-19.1921, -217.447, -31.4957, 0.29", "-19.3024, -218.563, -31.6106, 0.29", "-19.3831, -219.453, -31.7164, 0.29", "-19.5525, -221.387, -31.9647, 0.29", "-19.6535, -222.704, -32.1274, 1.4", "-19.7035, -223.506, -32.2211, 2.14", "-19.7205, -223.856, -32.2595, 2.28", "-19.7389, -224.428, -32.3115, 2.28", "-19.7575, -225.019, -32.3459, 1.92", "-19.7843, -225.88, -32.3232, 0.88", "-19.8174, -227.196, -32.2066, 0.29", "-19.8306, -228.001, -32.092, 0.29", "-19.8374, -228.904, -31.9343, 0.29", "-19.8412, -230.318, -31.6557, 0.29", "-19.8383, -231.766, -31.3697, 0.96", "-19.8306, -232.735, -31.1898, 1.62", "-19.8241, -233.283, -31.0925, 1.62", "-19.8199, -233.8, -31.0129, 1.62", "-19.8226, -234.911, -30.8881, 1.11", "-19.8483, -236.269, -30.8663, 0.29", "-19.8932, -237.279, -30.9172, 0.29", "-19.9434, -238.079, -30.9803, 0.59", "-19.9778, -238.476, -31.0193, 0.66", "-20.0302, -238.956, -31.0712, 0.66", "-20.2078, -240.275, -31.2178, 0.29", "-20.4698, -241.803, -31.4128, 0.29", "-20.7103, -242.987, -31.5701, 0.96", "-20.9375, -243.92, -31.6847, 1.4", "-21.124, -244.62, -31.7579, 1.4", "-21.3244, -245.343, -31.8193, 1.4", "-21.5955, -246.301, -31.8738, 0.88", "-21.9312, -247.472, -31.9317, 0.29", "-22.2309, -248.543, -31.9688, 0.29", "-22.5458, -249.625, -31.9957, 0.44", "-22.7597, -250.311, -32.0, 0.66", "-22.9402, -250.863, -31.9881, 0.66", "-23.2614, -251.846, -31.9245, 0.29", "-23.4507, -252.437, -31.8818, 0.29", "-23.7006, -253.191, -31.86, 0.29", "-24.0754, -254.222, -31.8971, 0.29", "-24.3078, -254.81, -31.9576, 0.52", "-24.63, -255.623, -32.087, 0.66", "-24.8881, -256.433, -32.21, 0.66", "-25.1692, -257.693, -32.401, 1.4", "-25.2918, -258.795, -32.588, 2.28", "-25.3124, -259.891, -32.7934, 2.5", "-25.2625, -260.507, -32.9007, 2.5", "-24.8183, -262.658, -33.2381, 0.22", "-24.5322, -263.526, -33.344, 0.22", "-24.0175, -264.625, -33.4372, 0.37", "-23.6246, -265.274, -33.4692, 0.44", "-22.8982, -266.228, -33.6134, 0.29", "-22.1153, -267.101, -33.9033, 0.88", "-21.6802, -267.504, -34.1948, 1.4", "-21.3614, -267.79, -34.4874, 1.4", "-20.958, -268.197, -34.9763, 1.11", "-19.787, -269.596, -36.806, 0.29", "-19.443, -270.102, -37.4787, 0.29", "-18.956, -270.991, -38.6149, 0.81", "-18.7328, -271.575, -39.2369, 0.81", "-18.4088, -272.827, -40.3348, 0.22", "-18.3189, -273.355, -40.712, 0.22", "-18.2314, -274.18, -41.1333, 0.44", "-18.1983, -274.648, -41.3285, 0.59", "-18.1052, -276.614, -41.9936, 0.22", "-18.0849, -277.301, -42.2118, 0.74", "-18.0755, -277.913, -42.3925, 1.03", "-18.0555, -278.567, -42.5734, 1.03", "-18.0313, -279.208, -42.74, 0.74", "-18.004, -279.804, -42.893, 0.37", "-17.9172, -281.316, -43.2911, 0.22", "-17.8473, -282.821, -43.6905, 0.22", "-17.8108, -283.954, -43.9829, 0.88", "-17.7934, -284.791, -44.1956, 1.62", "-17.7902, -285.251, -44.3113, 1.84", "-17.7995, -285.806, -44.446, 1.84", "-17.8485, -286.952, -44.7058, 0.52", "-17.9327, -287.92, -44.9141, 0.22", "-18.0389, -288.696, -45.077, 0.22", "-18.1599, -289.365, -45.2113, 0.37", "-18.2173, -289.626, -45.2539, 0.37", "-18.394, -290.271, -45.3504, 0.22", "-18.5622, -290.795, -45.4209, 0.74", "-18.7683, -291.392, -45.5025, 0.74", "-18.9651, -291.932, -45.5687, 0.59", "-19.4152, -293.102, -45.6947, 0.22", "-19.6397, -293.643, -45.738, 0.22", "-19.9685, -294.368, -45.7477, 0.59", "-20.2241, -294.891, -45.7129, 0.59", "-20.4883, -295.432, -45.6196, 0.29", "-20.774, -295.986, -45.4885, 0.22", "-21.2278, -296.75, -45.3113, 0.37", "-21.8413, -297.666, -45.0989, 0.44", "-22.4365, -298.317, -44.9917, 0.59", "-23.2477, -298.977, -44.9578, 0.37", "-23.7756, -299.264, -44.9964, 0.22", "-25.1647, -299.705, -45.232, 2.21", "-25.7136, -299.751, -45.3736, 2.5", "-27.9188, -299.427, -46.081, 0.22", "-28.611, -299.204, -46.33, 0.22", "-29.5676, -298.713, -46.7446, 0.66", "-30.0335, -298.398, -46.9759, 0.66", "-30.7029, -297.86, -47.3394, 0.37", "-31.6472, -297.066, -47.9022, 1.92", "-31.9831, -296.785, -48.1117, 1.92", "-33.7129, -295.586, -49.2547, 0.44", "-34.4809, -295.156, -49.7719, 0.59", "-34.9379, -294.97, -50.0516, 0.37", "-35.6327, -294.812, -50.4042, 0.37", "-36.3463, -294.724, -50.7441, 0.22", "-38.0272, -294.682, -51.4158, 0.29", "-38.5984, -294.757, -51.5618, 0.22", "-39.5241, -294.926, -51.7406, 0.22", "-40.7959, -295.155, -51.9498, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.86442, -74.1646, -9.8661, 0.74", "-11.282, -75.2266, -9.50553, 0.74", "-11.8449, -75.6073, -9.3608, 0.74", "-12.6665, -76.0864, -9.17222, 0.74", "-13.2473, -76.3686, -9.05236, 0.52", "-13.8632, -76.5741, -8.95647, 0.52", "-14.4633, -76.7111, -8.89021, 0.88", "-14.9937, -76.6825, -8.90971, 0.88", "-15.8692, -76.4976, -9.02387, 0.59", "-16.4256, -76.3366, -9.12731, 0.37", "-17.2941, -76.1124, -9.33564, 0.37", "-17.8302, -76.0301, -9.50707, 1.11", "-18.2859, -76.0543, -9.6887, 1.47", "-18.7254, -76.1478, -9.86947, 1.47", "-19.043, -76.2456, -9.99053, 1.47", "-19.7665, -76.4769, -10.2471, 0.96", "-20.408, -76.6406, -10.4486, 0.59", "-20.9898, -76.7319, -10.587, 0.59", "-21.58, -76.7852, -10.6644, 0.59", "-22.1987, -76.8386, -10.7255, 0.81", "-22.7838, -76.8914, -10.7692, 0.81", "-23.2345, -76.9328, -10.7736, 0.81", "-23.7642, -77.002, -10.7628, 0.81", "-24.3541, -77.2581, -10.8378, 0.22", "-24.7614, -77.8307, -11.07, 0.22", "-25.0278, -78.2875, -11.2859, 0.66", "-25.1741, -78.5592, -11.4273, 0.88", "-25.3884, -78.9528, -11.6527, 0.88", "-25.7104, -79.4084, -12.0129, 0.44", "-26.1938, -79.8529, -12.486, 1.4", "-26.6498, -80.0864, -12.8753, 2.14", "-26.8557, -80.1417, -13.0441, 2.58", "-27.2892, -80.1764, -13.3757, 2.36", "-28.47, -80.1419, -14.2627, 1.69", "-29.0908, -80.0818, -14.7093, 0.37", "-29.841, -79.9768, -15.1839, 0.37", "-30.4486, -79.8875, -15.5254, 0.37", "-31.664, -79.7502, -16.134, 1.92", "-32.162, -79.7209, -16.3609, 2.14", "-32.6562, -79.7354, -16.5636, 2.5", "-34.1141, -79.9196, -17.1962, 0.44", "-34.5677, -80.0167, -17.4028, 0.44", "-35.2665, -80.1803, -17.7513, 0.44", "-35.9077, -80.3088, -18.1026, 0.44", "-36.5705, -80.397, -18.4824, 1.4", "-37.2975, -80.4638, -18.9185, 2.06", "-37.9536, -80.5136, -19.3508, 2.06", "-38.7613, -80.5288, -19.9114, 0.66", "-39.4017, -80.5177, -20.3996, 0.81", "-40.0966, -80.5011, -20.9824, 0.52", "-40.6729, -80.5144, -21.5592, 1.77", "-41.0656, -80.5627, -22.0395, 2.28", "-42.1888, -80.8805, -23.7479, 1.33", "-42.5538, -81.0767, -24.4497, 1.77", "-42.7561, -81.2196, -24.9106, 1.77", "-43.1155, -81.5094, -25.8095, 0.74", "-43.3899, -81.7465, -26.5281, 0.52", "-43.802, -82.1309, -27.5659, 0.52", "-44.2233, -82.5996, -28.6146, 0.88", "-44.6698, -83.0553, -29.5547, 1.47", "-45.1417, -83.5121, -30.4198, 0.22", "-45.3896, -83.7519, -30.829, 0.22", "-45.7068, -84.0832, -31.3139, 0.81", "-46.0086, -84.4485, -31.7508, 0.96", "-46.3786, -84.9404, -32.2554, 1.55", "-46.7107, -85.436, -32.6821, 1.55", "-47.0671, -85.9774, -33.1236, 0.37", "-47.3252, -86.3615, -33.4436, 0.74", "-47.6631, -86.8344, -33.8687, 0.81", "-48.1011, -87.4539, -34.4645, 0.29", "-48.2924, -87.7508, -34.7571, 0.96", "-48.5437, -88.1855, -35.1874, 1.33", "-48.8461, -88.7938, -35.7992, 0.74", "-49.0444, -89.3008, -36.3071, 0.59", "-49.2573, -90.1025, -37.0922, 0.29", "-49.3107, -90.6223, -37.5645, 0.29", "-49.2977, -91.1016, -37.9909, 0.29", "-49.234, -91.4703, -38.2929, 1.18", "-49.1272, -91.8156, -38.5679, 1.69", "-48.9084, -92.3161, -38.9538, 1.33", "-48.5457, -93.0181, -39.501, 0.22", "-48.3763, -93.3386, -39.7587, 0.22", "-48.1773, -93.7546, -40.0885, 0.96", "-48.06, -94.0497, -40.3148, 1.11", "-47.8684, -94.6183, -40.7322, 0.52", "-47.6055, -95.5389, -41.3755, 0.22", "-47.4975, -95.9773, -41.6722, 0.22", "-47.3989, -96.4584, -41.9931, 0.88", "-47.344, -96.8089, -42.2409, 1.03", "-47.2708, -97.4134, -42.6951, 0.22", "-47.2392, -97.6913, -42.9142, 0.22", "-47.1855, -98.0959, -43.2461, 0.66", "-47.1132, -98.5457, -43.6162, 0.74", "-46.9163, -99.591, -44.4533, 0.22", "-46.7677, -100.356, -45.0076, 0.22", "-46.6174, -101.337, -45.6293, 0.96", "-46.5739, -101.711, -45.838, 1.25", "-46.5494, -102.218, -46.0677, 1.25", "-46.5519, -102.976, -46.3313, 0.66", "-46.6218, -103.919, -46.5746, 0.15", "-46.7724, -104.73, -46.7403, 0.37", "-46.8832, -105.11, -46.8143, 0.37", "-47.393, -106.493, -47.0956, 0.22", "-47.4898, -106.707, -47.1458, 0.74", "-47.7236, -107.162, -47.2723, 0.88", "-48.5274, -108.602, -47.7132, 0.22", "-48.8376, -109.144, -47.8801, 0.74", "-49.1455, -109.669, -48.0363, 0.74", "-49.8216, -110.811, -48.384, 0.22", "-50.3819, -111.771, -48.6646, 0.22", "-50.9964, -112.878, -48.9343, 0.22", "-51.5365, -113.928, -49.1324, 0.22", "-51.8109, -114.502, -49.2082, 0.88", "-52.0096, -114.958, -49.2458, 1.11", "-52.1781, -115.423, -49.2571, 1.11", "-52.5197, -116.562, -49.2441, 0.15", "-52.7426, -117.487, -49.2251, 0.15", "-52.8477, -118.0, -49.2118, 0.81", "-52.9297, -118.447, -49.2004, 0.96", "-53.2523, -120.112, -49.3546, 0.22", "-53.3959, -120.892, -49.4508, 0.22", "-53.5547, -121.752, -49.6137, 0.22", "-53.6187, -122.095, -49.6973, 1.18", "-53.6829, -122.422, -49.799, 1.18", "-54.2522, -124.81, -50.893, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "22.6542, 161.892, -30.574, 0.37", "22.9271, 161.28, -29.9625, 0.37", "23.1639, 160.823, -29.5068, 0.52", "23.5065, 160.207, -28.883, 0.74", "23.7917, 159.72, -28.3967, 1.11", "23.9594, 159.445, -28.1161, 1.11", "24.2016, 159.049, -27.7059, 0.81", "24.7339, 158.201, -26.7297, 0.22", "24.9888, 157.786, -26.2587, 0.22", "25.1539, 157.503, -25.9726, 0.66", "25.3231, 157.184, -25.6806, 0.66", "25.4872, 156.849, -25.3966, 0.66", "25.782, 156.173, -24.8434, 0.44", "26.0398, 155.499, -24.3129, 0.22", "26.3048, 154.744, -23.7566, 0.22", "26.4246, 154.375, -23.5003, 0.44", "26.5059, 154.118, -23.3462, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "22.6542, 161.892, -30.574, 0.22", "23.7152, 162.169, -29.7206, 0.22", "23.9643, 162.251, -29.5378, 0.44", "25.108, 162.706, -28.7198, 0.22", "25.6096, 162.919, -28.3853, 0.59", "26.0076, 163.088, -28.1478, 0.59", "27.7149, 163.814, -27.1289, 0.22", "29.7188, 164.684, -26.0018, 0.22", "30.4454, 165.017, -25.616, 0.66", "31.0276, 165.303, -25.3382, 0.81", "31.9238, 165.756, -24.9437, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "3.37804, 259.035, -38.4912, 0.59", "4.41816, 260.191, -39.9381, 0.59", "4.76511, 260.585, -40.3947, 0.44", "5.46529, 261.451, -41.3719, 0.22", "6.06247, 262.26, -42.2164, 0.81", "6.36614, 262.704, -42.6777, 0.96", "6.50159, 262.914, -42.8969, 0.96", "6.89805, 263.653, -43.6021, 0.22", "7.36443, 264.839, -44.716, 0.22", "7.66057, 265.946, -45.7255, 1.11", "7.77488, 266.565, -46.2605, 1.47", "7.79751, 266.868, -46.5196, 1.47", "7.76518, 268.199, -47.5873, 0.22", "7.61347, 269.419, -48.5096, 0.22", "7.47138, 270.139, -49.0201, 0.66", "7.38104, 270.496, -49.2715, 0.66", "6.86569, 272.206, -50.3957, 0.22", "6.33376, 273.769, -51.3633, 0.22", "5.98616, 274.66, -51.8921, 0.22", "5.55373, 275.696, -52.4839, 1.47", "5.28885, 276.289, -52.7945, 1.47", "4.34774, 278.308, -53.7156, 0.22", "4.02058, 278.967, -53.9757, 0.81", "3.72282, 279.524, -54.1588, 0.81", "2.95235, 280.894, -54.5118, 0.22", "2.30569, 281.985, -54.7365, 0.22", "1.60255, 283.122, -54.9258, 1.47", "1.28807, 283.591, -55.0057, 1.84", "0.107389, 285.291, -55.284, 0.22", "-0.824765, 286.596, -55.4743, 0.22", "-1.17084, 287.047, -55.5327, 0.22", "-2.12845, 288.219, -55.7129, 1.55", "-2.74628, 288.922, -55.8327, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.37804, 259.035, -38.4912, 0.22", "3.94474, 261.872, -39.6647, 0.22", "4.28926, 263.415, -40.2996, 0.22", "4.57215, 264.612, -40.788, 0.96", "4.69964, 265.133, -40.9963, 1.18", "4.83537, 265.672, -41.2077, 1.18", "5.05779, 266.554, -41.5436, 0.22", "5.23799, 267.186, -41.7707, 0.44", "5.32025, 267.508, -41.8849, 0.44", "5.53171, 268.438, -42.2017, 0.22", "5.70853, 269.255, -42.4734, 0.44", "5.9006, 270.161, -42.771, 0.44", "6.45073, 272.936, -43.6469, 0.22", "6.88963, 275.272, -44.3941, 0.22", "7.049, 276.148, -44.6852, 0.66", "7.13309, 276.627, -44.8509, 0.74", "7.2591, 277.388, -45.139, 0.22", "7.5608, 279.24, -45.893, 0.22", "7.72842, 280.327, -46.3513, 1.03", "7.83469, 281.046, -46.6642, 1.25", "7.91184, 281.589, -46.9039, 1.25", "8.16341, 283.416, -47.7213, 0.22", "8.57765, 286.416, -49.0835, 0.22", "8.72253, 287.427, -49.5454, 0.74", "8.80988, 288.012, -49.795, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.7741, 85.3796, -4.65372, 0.37", "1.51029, 93.6563, -4.39137, 0.37", "6.62212, 101.502, -4.31513, 0.37", "11.3518, 109.262, -1.93439, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.7741, 85.3796, -4.65372, 0.22", "-0.182549, 93.9707, -9.54192, 0.37", "2.25008, 101.8, -15.7229, 0.37", "4.78532, 109.164, -22.4649, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "95.3568, -4.69632, 12.9785, 0.37", "108.241, -7.4579, 13.3288, 0.37", "121.418, -8.2378, 13.9821, 0.37", "134.465, -7.91798, 16.0961, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "95.3568, -4.69632, 12.9785, 0.22", "106.053, -7.16804, 13.3875, 0.37", "117.056, -7.71368, 13.5185, 0.37", "127.977, -8.95082, 14.1901, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "57.7616, 9.50459, 2.50181, 0.52", "58.9291, 9.69167, 2.81553, 0.52", "59.3836, 9.74296, 2.93944, 0.52", "59.8571, 9.77716, 3.09878, 0.52", "60.7662, 9.82656, 3.43119, 0.52", "61.3103, 9.84116, 3.64041, 0.88", "62.1432, 9.84876, 3.95188, 0.88", "62.7603, 9.85296, 4.17361, 0.88", "63.4191, 9.78186, 4.40661, 0.81", "63.842, 9.65165, 4.52308, 0.81", "64.4768, 9.31494, 4.65107, 0.59", "64.9819, 8.94582, 4.70222, 0.59", "65.5211, 8.47752, 4.68907, 0.59", "66.0526, 7.9834, 4.61229, 0.74", "66.8788, 7.14008, 4.41949, 0.66", "67.2165, 6.76225, 4.32565, 0.66", "67.7258, 6.1405, 4.16804, 0.52", "68.0706, 5.71134, 4.05447, 0.52", "68.5152, 5.18079, 3.90164, 0.81", "69.0677, 4.52269, 3.70246, 0.81", "69.433, 4.06441, 3.57529, 0.81", "69.8723, 3.4594, 3.40921, 0.81", "70.3957, 2.65401, 3.19984, 0.88", "70.8111, 1.93798, 3.02451, 1.11", "71.0647, 1.46643, 2.90864, 1.11", "71.5283, 0.514525, 2.68469, 0.88", "71.841, -0.249314, 2.53816, 0.96", "72.0395, -0.85039, 2.46103, 0.96", "72.1751, -1.35643, 2.42631, 0.96", "72.2859, -1.82109, 2.41225, 0.66", "72.4638, -2.56293, 2.43213, 0.66", "72.7317, -3.5421, 2.51417, 0.81", "73.0113, -4.31732, 2.6098, 1.11", "73.4022, -5.18896, 2.74924, 0.96", "73.744, -5.80606, 2.83773, 0.81", "74.2669, -6.5815, 2.93275, 0.81", "74.9222, -7.37576, 3.00134, 0.59", "75.4917, -7.96665, 3.02075, 0.37", "76.0227, -8.46696, 3.0084, 0.37", "76.8128, -9.18449, 2.9501, 0.59", "77.2457, -9.58128, 2.88334, 0.88", "77.4846, -9.81077, 2.82388, 1.11", "77.7895, -10.131, 2.74216, 1.11", "78.1923, -10.5826, 2.64778, 0.74", "78.5166, -10.9271, 2.57447, 0.74", "78.8367, -11.2788, 2.49343, 0.74", "79.3212, -11.8364, 2.33233, 0.74", "79.8099, -12.4222, 2.12602, 0.74", "80.2534, -12.952, 1.92363, 0.66", "80.6732, -13.4447, 1.71829, 0.66", "81.229, -14.0886, 1.42661, 0.96", "81.8811, -14.8636, 1.0451, 1.4", "82.2095, -15.287, 0.818344, 1.62", "82.5433, -15.7529, 0.550769, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "57.7616, 9.50459, 2.50181, 0.88", "58.6936, 10.4169, 2.67154, 0.88", "59.5393, 11.1494, 2.85437, 0.88", "60.5019, 11.8512, 3.07292, 0.88", "61.5557, 12.4994, 3.3055, 0.88", "62.8128, 13.1701, 3.59183, 0.74", "63.6111, 13.569, 3.78385, 0.74", "64.7473, 14.0538, 4.08909, 0.88", "65.7732, 14.4238, 4.36865, 0.88", "66.6246, 14.6937, 4.58788, 0.88", "67.4523, 14.9452, 4.79059, 0.66", "68.0323, 15.1467, 4.91968, 0.66", "68.8062, 15.5124, 5.04657, 0.88", "69.2662, 15.7976, 5.0984, 0.88", "69.7044, 16.1164, 5.13142, 0.88", "70.1489, 16.4535, 5.15623, 0.88", "70.9775, 17.0667, 5.20315, 0.59", "71.567, 17.4818, 5.27497, 0.59", "72.0174, 17.8127, 5.36481, 0.81", "72.6057, 18.2882, 5.51973, 0.81", "73.0528, 18.6987, 5.66111, 0.81", "73.5557, 19.1981, 5.83614, 0.66", "74.2758, 19.9378, 6.10162, 0.59", "75.0324, 20.8573, 6.38979, 0.59", "75.4361, 21.4266, 6.53205, 0.59", "75.8927, 22.1433, 6.66264, 0.44", "76.1791, 22.5996, 6.71525, 0.44", "76.4885, 23.0812, 6.74115, 0.44", "77.2628, 24.2413, 6.75393, 0.44", "77.8791, 25.1131, 6.75541, 0.66", "78.395, 25.8249, 6.75295, 0.66", "79.0335, 26.6958, 6.74309, 0.74", "79.5319, 27.375, 6.73118, 0.96", "79.9163, 27.8813, 6.72025, 0.96", "80.4883, 28.555, 6.70341, 0.66", "81.0508, 29.1845, 6.68739, 0.66", "81.9449, 30.1644, 6.66114, 0.59", "82.7711, 31.0958, 6.65867, 0.59", "83.3042, 31.7103, 6.67051, 0.81", "83.7076, 32.1904, 6.68792, 0.81", "84.399, 32.9799, 6.72751, 0.52", "84.9371, 33.5394, 6.76206, 0.52", "85.6546, 34.2357, 6.81969, 0.52", "86.2596, 34.8074, 6.87078, 0.52", "86.8402, 35.3437, 6.91635, 0.37", "87.877, 36.2768, 6.98927, 0.37", "88.5601, 36.8794, 7.02754, 0.59", "88.9976, 37.2392, 7.04194, 0.59", "89.9284, 37.9741, 7.04355, 0.74", "90.4139, 38.3618, 7.04359, 0.74", "90.826, 38.7059, 7.0485, 0.74", "91.4102, 39.2583, 7.07119, 0.74", "91.8016, 39.6502, 7.05441, 0.44", "92.3635, 40.1913, 6.95337, 0.44", "92.8493, 40.6175, 6.81921, 0.81", "93.6685, 41.2792, 6.54282, 0.81", "94.2724, 41.7226, 6.29938, 0.66", "95.3281, 42.4533, 5.84203, 0.52", "96.1328, 43.015, 5.44475, 0.44", "96.6651, 43.3699, 5.14387, 0.44", "97.1306, 43.6741, 4.85038, 0.44", "97.4947, 43.9012, 4.59301, 0.44", "98.1046, 44.2541, 4.1775, 0.74", "98.6348, 44.5621, 3.94154, 0.59", "98.9915, 44.8068, 3.80992, 0.59", "105.533, 51.4419, 5.36609, 0.59", "112.302, 57.8892, 6.81909, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-84.6949, -250.749, 3.81232, 0.52", "-85.3917, -252.269, 3.77898, 0.52", "-85.6823, -252.883, 3.77363, 0.29", "-86.0849, -253.685, 3.76424, 0.44", "-86.4654, -254.43, 3.75138, 0.44", "-86.7683, -255.007, 3.73923, 0.29", "-87.2317, -255.845, 3.71062, 0.29", "-87.7089, -256.64, 3.67582, 0.81", "-88.074, -257.249, 3.62476, 1.18", "-88.2672, -257.581, 3.58812, 1.4", "-88.5726, -258.135, 3.52075, 1.4", "-88.8423, -258.668, 3.45225, 1.11", "-89.3799, -259.824, 3.30626, 0.52", "-89.7432, -260.734, 3.20067, 0.44", "-89.997, -261.467, 3.12315, 0.74", "-90.2865, -262.351, 3.03948, 0.81", "-90.4932, -263.018, 2.9785, 0.81", "-90.6939, -263.725, 2.91281, 0.74", "-90.9339, -264.665, 2.86669, 0.22", "-91.0392, -265.099, 2.85148, 0.22", "-91.2058, -265.865, 2.81975, 0.22", "-91.3214, -266.53, 2.8091, 0.66", "-91.4171, -267.227, 2.82518, 0.81", "-91.5329, -268.349, 2.88951, 0.66", "-91.5945, -269.375, 2.98898, 0.22", "-91.5996, -270.293, 3.10815, 0.22", "-91.5646, -270.964, 3.21566, 0.22", "-91.5147, -271.616, 3.35444, 0.96", "-91.4936, -271.951, 3.43457, 1.18", "-91.468, -272.449, 3.55325, 1.18", "-91.4462, -272.858, 3.6769, 1.18", "-91.4364, -273.639, 3.90289, 0.74", "-91.4815, -274.817, 4.21326, 0.22", "-91.5127, -275.204, 4.31003, 0.22", "-91.5604, -275.655, 4.42165, 0.44", "-91.6068, -276.044, 4.50862, 0.44", "-91.7199, -277.065, 4.70904, 0.22", "-91.7841, -277.705, 4.81139, 0.96", "-91.8168, -278.196, 4.86673, 1.18", "-91.8387, -278.667, 4.91255, 1.25", "-91.8782, -279.562, 4.98909, 0.96", "-91.9729, -280.846, 5.08675, 0.29", "-92.0747, -281.854, 5.15228, 0.22", "-92.2285, -282.991, 5.20724, 0.22", "-92.331, -283.575, 5.23063, 0.81", "-92.4416, -284.049, 5.2449, 0.96", "-92.9289, -285.692, 5.29457, 0.22", "-93.1154, -286.204, 5.31039, 0.22", "-93.4398, -287.017, 5.3437, 0.59", "-93.6915, -287.612, 5.3753, 0.59", "-94.0583, -288.506, 5.42648, 0.52", "-94.3393, -289.242, 5.47437, 0.52", "-94.6892, -290.245, 5.56002, 0.52", "-94.8216, -290.64, 5.59936, 0.96", "-95.037, -291.315, 5.6719, 0.96", "-95.2684, -292.077, 5.75818, 0.59", "-95.6552, -293.365, 5.94547, 0.22", "-96.0426, -294.697, 6.14651, 0.22", "-96.2218, -295.321, 6.24585, 0.22", "-96.3899, -295.873, 6.33942, 0.96", "-96.5068, -296.251, 6.4092, 1.18", "-96.7499, -297.003, 6.56791, 0.52", "-97.6203, -306.261, 6.06006, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-84.6949, -250.749, 3.81232, 0.29", "-86.9657, -249.989, 4.81544, 0.29", "-88.1961, -249.91, 5.30156, 0.37", "-88.7635, -250.023, 5.50215, 0.37", "-90.0605, -250.487, 5.98479, 0.37", "-91.3357, -250.998, 6.30967, 0.52", "-92.46, -251.464, 6.52746, 0.59", "-94.002, -252.25, 6.70088, 0.59", "-95.3828, -252.991, 6.78876, 0.37", "-96.6643, -253.689, 6.82282, 0.37", "-98.9543, -254.942, 6.79198, 0.37", "-100.011, -255.462, 6.75726, 0.37", "-100.989, -255.901, 6.71911, 0.29", "-101.768, -256.22, 6.69733, 0.29", "-102.644, -256.572, 6.69524, 0.81", "-103.343, -256.883, 6.71939, 0.81", "-104.285, -257.423, 6.87108, 0.81", "-105.867, -258.49, 7.1781, 0.29", "-106.616, -259.068, 7.34677, 0.66", "-107.167, -259.54, 7.50064, 0.66", "-107.676, -260.013, 7.66348, 0.66", "-109.494, -261.824, 8.30387, 0.29", "-110.303, -262.667, 8.58196, 0.44", "-111.002, -263.393, 8.81981, 0.29", "-111.842, -264.228, 9.08362, 0.74", "-112.466, -264.79, 9.23773, 0.74", "-113.503, -265.592, 9.43262, 0.52", "-115.353, -266.8, 9.67777, 0.29", "-116.46, -267.444, 9.79082, 0.52", "-117.214, -267.838, 9.82629, 0.52", "-118.814, -268.592, 9.79214, 0.29", "-120.008, -269.092, 9.73696, 0.29", "-120.736, -269.349, 9.68925, 0.59", "-121.601, -269.611, 9.60235, 0.59", "-123.168, -270.058, 9.40859, 0.22", "-124.045, -270.297, 9.31616, 0.29", "-125.359, -270.668, 9.2216, 0.29", "-125.979, -270.854, 9.18132, 0.29", "-127.564, -271.398, 9.08665, 0.37", "-128.748, -271.943, 9.11627, 0.37", "-129.945, -272.644, 9.27301, 0.52", "-131.308, -273.621, 9.5433, 1.55", "-132.12, -274.306, 9.73546, 1.92", "-132.889, -275.026, 9.95199, 1.92", "-134.646, -276.832, 10.5634, 0.29", "-135.791, -278.11, 10.9886, 0.29", "-136.706, -279.217, 11.3619, 0.29", "-137.429, -280.116, 11.6802, 0.74", "-137.788, -280.566, 11.8403, 0.96", "-138.108, -280.949, 11.9753, 1.11", "-139.038, -282.081, 12.3575, 0.52", "-139.613, -282.844, 12.6468, 0.29", "-140.444, -283.952, 13.1204, 0.22", "-141.012, -284.672, 13.4575, 0.44", "-141.498, -285.258, 13.7516, 0.44", "-142.841, -286.866, 14.5892, 0.22", "-143.652, -287.823, 15.1136, 0.22", "-144.435, -288.707, 15.6137, 1.25", "-145.151, -289.506, 16.0934, 1.55", "-145.496, -289.869, 16.3187, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "82.5433, -15.7529, 0.550769, 0.74", "84.1047, -16.6336, 1.779, 0.74", "84.5588, -16.9058, 2.10307, 0.74", "85.3377, -17.4129, 2.59051, 0.59", "86.2552, -18.066, 3.06898, 0.59", "87.1093, -18.7231, 3.43953, 0.59", "87.5368, -19.0628, 3.60533, 0.59", "88.3801, -19.7924, 3.84397, 0.59", "89.0999, -20.4389, 4.00422, 0.81", "90.0555, -21.289, 4.21305, 0.81", "90.8451, -21.9616, 4.3852, 0.37", "91.6654, -22.6141, 4.57557, 0.37", "92.6243, -23.3677, 4.81117, 0.37", "93.5998, -24.1433, 5.08723, 0.37", "94.5325, -24.8562, 5.3876, 0.37", "95.9326, -25.8827, 5.89684, 0.22", "97.4251, -26.9478, 6.47578, 0.22", "105.33, -34.5694, 8.57042, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "82.5433, -15.7529, 0.550769, 0.37", "82.5289, -16.9274, 0.531871, 0.37", "82.5767, -17.6586, 0.55221, 0.37", "82.6627, -18.3345, 0.584396, 0.37", "82.8026, -19.0138, 0.669267, 0.37", "82.9522, -19.5946, 0.756115, 0.37", "83.1573, -20.2679, 0.873755, 0.29", "83.5201, -21.2211, 1.0137, 0.22", "83.9333, -22.2463, 1.11599, 0.22", "84.4818, -23.5412, 1.1821, 0.22", "84.6869, -24.0283, 1.18245, 1.18", "84.8326, -24.442, 1.14611, 1.4", "85.0989, -25.7654, 0.900247, 1.4", "85.1325, -26.8765, 0.599691, 0.44", "85.0909, -27.2578, 0.490328, 0.44", "84.9651, -27.8391, 0.320937, 0.29", "84.6919, -28.7905, 0.098163, 0.29", "84.2939, -29.9799, -0.137997, 0.22", "83.9493, -30.8617, -0.222622, 0.22", "83.7028, -31.3847, -0.254064, 1.03", "83.5715, -31.6462, -0.257487, 1.33", "83.3814, -32.0049, -0.239565, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-145.496, -289.869, 16.3187, 0.29", "-146.458, -288.961, 16.6938, 0.29", "-146.673, -288.759, 16.7704, 0.52", "-147.007, -288.442, 16.8789, 0.59", "-148.932, -286.628, 17.3738, 0.22", "-149.477, -286.124, 17.4931, 0.22", "-150.232, -285.441, 17.637, 0.66", "-150.641, -285.07, 17.6848, 0.66", "-152.385, -283.552, 17.8265, 0.22", "-153.11, -282.951, 17.8641, 0.22", "-153.777, -282.445, 17.8893, 0.52", "-154.252, -282.11, 17.9063, 0.66", "-155.557, -281.258, 17.9546, 0.22", "-158.145, -279.603, 18.0545, 0.22", "-159.815, -278.586, 18.1254, 0.22", "-161.357, -277.656, 18.2269, 1.18", "-161.789, -277.4, 18.2553, 1.4", "-162.454, -277.018, 18.3031, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-145.496, -289.869, 16.3187, 0.22", "-146.578, -291.452, 16.5619, 0.22", "-147.432, -292.756, 16.8357, 0.22", "-147.792, -293.343, 16.9684, 0.44", "-147.947, -293.602, 17.0283, 0.44", "-149.361, -296.077, 17.5968, 0.22", "-150.023, -297.235, 17.8628, 0.44", "-150.581, -298.208, 18.1, 0.22", "-150.926, -298.867, 18.2692, 0.59", "-151.214, -299.437, 18.4238, 0.66", "-151.421, -299.877, 18.5498, 0.44", "-155.306, -310.086, 21.6312, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "axon_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_ChC_55f3c5c127_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.22318, -8.29373, -8.23861, 1.77 ) }
    dend_49 { pt3dadd( -2.88939, -9.32144, -8.40183, 1.77 ) }
    dend_49 { pt3dadd( -2.37924, -10.9323, -8.64272, 1.55 ) }
    dend_49 { pt3dadd( -2.07961, -12.0005, -8.83403, 1.69 ) }
    dend_49 { pt3dadd( -1.87449, -12.8304, -9.00074, 1.77 ) }
    dend_49 { pt3dadd( -1.69479, -13.6379, -9.20237, 1.77 ) }
    dend_49 { pt3dadd( -1.46666, -14.7203, -9.5413, 1.25 ) }
    dend_49 { pt3dadd( -1.09687, -16.3808, -9.99823, 0.74 ) }
    dend_49 { pt3dadd( -1.80771, -15.6573, -10.781, 0.74 ) }
    dend_49 { pt3dadd( -2.36203, -15.4015, -11.614, 0.74 ) }
    dend_49 { pt3dadd( -3.33401, -15.0539, -13.1115, 1.18 ) }
    dend_49 { pt3dadd( -3.85652, -14.9666, -13.9653, 1.18 ) }
    dend_49 { pt3dadd( -4.64025, -14.791, -15.1456, 0.52 ) }
    dend_49 { pt3dadd( -5.56769, -14.4715, -16.4134, 0.52 ) }
    dend_49 { pt3dadd( -6.62192, -14.5178, -18.0159, 0.74 ) }
    dend_49 { pt3dadd( -7.06617, -14.7504, -19.106, 0.74 ) }
    dend_49 { pt3dadd( -7.27812, -15.1089, -20.0573, 0.74 ) }
    dend_49 { pt3dadd( -7.62018, -15.5709, -21.4929, 1.11 ) }
    dend_49 { pt3dadd( -7.92553, -15.8121, -22.4118, 1.69 ) }
    dend_49 { pt3dadd( -8.42527, -15.9781, -23.3397, 1.77 ) }
    dend_49 { pt3dadd( -9.56374, -16.2975, -25.3902, 1.33 ) }
    dend_49 { pt3dadd( -10.1697, -16.5833, -26.6401, 1.4 ) }
    dend_49 { pt3dadd( -10.5267, -16.9641, -27.5788, 1.55 ) }
    dend_49 { pt3dadd( -10.7296, -17.5974, -28.5619, 1.33 ) }
    dend_49 { pt3dadd( -10.7517, -18.6893, -29.8097, 0.74 ) }
    dend_49 { pt3dadd( -10.5618, -19.5833, -30.5348, 1.03 ) }
    dend_49 { pt3dadd( -10.2844, -20.3339, -30.9932, 1.47 ) }
    dend_49 { pt3dadd( -9.98998, -20.8273, -31.3225, 1.62 ) }
    dend_49 { pt3dadd( -9.52369, -21.4164, -31.7765, 1.62 ) }
    dend_49 { pt3dadd( -8.99525, -21.8899, -32.1944, 0.52 ) }
    dend_49 { pt3dadd( -8.36712, -22.3353, -32.6555, 0.52 ) }
    dend_49 { pt3dadd( -8.21084, -22.568, -33.0517, 0.52 ) }
    dend_49 { pt3dadd( -8.24261, -23.0444, -34.0781, 0.66 ) }
    dend_49 { pt3dadd( -8.4458, -23.5122, -35.1626, 0.74 ) }
    dend_49 { pt3dadd( -8.77717, -23.7031, -35.9276, 0.44 ) }
    dend_49 { pt3dadd( -9.34815, -23.7008, -36.737, 0.44 ) }
    dend_49 { pt3dadd( -10.1898, -23.6026, -37.7661, 0.44 ) }
    dend_49 { pt3dadd( -10.7881, -23.6604, -38.6818, 0.44 ) }
    dend_49 { pt3dadd( -11.1208, -23.7743, -39.3312, 0.44 ) }
    dend_49 { pt3dadd( -11.7392, -24.1549, -40.593, 0.66 ) }
    dend_49 { pt3dadd( -12.0412, -24.7456, -41.8679, 1.11 ) }
    dend_49 { pt3dadd( -12.1975, -24.9621, -42.3107, 0.96 ) }
    dend_49 { pt3dadd( -12.6059, -25.4187, -43.3258, 1.18 ) }
    dend_49 { pt3dadd( -12.7648, -25.6141, -43.7226, 1.69 ) }
    dend_49 { pt3dadd( -13.0231, -25.9148, -44.2977, 1.69 ) }
    dend_49 { pt3dadd( -14.0074, -26.9794, -46.2223, 0.88 ) }
    dend_49 { pt3dadd( -14.6086, -27.4859, -47.2273, 2.14 ) }
    dend_49 { pt3dadd( -15.9723, -28.1705, -49.0843, 2.28 ) }
    dend_49 { pt3dadd( -16.1638, -28.2199, -49.2968, 2.28 ) }
    dend_49 { pt3dadd( -17.27, -28.3171, -50.3288, 0.44 ) }
    dend_49 { pt3dadd( -17.9016, -28.2689, -50.7929, 0.44 ) }
    dend_49 { pt3dadd( -18.6476, -28.1243, -51.2208, 0.81 ) }
    dend_49 { pt3dadd( -19.4129, -27.9393, -51.6778, 0.81 ) }
    dend_49 { pt3dadd( -19.7618, -27.8938, -51.9279, 0.96 ) }
    dend_49 { pt3dadd( -20.4549, -27.953, -52.5372, 0.66 ) }
    dend_49 { pt3dadd( -21.1519, -28.1781, -53.2528, 1.99 ) }
    dend_49 { pt3dadd( -21.6739, -28.4476, -53.8566, 2.21 ) }
    dend_49 { pt3dadd( -22.1836, -28.8028, -54.4872, 2.5 ) }
    dend_49 { pt3dadd( -23.586, -30.0221, -56.3565, 0.66 ) }
    dend_49 { pt3dadd( -24.313, -30.8176, -57.4605, 0.66 ) }
    dend_49 { pt3dadd( -24.7621, -31.436, -58.219, 0.66 ) }
    dend_49 { pt3dadd( -25.2246, -32.1715, -59.0307, 1.55 ) }
    dend_49 { pt3dadd( -25.4393, -32.5333, -59.3901, 2.21 ) }
    dend_49 { pt3dadd( -25.6465, -32.9112, -59.7331, 2.21 ) }
    dend_49 { pt3dadd( -26.2181, -34.1127, -60.7646, 0.29 ) }
    dend_49 { pt3dadd( -26.5238, -34.8877, -61.4816, 0.29 ) }
    dend_49 { pt3dadd( -26.7237, -35.4228, -61.967, 1.55 ) }
    dend_49 { pt3dadd( -26.9729, -36.0685, -62.5398, 1.99 ) }
    dend_49 { pt3dadd( -27.2021, -36.6464, -63.0646, 2.36 ) }
    dend_49 { pt3dadd( -27.8465, -38.2184, -64.5358, 0.59 ) }
    dend_49 { pt3dadd( -28.1668, -39.0242, -65.341, 1.84 ) }
    dend_49 { pt3dadd( -28.2929, -39.3982, -65.7603, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.8798, -2.25794, 2.1262, 1.92 ) }
    dend_42 { pt3dadd( -7.52341, -3.51962, 2.06075, 1.92 ) }
    dend_42 { pt3dadd( -8.1871, -4.67066, 1.99473, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -8.6987, -5.44909, 1.93889, 2.36 ) }
    dend_42 { pt3dadd( -9.42366, -6.39103, 1.86191, 2.28 ) }
    dend_42 { pt3dadd( -10.2201, -7.2607, 1.77386, 2.36 ) }
    dend_42 { pt3dadd( -11.1113, -8.06546, 1.65954, 2.36 ) }
    dend_42 { pt3dadd( -12.4944, -8.96768, 1.49637, 1.77 ) }
    dend_42 { pt3dadd( -13.2551, -9.26455, 1.4392, 1.77 ) }
    dend_42 { pt3dadd( -14.448, -9.50655, 1.4074, 1.99 ) }
    dend_42 { pt3dadd( -15.511, -9.6059, 1.47489, 1.99 ) }
    dend_42 { pt3dadd( -16.0369, -9.62396, 1.53983, 1.99 ) }
    dend_42 { pt3dadd( -16.8209, -9.6601, 1.6797, 1.77 ) }
    dend_42 { pt3dadd( -18.0343, -9.86103, 1.99363, 1.47 ) }
    dend_42 { pt3dadd( -18.9102, -10.1583, 2.24144, 1.47 ) }
    dend_42 { pt3dadd( -20.0142, -10.7637, 2.52039, 1.33 ) }
    dend_42 { pt3dadd( -20.516, -11.1341, 2.61384, 1.99 ) }
    dend_42 { pt3dadd( -21.3689, -11.8914, 2.70746, 1.99 ) }
    dend_42 { pt3dadd( -22.3514, -12.8754, 2.72001, 1.77 ) }
    dend_42 { pt3dadd( -23.4381, -14.0777, 2.62438, 1.92 ) }
    dend_42 { pt3dadd( -24.4431, -15.2204, 2.41935, 1.69 ) }
    dend_42 { pt3dadd( -25.061, -15.8838, 2.22063, 1.69 ) }
    dend_42 { pt3dadd( -25.8352, -16.6309, 1.92789, 1.84 ) }
    dend_42 { pt3dadd( -26.5415, -17.2558, 1.65817, 1.84 ) }
    dend_42 { pt3dadd( -27.4557, -18.0363, 1.32327, 1.69 ) }
    dend_42 { pt3dadd( -28.4604, -18.9057, 1.00982, 1.55 ) }
    dend_42 { pt3dadd( -29.475, -19.8467, 0.773036, 1.4 ) }
    dend_42 { pt3dadd( -30.3063, -20.6213, 0.604292, 1.25 ) }
    dend_42 { pt3dadd( -31.1761, -21.4685, 0.447605, 1.33 ) }
    dend_42 { pt3dadd( -31.9998, -22.3492, 0.35646, 1.47 ) }
    dend_42 { pt3dadd( -32.7709, -23.2836, 0.393425, 1.62 ) }
    dend_42 { pt3dadd( -33.3162, -24.1576, 0.585481, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.61792, -9.42833, -4.84787, 2.95 ) }
    dend_27 { pt3dadd( 0.860669, -11.1938, -4.76386, 2.8 ) }
    dend_27 { pt3dadd( 1.00064, -12.3769, -4.68382, 2.8 ) }
    dend_27 { pt3dadd( 1.12255, -13.6999, -4.58296, 3.02 ) }
    dend_27 { pt3dadd( 1.18088, -14.578, -4.51543, 3.02 ) }
    dend_27 { pt3dadd( 1.20528, -15.4394, -4.44566, 3.02 ) }
    dend_27 { pt3dadd( 1.18176, -16.7372, -4.33864, 3.02 ) }
    dend_27 { pt3dadd( 1.08635, -18.1101, -4.22095, 2.36 ) }
    dend_27 { pt3dadd( 0.830326, -20.5117, -4.09233, 2.36 ) }
    dend_27 { pt3dadd( 0.645496, -21.857, -4.07978, 2.43 ) }
    dend_27 { pt3dadd( 0.432868, -23.1592, -4.11183, 2.43 ) }
    dend_27 { pt3dadd( 0.154946, -24.6855, -4.20279, 2.43 ) }
    dend_27 { pt3dadd( -0.277173, -26.7929, -4.38844, 2.28 ) }
    dend_27 { pt3dadd( -0.742808, -28.9551, -4.63129, 2.14 ) }
    dend_27 { pt3dadd( -1.39289, -31.8195, -5.01126, 2.06 ) }
    dend_27 { pt3dadd( -1.84406, -33.8075, -5.30805, 2.43 ) }
    dend_27 { pt3dadd( -2.12905, -35.0735, -5.52345, 2.58 ) }
    dend_27 { pt3dadd( -2.43463, -36.4076, -5.78113, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.21333, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.472643, 7.9956, -7.5963, 1.62 ) }
    dend_20 { pt3dadd( -0.616919, 9.14648, -7.63271, 1.92 ) }
    dend_20 { pt3dadd( -0.8345, 10.6839, -7.69565, 1.33 ) }
    dend_20 { pt3dadd( -1.10891, 12.3387, -7.78838, 1.69 ) }
    dend_20 { pt3dadd( -1.33398, 13.563, -7.83557, 2.21 ) }
    dend_20 { pt3dadd( -1.5269, 14.5866, -7.82745, 2.21 ) }
    dend_20 { pt3dadd( -1.75918, 15.7387, -7.77108, 1.99 ) }
    dend_20 { pt3dadd( -1.97717, 16.7185, -7.68552, 1.77 ) }
    dend_20 { pt3dadd( -2.23602, 17.8085, -7.55971, 1.99 ) }
    dend_20 { pt3dadd( -2.51676, 18.9621, -7.42147, 1.99 ) }
    dend_20 { pt3dadd( -2.99663, 20.9887, -7.21991, 1.11 ) }
    dend_20 { pt3dadd( -3.29284, 22.2557, -7.13345, 1.11 ) }
    dend_20 { pt3dadd( -3.61027, 23.5304, -7.09912, 1.25 ) }
    dend_20 { pt3dadd( -3.9129, 24.6008, -7.09322, 1.4 ) }
    dend_20 { pt3dadd( -4.30904, 25.7707, -7.16165, 0.81 ) }
    dend_20 { pt3dadd( -4.77558, 26.8788, -7.33657, 0.74 ) }
    dend_20 { pt3dadd( -5.14633, 27.6034, -7.52278, 0.74 ) }
    dend_20 { pt3dadd( -5.60334, 28.3894, -7.77467, 0.74 ) }
    dend_20 { pt3dadd( -6.13444, 29.2454, -8.09495, 0.96 ) }
    dend_20 { pt3dadd( -6.63516, 30.0512, -8.41843, 0.96 ) }
    dend_20 { pt3dadd( -7.15757, 30.8602, -8.75113, 1.55 ) }
    dend_20 { pt3dadd( -7.74765, 31.7673, -9.13764, 2.06 ) }
    dend_20 { pt3dadd( -8.24688, 32.5932, -9.49811, 2.43 ) }
    dend_20 { pt3dadd( -8.81943, 33.7055, -9.98745, 2.36 ) }
    dend_20 { pt3dadd( -9.46768, 35.2206, -10.6369, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 7.89733, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.4071, 8.07694, 0.347277, 2.5 ) }
    dend_11 { pt3dadd( -3.76519, 10.5932, 0.294796, 1.77 ) }
    dend_11 { pt3dadd( -4.71312, 12.2936, 0.304496, 1.55 ) }
    dend_11 { pt3dadd( -5.82492, 14.229, 0.395037, 1.55 ) }
    dend_11 { pt3dadd( -6.67207, 15.7058, 0.52134, 1.33 ) }
    dend_11 { pt3dadd( -7.96462, 17.9964, 0.790097, 1.33 ) }
    dend_11 { pt3dadd( -8.77291, 19.3958, 0.996883, 1.55 ) }
    dend_11 { pt3dadd( -9.99244, 21.4689, 1.34832, 1.55 ) }
    dend_11 { pt3dadd( -11.259, 23.7234, 1.73814, 1.62 ) }
    dend_11 { pt3dadd( -12.2702, 25.7327, 2.06554, 1.4 ) }
    dend_11 { pt3dadd( -13.213, 27.9442, 2.38529, 1.4 ) }
    dend_11 { pt3dadd( -13.7493, 29.3026, 2.58389, 1.4 ) }
    dend_11 { pt3dadd( -14.5833, 31.4873, 2.88576, 1.4 ) }
    dend_11 { pt3dadd( -15.375, 33.6698, 3.09647, 1.4 ) }
    dend_11 { pt3dadd( -16.2653, 36.3673, 3.23934, 1.77 ) }
    dend_11 { pt3dadd( -17.0147, 38.7875, 3.26605, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 3.96433, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.89086, 4.02209, 1.35196, 2.58 ) }
    dend_0 { pt3dadd( 7.67625, 4.76853, 1.43398, 2.58 ) }
    dend_0 { pt3dadd( 8.56737, 5.62427, 1.55459, 1.84 ) }
    dend_0 { pt3dadd( 9.22705, 6.24513, 1.66161, 2.06 ) }
    dend_0 { pt3dadd( 10.0788, 7.04452, 1.82163, 2.06 ) }
    dend_0 { pt3dadd( 10.6416, 7.5605, 1.96378, 2.58 ) }
    dend_0 { pt3dadd( 11.2663, 8.12933, 2.15762, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 11.6793, 8.51157, 2.31425, 2.58 ) }
    dend_0 { pt3dadd( 12.4122, 9.15943, 2.62735, 2.58 ) }
    dend_0 { pt3dadd( 12.9277, 9.58284, 2.85986, 2.43 ) }
    dend_0 { pt3dadd( 14.0078, 10.4184, 3.38902, 2.21 ) }
    dend_0 { pt3dadd( 14.7957, 10.9927, 3.79101, 1.99 ) }
    dend_0 { pt3dadd( 15.428, 11.4266, 4.09409, 1.99 ) }
    dend_0 { pt3dadd( 16.2481, 11.9066, 4.44828, 1.69 ) }
    dend_0 { pt3dadd( 16.9335, 12.1813, 4.70827, 1.69 ) }
    dend_0 { pt3dadd( 18.1473, 12.3393, 5.10726, 2.06 ) }
    dend_0 { pt3dadd( 18.9092, 12.2128, 5.31472, 2.06 ) }
    dend_0 { pt3dadd( 20.7093, 11.4675, 5.79634, 1.69 ) }
    dend_0 { pt3dadd( 21.9474, 10.8224, 6.10924, 1.92 ) }
    dend_0 { pt3dadd( 23.8831, 9.57249, 6.56386, 1.92 ) }
    dend_0 { pt3dadd( 25.7263, 8.134, 6.95683, 2.06 ) }
    dend_0 { pt3dadd( 26.6712, 7.23767, 7.13462, 2.28 ) }
    dend_0 { pt3dadd( 27.38, 6.42104, 7.27753, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.835316 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -28.2929, -39.3982, -65.7603, 0.96 ) }
    dend_51 { pt3dadd( -27.0325, -42.6572, -70.2068, 0.96 ) }
    dend_51 { pt3dadd( -26.8279, -43.3511, -71.0343, 0.96 ) }
    dend_51 { pt3dadd( -26.6041, -44.2647, -72.0046, 0.96 ) }
    dend_51 { pt3dadd( -26.3248, -45.5278, -73.2412, 1.55 ) }
    dend_51 { pt3dadd( -26.1347, -46.5714, -74.1758, 0.22 ) }
    dend_51 { pt3dadd( -25.9793, -47.7501, -75.0857, 0.22 ) }
    dend_51 { pt3dadd( -25.9777, -48.4654, -75.427, 1.11 ) }
    dend_51 { pt3dadd( -25.9991, -49.1277, -75.6952, 1.4 ) }
    dend_51 { pt3dadd( -26.0081, -50.0255, -75.9794, 1.4 ) }
    dend_51 { pt3dadd( -25.9842, -51.9626, -76.4608, 0.22 ) }
    dend_51 { pt3dadd( -25.8628, -53.9679, -76.8799, 0.22 ) }
    dend_51 { pt3dadd( -25.7933, -54.6333, -77.0021, 0.74 ) }
    dend_51 { pt3dadd( -25.7489, -54.9905, -77.0551, 0.74 ) }
    dend_51 { pt3dadd( -25.4976, -56.8942, -77.2791, 0.15 ) }
    dend_51 { pt3dadd( -25.4545, -57.1895, -77.3008, 0.37 ) }
    dend_51 { pt3dadd( -25.1417, -58.8145, -77.3552, 0.22 ) }
    dend_51 { pt3dadd( -24.922, -59.732, -77.4019, 0.22 ) }
    dend_51 { pt3dadd( -24.7484, -60.4633, -77.4367, 0.74 ) }
    dend_51 { pt3dadd( -24.6082, -61.197, -77.4612, 0.88 ) }
    dend_51 { pt3dadd( -24.5937, -61.4371, -77.4668, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -28.2929, -39.3982, -65.7603, 2.87 ) }
    dend_50 { pt3dadd( -29.0328, -39.6118, -65.8705, 2.87 ) }
    dend_50 { pt3dadd( -31.3713, -40.4722, -66.3188, 0.22 ) }
    dend_50 { pt3dadd( -33.4911, -41.5159, -66.7801, 0.22 ) }
    dend_50 { pt3dadd( -34.5162, -42.0772, -67.0085, 1.69 ) }
    dend_50 { pt3dadd( -34.8386, -42.2664, -67.0809, 2.21 ) }
    dend_50 { pt3dadd( -35.3631, -42.5885, -67.1985, 2.21 ) }
    dend_50 { pt3dadd( -37.2924, -43.9497, -67.6188, 0.22 ) }
    dend_50 { pt3dadd( -38.9913, -45.408, -68.0347, 0.22 ) }
    dend_50 { pt3dadd( -39.5181, -45.9015, -68.1744, 1.25 ) }
    dend_50 { pt3dadd( -39.9484, -46.3093, -68.2897, 1.25 ) }
    dend_50 { pt3dadd( -40.5195, -46.8441, -68.4506, 1.25 ) }
    dend_50 { pt3dadd( -41.6837, -47.8624, -68.7771, 0.15 ) }
    dend_50 { pt3dadd( -42.3439, -48.4151, -68.9558, 0.15 ) }
    dend_50 { pt3dadd( -42.8636, -48.803, -69.1026, 0.96 ) }
    dend_50 { pt3dadd( -43.4535, -49.1995, -69.2885, 1.18 ) }
    dend_50 { pt3dadd( -43.724, -49.3572, -69.3775, 1.18 ) }
    dend_50 { pt3dadd( -45.4681, -50.2245, -70.05, 0.22 ) }
    dend_50 { pt3dadd( -45.9313, -50.3902, -70.2499, 0.52 ) }
    dend_50 { pt3dadd( -46.3523, -50.5174, -70.436, 0.52 ) }
    dend_50 { pt3dadd( -47.4352, -50.8107, -70.9078, 0.22 ) }
    dend_50 { pt3dadd( -48.1074, -50.9858, -71.2081, 1.25 ) }
    dend_50 { pt3dadd( -49.0951, -51.2784, -71.6357, 1.4 ) }
    dend_50 { pt3dadd( -51.002, -52.0144, -72.5161, 0.22 ) }
    dend_50 { pt3dadd( -52.3054, -52.6784, -73.1279, 0.22 ) }
    dend_50 { pt3dadd( -52.7997, -53.0038, -73.3664, 0.74 ) }
    dend_50 { pt3dadd( -53.4334, -53.5432, -73.6774, 0.88 ) }
    dend_50 { pt3dadd( -54.3142, -54.6473, -74.2675, 0.22 ) }
    dend_50 { pt3dadd( -55.0137, -56.089, -74.8701, 0.22 ) }
    dend_50 { pt3dadd( -55.2896, -57.0384, -75.2091, 1.99 ) }
    dend_50 { pt3dadd( -55.3986, -57.6225, -75.3841, 2.36 ) }
    dend_50 { pt3dadd( -55.4813, -58.1967, -75.5541, 2.36 ) }
    dend_50 { pt3dadd( -55.7984, -61.4237, -76.4943, 0.15 ) }
    dend_50 { pt3dadd( -55.8993, -63.4308, -77.1155, 0.15 ) }
    dend_50 { pt3dadd( -55.9111, -63.9536, -77.2561, 0.44 ) }
    dend_50 { pt3dadd( -55.9022, -64.9613, -77.5008, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.3162, -24.1576, 0.585481, 0.96 ) }
    dend_44 { pt3dadd( -33.883, -24.3626, 0.373687, 0.96 ) }
    dend_44 { pt3dadd( -34.4228, -24.5759, 0.168357, 1.25 ) }
    dend_44 { pt3dadd( -35.2006, -24.8829, -0.124083, 1.25 ) }
    dend_44 { pt3dadd( -36.556, -25.3753, -0.595863, 1.18 ) }
    dend_44 { pt3dadd( -37.4787, -25.6714, -0.886432, 1.11 ) }
    dend_44 { pt3dadd( -38.1894, -25.8832, -1.10288, 0.88 ) }
    dend_44 { pt3dadd( -39.1254, -26.1676, -1.40241, 0.96 ) }
    dend_44 { pt3dadd( -39.6612, -26.3304, -1.57864, 0.96 ) }
    dend_44 { pt3dadd( -40.4477, -26.575, -1.84223, 0.96 ) }
    dend_44 { pt3dadd( -41.223, -26.819, -2.0582, 0.96 ) }
    dend_44 { pt3dadd( -41.8823, -27.0199, -2.20345, 1.18 ) }
    dend_44 { pt3dadd( -42.6931, -27.2551, -2.34655, 1.03 ) }
    dend_44 { pt3dadd( -43.0945, -27.3595, -2.37628, 1.03 ) }
    dend_44 { pt3dadd( -43.9341, -27.5478, -2.34541, 1.18 ) }
    dend_44 { pt3dadd( -44.4442, -27.6396, -2.25079, 1.18 ) }
    dend_44 { pt3dadd( -45.593, -27.7771, -1.81119, 0.96 ) }
    dend_44 { pt3dadd( -46.0146, -27.8026, -1.60813, 1.11 ) }
    dend_44 { pt3dadd( -46.8352, -27.8353, -1.16948, 1.11 ) }
    dend_44 { pt3dadd( -47.4929, -27.8779, -0.809799, 1.11 ) }
    dend_44 { pt3dadd( -48.2666, -27.9572, -0.386647, 1.11 ) }
    dend_44 { pt3dadd( -49.2994, -28.1477, 0.166786, 1.55 ) }
    dend_44 { pt3dadd( -50.0385, -28.3653, 0.53285, 1.03 ) }
    dend_44 { pt3dadd( -50.9224, -28.7328, 0.957633, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -51.6759, -29.1527, 1.29447, 0.74 ) }
    dend_44 { pt3dadd( -52.1072, -29.4649, 1.47329, 0.74 ) }
    dend_44 { pt3dadd( -52.6633, -29.9748, 1.6594, 0.74 ) }
    dend_44 { pt3dadd( -53.2145, -30.5929, 1.78945, 0.66 ) }
    dend_44 { pt3dadd( -53.7071, -31.2326, 1.87997, 0.88 ) }
    dend_44 { pt3dadd( -54.0282, -31.6997, 1.91684, 1.03 ) }
    dend_44 { pt3dadd( -54.3624, -32.2499, 1.94128, 1.03 ) }
    dend_44 { pt3dadd( -54.7894, -32.9588, 1.9607, 0.88 ) }
    dend_44 { pt3dadd( -55.3226, -33.7918, 1.97206, 0.88 ) }
    dend_44 { pt3dadd( -55.6253, -34.2093, 1.97075, 0.88 ) }
    dend_44 { pt3dadd( -56.0758, -34.7219, 1.96986, 0.88 ) }
    dend_44 { pt3dadd( -56.9566, -35.5426, 1.97325, 0.88 ) }
    dend_44 { pt3dadd( -57.4734, -35.9141, 1.97646, 0.88 ) }
    dend_44 { pt3dadd( -58.2161, -36.3036, 1.98298, 0.88 ) }
    dend_44 { pt3dadd( -58.7176, -36.4822, 1.985, 0.96 ) }
    dend_44 { pt3dadd( -59.3088, -36.6376, 1.97031, 0.96 ) }
    dend_44 { pt3dadd( -59.8468, -36.7383, 1.95874, 0.96 ) }
    dend_44 { pt3dadd( -60.4493, -36.8327, 1.95133, 0.52 ) }
    dend_44 { pt3dadd( -60.8601, -36.9648, 1.95497, 0.52 ) }
    dend_44 { pt3dadd( -61.168, -37.2024, 1.98704, 0.52 ) }
    dend_44 { pt3dadd( -61.465, -37.648, 2.09376, 0.81 ) }
    dend_44 { pt3dadd( -61.6912, -38.1197, 2.23533, 0.96 ) }
    dend_44 { pt3dadd( -61.8527, -38.665, 2.40788, 0.96 ) }
    dend_44 { pt3dadd( -62.0256, -39.6421, 2.72211, 0.81 ) }
    dend_44 { pt3dadd( -62.0794, -40.1204, 2.88124, 0.81 ) }
    dend_44 { pt3dadd( -62.1206, -40.7261, 3.11017, 1.11 ) }
    dend_44 { pt3dadd( -62.1668, -41.0689, 3.2681, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -33.3162, -24.1576, 0.585481, 1.33 ) }
    dend_43 { pt3dadd( -33.8989, -24.4101, 1.17727, 1.33 ) }
    dend_43 { pt3dadd( -34.4725, -24.6639, 1.67607, 1.18 ) }
    dend_43 { pt3dadd( -35.5549, -25.1096, 2.57674, 0.88 ) }
    dend_43 { pt3dadd( -36.0824, -25.2953, 2.9827, 0.74 ) }
    dend_43 { pt3dadd( -36.8647, -25.5189, 3.52494, 0.74 ) }
    dend_43 { pt3dadd( -37.6603, -25.6965, 4.07943, 0.74 ) }
    dend_43 { pt3dadd( -38.264, -25.8105, 4.47594, 0.59 ) }
    dend_43 { pt3dadd( -38.9744, -25.9042, 4.94168, 0.59 ) }
    dend_43 { pt3dadd( -39.5331, -25.9417, 5.31645, 0.52 ) }
    dend_43 { pt3dadd( -40.0897, -25.9208, 5.75138, 0.52 ) }
    dend_43 { pt3dadd( -41.1251, -25.7574, 6.68395, 0.74 ) }
    dend_43 { pt3dadd( -41.7739, -25.6001, 7.33722, 0.59 ) }
    dend_43 { pt3dadd( -42.3692, -25.4495, 7.96001, 0.44 ) }
    dend_43 { pt3dadd( -43.0092, -25.3292, 8.64523, 0.37 ) }
    dend_43 { pt3dadd( -43.5213, -25.2932, 9.19163, 0.66 ) }
    dend_43 { pt3dadd( -43.9893, -25.33, 9.60227, 0.66 ) }
    dend_43 { pt3dadd( -44.3048, -25.3937, 9.79144, 0.66 ) }
    dend_43 { pt3dadd( -44.7258, -25.5002, 10.0128, 0.44 ) }
    dend_43 { pt3dadd( -45.2177, -25.6535, 10.2402, 0.44 ) }
    dend_43 { pt3dadd( -46.0982, -25.9283, 10.6222, 0.44 ) }
    dend_43 { pt3dadd( -47.3134, -26.3364, 11.1493, 0.74 ) }
    dend_43 { pt3dadd( -48.0343, -26.6039, 11.4548, 0.74 ) }
    dend_43 { pt3dadd( -49.0317, -26.9616, 11.8649, 0.52 ) }
    dend_43 { pt3dadd( -49.9657, -27.2817, 12.2393, 0.59 ) }
    dend_43 { pt3dadd( -50.7693, -27.5489, 12.5475, 0.44 ) }
    dend_43 { pt3dadd( -51.8866, -27.9651, 12.9683, 0.37 ) }
    dend_43 { pt3dadd( -52.6904, -28.3366, 13.264, 0.37 ) }
    dend_43 { pt3dadd( -53.5689, -28.8589, 13.5448, 0.29 ) }
    dend_43 { pt3dadd( -53.9879, -29.1906, 13.6535, 0.29 ) }
    dend_43 { pt3dadd( -54.4769, -29.6943, 13.8031, 0.29 ) }
    dend_43 { pt3dadd( -54.8899, -30.177, 13.9575, 0.37 ) }
    dend_43 { pt3dadd( -55.351, -30.7486, 14.1749, 0.37 ) }
    dend_43 { pt3dadd( -55.813, -31.3096, 14.4414, 0.37 ) }
    dend_43 { pt3dadd( -56.304, -31.9719, 14.7644, 0.66 ) }
    dend_43 { pt3dadd( -56.7914, -32.6196, 15.1057, 0.81 ) }
    dend_43 { pt3dadd( -57.1672, -33.0716, 15.3794, 0.81 ) }
    dend_43 { pt3dadd( -57.721, -33.6186, 15.7715, 0.22 ) }
    dend_43 { pt3dadd( -58.4046, -34.1879, 16.2531, 0.22 ) }
    dend_43 { pt3dadd( -65.2312, -35.8381, 20.4035, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.43463, -36.4076, -5.78113, 1.55 ) }
    dend_33 { pt3dadd( -2.18836, -37.2487, -5.67082, 1.55 ) }
    dend_33 { pt3dadd( -1.94471, -38.1052, -5.55877, 1.55 ) }
    dend_33 { pt3dadd( -1.73899, -38.8577, -5.46557, 1.55 ) }
    dend_33 { pt3dadd( -1.51567, -39.7112, -5.35802, 1.69 ) }
    dend_33 { pt3dadd( -1.35891, -40.3658, -5.27542, 1.69 ) }
    dend_33 { pt3dadd( -1.25766, -40.855, -5.21731, 1.69 ) }
    dend_33 { pt3dadd( -1.1283, -41.6662, -5.12944, 1.55 ) }
    dend_33 { pt3dadd( -0.999354, -42.7271, -5.02705, 1.47 ) }
    dend_33 { pt3dadd( -0.942589, -43.6101, -4.94632, 1.33 ) }
    dend_33 { pt3dadd( -0.947376, -44.4553, -4.8764, 1.33 ) }
    dend_33 { pt3dadd( -1.03475, -45.5761, -4.79912, 1.33 ) }
    dend_33 { pt3dadd( -1.16717, -46.3967, -4.74833, 1.11 ) }
    dend_33 { pt3dadd( -1.29909, -46.9124, -4.72061, 1.11 ) }
    dend_33 { pt3dadd( -1.67537, -48.0342, -4.668, 1.25 ) }
    dend_33 { pt3dadd( -1.97179, -48.7781, -4.63969, 1.25 ) }
    dend_33 { pt3dadd( -2.2675, -49.4468, -4.61936, 1.25 ) }
    dend_33 { pt3dadd( -2.701, -50.3753, -4.60446, 1.4 ) }
    dend_33 { pt3dadd( -3.13973, -51.2911, -4.60404, 1.4 ) }
    dend_33 { pt3dadd( -3.48236, -52.0348, -4.61907, 1.55 ) }
    dend_33 { pt3dadd( -3.6979, -52.5844, -4.64697, 1.55 ) }
    dend_33 { pt3dadd( -3.95582, -53.4005, -4.70204, 1.33 ) }
    dend_33 { pt3dadd( -4.2024, -54.4237, -4.79563, 0.96 ) }
    dend_33 { pt3dadd( -4.27052, -54.8308, -4.84503, 0.81 ) }
    dend_33 { pt3dadd( -4.32421, -55.2898, -4.89937, 0.81 ) }
    dend_33 { pt3dadd( -4.40877, -56.3517, -5.00976, 0.96 ) }
    dend_33 { pt3dadd( -4.44424, -57.0878, -5.06872, 1.33 ) }
    dend_33 { pt3dadd( -4.47388, -57.9003, -5.11576, 1.69 ) }
    dend_33 { pt3dadd( -4.50035, -58.3922, -5.13373, 1.84 ) }
    dend_33 { pt3dadd( -4.54666, -58.9491, -5.14081, 1.99 ) }
    dend_33 { pt3dadd( -4.63917, -59.6065, -5.1348, 2.06 ) }
    dend_33 { pt3dadd( -4.73216, -60.168, -5.11765, 2.06 ) }
    dend_33 { pt3dadd( -4.83265, -60.7388, -5.07726, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -4.93915, -61.3475, -5.00421, 1.62 ) }
    dend_33 { pt3dadd( -5.05909, -62.0788, -4.88769, 1.18 ) }
    dend_33 { pt3dadd( -5.14182, -62.6647, -4.78267, 0.88 ) }
    dend_33 { pt3dadd( -5.24894, -63.4655, -4.62345, 0.88 ) }
    dend_33 { pt3dadd( -5.32307, -64.0162, -4.49279, 1.03 ) }
    dend_33 { pt3dadd( -5.40525, -64.5822, -4.34131, 1.11 ) }
    dend_33 { pt3dadd( -5.47519, -64.9848, -4.23048, 1.11 ) }
    dend_33 { pt3dadd( -5.70134, -65.9874, -3.96556, 1.03 ) }
    dend_33 { pt3dadd( -5.88123, -66.6406, -3.80178, 1.18 ) }
    dend_33 { pt3dadd( -6.03926, -67.1736, -3.68056, 1.25 ) }
    dend_33 { pt3dadd( -6.28578, -67.9848, -3.52025, 1.18 ) }
    dend_33 { pt3dadd( -6.51708, -68.7205, -3.40132, 1.03 ) }
    dend_33 { pt3dadd( -6.76213, -69.4547, -3.3106, 0.96 ) }
    dend_33 { pt3dadd( -7.04189, -70.2497, -3.24789, 0.88 ) }
    dend_33 { pt3dadd( -7.24044, -70.7806, -3.23827, 0.88 ) }
    dend_33 { pt3dadd( -7.56391, -71.5803, -3.30503, 1.25 ) }
    dend_33 { pt3dadd( -7.90789, -72.3779, -3.43673, 1.55 ) }
    dend_33 { pt3dadd( -8.16935, -72.9884, -3.56676, 1.62 ) }
    dend_33 { pt3dadd( -8.36263, -73.4779, -3.67858, 1.62 ) }
    dend_33 { pt3dadd( -8.58831, -74.1198, -3.82212, 1.4 ) }
    dend_33 { pt3dadd( -8.8722, -75.0302, -4.00302, 1.11 ) }
    dend_33 { pt3dadd( -9.11286, -75.9701, -4.15513, 1.11 ) }
    dend_33 { pt3dadd( -9.32894, -77.0094, -4.26741, 1.11 ) }
    dend_33 { pt3dadd( -9.52645, -78.1188, -4.3502, 1.11 ) }
    dend_33 { pt3dadd( -9.66032, -78.9305, -4.3903, 1.4 ) }
    dend_33 { pt3dadd( -9.79032, -79.7717, -4.41581, 1.4 ) }
    dend_33 { pt3dadd( -9.98766, -81.0834, -4.43283, 1.25 ) }
    dend_33 { pt3dadd( -10.1888, -82.4266, -4.45439, 1.25 ) }
    dend_33 { pt3dadd( -10.3284, -83.3101, -4.4724, 1.62 ) }
    dend_33 { pt3dadd( -10.4604, -84.0836, -4.49941, 1.77 ) }
    dend_33 { pt3dadd( -10.6337, -85.1191, -4.5526, 1.33 ) }
    dend_33 { pt3dadd( -10.7844, -86.0576, -4.60582, 0.88 ) }
    dend_33 { pt3dadd( -10.9268, -87.1045, -4.67099, 1.25 ) }
    dend_33 { pt3dadd( -10.9856, -87.6238, -4.70809, 1.84 ) }
    dend_33 { pt3dadd( -11.0326, -88.2059, -4.75456, 2.28 ) }
    dend_33 { pt3dadd( -11.062, -88.8097, -4.81146, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.43463, -36.4076, -5.78113, 2.14 ) }
    dend_28 { pt3dadd( -2.32239, -37.0048, -5.99418, 2.14 ) }
    dend_28 { pt3dadd( -2.10453, -37.9498, -6.29173, 2.14 ) }
    dend_28 { pt3dadd( -1.732, -39.5658, -6.80054, 1.69 ) }
    dend_28 { pt3dadd( -1.41984, -40.9198, -7.22688, 1.84 ) }
    dend_28 { pt3dadd( -1.11659, -42.2352, -7.64106, 1.99 ) }
    dend_28 { pt3dadd( -0.871265, -43.2994, -7.97612, 2.36 ) }
    dend_28 { pt3dadd( -0.666919, -44.0803, -8.19188, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.46768, 35.2206, -10.6369, 1.25 ) }
    dend_22 { pt3dadd( -9.11107, 36.2495, -10.8808, 1.25 ) }
    dend_22 { pt3dadd( -8.81052, 36.9404, -11.0302, 1.03 ) }
    dend_22 { pt3dadd( -8.41051, 37.7617, -11.1929, 0.81 ) }
    dend_22 { pt3dadd( -7.96224, 38.6818, -11.3576, 0.81 ) }
    dend_22 { pt3dadd( -7.56879, 39.601, -11.5063, 1.11 ) }
    dend_22 { pt3dadd( -7.32146, 40.269, -11.604, 1.11 ) }
    dend_22 { pt3dadd( -7.05724, 41.0516, -11.6762, 0.96 ) }
    dend_22 { pt3dadd( -6.74659, 42.1005, -11.74, 0.66 ) }
    dend_22 { pt3dadd( -6.55895, 42.8268, -11.7793, 0.52 ) }
    dend_22 { pt3dadd( -6.34131, 43.781, -11.8205, 0.52 ) }
    dend_22 { pt3dadd( -6.20535, 44.4907, -11.8476, 0.52 ) }
    dend_22 { pt3dadd( -5.91152, 46.0086, -11.9312, 1.18 ) }
    dend_22 { pt3dadd( -5.7557, 46.7853, -11.9827, 1.62 ) }
    dend_22 { pt3dadd( -5.63477, 47.3424, -12.0264, 1.69 ) }
    dend_22 { pt3dadd( -5.40292, 48.2645, -12.1274, 1.33 ) }
    dend_22 { pt3dadd( -5.25587, 48.7202, -12.1967, 0.74 ) }
    dend_22 { pt3dadd( -4.98495, 49.4184, -12.3322, 0.59 ) }
    dend_22 { pt3dadd( -4.52288, 50.5218, -12.6131, 0.66 ) }
    dend_22 { pt3dadd( -4.28379, 51.1185, -12.7814, 0.44 ) }
    dend_22 { pt3dadd( -4.13054, 51.5648, -12.9077, 0.44 ) }
    dend_22 { pt3dadd( -3.89041, 52.3841, -13.1417, 0.37 ) }
    dend_22 { pt3dadd( -3.68495, 53.0738, -13.3321, 0.37 ) }
    dend_22 { pt3dadd( -3.51319, 53.575, -13.4556, 0.37 ) }
    dend_22 { pt3dadd( -3.1763, 54.363, -13.6669, 0.37 ) }
    dend_22 { pt3dadd( -2.84774, 55.0646, -13.8699, 0.44 ) }
    dend_22 { pt3dadd( -2.55894, 55.748, -14.0935, 0.44 ) }
    dend_22 { pt3dadd( -2.17077, 56.8549, -14.4929, 0.81 ) }
    dend_22 { pt3dadd( -1.92653, 57.6377, -14.7861, 1.03 ) }
    dend_22 { pt3dadd( -1.69621, 58.3446, -15.0624, 1.03 ) }
    dend_22 { pt3dadd( -1.48577, 58.9878, -15.3405, 0.81 ) }
    dend_22 { pt3dadd( -1.19985, 59.9269, -15.7903, 0.29 ) }
    dend_22 { pt3dadd( -1.07761, 60.3942, -16.0255, 0.29 ) }
    dend_22 { pt3dadd( -0.842162, 61.5252, -16.588, 1.77 ) }
    dend_22 { pt3dadd( -0.771054, 61.902, -16.7708, 2.36 ) }
    dend_22 { pt3dadd( -0.665883, 62.424, -17.0022, 2.36 ) }
    dend_22 { pt3dadd( -0.442713, 63.4174, -17.4118, 2.28 ) }
    dend_22 { pt3dadd( -0.135966, 64.6093, -17.8568, 0.66 ) }
    dend_22 { pt3dadd( 0.0392924, 65.2612, -18.1002, 0.88 ) }
    dend_22 { pt3dadd( 0.219659, 65.9399, -18.3572, 0.88 ) }
    dend_22 { pt3dadd( 0.422854, 66.7018, -18.6267, 0.37 ) }
    dend_22 { pt3dadd( 0.561379, 67.2163, -18.8007, 0.37 ) }
    dend_22 { pt3dadd( 0.839012, 68.2891, -19.1387, 0.37 ) }
    dend_22 { pt3dadd( 1.03716, 69.0985, -19.3812, 1.11 ) }
    dend_22 { pt3dadd( 1.18243, 69.7453, -19.5669, 1.47 ) }
    dend_22 { pt3dadd( 1.27248, 70.2082, -19.6912, 1.69 ) }
    dend_22 { pt3dadd( 1.39669, 70.9911, -19.8844, 1.33 ) }
    dend_22 { pt3dadd( 1.50294, 71.8516, -20.0744, 0.44 ) }
    dend_22 { pt3dadd( 1.54843, 72.7678, -20.2501, 0.29 ) }
    dend_22 { pt3dadd( 1.55542, 73.4873, -20.3833, 0.52 ) }
    dend_22 { pt3dadd( 1.54525, 74.0252, -20.4807, 0.52 ) }
    dend_22 { pt3dadd( 1.50747, 74.9286, -20.6656, 0.29 ) }
    dend_22 { pt3dadd( 1.48342, 75.8585, -20.8609, 0.29 ) }
    dend_22 { pt3dadd( 1.47676, 77.4975, -21.2337, 1.18 ) }
    dend_22 { pt3dadd( 1.48398, 78.1137, -21.3741, 1.62 ) }
    dend_22 { pt3dadd( 1.49159, 78.77, -21.5117, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 1.50395, 79.5988, -21.6698, 1.33 ) }
    dend_22 { pt3dadd( 1.53406, 81.9635, -22.0995, 0.22 ) }
    dend_22 { pt3dadd( 1.56077, 83.4774, -22.3592, 0.22 ) }
    dend_22 { pt3dadd( 1.58447, 84.8458, -22.5717, 0.22 ) }
    dend_22 { pt3dadd( 1.58979, 86.2922, -22.7674, 0.74 ) }
    dend_22 { pt3dadd( 1.58437, 87.0807, -22.8664, 1.03 ) }
    dend_22 { pt3dadd( 1.57497, 87.4525, -22.9082, 1.03 ) }
    dend_22 { pt3dadd( 1.48822, 88.6385, -23.0681, 0.15 ) }
    dend_22 { pt3dadd( 1.44494, 89.0934, -23.1516, 0.15 ) }
    dend_22 { pt3dadd( 1.39029, 89.6143, -23.2853, 0.44 ) }
    dend_22 { pt3dadd( 1.33932, 90.11, -23.4365, 0.66 ) }
    dend_22 { pt3dadd( 1.29327, 90.5667, -23.5773, 0.66 ) }
    dend_22 { pt3dadd( 1.20248, 91.8836, -23.9761, 1.55 ) }
    dend_22 { pt3dadd( 1.16587, 92.8519, -24.2564, 2.58 ) }
    dend_22 { pt3dadd( 1.15973, 93.6948, -24.4983, 2.58 ) }
    dend_22 { pt3dadd( 1.23634, 95.5659, -24.9974, 0.29 ) }
    dend_22 { pt3dadd( 1.36602, 96.816, -25.2713, 0.29 ) }
    dend_22 { pt3dadd( 1.65333, 98.6082, -25.5707, 0.29 ) }
    dend_22 { pt3dadd( 1.90246, 99.7338, -25.7004, 0.96 ) }
    dend_22 { pt3dadd( 2.05739, 100.311, -25.7377, 0.96 ) }
    dend_22 { pt3dadd( 2.65835, 102.192, -25.772, 0.22 ) }
    dend_22 { pt3dadd( 3.37418, 104.195, -25.7201, 0.22 ) }
    dend_22 { pt3dadd( 3.85605, 105.453, -25.6452, 1.77 ) }
    dend_22 { pt3dadd( 4.05568, 105.944, -25.6008, 2.36 ) }
    dend_22 { pt3dadd( 4.30428, 106.545, -25.541, 2.5 ) }
    dend_22 { pt3dadd( 5.10746, 108.485, -25.3333, 0.15 ) }
    dend_22 { pt3dadd( 5.50758, 109.462, -25.2358, 0.29 ) }
    dend_22 { pt3dadd( 5.77036, 110.116, -25.1838, 0.29 ) }
    dend_22 { pt3dadd( 6.10079, 110.952, -25.1614, 0.15 ) }
    dend_22 { pt3dadd( 6.42305, 111.808, -25.1929, 1.18 ) }
    dend_22 { pt3dadd( 6.62322, 112.339, -25.2409, 1.55 ) }
    dend_22 { pt3dadd( 6.84518, 112.928, -25.3178, 1.18 ) }
    dend_22 { pt3dadd( 7.00698, 113.353, -25.3865, 0.74 ) }
    dend_22 { pt3dadd( 7.46724, 114.673, -25.6095, 0.22 ) }
    dend_22 { pt3dadd( 7.79996, 115.703, -25.787, 0.22 ) }
    dend_22 { pt3dadd( 8.32916, 117.506, -26.0596, 0.22 ) }
    dend_22 { pt3dadd( 8.5921, 118.476, -26.1852, 0.81 ) }
    dend_22 { pt3dadd( 8.6889, 118.865, -26.2273, 0.81 ) }
    dend_22 { pt3dadd( 9.23729, 121.302, -26.4137, 0.22 ) }
    dend_22 { pt3dadd( 9.47725, 122.527, -26.4378, 0.22 ) }
    dend_22 { pt3dadd( 9.65413, 123.635, -26.4469, 1.25 ) }
    dend_22 { pt3dadd( 9.67962, 123.929, -26.4482, 1.69 ) }
    dend_22 { pt3dadd( 9.69123, 124.261, -26.4481, 1.69 ) }
    dend_22 { pt3dadd( 9.69051, 124.969, -26.4425, 1.33 ) }
    dend_22 { pt3dadd( 9.66154, 125.588, -26.4457, 0.59 ) }
    dend_22 { pt3dadd( 9.57725, 126.877, -26.4866, 0.22 ) }
    dend_22 { pt3dadd( 9.47681, 128.714, -26.6043, 0.22 ) }
    dend_22 { pt3dadd( 9.41587, 129.844, -26.6906, 1.03 ) }
    dend_22 { pt3dadd( 9.38872, 130.321, -26.7301, 1.03 ) }
    dend_22 { pt3dadd( 9.37644, 130.819, -26.7712, 1.03 ) }
    dend_22 { pt3dadd( 9.38719, 131.558, -26.8254, 0.52 ) }
    dend_22 { pt3dadd( 9.47777, 133.213, -26.9124, 0.22 ) }
    dend_22 { pt3dadd( 9.58559, 134.011, -26.9523, 0.59 ) }
    dend_22 { pt3dadd( 9.68714, 134.522, -26.9745, 0.59 ) }
    dend_22 { pt3dadd( 10.2426, 136.766, -27.0524, 0.22 ) }
    dend_22 { pt3dadd( 10.4541, 137.462, -27.0684, 0.66 ) }
    dend_22 { pt3dadd( 10.64, 137.959, -27.0784, 0.66 ) }
    dend_22 { pt3dadd( 11.1168, 139.113, -27.111, 0.15 ) }
    dend_22 { pt3dadd( 11.3935, 139.755, -27.139, 0.81 ) }
    dend_22 { pt3dadd( 11.5829, 140.196, -27.1663, 0.81 ) }
    dend_22 { pt3dadd( 11.8532, 140.847, -27.2238, 0.81 ) }
    dend_22 { pt3dadd( 12.3299, 142.089, -27.3557, 0.22 ) }
    dend_22 { pt3dadd( 12.7923, 143.35, -27.5229, 1.33 ) }
    dend_22 { pt3dadd( 12.9766, 143.88, -27.6035, 1.55 ) }
    dend_22 { pt3dadd( 13.0855, 144.189, -27.6524, 1.55 ) }
    dend_22 { pt3dadd( 13.2012, 144.516, -27.7095, 1.03 ) }
    dend_22 { pt3dadd( 13.7539, 146.008, -27.9943, 0.22 ) }
    dend_22 { pt3dadd( 14.283, 147.336, -28.2669, 0.22 ) }
    dend_22 { pt3dadd( 14.5868, 148.032, -28.428, 0.22 ) }
    dend_22 { pt3dadd( 14.9433, 148.856, -28.621, 1.25 ) }
    dend_22 { pt3dadd( 15.1588, 149.388, -28.7496, 1.77 ) }
    dend_22 { pt3dadd( 15.337, 149.87, -28.8709, 1.77 ) }
    dend_22 { pt3dadd( 15.4773, 150.276, -28.9828, 1.18 ) }
    dend_22 { pt3dadd( 15.6849, 150.92, -29.1682, 0.66 ) }
    dend_22 { pt3dadd( 16.3132, 152.882, -29.7797, 0.22 ) }
    dend_22 { pt3dadd( 16.739, 154.191, -30.23, 0.22 ) }
    dend_22 { pt3dadd( 17.0378, 155.085, -30.5356, 1.11 ) }
    dend_22 { pt3dadd( 17.2508, 155.659, -30.726, 1.4 ) }
    dend_22 { pt3dadd( 17.463, 156.169, -30.8934, 1.4 ) }
    dend_22 { pt3dadd( 17.7402, 156.759, -31.1055, 0.96 ) }
    dend_22 { pt3dadd( 18.5976, 158.429, -31.7555, 0.22 ) }
    dend_22 { pt3dadd( 19.5635, 160.164, -32.4376, 0.22 ) }
    dend_22 { pt3dadd( 20.3359, 161.494, -32.9507, 1.77 ) }
    dend_22 { pt3dadd( 20.6142, 161.963, -33.1238, 2.65 ) }
    dend_22 { pt3dadd( 21.0606, 162.696, -33.3806, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.46768, 35.2206, -10.6369, 0.66 ) }
    dend_21 { pt3dadd( -11.262, 36.2461, -10.3864, 0.66 ) }
    dend_21 { pt3dadd( -11.9787, 36.6223, -10.2813, 0.66 ) }
    dend_21 { pt3dadd( -12.8193, 37.032, -10.1484, 0.66 ) }
    dend_21 { pt3dadd( -13.783, 37.4592, -9.99493, 1.11 ) }
    dend_21 { pt3dadd( -14.3841, 37.6967, -9.90149, 1.33 ) }
    dend_21 { pt3dadd( -15.2918, 38.0438, -9.76249, 1.33 ) }
    dend_21 { pt3dadd( -16.2792, 38.3907, -9.60741, 0.96 ) }
    dend_21 { pt3dadd( -16.953, 38.6355, -9.47873, 0.88 ) }
    dend_21 { pt3dadd( -17.7496, 38.9297, -9.29932, 0.88 ) }
    dend_21 { pt3dadd( -18.6816, 39.2785, -9.03906, 0.37 ) }
    dend_21 { pt3dadd( -19.1554, 39.4546, -8.88272, 0.37 ) }
    dend_21 { pt3dadd( -19.9549, 39.7555, -8.58482, 0.81 ) }
    dend_21 { pt3dadd( -20.639, 40.0249, -8.30751, 0.88 ) }
    dend_21 { pt3dadd( -21.2688, 40.2804, -8.04122, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -21.9299, 40.5552, -7.74969, 0.29 ) }
    dend_21 { pt3dadd( -22.354, 40.7242, -7.56865, 0.29 ) }
    dend_21 { pt3dadd( -23.1062, 40.9663, -7.28465, 0.74 ) }
    dend_21 { pt3dadd( -23.676, 41.128, -7.09675, 0.74 ) }
    dend_21 { pt3dadd( -24.0001, 41.2349, -6.98633, 0.74 ) }
    dend_21 { pt3dadd( -24.364, 41.3898, -6.83329, 0.74 ) }
    dend_21 { pt3dadd( -24.7999, 41.6024, -6.61898, 0.59 ) }
    dend_21 { pt3dadd( -25.2154, 41.8047, -6.37959, 0.59 ) }
    dend_21 { pt3dadd( -25.57, 41.9703, -6.13447, 0.37 ) }
    dend_21 { pt3dadd( -26.5273, 42.3583, -5.44206, 0.37 ) }
    dend_21 { pt3dadd( -27.2039, 42.5831, -4.94209, 0.37 ) }
    dend_21 { pt3dadd( -27.5674, 42.6802, -4.67196, 0.22 ) }
    dend_21 { pt3dadd( -28.1855, 42.8087, -4.22175, 0.22 ) }
    dend_21 { pt3dadd( -28.527, 42.8545, -3.99564, 0.22 ) }
    dend_21 { pt3dadd( -29.5522, 42.9613, -3.38182, 1.03 ) }
    dend_21 { pt3dadd( -30.0702, 43.024, -3.11125, 1.4 ) }
    dend_21 { pt3dadd( -30.3811, 43.0786, -2.95738, 1.4 ) }
    dend_21 { pt3dadd( -31.1369, 43.26, -2.60108, 0.81 ) }
    dend_21 { pt3dadd( -32.1107, 43.5351, -2.18075, 0.22 ) }
    dend_21 { pt3dadd( -32.6397, 43.6911, -1.96473, 0.22 ) }
    dend_21 { pt3dadd( -33.7144, 44.0205, -1.55606, 1.11 ) }
    dend_21 { pt3dadd( -34.2674, 44.1952, -1.36188, 1.4 ) }
    dend_21 { pt3dadd( -34.6626, 44.3203, -1.23187, 1.4 ) }
    dend_21 { pt3dadd( -35.5915, 44.6097, -0.947337, 0.66 ) }
    dend_21 { pt3dadd( -36.4689, 44.8706, -0.688996, 0.52 ) }
    dend_21 { pt3dadd( -37.5376, 45.1552, -0.386918, 0.74 ) }
    dend_21 { pt3dadd( -38.2346, 45.3346, -0.198775, 0.88 ) }
    dend_21 { pt3dadd( -39.2256, 45.6006, 0.058598, 0.66 ) }
    dend_21 { pt3dadd( -39.9297, 45.7965, 0.235628, 0.66 ) }
    dend_21 { pt3dadd( -40.5084, 45.9638, 0.373926, 0.66 ) }
    dend_21 { pt3dadd( -41.5944, 46.299, 0.635937, 0.29 ) }
    dend_21 { pt3dadd( -42.4563, 46.5855, 0.86702, 1.03 ) }
    dend_21 { pt3dadd( -43.1803, 46.8407, 1.08688, 1.25 ) }
    dend_21 { pt3dadd( -43.4041, 46.9332, 1.17435, 1.25 ) }
    dend_21 { pt3dadd( -43.9632, 47.2104, 1.43864, 0.81 ) }
    dend_21 { pt3dadd( -44.6163, 47.5745, 1.8026, 0.29 ) }
    dend_21 { pt3dadd( -45.0255, 47.8273, 2.07169, 0.52 ) }
    dend_21 { pt3dadd( -45.2934, 48.0087, 2.25964, 0.66 ) }
    dend_21 { pt3dadd( -46.2681, 48.6957, 2.93854, 0.22 ) }
    dend_21 { pt3dadd( -46.8243, 49.0911, 3.30498, 0.22 ) }
    dend_21 { pt3dadd( -47.2882, 49.4149, 3.58162, 0.22 ) }
    dend_21 { pt3dadd( -47.9277, 49.8526, 3.90003, 0.22 ) }
    dend_21 { pt3dadd( -48.8032, 50.4456, 4.28336, 0.59 ) }
    dend_21 { pt3dadd( -49.3118, 50.7889, 4.47732, 0.81 ) }
    dend_21 { pt3dadd( -49.7961, 51.1252, 4.61438, 0.81 ) }
    dend_21 { pt3dadd( -50.5449, 51.676, 4.786, 0.52 ) }
    dend_21 { pt3dadd( -51.5594, 52.463, 4.9712, 1.03 ) }
    dend_21 { pt3dadd( -52.1709, 52.9507, 5.06042, 1.18 ) }
    dend_21 { pt3dadd( -52.6266, 53.3269, 5.11197, 1.25 ) }
    dend_21 { pt3dadd( -53.6451, 54.1972, 5.20057, 0.29 ) }
    dend_21 { pt3dadd( -54.569, 55.0049, 5.2611, 0.74 ) }
    dend_21 { pt3dadd( -54.9173, 55.3119, 5.27705, 0.96 ) }
    dend_21 { pt3dadd( -55.225, 55.5788, 5.28281, 0.96 ) }
    dend_21 { pt3dadd( -56.2579, 56.4395, 5.28584, 0.22 ) }
    dend_21 { pt3dadd( -56.6705, 56.7646, 5.28629, 0.22 ) }
    dend_21 { pt3dadd( -57.237, 57.1834, 5.29618, 0.66 ) }
    dend_21 { pt3dadd( -57.6267, 57.4577, 5.29554, 0.88 ) }
    dend_21 { pt3dadd( -58.0903, 57.7696, 5.29677, 0.44 ) }
    dend_21 { pt3dadd( -58.6942, 58.1684, 5.30508, 0.37 ) }
    dend_21 { pt3dadd( -59.057, 58.4048, 5.31905, 0.44 ) }
    dend_21 { pt3dadd( -59.5389, 58.7304, 5.33794, 0.44 ) }
    dend_21 { pt3dadd( -59.8855, 58.9675, 5.35105, 0.44 ) }
    dend_21 { pt3dadd( -60.5503, 59.4328, 5.38304, 0.22 ) }
    dend_21 { pt3dadd( -60.9796, 59.7462, 5.41658, 0.22 ) }
    dend_21 { pt3dadd( -61.4826, 60.1464, 5.46515, 0.29 ) }
    dend_21 { pt3dadd( -61.7726, 60.3961, 5.50367, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.0147, 38.7875, 3.26605, 1.47 ) }
    dend_13 { pt3dadd( -16.6573, 39.607, 2.95851, 1.47 ) }
    dend_13 { pt3dadd( -16.3417, 40.5021, 2.6585, 0.81 ) }
    dend_13 { pt3dadd( -16.1494, 41.1586, 2.45909, 0.81 ) }
    dend_13 { pt3dadd( -15.9571, 42.0792, 2.21604, 0.81 ) }
    dend_13 { pt3dadd( -15.7677, 43.2013, 1.94298, 0.81 ) }
    dend_13 { pt3dadd( -15.5999, 44.441, 1.66327, 0.81 ) }
    dend_13 { pt3dadd( -15.5137, 45.6795, 1.41666, 1.03 ) }
    dend_13 { pt3dadd( -15.4753, 46.7947, 1.214, 1.03 ) }
    dend_13 { pt3dadd( -15.4483, 48.5016, 0.911909, 1.18 ) }
    dend_13 { pt3dadd( -15.4352, 49.5599, 0.732081, 1.18 ) }
    dend_13 { pt3dadd( -15.5021, 51.3991, 0.446381, 1.18 ) }
    dend_13 { pt3dadd( -15.5966, 52.7071, 0.255834, 1.4 ) }
    dend_13 { pt3dadd( -15.6555, 53.6336, 0.114706, 1.4 ) }
    dend_13 { pt3dadd( -15.7046, 54.2924, 0.0131895, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.0147, 38.7875, 3.26605, 0.96 ) }
    dend_12 { pt3dadd( -19.2204, 39.6488, 2.82074, 0.96 ) }
    dend_12 { pt3dadd( -20.0091, 39.9797, 2.67941, 0.96 ) }
    dend_12 { pt3dadd( -21.1023, 40.448, 2.48406, 0.96 ) }
    dend_12 { pt3dadd( -22.2412, 40.9531, 2.26851, 0.81 ) }
    dend_12 { pt3dadd( -23.2215, 41.4057, 2.0837, 0.81 ) }
    dend_12 { pt3dadd( -24.5717, 42.0494, 1.84267, 1.03 ) }
    dend_12 { pt3dadd( -25.4845, 42.5253, 1.67898, 1.03 ) }
    dend_12 { pt3dadd( -26.3304, 43.052, 1.52247, 1.03 ) }
    dend_12 { pt3dadd( -27.3792, 43.8136, 1.32157, 0.81 ) }
    dend_12 { pt3dadd( -28.1459, 44.3978, 1.17466, 0.81 ) }
    dend_12 { pt3dadd( -28.9856, 45.0627, 1.0239, 0.81 ) }
    dend_12 { pt3dadd( -29.9727, 45.8975, 0.842141, 0.52 ) }
    dend_12 { pt3dadd( -30.8776, 46.7513, 0.680187, 0.52 ) }
    dend_12 { pt3dadd( -31.3827, 47.2777, 0.606126, 0.52 ) }
    dend_12 { pt3dadd( -32.1012, 48.092, 0.51844, 0.52 ) }
    dend_12 { pt3dadd( -32.9907, 49.1463, 0.418232, 0.52 ) }
    dend_12 { pt3dadd( -33.4556, 49.7254, 0.373511, 0.52 ) }
    dend_12 { pt3dadd( -33.9224, 50.3293, 0.346525, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -34.4651, 51.0534, 0.335783, 0.66 ) }
    dend_12 { pt3dadd( -34.9637, 51.7753, 0.33813, 0.88 ) }
    dend_12 { pt3dadd( -35.4445, 52.5533, 0.345957, 0.88 ) }
    dend_12 { pt3dadd( -35.9779, 53.4696, 0.350579, 0.59 ) }
    dend_12 { pt3dadd( -36.5207, 54.3777, 0.345818, 0.88 ) }
    dend_12 { pt3dadd( -36.9145, 55.0304, 0.334093, 0.88 ) }
    dend_12 { pt3dadd( -37.2379, 55.6133, 0.313122, 0.96 ) }
    dend_12 { pt3dadd( -37.5252, 56.1462, 0.281979, 0.96 ) }
    dend_12 { pt3dadd( -37.7876, 56.6105, 0.245815, 0.96 ) }
    dend_12 { pt3dadd( -38.2637, 57.3652, 0.173911, 0.74 ) }
    dend_12 { pt3dadd( -39.0279, 58.4697, 0.0497263, 1.25 ) }
    dend_12 { pt3dadd( -39.5625, 59.2021, -0.0412, 1.25 ) }
    dend_12 { pt3dadd( -40.1724, 60.0183, -0.144646, 0.29 ) }
    dend_12 { pt3dadd( -40.5766, 60.5623, -0.207068, 0.29 ) }
    dend_12 { pt3dadd( -40.9826, 61.1155, -0.258958, 0.66 ) }
    dend_12 { pt3dadd( -41.3451, 61.6176, -0.290563, 0.81 ) }
    dend_12 { pt3dadd( -41.6443, 62.0455, -0.302188, 0.81 ) }
    dend_12 { pt3dadd( -42.1321, 62.8121, -0.292813, 0.37 ) }
    dend_12 { pt3dadd( -42.594, 63.6629, -0.316552, 0.37 ) }
    dend_12 { pt3dadd( -42.8652, 64.2193, -0.357105, 1.03 ) }
    dend_12 { pt3dadd( -43.0991, 64.7107, -0.409809, 1.25 ) }
    dend_12 { pt3dadd( -43.4055, 65.3094, -0.490479, 1.25 ) }
    dend_12 { pt3dadd( -43.6769, 65.7812, -0.568879, 0.81 ) }
    dend_12 { pt3dadd( -44.2712, 66.7116, -0.740875, 0.59 ) }
    dend_12 { pt3dadd( -44.6298, 67.2403, -0.842794, 0.44 ) }
    dend_12 { pt3dadd( -45.1256, 67.9892, -0.961021, 0.88 ) }
    dend_12 { pt3dadd( -45.5012, 68.5693, -1.02912, 0.88 ) }
    dend_12 { pt3dadd( -46.1325, 69.5918, -1.09101, 0.59 ) }
    dend_12 { pt3dadd( -46.535, 70.276, -1.11676, 0.59 ) }
    dend_12 { pt3dadd( -47.149, 71.3913, -1.12571, 0.44 ) }
    dend_12 { pt3dadd( -47.8131, 72.6806, -1.12839, 1.03 ) }
    dend_12 { pt3dadd( -48.3353, 73.7821, -1.11093, 1.55 ) }
    dend_12 { pt3dadd( -48.6221, 74.4701, -1.08279, 1.62 ) }
    dend_12 { pt3dadd( -48.9985, 75.4821, -1.02364, 1.11 ) }
    dend_12 { pt3dadd( -49.3753, 76.5968, -0.946979, 0.59 ) }
    dend_12 { pt3dadd( -49.6146, 77.3701, -0.877269, 0.59 ) }
    dend_12 { pt3dadd( -49.9847, 78.6661, -0.737615, 0.59 ) }
    dend_12 { pt3dadd( -50.3483, 79.9596, -0.578059, 0.52 ) }
    dend_12 { pt3dadd( -50.588, 80.8073, -0.453005, 0.52 ) }
    dend_12 { pt3dadd( -50.8889, 81.8668, -0.255169, 0.52 ) }
    dend_12 { pt3dadd( -51.2143, 82.9724, -0.0375126, 0.52 ) }
    dend_12 { pt3dadd( -51.6009, 84.1805, 0.196991, 0.37 ) }
    dend_12 { pt3dadd( -52.2004, 85.7804, 0.504307, 1.55 ) }
    dend_12 { pt3dadd( -52.4365, 86.3046, 0.60254, 1.92 ) }
    dend_12 { pt3dadd( -52.6893, 86.7781, 0.687154, 1.92 ) }
    dend_12 { pt3dadd( -52.9368, 87.1784, 0.748035, 1.92 ) }
    dend_12 { pt3dadd( -53.4857, 87.9284, 0.844128, 0.88 ) }
    dend_12 { pt3dadd( -54.2391, 88.8717, 0.941206, 0.44 ) }
    dend_12 { pt3dadd( -54.8144, 89.5672, 1.00112, 0.44 ) }
    dend_12 { pt3dadd( -55.4361, 90.3189, 1.04852, 0.44 ) }
    dend_12 { pt3dadd( -56.3007, 91.3899, 1.10751, 0.37 ) }
    dend_12 { pt3dadd( -56.7611, 91.9733, 1.13684, 0.37 ) }
    dend_12 { pt3dadd( -57.708, 93.2269, 1.19456, 0.74 ) }
    dend_12 { pt3dadd( -58.083, 93.7438, 1.22277, 0.74 ) }
    dend_12 { pt3dadd( -58.5451, 94.4098, 1.25873, 0.52 ) }
    dend_12 { pt3dadd( -59.1603, 95.3297, 1.28727, 1.25 ) }
    dend_12 { pt3dadd( -59.5927, 95.9732, 1.28047, 1.47 ) }
    dend_12 { pt3dadd( -59.8845, 96.4087, 1.2597, 1.47 ) }
    dend_12 { pt3dadd( -60.2945, 96.9408, 1.2012, 0.81 ) }
    dend_12 { pt3dadd( -60.8607, 97.5996, 1.09717, 0.59 ) }
    dend_12 { pt3dadd( -61.4384, 98.1985, 0.960016, 0.88 ) }
    dend_12 { pt3dadd( -61.9317, 98.6759, 0.826229, 1.18 ) }
    dend_12 { pt3dadd( -62.2412, 98.968, 0.735445, 1.18 ) }
    dend_12 { pt3dadd( -62.9962, 99.7158, 0.532948, 0.96 ) }
    dend_12 { pt3dadd( -63.7895, 100.576, 0.357885, 0.52 ) }
    dend_12 { pt3dadd( -64.2344, 101.124, 0.309476, 0.37 ) }
    dend_12 { pt3dadd( -64.8517, 101.991, 0.32443, 0.37 ) }
    dend_12 { pt3dadd( -65.4206, 102.904, 0.405051, 0.37 ) }
    dend_12 { pt3dadd( -65.9242, 103.829, 0.530894, 0.37 ) }
    dend_12 { pt3dadd( -66.2555, 104.553, 0.661336, 0.81 ) }
    dend_12 { pt3dadd( -66.7123, 105.724, 0.88934, 1.84 ) }
    dend_12 { pt3dadd( -66.893, 106.197, 0.981803, 1.92 ) }
    dend_12 { pt3dadd( -67.0337, 106.538, 1.04074, 1.92 ) }
    dend_12 { pt3dadd( -67.2924, 107.168, 1.12748, 1.62 ) }
    dend_12 { pt3dadd( -67.6587, 108.056, 1.19468, 0.88 ) }
    dend_12 { pt3dadd( -68.0349, 109.01, 1.22885, 0.29 ) }
    dend_12 { pt3dadd( -68.6177, 110.493, 1.24819, 0.29 ) }
    dend_12 { pt3dadd( -69.0614, 111.559, 1.26396, 0.29 ) }
    dend_12 { pt3dadd( -69.3531, 112.179, 1.28557, 0.29 ) }
    dend_12 { pt3dadd( -69.5094, 112.467, 1.30196, 0.29 ) }
    dend_12 { pt3dadd( -69.9156, 113.096, 1.35378, 0.66 ) }
    dend_12 { pt3dadd( -70.4384, 113.783, 1.42803, 0.81 ) }
    dend_12 { pt3dadd( -70.8204, 114.235, 1.48449, 0.81 ) }
    dend_12 { pt3dadd( -71.5537, 115.088, 1.58931, 0.37 ) }
    dend_12 { pt3dadd( -72.1325, 115.742, 1.67153, 0.37 ) }
    dend_12 { pt3dadd( -72.6802, 116.369, 1.7489, 0.81 ) }
    dend_12 { pt3dadd( -73.0651, 116.815, 1.80681, 0.81 ) }
    dend_12 { pt3dadd( -73.6084, 117.459, 1.89638, 0.37 ) }
    dend_12 { pt3dadd( -74.1473, 118.058, 1.99062, 0.37 ) }
    dend_12 { pt3dadd( -74.6986, 118.615, 2.09426, 0.88 ) }
    dend_12 { pt3dadd( -75.3768, 119.267, 2.2256, 1.47 ) }
    dend_12 { pt3dadd( -75.888, 119.755, 2.32128, 1.69 ) }
    dend_12 { pt3dadd( -76.3031, 120.154, 2.39358, 1.69 ) }
    dend_12 { pt3dadd( -77.4364, 121.219, 2.58246, 0.37 ) }
    dend_12 { pt3dadd( -77.8253, 121.59, 2.64506, 0.37 ) }
    dend_12 { pt3dadd( -78.5527, 122.332, 2.74944, 0.37 ) }
    dend_12 { pt3dadd( -79.3876, 123.253, 2.85421, 0.81 ) }
    dend_12 { pt3dadd( -79.9236, 123.929, 2.9096, 1.33 ) }
    dend_12 { pt3dadd( -80.2464, 124.38, 2.93377, 1.33 ) }
    dend_12 { pt3dadd( -80.6781, 125.015, 2.95681, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -81.5538, 126.258, 2.98957, 0.52 ) }
    dend_12 { pt3dadd( -82.2885, 127.216, 3.00894, 0.52 ) }
    dend_12 { pt3dadd( -83.12, 128.275, 3.02081, 0.52 ) }
    dend_12 { pt3dadd( -83.5801, 128.859, 3.02285, 0.52 ) }
    dend_12 { pt3dadd( -84.1725, 129.614, 3.0191, 0.52 ) }
    dend_12 { pt3dadd( -84.8386, 130.461, 3.0056, 0.52 ) }
    dend_12 { pt3dadd( -85.9762, 131.884, 2.97196, 0.52 ) }
    dend_12 { pt3dadd( -86.3889, 132.398, 2.95855, 0.52 ) }
    dend_12 { pt3dadd( -87.4151, 133.655, 2.93051, 1.25 ) }
    dend_12 { pt3dadd( -87.7047, 134.011, 2.92488, 1.47 ) }
    dend_12 { pt3dadd( -88.086, 134.474, 2.91264, 1.47 ) }
    dend_12 { pt3dadd( -88.6481, 135.114, 2.8903, 0.88 ) }
    dend_12 { pt3dadd( -89.336, 135.82, 2.86392, 0.29 ) }
    dend_12 { pt3dadd( -89.6232, 136.081, 2.85728, 0.29 ) }
    dend_12 { pt3dadd( -90.219, 136.575, 2.85459, 0.44 ) }
    dend_12 { pt3dadd( -90.6916, 136.952, 2.86392, 0.44 ) }
    dend_12 { pt3dadd( -91.1358, 137.298, 2.8845, 0.44 ) }
    dend_12 { pt3dadd( -91.3974, 137.509, 2.88634, 0.44 ) }
    dend_12 { pt3dadd( -91.7651, 137.827, 2.90598, 0.29 ) }
    dend_12 { pt3dadd( -92.2301, 138.359, 2.95896, 0.29 ) }
    dend_12 { pt3dadd( -92.3867, 138.564, 2.99198, 0.44 ) }
    dend_12 { pt3dadd( -92.5757, 138.825, 3.04537, 0.44 ) }
    dend_12 { pt3dadd( -93.0733, 139.499, 3.20209, 0.37 ) }
    dend_12 { pt3dadd( -93.7472, 140.374, 3.42543, 0.44 ) }
    dend_12 { pt3dadd( -94.8592, 141.759, 3.70569, 2.28 ) }
    dend_12 { pt3dadd( -95.3098, 142.308, 3.78838, 2.5 ) }
    dend_12 { pt3dadd( -95.6587, 142.742, 3.82749, 2.5 ) }
    dend_12 { pt3dadd( -96.2294, 143.453, 3.85382, 1.92 ) }
    dend_12 { pt3dadd( -96.8053, 144.17, 3.82433, 0.81 ) }
    dend_12 { pt3dadd( -97.563, 145.148, 3.65215, 0.52 ) }
    dend_12 { pt3dadd( -97.881, 145.597, 3.54216, 0.52 ) }
    dend_12 { pt3dadd( -98.5547, 146.637, 3.25759, 0.88 ) }
    dend_12 { pt3dadd( -98.9285, 147.281, 3.07657, 0.88 ) }
    dend_12 { pt3dadd( -99.3385, 148.063, 2.86294, 0.66 ) }
    dend_12 { pt3dadd( -99.6493, 148.708, 2.6921, 0.44 ) }
    dend_12 { pt3dadd( -100.065, 149.651, 2.47281, 0.29 ) }
    dend_12 { pt3dadd( -100.513, 150.74, 2.206, 0.29 ) }
    dend_12 { pt3dadd( -100.979, 151.984, 1.87293, 0.29 ) }
    dend_12 { pt3dadd( -101.196, 152.602, 1.69539, 0.29 ) }
    dend_12 { pt3dadd( -101.591, 153.741, 1.30701, 0.52 ) }
    dend_12 { pt3dadd( -101.876, 154.519, 1.00129, 0.88 ) }
    dend_12 { pt3dadd( -102.13, 155.153, 0.704217, 0.88 ) }
    dend_12 { pt3dadd( -102.446, 155.843, 0.33976, 0.44 ) }
    dend_12 { pt3dadd( -103.085, 156.925, -0.285572, 1.11 ) }
    dend_12 { pt3dadd( -103.779, 157.851, -0.850576, 2.43 ) }
    dend_12 { pt3dadd( -104.365, 158.468, -1.24305, 2.43 ) }
    dend_12 { pt3dadd( -104.784, 158.821, -1.47365, 2.43 ) }
    dend_12 { pt3dadd( -105.381, 159.232, -1.72145, 1.69 ) }
    dend_12 { pt3dadd( -106.248, 159.746, -2.01372, 0.59 ) }
    dend_12 { pt3dadd( -107.213, 160.231, -2.25136, 0.74 ) }
    dend_12 { pt3dadd( -107.538, 160.379, -2.2987, 0.74 ) }
    dend_12 { pt3dadd( -108.084, 160.615, -2.3653, 0.52 ) }
    dend_12 { pt3dadd( -108.924, 160.982, -2.43805, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.38, 6.42104, 7.27753, 1.99 ) }
    dend_2 { pt3dadd( 29.0833, 6.55983, 7.29128, 1.99 ) }
    dend_2 { pt3dadd( 30.0822, 6.87568, 7.38456, 1.99 ) }
    dend_2 { pt3dadd( 30.7854, 7.35385, 7.50427, 1.69 ) }
    dend_2 { pt3dadd( 31.774, 8.02605, 7.67255, 1.69 ) }
    dend_2 { pt3dadd( 32.1904, 8.30917, 7.74343, 1.69 ) }
    dend_2 { pt3dadd( 32.8822, 8.77959, 7.8612, 1.69 ) }
    dend_2 { pt3dadd( 33.3255, 9.26409, 7.9251, 1.92 ) }
    dend_2 { pt3dadd( 33.9777, 10.2735, 8.12204, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 27.38, 6.42104, 7.27753, 0.74 ) }
    dend_1 { pt3dadd( 28.2447, 8.68176, 8.33346, 0.74 ) }
    dend_1 { pt3dadd( 28.5585, 9.66128, 8.77577, 0.74 ) }
    dend_1 { pt3dadd( 28.9795, 11.1997, 9.44718, 0.74 ) }
    dend_1 { pt3dadd( 29.2991, 12.5243, 10.0127, 0.44 ) }
    dend_1 { pt3dadd( 29.5375, 13.6429, 10.4961, 0.44 ) }
    dend_1 { pt3dadd( 29.8473, 15.2975, 11.2162, 0.66 ) }
    dend_1 { pt3dadd( 29.951, 16.0951, 11.5493, 0.88 ) }
    dend_1 { pt3dadd( 30.0775, 17.2428, 12.0645, 0.88 ) }
    dend_1 { pt3dadd( 30.1771, 18.2874, 12.5845, 1.03 ) }
    dend_1 { pt3dadd( 30.3412, 19.7736, 13.373, 0.96 ) }
    dend_1 { pt3dadd( 30.4784, 20.8231, 13.9506, 0.52 ) }
    dend_1 { pt3dadd( 30.6202, 21.6667, 14.423, 0.52 ) }
    dend_1 { pt3dadd( 30.7732, 22.7837, 15.0577, 0.88 ) }
    dend_1 { pt3dadd( 30.8988, 23.6928, 15.5794, 0.66 ) }
    dend_1 { pt3dadd( 31.0451, 24.7077, 16.1734, 0.88 ) }
    dend_1 { pt3dadd( 31.1743, 25.6115, 16.7106, 0.88 ) }
    dend_1 { pt3dadd( 31.3489, 26.9397, 17.5211, 0.29 ) }
    dend_1 { pt3dadd( 31.4593, 28.0117, 18.1719, 0.29 ) }
    dend_1 { pt3dadd( 31.5238, 28.7535, 18.6074, 0.29 ) }
    dend_1 { pt3dadd( 31.6323, 30.0151, 19.3581, 0.44 ) }
    dend_1 { pt3dadd( 31.7192, 30.7631, 19.8273, 0.74 ) }
    dend_1 { pt3dadd( 31.8647, 31.6636, 20.4009, 0.88 ) }
    dend_1 { pt3dadd( 31.9783, 32.2075, 20.7568, 1.11 ) }
    dend_1 { pt3dadd( 32.0826, 32.6396, 21.0355, 1.11 ) }
    dend_1 { pt3dadd( 32.2702, 33.6284, 21.6366, 0.29 ) }
    dend_1 { pt3dadd( 32.4733, 34.6211, 22.1786, 0.29 ) }
    dend_1 { pt3dadd( 32.7145, 35.5722, 22.6624, 0.29 ) }
    dend_1 { pt3dadd( 35.0496, 45.0519, 30.4185, 0.29 ) }
    dend_1 { pt3dadd( 38.9341, 54.7007, 37.3348, 0.29 ) }
    dend_1 { pt3dadd( 41.3521, 65.2683, 43.4013, 0.29 ) }
    dend_1 { pt3dadd( 42.558, 76.2763, 48.9544, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -62.1668, -41.0689, 3.2681, 0.44 ) }
    dend_48 { pt3dadd( -64.8493, -42.2336, 4.46384, 0.44 ) }
    dend_48 { pt3dadd( -66.2095, -42.9222, 5.04299, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -67.6502, -43.7152, 5.59555, 0.29 ) }
    dend_48 { pt3dadd( -68.4974, -44.1969, 5.90026, 0.29 ) }
    dend_48 { pt3dadd( -70.3032, -45.2009, 6.50743, 0.37 ) }
    dend_48 { pt3dadd( -71.1269, -45.6363, 6.79292, 0.37 ) }
    dend_48 { pt3dadd( -72.3968, -46.2575, 7.12543, 0.29 ) }
    dend_48 { pt3dadd( -73.609, -46.9436, 7.46005, 0.29 ) }
    dend_48 { pt3dadd( -74.5336, -47.5433, 7.72286, 0.29 ) }
    dend_48 { pt3dadd( -75.1757, -47.9818, 7.90171, 0.29 ) }
    dend_48 { pt3dadd( -76.1776, -48.6453, 8.17608, 0.29 ) }
    dend_48 { pt3dadd( -77.1685, -49.2137, 8.43581, 0.44 ) }
    dend_48 { pt3dadd( -78.5358, -49.9105, 8.79788, 0.44 ) }
    dend_48 { pt3dadd( -79.2566, -50.3054, 9.02191, 0.44 ) }
    dend_48 { pt3dadd( -80.3015, -50.9643, 9.40157, 0.66 ) }
    dend_48 { pt3dadd( -81.3363, -51.7649, 9.84766, 0.66 ) }
    dend_48 { pt3dadd( -81.8607, -52.2999, 10.133, 0.52 ) }
    dend_48 { pt3dadd( -82.7282, -53.601, 10.8407, 0.44 ) }
    dend_48 { pt3dadd( -83.0436, -54.5193, 11.3332, 0.66 ) }
    dend_48 { pt3dadd( -83.1883, -55.4816, 11.8445, 0.66 ) }
    dend_48 { pt3dadd( -83.2554, -56.5948, 12.4287, 0.52 ) }
    dend_48 { pt3dadd( -83.3322, -58.0722, 13.2169, 0.52 ) }
    dend_48 { pt3dadd( -83.3559, -59.4208, 13.9176, 0.44 ) }
    dend_48 { pt3dadd( -83.3417, -60.6037, 14.5215, 0.37 ) }
    dend_48 { pt3dadd( -83.3873, -62.4411, 15.4596, 0.37 ) }
    dend_48 { pt3dadd( -83.4975, -63.8891, 16.2302, 0.29 ) }
    dend_48 { pt3dadd( -83.7403, -65.3543, 17.0954, 0.29 ) }
    dend_48 { pt3dadd( -93.6733, -75.084, 19.7049, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -62.1668, -41.0689, 3.2681, 1.11 ) }
    dend_45 { pt3dadd( -62.907, -41.3622, 3.39902, 1.11 ) }
    dend_45 { pt3dadd( -63.4819, -41.6423, 3.49175, 1.11 ) }
    dend_45 { pt3dadd( -64.6469, -42.2504, 3.68793, 0.88 ) }
    dend_45 { pt3dadd( -65.5353, -42.6886, 3.83421, 0.88 ) }
    dend_45 { pt3dadd( -66.8874, -43.3015, 4.04871, 0.88 ) }
    dend_45 { pt3dadd( -68.2985, -43.8822, 4.25478, 0.88 ) }
    dend_45 { pt3dadd( -69.0716, -44.196, 4.36522, 0.88 ) }
    dend_45 { pt3dadd( -69.7901, -44.4809, 4.44793, 0.81 ) }
    dend_45 { pt3dadd( -70.597, -44.79, 4.51803, 0.81 ) }
    dend_45 { pt3dadd( -71.1804, -44.9907, 4.56254, 0.81 ) }
    dend_45 { pt3dadd( -72.2178, -45.3112, 4.64029, 0.96 ) }
    dend_45 { pt3dadd( -72.7592, -45.4957, 4.67782, 0.96 ) }
    dend_45 { pt3dadd( -73.3109, -45.7417, 4.70659, 0.96 ) }
    dend_45 { pt3dadd( -73.8315, -46.0593, 4.72078, 0.96 ) }
    dend_45 { pt3dadd( -74.5085, -46.5581, 4.73489, 0.96 ) }
    dend_45 { pt3dadd( -74.7336, -46.733, 4.7348, 0.96 ) }
    dend_45 { pt3dadd( -75.4222, -47.2571, 4.71362, 0.88 ) }
    dend_45 { pt3dadd( -76.2863, -47.8368, 4.65625, 0.88 ) }
    dend_45 { pt3dadd( -76.9051, -48.2357, 4.60555, 1.11 ) }
    dend_45 { pt3dadd( -77.5295, -48.6399, 4.55158, 1.11 ) }
    dend_45 { pt3dadd( -78.2504, -49.1261, 4.47611, 0.96 ) }
    dend_45 { pt3dadd( -78.8603, -49.5733, 4.43303, 0.96 ) }
    dend_45 { pt3dadd( -79.698, -50.2471, 4.40835, 0.88 ) }
    dend_45 { pt3dadd( -80.6574, -51.0958, 4.37639, 0.88 ) }
    dend_45 { pt3dadd( -81.3958, -51.7848, 4.31744, 0.96 ) }
    dend_45 { pt3dadd( -81.9852, -52.3468, 4.24223, 0.96 ) }
    dend_45 { pt3dadd( -82.825, -53.124, 4.10523, 0.88 ) }
    dend_45 { pt3dadd( -83.2232, -53.4733, 4.01762, 0.74 ) }
    dend_45 { pt3dadd( -84.1173, -54.2084, 3.77916, 0.96 ) }
    dend_45 { pt3dadd( -84.9094, -54.7965, 3.55315, 1.11 ) }
    dend_45 { pt3dadd( -85.5552, -55.2506, 3.37764, 1.25 ) }
    dend_45 { pt3dadd( -86.1168, -55.6449, 3.24205, 1.25 ) }
    dend_45 { pt3dadd( -87.0222, -56.2941, 3.04644, 1.03 ) }
    dend_45 { pt3dadd( -88.2458, -57.2223, 2.85801, 0.88 ) }
    dend_45 { pt3dadd( -89.1334, -57.9569, 2.77293, 0.88 ) }
    dend_45 { pt3dadd( -90.0284, -58.7483, 2.70992, 0.88 ) }
    dend_45 { pt3dadd( -90.7747, -59.4175, 2.65639, 0.88 ) }
    dend_45 { pt3dadd( -91.4964, -60.0372, 2.60318, 1.33 ) }
    dend_45 { pt3dadd( -92.0646, -60.4776, 2.56472, 1.33 ) }
    dend_45 { pt3dadd( -92.7429, -60.9669, 2.51172, 1.18 ) }
    dend_45 { pt3dadd( -93.2205, -61.2915, 2.46813, 0.96 ) }
    dend_45 { pt3dadd( -94.0815, -61.8332, 2.39453, 0.96 ) }
    dend_45 { pt3dadd( -94.8771, -62.2761, 2.3358, 0.96 ) }
    dend_45 { pt3dadd( -95.9509, -62.788, 2.28591, 0.88 ) }
    dend_45 { pt3dadd( -96.8846, -63.1341, 2.27821, 0.81 ) }
    dend_45 { pt3dadd( -97.4119, -63.2756, 2.29949, 0.81 ) }
    dend_45 { pt3dadd( -98.0278, -63.4154, 2.34091, 0.74 ) }
    dend_45 { pt3dadd( -98.4838, -63.5336, 2.38117, 0.74 ) }
    dend_45 { pt3dadd( -99.0649, -63.7333, 2.44298, 0.74 ) }
    dend_45 { pt3dadd( -99.8947, -64.1269, 2.54373, 0.74 ) }
    dend_45 { pt3dadd( -100.356, -64.4426, 2.60114, 1.11 ) }
    dend_45 { pt3dadd( -101.054, -65.1219, 2.68476, 1.11 ) }
    dend_45 { pt3dadd( -101.905, -66.1433, 2.77446, 0.88 ) }
    dend_45 { pt3dadd( -102.455, -66.9048, 2.82987, 0.88 ) }
    dend_45 { pt3dadd( -102.875, -67.5454, 2.86939, 0.88 ) }
    dend_45 { pt3dadd( -103.452, -68.4397, 2.91781, 0.81 ) }
    dend_45 { pt3dadd( -104.248, -69.5976, 2.9416, 0.81 ) }
    dend_45 { pt3dadd( -104.657, -70.1418, 2.93511, 1.18 ) }
    dend_45 { pt3dadd( -105.109, -70.7262, 2.90146, 1.33 ) }
    dend_45 { pt3dadd( -105.6, -71.3184, 2.84517, 1.33 ) }
    dend_45 { pt3dadd( -106.406, -72.2097, 2.73177, 0.88 ) }
    dend_45 { pt3dadd( -107.208, -73.0249, 2.5892, 0.81 ) }
    dend_45 { pt3dadd( -108.05, -73.8171, 2.43162, 0.81 ) }
    dend_45 { pt3dadd( -109.052, -74.7151, 2.22579, 0.81 ) }
    dend_45 { pt3dadd( -109.811, -75.3694, 2.04455, 0.81 ) }
    dend_45 { pt3dadd( -110.526, -75.9695, 1.86517, 1.11 ) }
    dend_45 { pt3dadd( -110.96, -76.3297, 1.75006, 1.25 ) }
    dend_45 { pt3dadd( -111.479, -76.7585, 1.61303, 2.14 ) }
    dend_45 { pt3dadd( -111.979, -77.1967, 1.46546, 2.5 ) }
    dend_45 { pt3dadd( -112.663, -77.7885, 1.26245, 1.92 ) }
    dend_45 { pt3dadd( -113.646, -78.7636, 0.931421, 1.11 ) }
    dend_45 { pt3dadd( -114.064, -79.2372, 0.775509, 0.96 ) }
    dend_45 { pt3dadd( -114.636, -79.9455, 0.55585, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -115.366, -80.9027, 0.236717, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -11.062, -88.8097, -4.81146, 0.37 ) }
    dend_41 { pt3dadd( -10.4764, -91.1238, -3.70914, 0.37 ) }
    dend_41 { pt3dadd( -10.2976, -91.7228, -3.44525, 0.52 ) }
    dend_41 { pt3dadd( -10.0648, -92.4575, -3.15087, 0.66 ) }
    dend_41 { pt3dadd( -9.7999, -93.2946, -2.83619, 0.37 ) }
    dend_41 { pt3dadd( -9.59824, -93.9136, -2.61119, 0.44 ) }
    dend_41 { pt3dadd( -9.35913, -94.6342, -2.35993, 0.44 ) }
    dend_41 { pt3dadd( -9.04649, -95.4954, -2.14545, 0.29 ) }
    dend_41 { pt3dadd( -8.72425, -96.3046, -1.93465, 0.29 ) }
    dend_41 { pt3dadd( -8.39765, -96.9864, -1.74565, 0.59 ) }
    dend_41 { pt3dadd( -8.05462, -97.5754, -1.58423, 0.59 ) }
    dend_41 { pt3dadd( -7.62309, -98.1932, -1.41678, 0.37 ) }
    dend_41 { pt3dadd( -7.14585, -98.7781, -1.26461, 0.66 ) }
    dend_41 { pt3dadd( -6.67104, -99.2748, -1.13584, 0.52 ) }
    dend_41 { pt3dadd( -5.93456, -99.9425, -0.969901, 0.37 ) }
    dend_41 { pt3dadd( -5.36339, -100.413, -0.863831, 0.37 ) }
    dend_41 { pt3dadd( -4.49716, -101.109, -0.730753, 0.37 ) }
    dend_41 { pt3dadd( -3.64883, -101.779, -0.623976, 1.03 ) }
    dend_41 { pt3dadd( -3.02904, -102.269, -0.562936, 1.18 ) }
    dend_41 { pt3dadd( -2.44156, -102.74, -0.524922, 0.81 ) }
    dend_41 { pt3dadd( -1.97641, -103.12, -0.508636, 0.52 ) }
    dend_41 { pt3dadd( -1.10611, -103.834, -0.479375, 0.52 ) }
    dend_41 { pt3dadd( -0.281033, -104.539, -0.454897, 0.59 ) }
    dend_41 { pt3dadd( 0.439607, -105.202, -0.461629, 0.59 ) }
    dend_41 { pt3dadd( 1.02517, -105.796, -0.486621, 0.81 ) }
    dend_41 { pt3dadd( 1.49991, -106.312, -0.516582, 0.81 ) }
    dend_41 { pt3dadd( 2.02042, -106.91, -0.561213, 0.66 ) }
    dend_41 { pt3dadd( 2.39485, -107.365, -0.60346, 0.29 ) }
    dend_41 { pt3dadd( 3.24813, -108.471, -0.717528, 0.52 ) }
    dend_41 { pt3dadd( 3.97369, -109.434, -0.821343, 1.03 ) }
    dend_41 { pt3dadd( 4.23355, -109.786, -0.86392, 1.47 ) }
    dend_41 { pt3dadd( 4.71099, -110.402, -0.943293, 1.62 ) }
    dend_41 { pt3dadd( 5.35953, -111.152, -1.04642, 1.03 ) }
    dend_41 { pt3dadd( 5.99244, -111.801, -1.12343, 0.29 ) }
    dend_41 { pt3dadd( 6.60991, -112.368, -1.17295, 0.29 ) }
    dend_41 { pt3dadd( 7.33692, -112.979, -1.22819, 0.37 ) }
    dend_41 { pt3dadd( 8.09468, -113.608, -1.28486, 0.66 ) }
    dend_41 { pt3dadd( 8.48529, -113.93, -1.30889, 0.81 ) }
    dend_41 { pt3dadd( 9.10342, -114.422, -1.3299, 0.96 ) }
    dend_41 { pt3dadd( 9.57003, -114.788, -1.33417, 0.44 ) }
    dend_41 { pt3dadd( 9.94003, -115.075, -1.32566, 0.29 ) }
    dend_41 { pt3dadd( 10.6553, -115.618, -1.28091, 0.29 ) }
    dend_41 { pt3dadd( 11.1909, -116.07, -1.23909, 0.59 ) }
    dend_41 { pt3dadd( 11.6988, -116.556, -1.19192, 0.74 ) }
    dend_41 { pt3dadd( 12.1012, -116.985, -1.15034, 0.74 ) }
    dend_41 { pt3dadd( 12.6347, -117.624, -1.09364, 0.74 ) }
    dend_41 { pt3dadd( 13.0575, -118.181, -1.0541, 0.44 ) }
    dend_41 { pt3dadd( 13.6141, -118.979, -1.00859, 0.29 ) }
    dend_41 { pt3dadd( 13.9407, -119.479, -0.989135, 0.66 ) }
    dend_41 { pt3dadd( 14.3466, -120.115, -0.975822, 0.88 ) }
    dend_41 { pt3dadd( 14.7263, -120.703, -0.968628, 0.96 ) }
    dend_41 { pt3dadd( 15.2739, -121.527, -0.949834, 0.66 ) }
    dend_41 { pt3dadd( 15.8385, -122.372, -0.923837, 0.37 ) }
    dend_41 { pt3dadd( 16.5104, -123.325, -0.884427, 0.74 ) }
    dend_41 { pt3dadd( 16.8861, -123.841, -0.86005, 0.81 ) }
    dend_41 { pt3dadd( 17.319, -124.445, -0.827586, 0.37 ) }
    dend_41 { pt3dadd( 17.8939, -125.288, -0.779686, 0.37 ) }
    dend_41 { pt3dadd( 18.3844, -126.043, -0.736633, 0.37 ) }
    dend_41 { pt3dadd( 18.7899, -126.69, -0.702863, 0.37 ) }
    dend_41 { pt3dadd( 19.1137, -127.232, -0.679471, 0.52 ) }
    dend_41 { pt3dadd( 19.5013, -127.872, -0.660671, 0.52 ) }
    dend_41 { pt3dadd( 19.9037, -128.524, -0.653277, 0.37 ) }
    dend_41 { pt3dadd( 20.3176, -129.209, -0.661608, 0.37 ) }
    dend_41 { pt3dadd( 20.8045, -129.991, -0.671189, 0.81 ) }
    dend_41 { pt3dadd( 21.1029, -130.421, -0.674802, 0.88 ) }
    dend_41 { pt3dadd( 21.6188, -131.08, -0.678383, 0.59 ) }
    dend_41 { pt3dadd( 22.0701, -131.608, -0.677937, 0.37 ) }
    dend_41 { pt3dadd( 22.5355, -132.109, -0.675156, 0.37 ) }
    dend_41 { pt3dadd( 23.1335, -132.715, -0.664703, 0.44 ) }
    dend_41 { pt3dadd( 24.3674, -133.875, -0.630712, 0.44 ) }
    dend_41 { pt3dadd( 25.182, -134.556, -0.601693, 1.18 ) }
    dend_41 { pt3dadd( 25.7985, -135.033, -0.574221, 1.47 ) }
    dend_41 { pt3dadd( 26.4845, -135.534, -0.552138, 1.47 ) }
    dend_41 { pt3dadd( 27.4974, -136.265, -0.534832, 1.18 ) }
    dend_41 { pt3dadd( 28.2839, -136.866, -0.543038, 0.29 ) }
    dend_41 { pt3dadd( 28.7729, -137.273, -0.56516, 0.29 ) }
    dend_41 { pt3dadd( 29.1455, -137.604, -0.601517, 0.29 ) }
    dend_41 { pt3dadd( 29.8134, -138.251, -0.724218, 0.59 ) }
    dend_41 { pt3dadd( 30.4589, -138.949, -0.896805, 0.66 ) }
    dend_41 { pt3dadd( 30.8132, -139.384, -1.02751, 0.74 ) }
    dend_41 { pt3dadd( 31.1739, -139.89, -1.18293, 0.59 ) }
    dend_41 { pt3dadd( 31.566, -140.512, -1.36775, 0.44 ) }
    dend_41 { pt3dadd( 32.0313, -141.305, -1.60504, 0.29 ) }
    dend_41 { pt3dadd( 32.2986, -141.839, -1.75605, 0.37 ) }
    dend_41 { pt3dadd( 32.6822, -142.733, -2.0006, 0.52 ) }
    dend_41 { pt3dadd( 32.9311, -143.416, -2.15876, 1.03 ) }
    dend_41 { pt3dadd( 33.1681, -144.13, -2.32373, 1.55 ) }
    dend_41 { pt3dadd( 33.3724, -144.748, -2.45735, 1.55 ) }
    dend_41 { pt3dadd( 33.8781, -146.308, -2.78974, 0.44 ) }
    dend_41 { pt3dadd( 34.2294, -147.327, -3.01719, 0.37 ) }
    dend_41 { pt3dadd( 35.1491, -149.605, -3.58469, 0.29 ) }
    dend_41 { pt3dadd( 35.3896, -150.091, -3.71573, 0.29 ) }
    dend_41 { pt3dadd( 36.168, -151.347, -4.07083, 1.47 ) }
    dend_41 { pt3dadd( 36.4951, -151.759, -4.19744, 1.92 ) }
    dend_41 { pt3dadd( 37.1784, -152.423, -4.43898, 2.06 ) }
    dend_41 { pt3dadd( 38.243, -153.25, -4.83628, 0.81 ) }
    dend_41 { pt3dadd( 39.6653, -154.134, -5.42062, 0.29 ) }
    dend_41 { pt3dadd( 40.5706, -154.658, -5.81726, 0.29 ) }
    dend_41 { pt3dadd( 41.7572, -155.32, -6.32607, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 42.3372, -155.651, -6.55061, 0.52 ) }
    dend_41 { pt3dadd( 43.7027, -156.465, -7.0051, 0.29 ) }
    dend_41 { pt3dadd( 44.6953, -157.097, -7.25538, 0.88 ) }
    dend_41 { pt3dadd( 45.2621, -157.484, -7.32906, 0.74 ) }
    dend_41 { pt3dadd( 46.5582, -158.481, -7.2773, 0.29 ) }
    dend_41 { pt3dadd( 47.4426, -159.212, -7.09199, 0.29 ) }
    dend_41 { pt3dadd( 48.2895, -159.945, -6.81475, 0.59 ) }
    dend_41 { pt3dadd( 48.8272, -160.431, -6.58475, 0.66 ) }
    dend_41 { pt3dadd( 49.8366, -161.376, -6.10908, 0.29 ) }
    dend_41 { pt3dadd( 50.8421, -162.366, -5.63908, 0.29 ) }
    dend_41 { pt3dadd( 51.5001, -163.076, -5.37286, 0.29 ) }
    dend_41 { pt3dadd( 52.1009, -163.809, -5.1639, 1.03 ) }
    dend_41 { pt3dadd( 52.5381, -164.383, -5.04527, 1.47 ) }
    dend_41 { pt3dadd( 52.9364, -164.936, -4.97544, 1.18 ) }
    dend_41 { pt3dadd( 53.6712, -166.014, -4.91732, 0.22 ) }
    dend_41 { pt3dadd( 54.3308, -167.008, -4.89873, 0.22 ) }
    dend_41 { pt3dadd( 55.1773, -168.292, -4.91078, 0.22 ) }
    dend_41 { pt3dadd( 55.5407, -168.821, -4.91763, 0.52 ) }
    dend_41 { pt3dadd( 56.1713, -169.705, -4.93218, 0.29 ) }
    dend_41 { pt3dadd( 56.7723, -170.523, -4.95437, 0.29 ) }
    dend_41 { pt3dadd( 57.1583, -171.017, -4.97991, 0.88 ) }
    dend_41 { pt3dadd( 57.6854, -171.681, -4.9923, 0.88 ) }
    dend_41 { pt3dadd( 58.4575, -172.683, -4.98968, 0.29 ) }
    dend_41 { pt3dadd( 58.8052, -173.147, -4.96924, 0.29 ) }
    dend_41 { pt3dadd( 59.4047, -173.946, -4.87148, 0.96 ) }
    dend_41 { pt3dadd( 59.8176, -174.474, -4.74885, 1.4 ) }
    dend_41 { pt3dadd( 60.2491, -175.01, -4.57791, 1.77 ) }
    dend_41 { pt3dadd( 60.5174, -175.325, -4.45092, 1.77 ) }
    dend_41 { pt3dadd( 61.5706, -176.493, -3.92862, 0.22 ) }
    dend_41 { pt3dadd( 62.6495, -177.613, -3.35618, 0.22 ) }
    dend_41 { pt3dadd( 63.5058, -178.425, -2.91105, 0.88 ) }
    dend_41 { pt3dadd( 63.8962, -178.777, -2.7218, 1.33 ) }
    dend_41 { pt3dadd( 64.3031, -179.125, -2.55187, 1.33 ) }
    dend_41 { pt3dadd( 65.2409, -179.898, -2.19479, 0.22 ) }
    dend_41 { pt3dadd( 66.4166, -180.83, -1.8057, 0.22 ) }
    dend_41 { pt3dadd( 67.6794, -181.835, -1.46545, 0.22 ) }
    dend_41 { pt3dadd( 68.8363, -182.79, -1.22282, 0.22 ) }
    dend_41 { pt3dadd( 69.5125, -183.372, -1.10643, 0.74 ) }
    dend_41 { pt3dadd( 69.8779, -183.705, -1.05725, 0.88 ) }
    dend_41 { pt3dadd( 70.3067, -184.129, -1.02267, 0.52 ) }
    dend_41 { pt3dadd( 71.0602, -184.981, -1.01866, 0.22 ) }
    dend_41 { pt3dadd( 71.4357, -185.465, -1.0325, 0.88 ) }
    dend_41 { pt3dadd( 71.8419, -186.037, -1.0438, 1.33 ) }
    dend_41 { pt3dadd( 72.159, -186.511, -1.04456, 1.33 ) }
    dend_41 { pt3dadd( 72.8856, -187.669, -1.02642, 0.29 ) }
    dend_41 { pt3dadd( 73.7125, -189.086, -0.968019, 0.29 ) }
    dend_41 { pt3dadd( 74.103, -189.79, -0.91421, 0.44 ) }
    dend_41 { pt3dadd( 74.4356, -190.408, -0.844441, 0.59 ) }
    dend_41 { pt3dadd( 74.7337, -190.974, -0.761733, 0.59 ) }
    dend_41 { pt3dadd( 75.2039, -191.879, -0.601428, 0.22 ) }
    dend_41 { pt3dadd( 75.6755, -192.808, -0.420972, 0.22 ) }
    dend_41 { pt3dadd( 75.9693, -193.375, -0.309199, 0.74 ) }
    dend_41 { pt3dadd( 76.1487, -193.713, -0.248391, 0.88 ) }
    dend_41 { pt3dadd( 76.3941, -194.146, -0.185783, 0.88 ) }
    dend_41 { pt3dadd( 76.8883, -194.993, -0.0657416, 0.22 ) }
    dend_41 { pt3dadd( 77.7764, -196.43, 0.119057, 0.22 ) }
    dend_41 { pt3dadd( 78.1798, -197.061, 0.179994, 0.52 ) }
    dend_41 { pt3dadd( 78.445, -197.472, 0.205822, 0.66 ) }
    dend_41 { pt3dadd( 78.8636, -198.112, 0.232467, 0.44 ) }
    dend_41 { pt3dadd( 85.5599, -204.726, -0.803619, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.062, -88.8097, -4.81146, 2.28 ) }
    dend_34 { pt3dadd( -11.6562, -89.8284, -4.69699, 2.28 ) }
    dend_34 { pt3dadd( -12.2203, -90.6968, -4.5548, 1.62 ) }
    dend_34 { pt3dadd( -12.9382, -91.7263, -4.3843, 1.33 ) }
    dend_34 { pt3dadd( -13.6508, -92.6921, -4.24346, 0.88 ) }
    dend_34 { pt3dadd( -13.9966, -93.1362, -4.18873, 0.88 ) }
    dend_34 { pt3dadd( -14.5403, -93.7864, -4.1228, 1.03 ) }
    dend_34 { pt3dadd( -15.6129, -94.9426, -4.0386, 1.03 ) }
    dend_34 { pt3dadd( -16.5284, -95.8206, -4.00692, 0.96 ) }
    dend_34 { pt3dadd( -17.2464, -96.4517, -4.02312, 0.88 ) }
    dend_34 { pt3dadd( -17.8536, -96.99, -4.07667, 1.11 ) }
    dend_34 { pt3dadd( -18.5101, -97.6439, -4.1907, 1.33 ) }
    dend_34 { pt3dadd( -19.0182, -98.2729, -4.3346, 1.55 ) }
    dend_34 { pt3dadd( -19.417, -98.921, -4.50911, 1.25 ) }
    dend_34 { pt3dadd( -19.6999, -99.5816, -4.69256, 0.96 ) }
    dend_34 { pt3dadd( -19.9359, -100.498, -4.93307, 0.88 ) }
    dend_34 { pt3dadd( -20.101, -101.642, -5.22623, 0.88 ) }
    dend_34 { pt3dadd( -20.1946, -102.87, -5.52362, 0.88 ) }
    dend_34 { pt3dadd( -20.2387, -103.952, -5.77088, 1.03 ) }
    dend_34 { pt3dadd( -20.2545, -104.965, -5.98556, 1.03 ) }
    dend_34 { pt3dadd( -20.2637, -106.158, -6.21101, 1.03 ) }
    dend_34 { pt3dadd( -20.2669, -107.246, -6.38959, 1.25 ) }
    dend_34 { pt3dadd( -20.258, -108.501, -6.55264, 1.55 ) }
    dend_34 { pt3dadd( -20.232, -109.462, -6.64089, 1.55 ) }
    dend_34 { pt3dadd( -20.158, -110.789, -6.71806, 1.33 ) }
    dend_34 { pt3dadd( -20.0761, -111.874, -6.75544, 1.33 ) }
    dend_34 { pt3dadd( -20.0074, -112.843, -6.77652, 1.11 ) }
    dend_34 { pt3dadd( -19.9357, -113.879, -6.75147, 1.11 ) }
    dend_34 { pt3dadd( -19.8864, -115.017, -6.6894, 0.96 ) }
    dend_34 { pt3dadd( -19.8838, -115.862, -6.62595, 0.96 ) }
    dend_34 { pt3dadd( -19.9351, -117.083, -6.49633, 0.88 ) }
    dend_34 { pt3dadd( -20.0581, -118.69, -6.29272, 0.88 ) }
    dend_34 { pt3dadd( -20.206, -120.083, -6.08583, 1.03 ) }
    dend_34 { pt3dadd( -20.3682, -121.321, -5.87848, 1.25 ) }
    dend_34 { pt3dadd( -20.5494, -122.496, -5.66779, 1.33 ) }
    dend_34 { pt3dadd( -20.7087, -123.421, -5.49483, 1.62 ) }
    dend_34 { pt3dadd( -20.8666, -124.372, -5.30309, 2.5 ) }
    dend_34 { pt3dadd( -20.9334, -124.889, -5.1974, 2.8 ) }
    dend_34 { pt3dadd( -20.9967, -125.53, -5.09527, 3.02 ) }
    dend_34 { pt3dadd( -21.0295, -126.132, -4.99056, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -21.0466, -126.535, -4.9217, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.666919, -44.0803, -8.19188, 0.81 ) }
    dend_30 { pt3dadd( -1.04133, -45.7122, -8.16054, 0.81 ) }
    dend_30 { pt3dadd( -1.38661, -46.809, -8.09591, 0.66 ) }
    dend_30 { pt3dadd( -1.85888, -48.0328, -8.00832, 0.66 ) }
    dend_30 { pt3dadd( -2.40733, -49.3135, -7.9155, 0.52 ) }
    dend_30 { pt3dadd( -2.63462, -49.8249, -7.87967, 0.52 ) }
    dend_30 { pt3dadd( -3.23665, -51.1723, -7.79023, 0.74 ) }
    dend_30 { pt3dadd( -3.84138, -52.543, -7.63643, 0.74 ) }
    dend_30 { pt3dadd( -4.37566, -53.6759, -7.52197, 0.88 ) }
    dend_30 { pt3dadd( -4.99779, -54.9027, -7.43033, 0.59 ) }
    dend_30 { pt3dadd( -5.40637, -55.7017, -7.40455, 1.03 ) }
    dend_30 { pt3dadd( -5.77963, -56.4866, -7.38673, 1.25 ) }
    dend_30 { pt3dadd( -6.14615, -57.411, -7.36643, 1.03 ) }
    dend_30 { pt3dadd( -6.53058, -58.607, -7.34251, 0.66 ) }
    dend_30 { pt3dadd( -6.818, -59.5829, -7.32671, 0.66 ) }
    dend_30 { pt3dadd( -7.11194, -60.59, -7.32668, 0.81 ) }
    dend_30 { pt3dadd( -7.43472, -61.7692, -7.36111, 0.81 ) }
    dend_30 { pt3dadd( -7.66245, -62.7566, -7.43331, 0.66 ) }
    dend_30 { pt3dadd( -7.8373, -63.8036, -7.55622, 0.52 ) }
    dend_30 { pt3dadd( -7.91036, -64.4256, -7.66812, 0.52 ) }
    dend_30 { pt3dadd( -7.98904, -65.1878, -7.82696, 0.52 ) }
    dend_30 { pt3dadd( -8.10593, -66.2736, -8.08286, 0.66 ) }
    dend_30 { pt3dadd( -8.23009, -67.2591, -8.32692, 0.66 ) }
    dend_30 { pt3dadd( -8.38524, -68.2998, -8.59639, 0.59 ) }
    dend_30 { pt3dadd( -8.5853, -69.4401, -8.88303, 1.18 ) }
    dend_30 { pt3dadd( -8.75143, -70.4336, -9.12185, 1.55 ) }
    dend_30 { pt3dadd( -8.93343, -71.3834, -9.33119, 1.99 ) }
    dend_30 { pt3dadd( -9.24259, -72.5306, -9.56239, 2.73 ) }
    dend_30 { pt3dadd( -9.5387, -73.3769, -9.71747, 2.87 ) }
    dend_30 { pt3dadd( -9.86442, -74.1646, -9.8661, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.666919, -44.0803, -8.19188, 0.52 ) }
    dend_29 { pt3dadd( -0.330387, -45.4072, -9.6749, 0.52 ) }
    dend_29 { pt3dadd( -0.2521, -45.7209, -9.98848, 0.52 ) }
    dend_29 { pt3dadd( 0.0349823, -46.7562, -11.0338, 0.52 ) }
    dend_29 { pt3dadd( 0.287457, -47.5218, -11.8287, 0.66 ) }
    dend_29 { pt3dadd( 0.470886, -47.9894, -12.3058, 0.66 ) }
    dend_29 { pt3dadd( 0.652441, -48.3832, -12.7084, 0.44 ) }
    dend_29 { pt3dadd( 0.859443, -48.9289, -13.2457, 0.88 ) }
    dend_29 { pt3dadd( 1.05072, -49.4428, -13.7079, 1.33 ) }
    dend_29 { pt3dadd( 1.27613, -49.9967, -14.1697, 1.47 ) }
    dend_29 { pt3dadd( 1.51114, -50.6371, -14.7769, 1.03 ) }
    dend_29 { pt3dadd( 1.71018, -51.6364, -15.8041, 0.44 ) }
    dend_29 { pt3dadd( 1.61407, -52.2509, -16.4985, 0.44 ) }
    dend_29 { pt3dadd( 1.24624, -52.9589, -17.4481, 0.37 ) }
    dend_29 { pt3dadd( 0.859078, -53.473, -18.243, 0.37 ) }
    dend_29 { pt3dadd( 0.311488, -54.1301, -19.4427, 0.37 ) }
    dend_29 { pt3dadd( -0.0518703, -54.5574, -20.3645, 0.74 ) }
    dend_29 { pt3dadd( -0.275047, -54.8454, -21.0728, 0.96 ) }
    dend_29 { pt3dadd( -0.498354, -55.2434, -22.067, 0.96 ) }
    dend_29 { pt3dadd( -0.80423, -55.9647, -23.826, 0.44 ) }
    dend_29 { pt3dadd( -0.930024, -56.461, -24.958, 1.33 ) }
    dend_29 { pt3dadd( -1.021, -57.144, -26.3945, 1.55 ) }
    dend_29 { pt3dadd( -1.08294, -57.7741, -27.6492, 1.33 ) }
    dend_29 { pt3dadd( -1.12825, -58.6368, -29.2277, 0.81 ) }
    dend_29 { pt3dadd( -1.1226, -59.0077, -29.842, 1.25 ) }
    dend_29 { pt3dadd( -1.07103, -59.4684, -30.5213, 0.88 ) }
    dend_29 { pt3dadd( -1.00096, -59.9886, -31.1791, 0.37 ) }
    dend_29 { pt3dadd( -0.926206, -60.4495, -31.6647, 0.81 ) }
    dend_29 { pt3dadd( -0.845293, -60.9453, -32.1246, 1.03 ) }
    dend_29 { pt3dadd( -0.778779, -61.2438, -32.3759, 1.03 ) }
    dend_29 { pt3dadd( -0.497843, -62.278, -33.2228, 0.29 ) }
    dend_29 { pt3dadd( -0.333474, -62.8033, -33.6334, 0.29 ) }
    dend_29 { pt3dadd( -0.0754049, -63.4832, -34.1413, 1.84 ) }
    dend_29 { pt3dadd( 0.188891, -64.0541, -34.5829, 2.14 ) }
    dend_29 { pt3dadd( 0.949965, -65.4578, -35.7552, 0.29 ) }
    dend_29 { pt3dadd( 1.35783, -66.0987, -36.3254, 0.81 ) }
    dend_29 { pt3dadd( 1.78645, -66.6719, -36.8656, 0.81 ) }
    dend_29 { pt3dadd( 2.24085, -67.2032, -37.4137, 0.52 ) }
    dend_29 { pt3dadd( 2.86216, -67.8542, -38.1741, 1.25 ) }
    dend_29 { pt3dadd( 3.26607, -68.2476, -38.6836, 1.4 ) }
    dend_29 { pt3dadd( 4.30446, -69.2183, -39.9936, 0.22 ) }
    dend_29 { pt3dadd( 4.95311, -69.8092, -40.7719, 0.22 ) }
    dend_29 { pt3dadd( 5.69688, -70.4858, -41.6195, 1.4 ) }
    dend_29 { pt3dadd( 6.16758, -70.938, -42.1299, 2.21 ) }
    dend_29 { pt3dadd( 6.38724, -71.1636, -42.3481, 2.21 ) }
    dend_29 { pt3dadd( 7.83715, -72.7657, -43.6702, 0.22 ) }
    dend_29 { pt3dadd( 8.22882, -73.2187, -44.0135, 0.74 ) }
    dend_29 { pt3dadd( 8.57343, -73.6396, -44.3239, 1.03 ) }
    dend_29 { pt3dadd( 9.12722, -74.371, -44.8366, 0.59 ) }
    dend_29 { pt3dadd( 10.4161, -76.1809, -46.0516, 0.22 ) }
    dend_29 { pt3dadd( 12.038, -78.5353, -47.6346, 0.22 ) }
    dend_29 { pt3dadd( 12.5939, -79.3726, -48.222, 0.81 ) }
    dend_29 { pt3dadd( 13.0029, -79.9911, -48.6702, 0.96 ) }
    dend_29 { pt3dadd( 14.3167, -82.0064, -50.1723, 0.22 ) }
    dend_29 { pt3dadd( 15.1257, -83.2493, -51.1568, 0.22 ) }
    dend_29 { pt3dadd( 15.5605, -83.9354, -51.7415, 0.88 ) }
    dend_29 { pt3dadd( 15.9774, -84.5996, -52.3589, 0.88 ) }
    dend_29 { pt3dadd( 17.139, -86.4542, -54.1445, 0.15 ) }
    dend_29 { pt3dadd( 18.0338, -87.8079, -55.4311, 0.15 ) }
    dend_29 { pt3dadd( 18.5602, -88.5718, -56.1747, 0.15 ) }
    dend_29 { pt3dadd( 19.0409, -89.2681, -56.8413, 1.62 ) }
    dend_29 { pt3dadd( 19.3426, -89.7182, -57.2488, 1.92 ) }
    dend_29 { pt3dadd( 19.5881, -90.0801, -57.5497, 1.92 ) }
    dend_29 { pt3dadd( 21.2024, -92.4918, -59.4137, 0.22 ) }
    dend_29 { pt3dadd( 21.555, -93.0077, -59.7874, 0.66 ) }
    dend_29 { pt3dadd( 21.8251, -93.4091, -60.064, 0.88 ) }
    dend_29 { pt3dadd( 22.1018, -93.8184, -60.3495, 0.88 ) }
    dend_29 { pt3dadd( 22.953, -95.1542, -61.3861, 0.15 ) }
    dend_29 { pt3dadd( 23.5309, -96.2374, -62.3349, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 23.8024, -96.899, -62.9632, 0.81 ) }
    dend_29 { pt3dadd( 23.9461, -97.3737, -63.4122, 1.03 ) }
    dend_29 { pt3dadd( 24.0346, -97.8057, -63.8164, 1.03 ) }
    dend_29 { pt3dadd( 24.1765, -99.2644, -65.176, 0.22 ) }
    dend_29 { pt3dadd( 24.1467, -100.855, -66.6627, 0.22 ) }
    dend_29 { pt3dadd( 24.0975, -101.503, -67.3, 0.22 ) }
    dend_29 { pt3dadd( 23.9979, -102.441, -68.2686, 1.03 ) }
    dend_29 { pt3dadd( 23.947, -102.927, -68.7771, 1.62 ) }
    dend_29 { pt3dadd( 23.8891, -103.419, -69.3183, 1.62 ) }
    dend_29 { pt3dadd( 23.7942, -104.245, -70.292, 1.03 ) }
    dend_29 { pt3dadd( 23.6147, -105.936, -72.3908, 0.22 ) }
    dend_29 { pt3dadd( 23.5004, -106.725, -73.4731, 0.44 ) }
    dend_29 { pt3dadd( 23.4446, -107.157, -74.1026, 0.44 ) }
    dend_29 { pt3dadd( 23.3328, -108.11, -75.5053, 0.66 ) }
    dend_29 { pt3dadd( 23.2925, -108.589, -76.1966, 0.96 ) }
    dend_29 { pt3dadd( 23.2643, -109.143, -76.9837, 0.37 ) }
    dend_29 { pt3dadd( 23.2442, -110.917, -79.4281, 0.66 ) }
    dend_29 { pt3dadd( 23.2593, -111.28, -79.9216, 0.66 ) }
    dend_29 { pt3dadd( 23.3435, -112.601, -81.7363, 0.22 ) }
    dend_29 { pt3dadd( 23.4305, -113.296, -82.666, 0.22 ) }
    dend_29 { pt3dadd( 23.5381, -113.915, -83.4844, 0.81 ) }
    dend_29 { pt3dadd( 23.6858, -114.47, -84.2114, 0.96 ) }
    dend_29 { pt3dadd( 23.8429, -114.83, -84.5906, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 21.0606, 162.696, -33.3806, 0.37 ) }
    dend_24 { pt3dadd( 22.3841, 162.029, -31.0496, 0.37 ) }
    dend_24 { pt3dadd( 22.6542, 161.892, -30.574, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 21.0606, 162.696, -33.3806, 0.22 ) }
    dend_23 { pt3dadd( 21.9363, 164.543, -33.4876, 0.22 ) }
    dend_23 { pt3dadd( 22.3832, 165.546, -33.5915, 0.22 ) }
    dend_23 { pt3dadd( 22.7253, 166.34, -33.693, 0.74 ) }
    dend_23 { pt3dadd( 22.8457, 166.634, -33.7337, 0.74 ) }
    dend_23 { pt3dadd( 23.4035, 167.996, -33.9224, 0.15 ) }
    dend_23 { pt3dadd( 23.7644, 168.878, -34.0445, 0.15 ) }
    dend_23 { pt3dadd( 24.0283, 169.512, -34.2086, 0.66 ) }
    dend_23 { pt3dadd( 24.1608, 169.904, -34.2962, 0.88 ) }
    dend_23 { pt3dadd( 24.3006, 170.353, -34.3702, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.7046, 54.2924, 0.0131895, 0.66 ) }
    dend_17 { pt3dadd( -16.3062, 56.404, -0.378542, 0.66 ) }
    dend_17 { pt3dadd( -16.4562, 57.2093, -0.514395, 0.96 ) }
    dend_17 { pt3dadd( -16.6215, 58.1572, -0.657947, 0.96 ) }
    dend_17 { pt3dadd( -16.8333, 59.4549, -0.840644, 0.59 ) }
    dend_17 { pt3dadd( -17.0045, 60.6065, -0.997778, 0.59 ) }
    dend_17 { pt3dadd( -17.1829, 61.9696, -1.18274, 0.59 ) }
    dend_17 { pt3dadd( -17.3747, 63.9614, -1.40415, 0.59 ) }
    dend_17 { pt3dadd( -17.4347, 64.9021, -1.51404, 0.52 ) }
    dend_17 { pt3dadd( -17.4921, 66.3087, -1.68182, 0.88 ) }
    dend_17 { pt3dadd( -17.5369, 67.3269, -1.81063, 1.11 ) }
    dend_17 { pt3dadd( -17.6201, 68.5391, -1.97176, 1.11 ) }
    dend_17 { pt3dadd( -17.7352, 69.9349, -2.14981, 0.74 ) }
    dend_17 { pt3dadd( -17.8883, 71.3981, -2.32454, 0.74 ) }
    dend_17 { pt3dadd( -18.1014, 73.2713, -2.53605, 0.74 ) }
    dend_17 { pt3dadd( -18.2765, 74.5618, -2.68123, 0.52 ) }
    dend_17 { pt3dadd( -18.4996, 75.9384, -2.84714, 0.52 ) }
    dend_17 { pt3dadd( -18.6775, 76.9276, -2.97548, 0.96 ) }
    dend_17 { pt3dadd( -18.9549, 78.3828, -3.19544, 1.11 ) }
    dend_17 { pt3dadd( -19.3855, 80.5344, -3.55707, 1.11 ) }
    dend_17 { pt3dadd( -19.6734, 81.9451, -3.8144, 1.11 ) }
    dend_17 { pt3dadd( -19.9337, 83.3532, -4.06771, 0.81 ) }
    dend_17 { pt3dadd( -20.1374, 84.5926, -4.28883, 0.74 ) }
    dend_17 { pt3dadd( -20.3156, 85.8865, -4.5164, 0.74 ) }
    dend_17 { pt3dadd( -20.443, 87.1031, -4.72153, 0.44 ) }
    dend_17 { pt3dadd( -20.535, 88.1357, -4.87631, 0.44 ) }
    dend_17 { pt3dadd( -20.6768, 89.8428, -5.0812, 0.74 ) }
    dend_17 { pt3dadd( -20.7659, 91.0251, -5.19834, 0.74 ) }
    dend_17 { pt3dadd( -20.8489, 92.2839, -5.31472, 0.37 ) }
    dend_17 { pt3dadd( -20.8949, 93.5922, -5.44006, 0.74 ) }
    dend_17 { pt3dadd( -20.933, 94.7278, -5.59786, 0.96 ) }
    dend_17 { pt3dadd( -20.9822, 96.0217, -5.83504, 0.96 ) }
    dend_17 { pt3dadd( -21.0523, 97.4337, -6.17324, 0.81 ) }
    dend_17 { pt3dadd( -21.1196, 98.7524, -6.53694, 0.52 ) }
    dend_17 { pt3dadd( -21.1828, 100.125, -6.95747, 0.52 ) }
    dend_17 { pt3dadd( -21.2273, 101.922, -7.55501, 1.03 ) }
    dend_17 { pt3dadd( -21.2335, 102.876, -7.88945, 1.55 ) }
    dend_17 { pt3dadd( -21.233, 103.736, -8.20324, 1.69 ) }
    dend_17 { pt3dadd( -21.2313, 104.297, -8.40769, 1.69 ) }
    dend_17 { pt3dadd( -21.2115, 105.688, -8.89033, 0.37 ) }
    dend_17 { pt3dadd( -21.1725, 106.859, -9.25142, 0.44 ) }
    dend_17 { pt3dadd( -21.1147, 107.475, -9.40845, 0.44 ) }
    dend_17 { pt3dadd( -21.0186, 108.187, -9.57544, 0.44 ) }
    dend_17 { pt3dadd( -20.8253, 109.372, -9.8325, 0.29 ) }
    dend_17 { pt3dadd( -20.7245, 109.876, -9.94468, 0.59 ) }
    dend_17 { pt3dadd( -20.5136, 110.732, -10.1448, 0.44 ) }
    dend_17 { pt3dadd( -20.1636, 112.08, -10.4601, 0.29 ) }
    dend_17 { pt3dadd( -19.8582, 113.33, -10.7411, 1.18 ) }
    dend_17 { pt3dadd( -19.7053, 114.003, -10.8854, 1.18 ) }
    dend_17 { pt3dadd( -19.4847, 115.013, -11.1016, 0.52 ) }
    dend_17 { pt3dadd( -19.275, 115.982, -11.3086, 0.29 ) }
    dend_17 { pt3dadd( -19.017, 117.093, -11.516, 0.29 ) }
    dend_17 { pt3dadd( -18.7841, 118.109, -11.6433, 0.29 ) }
    dend_17 { pt3dadd( -18.6436, 118.777, -11.6895, 0.29 ) }
    dend_17 { pt3dadd( -18.3922, 120.117, -11.7224, 0.81 ) }
    dend_17 { pt3dadd( -18.1826, 121.296, -11.7153, 0.44 ) }
    dend_17 { pt3dadd( -17.9643, 122.424, -11.7224, 0.22 ) }
    dend_17 { pt3dadd( -17.6991, 123.56, -11.7599, 0.44 ) }
    dend_17 { pt3dadd( -17.5866, 123.996, -11.7734, 0.44 ) }
    dend_17 { pt3dadd( -17.3506, 124.932, -11.7955, 0.29 ) }
    dend_17 { pt3dadd( -17.1543, 125.779, -11.8038, 0.29 ) }
    dend_17 { pt3dadd( -16.8899, 126.932, -11.8408, 0.29 ) }
    dend_17 { pt3dadd( -16.7239, 127.664, -11.8922, 0.29 ) }
    dend_17 { pt3dadd( -16.5071, 128.604, -11.9717, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -16.3335, 129.37, -12.0273, 0.66 ) }
    dend_17 { pt3dadd( -16.1284, 130.334, -12.1199, 0.74 ) }
    dend_17 { pt3dadd( -15.9481, 131.385, -12.2012, 0.37 ) }
    dend_17 { pt3dadd( -15.8318, 132.208, -12.2528, 0.37 ) }
    dend_17 { pt3dadd( -15.6872, 133.353, -12.3573, 0.52 ) }
    dend_17 { pt3dadd( -15.5846, 134.212, -12.4708, 0.59 ) }
    dend_17 { pt3dadd( -15.4314, 135.517, -12.6626, 0.44 ) }
    dend_17 { pt3dadd( -15.3223, 136.434, -12.8081, 0.29 ) }
    dend_17 { pt3dadd( -15.2367, 137.079, -12.9097, 0.29 ) }
    dend_17 { pt3dadd( -15.0445, 138.506, -13.1162, 1.11 ) }
    dend_17 { pt3dadd( -14.9338, 139.324, -13.2239, 1.25 ) }
    dend_17 { pt3dadd( -14.8542, 139.909, -13.2938, 1.25 ) }
    dend_17 { pt3dadd( -14.6667, 141.138, -13.4463, 0.66 ) }
    dend_17 { pt3dadd( -14.5358, 141.868, -13.568, 0.29 ) }
    dend_17 { pt3dadd( -14.2999, 143.001, -13.7831, 0.29 ) }
    dend_17 { pt3dadd( -14.0631, 144.011, -13.9943, 0.29 ) }
    dend_17 { pt3dadd( -13.8246, 144.924, -14.2013, 0.29 ) }
    dend_17 { pt3dadd( -13.4399, 146.286, -14.5338, 0.96 ) }
    dend_17 { pt3dadd( -13.2745, 146.876, -14.689, 1.47 ) }
    dend_17 { pt3dadd( -13.1499, 147.378, -14.8254, 1.47 ) }
    dend_17 { pt3dadd( -13.0887, 147.674, -14.9071, 1.47 ) }
    dend_17 { pt3dadd( -12.9445, 148.54, -15.134, 0.74 ) }
    dend_17 { pt3dadd( -12.801, 149.535, -15.379, 0.29 ) }
    dend_17 { pt3dadd( -12.6824, 150.556, -15.6119, 0.52 ) }
    dend_17 { pt3dadd( -12.5699, 151.501, -15.8215, 0.74 ) }
    dend_17 { pt3dadd( -12.3938, 152.703, -16.0882, 0.44 ) }
    dend_17 { pt3dadd( -12.2254, 153.659, -16.3031, 0.29 ) }
    dend_17 { pt3dadd( -12.0865, 154.332, -16.4577, 0.29 ) }
    dend_17 { pt3dadd( -11.8551, 155.255, -16.6772, 0.66 ) }
    dend_17 { pt3dadd( -11.6679, 155.914, -16.842, 0.74 ) }
    dend_17 { pt3dadd( -11.3922, 156.843, -17.0801, 0.74 ) }
    dend_17 { pt3dadd( -11.0888, 157.886, -17.3367, 0.29 ) }
    dend_17 { pt3dadd( -10.835, 158.82, -17.5544, 0.29 ) }
    dend_17 { pt3dadd( -10.365, 160.7, -17.97, 0.29 ) }
    dend_17 { pt3dadd( -10.0647, 161.994, -18.1762, 0.52 ) }
    dend_17 { pt3dadd( -9.89681, 162.781, -18.2642, 1.18 ) }
    dend_17 { pt3dadd( -9.76703, 163.467, -18.313, 1.4 ) }
    dend_17 { pt3dadd( -9.5852, 164.587, -18.3539, 1.4 ) }
    dend_17 { pt3dadd( -9.46673, 165.47, -18.3625, 0.66 ) }
    dend_17 { pt3dadd( -9.2135, 167.538, -18.3679, 0.29 ) }
    dend_17 { pt3dadd( -9.04613, 168.837, -18.4029, 0.29 ) }
    dend_17 { pt3dadd( -8.93455, 169.613, -18.4741, 0.37 ) }
    dend_17 { pt3dadd( -8.77286, 170.65, -18.6354, 0.37 ) }
    dend_17 { pt3dadd( -8.58898, 171.713, -18.8567, 0.37 ) }
    dend_17 { pt3dadd( -8.2298, 173.581, -19.346, 0.37 ) }
    dend_17 { pt3dadd( -7.80189, 175.591, -20.0054, 0.37 ) }
    dend_17 { pt3dadd( -7.34033, 177.537, -20.6854, 1.33 ) }
    dend_17 { pt3dadd( -7.09079, 178.466, -21.0421, 1.99 ) }
    dend_17 { pt3dadd( -6.87895, 179.202, -21.3429, 1.99 ) }
    dend_17 { pt3dadd( -6.7894, 179.513, -21.4743, 1.99 ) }
    dend_17 { pt3dadd( -6.62138, 180.086, -21.7174, 1.99 ) }
    dend_17 { pt3dadd( -6.25849, 181.286, -22.2031, 0.59 ) }
    dend_17 { pt3dadd( -5.80982, 182.689, -22.7191, 0.29 ) }
    dend_17 { pt3dadd( -5.46743, 183.678, -23.029, 0.59 ) }
    dend_17 { pt3dadd( -5.18936, 184.446, -23.2466, 0.59 ) }
    dend_17 { pt3dadd( -4.58338, 186.064, -23.6593, 0.37 ) }
    dend_17 { pt3dadd( -4.24968, 186.966, -23.8597, 0.37 ) }
    dend_17 { pt3dadd( -3.72495, 188.436, -24.1338, 0.37 ) }
    dend_17 { pt3dadd( -3.12637, 190.213, -24.4036, 0.74 ) }
    dend_17 { pt3dadd( -2.91262, 190.944, -24.5034, 0.74 ) }
    dend_17 { pt3dadd( -2.72897, 191.703, -24.5867, 0.88 ) }
    dend_17 { pt3dadd( -2.52431, 192.806, -24.6807, 0.44 ) }
    dend_17 { pt3dadd( -2.27931, 194.708, -24.8525, 0.29 ) }
    dend_17 { pt3dadd( -2.21987, 195.718, -24.9819, 0.52 ) }
    dend_17 { pt3dadd( -2.22187, 197.576, -25.3108, 1.25 ) }
    dend_17 { pt3dadd( -2.25099, 198.365, -25.4664, 1.62 ) }
    dend_17 { pt3dadd( -2.28476, 198.879, -25.5921, 1.62 ) }
    dend_17 { pt3dadd( -2.37881, 199.928, -25.8956, 0.96 ) }
    dend_17 { pt3dadd( -2.53741, 201.479, -26.425, 0.29 ) }
    dend_17 { pt3dadd( -2.61068, 202.367, -26.758, 0.29 ) }
    dend_17 { pt3dadd( -2.66343, 203.449, -27.1665, 0.29 ) }
    dend_17 { pt3dadd( -2.69984, 204.588, -27.5607, 0.74 ) }
    dend_17 { pt3dadd( -2.71428, 205.109, -27.7127, 0.96 ) }
    dend_17 { pt3dadd( -2.72673, 205.719, -27.8572, 0.96 ) }
    dend_17 { pt3dadd( -2.75451, 207.268, -28.1802, 0.52 ) }
    dend_17 { pt3dadd( -2.80109, 209.406, -28.6355, 0.37 ) }
    dend_17 { pt3dadd( -2.83616, 210.873, -28.942, 0.29 ) }
    dend_17 { pt3dadd( -2.89038, 212.256, -29.2321, 0.66 ) }
    dend_17 { pt3dadd( -2.94093, 213.18, -29.4425, 0.66 ) }
    dend_17 { pt3dadd( -3.06701, 214.909, -29.8642, 0.29 ) }
    dend_17 { pt3dadd( -3.13307, 215.766, -30.08, 0.29 ) }
    dend_17 { pt3dadd( -3.2994, 218.023, -30.6581, 0.29 ) }
    dend_17 { pt3dadd( -3.44266, 220.482, -31.2897, 1.99 ) }
    dend_17 { pt3dadd( -3.47027, 221.041, -31.4255, 2.28 ) }
    dend_17 { pt3dadd( -3.50998, 221.836, -31.5965, 1.55 ) }
    dend_17 { pt3dadd( -3.54545, 222.713, -31.7393, 0.88 ) }
    dend_17 { pt3dadd( -3.59403, 224.158, -31.886, 0.22 ) }
    dend_17 { pt3dadd( -3.61763, 224.839, -31.9208, 0.22 ) }
    dend_17 { pt3dadd( -3.65725, 226.089, -31.9363, 0.66 ) }
    dend_17 { pt3dadd( -3.68272, 226.88, -31.9459, 0.66 ) }
    dend_17 { pt3dadd( -3.72061, 228.217, -31.9788, 0.29 ) }
    dend_17 { pt3dadd( -3.78783, 230.349, -32.077, 0.22 ) }
    dend_17 { pt3dadd( -3.80047, 231.427, -32.1491, 0.22 ) }
    dend_17 { pt3dadd( -3.79179, 232.565, -32.2531, 0.52 ) }
    dend_17 { pt3dadd( -3.72388, 233.985, -32.4352, 0.44 ) }
    dend_17 { pt3dadd( -3.61748, 235.218, -32.6359, 0.44 ) }
    dend_17 { pt3dadd( -3.45131, 236.636, -32.9196, 0.44 ) }
    dend_17 { pt3dadd( -3.10424, 238.829, -33.4215, 0.22 ) }
    dend_17 { pt3dadd( -2.80627, 240.459, -33.8176, 0.66 ) }
    dend_17 { pt3dadd( -2.52998, 241.778, -34.1563, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( -2.36588, 242.474, -34.3434, 1.77 ) }
    dend_17 { pt3dadd( -2.20045, 243.099, -34.5175, 1.77 ) }
    dend_17 { pt3dadd( -1.91479, 244.013, -34.785, 0.88 ) }
    dend_17 { pt3dadd( -1.5493, 245.037, -35.0534, 0.29 ) }
    dend_17 { pt3dadd( -1.2823, 245.735, -35.2129, 0.52 ) }
    dend_17 { pt3dadd( -0.594491, 247.547, -35.5782, 0.22 ) }
    dend_17 { pt3dadd( -0.202227, 248.58, -35.7924, 0.52 ) }
    dend_17 { pt3dadd( 0.238639, 249.741, -36.0499, 0.52 ) }
    dend_17 { pt3dadd( 1.18056, 252.289, -36.6423, 0.22 ) }
    dend_17 { pt3dadd( 1.8827, 254.233, -37.1225, 0.37 ) }
    dend_17 { pt3dadd( 2.33425, 255.512, -37.4408, 0.37 ) }
    dend_17 { pt3dadd( 2.81564, 256.933, -37.801, 1.92 ) }
    dend_17 { pt3dadd( 3.02202, 257.585, -37.9734, 2.21 ) }
    dend_17 { pt3dadd( 3.20739, 258.257, -38.17, 2.21 ) }
    dend_17 { pt3dadd( 3.37804, 259.035, -38.4912, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.7046, 54.2924, 0.0131895, 0.66 ) }
    dend_14 { pt3dadd( -15.3663, 55.4764, -0.15847, 0.66 ) }
    dend_14 { pt3dadd( -15.1617, 56.1963, -0.269134, 0.81 ) }
    dend_14 { pt3dadd( -15.0065, 56.7345, -0.336373, 0.37 ) }
    dend_14 { pt3dadd( -14.8295, 57.3835, -0.408455, 0.29 ) }
    dend_14 { pt3dadd( -14.5318, 58.4701, -0.538247, 0.29 ) }
    dend_14 { pt3dadd( -14.3427, 59.1061, -0.621621, 0.29 ) }
    dend_14 { pt3dadd( -14.1354, 59.7143, -0.732211, 0.29 ) }
    dend_14 { pt3dadd( -13.8064, 60.518, -0.890664, 0.29 ) }
    dend_14 { pt3dadd( -13.511, 61.1778, -1.02856, 0.29 ) }
    dend_14 { pt3dadd( -13.2168, 61.8349, -1.16634, 0.74 ) }
    dend_14 { pt3dadd( -13.0104, 62.2773, -1.25721, 0.74 ) }
    dend_14 { pt3dadd( -12.6193, 63.0268, -1.42829, 0.29 ) }
    dend_14 { pt3dadd( -12.3855, 63.458, -1.52541, 0.37 ) }
    dend_14 { pt3dadd( -11.8527, 64.4599, -1.75578, 0.37 ) }
    dend_14 { pt3dadd( -11.5685, 65.0272, -1.87369, 0.37 ) }
    dend_14 { pt3dadd( -11.2759, 65.6975, -1.99358, 0.37 ) }
    dend_14 { pt3dadd( -11.1576, 66.0065, -2.04167, 0.37 ) }
    dend_14 { pt3dadd( -10.9668, 66.5707, -2.11445, 0.22 ) }
    dend_14 { pt3dadd( -10.7954, 67.1187, -2.17868, 0.22 ) }
    dend_14 { pt3dadd( -10.6477, 67.5501, -2.24037, 0.66 ) }
    dend_14 { pt3dadd( -10.4948, 68.0653, -2.32984, 0.96 ) }
    dend_14 { pt3dadd( -9.04647, 74.1361, -3.76434, 0.96 ) }
    dend_14 { pt3dadd( -5.76708, 79.6432, -4.70246, 0.96 ) }
    dend_14 { pt3dadd( -2.7741, 85.3796, -4.65372, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 33.9777, 10.2735, 8.12204, 0.66 ) }
    dend_8 { pt3dadd( 34.7928, 8.79815, 7.91808, 0.66 ) }
    dend_8 { pt3dadd( 35.0226, 8.33151, 7.82229, 0.66 ) }
    dend_8 { pt3dadd( 35.4011, 7.61201, 7.69774, 0.88 ) }
    dend_8 { pt3dadd( 36.086, 6.44869, 7.54387, 0.88 ) }
    dend_8 { pt3dadd( 36.5789, 5.70585, 7.47771, 0.88 ) }
    dend_8 { pt3dadd( 37.0544, 5.0882, 7.44507, 1.03 ) }
    dend_8 { pt3dadd( 37.6132, 4.42009, 7.41877, 1.03 ) }
    dend_8 { pt3dadd( 38.4241, 3.89407, 7.5411, 0.88 ) }
    dend_8 { pt3dadd( 39.0724, 3.76162, 7.71321, 0.88 ) }
    dend_8 { pt3dadd( 39.6307, 3.70926, 7.88806, 0.88 ) }
    dend_8 { pt3dadd( 40.5157, 3.59709, 8.18857, 0.81 ) }
    dend_8 { pt3dadd( 41.5352, 3.33822, 8.54967, 0.81 ) }
    dend_8 { pt3dadd( 42.1833, 3.05476, 8.75243, 0.81 ) }
    dend_8 { pt3dadd( 43.0056, 2.51409, 8.92738, 0.74 ) }
    dend_8 { pt3dadd( 43.8819, 1.81713, 9.05859, 0.88 ) }
    dend_8 { pt3dadd( 44.6597, 1.12115, 9.12568, 0.88 ) }
    dend_8 { pt3dadd( 45.493, 0.28053, 9.14581, 0.52 ) }
    dend_8 { pt3dadd( 45.9112, -0.149824, 9.11871, 0.52 ) }
    dend_8 { pt3dadd( 46.4245, -0.596404, 9.03324, 0.52 ) }
    dend_8 { pt3dadd( 47.0868, -1.04287, 8.89062, 0.52 ) }
    dend_8 { pt3dadd( 47.8478, -1.41367, 8.70701, 0.74 ) }
    dend_8 { pt3dadd( 48.623, -1.70936, 8.5072, 0.74 ) }
    dend_8 { pt3dadd( 49.6081, -2.0191, 8.2455, 0.74 ) }
    dend_8 { pt3dadd( 50.9107, -2.37836, 7.90957, 0.74 ) }
    dend_8 { pt3dadd( 51.8143, -2.60252, 7.67256, 0.74 ) }
    dend_8 { pt3dadd( 52.5303, -2.74594, 7.49302, 0.74 ) }
    dend_8 { pt3dadd( 53.3089, -2.82783, 7.31541, 0.74 ) }
    dend_8 { pt3dadd( 53.7652, -2.84409, 7.23371, 0.88 ) }
    dend_8 { pt3dadd( 55.0544, -2.79752, 7.03837, 0.88 ) }
    dend_8 { pt3dadd( 56.1534, -2.72538, 6.89681, 0.88 ) }
    dend_8 { pt3dadd( 57.5144, -2.64853, 6.73609, 0.66 ) }
    dend_8 { pt3dadd( 58.5099, -2.61356, 6.63987, 0.66 ) }
    dend_8 { pt3dadd( 61.0715, -2.55196, 6.45399, 0.59 ) }
    dend_8 { pt3dadd( 61.9599, -2.53935, 6.4047, 0.52 ) }
    dend_8 { pt3dadd( 63.3046, -2.49418, 6.35516, 0.52 ) }
    dend_8 { pt3dadd( 64.1144, -2.4267, 6.34322, 0.52 ) }
    dend_8 { pt3dadd( 64.9945, -2.2757, 6.34231, 0.52 ) }
    dend_8 { pt3dadd( 66.0461, -2.03084, 6.35357, 0.52 ) }
    dend_8 { pt3dadd( 66.749, -1.85231, 6.3717, 0.52 ) }
    dend_8 { pt3dadd( 67.897, -1.60929, 6.40894, 0.52 ) }
    dend_8 { pt3dadd( 69.1424, -1.34643, 6.45819, 0.52 ) }
    dend_8 { pt3dadd( 70.3103, -1.13565, 6.50874, 0.52 ) }
    dend_8 { pt3dadd( 71.3978, -1.02465, 6.55717, 0.52 ) }
    dend_8 { pt3dadd( 72.6383, -1.04141, 6.6152, 0.52 ) }
    dend_8 { pt3dadd( 73.4919, -1.18703, 6.66479, 0.52 ) }
    dend_8 { pt3dadd( 74.2868, -1.42045, 6.75378, 0.52 ) }
    dend_8 { pt3dadd( 74.8212, -1.59697, 6.84453, 0.52 ) }
    dend_8 { pt3dadd( 75.4957, -1.80726, 6.99011, 0.52 ) }
    dend_8 { pt3dadd( 76.8624, -2.16091, 7.37054, 0.29 ) }
    dend_8 { pt3dadd( 79.3057, -2.62121, 8.17582, 0.29 ) }
    dend_8 { pt3dadd( 81.5218, -2.89844, 8.98125, 0.29 ) }
    dend_8 { pt3dadd( 82.6523, -2.95883, 9.43538, 0.29 ) }
    dend_8 { pt3dadd( 83.464, -2.96658, 9.77934, 0.44 ) }
    dend_8 { pt3dadd( 84.3237, -2.91226, 10.181, 0.59 ) }
    dend_8 { pt3dadd( 84.8637, -2.81396, 10.4949, 0.59 ) }
    dend_8 { pt3dadd( 85.7414, -2.36324, 11.1812, 0.59 ) }
    dend_8 { pt3dadd( 86.2048, -1.92302, 11.5951, 0.59 ) }
    dend_8 { pt3dadd( 95.3568, -4.69632, 12.9785, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 33.9777, 10.2735, 8.12204, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 35.7662, 9.88216, 8.0108, 1.11 ) }
    dend_3 { pt3dadd( 36.8713, 9.50873, 7.91216, 1.11 ) }
    dend_3 { pt3dadd( 38.1383, 9.14422, 7.6919, 1.25 ) }
    dend_3 { pt3dadd( 39.1216, 8.95631, 7.49505, 1.47 ) }
    dend_3 { pt3dadd( 40.4621, 8.84253, 7.22098, 1.4 ) }
    dend_3 { pt3dadd( 41.6567, 8.85008, 6.9773, 1.4 ) }
    dend_3 { pt3dadd( 43.004, 8.92346, 6.64678, 1.18 ) }
    dend_3 { pt3dadd( 44.8297, 9.3531, 6.16871, 1.18 ) }
    dend_3 { pt3dadd( 46.0793, 9.91016, 5.82517, 1.18 ) }
    dend_3 { pt3dadd( 47.1455, 10.4837, 5.52019, 1.18 ) }
    dend_3 { pt3dadd( 47.7789, 10.8306, 5.33881, 0.88 ) }
    dend_3 { pt3dadd( 48.4146, 11.1132, 5.15989, 0.88 ) }
    dend_3 { pt3dadd( 49.42, 11.3448, 4.88115, 0.88 ) }
    dend_3 { pt3dadd( 50.9673, 11.3348, 4.46659, 1.11 ) }
    dend_3 { pt3dadd( 52.1458, 11.1626, 4.13386, 1.11 ) }
    dend_3 { pt3dadd( 53.3402, 10.9031, 3.78266, 1.11 ) }
    dend_3 { pt3dadd( 54.6914, 10.5395, 3.38037, 1.25 ) }
    dend_3 { pt3dadd( 56.0704, 10.1022, 2.96919, 1.33 ) }
    dend_3 { pt3dadd( 56.7084, 9.87286, 2.78298, 1.47 ) }
    dend_3 { pt3dadd( 57.7616, 9.50459, 2.50181, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -115.366, -80.9027, 0.236717, 0.59 ) }
    dend_47 { pt3dadd( -115.264, -82.8491, 0.191702, 0.59 ) }
    dend_47 { pt3dadd( -115.214, -83.6665, 0.207962, 0.59 ) }
    dend_47 { pt3dadd( -115.152, -84.3792, 0.246809, 0.52 ) }
    dend_47 { pt3dadd( -115.072, -85.1981, 0.316273, 0.52 ) }
    dend_47 { pt3dadd( -115.009, -86.0827, 0.402961, 0.88 ) }
    dend_47 { pt3dadd( -114.947, -87.0618, 0.508736, 1.03 ) }
    dend_47 { pt3dadd( -114.922, -87.6427, 0.617287, 1.03 ) }
    dend_47 { pt3dadd( -114.85, -88.6639, 0.828661, 1.03 ) }
    dend_47 { pt3dadd( -114.761, -89.54, 1.02494, 0.29 ) }
    dend_47 { pt3dadd( -114.704, -90.1639, 1.16838, 0.29 ) }
    dend_47 { pt3dadd( -114.672, -90.6788, 1.28825, 0.29 ) }
    dend_47 { pt3dadd( -114.665, -91.6543, 1.50479, 0.59 ) }
    dend_47 { pt3dadd( -114.709, -92.4488, 1.7149, 0.74 ) }
    dend_47 { pt3dadd( -114.776, -93.0123, 1.88422, 0.88 ) }
    dend_47 { pt3dadd( -114.866, -93.5561, 2.05789, 0.88 ) }
    dend_47 { pt3dadd( -114.965, -94.0578, 2.23328, 0.88 ) }
    dend_47 { pt3dadd( -115.143, -94.7259, 2.47749, 0.81 ) }
    dend_47 { pt3dadd( -115.587, -96.1648, 3.00542, 0.37 ) }
    dend_47 { pt3dadd( -115.827, -96.9413, 3.29808, 1.03 ) }
    dend_47 { pt3dadd( -116.071, -97.7073, 3.62336, 1.33 ) }
    dend_47 { pt3dadd( -116.305, -98.4035, 3.94159, 1.33 ) }
    dend_47 { pt3dadd( -116.629, -99.291, 4.36366, 1.03 ) }
    dend_47 { pt3dadd( -116.92, -100.035, 4.72076, 0.74 ) }
    dend_47 { pt3dadd( -117.185, -100.683, 5.00625, 0.37 ) }
    dend_47 { pt3dadd( -117.552, -101.529, 5.43352, 0.74 ) }
    dend_47 { pt3dadd( -117.776, -102.013, 5.69277, 0.74 ) }
    dend_47 { pt3dadd( -118.026, -102.614, 5.967, 0.59 ) }
    dend_47 { pt3dadd( -118.187, -103.077, 6.14413, 0.37 ) }
    dend_47 { pt3dadd( -118.381, -103.763, 6.33564, 0.37 ) }
    dend_47 { pt3dadd( -118.67, -104.914, 6.50608, 0.66 ) }
    dend_47 { pt3dadd( -118.878, -105.745, 6.53241, 0.74 ) }
    dend_47 { pt3dadd( -119.261, -107.164, 6.47954, 0.52 ) }
    dend_47 { pt3dadd( -119.424, -107.761, 6.42879, 0.52 ) }
    dend_47 { pt3dadd( -119.658, -108.471, 6.34539, 1.33 ) }
    dend_47 { pt3dadd( -119.963, -109.359, 6.2162, 1.55 ) }
    dend_47 { pt3dadd( -120.374, -110.521, 6.06895, 1.99 ) }
    dend_47 { pt3dadd( -120.644, -111.21, 6.02328, 2.21 ) }
    dend_47 { pt3dadd( -121.025, -112.058, 6.01483, 1.99 ) }
    dend_47 { pt3dadd( -121.51, -113.08, 6.0074, 1.11 ) }
    dend_47 { pt3dadd( -122.024, -114.253, 5.99467, 0.37 ) }
    dend_47 { pt3dadd( -122.405, -115.254, 5.98956, 1.11 ) }
    dend_47 { pt3dadd( -122.579, -115.762, 5.98502, 1.25 ) }
    dend_47 { pt3dadd( -122.796, -116.418, 5.97995, 1.25 ) }
    dend_47 { pt3dadd( -123.283, -117.868, 5.93007, 0.29 ) }
    dend_47 { pt3dadd( -123.596, -118.794, 5.87704, 0.29 ) }
    dend_47 { pt3dadd( -123.919, -119.643, 5.81975, 0.44 ) }
    dend_47 { pt3dadd( -124.269, -120.524, 5.7512, 0.59 ) }
    dend_47 { pt3dadd( -124.692, -121.562, 5.68035, 0.88 ) }
    dend_47 { pt3dadd( -125.052, -122.422, 5.63501, 0.96 ) }
    dend_47 { pt3dadd( -125.452, -123.246, 5.6056, 0.66 ) }
    dend_47 { pt3dadd( -126.007, -124.22, 5.60582, 0.37 ) }
    dend_47 { pt3dadd( -126.434, -124.912, 5.61562, 0.29 ) }
    dend_47 { pt3dadd( -126.913, -125.628, 5.65991, 0.29 ) }
    dend_47 { pt3dadd( -127.331, -126.25, 5.72991, 0.29 ) }
    dend_47 { pt3dadd( -127.916, -127.081, 5.85947, 0.29 ) }
    dend_47 { pt3dadd( -128.798, -128.221, 6.03471, 0.74 ) }
    dend_47 { pt3dadd( -129.489, -129.002, 6.18646, 1.03 ) }
    dend_47 { pt3dadd( -130.355, -129.901, 6.39528, 2.28 ) }
    dend_47 { pt3dadd( -131.041, -130.551, 6.56495, 2.8 ) }
    dend_47 { pt3dadd( -131.7, -131.164, 6.72708, 3.09 ) }
    dend_47 { pt3dadd( -132.762, -132.189, 6.98887, 1.84 ) }
    dend_47 { pt3dadd( -133.991, -133.365, 7.28018, 0.29 ) }
    dend_47 { pt3dadd( -134.593, -133.972, 7.43404, 0.29 ) }
    dend_47 { pt3dadd( -135.378, -134.843, 7.64024, 0.29 ) }
    dend_47 { pt3dadd( -136.165, -135.801, 7.87252, 0.29 ) }
    dend_47 { pt3dadd( -136.7, -136.595, 8.07826, 0.88 ) }
    dend_47 { pt3dadd( -137.11, -137.311, 8.26447, 1.11 ) }
    dend_47 { pt3dadd( -137.427, -137.931, 8.40336, 0.81 ) }
    dend_47 { pt3dadd( -137.682, -138.468, 8.52638, 0.52 ) }
    dend_47 { pt3dadd( -138.069, -139.37, 8.73992, 0.29 ) }
    dend_47 { pt3dadd( -138.501, -140.438, 9.00504, 0.29 ) }
    dend_47 { pt3dadd( -138.846, -141.352, 9.23672, 0.29 ) }
    dend_47 { pt3dadd( -139.04, -141.845, 9.36002, 0.29 ) }
    dend_47 { pt3dadd( -139.407, -142.828, 9.60959, 0.81 ) }
    dend_47 { pt3dadd( -139.719, -143.74, 9.8464, 1.11 ) }
    dend_47 { pt3dadd( -139.94, -144.456, 10.0353, 0.88 ) }
    dend_47 { pt3dadd( -140.249, -145.473, 10.3013, 0.29 ) }
    dend_47 { pt3dadd( -140.619, -146.713, 10.6292, 0.29 ) }
    dend_47 { pt3dadd( -140.98, -147.828, 10.8779, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -141.119, -148.237, 10.9568, 0.29 ) }
    dend_47 { pt3dadd( -141.446, -149.217, 11.121, 0.74 ) }
    dend_47 { pt3dadd( -141.681, -149.922, 11.221, 0.74 ) }
    dend_47 { pt3dadd( -141.997, -150.92, 11.3477, 0.44 ) }
    dend_47 { pt3dadd( -142.347, -152.082, 11.4805, 0.29 ) }
    dend_47 { pt3dadd( -142.528, -152.661, 11.5398, 0.29 ) }
    dend_47 { pt3dadd( -142.772, -153.461, 11.6546, 0.29 ) }
    dend_47 { pt3dadd( -143.019, -154.415, 11.8444, 0.29 ) }
    dend_47 { pt3dadd( -143.144, -154.959, 11.9909, 0.74 ) }
    dend_47 { pt3dadd( -143.255, -155.456, 12.1586, 0.74 ) }
    dend_47 { pt3dadd( -143.457, -156.339, 12.5241, 0.44 ) }
    dend_47 { pt3dadd( -143.707, -157.334, 12.9553, 0.29 ) }
    dend_47 { pt3dadd( -143.941, -158.186, 13.3609, 0.74 ) }
    dend_47 { pt3dadd( -144.113, -158.783, 13.6526, 1.11 ) }
    dend_47 { pt3dadd( -144.279, -159.287, 13.8934, 1.69 ) }
    dend_47 { pt3dadd( -144.423, -159.71, 14.0889, 1.92 ) }
    dend_47 { pt3dadd( -144.631, -160.328, 14.3546, 1.92 ) }
    dend_47 { pt3dadd( -144.924, -161.267, 14.712, 1.62 ) }
    dend_47 { pt3dadd( -145.275, -162.41, 15.1198, 0.29 ) }
    dend_47 { pt3dadd( -145.544, -163.33, 15.4278, 0.22 ) }
    dend_47 { pt3dadd( -145.784, -164.092, 15.6691, 0.22 ) }
    dend_47 { pt3dadd( -146.12, -165.127, 15.9715, 0.59 ) }
    dend_47 { pt3dadd( -146.415, -165.988, 16.2006, 0.74 ) }
    dend_47 { pt3dadd( -146.642, -166.59, 16.3514, 0.74 ) }
    dend_47 { pt3dadd( -146.961, -167.362, 16.5506, 0.44 ) }
    dend_47 { pt3dadd( -147.268, -168.015, 16.7191, 0.29 ) }
    dend_47 { pt3dadd( -147.637, -168.66, 16.9076, 0.29 ) }
    dend_47 { pt3dadd( -148.519, -169.938, 17.3366, 0.44 ) }
    dend_47 { pt3dadd( -149.039, -170.594, 17.5522, 0.59 ) }
    dend_47 { pt3dadd( -149.56, -171.203, 17.7441, 0.59 ) }
    dend_47 { pt3dadd( -150.175, -171.905, 17.9334, 0.52 ) }
    dend_47 { pt3dadd( -151.116, -172.963, 18.1736, 1.33 ) }
    dend_47 { pt3dadd( -151.89, -173.823, 18.3301, 2.06 ) }
    dend_47 { pt3dadd( -152.612, -174.663, 18.4461, 2.21 ) }
    dend_47 { pt3dadd( -153.132, -175.341, 18.5128, 2.21 ) }
    dend_47 { pt3dadd( -153.879, -176.456, 18.5864, 0.81 ) }
    dend_47 { pt3dadd( -154.324, -177.271, 18.6095, 0.29 ) }
    dend_47 { pt3dadd( -154.655, -178.019, 18.602, 0.44 ) }
    dend_47 { pt3dadd( -154.855, -178.589, 18.5971, 0.44 ) }
    dend_47 { pt3dadd( -155.105, -179.424, 18.605, 0.29 ) }
    dend_47 { pt3dadd( -155.289, -180.053, 18.5967, 0.29 ) }
    dend_47 { pt3dadd( -155.523, -180.834, 18.5858, 0.29 ) }
    dend_47 { pt3dadd( -155.701, -181.342, 18.5781, 0.74 ) }
    dend_47 { pt3dadd( -155.895, -181.8, 18.5856, 0.88 ) }
    dend_47 { pt3dadd( -156.155, -182.334, 18.6147, 0.88 ) }
    dend_47 { pt3dadd( -156.587, -183.192, 18.713, 0.29 ) }
    dend_47 { pt3dadd( -157.029, -184.036, 18.8784, 0.29 ) }
    dend_47 { pt3dadd( -157.453, -184.877, 19.1308, 0.29 ) }
    dend_47 { pt3dadd( -157.925, -185.882, 19.4961, 0.52 ) }
    dend_47 { pt3dadd( -158.139, -186.351, 19.6888, 0.52 ) }
    dend_47 { pt3dadd( -158.507, -187.199, 20.0864, 0.29 ) }
    dend_47 { pt3dadd( -158.729, -187.777, 20.4084, 0.29 ) }
    dend_47 { pt3dadd( -159.105, -188.938, 21.1368, 0.59 ) }
    dend_47 { pt3dadd( -159.299, -189.589, 21.5891, 0.29 ) }
    dend_47 { pt3dadd( -159.435, -190.011, 21.913, 0.29 ) }
    dend_47 { pt3dadd( -159.664, -190.585, 22.3937, 0.74 ) }
    dend_47 { pt3dadd( -160.088, -191.322, 23.0663, 0.88 ) }
    dend_47 { pt3dadd( -160.515, -191.864, 23.5793, 0.29 ) }
    dend_47 { pt3dadd( -161.014, -192.35, 24.0596, 0.29 ) }
    dend_47 { pt3dadd( -161.723, -192.956, 24.63, 0.96 ) }
    dend_47 { pt3dadd( -162.305, -193.444, 25.0285, 1.11 ) }
    dend_47 { pt3dadd( -163.037, -194.079, 25.4275, 1.11 ) }
    dend_47 { pt3dadd( -163.812, -194.825, 25.7889, 0.29 ) }
    dend_47 { pt3dadd( -164.311, -195.393, 26.018, 0.22 ) }
    dend_47 { pt3dadd( -164.706, -195.971, 26.2039, 0.44 ) }
    dend_47 { pt3dadd( -165.077, -196.667, 26.3818, 0.44 ) }
    dend_47 { pt3dadd( -165.572, -197.856, 26.608, 0.22 ) }
    dend_47 { pt3dadd( -165.839, -198.607, 26.7089, 0.22 ) }
    dend_47 { pt3dadd( -166.015, -199.173, 26.7535, 0.22 ) }
    dend_47 { pt3dadd( -166.212, -199.819, 26.7807, 0.59 ) }
    dend_47 { pt3dadd( -166.351, -200.284, 26.7966, 0.74 ) }
    dend_47 { pt3dadd( -166.771, -201.662, 26.8038, 0.29 ) }
    dend_47 { pt3dadd( -166.997, -202.396, 26.7934, 0.29 ) }
    dend_47 { pt3dadd( -167.284, -203.312, 26.7703, 0.44 ) }
    dend_47 { pt3dadd( -167.545, -204.188, 26.7498, 0.44 ) }
    dend_47 { pt3dadd( -167.874, -205.347, 26.744, 0.52 ) }
    dend_47 { pt3dadd( -168.061, -206.008, 26.7536, 0.96 ) }
    dend_47 { pt3dadd( -168.259, -206.662, 26.7822, 1.4 ) }
    dend_47 { pt3dadd( -168.482, -207.324, 26.8084, 1.4 ) }
    dend_47 { pt3dadd( -169.079, -208.836, 26.9499, 0.29 ) }
    dend_47 { pt3dadd( -169.723, -210.286, 27.1682, 0.22 ) }
    dend_47 { pt3dadd( -170.067, -210.983, 27.3213, 0.37 ) }
    dend_47 { pt3dadd( -170.65, -212.072, 27.6382, 0.37 ) }
    dend_47 { pt3dadd( -171.259, -213.123, 28.0069, 0.29 ) }
    dend_47 { pt3dadd( -172.115, -214.478, 28.5581, 0.74 ) }
    dend_47 { pt3dadd( -172.596, -215.158, 28.8733, 1.11 ) }
    dend_47 { pt3dadd( -173.153, -215.871, 29.2162, 1.25 ) }
    dend_47 { pt3dadd( -173.742, -216.573, 29.5404, 1.11 ) }
    dend_47 { pt3dadd( -174.307, -217.218, 29.8164, 0.59 ) }
    dend_47 { pt3dadd( -175.047, -218.058, 30.1213, 0.29 ) }
    dend_47 { pt3dadd( -175.482, -218.578, 30.2383, 0.29 ) }
    dend_47 { pt3dadd( -176.291, -219.58, 30.4133, 0.22 ) }
    dend_47 { pt3dadd( -176.824, -220.271, 30.5132, 0.22 ) }
    dend_47 { pt3dadd( -177.12, -220.666, 30.567, 0.66 ) }
    dend_47 { pt3dadd( -177.577, -221.285, 30.6517, 0.66 ) }
    dend_47 { pt3dadd( -178.506, -222.572, 30.8606, 0.29 ) }
    dend_47 { pt3dadd( -179.072, -223.343, 31.0001, 0.29 ) }
    dend_47 { pt3dadd( -179.67, -224.11, 31.1454, 0.29 ) }
    dend_47 { pt3dadd( -180.298, -224.865, 31.285, 0.66 ) }
    dend_47 { pt3dadd( -180.803, -225.44, 31.3856, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -181.615, -226.324, 31.5295, 0.22 ) }
    dend_47 { pt3dadd( -182.174, -226.918, 31.6164, 0.22 ) }
    dend_47 { pt3dadd( -183.112, -227.916, 31.7467, 0.22 ) }
    dend_47 { pt3dadd( -184.745, -229.695, 31.9278, 0.22 ) }
    dend_47 { pt3dadd( -185.23, -230.275, 31.9663, 0.22 ) }
    dend_47 { pt3dadd( -185.729, -230.942, 31.991, 1.11 ) }
    dend_47 { pt3dadd( -185.993, -231.361, 31.9902, 1.11 ) }
    dend_47 { pt3dadd( -186.113, -231.606, 31.9887, 1.11 ) }
    dend_47 { pt3dadd( -186.348, -232.251, 31.9871, 0.66 ) }
    dend_47 { pt3dadd( -186.624, -233.324, 31.9808, 0.22 ) }
    dend_47 { pt3dadd( -186.75, -233.983, 31.9871, 0.52 ) }
    dend_47 { pt3dadd( -186.937, -235.497, 32.0299, 0.22 ) }
    dend_47 { pt3dadd( -187.082, -236.726, 32.0763, 0.22 ) }
    dend_47 { pt3dadd( -187.145, -237.251, 32.1015, 0.59 ) }
    dend_47 { pt3dadd( -187.226, -237.916, 32.1438, 0.59 ) }
    dend_47 { pt3dadd( -187.341, -238.878, 32.2038, 0.52 ) }
    dend_47 { pt3dadd( -187.493, -240.298, 32.2884, 0.22 ) }
    dend_47 { pt3dadd( -187.564, -241.131, 32.3371, 0.22 ) }
    dend_47 { pt3dadd( -187.59, -241.629, 32.3687, 0.22 ) }
    dend_47 { pt3dadd( -187.605, -242.194, 32.4051, 0.66 ) }
    dend_47 { pt3dadd( -187.598, -242.999, 32.5125, 0.81 ) }
    dend_47 { pt3dadd( -187.527, -243.873, 32.716, 0.59 ) }
    dend_47 { pt3dadd( -187.272, -245.095, 33.1929, 1.25 ) }
    dend_47 { pt3dadd( -187.041, -245.727, 33.5333, 1.69 ) }
    dend_47 { pt3dadd( -186.87, -246.032, 33.7462, 1.92 ) }
    dend_47 { pt3dadd( -186.099, -246.987, 34.5908, 1.18 ) }
    dend_47 { pt3dadd( -185.315, -247.68, 35.3842, 0.22 ) }
    dend_47 { pt3dadd( -184.357, -248.294, 36.2532, 0.22 ) }
    dend_47 { pt3dadd( -183.689, -248.623, 36.806, 0.22 ) }
    dend_47 { pt3dadd( -182.835, -248.993, 37.4464, 0.22 ) }
    dend_47 { pt3dadd( -182.207, -249.251, 37.8706, 0.66 ) }
    dend_47 { pt3dadd( -181.733, -249.453, 38.1456, 0.66 ) }
    dend_47 { pt3dadd( -180.434, -250.016, 38.8274, 0.22 ) }
    dend_47 { pt3dadd( -179.937, -250.244, 39.0686, 0.37 ) }
    dend_47 { pt3dadd( -179.434, -250.53, 39.322, 0.37 ) }
    dend_47 { pt3dadd( -179.035, -250.813, 39.5465, 0.22 ) }
    dend_47 { pt3dadd( -178.435, -251.311, 39.9081, 0.22 ) }
    dend_47 { pt3dadd( -182.751, -260.364, 41.7513, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -115.366, -80.9027, 0.236717, 0.37 ) }
    dend_46 { pt3dadd( -116.966, -80.5308, 0.158376, 0.37 ) }
    dend_46 { pt3dadd( -117.637, -80.4101, 0.104186, 0.37 ) }
    dend_46 { pt3dadd( -119.065, -80.2281, -0.0908672, 0.29 ) }
    dend_46 { pt3dadd( -120.15, -80.1363, -0.267481, 0.44 ) }
    dend_46 { pt3dadd( -121.195, -80.0865, -0.454289, 0.66 ) }
    dend_46 { pt3dadd( -121.794, -80.0793, -0.574598, 0.81 ) }
    dend_46 { pt3dadd( -122.312, -80.1008, -0.70295, 0.81 ) }
    dend_46 { pt3dadd( -123.91, -80.2343, -1.1607, 0.22 ) }
    dend_46 { pt3dadd( -124.408, -80.2957, -1.32751, 0.22 ) }
    dend_46 { pt3dadd( -125.303, -80.4116, -1.62789, 0.74 ) }
    dend_46 { pt3dadd( -126.037, -80.5062, -1.88107, 0.88 ) }
    dend_46 { pt3dadd( -127.253, -80.6795, -2.33565, 0.22 ) }
    dend_46 { pt3dadd( -127.747, -80.7547, -2.56787, 0.22 ) }
    dend_46 { pt3dadd( -128.199, -80.8386, -2.82162, 0.22 ) }
    dend_46 { pt3dadd( -128.709, -80.9518, -3.14013, 0.74 ) }
    dend_46 { pt3dadd( -129.243, -81.1128, -3.51095, 0.88 ) }
    dend_46 { pt3dadd( -129.816, -81.3787, -3.98207, 0.88 ) }
    dend_46 { pt3dadd( -131.049, -82.2054, -5.17684, 0.22 ) }
    dend_46 { pt3dadd( -131.478, -82.5512, -5.63305, 0.22 ) }
    dend_46 { pt3dadd( -131.826, -82.8607, -6.03518, 0.74 ) }
    dend_46 { pt3dadd( -132.247, -83.3087, -6.61564, 0.74 ) }
    dend_46 { pt3dadd( -133.139, -84.2324, -7.73172, 0.29 ) }
    dend_46 { pt3dadd( -133.423, -84.5134, -8.05355, 0.29 ) }
    dend_46 { pt3dadd( -133.895, -84.9607, -8.53471, 0.88 ) }
    dend_46 { pt3dadd( -134.467, -85.4468, -9.08306, 1.03 ) }
    dend_46 { pt3dadd( -136.211, -86.7443, -10.6702, 0.22 ) }
    dend_46 { pt3dadd( -137.885, -87.8712, -12.0944, 0.22 ) }
    dend_46 { pt3dadd( -138.574, -88.2769, -12.6195, 0.22 ) }
    dend_46 { pt3dadd( -138.985, -88.5047, -12.917, 1.11 ) }
    dend_46 { pt3dadd( -139.486, -88.7749, -13.2536, 1.11 ) }
    dend_46 { pt3dadd( -140.033, -89.0401, -13.5593, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -21.0466, -126.535, -4.9217, 0.81 ) }
    dend_40 { pt3dadd( -19.9566, -127.145, -4.7091, 0.81 ) }
    dend_40 { pt3dadd( -19.0684, -127.586, -4.55165, 0.52 ) }
    dend_40 { pt3dadd( -17.7949, -128.17, -4.34428, 0.52 ) }
    dend_40 { pt3dadd( -17.2376, -128.433, -4.25849, 0.37 ) }
    dend_40 { pt3dadd( -16.1237, -128.974, -4.09228, 0.37 ) }
    dend_40 { pt3dadd( -15.6816, -129.196, -4.02709, 0.66 ) }
    dend_40 { pt3dadd( -15.2837, -129.395, -3.98222, 0.88 ) }
    dend_40 { pt3dadd( -14.954, -129.564, -3.94174, 0.88 ) }
    dend_40 { pt3dadd( -14.1157, -130.08, -3.83779, 0.59 ) }
    dend_40 { pt3dadd( -13.377, -130.631, -3.74372, 0.66 ) }
    dend_40 { pt3dadd( -12.6465, -131.258, -3.64537, 0.74 ) }
    dend_40 { pt3dadd( -12.1999, -131.639, -3.58398, 0.74 ) }
    dend_40 { pt3dadd( -11.8522, -131.913, -3.53555, 0.52 ) }
    dend_40 { pt3dadd( -11.2821, -132.313, -3.45867, 0.29 ) }
    dend_40 { pt3dadd( -10.671, -132.657, -3.36794, 0.96 ) }
    dend_40 { pt3dadd( -10.1154, -132.925, -3.27646, 1.03 ) }
    dend_40 { pt3dadd( -9.75044, -133.086, -3.2075, 1.03 ) }
    dend_40 { pt3dadd( -8.92496, -133.437, -3.03055, 0.66 ) }
    dend_40 { pt3dadd( -8.57799, -133.588, -2.95761, 0.52 ) }
    dend_40 { pt3dadd( -7.78109, -133.947, -2.79188, 0.59 ) }
    dend_40 { pt3dadd( -6.9935, -134.349, -2.62894, 0.59 ) }
    dend_40 { pt3dadd( -6.27056, -134.766, -2.48402, 0.52 ) }
    dend_40 { pt3dadd( -5.67319, -135.153, -2.37018, 0.52 ) }
    dend_40 { pt3dadd( -5.04778, -135.599, -2.25805, 0.96 ) }
    dend_40 { pt3dadd( -4.65534, -135.882, -2.1996, 1.18 ) }
    dend_40 { pt3dadd( -3.99968, -136.343, -2.12278, 0.66 ) }
    dend_40 { pt3dadd( -3.22226, -136.844, -2.03947, 0.37 ) }
    dend_40 { pt3dadd( -2.73343, -137.129, -1.99104, 0.37 ) }
    dend_40 { pt3dadd( -1.71668, -137.662, -1.89681, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( -0.821057, -138.115, -1.78961, 1.03 ) }
    dend_40 { pt3dadd( -0.142504, -138.459, -1.69723, 0.81 ) }
    dend_40 { pt3dadd( 0.479657, -138.777, -1.59707, 0.52 ) }
    dend_40 { pt3dadd( 1.20575, -139.151, -1.46086, 0.52 ) }
    dend_40 { pt3dadd( 1.76919, -139.456, -1.33708, 0.52 ) }
    dend_40 { pt3dadd( 2.53787, -139.934, -1.14363, 0.52 ) }
    dend_40 { pt3dadd( 3.17883, -140.384, -0.963227, 1.33 ) }
    dend_40 { pt3dadd( 3.57642, -140.695, -0.845351, 1.69 ) }
    dend_40 { pt3dadd( 4.02883, -141.095, -0.704871, 1.69 ) }
    dend_40 { pt3dadd( 4.79206, -141.81, -0.530069, 1.11 ) }
    dend_40 { pt3dadd( 5.63245, -142.603, -0.402403, 0.44 ) }
    dend_40 { pt3dadd( 6.18908, -143.098, -0.372304, 0.44 ) }
    dend_40 { pt3dadd( 6.64701, -143.483, -0.377809, 0.29 ) }
    dend_40 { pt3dadd( 7.17962, -143.907, -0.426979, 0.29 ) }
    dend_40 { pt3dadd( 8.40688, -144.82, -0.612212, 1.03 ) }
    dend_40 { pt3dadd( 8.77008, -145.071, -0.686988, 1.4 ) }
    dend_40 { pt3dadd( 9.167, -145.346, -0.789689, 1.4 ) }
    dend_40 { pt3dadd( 10.4412, -146.308, -1.17468, 0.22 ) }
    dend_40 { pt3dadd( 11.1156, -146.844, -1.38368, 0.52 ) }
    dend_40 { pt3dadd( 11.4457, -147.119, -1.48115, 0.52 ) }
    dend_40 { pt3dadd( 12.0055, -147.637, -1.63078, 0.29 ) }
    dend_40 { pt3dadd( 12.7882, -148.387, -1.84556, 0.29 ) }
    dend_40 { pt3dadd( 13.2652, -148.852, -1.96784, 0.29 ) }
    dend_40 { pt3dadd( 13.7466, -149.346, -2.09521, 0.66 ) }
    dend_40 { pt3dadd( 14.0958, -149.716, -2.16701, 0.81 ) }
    dend_40 { pt3dadd( 14.3476, -149.986, -2.21125, 0.81 ) }
    dend_40 { pt3dadd( 14.766, -150.408, -2.25972, 0.59 ) }
    dend_40 { pt3dadd( 15.2412, -150.84, -2.30161, 0.29 ) }
    dend_40 { pt3dadd( 15.6877, -151.268, -2.3176, 0.29 ) }
    dend_40 { pt3dadd( 16.1776, -151.823, -2.30735, 0.66 ) }
    dend_40 { pt3dadd( 16.5337, -152.312, -2.26081, 0.66 ) }
    dend_40 { pt3dadd( 16.9758, -153.059, -2.13804, 0.29 ) }
    dend_40 { pt3dadd( 17.2032, -153.54, -2.02826, 0.29 ) }
    dend_40 { pt3dadd( 17.5515, -154.418, -1.78528, 0.66 ) }
    dend_40 { pt3dadd( 17.7717, -155.041, -1.57801, 0.66 ) }
    dend_40 { pt3dadd( 18.0168, -155.853, -1.27249, 0.44 ) }
    dend_40 { pt3dadd( 18.2208, -156.68, -0.940683, 1.47 ) }
    dend_40 { pt3dadd( 18.3528, -157.346, -0.667011, 1.84 ) }
    dend_40 { pt3dadd( 18.4198, -157.737, -0.509057, 1.84 ) }
    dend_40 { pt3dadd( 18.4612, -157.979, -0.423335, 1.84 ) }
    dend_40 { pt3dadd( 18.5767, -158.6, -0.214273, 1.33 ) }
    dend_40 { pt3dadd( 18.7419, -159.348, 0.0258513, 0.52 ) }
    dend_40 { pt3dadd( 18.8381, -159.742, 0.149191, 0.52 ) }
    dend_40 { pt3dadd( 18.9721, -160.278, 0.316443, 0.52 ) }
    dend_40 { pt3dadd( 19.1847, -161.134, 0.591365, 0.29 ) }
    dend_40 { pt3dadd( 19.2982, -161.577, 0.740083, 0.29 ) }
    dend_40 { pt3dadd( 19.471, -162.208, 0.969663, 0.29 ) }
    dend_40 { pt3dadd( 19.6429, -162.789, 1.19623, 0.44 ) }
    dend_40 { pt3dadd( 19.9173, -163.571, 1.51584, 0.44 ) }
    dend_40 { pt3dadd( 20.1945, -164.209, 1.77708, 0.44 ) }
    dend_40 { pt3dadd( 20.4259, -164.656, 1.95072, 1.33 ) }
    dend_40 { pt3dadd( 20.7099, -165.168, 2.12021, 1.84 ) }
    dend_40 { pt3dadd( 21.002, -165.624, 2.25871, 1.84 ) }
    dend_40 { pt3dadd( 21.5125, -166.331, 2.46642, 0.96 ) }
    dend_40 { pt3dadd( 22.2024, -167.196, 2.71047, 0.22 ) }
    dend_40 { pt3dadd( 22.8026, -167.896, 2.90026, 0.22 ) }
    dend_40 { pt3dadd( 23.6682, -168.841, 3.14515, 0.22 ) }
    dend_40 { pt3dadd( 24.1986, -169.372, 3.28439, 0.22 ) }
    dend_40 { pt3dadd( 24.8103, -169.918, 3.43497, 0.22 ) }
    dend_40 { pt3dadd( 25.3595, -170.359, 3.55463, 0.44 ) }
    dend_40 { pt3dadd( 26.0256, -170.843, 3.67625, 0.88 ) }
    dend_40 { pt3dadd( 26.6769, -171.29, 3.76688, 1.03 ) }
    dend_40 { pt3dadd( 27.1063, -171.581, 3.81658, 1.03 ) }
    dend_40 { pt3dadd( 27.6069, -171.943, 3.86824, 0.88 ) }
    dend_40 { pt3dadd( 28.1103, -172.286, 3.91385, 0.29 ) }
    dend_40 { pt3dadd( 28.472, -172.518, 3.95656, 0.29 ) }
    dend_40 { pt3dadd( 29.0216, -172.843, 4.05311, 0.29 ) }
    dend_40 { pt3dadd( 29.7081, -173.22, 4.20845, 0.37 ) }
    dend_40 { pt3dadd( 30.2206, -173.479, 4.35431, 0.37 ) }
    dend_40 { pt3dadd( 30.667, -173.685, 4.50259, 0.29 ) }
    dend_40 { pt3dadd( 31.5191, -174.032, 4.82085, 0.29 ) }
    dend_40 { pt3dadd( 32.1877, -174.283, 5.07293, 0.81 ) }
    dend_40 { pt3dadd( 32.5643, -174.424, 5.20965, 0.81 ) }
    dend_40 { pt3dadd( 33.2853, -174.735, 5.47333, 0.59 ) }
    dend_40 { pt3dadd( 33.8025, -175.023, 5.67732, 0.29 ) }
    dend_40 { pt3dadd( 34.2383, -175.315, 5.86316, 0.29 ) }
    dend_40 { pt3dadd( 34.6876, -175.658, 6.07, 0.66 ) }
    dend_40 { pt3dadd( 35.0115, -175.926, 6.23783, 0.66 ) }
    dend_40 { pt3dadd( 35.9539, -176.745, 6.78578, 0.29 ) }
    dend_40 { pt3dadd( 36.5337, -177.26, 7.17384, 0.29 ) }
    dend_40 { pt3dadd( 37.1106, -177.79, 7.63027, 0.29 ) }
    dend_40 { pt3dadd( 37.5298, -178.197, 8.01531, 0.29 ) }
    dend_40 { pt3dadd( 37.9287, -178.593, 8.43483, 0.88 ) }
    dend_40 { pt3dadd( 38.1069, -178.769, 8.62814, 0.88 ) }
    dend_40 { pt3dadd( 38.5711, -179.24, 9.16913, 0.66 ) }
    dend_40 { pt3dadd( 39.1918, -179.876, 9.95018, 0.29 ) }
    dend_40 { pt3dadd( 39.5014, -180.209, 10.3735, 0.29 ) }
    dend_40 { pt3dadd( 39.864, -180.616, 10.8777, 0.66 ) }
    dend_40 { pt3dadd( 40.1757, -180.974, 11.2793, 0.44 ) }
    dend_40 { pt3dadd( 45.7869, -186.524, 14.3809, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.0466, -126.535, -4.9217, 2.14 ) }
    dend_35 { pt3dadd( -21.5474, -127.696, -5.18087, 2.14 ) }
    dend_35 { pt3dadd( -21.9614, -128.757, -5.39018, 1.33 ) }
    dend_35 { pt3dadd( -22.3359, -129.803, -5.57015, 1.03 ) }
    dend_35 { pt3dadd( -22.5828, -130.599, -5.68423, 1.03 ) }
    dend_35 { pt3dadd( -22.7383, -131.142, -5.75525, 1.25 ) }
    dend_35 { pt3dadd( -22.8846, -131.673, -5.82006, 1.25 ) }
    dend_35 { pt3dadd( -23.1061, -132.679, -5.91614, 0.96 ) }
    dend_35 { pt3dadd( -23.2679, -133.496, -5.96856, 0.96 ) }
    dend_35 { pt3dadd( -23.5633, -134.926, -6.04666, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -23.7421, -135.77, -6.07357, 0.88 ) }
    dend_35 { pt3dadd( -23.8916, -136.57, -6.08385, 0.96 ) }
    dend_35 { pt3dadd( -24.0348, -137.484, -6.07878, 0.96 ) }
    dend_35 { pt3dadd( -24.1414, -138.266, -6.05488, 0.74 ) }
    dend_35 { pt3dadd( -24.2324, -139.019, -6.01635, 0.52 ) }
    dend_35 { pt3dadd( -24.3011, -139.646, -5.96966, 0.52 ) }
    dend_35 { pt3dadd( -24.3796, -140.415, -5.89793, 0.37 ) }
    dend_35 { pt3dadd( -24.4393, -141.029, -5.83823, 0.74 ) }
    dend_35 { pt3dadd( -24.5178, -141.694, -5.77253, 0.74 ) }
    dend_35 { pt3dadd( -24.6153, -142.444, -5.68927, 1.03 ) }
    dend_35 { pt3dadd( -24.686, -142.92, -5.63366, 1.18 ) }
    dend_35 { pt3dadd( -24.7937, -143.578, -5.56277, 1.33 ) }
    dend_35 { pt3dadd( -24.8875, -144.074, -5.50807, 1.33 ) }
    dend_35 { pt3dadd( -24.9808, -144.603, -5.42186, 1.18 ) }
    dend_35 { pt3dadd( -25.1181, -145.375, -5.21166, 0.96 ) }
    dend_35 { pt3dadd( -25.2254, -145.967, -4.98423, 0.81 ) }
    dend_35 { pt3dadd( -25.328, -146.564, -4.70646, 0.81 ) }
    dend_35 { pt3dadd( -25.4189, -147.221, -4.36505, 0.81 ) }
    dend_35 { pt3dadd( -25.4883, -147.796, -4.05699, 0.59 ) }
    dend_35 { pt3dadd( -25.587, -148.747, -3.56851, 0.66 ) }
    dend_35 { pt3dadd( -25.6439, -149.152, -3.38265, 0.66 ) }
    dend_35 { pt3dadd( -25.7932, -149.875, -3.12518, 1.18 ) }
    dend_35 { pt3dadd( -26.0388, -150.615, -2.98782, 1.47 ) }
    dend_35 { pt3dadd( -26.3382, -151.248, -2.97958, 1.55 ) }
    dend_35 { pt3dadd( -26.63, -151.704, -3.04068, 1.55 ) }
    dend_35 { pt3dadd( -27.1218, -152.313, -3.18935, 1.4 ) }
    dend_35 { pt3dadd( -27.8165, -153.013, -3.38951, 1.18 ) }
    dend_35 { pt3dadd( -28.6537, -153.747, -3.61449, 0.66 ) }
    dend_35 { pt3dadd( -29.356, -154.32, -3.78446, 0.74 ) }
    dend_35 { pt3dadd( -30.2747, -155.038, -3.97882, 1.18 ) }
    dend_35 { pt3dadd( -31.0404, -155.614, -4.10511, 1.25 ) }
    dend_35 { pt3dadd( -31.8503, -156.206, -4.19117, 1.25 ) }
    dend_35 { pt3dadd( -32.5435, -156.697, -4.21392, 1.25 ) }
    dend_35 { pt3dadd( -33.2517, -157.151, -4.19806, 1.33 ) }
    dend_35 { pt3dadd( -33.6622, -157.378, -4.16501, 1.33 ) }
    dend_35 { pt3dadd( -34.3289, -157.685, -4.05482, 1.03 ) }
    dend_35 { pt3dadd( -34.9068, -157.9, -3.91334, 0.74 ) }
    dend_35 { pt3dadd( -35.3692, -158.044, -3.77894, 0.59 ) }
    dend_35 { pt3dadd( -35.9794, -158.235, -3.58316, 0.59 ) }
    dend_35 { pt3dadd( -36.5902, -158.458, -3.37605, 0.88 ) }
    dend_35 { pt3dadd( -37.2021, -158.768, -3.14466, 1.18 ) }
    dend_35 { pt3dadd( -37.7767, -159.152, -2.88851, 1.18 ) }
    dend_35 { pt3dadd( -38.285, -159.566, -2.63164, 1.18 ) }
    dend_35 { pt3dadd( -38.7634, -160.029, -2.38081, 1.18 ) }
    dend_35 { pt3dadd( -39.1325, -160.435, -2.18961, 1.18 ) }
    dend_35 { pt3dadd( -39.6455, -161.06, -1.93035, 0.81 ) }
    dend_35 { pt3dadd( -39.9542, -161.474, -1.78217, 0.59 ) }
    dend_35 { pt3dadd( -40.2397, -161.908, -1.6549, 0.52 ) }
    dend_35 { pt3dadd( -40.7893, -162.835, -1.43632, 0.96 ) }
    dend_35 { pt3dadd( -41.1085, -163.457, -1.32794, 1.18 ) }
    dend_35 { pt3dadd( -41.3763, -164.037, -1.25752, 1.18 ) }
    dend_35 { pt3dadd( -41.7207, -164.829, -1.20161, 0.88 ) }
    dend_35 { pt3dadd( -42.055, -165.627, -1.17152, 0.59 ) }
    dend_35 { pt3dadd( -42.3315, -166.345, -1.15371, 0.59 ) }
    dend_35 { pt3dadd( -42.6353, -167.183, -1.13518, 0.59 ) }
    dend_35 { pt3dadd( -42.9185, -167.965, -1.11671, 0.74 ) }
    dend_35 { pt3dadd( -43.2477, -168.839, -1.09359, 1.33 ) }
    dend_35 { pt3dadd( -43.5432, -169.598, -1.07202, 1.69 ) }
    dend_35 { pt3dadd( -43.9212, -170.535, -1.04424, 1.77 ) }
    dend_35 { pt3dadd( -44.1382, -171.086, -1.02953, 1.77 ) }
    dend_35 { pt3dadd( -44.406, -171.781, -1.02976, 1.77 ) }
    dend_35 { pt3dadd( -44.6299, -172.45, -1.05142, 1.47 ) }
    dend_35 { pt3dadd( -44.843, -173.193, -1.09992, 1.03 ) }
    dend_35 { pt3dadd( -45.0376, -173.925, -1.16765, 1.03 ) }
    dend_35 { pt3dadd( -45.2623, -174.78, -1.26882, 1.03 ) }
    dend_35 { pt3dadd( -45.4836, -175.667, -1.37613, 1.11 ) }
    dend_35 { pt3dadd( -45.6794, -176.502, -1.47032, 1.33 ) }
    dend_35 { pt3dadd( -45.828, -177.266, -1.54264, 1.03 ) }
    dend_35 { pt3dadd( -45.9767, -178.302, -1.61953, 0.81 ) }
    dend_35 { pt3dadd( -46.0511, -179.03, -1.65728, 1.03 ) }
    dend_35 { pt3dadd( -46.1109, -179.946, -1.68373, 0.81 ) }
    dend_35 { pt3dadd( -46.1299, -180.447, -1.6863, 0.81 ) }
    dend_35 { pt3dadd( -46.1522, -181.803, -1.68546, 0.74 ) }
    dend_35 { pt3dadd( -46.147, -183.167, -1.67778, 0.74 ) }
    dend_35 { pt3dadd( -46.1183, -184.264, -1.66996, 0.74 ) }
    dend_35 { pt3dadd( -46.0794, -185.867, -1.65786, 0.74 ) }
    dend_35 { pt3dadd( -46.0796, -186.972, -1.65653, 0.74 ) }
    dend_35 { pt3dadd( -46.11, -187.689, -1.65598, 1.18 ) }
    dend_35 { pt3dadd( -46.1997, -188.422, -1.64758, 1.4 ) }
    dend_35 { pt3dadd( -46.381, -189.177, -1.62356, 1.4 ) }
    dend_35 { pt3dadd( -46.6569, -189.889, -1.58166, 1.47 ) }
    dend_35 { pt3dadd( -47.1178, -190.668, -1.51473, 1.55 ) }
    dend_35 { pt3dadd( -47.4831, -191.129, -1.46826, 1.55 ) }
    dend_35 { pt3dadd( -48.1748, -191.841, -1.38117, 1.11 ) }
    dend_35 { pt3dadd( -49.0912, -192.635, -1.2613, 0.88 ) }
    dend_35 { pt3dadd( -49.7622, -193.146, -1.15259, 0.88 ) }
    dend_35 { pt3dadd( -50.5333, -193.667, -1.00756, 1.03 ) }
    dend_35 { pt3dadd( -51.067, -194.005, -0.902679, 1.03 ) }
    dend_35 { pt3dadd( -51.4907, -194.28, -0.813974, 1.03 ) }
    dend_35 { pt3dadd( -52.1133, -194.747, -0.65397, 0.81 ) }
    dend_35 { pt3dadd( -52.8335, -195.415, -0.442209, 0.59 ) }
    dend_35 { pt3dadd( -53.625, -196.341, -0.187639, 0.59 ) }
    dend_35 { pt3dadd( -54.1259, -197.067, -0.0117855, 0.88 ) }
    dend_35 { pt3dadd( -54.5032, -197.743, 0.136505, 0.88 ) }
    dend_35 { pt3dadd( -54.9891, -198.809, 0.33774, 0.74 ) }
    dend_35 { pt3dadd( -55.2598, -199.546, 0.455059, 0.96 ) }
    dend_35 { pt3dadd( -55.4799, -200.274, 0.535167, 1.11 ) }
    dend_35 { pt3dadd( -55.6106, -200.798, 0.580607, 1.11 ) }
    dend_35 { pt3dadd( -55.7387, -201.349, 0.608677, 0.88 ) }
    dend_35 { pt3dadd( -55.9257, -202.106, 0.601982, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -56.0698, -202.637, 0.579129, 0.66 ) }
    dend_35 { pt3dadd( -56.3101, -203.53, 0.542981, 0.96 ) }
    dend_35 { pt3dadd( -56.4873, -204.213, 0.512463, 0.96 ) }
    dend_35 { pt3dadd( -56.7052, -205.087, 0.468915, 0.66 ) }
    dend_35 { pt3dadd( -56.9039, -205.884, 0.427735, 0.74 ) }
    dend_35 { pt3dadd( -57.2141, -207.164, 0.37672, 0.96 ) }
    dend_35 { pt3dadd( -57.3871, -207.904, 0.369774, 0.96 ) }
    dend_35 { pt3dadd( -57.5628, -208.676, 0.367065, 0.96 ) }
    dend_35 { pt3dadd( -57.7728, -209.56, 0.349143, 0.66 ) }
    dend_35 { pt3dadd( -58.0875, -210.865, 0.297095, 0.66 ) }
    dend_35 { pt3dadd( -58.357, -212.112, 0.208374, 0.66 ) }
    dend_35 { pt3dadd( -58.5011, -212.857, 0.130551, 0.81 ) }
    dend_35 { pt3dadd( -58.7255, -214.161, -0.0362738, 0.74 ) }
    dend_35 { pt3dadd( -58.8794, -215.195, -0.193264, 0.74 ) }
    dend_35 { pt3dadd( -59.0083, -216.286, -0.380172, 0.96 ) }
    dend_35 { pt3dadd( -59.093, -217.203, -0.550176, 0.96 ) }
    dend_35 { pt3dadd( -59.1474, -217.812, -0.657222, 1.62 ) }
    dend_35 { pt3dadd( -59.1952, -218.146, -0.700421, 1.62 ) }
    dend_35 { pt3dadd( -59.2855, -218.584, -0.717054, 1.62 ) }
    dend_35 { pt3dadd( -59.4461, -219.226, -0.703666, 1.4 ) }
    dend_35 { pt3dadd( -59.6468, -219.896, -0.66437, 0.88 ) }
    dend_35 { pt3dadd( -59.9171, -220.752, -0.593361, 0.59 ) }
    dend_35 { pt3dadd( -60.2773, -221.917, -0.482216, 0.81 ) }
    dend_35 { pt3dadd( -60.5679, -222.855, -0.384203, 0.96 ) }
    dend_35 { pt3dadd( -60.7923, -223.613, -0.310761, 0.96 ) }
    dend_35 { pt3dadd( -61.045, -224.528, -0.239239, 1.11 ) }
    dend_35 { pt3dadd( -61.2107, -225.127, -0.200789, 1.11 ) }
    dend_35 { pt3dadd( -61.3491, -225.589, -0.177964, 1.33 ) }
    dend_35 { pt3dadd( -61.4934, -226.038, -0.159855, 1.33 ) }
    dend_35 { pt3dadd( -61.7803, -226.767, -0.115358, 1.03 ) }
    dend_35 { pt3dadd( -62.1265, -227.483, -0.0528488, 0.66 ) }
    dend_35 { pt3dadd( -62.4149, -228.016, 0.00371242, 0.37 ) }
    dend_35 { pt3dadd( -62.633, -228.405, 0.0476081, 0.37 ) }
    dend_35 { pt3dadd( -62.8994, -228.915, 0.105705, 0.37 ) }
    dend_35 { pt3dadd( -63.1398, -229.401, 0.162262, 1.03 ) }
    dend_35 { pt3dadd( -63.4003, -229.941, 0.2247, 1.25 ) }
    dend_35 { pt3dadd( -63.571, -230.344, 0.270318, 1.25 ) }
    dend_35 { pt3dadd( -63.8453, -231.099, 0.347375, 0.96 ) }
    dend_35 { pt3dadd( -64.1513, -232.049, 0.43244, 0.52 ) }
    dend_35 { pt3dadd( -64.4142, -232.905, 0.498745, 0.52 ) }
    dend_35 { pt3dadd( -64.7578, -234.099, 0.575841, 0.52 ) }
    dend_35 { pt3dadd( -65.005, -235.073, 0.629168, 0.81 ) }
    dend_35 { pt3dadd( -65.1788, -235.784, 0.669764, 1.03 ) }
    dend_35 { pt3dadd( -65.3418, -236.426, 0.708727, 1.03 ) }
    dend_35 { pt3dadd( -65.4728, -236.92, 0.738991, 0.81 ) }
    dend_35 { pt3dadd( -65.6444, -237.516, 0.77363, 0.81 ) }
    dend_35 { pt3dadd( -65.918, -238.35, 0.816602, 0.59 ) }
    dend_35 { pt3dadd( -66.2662, -239.223, 0.856302, 0.44 ) }
    dend_35 { pt3dadd( -66.807, -240.315, 0.919072, 0.88 ) }
    dend_35 { pt3dadd( -67.0848, -240.781, 0.952362, 0.88 ) }
    dend_35 { pt3dadd( -67.5023, -241.381, 1.00287, 0.59 ) }
    dend_35 { pt3dadd( -67.9444, -241.888, 1.05948, 0.59 ) }
    dend_35 { pt3dadd( -68.6492, -242.517, 1.14207, 0.59 ) }
    dend_35 { pt3dadd( -69.4116, -243.062, 1.22099, 0.81 ) }
    dend_35 { pt3dadd( -69.8474, -243.319, 1.26528, 0.81 ) }
    dend_35 { pt3dadd( -70.1994, -243.502, 1.30033, 0.81 ) }
    dend_35 { pt3dadd( -70.9951, -243.85, 1.37452, 0.59 ) }
    dend_35 { pt3dadd( -71.8691, -244.155, 1.45272, 0.88 ) }
    dend_35 { pt3dadd( -72.738, -244.392, 1.52472, 1.03 ) }
    dend_35 { pt3dadd( -73.5678, -244.578, 1.58748, 1.03 ) }
    dend_35 { pt3dadd( -74.2533, -244.696, 1.64234, 0.59 ) }
    dend_35 { pt3dadd( -74.8704, -244.786, 1.69983, 0.59 ) }
    dend_35 { pt3dadd( -75.394, -244.864, 1.75574, 0.59 ) }
    dend_35 { pt3dadd( -75.8425, -244.929, 1.81788, 0.59 ) }
    dend_35 { pt3dadd( -76.3198, -245.019, 1.88999, 0.59 ) }
    dend_35 { pt3dadd( -76.9436, -245.166, 1.99402, 0.44 ) }
    dend_35 { pt3dadd( -77.8771, -245.448, 2.16192, 0.81 ) }
    dend_35 { pt3dadd( -78.6552, -245.738, 2.31494, 1.11 ) }
    dend_35 { pt3dadd( -79.5025, -246.116, 2.49891, 0.81 ) }
    dend_35 { pt3dadd( -80.3497, -246.563, 2.69471, 0.66 ) }
    dend_35 { pt3dadd( -80.7377, -246.797, 2.78711, 0.66 ) }
    dend_35 { pt3dadd( -81.2045, -247.121, 2.90043, 0.52 ) }
    dend_35 { pt3dadd( -81.7375, -247.53, 3.03641, 0.52 ) }
    dend_35 { pt3dadd( -82.2767, -247.996, 3.1783, 0.52 ) }
    dend_35 { pt3dadd( -82.8179, -248.5, 3.32454, 0.52 ) }
    dend_35 { pt3dadd( -83.1443, -248.835, 3.4154, 1.11 ) }
    dend_35 { pt3dadd( -83.8694, -249.655, 3.61089, 1.4 ) }
    dend_35 { pt3dadd( -84.2621, -250.149, 3.71302, 1.84 ) }
    dend_35 { pt3dadd( -84.6949, -250.749, 3.81232, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.86442, -74.1646, -9.8661, 0.66 ) }
    dend_32 { pt3dadd( -9.92395, -75.8996, -9.87153, 0.66 ) }
    dend_32 { pt3dadd( -9.97976, -76.9689, -9.87756, 0.37 ) }
    dend_32 { pt3dadd( -10.0137, -77.6823, -9.90874, 0.81 ) }
    dend_32 { pt3dadd( -10.042, -78.6034, -9.97056, 1.03 ) }
    dend_32 { pt3dadd( -10.068, -79.4039, -10.0307, 1.11 ) }
    dend_32 { pt3dadd( -10.1032, -80.2576, -10.1087, 0.88 ) }
    dend_32 { pt3dadd( -10.1512, -81.2394, -10.2354, 0.59 ) }
    dend_32 { pt3dadd( -10.1834, -82.3802, -10.4247, 0.29 ) }
    dend_32 { pt3dadd( -10.1841, -83.2062, -10.5893, 0.29 ) }
    dend_32 { pt3dadd( -10.1665, -83.5841, -10.6764, 0.29 ) }
    dend_32 { pt3dadd( -10.0664, -84.4333, -10.9149, 0.74 ) }
    dend_32 { pt3dadd( -9.9059, -85.2215, -11.1744, 1.11 ) }
    dend_32 { pt3dadd( -9.76959, -85.7181, -11.3491, 1.11 ) }
    dend_32 { pt3dadd( -9.54421, -86.4487, -11.6119, 1.11 ) }
    dend_32 { pt3dadd( -9.25477, -87.2971, -11.8843, 0.81 ) }
    dend_32 { pt3dadd( -8.7666, -88.7005, -12.2654, 0.44 ) }
    dend_32 { pt3dadd( -8.31749, -90.037, -12.5563, 0.59 ) }
    dend_32 { pt3dadd( -8.076, -90.8438, -12.6942, 0.88 ) }
    dend_32 { pt3dadd( -7.86413, -91.6955, -12.7952, 0.88 ) }
    dend_32 { pt3dadd( -7.62423, -92.9182, -12.884, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.45224, -94.1218, -12.9061, 0.44 ) }
    dend_32 { pt3dadd( -7.3643, -95.074, -12.8691, 1.03 ) }
    dend_32 { pt3dadd( -7.31885, -95.8722, -12.8194, 0.74 ) }
    dend_32 { pt3dadd( -7.28304, -96.8726, -12.7619, 0.52 ) }
    dend_32 { pt3dadd( -7.26687, -97.6465, -12.7299, 0.88 ) }
    dend_32 { pt3dadd( -7.27268, -98.3556, -12.7452, 1.18 ) }
    dend_32 { pt3dadd( -7.28066, -98.9696, -12.7709, 1.18 ) }
    dend_32 { pt3dadd( -7.29935, -99.6726, -12.8077, 0.88 ) }
    dend_32 { pt3dadd( -7.33903, -100.894, -12.8859, 0.29 ) }
    dend_32 { pt3dadd( -7.37813, -101.818, -12.9569, 0.29 ) }
    dend_32 { pt3dadd( -7.44833, -103.139, -13.0879, 1.03 ) }
    dend_32 { pt3dadd( -7.49156, -104.016, -13.1913, 1.47 ) }
    dend_32 { pt3dadd( -7.52009, -104.568, -13.2574, 1.47 ) }
    dend_32 { pt3dadd( -7.54706, -105.176, -13.3315, 1.47 ) }
    dend_32 { pt3dadd( -7.56463, -106.084, -13.4433, 1.25 ) }
    dend_32 { pt3dadd( -7.56649, -107.195, -13.5689, 0.44 ) }
    dend_32 { pt3dadd( -7.54405, -108.112, -13.6592, 0.44 ) }
    dend_32 { pt3dadd( -7.51305, -109.007, -13.7545, 0.44 ) }
    dend_32 { pt3dadd( -7.49064, -109.468, -13.8063, 0.59 ) }
    dend_32 { pt3dadd( -7.43501, -110.548, -13.9299, 0.59 ) }
    dend_32 { pt3dadd( -7.37748, -111.371, -14.0306, 0.37 ) }
    dend_32 { pt3dadd( -7.32773, -112.058, -14.1147, 0.81 ) }
    dend_32 { pt3dadd( -7.2816, -112.688, -14.1827, 1.03 ) }
    dend_32 { pt3dadd( -7.24943, -113.149, -14.2241, 1.03 ) }
    dend_32 { pt3dadd( -7.22155, -113.721, -14.2603, 0.59 ) }
    dend_32 { pt3dadd( -7.16949, -114.655, -14.3037, 0.22 ) }
    dend_32 { pt3dadd( -7.11514, -115.239, -14.3299, 0.22 ) }
    dend_32 { pt3dadd( -7.03112, -115.929, -14.3616, 0.22 ) }
    dend_32 { pt3dadd( -6.92612, -116.672, -14.3965, 0.66 ) }
    dend_32 { pt3dadd( -6.78597, -117.56, -14.4437, 0.88 ) }
    dend_32 { pt3dadd( -6.55165, -118.854, -14.5222, 0.88 ) }
    dend_32 { pt3dadd( -6.26756, -120.359, -14.6193, 0.96 ) }
    dend_32 { pt3dadd( -6.05309, -121.491, -14.7122, 1.18 ) }
    dend_32 { pt3dadd( -5.89843, -122.408, -14.8047, 0.66 ) }
    dend_32 { pt3dadd( -5.77956, -123.16, -14.8836, 0.52 ) }
    dend_32 { pt3dadd( -5.5861, -124.596, -15.0439, 0.52 ) }
    dend_32 { pt3dadd( -5.46313, -125.705, -15.1734, 0.81 ) }
    dend_32 { pt3dadd( -5.35388, -126.823, -15.3127, 0.52 ) }
    dend_32 { pt3dadd( -5.27068, -127.66, -15.4144, 0.52 ) }
    dend_32 { pt3dadd( -5.16849, -128.649, -15.5562, 1.47 ) }
    dend_32 { pt3dadd( -5.05604, -129.66, -15.7279, 1.77 ) }
    dend_32 { pt3dadd( -4.96196, -130.438, -15.8952, 1.77 ) }
    dend_32 { pt3dadd( -4.89485, -130.885, -16.0059, 1.77 ) }
    dend_32 { pt3dadd( -4.75916, -131.624, -16.199, 1.25 ) }
    dend_32 { pt3dadd( -4.58343, -132.479, -16.4279, 0.81 ) }
    dend_32 { pt3dadd( -4.37628, -133.518, -16.7097, 0.44 ) }
    dend_32 { pt3dadd( -4.10824, -134.82, -17.0579, 0.37 ) }
    dend_32 { pt3dadd( -3.94266, -135.622, -17.2657, 0.52 ) }
    dend_32 { pt3dadd( -3.72685, -136.59, -17.5117, 0.52 ) }
    dend_32 { pt3dadd( -3.55227, -137.316, -17.6922, 0.66 ) }
    dend_32 { pt3dadd( -3.3023, -138.27, -17.9335, 0.66 ) }
    dend_32 { pt3dadd( -2.97121, -139.487, -18.2924, 0.88 ) }
    dend_32 { pt3dadd( -2.67576, -140.507, -18.6343, 1.25 ) }
    dend_32 { pt3dadd( -2.50278, -141.08, -18.8592, 1.25 ) }
    dend_32 { pt3dadd( -2.34213, -141.572, -19.0766, 1.25 ) }
    dend_32 { pt3dadd( -2.00898, -142.534, -19.5453, 1.11 ) }
    dend_32 { pt3dadd( -1.70431, -143.382, -19.9887, 0.74 ) }
    dend_32 { pt3dadd( -1.43055, -144.125, -20.4019, 0.29 ) }
    dend_32 { pt3dadd( -1.27178, -144.564, -20.6566, 0.29 ) }
    dend_32 { pt3dadd( -0.898866, -145.637, -21.2614, 0.44 ) }
    dend_32 { pt3dadd( -0.693478, -146.255, -21.5806, 0.88 ) }
    dend_32 { pt3dadd( -0.526652, -146.817, -21.8289, 1.33 ) }
    dend_32 { pt3dadd( -0.347107, -147.487, -22.0726, 1.47 ) }
    dend_32 { pt3dadd( -0.172946, -148.216, -22.2896, 1.47 ) }
    dend_32 { pt3dadd( -0.0267456, -148.867, -22.4499, 1.25 ) }
    dend_32 { pt3dadd( 0.165142, -149.758, -22.6341, 0.44 ) }
    dend_32 { pt3dadd( 0.451271, -151.069, -22.8188, 0.29 ) }
    dend_32 { pt3dadd( 0.670262, -152.111, -22.898, 0.29 ) }
    dend_32 { pt3dadd( 0.878953, -153.178, -22.9209, 0.29 ) }
    dend_32 { pt3dadd( 1.02933, -154.03, -22.8992, 0.74 ) }
    dend_32 { pt3dadd( 1.11804, -154.635, -22.859, 0.88 ) }
    dend_32 { pt3dadd( 1.24194, -155.866, -22.7253, 0.96 ) }
    dend_32 { pt3dadd( 1.28175, -156.92, -22.5841, 1.03 ) }
    dend_32 { pt3dadd( 1.25346, -157.715, -22.4811, 1.03 ) }
    dend_32 { pt3dadd( 1.18035, -158.507, -22.3731, 0.59 ) }
    dend_32 { pt3dadd( 1.08158, -159.353, -22.2632, 0.22 ) }
    dend_32 { pt3dadd( 1.01609, -159.886, -22.2107, 0.22 ) }
    dend_32 { pt3dadd( 0.865633, -161.11, -22.1605, 0.96 ) }
    dend_32 { pt3dadd( 0.775672, -161.834, -22.1528, 1.11 ) }
    dend_32 { pt3dadd( 0.692719, -162.631, -22.1267, 1.11 ) }
    dend_32 { pt3dadd( 0.642349, -163.393, -22.078, 0.59 ) }
    dend_32 { pt3dadd( 0.620042, -164.169, -22.0132, 0.29 ) }
    dend_32 { pt3dadd( 0.62482, -164.832, -21.9419, 0.29 ) }
    dend_32 { pt3dadd( 0.634792, -165.385, -21.8662, 0.29 ) }
    dend_32 { pt3dadd( 0.667233, -166.586, -21.6789, 0.44 ) }
    dend_32 { pt3dadd( 0.701059, -167.604, -21.4929, 0.66 ) }
    dend_32 { pt3dadd( 0.740623, -168.679, -21.2859, 0.66 ) }
    dend_32 { pt3dadd( 0.777151, -169.456, -21.1446, 0.81 ) }
    dend_32 { pt3dadd( 0.820531, -170.319, -21.0088, 0.81 ) }
    dend_32 { pt3dadd( 0.863785, -171.143, -20.8957, 0.52 ) }
    dend_32 { pt3dadd( 0.889462, -172.189, -20.7792, 0.66 ) }
    dend_32 { pt3dadd( 0.894724, -172.964, -20.6971, 0.66 ) }
    dend_32 { pt3dadd( 0.851258, -174.267, -20.6198, 0.37 ) }
    dend_32 { pt3dadd( 0.774306, -175.418, -20.6076, 0.37 ) }
    dend_32 { pt3dadd( 0.680492, -176.336, -20.6381, 1.03 ) }
    dend_32 { pt3dadd( 0.554083, -177.257, -20.7344, 1.47 ) }
    dend_32 { pt3dadd( 0.392687, -178.159, -20.887, 1.62 ) }
    dend_32 { pt3dadd( 0.0311802, -179.764, -21.2543, 0.88 ) }
    dend_32 { pt3dadd( -0.288145, -180.805, -21.5733, 0.59 ) }
    dend_32 { pt3dadd( -0.604848, -181.596, -21.875, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -1.24022, -182.868, -22.4183, 0.29 ) }
    dend_32 { pt3dadd( -1.45908, -183.243, -22.5725, 0.29 ) }
    dend_32 { pt3dadd( -1.8139, -183.781, -22.7695, 0.29 ) }
    dend_32 { pt3dadd( -2.48473, -184.784, -23.0608, 0.29 ) }
    dend_32 { pt3dadd( -3.14988, -185.731, -23.3312, 0.59 ) }
    dend_32 { pt3dadd( -3.84002, -186.736, -23.5995, 0.59 ) }
    dend_32 { pt3dadd( -4.27234, -187.358, -23.7585, 0.44 ) }
    dend_32 { pt3dadd( -4.81191, -188.104, -23.9606, 0.44 ) }
    dend_32 { pt3dadd( -5.17959, -188.558, -24.1231, 0.29 ) }
    dend_32 { pt3dadd( -5.72947, -189.201, -24.4135, 1.4 ) }
    dend_32 { pt3dadd( -6.56034, -189.931, -24.8881, 1.62 ) }
    dend_32 { pt3dadd( -7.34399, -190.428, -25.3155, 1.4 ) }
    dend_32 { pt3dadd( -8.11367, -190.782, -25.7052, 1.11 ) }
    dend_32 { pt3dadd( -9.40054, -191.252, -26.3027, 0.81 ) }
    dend_32 { pt3dadd( -10.1147, -191.494, -26.6281, 0.59 ) }
    dend_32 { pt3dadd( -10.9036, -191.784, -27.0135, 0.74 ) }
    dend_32 { pt3dadd( -11.6626, -192.139, -27.4135, 0.81 ) }
    dend_32 { pt3dadd( -12.2549, -192.596, -27.7634, 0.52 ) }
    dend_32 { pt3dadd( -12.6924, -193.061, -28.0565, 0.52 ) }
    dend_32 { pt3dadd( -13.0893, -193.583, -28.3206, 0.74 ) }
    dend_32 { pt3dadd( -13.637, -194.324, -28.7137, 0.74 ) }
    dend_32 { pt3dadd( -13.9226, -194.786, -28.9327, 0.74 ) }
    dend_32 { pt3dadd( -14.216, -195.306, -29.1939, 0.52 ) }
    dend_32 { pt3dadd( -14.6448, -196.129, -29.563, 0.52 ) }
    dend_32 { pt3dadd( -14.8763, -196.581, -29.7494, 0.52 ) }
    dend_32 { pt3dadd( -15.3088, -197.471, -30.0569, 1.69 ) }
    dend_32 { pt3dadd( -15.565, -198.062, -30.215, 2.14 ) }
    dend_32 { pt3dadd( -16.0206, -199.313, -30.477, 1.55 ) }
    dend_32 { pt3dadd( -16.4298, -200.628, -30.6892, 0.29 ) }
    dend_32 { pt3dadd( -16.6406, -201.398, -30.7849, 0.29 ) }
    dend_32 { pt3dadd( -16.9097, -202.458, -30.8867, 0.44 ) }
    dend_32 { pt3dadd( -17.1543, -203.471, -30.9467, 0.59 ) }
    dend_32 { pt3dadd( -17.3666, -204.37, -30.9772, 0.59 ) }
    dend_32 { pt3dadd( -17.5752, -205.288, -30.9716, 0.29 ) }
    dend_32 { pt3dadd( -17.6887, -205.782, -30.9694, 0.29 ) }
    dend_32 { pt3dadd( -17.8446, -206.47, -30.9667, 0.96 ) }
    dend_32 { pt3dadd( -17.9709, -207.074, -30.9667, 1.03 ) }
    dend_32 { pt3dadd( -18.1237, -207.913, -30.9761, 0.52 ) }
    dend_32 { pt3dadd( -18.286, -209.007, -31.0021, 0.29 ) }
    dend_32 { pt3dadd( -18.3587, -209.628, -31.0214, 0.81 ) }
    dend_32 { pt3dadd( -18.4279, -210.349, -31.0445, 0.96 ) }
    dend_32 { pt3dadd( -18.4759, -210.905, -31.0642, 0.96 ) }
    dend_32 { pt3dadd( -18.5586, -211.88, -31.1016, 0.29 ) }
    dend_32 { pt3dadd( -18.6719, -212.993, -31.1382, 0.29 ) }
    dend_32 { pt3dadd( -18.8131, -214.157, -31.2068, 1.47 ) }
    dend_32 { pt3dadd( -18.9173, -214.971, -31.2712, 1.92 ) }
    dend_32 { pt3dadd( -18.9646, -215.367, -31.3079, 1.92 ) }
    dend_32 { pt3dadd( -19.078, -216.352, -31.3931, 1.33 ) }
    dend_32 { pt3dadd( -19.1921, -217.447, -31.4957, 0.29 ) }
    dend_32 { pt3dadd( -19.3024, -218.563, -31.6106, 0.29 ) }
    dend_32 { pt3dadd( -19.3831, -219.453, -31.7164, 0.29 ) }
    dend_32 { pt3dadd( -19.5525, -221.387, -31.9647, 0.29 ) }
    dend_32 { pt3dadd( -19.6535, -222.704, -32.1274, 1.4 ) }
    dend_32 { pt3dadd( -19.7035, -223.506, -32.2211, 2.14 ) }
    dend_32 { pt3dadd( -19.7205, -223.856, -32.2595, 2.28 ) }
    dend_32 { pt3dadd( -19.7389, -224.428, -32.3115, 2.28 ) }
    dend_32 { pt3dadd( -19.7575, -225.019, -32.3459, 1.92 ) }
    dend_32 { pt3dadd( -19.7843, -225.88, -32.3232, 0.88 ) }
    dend_32 { pt3dadd( -19.8174, -227.196, -32.2066, 0.29 ) }
    dend_32 { pt3dadd( -19.8306, -228.001, -32.092, 0.29 ) }
    dend_32 { pt3dadd( -19.8374, -228.904, -31.9343, 0.29 ) }
    dend_32 { pt3dadd( -19.8412, -230.318, -31.6557, 0.29 ) }
    dend_32 { pt3dadd( -19.8383, -231.766, -31.3697, 0.96 ) }
    dend_32 { pt3dadd( -19.8306, -232.735, -31.1898, 1.62 ) }
    dend_32 { pt3dadd( -19.8241, -233.283, -31.0925, 1.62 ) }
    dend_32 { pt3dadd( -19.8199, -233.8, -31.0129, 1.62 ) }
    dend_32 { pt3dadd( -19.8226, -234.911, -30.8881, 1.11 ) }
    dend_32 { pt3dadd( -19.8483, -236.269, -30.8663, 0.29 ) }
    dend_32 { pt3dadd( -19.8932, -237.279, -30.9172, 0.29 ) }
    dend_32 { pt3dadd( -19.9434, -238.079, -30.9803, 0.59 ) }
    dend_32 { pt3dadd( -19.9778, -238.476, -31.0193, 0.66 ) }
    dend_32 { pt3dadd( -20.0302, -238.956, -31.0712, 0.66 ) }
    dend_32 { pt3dadd( -20.2078, -240.275, -31.2178, 0.29 ) }
    dend_32 { pt3dadd( -20.4698, -241.803, -31.4128, 0.29 ) }
    dend_32 { pt3dadd( -20.7103, -242.987, -31.5701, 0.96 ) }
    dend_32 { pt3dadd( -20.9375, -243.92, -31.6847, 1.4 ) }
    dend_32 { pt3dadd( -21.124, -244.62, -31.7579, 1.4 ) }
    dend_32 { pt3dadd( -21.3244, -245.343, -31.8193, 1.4 ) }
    dend_32 { pt3dadd( -21.5955, -246.301, -31.8738, 0.88 ) }
    dend_32 { pt3dadd( -21.9312, -247.472, -31.9317, 0.29 ) }
    dend_32 { pt3dadd( -22.2309, -248.543, -31.9688, 0.29 ) }
    dend_32 { pt3dadd( -22.5458, -249.625, -31.9957, 0.44 ) }
    dend_32 { pt3dadd( -22.7597, -250.311, -32.0, 0.66 ) }
    dend_32 { pt3dadd( -22.9402, -250.863, -31.9881, 0.66 ) }
    dend_32 { pt3dadd( -23.2614, -251.846, -31.9245, 0.29 ) }
    dend_32 { pt3dadd( -23.4507, -252.437, -31.8818, 0.29 ) }
    dend_32 { pt3dadd( -23.7006, -253.191, -31.86, 0.29 ) }
    dend_32 { pt3dadd( -24.0754, -254.222, -31.8971, 0.29 ) }
    dend_32 { pt3dadd( -24.3078, -254.81, -31.9576, 0.52 ) }
    dend_32 { pt3dadd( -24.63, -255.623, -32.087, 0.66 ) }
    dend_32 { pt3dadd( -24.8881, -256.433, -32.21, 0.66 ) }
    dend_32 { pt3dadd( -25.1692, -257.693, -32.401, 1.4 ) }
    dend_32 { pt3dadd( -25.2918, -258.795, -32.588, 2.28 ) }
    dend_32 { pt3dadd( -25.3124, -259.891, -32.7934, 2.5 ) }
    dend_32 { pt3dadd( -25.2625, -260.507, -32.9007, 2.5 ) }
    dend_32 { pt3dadd( -24.8183, -262.658, -33.2381, 0.22 ) }
    dend_32 { pt3dadd( -24.5322, -263.526, -33.344, 0.22 ) }
    dend_32 { pt3dadd( -24.0175, -264.625, -33.4372, 0.37 ) }
    dend_32 { pt3dadd( -23.6246, -265.274, -33.4692, 0.44 ) }
    dend_32 { pt3dadd( -22.8982, -266.228, -33.6134, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -22.1153, -267.101, -33.9033, 0.88 ) }
    dend_32 { pt3dadd( -21.6802, -267.504, -34.1948, 1.4 ) }
    dend_32 { pt3dadd( -21.3614, -267.79, -34.4874, 1.4 ) }
    dend_32 { pt3dadd( -20.958, -268.197, -34.9763, 1.11 ) }
    dend_32 { pt3dadd( -19.787, -269.596, -36.806, 0.29 ) }
    dend_32 { pt3dadd( -19.443, -270.102, -37.4787, 0.29 ) }
    dend_32 { pt3dadd( -18.956, -270.991, -38.6149, 0.81 ) }
    dend_32 { pt3dadd( -18.7328, -271.575, -39.2369, 0.81 ) }
    dend_32 { pt3dadd( -18.4088, -272.827, -40.3348, 0.22 ) }
    dend_32 { pt3dadd( -18.3189, -273.355, -40.712, 0.22 ) }
    dend_32 { pt3dadd( -18.2314, -274.18, -41.1333, 0.44 ) }
    dend_32 { pt3dadd( -18.1983, -274.648, -41.3285, 0.59 ) }
    dend_32 { pt3dadd( -18.1052, -276.614, -41.9936, 0.22 ) }
    dend_32 { pt3dadd( -18.0849, -277.301, -42.2118, 0.74 ) }
    dend_32 { pt3dadd( -18.0755, -277.913, -42.3925, 1.03 ) }
    dend_32 { pt3dadd( -18.0555, -278.567, -42.5734, 1.03 ) }
    dend_32 { pt3dadd( -18.0313, -279.208, -42.74, 0.74 ) }
    dend_32 { pt3dadd( -18.004, -279.804, -42.893, 0.37 ) }
    dend_32 { pt3dadd( -17.9172, -281.316, -43.2911, 0.22 ) }
    dend_32 { pt3dadd( -17.8473, -282.821, -43.6905, 0.22 ) }
    dend_32 { pt3dadd( -17.8108, -283.954, -43.9829, 0.88 ) }
    dend_32 { pt3dadd( -17.7934, -284.791, -44.1956, 1.62 ) }
    dend_32 { pt3dadd( -17.7902, -285.251, -44.3113, 1.84 ) }
    dend_32 { pt3dadd( -17.7995, -285.806, -44.446, 1.84 ) }
    dend_32 { pt3dadd( -17.8485, -286.952, -44.7058, 0.52 ) }
    dend_32 { pt3dadd( -17.9327, -287.92, -44.9141, 0.22 ) }
    dend_32 { pt3dadd( -18.0389, -288.696, -45.077, 0.22 ) }
    dend_32 { pt3dadd( -18.1599, -289.365, -45.2113, 0.37 ) }
    dend_32 { pt3dadd( -18.2173, -289.626, -45.2539, 0.37 ) }
    dend_32 { pt3dadd( -18.394, -290.271, -45.3504, 0.22 ) }
    dend_32 { pt3dadd( -18.5622, -290.795, -45.4209, 0.74 ) }
    dend_32 { pt3dadd( -18.7683, -291.392, -45.5025, 0.74 ) }
    dend_32 { pt3dadd( -18.9651, -291.932, -45.5687, 0.59 ) }
    dend_32 { pt3dadd( -19.4152, -293.102, -45.6947, 0.22 ) }
    dend_32 { pt3dadd( -19.6397, -293.643, -45.738, 0.22 ) }
    dend_32 { pt3dadd( -19.9685, -294.368, -45.7477, 0.59 ) }
    dend_32 { pt3dadd( -20.2241, -294.891, -45.7129, 0.59 ) }
    dend_32 { pt3dadd( -20.4883, -295.432, -45.6196, 0.29 ) }
    dend_32 { pt3dadd( -20.774, -295.986, -45.4885, 0.22 ) }
    dend_32 { pt3dadd( -21.2278, -296.75, -45.3113, 0.37 ) }
    dend_32 { pt3dadd( -21.8413, -297.666, -45.0989, 0.44 ) }
    dend_32 { pt3dadd( -22.4365, -298.317, -44.9917, 0.59 ) }
    dend_32 { pt3dadd( -23.2477, -298.977, -44.9578, 0.37 ) }
    dend_32 { pt3dadd( -23.7756, -299.264, -44.9964, 0.22 ) }
    dend_32 { pt3dadd( -25.1647, -299.705, -45.232, 2.21 ) }
    dend_32 { pt3dadd( -25.7136, -299.751, -45.3736, 2.5 ) }
    dend_32 { pt3dadd( -27.9188, -299.427, -46.081, 0.22 ) }
    dend_32 { pt3dadd( -28.611, -299.204, -46.33, 0.22 ) }
    dend_32 { pt3dadd( -29.5676, -298.713, -46.7446, 0.66 ) }
    dend_32 { pt3dadd( -30.0335, -298.398, -46.9759, 0.66 ) }
    dend_32 { pt3dadd( -30.7029, -297.86, -47.3394, 0.37 ) }
    dend_32 { pt3dadd( -31.6472, -297.066, -47.9022, 1.92 ) }
    dend_32 { pt3dadd( -31.9831, -296.785, -48.1117, 1.92 ) }
    dend_32 { pt3dadd( -33.7129, -295.586, -49.2547, 0.44 ) }
    dend_32 { pt3dadd( -34.4809, -295.156, -49.7719, 0.59 ) }
    dend_32 { pt3dadd( -34.9379, -294.97, -50.0516, 0.37 ) }
    dend_32 { pt3dadd( -35.6327, -294.812, -50.4042, 0.37 ) }
    dend_32 { pt3dadd( -36.3463, -294.724, -50.7441, 0.22 ) }
    dend_32 { pt3dadd( -38.0272, -294.682, -51.4158, 0.29 ) }
    dend_32 { pt3dadd( -38.5984, -294.757, -51.5618, 0.22 ) }
    dend_32 { pt3dadd( -39.5241, -294.926, -51.7406, 0.22 ) }
    dend_32 { pt3dadd( -40.7959, -295.155, -51.9498, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.86442, -74.1646, -9.8661, 0.74 ) }
    dend_31 { pt3dadd( -11.282, -75.2266, -9.50553, 0.74 ) }
    dend_31 { pt3dadd( -11.8449, -75.6073, -9.3608, 0.74 ) }
    dend_31 { pt3dadd( -12.6665, -76.0864, -9.17222, 0.74 ) }
    dend_31 { pt3dadd( -13.2473, -76.3686, -9.05236, 0.52 ) }
    dend_31 { pt3dadd( -13.8632, -76.5741, -8.95647, 0.52 ) }
    dend_31 { pt3dadd( -14.4633, -76.7111, -8.89021, 0.88 ) }
    dend_31 { pt3dadd( -14.9937, -76.6825, -8.90971, 0.88 ) }
    dend_31 { pt3dadd( -15.8692, -76.4976, -9.02387, 0.59 ) }
    dend_31 { pt3dadd( -16.4256, -76.3366, -9.12731, 0.37 ) }
    dend_31 { pt3dadd( -17.2941, -76.1124, -9.33564, 0.37 ) }
    dend_31 { pt3dadd( -17.8302, -76.0301, -9.50707, 1.11 ) }
    dend_31 { pt3dadd( -18.2859, -76.0543, -9.6887, 1.47 ) }
    dend_31 { pt3dadd( -18.7254, -76.1478, -9.86947, 1.47 ) }
    dend_31 { pt3dadd( -19.043, -76.2456, -9.99053, 1.47 ) }
    dend_31 { pt3dadd( -19.7665, -76.4769, -10.2471, 0.96 ) }
    dend_31 { pt3dadd( -20.408, -76.6406, -10.4486, 0.59 ) }
    dend_31 { pt3dadd( -20.9898, -76.7319, -10.587, 0.59 ) }
    dend_31 { pt3dadd( -21.58, -76.7852, -10.6644, 0.59 ) }
    dend_31 { pt3dadd( -22.1987, -76.8386, -10.7255, 0.81 ) }
    dend_31 { pt3dadd( -22.7838, -76.8914, -10.7692, 0.81 ) }
    dend_31 { pt3dadd( -23.2345, -76.9328, -10.7736, 0.81 ) }
    dend_31 { pt3dadd( -23.7642, -77.002, -10.7628, 0.81 ) }
    dend_31 { pt3dadd( -24.3541, -77.2581, -10.8378, 0.22 ) }
    dend_31 { pt3dadd( -24.7614, -77.8307, -11.07, 0.22 ) }
    dend_31 { pt3dadd( -25.0278, -78.2875, -11.2859, 0.66 ) }
    dend_31 { pt3dadd( -25.1741, -78.5592, -11.4273, 0.88 ) }
    dend_31 { pt3dadd( -25.3884, -78.9528, -11.6527, 0.88 ) }
    dend_31 { pt3dadd( -25.7104, -79.4084, -12.0129, 0.44 ) }
    dend_31 { pt3dadd( -26.1938, -79.8529, -12.486, 1.4 ) }
    dend_31 { pt3dadd( -26.6498, -80.0864, -12.8753, 2.14 ) }
    dend_31 { pt3dadd( -26.8557, -80.1417, -13.0441, 2.58 ) }
    dend_31 { pt3dadd( -27.2892, -80.1764, -13.3757, 2.36 ) }
    dend_31 { pt3dadd( -28.47, -80.1419, -14.2627, 1.69 ) }
    dend_31 { pt3dadd( -29.0908, -80.0818, -14.7093, 0.37 ) }
    dend_31 { pt3dadd( -29.841, -79.9768, -15.1839, 0.37 ) }
    dend_31 { pt3dadd( -30.4486, -79.8875, -15.5254, 0.37 ) }
    dend_31 { pt3dadd( -31.664, -79.7502, -16.134, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -32.162, -79.7209, -16.3609, 2.14 ) }
    dend_31 { pt3dadd( -32.6562, -79.7354, -16.5636, 2.5 ) }
    dend_31 { pt3dadd( -34.1141, -79.9196, -17.1962, 0.44 ) }
    dend_31 { pt3dadd( -34.5677, -80.0167, -17.4028, 0.44 ) }
    dend_31 { pt3dadd( -35.2665, -80.1803, -17.7513, 0.44 ) }
    dend_31 { pt3dadd( -35.9077, -80.3088, -18.1026, 0.44 ) }
    dend_31 { pt3dadd( -36.5705, -80.397, -18.4824, 1.4 ) }
    dend_31 { pt3dadd( -37.2975, -80.4638, -18.9185, 2.06 ) }
    dend_31 { pt3dadd( -37.9536, -80.5136, -19.3508, 2.06 ) }
    dend_31 { pt3dadd( -38.7613, -80.5288, -19.9114, 0.66 ) }
    dend_31 { pt3dadd( -39.4017, -80.5177, -20.3996, 0.81 ) }
    dend_31 { pt3dadd( -40.0966, -80.5011, -20.9824, 0.52 ) }
    dend_31 { pt3dadd( -40.6729, -80.5144, -21.5592, 1.77 ) }
    dend_31 { pt3dadd( -41.0656, -80.5627, -22.0395, 2.28 ) }
    dend_31 { pt3dadd( -42.1888, -80.8805, -23.7479, 1.33 ) }
    dend_31 { pt3dadd( -42.5538, -81.0767, -24.4497, 1.77 ) }
    dend_31 { pt3dadd( -42.7561, -81.2196, -24.9106, 1.77 ) }
    dend_31 { pt3dadd( -43.1155, -81.5094, -25.8095, 0.74 ) }
    dend_31 { pt3dadd( -43.3899, -81.7465, -26.5281, 0.52 ) }
    dend_31 { pt3dadd( -43.802, -82.1309, -27.5659, 0.52 ) }
    dend_31 { pt3dadd( -44.2233, -82.5996, -28.6146, 0.88 ) }
    dend_31 { pt3dadd( -44.6698, -83.0553, -29.5547, 1.47 ) }
    dend_31 { pt3dadd( -45.1417, -83.5121, -30.4198, 0.22 ) }
    dend_31 { pt3dadd( -45.3896, -83.7519, -30.829, 0.22 ) }
    dend_31 { pt3dadd( -45.7068, -84.0832, -31.3139, 0.81 ) }
    dend_31 { pt3dadd( -46.0086, -84.4485, -31.7508, 0.96 ) }
    dend_31 { pt3dadd( -46.3786, -84.9404, -32.2554, 1.55 ) }
    dend_31 { pt3dadd( -46.7107, -85.436, -32.6821, 1.55 ) }
    dend_31 { pt3dadd( -47.0671, -85.9774, -33.1236, 0.37 ) }
    dend_31 { pt3dadd( -47.3252, -86.3615, -33.4436, 0.74 ) }
    dend_31 { pt3dadd( -47.6631, -86.8344, -33.8687, 0.81 ) }
    dend_31 { pt3dadd( -48.1011, -87.4539, -34.4645, 0.29 ) }
    dend_31 { pt3dadd( -48.2924, -87.7508, -34.7571, 0.96 ) }
    dend_31 { pt3dadd( -48.5437, -88.1855, -35.1874, 1.33 ) }
    dend_31 { pt3dadd( -48.8461, -88.7938, -35.7992, 0.74 ) }
    dend_31 { pt3dadd( -49.0444, -89.3008, -36.3071, 0.59 ) }
    dend_31 { pt3dadd( -49.2573, -90.1025, -37.0922, 0.29 ) }
    dend_31 { pt3dadd( -49.3107, -90.6223, -37.5645, 0.29 ) }
    dend_31 { pt3dadd( -49.2977, -91.1016, -37.9909, 0.29 ) }
    dend_31 { pt3dadd( -49.234, -91.4703, -38.2929, 1.18 ) }
    dend_31 { pt3dadd( -49.1272, -91.8156, -38.5679, 1.69 ) }
    dend_31 { pt3dadd( -48.9084, -92.3161, -38.9538, 1.33 ) }
    dend_31 { pt3dadd( -48.5457, -93.0181, -39.501, 0.22 ) }
    dend_31 { pt3dadd( -48.3763, -93.3386, -39.7587, 0.22 ) }
    dend_31 { pt3dadd( -48.1773, -93.7546, -40.0885, 0.96 ) }
    dend_31 { pt3dadd( -48.06, -94.0497, -40.3148, 1.11 ) }
    dend_31 { pt3dadd( -47.8684, -94.6183, -40.7322, 0.52 ) }
    dend_31 { pt3dadd( -47.6055, -95.5389, -41.3755, 0.22 ) }
    dend_31 { pt3dadd( -47.4975, -95.9773, -41.6722, 0.22 ) }
    dend_31 { pt3dadd( -47.3989, -96.4584, -41.9931, 0.88 ) }
    dend_31 { pt3dadd( -47.344, -96.8089, -42.2409, 1.03 ) }
    dend_31 { pt3dadd( -47.2708, -97.4134, -42.6951, 0.22 ) }
    dend_31 { pt3dadd( -47.2392, -97.6913, -42.9142, 0.22 ) }
    dend_31 { pt3dadd( -47.1855, -98.0959, -43.2461, 0.66 ) }
    dend_31 { pt3dadd( -47.1132, -98.5457, -43.6162, 0.74 ) }
    dend_31 { pt3dadd( -46.9163, -99.591, -44.4533, 0.22 ) }
    dend_31 { pt3dadd( -46.7677, -100.356, -45.0076, 0.22 ) }
    dend_31 { pt3dadd( -46.6174, -101.337, -45.6293, 0.96 ) }
    dend_31 { pt3dadd( -46.5739, -101.711, -45.838, 1.25 ) }
    dend_31 { pt3dadd( -46.5494, -102.218, -46.0677, 1.25 ) }
    dend_31 { pt3dadd( -46.5519, -102.976, -46.3313, 0.66 ) }
    dend_31 { pt3dadd( -46.6218, -103.919, -46.5746, 0.15 ) }
    dend_31 { pt3dadd( -46.7724, -104.73, -46.7403, 0.37 ) }
    dend_31 { pt3dadd( -46.8832, -105.11, -46.8143, 0.37 ) }
    dend_31 { pt3dadd( -47.393, -106.493, -47.0956, 0.22 ) }
    dend_31 { pt3dadd( -47.4898, -106.707, -47.1458, 0.74 ) }
    dend_31 { pt3dadd( -47.7236, -107.162, -47.2723, 0.88 ) }
    dend_31 { pt3dadd( -48.5274, -108.602, -47.7132, 0.22 ) }
    dend_31 { pt3dadd( -48.8376, -109.144, -47.8801, 0.74 ) }
    dend_31 { pt3dadd( -49.1455, -109.669, -48.0363, 0.74 ) }
    dend_31 { pt3dadd( -49.8216, -110.811, -48.384, 0.22 ) }
    dend_31 { pt3dadd( -50.3819, -111.771, -48.6646, 0.22 ) }
    dend_31 { pt3dadd( -50.9964, -112.878, -48.9343, 0.22 ) }
    dend_31 { pt3dadd( -51.5365, -113.928, -49.1324, 0.22 ) }
    dend_31 { pt3dadd( -51.8109, -114.502, -49.2082, 0.88 ) }
    dend_31 { pt3dadd( -52.0096, -114.958, -49.2458, 1.11 ) }
    dend_31 { pt3dadd( -52.1781, -115.423, -49.2571, 1.11 ) }
    dend_31 { pt3dadd( -52.5197, -116.562, -49.2441, 0.15 ) }
    dend_31 { pt3dadd( -52.7426, -117.487, -49.2251, 0.15 ) }
    dend_31 { pt3dadd( -52.8477, -118.0, -49.2118, 0.81 ) }
    dend_31 { pt3dadd( -52.9297, -118.447, -49.2004, 0.96 ) }
    dend_31 { pt3dadd( -53.2523, -120.112, -49.3546, 0.22 ) }
    dend_31 { pt3dadd( -53.3959, -120.892, -49.4508, 0.22 ) }
    dend_31 { pt3dadd( -53.5547, -121.752, -49.6137, 0.22 ) }
    dend_31 { pt3dadd( -53.6187, -122.095, -49.6973, 1.18 ) }
    dend_31 { pt3dadd( -53.6829, -122.422, -49.799, 1.18 ) }
    dend_31 { pt3dadd( -54.2522, -124.81, -50.893, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 22.6542, 161.892, -30.574, 0.37 ) }
    dend_26 { pt3dadd( 22.9271, 161.28, -29.9625, 0.37 ) }
    dend_26 { pt3dadd( 23.1639, 160.823, -29.5068, 0.52 ) }
    dend_26 { pt3dadd( 23.5065, 160.207, -28.883, 0.74 ) }
    dend_26 { pt3dadd( 23.7917, 159.72, -28.3967, 1.11 ) }
    dend_26 { pt3dadd( 23.9594, 159.445, -28.1161, 1.11 ) }
    dend_26 { pt3dadd( 24.2016, 159.049, -27.7059, 0.81 ) }
    dend_26 { pt3dadd( 24.7339, 158.201, -26.7297, 0.22 ) }
    dend_26 { pt3dadd( 24.9888, 157.786, -26.2587, 0.22 ) }
    dend_26 { pt3dadd( 25.1539, 157.503, -25.9726, 0.66 ) }
    dend_26 { pt3dadd( 25.3231, 157.184, -25.6806, 0.66 ) }
    dend_26 { pt3dadd( 25.4872, 156.849, -25.3966, 0.66 ) }
    dend_26 { pt3dadd( 25.782, 156.173, -24.8434, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 26.0398, 155.499, -24.3129, 0.22 ) }
    dend_26 { pt3dadd( 26.3048, 154.744, -23.7566, 0.22 ) }
    dend_26 { pt3dadd( 26.4246, 154.375, -23.5003, 0.44 ) }
    dend_26 { pt3dadd( 26.5059, 154.118, -23.3462, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 22.6542, 161.892, -30.574, 0.22 ) }
    dend_25 { pt3dadd( 23.7152, 162.169, -29.7206, 0.22 ) }
    dend_25 { pt3dadd( 23.9643, 162.251, -29.5378, 0.44 ) }
    dend_25 { pt3dadd( 25.108, 162.706, -28.7198, 0.22 ) }
    dend_25 { pt3dadd( 25.6096, 162.919, -28.3853, 0.59 ) }
    dend_25 { pt3dadd( 26.0076, 163.088, -28.1478, 0.59 ) }
    dend_25 { pt3dadd( 27.7149, 163.814, -27.1289, 0.22 ) }
    dend_25 { pt3dadd( 29.7188, 164.684, -26.0018, 0.22 ) }
    dend_25 { pt3dadd( 30.4454, 165.017, -25.616, 0.66 ) }
    dend_25 { pt3dadd( 31.0276, 165.303, -25.3382, 0.81 ) }
    dend_25 { pt3dadd( 31.9238, 165.756, -24.9437, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 3.37804, 259.035, -38.4912, 0.59 ) }
    dend_19 { pt3dadd( 4.41816, 260.191, -39.9381, 0.59 ) }
    dend_19 { pt3dadd( 4.76511, 260.585, -40.3947, 0.44 ) }
    dend_19 { pt3dadd( 5.46529, 261.451, -41.3719, 0.22 ) }
    dend_19 { pt3dadd( 6.06247, 262.26, -42.2164, 0.81 ) }
    dend_19 { pt3dadd( 6.36614, 262.704, -42.6777, 0.96 ) }
    dend_19 { pt3dadd( 6.50159, 262.914, -42.8969, 0.96 ) }
    dend_19 { pt3dadd( 6.89805, 263.653, -43.6021, 0.22 ) }
    dend_19 { pt3dadd( 7.36443, 264.839, -44.716, 0.22 ) }
    dend_19 { pt3dadd( 7.66057, 265.946, -45.7255, 1.11 ) }
    dend_19 { pt3dadd( 7.77488, 266.565, -46.2605, 1.47 ) }
    dend_19 { pt3dadd( 7.79751, 266.868, -46.5196, 1.47 ) }
    dend_19 { pt3dadd( 7.76518, 268.199, -47.5873, 0.22 ) }
    dend_19 { pt3dadd( 7.61347, 269.419, -48.5096, 0.22 ) }
    dend_19 { pt3dadd( 7.47138, 270.139, -49.0201, 0.66 ) }
    dend_19 { pt3dadd( 7.38104, 270.496, -49.2715, 0.66 ) }
    dend_19 { pt3dadd( 6.86569, 272.206, -50.3957, 0.22 ) }
    dend_19 { pt3dadd( 6.33376, 273.769, -51.3633, 0.22 ) }
    dend_19 { pt3dadd( 5.98616, 274.66, -51.8921, 0.22 ) }
    dend_19 { pt3dadd( 5.55373, 275.696, -52.4839, 1.47 ) }
    dend_19 { pt3dadd( 5.28885, 276.289, -52.7945, 1.47 ) }
    dend_19 { pt3dadd( 4.34774, 278.308, -53.7156, 0.22 ) }
    dend_19 { pt3dadd( 4.02058, 278.967, -53.9757, 0.81 ) }
    dend_19 { pt3dadd( 3.72282, 279.524, -54.1588, 0.81 ) }
    dend_19 { pt3dadd( 2.95235, 280.894, -54.5118, 0.22 ) }
    dend_19 { pt3dadd( 2.30569, 281.985, -54.7365, 0.22 ) }
    dend_19 { pt3dadd( 1.60255, 283.122, -54.9258, 1.47 ) }
    dend_19 { pt3dadd( 1.28807, 283.591, -55.0057, 1.84 ) }
    dend_19 { pt3dadd( 0.107389, 285.291, -55.284, 0.22 ) }
    dend_19 { pt3dadd( -0.824765, 286.596, -55.4743, 0.22 ) }
    dend_19 { pt3dadd( -1.17084, 287.047, -55.5327, 0.22 ) }
    dend_19 { pt3dadd( -2.12845, 288.219, -55.7129, 1.55 ) }
    dend_19 { pt3dadd( -2.74628, 288.922, -55.8327, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.37804, 259.035, -38.4912, 0.22 ) }
    dend_18 { pt3dadd( 3.94474, 261.872, -39.6647, 0.22 ) }
    dend_18 { pt3dadd( 4.28926, 263.415, -40.2996, 0.22 ) }
    dend_18 { pt3dadd( 4.57215, 264.612, -40.788, 0.96 ) }
    dend_18 { pt3dadd( 4.69964, 265.133, -40.9963, 1.18 ) }
    dend_18 { pt3dadd( 4.83537, 265.672, -41.2077, 1.18 ) }
    dend_18 { pt3dadd( 5.05779, 266.554, -41.5436, 0.22 ) }
    dend_18 { pt3dadd( 5.23799, 267.186, -41.7707, 0.44 ) }
    dend_18 { pt3dadd( 5.32025, 267.508, -41.8849, 0.44 ) }
    dend_18 { pt3dadd( 5.53171, 268.438, -42.2017, 0.22 ) }
    dend_18 { pt3dadd( 5.70853, 269.255, -42.4734, 0.44 ) }
    dend_18 { pt3dadd( 5.9006, 270.161, -42.771, 0.44 ) }
    dend_18 { pt3dadd( 6.45073, 272.936, -43.6469, 0.22 ) }
    dend_18 { pt3dadd( 6.88963, 275.272, -44.3941, 0.22 ) }
    dend_18 { pt3dadd( 7.049, 276.148, -44.6852, 0.66 ) }
    dend_18 { pt3dadd( 7.13309, 276.627, -44.8509, 0.74 ) }
    dend_18 { pt3dadd( 7.2591, 277.388, -45.139, 0.22 ) }
    dend_18 { pt3dadd( 7.5608, 279.24, -45.893, 0.22 ) }
    dend_18 { pt3dadd( 7.72842, 280.327, -46.3513, 1.03 ) }
    dend_18 { pt3dadd( 7.83469, 281.046, -46.6642, 1.25 ) }
    dend_18 { pt3dadd( 7.91184, 281.589, -46.9039, 1.25 ) }
    dend_18 { pt3dadd( 8.16341, 283.416, -47.7213, 0.22 ) }
    dend_18 { pt3dadd( 8.57765, 286.416, -49.0835, 0.22 ) }
    dend_18 { pt3dadd( 8.72253, 287.427, -49.5454, 0.74 ) }
    dend_18 { pt3dadd( 8.80988, 288.012, -49.795, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.7741, 85.3796, -4.65372, 0.37 ) }
    dend_16 { pt3dadd( 1.51029, 93.6563, -4.39137, 0.37 ) }
    dend_16 { pt3dadd( 6.62212, 101.502, -4.31513, 0.37 ) }
    dend_16 { pt3dadd( 11.3518, 109.262, -1.93439, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.7741, 85.3796, -4.65372, 0.22 ) }
    dend_15 { pt3dadd( -0.182549, 93.9707, -9.54192, 0.37 ) }
    dend_15 { pt3dadd( 2.25008, 101.8, -15.7229, 0.37 ) }
    dend_15 { pt3dadd( 4.78532, 109.164, -22.4649, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 95.3568, -4.69632, 12.9785, 0.37 ) }
    dend_10 { pt3dadd( 108.241, -7.4579, 13.3288, 0.37 ) }
    dend_10 { pt3dadd( 121.418, -8.2378, 13.9821, 0.37 ) }
    dend_10 { pt3dadd( 134.465, -7.91798, 16.0961, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 95.3568, -4.69632, 12.9785, 0.22 ) }
    dend_9 { pt3dadd( 106.053, -7.16804, 13.3875, 0.37 ) }
    dend_9 { pt3dadd( 117.056, -7.71368, 13.5185, 0.37 ) }
    dend_9 { pt3dadd( 127.977, -8.95082, 14.1901, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 57.7616, 9.50459, 2.50181, 0.52 ) }
    dend_5 { pt3dadd( 58.9291, 9.69167, 2.81553, 0.52 ) }
    dend_5 { pt3dadd( 59.3836, 9.74296, 2.93944, 0.52 ) }
    dend_5 { pt3dadd( 59.8571, 9.77716, 3.09878, 0.52 ) }
    dend_5 { pt3dadd( 60.7662, 9.82656, 3.43119, 0.52 ) }
    dend_5 { pt3dadd( 61.3103, 9.84116, 3.64041, 0.88 ) }
    dend_5 { pt3dadd( 62.1432, 9.84876, 3.95188, 0.88 ) }
    dend_5 { pt3dadd( 62.7603, 9.85296, 4.17361, 0.88 ) }
    dend_5 { pt3dadd( 63.4191, 9.78186, 4.40661, 0.81 ) }
    dend_5 { pt3dadd( 63.842, 9.65165, 4.52308, 0.81 ) }
    dend_5 { pt3dadd( 64.4768, 9.31494, 4.65107, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 64.9819, 8.94582, 4.70222, 0.59 ) }
    dend_5 { pt3dadd( 65.5211, 8.47752, 4.68907, 0.59 ) }
    dend_5 { pt3dadd( 66.0526, 7.9834, 4.61229, 0.74 ) }
    dend_5 { pt3dadd( 66.8788, 7.14008, 4.41949, 0.66 ) }
    dend_5 { pt3dadd( 67.2165, 6.76225, 4.32565, 0.66 ) }
    dend_5 { pt3dadd( 67.7258, 6.1405, 4.16804, 0.52 ) }
    dend_5 { pt3dadd( 68.0706, 5.71134, 4.05447, 0.52 ) }
    dend_5 { pt3dadd( 68.5152, 5.18079, 3.90164, 0.81 ) }
    dend_5 { pt3dadd( 69.0677, 4.52269, 3.70246, 0.81 ) }
    dend_5 { pt3dadd( 69.433, 4.06441, 3.57529, 0.81 ) }
    dend_5 { pt3dadd( 69.8723, 3.4594, 3.40921, 0.81 ) }
    dend_5 { pt3dadd( 70.3957, 2.65401, 3.19984, 0.88 ) }
    dend_5 { pt3dadd( 70.8111, 1.93798, 3.02451, 1.11 ) }
    dend_5 { pt3dadd( 71.0647, 1.46643, 2.90864, 1.11 ) }
    dend_5 { pt3dadd( 71.5283, 0.514525, 2.68469, 0.88 ) }
    dend_5 { pt3dadd( 71.841, -0.249314, 2.53816, 0.96 ) }
    dend_5 { pt3dadd( 72.0395, -0.85039, 2.46103, 0.96 ) }
    dend_5 { pt3dadd( 72.1751, -1.35643, 2.42631, 0.96 ) }
    dend_5 { pt3dadd( 72.2859, -1.82109, 2.41225, 0.66 ) }
    dend_5 { pt3dadd( 72.4638, -2.56293, 2.43213, 0.66 ) }
    dend_5 { pt3dadd( 72.7317, -3.5421, 2.51417, 0.81 ) }
    dend_5 { pt3dadd( 73.0113, -4.31732, 2.6098, 1.11 ) }
    dend_5 { pt3dadd( 73.4022, -5.18896, 2.74924, 0.96 ) }
    dend_5 { pt3dadd( 73.744, -5.80606, 2.83773, 0.81 ) }
    dend_5 { pt3dadd( 74.2669, -6.5815, 2.93275, 0.81 ) }
    dend_5 { pt3dadd( 74.9222, -7.37576, 3.00134, 0.59 ) }
    dend_5 { pt3dadd( 75.4917, -7.96665, 3.02075, 0.37 ) }
    dend_5 { pt3dadd( 76.0227, -8.46696, 3.0084, 0.37 ) }
    dend_5 { pt3dadd( 76.8128, -9.18449, 2.9501, 0.59 ) }
    dend_5 { pt3dadd( 77.2457, -9.58128, 2.88334, 0.88 ) }
    dend_5 { pt3dadd( 77.4846, -9.81077, 2.82388, 1.11 ) }
    dend_5 { pt3dadd( 77.7895, -10.131, 2.74216, 1.11 ) }
    dend_5 { pt3dadd( 78.1923, -10.5826, 2.64778, 0.74 ) }
    dend_5 { pt3dadd( 78.5166, -10.9271, 2.57447, 0.74 ) }
    dend_5 { pt3dadd( 78.8367, -11.2788, 2.49343, 0.74 ) }
    dend_5 { pt3dadd( 79.3212, -11.8364, 2.33233, 0.74 ) }
    dend_5 { pt3dadd( 79.8099, -12.4222, 2.12602, 0.74 ) }
    dend_5 { pt3dadd( 80.2534, -12.952, 1.92363, 0.66 ) }
    dend_5 { pt3dadd( 80.6732, -13.4447, 1.71829, 0.66 ) }
    dend_5 { pt3dadd( 81.229, -14.0886, 1.42661, 0.96 ) }
    dend_5 { pt3dadd( 81.8811, -14.8636, 1.0451, 1.4 ) }
    dend_5 { pt3dadd( 82.2095, -15.287, 0.818344, 1.62 ) }
    dend_5 { pt3dadd( 82.5433, -15.7529, 0.550769, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 57.7616, 9.50459, 2.50181, 0.88 ) }
    dend_4 { pt3dadd( 58.6936, 10.4169, 2.67154, 0.88 ) }
    dend_4 { pt3dadd( 59.5393, 11.1494, 2.85437, 0.88 ) }
    dend_4 { pt3dadd( 60.5019, 11.8512, 3.07292, 0.88 ) }
    dend_4 { pt3dadd( 61.5557, 12.4994, 3.3055, 0.88 ) }
    dend_4 { pt3dadd( 62.8128, 13.1701, 3.59183, 0.74 ) }
    dend_4 { pt3dadd( 63.6111, 13.569, 3.78385, 0.74 ) }
    dend_4 { pt3dadd( 64.7473, 14.0538, 4.08909, 0.88 ) }
    dend_4 { pt3dadd( 65.7732, 14.4238, 4.36865, 0.88 ) }
    dend_4 { pt3dadd( 66.6246, 14.6937, 4.58788, 0.88 ) }
    dend_4 { pt3dadd( 67.4523, 14.9452, 4.79059, 0.66 ) }
    dend_4 { pt3dadd( 68.0323, 15.1467, 4.91968, 0.66 ) }
    dend_4 { pt3dadd( 68.8062, 15.5124, 5.04657, 0.88 ) }
    dend_4 { pt3dadd( 69.2662, 15.7976, 5.0984, 0.88 ) }
    dend_4 { pt3dadd( 69.7044, 16.1164, 5.13142, 0.88 ) }
    dend_4 { pt3dadd( 70.1489, 16.4535, 5.15623, 0.88 ) }
    dend_4 { pt3dadd( 70.9775, 17.0667, 5.20315, 0.59 ) }
    dend_4 { pt3dadd( 71.567, 17.4818, 5.27497, 0.59 ) }
    dend_4 { pt3dadd( 72.0174, 17.8127, 5.36481, 0.81 ) }
    dend_4 { pt3dadd( 72.6057, 18.2882, 5.51973, 0.81 ) }
    dend_4 { pt3dadd( 73.0528, 18.6987, 5.66111, 0.81 ) }
    dend_4 { pt3dadd( 73.5557, 19.1981, 5.83614, 0.66 ) }
    dend_4 { pt3dadd( 74.2758, 19.9378, 6.10162, 0.59 ) }
    dend_4 { pt3dadd( 75.0324, 20.8573, 6.38979, 0.59 ) }
    dend_4 { pt3dadd( 75.4361, 21.4266, 6.53205, 0.59 ) }
    dend_4 { pt3dadd( 75.8927, 22.1433, 6.66264, 0.44 ) }
    dend_4 { pt3dadd( 76.1791, 22.5996, 6.71525, 0.44 ) }
    dend_4 { pt3dadd( 76.4885, 23.0812, 6.74115, 0.44 ) }
    dend_4 { pt3dadd( 77.2628, 24.2413, 6.75393, 0.44 ) }
    dend_4 { pt3dadd( 77.8791, 25.1131, 6.75541, 0.66 ) }
    dend_4 { pt3dadd( 78.395, 25.8249, 6.75295, 0.66 ) }
    dend_4 { pt3dadd( 79.0335, 26.6958, 6.74309, 0.74 ) }
    dend_4 { pt3dadd( 79.5319, 27.375, 6.73118, 0.96 ) }
    dend_4 { pt3dadd( 79.9163, 27.8813, 6.72025, 0.96 ) }
    dend_4 { pt3dadd( 80.4883, 28.555, 6.70341, 0.66 ) }
    dend_4 { pt3dadd( 81.0508, 29.1845, 6.68739, 0.66 ) }
    dend_4 { pt3dadd( 81.9449, 30.1644, 6.66114, 0.59 ) }
    dend_4 { pt3dadd( 82.7711, 31.0958, 6.65867, 0.59 ) }
    dend_4 { pt3dadd( 83.3042, 31.7103, 6.67051, 0.81 ) }
    dend_4 { pt3dadd( 83.7076, 32.1904, 6.68792, 0.81 ) }
    dend_4 { pt3dadd( 84.399, 32.9799, 6.72751, 0.52 ) }
    dend_4 { pt3dadd( 84.9371, 33.5394, 6.76206, 0.52 ) }
    dend_4 { pt3dadd( 85.6546, 34.2357, 6.81969, 0.52 ) }
    dend_4 { pt3dadd( 86.2596, 34.8074, 6.87078, 0.52 ) }
    dend_4 { pt3dadd( 86.8402, 35.3437, 6.91635, 0.37 ) }
    dend_4 { pt3dadd( 87.877, 36.2768, 6.98927, 0.37 ) }
    dend_4 { pt3dadd( 88.5601, 36.8794, 7.02754, 0.59 ) }
    dend_4 { pt3dadd( 88.9976, 37.2392, 7.04194, 0.59 ) }
    dend_4 { pt3dadd( 89.9284, 37.9741, 7.04355, 0.74 ) }
    dend_4 { pt3dadd( 90.4139, 38.3618, 7.04359, 0.74 ) }
    dend_4 { pt3dadd( 90.826, 38.7059, 7.0485, 0.74 ) }
    dend_4 { pt3dadd( 91.4102, 39.2583, 7.07119, 0.74 ) }
    dend_4 { pt3dadd( 91.8016, 39.6502, 7.05441, 0.44 ) }
    dend_4 { pt3dadd( 92.3635, 40.1913, 6.95337, 0.44 ) }
    dend_4 { pt3dadd( 92.8493, 40.6175, 6.81921, 0.81 ) }
    dend_4 { pt3dadd( 93.6685, 41.2792, 6.54282, 0.81 ) }
    dend_4 { pt3dadd( 94.2724, 41.7226, 6.29938, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 95.3281, 42.4533, 5.84203, 0.52 ) }
    dend_4 { pt3dadd( 96.1328, 43.015, 5.44475, 0.44 ) }
    dend_4 { pt3dadd( 96.6651, 43.3699, 5.14387, 0.44 ) }
    dend_4 { pt3dadd( 97.1306, 43.6741, 4.85038, 0.44 ) }
    dend_4 { pt3dadd( 97.4947, 43.9012, 4.59301, 0.44 ) }
    dend_4 { pt3dadd( 98.1046, 44.2541, 4.1775, 0.74 ) }
    dend_4 { pt3dadd( 98.6348, 44.5621, 3.94154, 0.59 ) }
    dend_4 { pt3dadd( 98.9915, 44.8068, 3.80992, 0.59 ) }
    dend_4 { pt3dadd( 105.533, 51.4419, 5.36609, 0.59 ) }
    dend_4 { pt3dadd( 112.302, 57.8892, 6.81909, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -84.6949, -250.749, 3.81232, 0.52 ) }
    dend_39 { pt3dadd( -85.3917, -252.269, 3.77898, 0.52 ) }
    dend_39 { pt3dadd( -85.6823, -252.883, 3.77363, 0.29 ) }
    dend_39 { pt3dadd( -86.0849, -253.685, 3.76424, 0.44 ) }
    dend_39 { pt3dadd( -86.4654, -254.43, 3.75138, 0.44 ) }
    dend_39 { pt3dadd( -86.7683, -255.007, 3.73923, 0.29 ) }
    dend_39 { pt3dadd( -87.2317, -255.845, 3.71062, 0.29 ) }
    dend_39 { pt3dadd( -87.7089, -256.64, 3.67582, 0.81 ) }
    dend_39 { pt3dadd( -88.074, -257.249, 3.62476, 1.18 ) }
    dend_39 { pt3dadd( -88.2672, -257.581, 3.58812, 1.4 ) }
    dend_39 { pt3dadd( -88.5726, -258.135, 3.52075, 1.4 ) }
    dend_39 { pt3dadd( -88.8423, -258.668, 3.45225, 1.11 ) }
    dend_39 { pt3dadd( -89.3799, -259.824, 3.30626, 0.52 ) }
    dend_39 { pt3dadd( -89.7432, -260.734, 3.20067, 0.44 ) }
    dend_39 { pt3dadd( -89.997, -261.467, 3.12315, 0.74 ) }
    dend_39 { pt3dadd( -90.2865, -262.351, 3.03948, 0.81 ) }
    dend_39 { pt3dadd( -90.4932, -263.018, 2.9785, 0.81 ) }
    dend_39 { pt3dadd( -90.6939, -263.725, 2.91281, 0.74 ) }
    dend_39 { pt3dadd( -90.9339, -264.665, 2.86669, 0.22 ) }
    dend_39 { pt3dadd( -91.0392, -265.099, 2.85148, 0.22 ) }
    dend_39 { pt3dadd( -91.2058, -265.865, 2.81975, 0.22 ) }
    dend_39 { pt3dadd( -91.3214, -266.53, 2.8091, 0.66 ) }
    dend_39 { pt3dadd( -91.4171, -267.227, 2.82518, 0.81 ) }
    dend_39 { pt3dadd( -91.5329, -268.349, 2.88951, 0.66 ) }
    dend_39 { pt3dadd( -91.5945, -269.375, 2.98898, 0.22 ) }
    dend_39 { pt3dadd( -91.5996, -270.293, 3.10815, 0.22 ) }
    dend_39 { pt3dadd( -91.5646, -270.964, 3.21566, 0.22 ) }
    dend_39 { pt3dadd( -91.5147, -271.616, 3.35444, 0.96 ) }
    dend_39 { pt3dadd( -91.4936, -271.951, 3.43457, 1.18 ) }
    dend_39 { pt3dadd( -91.468, -272.449, 3.55325, 1.18 ) }
    dend_39 { pt3dadd( -91.4462, -272.858, 3.6769, 1.18 ) }
    dend_39 { pt3dadd( -91.4364, -273.639, 3.90289, 0.74 ) }
    dend_39 { pt3dadd( -91.4815, -274.817, 4.21326, 0.22 ) }
    dend_39 { pt3dadd( -91.5127, -275.204, 4.31003, 0.22 ) }
    dend_39 { pt3dadd( -91.5604, -275.655, 4.42165, 0.44 ) }
    dend_39 { pt3dadd( -91.6068, -276.044, 4.50862, 0.44 ) }
    dend_39 { pt3dadd( -91.7199, -277.065, 4.70904, 0.22 ) }
    dend_39 { pt3dadd( -91.7841, -277.705, 4.81139, 0.96 ) }
    dend_39 { pt3dadd( -91.8168, -278.196, 4.86673, 1.18 ) }
    dend_39 { pt3dadd( -91.8387, -278.667, 4.91255, 1.25 ) }
    dend_39 { pt3dadd( -91.8782, -279.562, 4.98909, 0.96 ) }
    dend_39 { pt3dadd( -91.9729, -280.846, 5.08675, 0.29 ) }
    dend_39 { pt3dadd( -92.0747, -281.854, 5.15228, 0.22 ) }
    dend_39 { pt3dadd( -92.2285, -282.991, 5.20724, 0.22 ) }
    dend_39 { pt3dadd( -92.331, -283.575, 5.23063, 0.81 ) }
    dend_39 { pt3dadd( -92.4416, -284.049, 5.2449, 0.96 ) }
    dend_39 { pt3dadd( -92.9289, -285.692, 5.29457, 0.22 ) }
    dend_39 { pt3dadd( -93.1154, -286.204, 5.31039, 0.22 ) }
    dend_39 { pt3dadd( -93.4398, -287.017, 5.3437, 0.59 ) }
    dend_39 { pt3dadd( -93.6915, -287.612, 5.3753, 0.59 ) }
    dend_39 { pt3dadd( -94.0583, -288.506, 5.42648, 0.52 ) }
    dend_39 { pt3dadd( -94.3393, -289.242, 5.47437, 0.52 ) }
    dend_39 { pt3dadd( -94.6892, -290.245, 5.56002, 0.52 ) }
    dend_39 { pt3dadd( -94.8216, -290.64, 5.59936, 0.96 ) }
    dend_39 { pt3dadd( -95.037, -291.315, 5.6719, 0.96 ) }
    dend_39 { pt3dadd( -95.2684, -292.077, 5.75818, 0.59 ) }
    dend_39 { pt3dadd( -95.6552, -293.365, 5.94547, 0.22 ) }
    dend_39 { pt3dadd( -96.0426, -294.697, 6.14651, 0.22 ) }
    dend_39 { pt3dadd( -96.2218, -295.321, 6.24585, 0.22 ) }
    dend_39 { pt3dadd( -96.3899, -295.873, 6.33942, 0.96 ) }
    dend_39 { pt3dadd( -96.5068, -296.251, 6.4092, 1.18 ) }
    dend_39 { pt3dadd( -96.7499, -297.003, 6.56791, 0.52 ) }
    dend_39 { pt3dadd( -97.6203, -306.261, 6.06006, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -84.6949, -250.749, 3.81232, 0.29 ) }
    dend_36 { pt3dadd( -86.9657, -249.989, 4.81544, 0.29 ) }
    dend_36 { pt3dadd( -88.1961, -249.91, 5.30156, 0.37 ) }
    dend_36 { pt3dadd( -88.7635, -250.023, 5.50215, 0.37 ) }
    dend_36 { pt3dadd( -90.0605, -250.487, 5.98479, 0.37 ) }
    dend_36 { pt3dadd( -91.3357, -250.998, 6.30967, 0.52 ) }
    dend_36 { pt3dadd( -92.46, -251.464, 6.52746, 0.59 ) }
    dend_36 { pt3dadd( -94.002, -252.25, 6.70088, 0.59 ) }
    dend_36 { pt3dadd( -95.3828, -252.991, 6.78876, 0.37 ) }
    dend_36 { pt3dadd( -96.6643, -253.689, 6.82282, 0.37 ) }
    dend_36 { pt3dadd( -98.9543, -254.942, 6.79198, 0.37 ) }
    dend_36 { pt3dadd( -100.011, -255.462, 6.75726, 0.37 ) }
    dend_36 { pt3dadd( -100.989, -255.901, 6.71911, 0.29 ) }
    dend_36 { pt3dadd( -101.768, -256.22, 6.69733, 0.29 ) }
    dend_36 { pt3dadd( -102.644, -256.572, 6.69524, 0.81 ) }
    dend_36 { pt3dadd( -103.343, -256.883, 6.71939, 0.81 ) }
    dend_36 { pt3dadd( -104.285, -257.423, 6.87108, 0.81 ) }
    dend_36 { pt3dadd( -105.867, -258.49, 7.1781, 0.29 ) }
    dend_36 { pt3dadd( -106.616, -259.068, 7.34677, 0.66 ) }
    dend_36 { pt3dadd( -107.167, -259.54, 7.50064, 0.66 ) }
    dend_36 { pt3dadd( -107.676, -260.013, 7.66348, 0.66 ) }
    dend_36 { pt3dadd( -109.494, -261.824, 8.30387, 0.29 ) }
    dend_36 { pt3dadd( -110.303, -262.667, 8.58196, 0.44 ) }
    dend_36 { pt3dadd( -111.002, -263.393, 8.81981, 0.29 ) }
    dend_36 { pt3dadd( -111.842, -264.228, 9.08362, 0.74 ) }
    dend_36 { pt3dadd( -112.466, -264.79, 9.23773, 0.74 ) }
    dend_36 { pt3dadd( -113.503, -265.592, 9.43262, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -115.353, -266.8, 9.67777, 0.29 ) }
    dend_36 { pt3dadd( -116.46, -267.444, 9.79082, 0.52 ) }
    dend_36 { pt3dadd( -117.214, -267.838, 9.82629, 0.52 ) }
    dend_36 { pt3dadd( -118.814, -268.592, 9.79214, 0.29 ) }
    dend_36 { pt3dadd( -120.008, -269.092, 9.73696, 0.29 ) }
    dend_36 { pt3dadd( -120.736, -269.349, 9.68925, 0.59 ) }
    dend_36 { pt3dadd( -121.601, -269.611, 9.60235, 0.59 ) }
    dend_36 { pt3dadd( -123.168, -270.058, 9.40859, 0.22 ) }
    dend_36 { pt3dadd( -124.045, -270.297, 9.31616, 0.29 ) }
    dend_36 { pt3dadd( -125.359, -270.668, 9.2216, 0.29 ) }
    dend_36 { pt3dadd( -125.979, -270.854, 9.18132, 0.29 ) }
    dend_36 { pt3dadd( -127.564, -271.398, 9.08665, 0.37 ) }
    dend_36 { pt3dadd( -128.748, -271.943, 9.11627, 0.37 ) }
    dend_36 { pt3dadd( -129.945, -272.644, 9.27301, 0.52 ) }
    dend_36 { pt3dadd( -131.308, -273.621, 9.5433, 1.55 ) }
    dend_36 { pt3dadd( -132.12, -274.306, 9.73546, 1.92 ) }
    dend_36 { pt3dadd( -132.889, -275.026, 9.95199, 1.92 ) }
    dend_36 { pt3dadd( -134.646, -276.832, 10.5634, 0.29 ) }
    dend_36 { pt3dadd( -135.791, -278.11, 10.9886, 0.29 ) }
    dend_36 { pt3dadd( -136.706, -279.217, 11.3619, 0.29 ) }
    dend_36 { pt3dadd( -137.429, -280.116, 11.6802, 0.74 ) }
    dend_36 { pt3dadd( -137.788, -280.566, 11.8403, 0.96 ) }
    dend_36 { pt3dadd( -138.108, -280.949, 11.9753, 1.11 ) }
    dend_36 { pt3dadd( -139.038, -282.081, 12.3575, 0.52 ) }
    dend_36 { pt3dadd( -139.613, -282.844, 12.6468, 0.29 ) }
    dend_36 { pt3dadd( -140.444, -283.952, 13.1204, 0.22 ) }
    dend_36 { pt3dadd( -141.012, -284.672, 13.4575, 0.44 ) }
    dend_36 { pt3dadd( -141.498, -285.258, 13.7516, 0.44 ) }
    dend_36 { pt3dadd( -142.841, -286.866, 14.5892, 0.22 ) }
    dend_36 { pt3dadd( -143.652, -287.823, 15.1136, 0.22 ) }
    dend_36 { pt3dadd( -144.435, -288.707, 15.6137, 1.25 ) }
    dend_36 { pt3dadd( -145.151, -289.506, 16.0934, 1.55 ) }
    dend_36 { pt3dadd( -145.496, -289.869, 16.3187, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 82.5433, -15.7529, 0.550769, 0.74 ) }
    dend_7 { pt3dadd( 84.1047, -16.6336, 1.779, 0.74 ) }
    dend_7 { pt3dadd( 84.5588, -16.9058, 2.10307, 0.74 ) }
    dend_7 { pt3dadd( 85.3377, -17.4129, 2.59051, 0.59 ) }
    dend_7 { pt3dadd( 86.2552, -18.066, 3.06898, 0.59 ) }
    dend_7 { pt3dadd( 87.1093, -18.7231, 3.43953, 0.59 ) }
    dend_7 { pt3dadd( 87.5368, -19.0628, 3.60533, 0.59 ) }
    dend_7 { pt3dadd( 88.3801, -19.7924, 3.84397, 0.59 ) }
    dend_7 { pt3dadd( 89.0999, -20.4389, 4.00422, 0.81 ) }
    dend_7 { pt3dadd( 90.0555, -21.289, 4.21305, 0.81 ) }
    dend_7 { pt3dadd( 90.8451, -21.9616, 4.3852, 0.37 ) }
    dend_7 { pt3dadd( 91.6654, -22.6141, 4.57557, 0.37 ) }
    dend_7 { pt3dadd( 92.6243, -23.3677, 4.81117, 0.37 ) }
    dend_7 { pt3dadd( 93.5998, -24.1433, 5.08723, 0.37 ) }
    dend_7 { pt3dadd( 94.5325, -24.8562, 5.3876, 0.37 ) }
    dend_7 { pt3dadd( 95.9326, -25.8827, 5.89684, 0.22 ) }
    dend_7 { pt3dadd( 97.4251, -26.9478, 6.47578, 0.22 ) }
    dend_7 { pt3dadd( 105.33, -34.5694, 8.57042, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 82.5433, -15.7529, 0.550769, 0.37 ) }
    dend_6 { pt3dadd( 82.5289, -16.9274, 0.531871, 0.37 ) }
    dend_6 { pt3dadd( 82.5767, -17.6586, 0.55221, 0.37 ) }
    dend_6 { pt3dadd( 82.6627, -18.3345, 0.584396, 0.37 ) }
    dend_6 { pt3dadd( 82.8026, -19.0138, 0.669267, 0.37 ) }
    dend_6 { pt3dadd( 82.9522, -19.5946, 0.756115, 0.37 ) }
    dend_6 { pt3dadd( 83.1573, -20.2679, 0.873755, 0.29 ) }
    dend_6 { pt3dadd( 83.5201, -21.2211, 1.0137, 0.22 ) }
    dend_6 { pt3dadd( 83.9333, -22.2463, 1.11599, 0.22 ) }
    dend_6 { pt3dadd( 84.4818, -23.5412, 1.1821, 0.22 ) }
    dend_6 { pt3dadd( 84.6869, -24.0283, 1.18245, 1.18 ) }
    dend_6 { pt3dadd( 84.8326, -24.442, 1.14611, 1.4 ) }
    dend_6 { pt3dadd( 85.0989, -25.7654, 0.900247, 1.4 ) }
    dend_6 { pt3dadd( 85.1325, -26.8765, 0.599691, 0.44 ) }
    dend_6 { pt3dadd( 85.0909, -27.2578, 0.490328, 0.44 ) }
    dend_6 { pt3dadd( 84.9651, -27.8391, 0.320937, 0.29 ) }
    dend_6 { pt3dadd( 84.6919, -28.7905, 0.098163, 0.29 ) }
    dend_6 { pt3dadd( 84.2939, -29.9799, -0.137997, 0.22 ) }
    dend_6 { pt3dadd( 83.9493, -30.8617, -0.222622, 0.22 ) }
    dend_6 { pt3dadd( 83.7028, -31.3847, -0.254064, 1.03 ) }
    dend_6 { pt3dadd( 83.5715, -31.6462, -0.257487, 1.33 ) }
    dend_6 { pt3dadd( 83.3814, -32.0049, -0.239565, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -145.496, -289.869, 16.3187, 0.29 ) }
    dend_38 { pt3dadd( -146.458, -288.961, 16.6938, 0.29 ) }
    dend_38 { pt3dadd( -146.673, -288.759, 16.7704, 0.52 ) }
    dend_38 { pt3dadd( -147.007, -288.442, 16.8789, 0.59 ) }
    dend_38 { pt3dadd( -148.932, -286.628, 17.3738, 0.22 ) }
    dend_38 { pt3dadd( -149.477, -286.124, 17.4931, 0.22 ) }
    dend_38 { pt3dadd( -150.232, -285.441, 17.637, 0.66 ) }
    dend_38 { pt3dadd( -150.641, -285.07, 17.6848, 0.66 ) }
    dend_38 { pt3dadd( -152.385, -283.552, 17.8265, 0.22 ) }
    dend_38 { pt3dadd( -153.11, -282.951, 17.8641, 0.22 ) }
    dend_38 { pt3dadd( -153.777, -282.445, 17.8893, 0.52 ) }
    dend_38 { pt3dadd( -154.252, -282.11, 17.9063, 0.66 ) }
    dend_38 { pt3dadd( -155.557, -281.258, 17.9546, 0.22 ) }
    dend_38 { pt3dadd( -158.145, -279.603, 18.0545, 0.22 ) }
    dend_38 { pt3dadd( -159.815, -278.586, 18.1254, 0.22 ) }
    dend_38 { pt3dadd( -161.357, -277.656, 18.2269, 1.18 ) }
    dend_38 { pt3dadd( -161.789, -277.4, 18.2553, 1.4 ) }
    dend_38 { pt3dadd( -162.454, -277.018, 18.3031, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -145.496, -289.869, 16.3187, 0.22 ) }
    dend_37 { pt3dadd( -146.578, -291.452, 16.5619, 0.22 ) }
    dend_37 { pt3dadd( -147.432, -292.756, 16.8357, 0.22 ) }
    dend_37 { pt3dadd( -147.792, -293.343, 16.9684, 0.44 ) }
    dend_37 { pt3dadd( -147.947, -293.602, 17.0283, 0.44 ) }
    dend_37 { pt3dadd( -149.361, -296.077, 17.5968, 0.22 ) }
    dend_37 { pt3dadd( -150.023, -297.235, 17.8628, 0.44 ) }
    dend_37 { pt3dadd( -150.581, -298.208, 18.1, 0.22 ) }
    dend_37 { pt3dadd( -150.926, -298.867, 18.2692, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -151.214, -299.437, 18.4238, 0.66 ) }
    dend_37 { pt3dadd( -151.421, -299.877, 18.5498, 0.44 ) }
    dend_37 { pt3dadd( -155.306, -310.086, 21.6312, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 5
    dend_50 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 7
    dend_1 nseg = 5
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_41 nseg = 7
    dend_34 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 11
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 5
    dend_35 nseg = 7
    dend_32 nseg = 13
    dend_31 nseg = 5
    dend_4 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_ChC_55f3c5c127_0_0


