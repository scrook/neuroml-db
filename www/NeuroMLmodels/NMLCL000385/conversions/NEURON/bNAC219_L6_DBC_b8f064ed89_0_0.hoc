// Cell: bNAC219_L6_DBC_b8f064ed89_0_0
/*
{
  "id" : "bNAC219_L6_DBC_b8f064ed89_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.27387, 10.9227, 2.76", "-6.06293, 9.23129, 9.34376, 2.16", "-9.18818, 11.5287, 5.60423, 2.52", "-11.4562, 13.0295, 3.16164, 2.52", "-13.1057, 14.0255, 1.59056, 2.52", "-13.9732, 14.5013, 0.827453, 2.52", "-15.0201, 15.0074, 0.026779, 2.28", "-17.8098, 16.2703, -1.74421, 1.92", "-19.0037, 16.7465, -2.30394, 1.92", "-21.5881, 17.6409, -3.37255, 1.8", "-23.1392, 18.1575, -3.92747, 1.8", "-26.4929, 19.1388, -4.9673, 1.56", "-29.0993, 19.8159, -5.66714, 1.92", "-31.3472, 20.2977, -6.18216, 1.92", "-32.9529, 20.4889, -6.47204, 1.92", "-35.0049, 20.5178, -6.75451, 1.92", "-38.9303, 20.3148, -7.27446, 1.8", "-39.5956, 20.2283, -7.37415, 1.8", "-40.9879, 19.9526, -7.58322, 1.8", "-44.2891, 19.1487, -8.15615, 1.32", "-45.4569, 18.8423, -8.41793, 1.32", "-47.7091, 18.2417, -9.13046, 1.92", "-48.5869, 18.1812, -9.64352, 1.92", "-49.2182, 18.6723, -10.6302, 1.92", "-49.5046, 19.0201, -11.254, 1.92", "-49.8081, 19.4403, -12.0104, 1.92", "-50.2225, 19.6957, -12.6863, 1.92", "-50.8912, 19.8051, -13.5078, 1.92", "-52.8663, 19.7807, -15.7156, 1.44", "-54.3537, 19.6919, -17.2707, 1.44", "-55.1084, 19.6154, -18.011, 1.44", "-57.0523, 19.3118, -19.8323, 1.44", "-58.3335, 19.0383, -20.997, 1.8", "-59.3354, 18.7568, -21.8987, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 12.2639, 1.77275, 1.32", "-2.83356, 14.5862, 0.838929, 1.32", "-2.6446, 17.042, -0.0310362, 1.32", "-2.54824, 18.3758, -0.453827, 1.32", "-2.45012, 19.8133, -0.852999, 1.32", "-2.39165, 20.7103, -1.06847, 1.32", "-2.30868, 21.7362, -1.27877, 1.32", "-2.19767, 22.9901, -1.40891, 1.32", "-2.11883, 23.7759, -1.37771, 1.32", "-1.95878, 25.2392, -1.25816, 1.08", "-1.76947, 26.8013, -1.09463, 1.56", "-1.56698, 28.4599, -0.879365, 1.56", "-1.38223, 29.9056, -0.654885, 1.56", "-0.87366, 33.2189, -0.0408348, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 9.81289, 11.3727, 1.8", "-6.58716, 10.9197, 11.8015, 1.8", "-7.3951, 12.0943, 12.2877, 1.8", "-8.9758, 14.2186, 13.342, 1.56", "-9.42948, 14.8283, 13.6446, 1.56", "-10.4658, 16.2211, 14.3359, 1.44", "-11.5464, 17.6734, 15.0567, 0.96", "-12.0054, 18.2867, 15.3927, 0.96", "-13.9045, 20.6799, 16.8263, 1.92", "-19.2167, 27.891, 20.5896, 1.92", "-26.1495, 33.3917, 24.8801, 1.92", "-34.2112, 38.3875, 27.5922, 1.92", "-41.5466, 44.5017, 29.7763, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -10.8496, 11.5527, 2.64", "1.6148, -12.9018, 11.3952, 2.64", "1.82906, -15.2715, 11.2134, 2.64", "1.98708, -17.0192, 11.0792, 2.64", "2.13442, -18.6488, 10.9541, 2.64", "2.43423, -21.9647, 10.6997, 2.4", "2.73629, -25.3055, 10.4432, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -11.6001, 13.0827, 2.16", "4.99623, -12.2147, 12.8654, 2.16", "5.57089, -14.1689, 12.312, 2.16", "6.00883, -15.5672, 11.9892, 2.16", "6.76272, -17.9743, 11.4336, 2.16", "7.31701, -19.7442, 11.025, 2.16", "7.71892, -21.0275, 10.7288, 2.16", "8.78145, -24.3698, 9.94534, 2.52", "9.53233, -26.9663, 9.33937, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 11.9694, 11.8327, 2.52", "-0.142174, 15.2668, 11.8327, 2.52", "0.319266, 18.514, 11.8327, 2.52", "0.733633, 21.4299, 11.8327, 2.52", "0.943147, 22.9043, 11.8327, 2.52", "1.19844, 24.7008, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.28978", "6.433, -28.5011, -0.0046052, 1.28978", "9.697, -43.1416, -0.0046052, 1.28978" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-59.3354, 18.7568, -21.8987, 1.2", "-60.6626, 21.0178, -21.0304, 1.2", "-62.1449, 22.6994, -20.2723, 1.2", "-63.24, 23.4366, -19.8584, 1.2", "-63.9627, 23.8398, -19.6117, 1.56", "-64.421, 24.0329, -19.546, 1.56", "-65.2362, 24.3095, -19.5123, 1.56", "-67.5124, 24.8347, -19.522, 0.96", "-71.0735, 25.4588, -19.7435, 1.56", "-71.4276, 25.5134, -19.7737, 1.56", "-75.8849, 26.11, -20.2849, 1.08", "-77.2591, 26.2556, -20.5042, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-59.3354, 18.7568, -21.8987, 1.08", "-60.9208, 18.5118, -22.9231, 1.08", "-62.579, 18.0703, -24.1078, 1.56", "-65.9621, 16.7258, -27.1205, 0.84", "-67.1963, 16.0538, -28.531, 0.84", "-67.583, 15.7861, -29.0604, 0.84", "-68.5397, 15.0059, -30.5549, 0.84", "-69.3564, 14.0578, -32.2857, 0.84", "-70.1986, 12.6716, -34.6201, 0.84", "-70.7915, 11.2681, -36.6401, 0.84", "-71.1375, 10.3588, -37.851, 0.84", "-71.5194, 9.45549, -39.0295, 0.84", "-71.871, 8.7582, -39.8936, 0.84", "-72.5651, 7.65692, -41.0596, 0.84", "-73.3103, 6.71103, -41.7873, 0.84", "-73.7983, 6.20846, -42.0818, 0.84", "-74.8786, 5.27885, -42.5357, 0.84", "-75.6717, 4.69084, -42.767, 0.84", "-76.9325, 3.86082, -43.02, 0.84", "-78.4925, 2.79719, -43.259, 0.84", "-80.1815, 1.50892, -43.4743, 0.84", "-81.2444, 0.528279, -43.5816, 0.84", "-82.4741, -0.820305, -43.7144, 0.84", "-84.3952, -3.3019, -44.0358, 0.84", "-85.895, -5.61845, -44.3729, 1.32", "-86.95, -7.53041, -44.6443, 0.6", "-87.9907, -9.79921, -44.9479, 1.2", "-88.712, -11.7164, -45.2268, 0.72", "-89.2389, -13.5509, -45.5356, 0.72", "-89.4721, -14.7514, -45.79, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-0.87366, 33.2189, -0.0408348, 1.32", "-0.11258, 34.7138, 0.733007, 1.32", "1.6094, 38.3797, 2.36534, 0.96", "2.30326, 40.0855, 3.01551, 0.96", "2.87062, 41.8694, 3.57981, 1.2", "3.10836, 42.8885, 3.8394, 1.2", "3.26699, 43.7877, 4.03668, 1.2", "3.30306, 44.7962, 4.16595, 1.44", "3.06778, 46.1803, 4.16795, 1.08", "2.52081, 47.9389, 4.16952, 1.08", "1.75868, 49.8523, 4.17088, 1.56", "1.51699, 50.374, 4.17107, 1.56", "0.771854, 51.7865, 4.17072, 1.56", "-0.315571, 53.6033, 4.16796, 1.56", "-0.413173, 53.7435, 4.16733, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-41.5466, 44.5017, 29.7763, 1.2", "-48.098, 50.9047, 33.1898, 1.2", "-53.1943, 57.3789, 38.4419, 1.2", "-59.9434, 63.6701, 41.6968, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-41.5466, 44.5017, 29.7763, 1.44", "-48.1682, 50.8702, 33.1251, 1.2", "-53.5684, 58.0867, 36.7491, 1.2", "-59.679, 65.0169, 39.8223, 1.2", "-66.6637, 71.3601, 42.3976, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.73629, -25.3055, 10.4432, 1.2", "2.39845, -29.0301, 9.7317, 1.2", "2.24586, -31.2591, 9.30257, 1.2", "2.12959, -33.7681, 8.82883, 1.2", "2.06048, -35.9849, 8.4222, 1.2", "2.04954, -37.5645, 8.14594, 1.2", "2.05062, -38.7468, 7.93872, 1.2", "2.10853, -39.6406, 7.76487, 1.2", "2.22939, -40.7979, 7.5495, 1.2", "2.3412, -41.4783, 7.45486, 1.2", "2.6105, -42.7681, 7.31394, 1.2", "2.79502, -43.7122, 7.2271, 1.2", "2.92088, -44.7256, 7.15748, 1.2", "2.92515, -45.5406, 7.1158, 1.2", "2.77278, -47.1555, 7.06028, 1.2", "2.66874, -47.8338, 7.04474, 1.2", "2.3959, -49.2823, 7.01702, 1.2", "1.92468, -51.7408, 6.98384, 1.68", "1.32821, -54.7322, 6.94226, 1.08", "0.814417, -57.3515, 6.9026, 0.72", "0.583511, -58.6898, 6.88127, 1.92", "0.0978234, -62.1848, 6.82613, 0.96", "-0.160579, -64.7569, 6.78839, 0.84", "-0.228726, -66.2286, 6.76728, 1.44", "-0.204296, -68.1664, 6.74258, 1.08", "-0.10495, -69.9889, 6.72605, 1.08", "0.126571, -72.9189, 6.711, 0.72", "0.236845, -74.1701, 6.71222, 1.44", "0.364828, -75.9429, 6.71545, 1.44", "0.488299, -78.3248, 6.72129, 0.72", "0.516249, -79.2572, 6.72395, 1.2", "0.538475, -80.9684, 6.72907, 1.2", "0.565017, -82.2937, 6.73282, 1.56", "0.572767, -84.1212, 6.6842, 1.32", "0.534968, -86.1839, 6.58466, 0.84", "0.536001, -88.5998, 6.42767, 1.56", "0.562112, -90.0275, 6.32391, 1.56", "0.636752, -92.5731, 6.12682, 0.96", "0.721386, -94.9196, 5.93673, 0.96", "0.771991, -96.7294, 5.78843, 1.32", "0.750984, -98.9495, 5.61697, 1.32", "0.589889, -102.03, 5.41315, 0.72", "0.493154, -103.07, 5.35483, 1.56", "0.343492, -104.104, 5.29744, 1.56", "-0.020923, -106.107, 5.19305, 0.96", "-0.458889, -107.834, 5.07539, 1.68", "-1.25638, -110.537, 4.79381, 1.08", "-1.91727, -112.726, 4.50482, 0.96", "-2.68886, -115.523, 4.09651, 1.44", "-3.06789, -117.036, 3.86198, 1.08", "-3.62126, -119.441, 3.44798, 0.84", "-4.07224, -121.602, 3.02956, 1.44", "-4.28331, -122.672, 2.80968, 1.44", "-4.64863, -124.784, 2.38451, 0.72", "-4.86995, -126.328, 2.06891, 0.72", "-5.2281, -129.108, 1.48881, 1.32", "-5.47808, -131.165, 1.02987, 0.96", "-5.62833, -132.046, 0.834027, 0.96", "-5.81561, -133.028, 0.585392, 0.96", "-6.12279, -134.286, 0.22311, 0.96", "-6.32644, -135.019, 0.0129333, 0.96", "-6.63828, -136.011, -0.305416, 0.96", "-6.98174, -137.051, -0.651919, 0.96", "-8.02291, -140.142, -1.68061, 1.44", "-9.2154, -143.702, -2.8226, 0.48", "-9.76308, -145.427, -3.33774, 1.56", "-10.8097, -148.961, -4.32667, 0.84", "-11.0663, -149.923, -4.60042, 0.84", "-11.4628, -151.628, -5.08804, 0.84", "-11.7267, -153.035, -5.45874, 0.84", "-11.9233, -154.42, -5.77327, 0.84", "-12.1041, -155.754, -6.03684, 0.84", "-12.5504, -159.372, -6.64463, 0.6", "-12.8147, -161.37, -7.00046, 1.08", "-13.2113, -164.146, -7.52508, 0.72", "-13.6224, -166.729, -8.02533, 0.6", "-13.852, -167.96, -8.25554, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.73629, -25.3055, 10.4432, 1.92", "2.8956, -28.9625, 10.1749, 1.92", "3.07001, -32.9659, 9.88115, 1.92", "3.26671, -37.481, 9.54985, 2.28", "3.37115, -39.8781, 9.37396, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.53233, -26.9663, 9.33937, 1.32", "12.1665, -28.3375, 9.62058, 1.32", "13.9632, -29.0808, 9.85499, 1.32", "15.4357, -29.6023, 10.0699, 1.32", "17.0267, -30.1201, 10.3197, 1.32", "19.1569, -30.7494, 10.6872, 1.32", "20.2807, -31.0817, 10.898, 1.32", "23.2199, -31.9128, 11.5706, 1.08", "24.1546, -32.1667, 11.8068, 1.08", "24.5416, -32.2751, 11.912, 1.08", "26.611, -32.9044, 12.5156, 1.44", "28.1914, -33.505, 12.9734, 1.08", "28.9827, -33.8856, 13.202, 1.08", "30.859, -34.9125, 13.6969, 1.08", "32.0746, -35.5798, 13.9782, 0.84", "33.289, -36.2516, 14.2202, 0.84", "34.7496, -36.989, 14.4588, 0.84", "35.9358, -37.5621, 14.6397, 0.84", "38.8213, -38.9296, 14.9448, 1.2", "40.4565, -39.6843, 15.0221, 0.84", "41.8595, -40.2583, 15.0037, 0.84", "44.6069, -41.2431, 14.8516, 0.96", "47.3125, -42.1821, 14.6661, 0.72", "50.3285, -43.2156, 14.3935, 1.2", "51.9927, -43.7943, 14.1752, 1.2", "53.7464, -44.3488, 13.86, 0.6", "54.5609, -44.5796, 13.6697, 0.6", "64.2198, -46.9967, 13.1898, 0.6", "73.2362, -50.9734, 12.1027, 0.6", "83.0037, -52.9543, 11.6046, 0.6", "92.9763, -53.5039, 11.142, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.53233, -26.9663, 9.33937, 1.8", "9.64567, -30.0629, 9.41443, 1.8", "9.87169, -33.2242, 9.4804, 1.8", "10.0761, -35.0718, 9.51282, 1.8", "10.1953, -35.9797, 9.50593, 1.8", "10.3814, -37.2924, 9.47451, 1.8", "10.5704, -38.4994, 9.47986, 1.8", "10.7843, -39.4857, 9.50885, 1.8", "11.0807, -41.0807, 9.60879, 1.8", "11.1988, -42.1361, 9.69139, 1.8", "11.3067, -43.6213, 9.8227, 1.8", "11.3958, -46.3689, 9.95725, 1.8", "11.4103, -47.7762, 9.99115, 1.8", "11.4093, -50.6043, 10.0069, 2.16", "11.4412, -52.7841, 9.95541, 1.92", "11.4835, -53.6904, 9.90715, 1.92", "11.745, -58.8553, 9.47965, 2.16", "11.8637, -60.9038, 9.21384, 2.16", "11.9829, -62.291, 9.00036, 2.16", "12.3394, -64.9828, 8.52613, 1.92", "12.6477, -66.6807, 8.19909, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.19844, 24.7008, 11.8327, 1.8", "2.62662, 27.3382, 12.9302, 1.8", "3.92656, 29.7388, 13.9291, 1.8", "5.28695, 32.2511, 14.9744, 1.8", "6.88688, 35.2057, 16.2039, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.933573", "12.961, -57.7822, -0.0046052, 0.933573", "16.225, -72.4228, -0.0046052, 0.933573" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-77.2591, 26.2556, -20.5042, 1.68", "-77.5506, 26.2428, -20.5582, 1.68", "-80.9922, 26.2584, -21.1265, 1.2", "-83.7109, 26.4297, -21.5273, 1.68", "-84.9143, 26.5644, -21.6986, 1.68", "-86.6739, 26.872, -21.9594, 1.2", "-89.757, 27.5392, -22.4618, 1.2", "-91.5043, 28.0399, -22.8604, 0.84", "-93.2246, 28.746, -23.4415, 1.32", "-94.2154, 29.2393, -23.9184, 1.32", "-95.815, 30.1022, -24.8765, 0.84", "-96.4975, 30.4928, -25.3716, 0.84", "-98.8901, 31.9378, -27.3622, 0.84", "-100.701, 33.024, -28.9426, 0.84", "-101.905, 33.7623, -29.9965, 0.84", "-102.837, 34.3288, -30.7427, 0.84", "-104.091, 35.058, -31.6093, 0.84", "-105.353, 35.798, -32.3228, 0.84", "-107.165, 36.944, -33.1192, 0.84", "-108.42, 37.7713, -33.5759, 0.84", "-110.154, 38.954, -34.1453, 0.84", "-112.315, 40.5178, -34.8608, 0.84", "-113.45, 41.3887, -35.2246, 0.84", "-115.756, 43.2074, -35.9998, 1.32", "-117.377, 44.4992, -36.5733, 1.32", "-119.55, 46.344, -37.3586, 0.96", "-121.162, 47.8211, -37.9962, 0.96", "-122.077, 48.643, -38.3569, 0.96", "-123.331, 49.6847, -38.8774, 0.96", "-124.441, 50.4741, -39.325, 0.96", "-127.483, 52.3891, -40.4652, 0.72", "-128.595, 52.9872, -40.8486, 0.72", "-132.96, 54.9589, -42.1849, 1.08", "-134.217, 55.4576, -42.5408, 1.08", "-138.255, 57.0524, -43.4886, 1.08", "-140.344, 57.8878, -43.9737, 1.08", "-142.668, 58.9241, -44.4941, 1.08", "-144.702, 59.9685, -44.9519, 1.08", "-145.422, 60.3981, -45.1434, 1.08", "-148.507, 62.4437, -46.0604, 1.08", "-150.839, 64.1369, -46.8746, 1.08", "-155.236, 67.3553, -48.5471, 1.44", "-156.405, 68.1872, -49.0167, 1.44", "-159.248, 69.9635, -50.1508, 1.2", "-160.403, 70.5442, -50.5221, 1.2", "-162.018, 71.1624, -50.919, 1.2", "-166.639, 72.5915, -51.7125, 1.08", "-169.514, 73.3444, -52.1696, 1.08", "-173.072, 74.2705, -52.6683, 1.08", "-178.148, 75.5485, -53.3233, 0.72", "-181.46, 76.3595, -53.7578, 0.72", "-184.105, 76.9918, -54.1023, 1.08", "-187.344, 77.6756, -54.5177, 0.84", "-189.203, 77.9386, -54.7937, 0.84", "-190.51, 78.0397, -55.0397, 0.84", "-192.065, 78.1, -55.4051, 0.84", "-194.746, 78.0512, -55.9872, 0.84", "-198.582, 77.7338, -56.6354, 0.84", "-204.424, 76.8612, -57.3467, 0.6", "-205.262, 76.7003, -57.4516, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-77.2591, 26.2556, -20.5042, 1.32", "-77.6495, 27.3882, -21.0382, 1.32", "-78.1998, 28.9496, -21.8495, 0.84", "-78.8154, 30.8804, -22.9465, 1.44", "-79.7439, 33.6349, -24.7216, 1.08", "-80.3766, 35.2196, -25.817, 1.08", "-80.6254, 35.7535, -26.2108, 1.08", "-81.6045, 37.5264, -27.7085, 1.56", "-82.7424, 39.1172, -29.2503, 0.96", "-83.6812, 40.1081, -30.326, 0.96", "-84.8484, 40.9099, -31.2234, 0.96", "-85.7869, 41.3313, -31.7287, 0.96", "-86.6838, 41.6116, -32.1069, 0.96", "-87.5705, 41.7767, -32.3835, 0.96", "-88.8363, 41.9828, -32.6888, 0.96", "-91.5237, 42.4636, -33.3025, 0.72", "-93.8772, 42.836, -33.8716, 0.72", "-95.6287, 43.0952, -34.29, 0.72", "-96.9452, 43.2683, -34.615, 0.72", "-98.5768, 43.4736, -35.0359, 0.72", "-101.081, 43.8295, -35.7125, 0.72", "-103.771, 44.2789, -36.4353, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.413173, 53.7435, 4.16733, 1.32", "-0.98325, 54.775, 4.56976, 1.32", "-1.78686, 56.1017, 5.0252, 1.32", "-2.88096, 57.9136, 5.61411, 1.08", "-3.55678, 59.0815, 5.96996, 1.08", "-3.9408, 59.7966, 6.1691, 1.08", "-4.49574, 60.9024, 6.45109, 1.08", "-5.1191, 62.1277, 6.67538, 1.08", "-5.41235, 62.6971, 6.7628, 1.08", "-5.76087, 63.4118, 6.83393, 1.08", "-6.2283, 64.3227, 6.91765, 1.08", "-6.58944, 64.9224, 6.97941, 1.08", "-7.00305, 65.422, 7.03977, 1.08", "-7.52111, 65.8351, 7.09762, 1.08", "-8.31462, 66.3642, 7.16902, 1.08", "-9.31398, 67.0004, 7.27299, 1.08", "-10.1959, 67.584, 7.37822, 1.08", "-11.1394, 68.3095, 7.51046, 1.08", "-11.9852, 69.236, 7.51942, 0.96", "-12.2358, 69.9056, 7.39097, 0.96", "-12.3117, 70.9316, 7.07045, 0.96", "-12.2779, 71.7706, 6.78259, 0.96", "-12.2099, 72.4953, 6.5275, 0.96", "-11.8748, 75.2611, 5.53417, 0.72", "-11.7517, 76.4053, 5.09801, 0.72", "-11.7013, 77.3899, 4.71711, 0.72", "-11.693, 78.4448, 4.3398, 0.72", "-11.7439, 80.2301, 3.81669, 0.72", "-11.7936, 81.1188, 3.62422, 0.72", "-11.8799, 81.9539, 3.53849, 0.72", "-12.051, 83.1573, 3.37229, 0.72", "-12.3266, 85.013, 3.08613, 0.72", "-12.5802, 86.3405, 2.87437, 0.72", "-12.8663, 87.449, 2.70051, 0.72", "-13.4252, 89.1519, 2.43745, 1.2", "-14.6109, 91.7513, 2.05973, 1.08", "-15.378, 92.896, 1.92229, 1.08", "-16.2343, 93.8845, 1.83077, 1.08", "-16.8846, 94.5644, 1.80163, 1.08", "-17.4905, 95.1645, 1.77696, 0.72", "-19.223, 96.8477, 1.68542, 1.2", "-21.082, 98.6383, 1.63082, 1.08", "-22.6469, 100.184, 1.591, 1.44", "-23.4153, 101.06, 1.57243, 1.44", "-24.5724, 102.709, 1.54136, 1.2", "-25.2063, 103.881, 1.52613, 1.2", "-25.8715, 105.625, 1.53739, 1.08", "-26.3673, 107.642, 1.60478, 1.08", "-26.7401, 109.643, 1.75024, 0.96", "-27.0458, 111.649, 1.96079, 0.96", "-27.1697, 112.697, 2.11921, 1.2", "-27.2772, 113.954, 2.24345, 0.72", "-27.3404, 116.457, 2.30092, 1.2", "-27.3384, 117.12, 2.25716, 1.2", "-27.3996, 118.431, 2.09081, 1.2", "-27.5716, 119.722, 1.84929, 1.2", "-28.0957, 122.196, 1.23252, 1.2", "-28.4599, 123.3, 0.875849, 1.2", "-28.8057, 123.984, 0.614366, 1.2", "-29.8224, 125.347, 0.13348, 0.96", "-30.6706, 126.132, -0.0591405, 1.2", "-31.2316, 126.573, -0.107883, 1.2", "-32.1858, 127.274, -0.103742, 1.2", "-32.7832, 127.724, -0.100587, 1.2", "-34.2505, 128.935, -0.091393, 1.2", "-35.9036, 130.566, -0.0794076, 1.2", "-36.7813, 131.598, -0.072801, 1.2", "-37.3441, 132.335, -0.0689369, 1.2", "-37.9499, 133.251, -0.0649725, 1.2", "-38.4626, 134.137, -0.0618546, 1.2", "-39.2604, 135.846, -0.0574682, 0.84", "-39.9612, 137.578, -0.0328283, 1.32", "-40.9477, 140.165, 0.0298504, 0.84", "-41.4344, 141.463, 0.0731551, 0.84", "-41.8164, 142.482, 0.115487, 0.84", "-42.329, 143.867, 0.183276, 0.84", "-42.9523, 145.45, 0.308259, 0.84", "-43.355, 146.335, 0.401905, 0.84", "-43.9759, 147.384, 0.470701, 0.84", "-44.4336, 147.971, 0.479213, 0.84", "-45.3117, 148.859, 0.447157, 1.2", "-46.743, 150.058, 0.305219, 0.84", "-48.0793, 151.029, 0.145737, 0.84", "-49.6489, 152.019, -0.0267945, 1.2", "-50.9417, 152.607, -0.145439, 0.6", "-52.5182, 153.24, -0.295905, 0.6", "-54.1967, 153.797, -0.462355, 1.08", "-56.1272, 154.303, -0.661343, 0.48", "-57.231, 154.516, -0.722536, 0.48", "-60.4654, 154.966, -0.615443, 0.84", "-65.5525, 163.066, 0.572595, 0.84", "-70.5481, 171.294, 0.379738, 0.84", "-74.3377, 180.079, 0.0278418, 0.84", "-78.4042, 188.617, -1.61014, 0.84", "-82.1964, 197.283, -3.16269, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.413173, 53.7435, 4.16733, 1.32", "-2.93851, 56.1651, 3.53508, 1.32", "-3.7974, 57.0404, 3.24546, 1.32", "-4.81361, 58.2011, 2.81324, 1.32", "-5.79017, 59.5208, 2.27512, 1.32", "-6.33146, 60.3258, 1.93893, 1.32", "-7.09121, 61.7325, 1.37714, 1.32", "-7.56317, 63.1938, 0.758485, 1.32", "-7.82969, 64.9273, 0.0542461, 1.56", "-7.75766, 66.6512, -0.615673, 1.56", "-7.60674, 67.2648, -0.816278, 1.56", "-6.56758, 69.6901, -1.53534, 1.2", "-6.05923, 70.5047, -1.75156, 1.2", "-5.13006, 71.6224, -2.056, 1.2", "-3.5638, 73.1188, -2.52702, 1.08", "-2.3649, 74.0886, -2.88354, 1.08", "-1.60153, 74.6394, -3.15757, 1.08", "-0.87069, 75.14, -3.49626, 1.08", "-0.135018, 75.7179, -3.94253, 1.08", "1.19484, 76.9749, -4.99865, 1.8", "1.43717, 77.2896, -5.27494, 1.8", "2.29735, 79.0016, -6.74039, 1.32", "2.58448, 80.0015, -7.57187, 1.32", "2.63392, 81.2835, -8.59816, 1.08", "2.53115, 81.6526, -8.86983, 1.08", "2.00569, 82.5729, -9.44112, 1.08", "1.32903, 83.5423, -9.97884, 1.44", "0.760222, 84.249, -10.3394, 1.44", "0.06023, 85.1033, -10.7852, 1.44", "-0.533595, 85.8544, -11.2226, 1.44", "-1.67595, 87.5197, -12.2809, 0.84", "-2.23909, 88.5183, -12.9294, 0.84", "-3.09672, 90.5883, -14.3262, 1.44", "-3.44687, 91.7737, -14.9846, 1.44", "-3.80149, 93.5582, -15.7962, 0.96", "-4.10502, 95.3935, -16.608, 0.96", "-4.25602, 96.3288, -17.0006, 0.96", "-4.38398, 97.7184, -17.4673, 0.72", "-4.25018, 101.381, -18.2075, 1.2", "-4.05925, 102.963, -18.3346, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-59.9434, 63.6701, 41.6968, 0.6", "-65.7831, 70.6797, 45.0812, 0.6", "-70.6938, 78.7999, 46.7618, 0.6", "-74.4001, 87.1684, 49.7055, 0.6", "-79.4408, 94.6608, 53.2257, 0.6", "-83.4171, 102.471, 57.2994, 0.6", "-88.0369, 109.972, 61.3375, 0.6", "-93.1892, 117.715, 63.9888, 0.6", "-99.8645, 124.524, 66.0071, 0.6", "-106.326, 131.243, 68.8744, 0.6", "-111.128, 138.627, 72.9398, 0.6", "-116.555, 146.405, 74.8184, 0.6", "-120.672, 154.737, 77.2918, 0.6", "-125.214, 162.583, 80.6332, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-59.9434, 63.6701, 41.6968, 0.84", "-66.7693, 68.1999, 47.2349, 0.6", "-72.9875, 74.3338, 51.667, 0.6", "-77.7285, 81.9228, 55.3695, 0.6", "-82.0256, 89.9647, 58.5122, 0.6", "-86.5038, 97.5845, 62.4633, 0.6", "-93.0955, 103.644, 66.4453, 0.6", "-99.6727, 110.255, 69.3311, 0.6", "-105.938, 116.979, 72.5939, 0.6", "-111.993, 124.088, 75.3028, 0.6", "-117.633, 131.324, 78.4925, 0.6", "-123.566, 138.907, 79.5371, 0.6", "-128.827, 146.902, 80.7607, 0.6", "-133.411, 155.307, 81.6044, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-13.852, -167.96, -8.25554, 0.96", "-15.7132, -167.588, -8.25554, 0.96", "-17.1296, -167.305, -8.25554, 0.96", "-18.1362, -167.104, -8.25554, 0.72", "-18.8772, -166.957, -8.25554, 0.72", "-19.5063, -166.831, -8.25554, 0.72", "-20.5773, -166.617, -8.25554, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-13.852, -167.96, -8.25554, 0.96", "-15.2072, -171.946, -9.35051, 0.96", "-15.7892, -173.362, -10.131, 0.96", "-16.3759, -174.988, -11.1531, 1.32", "-16.999, -177.108, -12.4267, 0.6", "-17.2848, -178.362, -13.2969, 0.6", "-17.543, -179.851, -14.3403, 1.2", "-18.1465, -184.583, -17.5779, 1.2", "-18.3398, -186.175, -18.7089, 1.56", "-18.5546, -188.45, -20.323, 0.96", "-18.7468, -192.566, -23.0974, 0.6", "-18.7684, -194.44, -24.2015, 1.08", "-18.794, -196.17, -25.151, 0.72", "-18.8629, -197.071, -25.5573, 0.72", "-19.0709, -198.318, -26.1179, 1.08", "-19.3786, -199.681, -26.6898, 0.72", "-19.8057, -201.249, -27.2056, 0.72", "-21.0689, -205.365, -28.558, 0.48", "-21.5557, -206.854, -29.0303, 1.56", "-22.4796, -209.455, -29.7616, 1.08", "-22.8876, -210.489, -30.0042, 0.72", "-23.7182, -212.49, -30.3648, 1.08", "-24.5147, -214.358, -30.661, 0.72", "-24.9061, -215.334, -30.7603, 0.72", "-25.8194, -217.705, -31.1013, 1.2", "-26.4931, -219.582, -31.445, 0.72", "-26.7828, -220.432, -31.6224, 0.72", "-27.4915, -222.975, -32.1929, 0.72", "-27.7458, -224.449, -32.7138, 1.08", "-27.8608, -225.729, -33.2208, 0.96", "-27.892, -226.686, -33.6088, 0.96", "-27.8808, -227.789, -34.0362, 0.96", "-27.8011, -229.827, -34.7464, 0.96", "-27.5135, -234.28, -36.0786, 1.2", "-27.2403, -237.377, -36.9942, 0.6", "-26.9744, -239.44, -37.5744, 0.6", "-26.7683, -240.605, -37.8606, 0.6", "-26.4729, -241.924, -38.1182, 0.6", "-26.2823, -242.833, -38.2039, 0.6", "-26.1428, -243.582, -38.1918, 0.6", "-25.9486, -244.632, -38.1904, 0.6", "-25.5453, -247.025, -38.3244, 0.6", "-25.4244, -247.843, -38.3989, 0.6", "-24.8091, -252.534, -38.9266, 0.96", "-24.5458, -254.775, -39.2009, 0.48", "-24.412, -256.189, -39.3806, 0.48", "-24.2001, -259.531, -39.805, 0.72", "-24.1145, -261.524, -40.0525, 0.48", "-24.0562, -263.107, -40.1726, 1.2", "-23.9998, -266.098, -40.2629, 0.84", "-24.0248, -267.911, -40.2376, 1.32", "-24.1562, -270.51, -40.1008, 0.84", "-24.3311, -272.504, -39.914, 1.44", "-24.9034, -276.973, -39.3849, 0.48", "-25.258, -279.271, -39.0736, 0.48", "-25.8749, -282.242, -38.6288, 0.48", "-26.352, -284.004, -38.3496, 0.48", "-26.9416, -285.624, -38.0769, 0.96", "-28.6866, -289.14, -37.4903, 0.48", "-29.08, -289.797, -37.3907, 0.84", "-30.4515, -291.799, -37.0349, 0.6", "-31.5093, -293.06, -36.7693, 0.84", "-32.7944, -294.371, -36.4689, 0.6", "-34.3134, -295.62, -36.1865, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.37115, -39.8781, 9.37396, 0.96", "2.73308, -41.2125, 9.49526, 0.96", "2.23615, -42.6265, 9.58181, 0.96", "2.08935, -43.1674, 9.68959, 0.96", "1.81679, -44.1463, 9.99742, 0.96", "1.55019, -45.0342, 10.3501, 0.96", "1.22612, -46.0385, 10.8537, 0.96", "0.754851, -47.6118, 11.7873, 1.32", "0.148112, -49.5597, 13.0611, 0.84", "-0.234796, -50.8432, 13.9558, 0.84", "-0.474154, -51.7049, 14.6014, 0.84", "-1.0032, -53.5488, 16.105, 1.32", "-1.37675, -54.629, 17.0775, 1.32", "-1.78802, -55.5979, 18.0211, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.37115, -39.8781, 9.37396, 1.44", "3.65425, -43.9212, 9.58995, 1.44", "3.84265, -46.8151, 9.72381, 1.44", "3.95684, -48.5471, 9.79082, 1.44", "4.16762, -52.1698, 9.90585, 1.8", "4.25548, -53.6797, 9.9538, 1.8", "4.34217, -55.1697, 10.0011, 1.8", "4.40238, -56.4131, 10.0013, 1.8", "4.49929, -58.9649, 10.0031, 1.56", "4.59717, -61.6851, 10.0075, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.6477, -66.6807, 8.19909, 1.56", "14.944, -69.0577, 8.19909, 1.56", "16.3259, -70.513, 8.19909, 1.56", "18.038, -72.3114, 8.19909, 1.2", "19.0703, -73.3926, 8.19909, 1.2", "20.6166, -74.9991, 8.19909, 1.56", "22.8304, -77.3453, 8.19909, 1.2", "23.8308, -78.4463, 8.19909, 1.8", "24.8872, -79.6259, 8.19909, 1.8", "26.943, -81.9804, 8.22058, 1.08", "28.3907, -83.6764, 8.24863, 1.68", "30.0496, -85.6801, 8.26392, 1.32", "31.1259, -87.0246, 8.26426, 1.32", "31.7869, -87.865, 8.25907, 1.32", "33.334, -89.9114, 8.23382, 1.08", "34.3966, -91.4011, 8.17955, 1.56", "35.9708, -93.7632, 8.10126, 1.2", "36.5202, -94.6245, 8.07543, 1.2", "37.041, -95.4525, 8.06662, 1.2", "38.0594, -97.0721, 8.07511, 1.68", "38.9106, -98.4152, 8.14137, 1.2", "39.9966, -100.089, 8.30382, 0.96", "40.7157, -101.107, 8.44763, 0.96", "42.6316, -103.589, 8.83554, 0.84", "43.6089, -104.786, 9.04429, 0.84", "45.1412, -106.549, 9.38875, 1.44", "45.955, -107.446, 9.57841, 1.44", "47.4291, -109.051, 9.87799, 1.44", "48.2804, -110.032, 10.0515, 0.96", "49.2033, -111.18, 10.223, 1.44", "49.5296, -111.597, 10.275, 1.44", "50.3556, -112.685, 10.3656, 1.44", "50.9901, -113.562, 10.4319, 1.44", "52.1494, -115.208, 10.5334, 1.08", "53.2136, -116.672, 10.5989, 1.08", "53.856, -117.483, 10.6191, 1.08", "55.1443, -118.974, 10.6412, 1.44", "55.7838, -119.663, 10.6532, 1.44", "57.4302, -121.426, 10.7049, 0.84", "58.4924, -122.588, 10.7474, 1.56", "60.2784, -124.623, 10.8333, 1.08", "61.1421, -125.629, 10.8789, 1.32", "63.7363, -128.4, 11.0089, 1.08", "65.0527, -129.704, 11.0855, 1.08", "66.1954, -130.764, 11.1565, 1.08", "67.8848, -132.219, 11.2579, 1.08", "69.0429, -133.175, 11.2834, 1.08", "72.5412, -135.973, 11.2236, 1.44", "74.9356, -137.846, 11.0859, 1.08", "76.4158, -139.018, 10.9625, 1.08", "78.7803, -140.99, 10.7416, 1.08", "81.4648, -143.279, 10.4471, 0.72", "83.4919, -145.121, 10.1742, 1.32", "84.9073, -146.602, 9.90912, 0.84", "85.7742, -147.578, 9.69624, 0.84", "87.2216, -149.418, 9.29267, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "12.6477, -66.6807, 8.19909, 1.68", "12.7391, -69.119, 8.26517, 1.68", "12.8808, -71.2726, 8.32388, 1.68", "12.9986, -72.5084, 8.35617, 1.68", "13.4453, -76.0751, 8.44276, 1.32", "13.788, -78.4463, 8.49409, 1.56", "14.1684, -81.5078, 8.55057, 1.56", "14.3102, -82.6612, 8.56329, 1.56", "14.4619, -84.4301, 8.57988, 1.56", "14.5608, -86.5585, 8.59596, 1.56", "14.6184, -89.5769, 8.61233, 1.2", "14.6327, -93.8214, 8.62474, 1.56", "14.6195, -96.7763, 8.65514, 1.2", "14.6162, -100.489, 8.72207, 1.2", "14.622, -102.641, 8.75123, 1.56", "14.6383, -105.123, 8.75475, 1.56", "14.6858, -107.125, 8.72327, 1.56", "14.856, -110.213, 8.69985, 1.2", "14.9892, -112.897, 8.69859, 1.56", "15.1061, -115.943, 8.71405, 1.44", "15.1405, -118.078, 8.73312, 1.44", "15.1221, -119.612, 8.75109, 1.44", "15.0154, -124.773, 8.8209, 1.08", "14.9599, -127.551, 8.78877, 1.08", "14.9431, -130.045, 8.70335, 1.44", "14.9595, -131.158, 8.64854, 1.44", "15.0198, -132.779, 8.52893, 1.44", "15.1554, -135.092, 8.2548, 1.44", "15.4589, -138.353, 7.6073, 1.32", "15.7757, -140.615, 7.09997, 1.32", "15.971, -141.815, 6.81236, 1.32", "16.1163, -142.808, 6.58405, 1.32", "16.3227, -144.557, 6.22395, 1.32", "16.4019, -145.6, 6.05347, 1.32", "16.4863, -146.823, 5.9065, 1.32", "16.6551, -149.394, 5.5864, 1.8", "16.7923, -151.866, 5.26193, 1.8", "16.903, -154.015, 5.04483, 1.8", "16.9914, -156.16, 4.88259, 1.8", "17.0804, -159.649, 4.69524, 1.56", "17.1079, -163.192, 4.56884, 1.56", "17.0898, -164.89, 4.53964, 1.56", "17.0177, -168.509, 4.5565, 1.32", "16.9688, -170.207, 4.59959, 1.32", "16.8381, -173.25, 4.74416, 1.8", "16.6677, -175.915, 4.9426, 1.8", "16.5277, -178.648, 5.17728, 1.56", "16.4923, -181.225, 5.35964, 1.56", "16.5416, -182.96, 5.43745, 1.56", "16.6256, -184.215, 5.49158, 1.56", "16.7281, -185.503, 5.52791, 1.56", "16.8701, -187.364, 5.54404, 1.56", "17.0075, -189.655, 5.5202, 1.2", "17.0732, -191.851, 5.436, 1.2", "17.0819, -193.365, 5.35142, 1.2", "17.0154, -196.186, 5.13951, 1.56", "16.9076, -198.9, 4.88164, 1.56", "16.8331, -200.591, 4.69662, 1.56", "16.7797, -202.817, 4.44325, 1.56", "16.7569, -204.935, 4.18342, 1.56", "16.7896, -209.111, 3.63988, 1.56", "16.9425, -213.913, 2.9716, 1.32", "17.1036, -217.913, 2.36902, 1.32", "17.1925, -220.067, 2.03893, 0.84", "17.2819, -222.28, 1.70228, 1.32", "17.3971, -224.907, 1.29904, 1.08", "17.5493, -227.371, 0.894805, 1.44", "17.7106, -229.971, 0.422057, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.88688, 35.2057, 16.2039, 1.2", "5.20081, 37.9136, 16.9623, 1.2", "4.56512, 39.1496, 17.3838, 1.2", "4.097, 40.227, 17.7901, 1.2", "3.36826, 42.4359, 18.7841, 1.2", "3.08431, 43.6255, 19.3544, 1.2", "2.90129, 44.7689, 19.9142, 1.08", "2.84833, 46.5905, 20.8839, 1.56", "2.89326, 47.8155, 21.5417, 1.56", "3.15546, 50.5164, 22.9301, 1.2", "3.41205, 52.2552, 23.7465, 0.96", "3.67969, 54.1594, 24.5285, 1.32", "3.76162, 55.0281, 24.8567, 1.32", "3.80352, 55.996, 25.1782, 1.32", "3.82367, 57.4389, 25.5733, 1.32", "3.81511, 58.2482, 25.7585, 1.32", "3.81927, 59.8273, 26.1265, 1.2", "3.87832, 61.4693, 26.5603, 1.56", "3.93555, 62.5659, 26.8682, 1.2", "4.06689, 64.2549, 27.3825, 1.68", "4.3603, 66.5471, 28.1359, 1.2", "4.54288, 67.4641, 28.4555, 1.44", "5.02966, 68.9847, 28.9977, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.88688, 35.2057, 16.2039, 1.44", "6.84667, 38.6261, 15.8367, 1.44", "6.82824, 40.1943, 15.6684, 1.44", "6.80692, 42.0074, 15.4737, 1.44", "6.7824, 44.0939, 15.2498, 1.44", "6.7527, 46.62, 14.9786, 1.8", "6.72758, 48.757, 14.7492, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.78802, -55.5979, 18.0211, 0.96", "-2.7382, -58.9867, 18.7942, 0.96", "-3.39613, -61.0684, 19.1948, 0.96", "-3.80662, -62.4157, 19.4139, 0.96", "-4.12209, -63.4378, 19.5726, 0.96", "-4.47846, -64.5993, 19.7371, 0.96", "-5.05753, -66.7015, 20.0144, 0.6", "-5.27057, -67.3468, 20.0763, 0.6", "-5.66602, -68.4957, 20.214, 1.08", "-6.52751, -70.8927, 20.591, 0.72", "-7.19536, -72.6908, 20.9123, 0.72", "-8.267, -75.4637, 21.4265, 0.72", "-9.37861, -78.11, 21.9175, 1.2", "-10.0532, -79.5437, 22.1772, 1.08", "-10.9776, -81.2443, 22.4723, 0.48", "-12.1614, -83.217, 22.7722, 0.48", "-13.5577, -85.3865, 23.057, 1.44", "-14.6484, -87.0244, 23.2163, 0.84", "-15.2103, -87.9559, 23.2742, 1.08", "-16.0522, -89.4637, 23.3262, 1.08", "-17.1065, -91.5706, 23.3684, 1.44", "-17.819, -93.1432, 23.4145, 0.84", "-18.278, -94.3049, 23.4948, 1.32", "-18.921, -96.2644, 23.6887, 0.72", "-19.2265, -97.2392, 23.8059, 0.72", "-19.5228, -98.1087, 23.9432, 0.72", "-20.142, -99.3631, 24.201, 0.72", "-21.2124, -100.696, 24.5451, 1.08", "-22.2815, -101.774, 24.8632, 0.6", "-23.6982, -102.87, 25.2356, 1.08", "-24.8039, -103.561, 25.5024, 0.96", "-26.7155, -104.481, 25.9016, 0.84", "-28.7408, -105.133, 26.2233, 0.84", "-32.3475, -113.979, 26.7531, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-1.78802, -55.5979, 18.0211, 0.84", "-2.59208, -57.1128, 18.9742, 0.84", "-3.16728, -58.1961, 19.6287, 0.84", "-3.42425, -58.7134, 19.915, 0.84", "-4.29946, -60.6793, 20.9327, 0.48", "-4.74734, -61.77, 21.4598, 0.48", "-5.47249, -63.6617, 22.2906, 0.84", "-5.88607, -64.861, 22.7291, 0.84", "-6.27144, -66.0039, 23.0762, 0.84", "-7.07669, -68.566, 23.725, 0.84", "-7.35025, -69.5381, 23.9187, 0.84", "-7.77487, -71.2881, 24.2159, 0.6", "-8.04674, -72.4054, 24.3748, 1.08", "-8.4742, -73.8808, 24.5715, 1.08", "-8.83697, -74.9486, 24.7173, 1.56", "-9.34327, -76.2179, 24.8753, 1.56", "-9.76618, -77.214, 25.0119, 1.08", "-10.5647, -78.9915, 25.2883, 0.72", "-11.0986, -80.1243, 25.4818, 1.32", "-11.5786, -81.0801, 25.6599, 1.32", "-12.3124, -82.4053, 25.9212, 0.72", "-13.1206, -83.7718, 26.1861, 0.72", "-17.748, -91.857, 28.667, 0.72", "-21.226, -100.368, 31.4315, 0.72", "-25.1898, -108.413, 34.9789, 0.72", "-29.1635, -116.467, 38.4901, 0.72", "-32.032, -124.633, 42.719, 0.72", "-33.3067, -132.689, 47.8631, 0.72", "-34.3507, -141.462, 51.5565, 0.72", "-34.6224, -150.814, 53.2898, 0.72", "-34.5865, -160.029, 55.7217, 0.72", "-35.5066, -169.314, 57.6245, 0.72", "-38.1755, -178.465, 57.9355, 0.72", "-41.1065, -187.548, 57.954, 0.72", "-42.5561, -196.915, 58.769, 0.72", "-43.227, -206.229, 60.6246, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.59717, -61.6851, 10.0075, 1.08", "5.93558, -62.5695, 5.55454, 1.08", "6.95332, -63.3974, 2.55686, 1.08", "7.24266, -63.7058, 1.72079, 1.08", "7.45594, -64.0451, 0.964861, 1.08", "7.57283, -64.2753, 0.521114, 1.08", "7.99642, -65.309, -1.27575, 1.44", "8.2003, -66.1784, -2.4996, 1.44", "8.29453, -67.1966, -3.7647, 1.44", "8.33066, -68.8384, -5.67597, 1.44", "8.30935, -69.4769, -6.3512, 1.44", "8.18892, -71.1763, -7.93063, 1.2", "7.87588, -73.9171, -10.1449, 1.2", "7.64674, -75.7888, -11.5667, 1.68", "7.37164, -77.8104, -13.1022, 0.72", "7.1337, -79.3316, -14.2172, 0.72", "6.77938, -81.0018, -15.5481, 1.44", "6.44365, -82.1911, -16.584, 1.44", "5.63717, -84.3502, -18.9717, 0.96", "4.72043, -86.249, -21.9539, 1.68", "4.36476, -86.8444, -23.1686, 1.68", "3.55388, -88.0508, -26.1984, 1.68", "2.93587, -88.9143, -28.6551, 1.68", "1.98172, -90.2498, -32.5767, 1.68", "0.93588, -91.743, -36.8036, 1.68", "0.156426, -92.8855, -39.8822, 1.2", "-0.631722, -94.1426, -42.9603, 0.84", "-0.95841, -94.7578, -44.2181, 1.44", "-1.25234, -95.4049, -45.3109, 0.72", "-1.92835, -97.0271, -47.5993, 1.32", "-2.96686, -99.7485, -50.9117, 0.6", "-3.20649, -100.43, -51.6853, 0.6", "-3.54152, -101.362, -52.6897, 0.96", "-3.83069, -102.143, -53.5694, 0.96", "-4.94769, -105.213, -57.2815, 0.6", "-5.26947, -106.339, -58.6298, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.59717, -61.6851, 10.0075, 1.32", "4.60731, -61.8081, 9.98664, 1.32", "4.96451, -65.0351, 9.45924, 1.32", "5.45599, -68.7868, 8.88164, 1.68", "5.78345, -71.1757, 8.5468, 2.04", "6.06846, -73.2934, 8.2744, 1.68", "6.29954, -75.0418, 8.06892, 1.68", "6.44363, -76.0992, 7.96692, 1.68", "6.64269, -77.5127, 7.86698, 1.68", "6.91148, -79.6614, 7.76372, 2.04", "7.0347, -80.8979, 7.75026, 1.68", "7.14555, -82.508, 7.77001, 1.68", "7.24719, -84.2407, 7.83628, 1.68", "7.37851, -86.2056, 7.94121, 1.56", "7.52564, -88.0244, 8.05212, 1.56", "7.88006, -91.6768, 8.28795, 1.56", "8.20833, -94.6497, 8.48508, 1.8", "8.78731, -99.4009, 8.80052, 1.56", "9.38886, -104.156, 9.09657, 1.44", "9.64264, -106.178, 9.21211, 1.92", "9.93627, -108.629, 9.33054, 1.8", "10.1295, -110.518, 9.40016, 1.68", "10.3018, -112.878, 9.47191, 2.04", "10.6625, -122.536, 9.51552, 1.8", "10.6742, -125.482, 9.46846, 1.8", "10.6489, -127.08, 9.42048, 1.68", "10.5952, -128.59, 9.35505, 1.68", "10.374, -132.767, 9.11808, 1.68", "10.2075, -135.042, 8.893, 1.68", "10.0444, -136.948, 8.6176, 1.68", "9.84829, -139.459, 8.23388, 1.32", "9.6492, -142.47, 7.7762, 1.32", "9.47771, -145.61, 7.31086, 1.32", "9.28453, -150.617, 6.60014, 1.32", "9.19378, -154.006, 6.16989, 1.8", "9.13637, -156.267, 5.91732, 1.8", "9.09406, -158.084, 5.74896, 1.8", "9.06738, -159.681, 5.6457, 1.8", "9.02956, -162.649, 5.57992, 1.68", "9.00344, -166.912, 5.57196, 2.04", "9.0264, -170.273, 5.50564, 2.04", "9.06338, -173.032, 5.43066, 1.8", "9.14393, -176.535, 5.31844, 1.56", "9.25932, -180.092, 5.1939, 1.92", "9.37594, -184.605, 5.02345, 1.56", "9.43694, -188.118, 4.86536, 1.32", "9.47582, -192.083, 4.63073, 1.32", "9.47657, -193.967, 4.52419, 1.32", "9.47601, -195.613, 4.44128, 1.2", "9.43493, -199.423, 4.30106, 1.68", "9.37267, -202.942, 4.34893, 1.68", "9.28689, -205.205, 4.41009, 1.68", "9.20205, -207.131, 4.45479, 1.68", "9.08276, -209.276, 4.5142, 1.68", "9.04812, -210.187, 4.54603, 1.68", "9.23023, -216.022, 4.83797, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "87.2216, -149.418, 9.29267, 0.84", "89.696, -149.059, 10.1616, 0.84", "91.6379, -148.746, 10.914, 0.84", "93.1514, -148.5, 11.551, 1.32", "95.6331, -148.116, 12.6995, 1.32", "97.5833, -147.826, 13.6777, 1.68", "100.012, -147.41, 14.9571, 1.2", "101.278, -147.192, 15.7214, 0.96", "102.913, -146.83, 16.8367, 1.44", "104.857, -146.262, 18.2927, 0.84", "105.764, -145.897, 19.0712, 0.84", "106.635, -145.423, 19.9755, 0.84", "107.187, -144.971, 20.7514, 0.84", "107.789, -144.325, 21.7442, 0.84", "108.263, -143.581, 22.7486, 0.84", "108.701, -142.548, 23.9994, 1.08", "109.145, -141.317, 25.4755, 0.72", "109.686, -139.803, 27.4821, 1.2", "118.335, -136.724, 31.3158, 1.2", "126.811, -132.489, 34.1934, 1.2", "135.033, -127.349, 35.9696, 1.2", "141.747, -121.005, 39.1793, 1.2", "149.514, -115.867, 42.4082, 1.2", "156.619, -109.916, 45.6145, 1.2", "164.281, -103.927, 46.8551, 1.2", "171.659, -97.7581, 48.7027, 1.2", "178.083, -90.8362, 51.0781, 1.2", "183.944, -83.1997, 52.095, 1.2", "188.898, -75.2135, 54.2816, 1.2", "192.501, -66.4563, 55.7123, 1.2", "196.107, -57.7168, 57.2511, 1.2", "199.774, -48.9396, 58.3412, 1.2", "204.842, -41.0372, 60.6045, 1.2", "209.766, -32.9575, 62.4542, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "87.2216, -149.418, 9.29267, 0.84", "88.3658, -151.587, 9.67741, 0.84", "89.6091, -153.848, 10.0601, 0.6", "90.4162, -155.334, 10.2892, 1.32", "91.6855, -157.672, 10.6494, 0.84", "92.5064, -159.184, 10.8824, 0.72", "93.1602, -160.388, 11.068, 1.08", "93.9762, -161.963, 11.2865, 0.72", "94.7362, -163.464, 11.5651, 1.2", "100.126, -171.429, 12.3661, 1.2", "105.894, -178.891, 14.6105, 1.2", "111.512, -185.758, 18.6332, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.7106, -229.971, 0.422057, 0.96", "19.6398, -232.081, 1.80307, 0.96", "20.7404, -233.472, 2.71859, 0.96", "22.7284, -236.154, 4.50913, 1.44", "24.207, -238.093, 5.8925, 0.96", "25.3628, -239.618, 6.98302, 0.96", "26.307, -240.902, 7.88028, 0.96", "27.1123, -242.077, 8.6807, 0.96", "28.0499, -243.573, 9.74407, 1.08", "29.1936, -245.632, 11.1469, 1.08", "29.7551, -246.663, 11.8191, 1.08", "30.2752, -247.551, 12.3653, 1.08", "31.512, -249.705, 13.7717, 1.08", "32.5797, -251.861, 15.2146, 0.84", "33.202, -253.651, 16.4182, 1.2", "33.4624, -255.065, 17.3374, 1.2", "33.5846, -256.23, 18.1041, 1.2", "33.754, -259.079, 20.024, 0.96", "33.7756, -260.575, 21.035, 0.96", "33.8561, -261.962, 21.9552, 0.96", "33.993, -263.738, 23.083, 0.72", "34.0609, -264.85, 23.7387, 0.72", "34.2377, -266.454, 24.6344, 0.72", "34.735, -268.479, 25.608, 1.2", "35.8143, -271.468, 27.149, 0.84", "36.3792, -272.709, 27.8315, 0.84", "37.0078, -274.016, 28.615, 0.84", "40.4291, -281.608, 33.5573, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "17.7106, -229.971, 0.422057, 1.32", "18.2304, -233.24, 0.585961, 1.32", "18.4946, -235.266, 0.65507, 1.32", "18.7014, -237.239, 0.704359, 1.32", "18.8077, -238.709, 0.73091, 1.32", "19.0467, -241.838, 0.774474, 1.68", "19.2961, -244.45, 0.804841, 1.68", "19.4922, -246.363, 0.743847, 1.68", "19.6893, -248.166, 0.665101, 1.68", "20.0267, -251.202, 0.505899, 1.2", "20.2544, -253.2, 0.382855, 1.2", "20.6483, -256.218, 0.17601, 1.2", "21.1723, -259.65, -0.116057, 1.56", "21.4655, -261.374, -0.28148, 1.56", "21.7336, -262.861, -0.434431, 1.56", "22.0407, -264.425, -0.60233, 1.56", "22.5263, -267.14, -0.767192, 1.44", "23.0047, -269.89, -0.895331, 1.44", "23.2441, -271.138, -0.910882, 1.44", "23.5481, -272.654, -0.91498, 1.44", "23.924, -274.394, -0.885717, 1.44", "24.6074, -277.217, -0.727913, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.02966, 68.9847, 28.9977, 1.44", "3.68974, 67.4643, 29.1099, 1.44", "3.16371, 66.9429, 29.1837, 1.2", "2.03095, 66.0298, 29.3421, 0.96", "1.01165, 65.2081, 29.4846, 0.96", "0.30927, 64.6419, 29.5828, 0.96", "-0.438268, 64.0393, 29.6873, 0.96", "-1.19097, 63.3625, 29.7004, 0.96", "-2.62092, 62.2075, 29.7751, 1.2", "-10.0242, 55.8639, 28.9995, 1.2", "-16.6801, 48.7741, 29.0544, 1.2", "-23.3472, 41.76, 28.0353, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.02966, 68.9847, 28.9977, 0.96", "5.89556, 67.6115, 29.2408, 0.96", "6.89185, 66.0314, 29.5206, 0.96", "7.63286, 64.8563, 29.7287, 1.2", "8.04311, 64.2057, 29.8439, 1.2", "9.39708, 62.0584, 30.224, 0.84", "10.004, 61.0959, 30.3945, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.72758, 48.757, 14.7492, 1.44", "7.57813, 50.922, 15.154, 1.44", "8.22485, 52.6223, 15.4502, 1.44", "8.55196, 53.5131, 15.6037, 1.44", "9.28225, 55.5839, 15.9969, 1.44", "10.162, 58.0349, 16.5191, 1.32", "10.7195, 59.4401, 16.774, 1.32", "11.4359, 60.9843, 16.9961, 1.32", "12.0885, 62.2309, 17.1506, 1.56", "12.7888, 63.4155, 17.263, 1.56", "13.8103, 64.9406, 17.3642, 1.32", "15.7168, 67.4639, 17.5043, 1.32", "16.9396, 68.9172, 17.5742, 1.32", "18.0082, 70.0867, 17.5525, 1.32", "19.2065, 71.3366, 17.4536, 1.56", "19.8826, 72.0554, 17.3496, 1.56", "21.5233, 73.8462, 17.0166, 1.2", "22.3946, 74.8191, 16.8412, 1.2", "24.0966, 76.7593, 16.4509, 1.44", "24.9955, 77.8218, 16.1962, 1.92", "26.7224, 80.0326, 15.7528, 1.56", "27.7927, 81.5024, 15.5124, 1.32", "29.334, 83.81, 15.2087, 1.32", "30.5503, 85.7657, 15.0789, 1.32", "31.7377, 87.8106, 15.101, 1.56", "33.279, 90.7907, 15.2814, 1.2", "33.7434, 91.848, 15.4106, 1.2", "33.9888, 92.6023, 15.5332, 1.2", "34.2029, 93.6198, 15.7483, 0.96", "34.292, 94.2772, 15.9135, 1.32", "34.4415, 96.2087, 16.4347, 0.96", "34.4783, 97.1582, 16.6252, 0.96", "34.5134, 98.122, 16.7926, 0.96", "34.6484, 99.9472, 17.1175, 1.32", "34.7575, 100.838, 17.2807, 1.32", "35.0195, 102.182, 17.5733, 0.84", "35.4155, 103.564, 17.9433, 1.08", "35.8984, 104.908, 18.4015, 1.08", "36.6864, 106.81, 19.1495, 0.84", "37.0939, 107.734, 19.4769, 1.2", "37.5802, 108.756, 19.873, 0.84", "38.1492, 109.845, 20.3401, 1.2", "39.0442, 111.484, 21.1006, 0.96", "39.3402, 112.052, 21.3649, 0.96", "40.4743, 114.728, 22.3569, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.72758, 48.757, 14.7492, 1.08", "8.20811, 50.7425, 14.7985, 1.08", "9.97361, 53.2124, 14.8462, 1.08", "10.5067, 53.9732, 14.8583, 1.08", "11.0167, 54.7164, 14.8278, 1.08", "11.922, 56.0356, 14.7736, 1.32", "13.2669, 57.9955, 14.6932, 0.96", "14.1151, 59.2201, 14.6041, 1.44", "14.6896, 60.0684, 14.5212, 1.44", "15.8318, 61.8236, 14.3187, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.23023, -216.022, 4.83797, 1.08", "8.83763, -218.642, 5.69238, 1.08", "8.56495, -220.364, 6.26338, 1.08", "8.10444, -222.822, 7.05879, 1.08", "7.80599, -224.329, 7.54279, 1.08", "7.42183, -226.084, 8.10716, 1.08", "7.1312, -227.287, 8.51607, 1.08", "6.91837, -228.046, 8.76964, 1.08", "6.51818, -229.166, 9.13668, 1.08", "5.6996, -231.105, 9.68867, 0.84", "5.23276, -232.098, 9.95473, 0.84", "4.51113, -233.504, 10.2757, 1.32", "3.46678, -235.412, 10.6377, 1.32", "1.97517, -238.109, 11.079, 0.96", "0.984122, -239.954, 11.3197, 0.96", "0.305076, -241.304, 11.4839, 1.2", "-0.88371, -243.964, 11.8005, 1.2", "-1.59127, -245.782, 12.0293, 1.44", "-2.31572, -247.946, 12.3505, 1.2", "-2.92846, -250.223, 12.7141, 1.2", "-3.64803, -253.246, 13.2254, 1.2", "-3.87604, -254.339, 13.4147, 1.2", "-4.10414, -256.12, 13.7871, 1.2", "-4.15913, -257.117, 14.0308, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "9.23023, -216.022, 4.83797, 0.96", "10.0845, -219.756, 3.6355, 0.96", "10.5993, -222.138, 2.88565, 1.32", "10.7185, -223.097, 2.68463, 1.32", "10.8665, -224.287, 2.43531, 1.32", "11.1989, -226.96, 1.87508, 1.56", "11.4455, -228.942, 1.45951, 1.56", "11.5918, -230.409, 1.18432, 1.56", "11.8534, -234.461, 0.868041, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "24.6074, -277.217, -0.727913, 0.96", "24.386, -278.858, -0.057056, 0.96", "24.1481, -280.336, 0.495537, 0.96", "23.8571, -281.809, 1.0449, 1.44", "23.1783, -285.071, 2.30193, 1.08", "22.874, -286.591, 2.87291, 1.08", "22.4769, -288.914, 3.70738, 1.08", "22.3521, -290.006, 4.10058, 1.08", "22.1513, -292.83, 5.07649, 0.84", "22.0822, -295.157, 5.79903, 0.84", "22.0975, -296.633, 6.15772, 0.84", "22.1914, -298.297, 6.5407, 0.84", "22.3325, -299.856, 6.87198, 0.84", "22.4424, -301.134, 7.09721, 0.84", "22.4915, -302.041, 7.18934, 0.84", "22.5054, -303.082, 7.25522, 0.84", "22.3958, -304.464, 7.34492, 0.84", "22.1295, -305.666, 7.41248, 0.84", "21.7692, -306.681, 7.44768, 0.84", "20.968, -308.447, 7.52563, 0.6", "18.2756, -317.573, 8.21536, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "24.6074, -277.217, -0.727913, 0.84", "24.7088, -279.134, -0.828397, 0.84", "24.7636, -280.51, -0.930864, 0.84", "24.8026, -281.975, -1.08775, 0.84", "24.8107, -285.001, -1.4731, 1.2", "24.7937, -285.706, -1.57262, 1.2", "24.6606, -288.846, -2.04698, 0.96", "24.491, -291.483, -2.5079, 1.32", "24.2943, -294.83, -3.10509, 1.08", "24.2307, -296.716, -3.45774, 1.08", "24.2147, -298.107, -3.71796, 1.08", "24.2644, -299.144, -3.90302, 1.08", "24.3333, -299.854, -4.01616, 1.08", "24.6922, -302.642, -4.41865, 0.84", "25.3009, -306.249, -4.87926, 1.2", "25.5093, -307.267, -4.99957, 1.2", "26.7161, -312.542, -5.58828, 0.84", "27.4101, -315.514, -5.90872, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.004, 61.0959, 30.3945, 0.72", "9.41288, 59.9295, 30.1098, 0.72", "8.90302, 58.9235, 29.8643, 0.48", "8.28841, 57.7108, 29.5683, 0.96", "7.85268, 56.851, 29.3585, 0.96", "3.38983, 48.8349, 26.3781, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.004, 61.0959, 30.3945, 0.72", "10.4317, 59.6707, 30.5313, 0.72", "10.6509, 58.6676, 30.6428, 1.08", "10.9799, 56.9395, 30.7603, 0.72", "11.1307, 55.6913, 30.7563, 0.72", "11.2371, 53.9142, 30.6251, 0.72", "11.3321, 52.4569, 30.4666, 1.2", "11.325, 51.766, 30.3836, 1.2", "11.2229, 50.2669, 30.1768, 0.84", "11.0201, 48.4098, 29.8564, 0.84", "10.8788, 46.902, 29.4202, 1.32", "10.7996, 45.9281, 28.9925, 1.08", "10.1135, 36.519, 27.7953, 1.08", "8.84008, 27.1353, 26.8941, 1.08", "7.30736, 18.0534, 24.3922, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "40.4743, 114.728, 22.3569, 0.6", "41.0856, 115.62, 22.7187, 0.6", "41.7098, 116.53, 23.0882, 0.6", "42.5199, 117.713, 23.5678, 0.6", "43.8287, 119.622, 24.3425, 0.6", "44.6776, 120.861, 24.845, 0.6", "45.5413, 122.121, 25.3563, 0.48", "49.4754, 130.757, 26.7295, 0.48", "54.0551, 139.188, 27.2428, 0.48", "58.9293, 147.196, 29.5193, 0.48", "65.5028, 154.288, 30.5512, 0.48", "71.868, 161.613, 30.7035, 0.48", "78.7171, 168.448, 31.8556, 0.48", "83.9101, 176.566, 31.7576, 0.48", "87.2009, 185.365, 29.917, 0.48", "89.294, 194.631, 29.2166, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "40.4743, 114.728, 22.3569, 0.84", "41.8025, 117.111, 22.2445, 0.84", "42.552, 118.457, 22.1811, 0.84", "43.3509, 119.89, 22.1135, 0.36", "44.11, 121.253, 22.0493, 0.6", "44.7236, 122.354, 21.9973, 0.6", "45.8156, 124.313, 21.905, 0.6", "50.9274, 132.317, 20.2032, 0.6", "55.5559, 140.399, 17.7156, 0.6", "61.3344, 147.716, 15.0147, 0.6", "66.6013, 155.302, 12.1008, 0.6", "70.0983, 163.31, 8.01262, 0.6", "73.4818, 172.061, 6.08938, 0.6", "77.7302, 180.612, 5.12077, 0.6", "81.669, 189.313, 4.34589, 0.6", "84.0681, 198.297, 2.15074, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "15.8318, 61.8236, 14.3187, 1.08", "15.125, 63.4979, 14.6534, 1.08", "14.6695, 64.2972, 14.8925, 1.08", "14.0073, 65.4594, 15.2401, 1.08", "13.272, 66.7498, 15.626, 0.96", "12.2063, 68.6199, 16.1853, 0.96", "11.3254, 70.1657, 16.6477, 0.84", "10.0489, 72.0132, 17.396, 1.08", "4.39266, 79.7811, 18.4672, 1.08", "-0.108503, 88.1497, 19.93, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "15.8318, 61.8236, 14.3187, 0.96", "17.527, 62.8918, 13.7802, 0.96", "18.2955, 63.3611, 13.4984, 0.96", "19.5064, 64.1301, 13.0196, 0.96", "20.9379, 65.0934, 12.3187, 0.84", "21.6889, 65.6104, 11.9214, 0.84", "22.8866, 66.4336, 11.2565, 0.84", "23.442, 66.7879, 10.9121, 0.84", "24.34, 67.331, 10.338, 0.84", "26.1902, 68.3143, 9.2205, 1.2", "26.5452, 68.4714, 9.04409, 1.2", "27.5119, 68.8147, 8.66341, 1.2", "29.0116, 69.2057, 8.24679, 1.2", "29.4921, 69.2953, 8.15755, 1.2", "31.3797, 69.5623, 7.89905, 1.2", "32.8749, 69.7553, 7.75194, 0.96", "34.3567, 69.9734, 7.60823, 0.96", "36.0478, 70.1969, 7.45594, 0.96", "37.7258, 70.4133, 7.30569, 1.32", "40.2561, 70.7621, 7.07112, 0.84", "42.447, 71.0827, 6.8555, 1.2", "43.981, 71.3324, 6.77072, 1.2", "45.4678, 71.6242, 6.76205, 0.96", "46.7154, 71.9179, 6.84372, 1.2", "47.6443, 72.1528, 6.98177, 1.2", "48.256, 72.3157, 7.12149, 1.2", "51.3714, 73.2536, 8.02382, 1.2", "52.613, 73.6994, 8.41639, 1.2", "53.656, 74.1532, 8.75789, 1.2", "55.6746, 75.0392, 9.41735, 1.08", "56.5881, 75.4052, 9.69207, 1.44", "58.3289, 75.9809, 10.0126, 1.08", "59.6723, 76.3431, 10.0439, 1.08", "60.6968, 76.6155, 9.97281, 1.08", "62.4256, 77.1326, 9.72417, 1.08", "64.3362, 77.7294, 9.32531, 1.44", "67.3009, 78.6637, 8.5424, 1.08", "69.236, 79.3387, 7.93152, 0.84", "70.691, 79.9377, 7.44556, 1.2", "72.1547, 80.5988, 6.93733, 1.2", "73.7836, 81.4457, 6.29564, 0.84", "74.9735, 82.124, 5.81348, 1.08", "77.5291, 83.5739, 4.85836, 0.72", "80.0567, 84.9024, 3.89097, 0.72", "81.6661, 85.6124, 3.27939, 1.2", "84.0395, 86.5535, 2.39031, 0.72", "84.8762, 86.8649, 2.097, 0.72", "86.628, 87.4636, 1.5473, 0.96", "88.4771, 88.0364, 1.02242, 0.96", "91.7493, 89.1504, 0.226786, 0.72", "93.4316, 89.8583, -0.113623, 0.6", "94.7861, 90.5093, -0.329816, 0.6", "96.5264, 91.496, -0.601276, 1.2", "97.0436, 91.8435, -0.67572, 1.2", "99.1556, 93.3968, -0.9052, 0.72", "100.142, 94.2141, -0.99683, 0.72", "100.832, 94.7717, -1.05812, 0.72", "102.481, 96.1623, -1.26907, 0.6", "102.751, 96.3897, -1.30914, 0.6", "104.117, 97.5177, -1.60359, 0.96", "105.034, 98.2969, -1.90551, 0.72", "105.631, 98.8339, -2.14735, 0.96", "107.936, 101.034, -3.21165, 0.72", "109.264, 102.353, -3.8847, 0.72", "111.028, 104.089, -4.8559, 1.2", "112.893, 105.85, -5.8382, 0.72", "114.175, 106.972, -6.44267, 0.72", "115.769, 108.252, -7.12046, 0.72", "116.394, 108.696, -7.33377, 0.72", "118.338, 109.994, -7.81067, 1.08", "120.583, 111.36, -8.05764, 0.72", "122.201, 112.286, -8.09338, 1.08", "122.623, 112.529, -8.0803, 1.08", "124.397, 113.503, -8.00915, 0.72", "125.443, 114.088, -7.9927, 0.72", "127.405, 115.228, -8.03647, 1.08", "128.178, 115.668, -8.11634, 1.08", "129.712, 116.499, -8.3214, 0.84", "132.538, 117.959, -8.73875, 0.84", "134.933, 119.112, -9.07037, 0.6", "136.798, 119.896, -9.25443, 1.08", "137.695, 120.221, -9.297, 1.08", "140.046, 121.022, -9.25541, 0.72", "141.218, 121.408, -9.15189, 0.72", "143.673, 122.24, -8.68642, 1.08", "145.813, 122.952, -8.12369, 0.84", "146.939, 123.343, -7.78487, 1.08", "148.624, 123.982, -7.26121, 0.84", "149.49, 124.315, -7.0028, 0.84", "151.72, 125.152, -6.43319, 0.6", "152.821, 125.517, -6.21383, 0.6", "154.509, 126.017, -5.95807, 0.96", "155.214, 126.16, -5.87891, 0.96", "157.346, 126.354, -5.68677, 0.72", "159.024, 126.402, -5.54686, 0.72", "160.39, 126.385, -5.5036, 0.72", "160.732, 126.391, -5.50946, 0.72", "161.974, 126.492, -5.63642, 0.72", "163.994, 126.78, -6.07219, 0.72", "164.558, 126.895, -6.28227, 0.72", "166.668, 127.383, -7.27117, 0.6", "167.826, 127.66, -7.88588, 0.96", "169.822, 128.06, -8.97751, 0.96", "171.098, 128.317, -9.72901, 0.96", "173.216, 128.689, -11.0738, 0.72", "175.135, 128.951, -12.2938, 0.72", "176.964, 129.084, -13.4333, 1.2", "178.684, 129.11, -14.4763, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.15913, -257.117, 14.0308, 0.48", "-4.02258, -259.639, 14.1773, 0.48", "-3.90027, -261.897, 14.3085, 0.48", "-3.79562, -263.83, 14.4208, 0.84", "-3.70514, -265.501, 14.5179, 0.84", "-3.61772, -267.115, 14.6117, 0.6", "-4.44085, -276.54, 13.6622, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.15913, -257.117, 14.0308, 0.84", "-3.50156, -259.092, 14.6243, 0.84", "-3.00017, -260.706, 15.0797, 0.84", "-2.55634, -262.29, 15.4833, 1.08", "-2.01484, -264.265, 15.9384, 0.84", "-1.64012, -265.634, 16.2387, 0.84", "-1.29218, -266.928, 16.5049, 0.84", "-1.11471, -267.661, 16.6366, 0.84", "-0.622509, -269.951, 16.9559, 1.32", "-0.391069, -271.247, 17.0971, 1.32", "-0.0694213, -273.625, 17.3086, 1.2", "0.0689437, -275.015, 17.4132, 0.96", "0.195948, -276.741, 17.5625, 1.32", "0.271488, -278.31, 17.7201, 1.32", "0.291841, -280.235, 17.956, 1.08", "0.240202, -284.31, 18.4724, 1.08", "0.16628, -286.439, 18.7479, 0.84", "0.0860827, -288.255, 19.0109, 1.2", "-0.0153593, -290.263, 19.3428, 1.08", "-0.0935803, -291.883, 19.6528, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "11.8534, -234.461, 0.868041, 0.96", "10.638, -236.846, 1.16346, 0.96", "10.2002, -237.908, 1.41437, 0.96", "9.79505, -238.849, 1.66441, 0.96", "9.30959, -239.977, 1.96087, 0.96", "8.76472, -241.192, 2.29207, 0.96", "7.63868, -243.867, 3.02535, 1.44", "6.81093, -246.236, 3.76084, 0.96", "5.53874, -250.231, 5.06743, 1.44", "5.16937, -251.504, 5.48958, 0.96", "4.47568, -254.051, 6.32577, 1.56", "3.72577, -257.016, 7.2467, 1.2", "2.84006, -261.11, 8.38386, 0.96", "2.51949, -262.923, 8.84304, 1.44", "2.12264, -265.811, 9.52601, 0.96", "1.68547, -268.966, 10.1932, 1.32", "1.1836, -272.307, 10.7621, 0.96", "0.729229, -274.813, 11.0729, 0.96", "0.471248, -276.269, 11.1807, 0.96", "0.281189, -277.504, 11.245, 0.96", "-0.171113, -280.811, 11.3571, 1.32", "-0.535223, -283.732, 11.4169, 0.96", "-0.96924, -287.897, 11.4978, 1.44", "-1.21967, -290.937, 11.5667, 0.84", "-1.31823, -293.119, 11.6531, 1.2", "-1.33335, -294.243, 11.7458, 1.2", "-1.31087, -294.998, 11.8444, 0.84", "-1.1605, -297.908, 12.4103, 1.2", "-1.03729, -300.584, 13.1084, 1.2", "-1.03918, -302.398, 13.6595, 0.96", "-1.17442, -305.394, 14.6238, 0.96", "-1.45187, -308.188, 15.4761, 1.32", "-1.82898, -310.504, 16.1649, 1.68", "-2.43432, -312.909, 16.8496, 1.2", "-3.50842, -315.939, 17.6525, 0.96", "-4.78353, -318.58, 18.2146, 0.96", "-6.34758, -320.864, 18.5369, 0.84", "-7.61227, -322.037, 18.6187, 0.84", "-9.14832, -322.648, 18.5007, 0.84", "-10.6401, -321.995, 18.2222, 0.84", "-11.4312, -321.318, 18.0442, 0.84", "-12.1477, -320.458, 17.8788, 0.84", "-12.794, -319.352, 17.7705, 1.08", "-13.4752, -317.805, 17.6679, 0.84", "-13.8696, -316.502, 17.6679, 0.6", "-14.6267, -325.825, 19.4316, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "11.8534, -234.461, 0.868041, 1.08", "12.1798, -237.989, 1.02739, 1.08", "12.5443, -241.814, 1.17053, 1.44", "12.6756, -243.531, 1.22461, 0.84", "12.8453, -246.027, 1.28738, 1.32", "12.9582, -247.725, 1.32318, 1.32", "13.1455, -250.663, 1.32991, 1.32", "13.2201, -252.553, 1.28725, 1.32", "13.31, -254.614, 1.22469, 1.32", "13.3986, -258.421, 1.09692, 1.44", "13.4251, -260.29, 1.03257, 1.44", "13.4605, -266.176, 0.835103, 1.44", "13.4496, -267.647, 0.788078, 1.44", "13.4278, -270.192, 0.713661, 1.08", "13.4663, -275.274, 0.585099, 1.08", "13.4868, -277.887, 0.533933, 0.84", "13.5234, -280.9, 0.514515, 1.32", "13.6021, -283.284, 0.537453, 1.32", "13.7866, -286.982, 0.588193, 0.96", "13.9166, -288.903, 0.634593, 1.44", "14.1358, -291.72, 0.640253, 1.44", "14.3008, -294.704, 0.585903, 1.2", "14.3692, -297.687, 0.474519, 1.08", "14.3706, -300.064, 0.3472, 1.08", "14.2932, -302.307, 0.197805, 1.68", "14.125, -305.86, -0.0636416, 1.2", "14.0665, -307.327, -0.176894, 1.2", "13.9942, -310.261, -0.399138, 1.44", "13.9772, -312.833, -0.592984, 1.44", "14.0528, -316.001, -0.809778, 1.44", "14.1894, -318.73, -0.95896, 1.44", "14.4588, -321.854, -1.04715, 1.8", "14.7744, -325.092, -1.14836, 1.32", "14.9761, -326.989, -1.21208, 1.08", "15.2372, -329.645, -1.30749, 1.56", "15.534, -332.72, -1.43493, 1.56", "15.6941, -334.433, -1.51103, 1.56", "15.8334, -336.014, -1.58085, 1.56", "16.0303, -338.425, -1.67498, 1.56", "16.2155, -340.464, -1.73173, 1.56", "16.4815, -342.812, -1.80111, 1.32", "16.6121, -343.871, -1.83152, 1.32", "16.7436, -345.439, -1.885, 1.32", "16.8615, -347.17, -1.94652, 1.32", "17.0319, -349.741, -2.07992, 1.32", "17.1559, -351.668, -2.17956, 1.32", "17.2638, -353.933, -2.29635, 1.68", "17.4358, -359.849, -2.63186, 1.32", "17.4561, -361.706, -2.75087, 1.32", "17.443, -363.836, -2.90857, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "27.4101, -315.514, -5.90872, 0.96", "29.7265, -316.699, -4.70109, 0.96", "30.8895, -317.276, -4.09936, 1.32", "33.2967, -318.49, -2.86239, 0.96", "35.0905, -319.446, -1.92194, 1.32", "37.3675, -320.735, -0.797181, 1.2", "38.5315, -321.362, -0.258733, 1.2", "39.6681, -321.948, 0.223341, 1.2", "40.4546, -322.37, 0.555679, 1.2", "41.363, -322.87, 0.899746, 1.2", "44.0491, -324.263, 1.75182, 0.96", "45.9624, -325.189, 2.18194, 1.32", "47.0941, -325.685, 2.3949, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.4101, -315.514, -5.90872, 1.08", "27.7223, -319.312, -5.7692, 1.08", "27.9209, -322.748, -5.66281, 0.72", "28.0205, -324.435, -5.68206, 0.72", "28.2364, -328.512, -5.821, 1.2", "28.4026, -331.833, -5.96938, 0.84", "28.4851, -333.841, -6.06759, 0.84", "28.5482, -335.311, -6.17145, 0.84", "28.7076, -339.161, -6.45381, 0.6", "28.8136, -341.303, -6.59911, 0.6", "29.0379, -344.156, -6.76989, 1.2", "29.3728, -347.407, -6.98446, 1.2", "29.7074, -350.144, -7.16322, 0.84", "29.9938, -352.419, -7.29765, 0.84", "30.4195, -356.031, -7.5016, 1.08", "30.7818, -359.16, -7.74734, 0.72", "31.091, -361.933, -8.04723, 1.08", "31.304, -363.843, -8.30024, 1.08", "31.4728, -365.633, -8.57104, 1.08", "31.691, -368.85, -9.09039, 0.72", "31.8022, -370.924, -9.43284, 0.72", "31.842, -372.922, -9.66578, 1.08", "31.8302, -374.44, -9.73996, 1.08", "31.817, -375.465, -9.72836, 1.08", "31.7274, -378.3, -9.66595, 0.72", "31.6549, -379.884, -9.63498, 0.72", "31.4838, -383.406, -9.64006, 1.2", "31.3322, -386.925, -9.70941, 1.2", "31.1721, -391.542, -9.90808, 1.2", "31.0757, -395.989, -10.2122, 0.84", "31.0411, -397.744, -10.383, 1.32", "30.9909, -399.687, -10.6357, 1.32", "30.979, -400.59, -10.7962, 1.32", "30.9543, -402.597, -11.2026, 0.96", "30.9185, -404.387, -11.5651, 1.56", "30.9206, -406.249, -11.8875, 1.56", "30.9498, -407.82, -12.1446, 1.08", "30.9649, -409.344, -12.3859, 1.08", "31.0289, -412.462, -12.9162, 0.84", "31.1169, -413.916, -13.1726, 1.44", "31.4067, -416.615, -13.6791, 1.08", "31.6853, -418.29, -14.0242, 1.08", "32.1773, -420.951, -14.5858, 0.72", "32.7438, -424.132, -15.2438, 1.08", "33.0651, -425.795, -15.6472, 1.08", "33.448, -427.683, -16.1443, 0.96", "34.0863, -430.885, -16.9851, 0.72", "34.4258, -432.481, -17.4559, 0.72", "34.7093, -433.613, -17.8402, 0.72", "35.5244, -436.971, -19.1229, 0.72", "35.7858, -438.294, -19.6812, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.38983, 48.8349, 26.3781, 0.6", "-0.83032, 40.5032, 24.0818, 0.6", "-4.91519, 31.8727, 23.1974, 0.6", "-8.34585, 23.1984, 20.993, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.38983, 48.8349, 26.3781, 0.84", "-1.35582, 41.1469, 22.9158, 0.6", "-8.05961, 34.3946, 20.7851, 0.6", "-14.5445, 27.2865, 19.3841, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.108503, 88.1497, 19.93, 0.6", "-5.02578, 95.8359, 23.149, 0.6", "-11.4451, 102.373, 26.5308, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.108503, 88.1497, 19.93, 0.84", "-4.92996, 96.4582, 20.4453, 0.6", "-8.27928, 105.409, 20.3566, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.0935803, -291.883, 19.6528, 0.6", "-1.64143, -291.561, 20.6402, 0.6", "-3.56782, -291.161, 21.8691, 0.6", "-4.47287, -290.973, 22.4464, 0.6", "-5.55924, -290.747, 23.1394, 0.96", "-14.1064, -287.974, 27.4325, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-0.0935803, -291.883, 19.6528, 0.96", "-0.380495, -293.126, 19.7341, 0.96", "-0.661804, -294.345, 19.8138, 0.72", "-1.12143, -296.337, 19.944, 0.72", "-3.70997, -305.238, 22.2908, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "17.443, -363.836, -2.90857, 0.84", "19.0211, -366.01, -3.93063, 0.84", "20.6481, -367.97, -4.91627, 0.84", "21.0691, -368.505, -5.20524, 0.84", "22.0781, -369.897, -6.00879, 0.84", "23.3133, -371.766, -7.08218, 0.6", "24.3582, -373.437, -8.01693, 1.08", "25.0904, -374.718, -8.71582, 1.08", "26.2106, -376.679, -9.77286, 0.72", "27.1337, -378.37, -10.6162, 0.72", "27.6451, -379.399, -11.1425, 0.72", "28.0638, -380.245, -11.6492, 0.72", "28.4826, -381.154, -12.2139, 1.2", "29.5233, -383.404, -13.5661, 0.84", "30.9358, -386.266, -15.2, 1.08", "32.5118, -389.455, -16.9429, 1.08", "34.0648, -392.666, -18.6803, 0.84", "34.716, -394.091, -19.4123, 0.84", "35.4806, -395.803, -20.2439, 1.32", "36.4368, -398.009, -21.2001, 0.84", "36.8048, -398.816, -21.5187, 0.84", "37.4526, -400.162, -21.9417, 1.32", "38.461, -402.234, -22.5859, 0.84", "39.178, -403.617, -23.1704, 1.44", "40.3856, -406.005, -24.4354, 1.2", "40.9151, -407.066, -25.0922, 1.2", "41.6011, -408.463, -25.9954, 1.44", "42.4723, -410.272, -27.1977, 1.08", "43.9939, -413.57, -29.3886, 0.84", "44.7726, -415.338, -30.5224, 1.44", "45.5219, -417.198, -31.6559, 0.96", "45.9932, -418.585, -32.4111, 0.96", "46.3018, -419.685, -32.9201, 1.44", "46.8065, -422.218, -33.9079, 0.96", "46.8979, -422.902, -34.1362, 0.96", "47.1787, -425.503, -34.9524, 1.44", "47.4388, -428.277, -35.8492, 0.84", "47.6983, -431.415, -37.0425, 1.44", "47.9277, -434.664, -38.3978, 0.84", "47.9781, -435.604, -38.8309, 0.84", "48.132, -438.091, -40.0911, 1.44", "48.4119, -441.552, -41.9745, 1.44", "48.6983, -445.351, -44.096, 1.08", "48.8635, -447.374, -45.2727, 0.72", "49.0531, -449.43, -46.5201, 1.32", "49.1875, -451.25, -47.6591, 0.72", "49.2096, -452.173, -48.2469, 0.72", "49.1417, -454.653, -49.7899, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "17.443, -363.836, -2.90857, 1.08", "17.2312, -366.229, -3.10396, 1.08", "17.1654, -367.809, -3.19923, 1.08", "17.1259, -368.946, -3.2076, 1.08", "17.0176, -371.09, -3.35918, 1.08", "16.8932, -373.682, -3.69715, 1.44", "16.8011, -376.177, -4.09602, 0.96", "16.7902, -378.24, -4.47416, 0.96", "16.8279, -380.249, -4.91531, 0.96", "16.948, -384.04, -5.71825, 0.96", "17.0671, -386.515, -6.18548, 0.84", "17.1652, -387.973, -6.41817, 1.44", "17.3089, -390.224, -6.71401, 1.08", "17.4524, -392.027, -6.89185, 1.08", "17.7039, -394.7, -7.07654, 1.56", "18.1399, -398.857, -7.12906, 1.32", "18.3418, -400.928, -7.1415, 0.96", "18.5194, -402.993, -7.17106, 1.32", "18.8422, -406.84, -7.25408, 1.08", "19.0423, -409.266, -7.35284, 0.72", "19.1903, -411.396, -7.4871, 1.32", "19.3786, -414.376, -7.65674, 1.08", "19.5157, -416.749, -7.76408, 1.56", "19.6717, -419.472, -7.84786, 0.84", "19.8564, -422.789, -7.93781, 0.6", "19.9391, -424.219, -7.97511, 1.08", "20.1067, -427.256, -8.05507, 1.2", "20.2725, -429.978, -8.12359, 0.72", "20.3361, -430.884, -8.15148, 0.72", "20.6576, -435.223, -8.32055, 1.32", "20.7412, -436.017, -8.3607, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "47.0941, -325.685, 2.3949, 0.96", "48.9535, -324.489, 2.74027, 0.96", "49.7014, -324.008, 2.87919, 0.96", "50.6125, -323.422, 3.04842, 0.84", "52.8045, -322.012, 3.45558, 0.84", "54.1318, -321.158, 3.70212, 1.08", "55.2889, -320.413, 3.91706, 1.08", "63.054, -314.606, 5.44462, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "47.0941, -325.685, 2.3949, 0.6", "48.2949, -327.261, 3.2905, 0.6", "49.7426, -329.274, 4.60336, 1.08", "51.2014, -331.51, 6.07289, 0.96", "52.0134, -332.767, 6.89023, 0.96", "52.8601, -334.079, 7.74244, 1.32", "54.408, -336.476, 9.3004, 1.08", "55.0283, -337.508, 10.0286, 1.08", "56.1961, -339.562, 11.6179, 1.08", "57.2399, -341.494, 13.0759, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "35.7858, -438.294, -19.6812, 0.72", "35.6161, -439.699, -20.0269, 0.72", "35.4846, -441.042, -20.3153, 0.72", "35.2902, -442.881, -20.7179, 0.72", "35.1304, -444.099, -20.9708, 0.72", "35.0594, -444.658, -21.0874, 0.72", "34.8454, -446.587, -21.4806, 0.6", "34.718, -447.599, -21.6627, 0.6", "34.5971, -448.479, -21.8085, 0.6", "34.373, -449.996, -22.0217, 0.48", "34.2359, -450.851, -22.1543, 0.48", "33.9151, -452.658, -22.4543, 0.84", "33.4489, -454.693, -22.8223, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "35.7858, -438.294, -19.6812, 0.72", "36.619, -440.274, -19.6222, 0.72", "37.7919, -443.06, -19.5392, 1.2", "38.182, -443.986, -19.5116, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "20.7412, -436.017, -8.3607, 0.48", "18.7772, -437.355, -8.23824, 0.48", "18.4197, -437.573, -8.22337, 0.48", "17.2858, -438.346, -8.18526, 0.48", "16.0245, -439.36, -8.03331, 0.48", "15.4701, -439.857, -7.92033, 0.48", "14.0049, -441.212, -7.57084, 0.96", "12.2908, -442.833, -7.07497, 0.6", "11.0131, -444.118, -6.65638, 0.6", "9.11845, -446.109, -5.96009, 1.08", "7.76733, -447.58, -5.40433, 0.84", "6.9211, -448.566, -5.01014, 0.84", "5.95795, -449.85, -4.46365, 1.2", "4.91993, -451.27, -3.78372, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "20.7412, -436.017, -8.3607, 0.84", "21.2677, -439.311, -8.86733, 0.84", "21.3948, -440.88, -9.09404, 0.84", "21.4811, -442.268, -9.27313, 0.84", "21.6969, -445.803, -9.73664, 0.84", "21.7819, -447.114, -9.90464, 0.84", "21.9798, -450.164, -10.2813, 1.44", "22.1079, -452.417, -10.5744, 1.08", "22.2219, -454.984, -10.8719, 1.08", "22.2972, -457.428, -11.0999, 0.84", "22.3487, -458.962, -11.1881, 0.84", "22.4527, -460.316, -11.2462, 1.08", "22.7304, -462.112, -11.3157, 0.6", "23.028, -463.556, -11.3589, 0.6", "23.35, -465.064, -11.3655, 0.6", "23.804, -467.058, -11.3965, 1.2", "24.2847, -469.053, -11.481, 1.2", "24.5978, -470.437, -11.5649, 1.2", "24.9142, -472.002, -11.6783, 0.96", "25.1088, -473.044, -11.7576, 1.44", "25.4245, -475.111, -11.9119, 1.44", "25.7714, -478.063, -12.123, 0.96", "26.0802, -481.32, -12.3374, 1.32", "26.2053, -482.67, -12.4178, 1.32", "26.4772, -485.698, -12.5744, 0.84", "26.6651, -488.188, -12.6859, 1.32", "26.757, -489.544, -12.7189, 1.32", "26.8502, -491.137, -12.7883, 1.32", "27.02, -494.221, -12.9675, 1.32", "27.0993, -496.251, -13.1037, 0.96", "27.1348, -497.875, -13.2242, 0.96", "27.246, -501.525, -13.5176, 1.44", "27.3172, -503.762, -13.7254, 1.08", "27.3376, -505.56, -13.9148, 1.08", "27.3304, -507.362, -14.1511, 1.08", "27.3531, -509.563, -14.4617, 1.08", "27.3994, -511.924, -14.8017, 1.08", "27.4521, -515.263, -15.3243, 1.08", "27.5703, -520.216, -16.1446, 0.96", "27.7431, -527.821, -17.4566, 1.32", "27.7993, -530.324, -17.9024, 0.84", "27.8278, -531.814, -18.1705, 0.84", "27.8539, -533.841, -18.527, 0.84", "27.8692, -535.391, -18.7775, 0.84", "27.9085, -538.438, -19.2119, 0.84", "27.8857, -539.956, -19.3834, 0.84", "27.829, -541.216, -19.5111, 0.84", "27.744, -542.536, -19.6177, 1.2", "27.5948, -545.017, -19.775, 0.72", "27.4255, -546.949, -19.8902, 1.32", "27.2744, -548.485, -20.0414, 0.84", "27.074, -550.277, -20.237, 1.56", "26.5048, -554.642, -20.827, 0.84", "26.2539, -556.265, -21.0761, 1.32", "25.7029, -559.19, -21.5646, 0.84", "24.7886, -563.536, -22.3082, 0.6", "24.5099, -564.826, -22.5249, 1.08", "23.9768, -567.247, -22.9146, 0.84", "23.5141, -569.26, -23.2464, 1.44", "23.0051, -571.364, -23.574, 0.96", "22.6153, -573.101, -23.8173, 0.72", "22.2196, -574.774, -23.949, 0.72", "21.5354, -577.909, -24.1945, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "57.2399, -341.494, 13.0759, 0.84", "59.7052, -340.975, 13.4801, 0.84", "60.7876, -340.747, 13.6576, 0.84", "63.3343, -340.211, 14.0751, 0.72", "64.9432, -339.872, 14.3389, 0.72", "74.8956, -339.258, 15.0689, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "57.2399, -341.494, 13.0759, 0.72", "58.2774, -343.217, 13.6958, 0.72", "59.3776, -345.044, 14.3532, 0.84", "59.842, -345.815, 14.6307, 0.84", "60.8145, -347.431, 15.2118, 0.6", "61.4878, -348.549, 15.6141, 0.6", "62.1917, -349.718, 16.0347, 0.6", "67.5343, -356.994, 19.6116, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "33.4489, -454.693, -22.8223, 0.48", "29.1365, -455.028, -24.6695, 0.48", "28.1333, -455.106, -25.0993, 1.08", "27.1003, -455.187, -25.5418, 0.48", "25.8042, -455.288, -26.097, 0.96", "24.7078, -455.373, -26.5666, 0.48", "22.5681, -455.539, -27.4831, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "33.4489, -454.693, -22.8223, 0.96", "33.3749, -456.126, -24.0501, 0.96", "33.1818, -458.661, -26.0886, 0.48", "33.1032, -459.658, -26.8224, 0.48", "32.9926, -461.707, -28.2509, 0.84", "32.928, -463.197, -29.275, 0.6", "32.9036, -463.919, -29.7646, 0.6", "32.9042, -465.487, -30.8807, 0.96", "32.9265, -466.534, -31.6342, 0.96", "33.0251, -468.544, -33.1995, 0.72", "33.1939, -470.48, -34.8307, 0.72", "33.427, -471.998, -36.3743, 1.2", "33.6932, -473.421, -37.9243, 1.2", "33.883, -474.276, -38.9384, 1.2", "34.1324, -475.283, -40.2729, 1.08", "34.5013, -476.542, -42.1586, 0.84", "35.0324, -477.844, -44.4099, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "38.182, -443.986, -19.5116, 0.72", "41.8839, -444.585, -19.5116, 0.72", "44.0993, -444.943, -19.5116, 0.72", "45.525, -445.173, -19.5116, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "38.182, -443.986, -19.5116, 0.48", "38.1811, -447.051, -19.5116, 0.48", "38.0872, -448.777, -19.5317, 0.96", "38.0107, -449.576, -19.5449, 0.96", "37.7635, -451.515, -19.58, 0.48", "37.5832, -452.685, -19.6011, 0.48", "37.2794, -454.599, -19.6348, 0.96", "36.931, -456.512, -19.6723, 0.96", "36.6757, -457.778, -19.697, 0.96", "36.2336, -459.668, -19.7473, 1.32", "35.7306, -461.56, -19.8082, 0.96", "35.5384, -462.301, -19.8341, 0.96", "35.3377, -463.193, -19.8652, 0.96", "35.0642, -464.66, -19.9104, 1.32", "34.8634, -466.208, -19.9599, 0.96", "34.7465, -467.903, -20.0152, 0.6", "34.7444, -469.161, -20.1271, 0.6", "34.8663, -470.717, -20.4324, 1.32", "35.1304, -472.336, -20.9274, 0.84", "35.4276, -473.678, -21.4261, 0.84", "35.5941, -474.283, -21.6699, 0.84", "36.3204, -476.694, -22.7094, 0.84", "37.1057, -479.205, -23.8359, 1.44", "37.8803, -481.873, -25.0511, 0.96", "38.1386, -483.008, -25.5105, 0.96", "38.3645, -484.558, -26.03, 0.96", "38.4435, -485.696, -26.3065, 0.96", "38.422, -486.871, -26.4477, 0.96", "38.1045, -489.651, -26.5277, 0.72", "37.5861, -492.511, -26.4479, 1.08", "37.1681, -494.398, -26.3369, 0.72", "36.7293, -496.168, -26.1938, 1.2", "36.2168, -498.209, -25.9943, 0.96", "35.4211, -501.414, -25.6313, 1.44", "34.897, -503.604, -25.3624, 0.96", "34.6109, -504.86, -25.2719, 0.72", "33.9295, -507.997, -25.1696, 1.08", "33.5236, -509.878, -25.1902, 0.6", "33.2543, -511.117, -25.2077, 0.6", "32.9231, -512.63, -25.2247, 1.2", "32.088, -516.113, -25.1627, 0.72", "31.7053, -517.557, -25.1415, 1.08", "31.0348, -519.751, -25.0933, 0.96", "30.3013, -521.903, -25.0324, 0.72", "29.8752, -523.13, -24.9772, 0.72", "28.8086, -526.117, -24.7536, 0.72", "27.945, -528.354, -24.4517, 0.72", "27.5588, -529.33, -24.3381, 1.2", "27.0059, -530.712, -24.2655, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_DBC_b8f064ed89_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.27387, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -6.06293, 9.23129, 9.34376, 2.16 ) }
    dend_73 { pt3dadd( -9.18818, 11.5287, 5.60423, 2.52 ) }
    dend_73 { pt3dadd( -11.4562, 13.0295, 3.16164, 2.52 ) }
    dend_73 { pt3dadd( -13.1057, 14.0255, 1.59056, 2.52 ) }
    dend_73 { pt3dadd( -13.9732, 14.5013, 0.827453, 2.52 ) }
    dend_73 { pt3dadd( -15.0201, 15.0074, 0.026779, 2.28 ) }
    dend_73 { pt3dadd( -17.8098, 16.2703, -1.74421, 1.92 ) }
    dend_73 { pt3dadd( -19.0037, 16.7465, -2.30394, 1.92 ) }
    dend_73 { pt3dadd( -21.5881, 17.6409, -3.37255, 1.8 ) }
    dend_73 { pt3dadd( -23.1392, 18.1575, -3.92747, 1.8 ) }
    dend_73 { pt3dadd( -26.4929, 19.1388, -4.9673, 1.56 ) }
    dend_73 { pt3dadd( -29.0993, 19.8159, -5.66714, 1.92 ) }
    dend_73 { pt3dadd( -31.3472, 20.2977, -6.18216, 1.92 ) }
    dend_73 { pt3dadd( -32.9529, 20.4889, -6.47204, 1.92 ) }
    dend_73 { pt3dadd( -35.0049, 20.5178, -6.75451, 1.92 ) }
    dend_73 { pt3dadd( -38.9303, 20.3148, -7.27446, 1.8 ) }
    dend_73 { pt3dadd( -39.5956, 20.2283, -7.37415, 1.8 ) }
    dend_73 { pt3dadd( -40.9879, 19.9526, -7.58322, 1.8 ) }
    dend_73 { pt3dadd( -44.2891, 19.1487, -8.15615, 1.32 ) }
    dend_73 { pt3dadd( -45.4569, 18.8423, -8.41793, 1.32 ) }
    dend_73 { pt3dadd( -47.7091, 18.2417, -9.13046, 1.92 ) }
    dend_73 { pt3dadd( -48.5869, 18.1812, -9.64352, 1.92 ) }
    dend_73 { pt3dadd( -49.2182, 18.6723, -10.6302, 1.92 ) }
    dend_73 { pt3dadd( -49.5046, 19.0201, -11.254, 1.92 ) }
    dend_73 { pt3dadd( -49.8081, 19.4403, -12.0104, 1.92 ) }
    dend_73 { pt3dadd( -50.2225, 19.6957, -12.6863, 1.92 ) }
    dend_73 { pt3dadd( -50.8912, 19.8051, -13.5078, 1.92 ) }
    dend_73 { pt3dadd( -52.8663, 19.7807, -15.7156, 1.44 ) }
    dend_73 { pt3dadd( -54.3537, 19.6919, -17.2707, 1.44 ) }
    dend_73 { pt3dadd( -55.1084, 19.6154, -18.011, 1.44 ) }
    dend_73 { pt3dadd( -57.0523, 19.3118, -19.8323, 1.44 ) }
    dend_73 { pt3dadd( -58.3335, 19.0383, -20.997, 1.8 ) }
    dend_73 { pt3dadd( -59.3354, 18.7568, -21.8987, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 12.2639, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.83356, 14.5862, 0.838929, 1.32 ) }
    dend_69 { pt3dadd( -2.6446, 17.042, -0.0310362, 1.32 ) }
    dend_69 { pt3dadd( -2.54824, 18.3758, -0.453827, 1.32 ) }
    dend_69 { pt3dadd( -2.45012, 19.8133, -0.852999, 1.32 ) }
    dend_69 { pt3dadd( -2.39165, 20.7103, -1.06847, 1.32 ) }
    dend_69 { pt3dadd( -2.30868, 21.7362, -1.27877, 1.32 ) }
    dend_69 { pt3dadd( -2.19767, 22.9901, -1.40891, 1.32 ) }
    dend_69 { pt3dadd( -2.11883, 23.7759, -1.37771, 1.32 ) }
    dend_69 { pt3dadd( -1.95878, 25.2392, -1.25816, 1.08 ) }
    dend_69 { pt3dadd( -1.76947, 26.8013, -1.09463, 1.56 ) }
    dend_69 { pt3dadd( -1.56698, 28.4599, -0.879365, 1.56 ) }
    dend_69 { pt3dadd( -1.38223, 29.9056, -0.654885, 1.56 ) }
    dend_69 { pt3dadd( -0.87366, 33.2189, -0.0408348, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 9.81289, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.58716, 10.9197, 11.8015, 1.8 ) }
    dend_64 { pt3dadd( -7.3951, 12.0943, 12.2877, 1.8 ) }
    dend_64 { pt3dadd( -8.9758, 14.2186, 13.342, 1.56 ) }
    dend_64 { pt3dadd( -9.42948, 14.8283, 13.6446, 1.56 ) }
    dend_64 { pt3dadd( -10.4658, 16.2211, 14.3359, 1.44 ) }
    dend_64 { pt3dadd( -11.5464, 17.6734, 15.0567, 0.96 ) }
    dend_64 { pt3dadd( -12.0054, 18.2867, 15.3927, 0.96 ) }
    dend_64 { pt3dadd( -13.9045, 20.6799, 16.8263, 1.92 ) }
    dend_64 { pt3dadd( -19.2167, 27.891, 20.5896, 1.92 ) }
    dend_64 { pt3dadd( -26.1495, 33.3917, 24.8801, 1.92 ) }
    dend_64 { pt3dadd( -34.2112, 38.3875, 27.5922, 1.92 ) }
    dend_64 { pt3dadd( -41.5466, 44.5017, 29.7763, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -10.8496, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.6148, -12.9018, 11.3952, 2.64 ) }
    dend_41 { pt3dadd( 1.82906, -15.2715, 11.2134, 2.64 ) }
    dend_41 { pt3dadd( 1.98708, -17.0192, 11.0792, 2.64 ) }
    dend_41 { pt3dadd( 2.13442, -18.6488, 10.9541, 2.64 ) }
    dend_41 { pt3dadd( 2.43423, -21.9647, 10.6997, 2.4 ) }
    dend_41 { pt3dadd( 2.73629, -25.3055, 10.4432, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -11.6001, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 4.99623, -12.2147, 12.8654, 2.16 ) }
    dend_18 { pt3dadd( 5.57089, -14.1689, 12.312, 2.16 ) }
    dend_18 { pt3dadd( 6.00883, -15.5672, 11.9892, 2.16 ) }
    dend_18 { pt3dadd( 6.76272, -17.9743, 11.4336, 2.16 ) }
    dend_18 { pt3dadd( 7.31701, -19.7442, 11.025, 2.16 ) }
    dend_18 { pt3dadd( 7.71892, -21.0275, 10.7288, 2.16 ) }
    dend_18 { pt3dadd( 8.78145, -24.3698, 9.94534, 2.52 ) }
    dend_18 { pt3dadd( 9.53233, -26.9663, 9.33937, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 11.9694, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.142174, 15.2668, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.319266, 18.514, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.733633, 21.4299, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.943147, 22.9043, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.19844, 24.7008, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.28978 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.28978 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.28978 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -59.3354, 18.7568, -21.8987, 1.2 ) }
    dend_75 { pt3dadd( -60.6626, 21.0178, -21.0304, 1.2 ) }
    dend_75 { pt3dadd( -62.1449, 22.6994, -20.2723, 1.2 ) }
    dend_75 { pt3dadd( -63.24, 23.4366, -19.8584, 1.2 ) }
    dend_75 { pt3dadd( -63.9627, 23.8398, -19.6117, 1.56 ) }
    dend_75 { pt3dadd( -64.421, 24.0329, -19.546, 1.56 ) }
    dend_75 { pt3dadd( -65.2362, 24.3095, -19.5123, 1.56 ) }
    dend_75 { pt3dadd( -67.5124, 24.8347, -19.522, 0.96 ) }
    dend_75 { pt3dadd( -71.0735, 25.4588, -19.7435, 1.56 ) }
    dend_75 { pt3dadd( -71.4276, 25.5134, -19.7737, 1.56 ) }
    dend_75 { pt3dadd( -75.8849, 26.11, -20.2849, 1.08 ) }
    dend_75 { pt3dadd( -77.2591, 26.2556, -20.5042, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -59.3354, 18.7568, -21.8987, 1.08 ) }
    dend_74 { pt3dadd( -60.9208, 18.5118, -22.9231, 1.08 ) }
    dend_74 { pt3dadd( -62.579, 18.0703, -24.1078, 1.56 ) }
    dend_74 { pt3dadd( -65.9621, 16.7258, -27.1205, 0.84 ) }
    dend_74 { pt3dadd( -67.1963, 16.0538, -28.531, 0.84 ) }
    dend_74 { pt3dadd( -67.583, 15.7861, -29.0604, 0.84 ) }
    dend_74 { pt3dadd( -68.5397, 15.0059, -30.5549, 0.84 ) }
    dend_74 { pt3dadd( -69.3564, 14.0578, -32.2857, 0.84 ) }
    dend_74 { pt3dadd( -70.1986, 12.6716, -34.6201, 0.84 ) }
    dend_74 { pt3dadd( -70.7915, 11.2681, -36.6401, 0.84 ) }
    dend_74 { pt3dadd( -71.1375, 10.3588, -37.851, 0.84 ) }
    dend_74 { pt3dadd( -71.5194, 9.45549, -39.0295, 0.84 ) }
    dend_74 { pt3dadd( -71.871, 8.7582, -39.8936, 0.84 ) }
    dend_74 { pt3dadd( -72.5651, 7.65692, -41.0596, 0.84 ) }
    dend_74 { pt3dadd( -73.3103, 6.71103, -41.7873, 0.84 ) }
    dend_74 { pt3dadd( -73.7983, 6.20846, -42.0818, 0.84 ) }
    dend_74 { pt3dadd( -74.8786, 5.27885, -42.5357, 0.84 ) }
    dend_74 { pt3dadd( -75.6717, 4.69084, -42.767, 0.84 ) }
    dend_74 { pt3dadd( -76.9325, 3.86082, -43.02, 0.84 ) }
    dend_74 { pt3dadd( -78.4925, 2.79719, -43.259, 0.84 ) }
    dend_74 { pt3dadd( -80.1815, 1.50892, -43.4743, 0.84 ) }
    dend_74 { pt3dadd( -81.2444, 0.528279, -43.5816, 0.84 ) }
    dend_74 { pt3dadd( -82.4741, -0.820305, -43.7144, 0.84 ) }
    dend_74 { pt3dadd( -84.3952, -3.3019, -44.0358, 0.84 ) }
    dend_74 { pt3dadd( -85.895, -5.61845, -44.3729, 1.32 ) }
    dend_74 { pt3dadd( -86.95, -7.53041, -44.6443, 0.6 ) }
    dend_74 { pt3dadd( -87.9907, -9.79921, -44.9479, 1.2 ) }
    dend_74 { pt3dadd( -88.712, -11.7164, -45.2268, 0.72 ) }
    dend_74 { pt3dadd( -89.2389, -13.5509, -45.5356, 0.72 ) }
    dend_74 { pt3dadd( -89.4721, -14.7514, -45.79, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -0.87366, 33.2189, -0.0408348, 1.32 ) }
    dend_70 { pt3dadd( -0.11258, 34.7138, 0.733007, 1.32 ) }
    dend_70 { pt3dadd( 1.6094, 38.3797, 2.36534, 0.96 ) }
    dend_70 { pt3dadd( 2.30326, 40.0855, 3.01551, 0.96 ) }
    dend_70 { pt3dadd( 2.87062, 41.8694, 3.57981, 1.2 ) }
    dend_70 { pt3dadd( 3.10836, 42.8885, 3.8394, 1.2 ) }
    dend_70 { pt3dadd( 3.26699, 43.7877, 4.03668, 1.2 ) }
    dend_70 { pt3dadd( 3.30306, 44.7962, 4.16595, 1.44 ) }
    dend_70 { pt3dadd( 3.06778, 46.1803, 4.16795, 1.08 ) }
    dend_70 { pt3dadd( 2.52081, 47.9389, 4.16952, 1.08 ) }
    dend_70 { pt3dadd( 1.75868, 49.8523, 4.17088, 1.56 ) }
    dend_70 { pt3dadd( 1.51699, 50.374, 4.17107, 1.56 ) }
    dend_70 { pt3dadd( 0.771854, 51.7865, 4.17072, 1.56 ) }
    dend_70 { pt3dadd( -0.315571, 53.6033, 4.16796, 1.56 ) }
    dend_70 { pt3dadd( -0.413173, 53.7435, 4.16733, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -41.5466, 44.5017, 29.7763, 1.2 ) }
    dend_66 { pt3dadd( -48.098, 50.9047, 33.1898, 1.2 ) }
    dend_66 { pt3dadd( -53.1943, 57.3789, 38.4419, 1.2 ) }
    dend_66 { pt3dadd( -59.9434, 63.6701, 41.6968, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -41.5466, 44.5017, 29.7763, 1.44 ) }
    dend_65 { pt3dadd( -48.1682, 50.8702, 33.1251, 1.2 ) }
    dend_65 { pt3dadd( -53.5684, 58.0867, 36.7491, 1.2 ) }
    dend_65 { pt3dadd( -59.679, 65.0169, 39.8223, 1.2 ) }
    dend_65 { pt3dadd( -66.6637, 71.3601, 42.3976, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.73629, -25.3055, 10.4432, 1.2 ) }
    dend_61 { pt3dadd( 2.39845, -29.0301, 9.7317, 1.2 ) }
    dend_61 { pt3dadd( 2.24586, -31.2591, 9.30257, 1.2 ) }
    dend_61 { pt3dadd( 2.12959, -33.7681, 8.82883, 1.2 ) }
    dend_61 { pt3dadd( 2.06048, -35.9849, 8.4222, 1.2 ) }
    dend_61 { pt3dadd( 2.04954, -37.5645, 8.14594, 1.2 ) }
    dend_61 { pt3dadd( 2.05062, -38.7468, 7.93872, 1.2 ) }
    dend_61 { pt3dadd( 2.10853, -39.6406, 7.76487, 1.2 ) }
    dend_61 { pt3dadd( 2.22939, -40.7979, 7.5495, 1.2 ) }
    dend_61 { pt3dadd( 2.3412, -41.4783, 7.45486, 1.2 ) }
    dend_61 { pt3dadd( 2.6105, -42.7681, 7.31394, 1.2 ) }
    dend_61 { pt3dadd( 2.79502, -43.7122, 7.2271, 1.2 ) }
    dend_61 { pt3dadd( 2.92088, -44.7256, 7.15748, 1.2 ) }
    dend_61 { pt3dadd( 2.92515, -45.5406, 7.1158, 1.2 ) }
    dend_61 { pt3dadd( 2.77278, -47.1555, 7.06028, 1.2 ) }
    dend_61 { pt3dadd( 2.66874, -47.8338, 7.04474, 1.2 ) }
    dend_61 { pt3dadd( 2.3959, -49.2823, 7.01702, 1.2 ) }
    dend_61 { pt3dadd( 1.92468, -51.7408, 6.98384, 1.68 ) }
    dend_61 { pt3dadd( 1.32821, -54.7322, 6.94226, 1.08 ) }
    dend_61 { pt3dadd( 0.814417, -57.3515, 6.9026, 0.72 ) }
    dend_61 { pt3dadd( 0.583511, -58.6898, 6.88127, 1.92 ) }
    dend_61 { pt3dadd( 0.0978234, -62.1848, 6.82613, 0.96 ) }
    dend_61 { pt3dadd( -0.160579, -64.7569, 6.78839, 0.84 ) }
    dend_61 { pt3dadd( -0.228726, -66.2286, 6.76728, 1.44 ) }
    dend_61 { pt3dadd( -0.204296, -68.1664, 6.74258, 1.08 ) }
    dend_61 { pt3dadd( -0.10495, -69.9889, 6.72605, 1.08 ) }
    dend_61 { pt3dadd( 0.126571, -72.9189, 6.711, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( 0.236845, -74.1701, 6.71222, 1.44 ) }
    dend_61 { pt3dadd( 0.364828, -75.9429, 6.71545, 1.44 ) }
    dend_61 { pt3dadd( 0.488299, -78.3248, 6.72129, 0.72 ) }
    dend_61 { pt3dadd( 0.516249, -79.2572, 6.72395, 1.2 ) }
    dend_61 { pt3dadd( 0.538475, -80.9684, 6.72907, 1.2 ) }
    dend_61 { pt3dadd( 0.565017, -82.2937, 6.73282, 1.56 ) }
    dend_61 { pt3dadd( 0.572767, -84.1212, 6.6842, 1.32 ) }
    dend_61 { pt3dadd( 0.534968, -86.1839, 6.58466, 0.84 ) }
    dend_61 { pt3dadd( 0.536001, -88.5998, 6.42767, 1.56 ) }
    dend_61 { pt3dadd( 0.562112, -90.0275, 6.32391, 1.56 ) }
    dend_61 { pt3dadd( 0.636752, -92.5731, 6.12682, 0.96 ) }
    dend_61 { pt3dadd( 0.721386, -94.9196, 5.93673, 0.96 ) }
    dend_61 { pt3dadd( 0.771991, -96.7294, 5.78843, 1.32 ) }
    dend_61 { pt3dadd( 0.750984, -98.9495, 5.61697, 1.32 ) }
    dend_61 { pt3dadd( 0.589889, -102.03, 5.41315, 0.72 ) }
    dend_61 { pt3dadd( 0.493154, -103.07, 5.35483, 1.56 ) }
    dend_61 { pt3dadd( 0.343492, -104.104, 5.29744, 1.56 ) }
    dend_61 { pt3dadd( -0.020923, -106.107, 5.19305, 0.96 ) }
    dend_61 { pt3dadd( -0.458889, -107.834, 5.07539, 1.68 ) }
    dend_61 { pt3dadd( -1.25638, -110.537, 4.79381, 1.08 ) }
    dend_61 { pt3dadd( -1.91727, -112.726, 4.50482, 0.96 ) }
    dend_61 { pt3dadd( -2.68886, -115.523, 4.09651, 1.44 ) }
    dend_61 { pt3dadd( -3.06789, -117.036, 3.86198, 1.08 ) }
    dend_61 { pt3dadd( -3.62126, -119.441, 3.44798, 0.84 ) }
    dend_61 { pt3dadd( -4.07224, -121.602, 3.02956, 1.44 ) }
    dend_61 { pt3dadd( -4.28331, -122.672, 2.80968, 1.44 ) }
    dend_61 { pt3dadd( -4.64863, -124.784, 2.38451, 0.72 ) }
    dend_61 { pt3dadd( -4.86995, -126.328, 2.06891, 0.72 ) }
    dend_61 { pt3dadd( -5.2281, -129.108, 1.48881, 1.32 ) }
    dend_61 { pt3dadd( -5.47808, -131.165, 1.02987, 0.96 ) }
    dend_61 { pt3dadd( -5.62833, -132.046, 0.834027, 0.96 ) }
    dend_61 { pt3dadd( -5.81561, -133.028, 0.585392, 0.96 ) }
    dend_61 { pt3dadd( -6.12279, -134.286, 0.22311, 0.96 ) }
    dend_61 { pt3dadd( -6.32644, -135.019, 0.0129333, 0.96 ) }
    dend_61 { pt3dadd( -6.63828, -136.011, -0.305416, 0.96 ) }
    dend_61 { pt3dadd( -6.98174, -137.051, -0.651919, 0.96 ) }
    dend_61 { pt3dadd( -8.02291, -140.142, -1.68061, 1.44 ) }
    dend_61 { pt3dadd( -9.2154, -143.702, -2.8226, 0.48 ) }
    dend_61 { pt3dadd( -9.76308, -145.427, -3.33774, 1.56 ) }
    dend_61 { pt3dadd( -10.8097, -148.961, -4.32667, 0.84 ) }
    dend_61 { pt3dadd( -11.0663, -149.923, -4.60042, 0.84 ) }
    dend_61 { pt3dadd( -11.4628, -151.628, -5.08804, 0.84 ) }
    dend_61 { pt3dadd( -11.7267, -153.035, -5.45874, 0.84 ) }
    dend_61 { pt3dadd( -11.9233, -154.42, -5.77327, 0.84 ) }
    dend_61 { pt3dadd( -12.1041, -155.754, -6.03684, 0.84 ) }
    dend_61 { pt3dadd( -12.5504, -159.372, -6.64463, 0.6 ) }
    dend_61 { pt3dadd( -12.8147, -161.37, -7.00046, 1.08 ) }
    dend_61 { pt3dadd( -13.2113, -164.146, -7.52508, 0.72 ) }
    dend_61 { pt3dadd( -13.6224, -166.729, -8.02533, 0.6 ) }
    dend_61 { pt3dadd( -13.852, -167.96, -8.25554, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.73629, -25.3055, 10.4432, 1.92 ) }
    dend_42 { pt3dadd( 2.8956, -28.9625, 10.1749, 1.92 ) }
    dend_42 { pt3dadd( 3.07001, -32.9659, 9.88115, 1.92 ) }
    dend_42 { pt3dadd( 3.26671, -37.481, 9.54985, 2.28 ) }
    dend_42 { pt3dadd( 3.37115, -39.8781, 9.37396, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.53233, -26.9663, 9.33937, 1.32 ) }
    dend_40 { pt3dadd( 12.1665, -28.3375, 9.62058, 1.32 ) }
    dend_40 { pt3dadd( 13.9632, -29.0808, 9.85499, 1.32 ) }
    dend_40 { pt3dadd( 15.4357, -29.6023, 10.0699, 1.32 ) }
    dend_40 { pt3dadd( 17.0267, -30.1201, 10.3197, 1.32 ) }
    dend_40 { pt3dadd( 19.1569, -30.7494, 10.6872, 1.32 ) }
    dend_40 { pt3dadd( 20.2807, -31.0817, 10.898, 1.32 ) }
    dend_40 { pt3dadd( 23.2199, -31.9128, 11.5706, 1.08 ) }
    dend_40 { pt3dadd( 24.1546, -32.1667, 11.8068, 1.08 ) }
    dend_40 { pt3dadd( 24.5416, -32.2751, 11.912, 1.08 ) }
    dend_40 { pt3dadd( 26.611, -32.9044, 12.5156, 1.44 ) }
    dend_40 { pt3dadd( 28.1914, -33.505, 12.9734, 1.08 ) }
    dend_40 { pt3dadd( 28.9827, -33.8856, 13.202, 1.08 ) }
    dend_40 { pt3dadd( 30.859, -34.9125, 13.6969, 1.08 ) }
    dend_40 { pt3dadd( 32.0746, -35.5798, 13.9782, 0.84 ) }
    dend_40 { pt3dadd( 33.289, -36.2516, 14.2202, 0.84 ) }
    dend_40 { pt3dadd( 34.7496, -36.989, 14.4588, 0.84 ) }
    dend_40 { pt3dadd( 35.9358, -37.5621, 14.6397, 0.84 ) }
    dend_40 { pt3dadd( 38.8213, -38.9296, 14.9448, 1.2 ) }
    dend_40 { pt3dadd( 40.4565, -39.6843, 15.0221, 0.84 ) }
    dend_40 { pt3dadd( 41.8595, -40.2583, 15.0037, 0.84 ) }
    dend_40 { pt3dadd( 44.6069, -41.2431, 14.8516, 0.96 ) }
    dend_40 { pt3dadd( 47.3125, -42.1821, 14.6661, 0.72 ) }
    dend_40 { pt3dadd( 50.3285, -43.2156, 14.3935, 1.2 ) }
    dend_40 { pt3dadd( 51.9927, -43.7943, 14.1752, 1.2 ) }
    dend_40 { pt3dadd( 53.7464, -44.3488, 13.86, 0.6 ) }
    dend_40 { pt3dadd( 54.5609, -44.5796, 13.6697, 0.6 ) }
    dend_40 { pt3dadd( 64.2198, -46.9967, 13.1898, 0.6 ) }
    dend_40 { pt3dadd( 73.2362, -50.9734, 12.1027, 0.6 ) }
    dend_40 { pt3dadd( 83.0037, -52.9543, 11.6046, 0.6 ) }
    dend_40 { pt3dadd( 92.9763, -53.5039, 11.142, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.53233, -26.9663, 9.33937, 1.8 ) }
    dend_19 { pt3dadd( 9.64567, -30.0629, 9.41443, 1.8 ) }
    dend_19 { pt3dadd( 9.87169, -33.2242, 9.4804, 1.8 ) }
    dend_19 { pt3dadd( 10.0761, -35.0718, 9.51282, 1.8 ) }
    dend_19 { pt3dadd( 10.1953, -35.9797, 9.50593, 1.8 ) }
    dend_19 { pt3dadd( 10.3814, -37.2924, 9.47451, 1.8 ) }
    dend_19 { pt3dadd( 10.5704, -38.4994, 9.47986, 1.8 ) }
    dend_19 { pt3dadd( 10.7843, -39.4857, 9.50885, 1.8 ) }
    dend_19 { pt3dadd( 11.0807, -41.0807, 9.60879, 1.8 ) }
    dend_19 { pt3dadd( 11.1988, -42.1361, 9.69139, 1.8 ) }
    dend_19 { pt3dadd( 11.3067, -43.6213, 9.8227, 1.8 ) }
    dend_19 { pt3dadd( 11.3958, -46.3689, 9.95725, 1.8 ) }
    dend_19 { pt3dadd( 11.4103, -47.7762, 9.99115, 1.8 ) }
    dend_19 { pt3dadd( 11.4093, -50.6043, 10.0069, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 11.4412, -52.7841, 9.95541, 1.92 ) }
    dend_19 { pt3dadd( 11.4835, -53.6904, 9.90715, 1.92 ) }
    dend_19 { pt3dadd( 11.745, -58.8553, 9.47965, 2.16 ) }
    dend_19 { pt3dadd( 11.8637, -60.9038, 9.21384, 2.16 ) }
    dend_19 { pt3dadd( 11.9829, -62.291, 9.00036, 2.16 ) }
    dend_19 { pt3dadd( 12.3394, -64.9828, 8.52613, 1.92 ) }
    dend_19 { pt3dadd( 12.6477, -66.6807, 8.19909, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.19844, 24.7008, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 2.62662, 27.3382, 12.9302, 1.8 ) }
    dend_1 { pt3dadd( 3.92656, 29.7388, 13.9291, 1.8 ) }
    dend_1 { pt3dadd( 5.28695, 32.2511, 14.9744, 1.8 ) }
    dend_1 { pt3dadd( 6.88688, 35.2057, 16.2039, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.933573 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.933573 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.933573 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -77.2591, 26.2556, -20.5042, 1.68 ) }
    dend_77 { pt3dadd( -77.5506, 26.2428, -20.5582, 1.68 ) }
    dend_77 { pt3dadd( -80.9922, 26.2584, -21.1265, 1.2 ) }
    dend_77 { pt3dadd( -83.7109, 26.4297, -21.5273, 1.68 ) }
    dend_77 { pt3dadd( -84.9143, 26.5644, -21.6986, 1.68 ) }
    dend_77 { pt3dadd( -86.6739, 26.872, -21.9594, 1.2 ) }
    dend_77 { pt3dadd( -89.757, 27.5392, -22.4618, 1.2 ) }
    dend_77 { pt3dadd( -91.5043, 28.0399, -22.8604, 0.84 ) }
    dend_77 { pt3dadd( -93.2246, 28.746, -23.4415, 1.32 ) }
    dend_77 { pt3dadd( -94.2154, 29.2393, -23.9184, 1.32 ) }
    dend_77 { pt3dadd( -95.815, 30.1022, -24.8765, 0.84 ) }
    dend_77 { pt3dadd( -96.4975, 30.4928, -25.3716, 0.84 ) }
    dend_77 { pt3dadd( -98.8901, 31.9378, -27.3622, 0.84 ) }
    dend_77 { pt3dadd( -100.701, 33.024, -28.9426, 0.84 ) }
    dend_77 { pt3dadd( -101.905, 33.7623, -29.9965, 0.84 ) }
    dend_77 { pt3dadd( -102.837, 34.3288, -30.7427, 0.84 ) }
    dend_77 { pt3dadd( -104.091, 35.058, -31.6093, 0.84 ) }
    dend_77 { pt3dadd( -105.353, 35.798, -32.3228, 0.84 ) }
    dend_77 { pt3dadd( -107.165, 36.944, -33.1192, 0.84 ) }
    dend_77 { pt3dadd( -108.42, 37.7713, -33.5759, 0.84 ) }
    dend_77 { pt3dadd( -110.154, 38.954, -34.1453, 0.84 ) }
    dend_77 { pt3dadd( -112.315, 40.5178, -34.8608, 0.84 ) }
    dend_77 { pt3dadd( -113.45, 41.3887, -35.2246, 0.84 ) }
    dend_77 { pt3dadd( -115.756, 43.2074, -35.9998, 1.32 ) }
    dend_77 { pt3dadd( -117.377, 44.4992, -36.5733, 1.32 ) }
    dend_77 { pt3dadd( -119.55, 46.344, -37.3586, 0.96 ) }
    dend_77 { pt3dadd( -121.162, 47.8211, -37.9962, 0.96 ) }
    dend_77 { pt3dadd( -122.077, 48.643, -38.3569, 0.96 ) }
    dend_77 { pt3dadd( -123.331, 49.6847, -38.8774, 0.96 ) }
    dend_77 { pt3dadd( -124.441, 50.4741, -39.325, 0.96 ) }
    dend_77 { pt3dadd( -127.483, 52.3891, -40.4652, 0.72 ) }
    dend_77 { pt3dadd( -128.595, 52.9872, -40.8486, 0.72 ) }
    dend_77 { pt3dadd( -132.96, 54.9589, -42.1849, 1.08 ) }
    dend_77 { pt3dadd( -134.217, 55.4576, -42.5408, 1.08 ) }
    dend_77 { pt3dadd( -138.255, 57.0524, -43.4886, 1.08 ) }
    dend_77 { pt3dadd( -140.344, 57.8878, -43.9737, 1.08 ) }
    dend_77 { pt3dadd( -142.668, 58.9241, -44.4941, 1.08 ) }
    dend_77 { pt3dadd( -144.702, 59.9685, -44.9519, 1.08 ) }
    dend_77 { pt3dadd( -145.422, 60.3981, -45.1434, 1.08 ) }
    dend_77 { pt3dadd( -148.507, 62.4437, -46.0604, 1.08 ) }
    dend_77 { pt3dadd( -150.839, 64.1369, -46.8746, 1.08 ) }
    dend_77 { pt3dadd( -155.236, 67.3553, -48.5471, 1.44 ) }
    dend_77 { pt3dadd( -156.405, 68.1872, -49.0167, 1.44 ) }
    dend_77 { pt3dadd( -159.248, 69.9635, -50.1508, 1.2 ) }
    dend_77 { pt3dadd( -160.403, 70.5442, -50.5221, 1.2 ) }
    dend_77 { pt3dadd( -162.018, 71.1624, -50.919, 1.2 ) }
    dend_77 { pt3dadd( -166.639, 72.5915, -51.7125, 1.08 ) }
    dend_77 { pt3dadd( -169.514, 73.3444, -52.1696, 1.08 ) }
    dend_77 { pt3dadd( -173.072, 74.2705, -52.6683, 1.08 ) }
    dend_77 { pt3dadd( -178.148, 75.5485, -53.3233, 0.72 ) }
    dend_77 { pt3dadd( -181.46, 76.3595, -53.7578, 0.72 ) }
    dend_77 { pt3dadd( -184.105, 76.9918, -54.1023, 1.08 ) }
    dend_77 { pt3dadd( -187.344, 77.6756, -54.5177, 0.84 ) }
    dend_77 { pt3dadd( -189.203, 77.9386, -54.7937, 0.84 ) }
    dend_77 { pt3dadd( -190.51, 78.0397, -55.0397, 0.84 ) }
    dend_77 { pt3dadd( -192.065, 78.1, -55.4051, 0.84 ) }
    dend_77 { pt3dadd( -194.746, 78.0512, -55.9872, 0.84 ) }
    dend_77 { pt3dadd( -198.582, 77.7338, -56.6354, 0.84 ) }
    dend_77 { pt3dadd( -204.424, 76.8612, -57.3467, 0.6 ) }
    dend_77 { pt3dadd( -205.262, 76.7003, -57.4516, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -77.2591, 26.2556, -20.5042, 1.32 ) }
    dend_76 { pt3dadd( -77.6495, 27.3882, -21.0382, 1.32 ) }
    dend_76 { pt3dadd( -78.1998, 28.9496, -21.8495, 0.84 ) }
    dend_76 { pt3dadd( -78.8154, 30.8804, -22.9465, 1.44 ) }
    dend_76 { pt3dadd( -79.7439, 33.6349, -24.7216, 1.08 ) }
    dend_76 { pt3dadd( -80.3766, 35.2196, -25.817, 1.08 ) }
    dend_76 { pt3dadd( -80.6254, 35.7535, -26.2108, 1.08 ) }
    dend_76 { pt3dadd( -81.6045, 37.5264, -27.7085, 1.56 ) }
    dend_76 { pt3dadd( -82.7424, 39.1172, -29.2503, 0.96 ) }
    dend_76 { pt3dadd( -83.6812, 40.1081, -30.326, 0.96 ) }
    dend_76 { pt3dadd( -84.8484, 40.9099, -31.2234, 0.96 ) }
    dend_76 { pt3dadd( -85.7869, 41.3313, -31.7287, 0.96 ) }
    dend_76 { pt3dadd( -86.6838, 41.6116, -32.1069, 0.96 ) }
    dend_76 { pt3dadd( -87.5705, 41.7767, -32.3835, 0.96 ) }
    dend_76 { pt3dadd( -88.8363, 41.9828, -32.6888, 0.96 ) }
    dend_76 { pt3dadd( -91.5237, 42.4636, -33.3025, 0.72 ) }
    dend_76 { pt3dadd( -93.8772, 42.836, -33.8716, 0.72 ) }
    dend_76 { pt3dadd( -95.6287, 43.0952, -34.29, 0.72 ) }
    dend_76 { pt3dadd( -96.9452, 43.2683, -34.615, 0.72 ) }
    dend_76 { pt3dadd( -98.5768, 43.4736, -35.0359, 0.72 ) }
    dend_76 { pt3dadd( -101.081, 43.8295, -35.7125, 0.72 ) }
    dend_76 { pt3dadd( -103.771, 44.2789, -36.4353, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.413173, 53.7435, 4.16733, 1.32 ) }
    dend_72 { pt3dadd( -0.98325, 54.775, 4.56976, 1.32 ) }
    dend_72 { pt3dadd( -1.78686, 56.1017, 5.0252, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -2.88096, 57.9136, 5.61411, 1.08 ) }
    dend_72 { pt3dadd( -3.55678, 59.0815, 5.96996, 1.08 ) }
    dend_72 { pt3dadd( -3.9408, 59.7966, 6.1691, 1.08 ) }
    dend_72 { pt3dadd( -4.49574, 60.9024, 6.45109, 1.08 ) }
    dend_72 { pt3dadd( -5.1191, 62.1277, 6.67538, 1.08 ) }
    dend_72 { pt3dadd( -5.41235, 62.6971, 6.7628, 1.08 ) }
    dend_72 { pt3dadd( -5.76087, 63.4118, 6.83393, 1.08 ) }
    dend_72 { pt3dadd( -6.2283, 64.3227, 6.91765, 1.08 ) }
    dend_72 { pt3dadd( -6.58944, 64.9224, 6.97941, 1.08 ) }
    dend_72 { pt3dadd( -7.00305, 65.422, 7.03977, 1.08 ) }
    dend_72 { pt3dadd( -7.52111, 65.8351, 7.09762, 1.08 ) }
    dend_72 { pt3dadd( -8.31462, 66.3642, 7.16902, 1.08 ) }
    dend_72 { pt3dadd( -9.31398, 67.0004, 7.27299, 1.08 ) }
    dend_72 { pt3dadd( -10.1959, 67.584, 7.37822, 1.08 ) }
    dend_72 { pt3dadd( -11.1394, 68.3095, 7.51046, 1.08 ) }
    dend_72 { pt3dadd( -11.9852, 69.236, 7.51942, 0.96 ) }
    dend_72 { pt3dadd( -12.2358, 69.9056, 7.39097, 0.96 ) }
    dend_72 { pt3dadd( -12.3117, 70.9316, 7.07045, 0.96 ) }
    dend_72 { pt3dadd( -12.2779, 71.7706, 6.78259, 0.96 ) }
    dend_72 { pt3dadd( -12.2099, 72.4953, 6.5275, 0.96 ) }
    dend_72 { pt3dadd( -11.8748, 75.2611, 5.53417, 0.72 ) }
    dend_72 { pt3dadd( -11.7517, 76.4053, 5.09801, 0.72 ) }
    dend_72 { pt3dadd( -11.7013, 77.3899, 4.71711, 0.72 ) }
    dend_72 { pt3dadd( -11.693, 78.4448, 4.3398, 0.72 ) }
    dend_72 { pt3dadd( -11.7439, 80.2301, 3.81669, 0.72 ) }
    dend_72 { pt3dadd( -11.7936, 81.1188, 3.62422, 0.72 ) }
    dend_72 { pt3dadd( -11.8799, 81.9539, 3.53849, 0.72 ) }
    dend_72 { pt3dadd( -12.051, 83.1573, 3.37229, 0.72 ) }
    dend_72 { pt3dadd( -12.3266, 85.013, 3.08613, 0.72 ) }
    dend_72 { pt3dadd( -12.5802, 86.3405, 2.87437, 0.72 ) }
    dend_72 { pt3dadd( -12.8663, 87.449, 2.70051, 0.72 ) }
    dend_72 { pt3dadd( -13.4252, 89.1519, 2.43745, 1.2 ) }
    dend_72 { pt3dadd( -14.6109, 91.7513, 2.05973, 1.08 ) }
    dend_72 { pt3dadd( -15.378, 92.896, 1.92229, 1.08 ) }
    dend_72 { pt3dadd( -16.2343, 93.8845, 1.83077, 1.08 ) }
    dend_72 { pt3dadd( -16.8846, 94.5644, 1.80163, 1.08 ) }
    dend_72 { pt3dadd( -17.4905, 95.1645, 1.77696, 0.72 ) }
    dend_72 { pt3dadd( -19.223, 96.8477, 1.68542, 1.2 ) }
    dend_72 { pt3dadd( -21.082, 98.6383, 1.63082, 1.08 ) }
    dend_72 { pt3dadd( -22.6469, 100.184, 1.591, 1.44 ) }
    dend_72 { pt3dadd( -23.4153, 101.06, 1.57243, 1.44 ) }
    dend_72 { pt3dadd( -24.5724, 102.709, 1.54136, 1.2 ) }
    dend_72 { pt3dadd( -25.2063, 103.881, 1.52613, 1.2 ) }
    dend_72 { pt3dadd( -25.8715, 105.625, 1.53739, 1.08 ) }
    dend_72 { pt3dadd( -26.3673, 107.642, 1.60478, 1.08 ) }
    dend_72 { pt3dadd( -26.7401, 109.643, 1.75024, 0.96 ) }
    dend_72 { pt3dadd( -27.0458, 111.649, 1.96079, 0.96 ) }
    dend_72 { pt3dadd( -27.1697, 112.697, 2.11921, 1.2 ) }
    dend_72 { pt3dadd( -27.2772, 113.954, 2.24345, 0.72 ) }
    dend_72 { pt3dadd( -27.3404, 116.457, 2.30092, 1.2 ) }
    dend_72 { pt3dadd( -27.3384, 117.12, 2.25716, 1.2 ) }
    dend_72 { pt3dadd( -27.3996, 118.431, 2.09081, 1.2 ) }
    dend_72 { pt3dadd( -27.5716, 119.722, 1.84929, 1.2 ) }
    dend_72 { pt3dadd( -28.0957, 122.196, 1.23252, 1.2 ) }
    dend_72 { pt3dadd( -28.4599, 123.3, 0.875849, 1.2 ) }
    dend_72 { pt3dadd( -28.8057, 123.984, 0.614366, 1.2 ) }
    dend_72 { pt3dadd( -29.8224, 125.347, 0.13348, 0.96 ) }
    dend_72 { pt3dadd( -30.6706, 126.132, -0.0591405, 1.2 ) }
    dend_72 { pt3dadd( -31.2316, 126.573, -0.107883, 1.2 ) }
    dend_72 { pt3dadd( -32.1858, 127.274, -0.103742, 1.2 ) }
    dend_72 { pt3dadd( -32.7832, 127.724, -0.100587, 1.2 ) }
    dend_72 { pt3dadd( -34.2505, 128.935, -0.091393, 1.2 ) }
    dend_72 { pt3dadd( -35.9036, 130.566, -0.0794076, 1.2 ) }
    dend_72 { pt3dadd( -36.7813, 131.598, -0.072801, 1.2 ) }
    dend_72 { pt3dadd( -37.3441, 132.335, -0.0689369, 1.2 ) }
    dend_72 { pt3dadd( -37.9499, 133.251, -0.0649725, 1.2 ) }
    dend_72 { pt3dadd( -38.4626, 134.137, -0.0618546, 1.2 ) }
    dend_72 { pt3dadd( -39.2604, 135.846, -0.0574682, 0.84 ) }
    dend_72 { pt3dadd( -39.9612, 137.578, -0.0328283, 1.32 ) }
    dend_72 { pt3dadd( -40.9477, 140.165, 0.0298504, 0.84 ) }
    dend_72 { pt3dadd( -41.4344, 141.463, 0.0731551, 0.84 ) }
    dend_72 { pt3dadd( -41.8164, 142.482, 0.115487, 0.84 ) }
    dend_72 { pt3dadd( -42.329, 143.867, 0.183276, 0.84 ) }
    dend_72 { pt3dadd( -42.9523, 145.45, 0.308259, 0.84 ) }
    dend_72 { pt3dadd( -43.355, 146.335, 0.401905, 0.84 ) }
    dend_72 { pt3dadd( -43.9759, 147.384, 0.470701, 0.84 ) }
    dend_72 { pt3dadd( -44.4336, 147.971, 0.479213, 0.84 ) }
    dend_72 { pt3dadd( -45.3117, 148.859, 0.447157, 1.2 ) }
    dend_72 { pt3dadd( -46.743, 150.058, 0.305219, 0.84 ) }
    dend_72 { pt3dadd( -48.0793, 151.029, 0.145737, 0.84 ) }
    dend_72 { pt3dadd( -49.6489, 152.019, -0.0267945, 1.2 ) }
    dend_72 { pt3dadd( -50.9417, 152.607, -0.145439, 0.6 ) }
    dend_72 { pt3dadd( -52.5182, 153.24, -0.295905, 0.6 ) }
    dend_72 { pt3dadd( -54.1967, 153.797, -0.462355, 1.08 ) }
    dend_72 { pt3dadd( -56.1272, 154.303, -0.661343, 0.48 ) }
    dend_72 { pt3dadd( -57.231, 154.516, -0.722536, 0.48 ) }
    dend_72 { pt3dadd( -60.4654, 154.966, -0.615443, 0.84 ) }
    dend_72 { pt3dadd( -65.5525, 163.066, 0.572595, 0.84 ) }
    dend_72 { pt3dadd( -70.5481, 171.294, 0.379738, 0.84 ) }
    dend_72 { pt3dadd( -74.3377, 180.079, 0.0278418, 0.84 ) }
    dend_72 { pt3dadd( -78.4042, 188.617, -1.61014, 0.84 ) }
    dend_72 { pt3dadd( -82.1964, 197.283, -3.16269, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.413173, 53.7435, 4.16733, 1.32 ) }
    dend_71 { pt3dadd( -2.93851, 56.1651, 3.53508, 1.32 ) }
    dend_71 { pt3dadd( -3.7974, 57.0404, 3.24546, 1.32 ) }
    dend_71 { pt3dadd( -4.81361, 58.2011, 2.81324, 1.32 ) }
    dend_71 { pt3dadd( -5.79017, 59.5208, 2.27512, 1.32 ) }
    dend_71 { pt3dadd( -6.33146, 60.3258, 1.93893, 1.32 ) }
    dend_71 { pt3dadd( -7.09121, 61.7325, 1.37714, 1.32 ) }
    dend_71 { pt3dadd( -7.56317, 63.1938, 0.758485, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -7.82969, 64.9273, 0.0542461, 1.56 ) }
    dend_71 { pt3dadd( -7.75766, 66.6512, -0.615673, 1.56 ) }
    dend_71 { pt3dadd( -7.60674, 67.2648, -0.816278, 1.56 ) }
    dend_71 { pt3dadd( -6.56758, 69.6901, -1.53534, 1.2 ) }
    dend_71 { pt3dadd( -6.05923, 70.5047, -1.75156, 1.2 ) }
    dend_71 { pt3dadd( -5.13006, 71.6224, -2.056, 1.2 ) }
    dend_71 { pt3dadd( -3.5638, 73.1188, -2.52702, 1.08 ) }
    dend_71 { pt3dadd( -2.3649, 74.0886, -2.88354, 1.08 ) }
    dend_71 { pt3dadd( -1.60153, 74.6394, -3.15757, 1.08 ) }
    dend_71 { pt3dadd( -0.87069, 75.14, -3.49626, 1.08 ) }
    dend_71 { pt3dadd( -0.135018, 75.7179, -3.94253, 1.08 ) }
    dend_71 { pt3dadd( 1.19484, 76.9749, -4.99865, 1.8 ) }
    dend_71 { pt3dadd( 1.43717, 77.2896, -5.27494, 1.8 ) }
    dend_71 { pt3dadd( 2.29735, 79.0016, -6.74039, 1.32 ) }
    dend_71 { pt3dadd( 2.58448, 80.0015, -7.57187, 1.32 ) }
    dend_71 { pt3dadd( 2.63392, 81.2835, -8.59816, 1.08 ) }
    dend_71 { pt3dadd( 2.53115, 81.6526, -8.86983, 1.08 ) }
    dend_71 { pt3dadd( 2.00569, 82.5729, -9.44112, 1.08 ) }
    dend_71 { pt3dadd( 1.32903, 83.5423, -9.97884, 1.44 ) }
    dend_71 { pt3dadd( 0.760222, 84.249, -10.3394, 1.44 ) }
    dend_71 { pt3dadd( 0.06023, 85.1033, -10.7852, 1.44 ) }
    dend_71 { pt3dadd( -0.533595, 85.8544, -11.2226, 1.44 ) }
    dend_71 { pt3dadd( -1.67595, 87.5197, -12.2809, 0.84 ) }
    dend_71 { pt3dadd( -2.23909, 88.5183, -12.9294, 0.84 ) }
    dend_71 { pt3dadd( -3.09672, 90.5883, -14.3262, 1.44 ) }
    dend_71 { pt3dadd( -3.44687, 91.7737, -14.9846, 1.44 ) }
    dend_71 { pt3dadd( -3.80149, 93.5582, -15.7962, 0.96 ) }
    dend_71 { pt3dadd( -4.10502, 95.3935, -16.608, 0.96 ) }
    dend_71 { pt3dadd( -4.25602, 96.3288, -17.0006, 0.96 ) }
    dend_71 { pt3dadd( -4.38398, 97.7184, -17.4673, 0.72 ) }
    dend_71 { pt3dadd( -4.25018, 101.381, -18.2075, 1.2 ) }
    dend_71 { pt3dadd( -4.05925, 102.963, -18.3346, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -59.9434, 63.6701, 41.6968, 0.6 ) }
    dend_68 { pt3dadd( -65.7831, 70.6797, 45.0812, 0.6 ) }
    dend_68 { pt3dadd( -70.6938, 78.7999, 46.7618, 0.6 ) }
    dend_68 { pt3dadd( -74.4001, 87.1684, 49.7055, 0.6 ) }
    dend_68 { pt3dadd( -79.4408, 94.6608, 53.2257, 0.6 ) }
    dend_68 { pt3dadd( -83.4171, 102.471, 57.2994, 0.6 ) }
    dend_68 { pt3dadd( -88.0369, 109.972, 61.3375, 0.6 ) }
    dend_68 { pt3dadd( -93.1892, 117.715, 63.9888, 0.6 ) }
    dend_68 { pt3dadd( -99.8645, 124.524, 66.0071, 0.6 ) }
    dend_68 { pt3dadd( -106.326, 131.243, 68.8744, 0.6 ) }
    dend_68 { pt3dadd( -111.128, 138.627, 72.9398, 0.6 ) }
    dend_68 { pt3dadd( -116.555, 146.405, 74.8184, 0.6 ) }
    dend_68 { pt3dadd( -120.672, 154.737, 77.2918, 0.6 ) }
    dend_68 { pt3dadd( -125.214, 162.583, 80.6332, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -59.9434, 63.6701, 41.6968, 0.84 ) }
    dend_67 { pt3dadd( -66.7693, 68.1999, 47.2349, 0.6 ) }
    dend_67 { pt3dadd( -72.9875, 74.3338, 51.667, 0.6 ) }
    dend_67 { pt3dadd( -77.7285, 81.9228, 55.3695, 0.6 ) }
    dend_67 { pt3dadd( -82.0256, 89.9647, 58.5122, 0.6 ) }
    dend_67 { pt3dadd( -86.5038, 97.5845, 62.4633, 0.6 ) }
    dend_67 { pt3dadd( -93.0955, 103.644, 66.4453, 0.6 ) }
    dend_67 { pt3dadd( -99.6727, 110.255, 69.3311, 0.6 ) }
    dend_67 { pt3dadd( -105.938, 116.979, 72.5939, 0.6 ) }
    dend_67 { pt3dadd( -111.993, 124.088, 75.3028, 0.6 ) }
    dend_67 { pt3dadd( -117.633, 131.324, 78.4925, 0.6 ) }
    dend_67 { pt3dadd( -123.566, 138.907, 79.5371, 0.6 ) }
    dend_67 { pt3dadd( -128.827, 146.902, 80.7607, 0.6 ) }
    dend_67 { pt3dadd( -133.411, 155.307, 81.6044, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -13.852, -167.96, -8.25554, 0.96 ) }
    dend_63 { pt3dadd( -15.7132, -167.588, -8.25554, 0.96 ) }
    dend_63 { pt3dadd( -17.1296, -167.305, -8.25554, 0.96 ) }
    dend_63 { pt3dadd( -18.1362, -167.104, -8.25554, 0.72 ) }
    dend_63 { pt3dadd( -18.8772, -166.957, -8.25554, 0.72 ) }
    dend_63 { pt3dadd( -19.5063, -166.831, -8.25554, 0.72 ) }
    dend_63 { pt3dadd( -20.5773, -166.617, -8.25554, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -13.852, -167.96, -8.25554, 0.96 ) }
    dend_62 { pt3dadd( -15.2072, -171.946, -9.35051, 0.96 ) }
    dend_62 { pt3dadd( -15.7892, -173.362, -10.131, 0.96 ) }
    dend_62 { pt3dadd( -16.3759, -174.988, -11.1531, 1.32 ) }
    dend_62 { pt3dadd( -16.999, -177.108, -12.4267, 0.6 ) }
    dend_62 { pt3dadd( -17.2848, -178.362, -13.2969, 0.6 ) }
    dend_62 { pt3dadd( -17.543, -179.851, -14.3403, 1.2 ) }
    dend_62 { pt3dadd( -18.1465, -184.583, -17.5779, 1.2 ) }
    dend_62 { pt3dadd( -18.3398, -186.175, -18.7089, 1.56 ) }
    dend_62 { pt3dadd( -18.5546, -188.45, -20.323, 0.96 ) }
    dend_62 { pt3dadd( -18.7468, -192.566, -23.0974, 0.6 ) }
    dend_62 { pt3dadd( -18.7684, -194.44, -24.2015, 1.08 ) }
    dend_62 { pt3dadd( -18.794, -196.17, -25.151, 0.72 ) }
    dend_62 { pt3dadd( -18.8629, -197.071, -25.5573, 0.72 ) }
    dend_62 { pt3dadd( -19.0709, -198.318, -26.1179, 1.08 ) }
    dend_62 { pt3dadd( -19.3786, -199.681, -26.6898, 0.72 ) }
    dend_62 { pt3dadd( -19.8057, -201.249, -27.2056, 0.72 ) }
    dend_62 { pt3dadd( -21.0689, -205.365, -28.558, 0.48 ) }
    dend_62 { pt3dadd( -21.5557, -206.854, -29.0303, 1.56 ) }
    dend_62 { pt3dadd( -22.4796, -209.455, -29.7616, 1.08 ) }
    dend_62 { pt3dadd( -22.8876, -210.489, -30.0042, 0.72 ) }
    dend_62 { pt3dadd( -23.7182, -212.49, -30.3648, 1.08 ) }
    dend_62 { pt3dadd( -24.5147, -214.358, -30.661, 0.72 ) }
    dend_62 { pt3dadd( -24.9061, -215.334, -30.7603, 0.72 ) }
    dend_62 { pt3dadd( -25.8194, -217.705, -31.1013, 1.2 ) }
    dend_62 { pt3dadd( -26.4931, -219.582, -31.445, 0.72 ) }
    dend_62 { pt3dadd( -26.7828, -220.432, -31.6224, 0.72 ) }
    dend_62 { pt3dadd( -27.4915, -222.975, -32.1929, 0.72 ) }
    dend_62 { pt3dadd( -27.7458, -224.449, -32.7138, 1.08 ) }
    dend_62 { pt3dadd( -27.8608, -225.729, -33.2208, 0.96 ) }
    dend_62 { pt3dadd( -27.892, -226.686, -33.6088, 0.96 ) }
    dend_62 { pt3dadd( -27.8808, -227.789, -34.0362, 0.96 ) }
    dend_62 { pt3dadd( -27.8011, -229.827, -34.7464, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -27.5135, -234.28, -36.0786, 1.2 ) }
    dend_62 { pt3dadd( -27.2403, -237.377, -36.9942, 0.6 ) }
    dend_62 { pt3dadd( -26.9744, -239.44, -37.5744, 0.6 ) }
    dend_62 { pt3dadd( -26.7683, -240.605, -37.8606, 0.6 ) }
    dend_62 { pt3dadd( -26.4729, -241.924, -38.1182, 0.6 ) }
    dend_62 { pt3dadd( -26.2823, -242.833, -38.2039, 0.6 ) }
    dend_62 { pt3dadd( -26.1428, -243.582, -38.1918, 0.6 ) }
    dend_62 { pt3dadd( -25.9486, -244.632, -38.1904, 0.6 ) }
    dend_62 { pt3dadd( -25.5453, -247.025, -38.3244, 0.6 ) }
    dend_62 { pt3dadd( -25.4244, -247.843, -38.3989, 0.6 ) }
    dend_62 { pt3dadd( -24.8091, -252.534, -38.9266, 0.96 ) }
    dend_62 { pt3dadd( -24.5458, -254.775, -39.2009, 0.48 ) }
    dend_62 { pt3dadd( -24.412, -256.189, -39.3806, 0.48 ) }
    dend_62 { pt3dadd( -24.2001, -259.531, -39.805, 0.72 ) }
    dend_62 { pt3dadd( -24.1145, -261.524, -40.0525, 0.48 ) }
    dend_62 { pt3dadd( -24.0562, -263.107, -40.1726, 1.2 ) }
    dend_62 { pt3dadd( -23.9998, -266.098, -40.2629, 0.84 ) }
    dend_62 { pt3dadd( -24.0248, -267.911, -40.2376, 1.32 ) }
    dend_62 { pt3dadd( -24.1562, -270.51, -40.1008, 0.84 ) }
    dend_62 { pt3dadd( -24.3311, -272.504, -39.914, 1.44 ) }
    dend_62 { pt3dadd( -24.9034, -276.973, -39.3849, 0.48 ) }
    dend_62 { pt3dadd( -25.258, -279.271, -39.0736, 0.48 ) }
    dend_62 { pt3dadd( -25.8749, -282.242, -38.6288, 0.48 ) }
    dend_62 { pt3dadd( -26.352, -284.004, -38.3496, 0.48 ) }
    dend_62 { pt3dadd( -26.9416, -285.624, -38.0769, 0.96 ) }
    dend_62 { pt3dadd( -28.6866, -289.14, -37.4903, 0.48 ) }
    dend_62 { pt3dadd( -29.08, -289.797, -37.3907, 0.84 ) }
    dend_62 { pt3dadd( -30.4515, -291.799, -37.0349, 0.6 ) }
    dend_62 { pt3dadd( -31.5093, -293.06, -36.7693, 0.84 ) }
    dend_62 { pt3dadd( -32.7944, -294.371, -36.4689, 0.6 ) }
    dend_62 { pt3dadd( -34.3134, -295.62, -36.1865, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.37115, -39.8781, 9.37396, 0.96 ) }
    dend_58 { pt3dadd( 2.73308, -41.2125, 9.49526, 0.96 ) }
    dend_58 { pt3dadd( 2.23615, -42.6265, 9.58181, 0.96 ) }
    dend_58 { pt3dadd( 2.08935, -43.1674, 9.68959, 0.96 ) }
    dend_58 { pt3dadd( 1.81679, -44.1463, 9.99742, 0.96 ) }
    dend_58 { pt3dadd( 1.55019, -45.0342, 10.3501, 0.96 ) }
    dend_58 { pt3dadd( 1.22612, -46.0385, 10.8537, 0.96 ) }
    dend_58 { pt3dadd( 0.754851, -47.6118, 11.7873, 1.32 ) }
    dend_58 { pt3dadd( 0.148112, -49.5597, 13.0611, 0.84 ) }
    dend_58 { pt3dadd( -0.234796, -50.8432, 13.9558, 0.84 ) }
    dend_58 { pt3dadd( -0.474154, -51.7049, 14.6014, 0.84 ) }
    dend_58 { pt3dadd( -1.0032, -53.5488, 16.105, 1.32 ) }
    dend_58 { pt3dadd( -1.37675, -54.629, 17.0775, 1.32 ) }
    dend_58 { pt3dadd( -1.78802, -55.5979, 18.0211, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.37115, -39.8781, 9.37396, 1.44 ) }
    dend_43 { pt3dadd( 3.65425, -43.9212, 9.58995, 1.44 ) }
    dend_43 { pt3dadd( 3.84265, -46.8151, 9.72381, 1.44 ) }
    dend_43 { pt3dadd( 3.95684, -48.5471, 9.79082, 1.44 ) }
    dend_43 { pt3dadd( 4.16762, -52.1698, 9.90585, 1.8 ) }
    dend_43 { pt3dadd( 4.25548, -53.6797, 9.9538, 1.8 ) }
    dend_43 { pt3dadd( 4.34217, -55.1697, 10.0011, 1.8 ) }
    dend_43 { pt3dadd( 4.40238, -56.4131, 10.0013, 1.8 ) }
    dend_43 { pt3dadd( 4.49929, -58.9649, 10.0031, 1.56 ) }
    dend_43 { pt3dadd( 4.59717, -61.6851, 10.0075, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.6477, -66.6807, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 14.944, -69.0577, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 16.3259, -70.513, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 18.038, -72.3114, 8.19909, 1.2 ) }
    dend_37 { pt3dadd( 19.0703, -73.3926, 8.19909, 1.2 ) }
    dend_37 { pt3dadd( 20.6166, -74.9991, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 22.8304, -77.3453, 8.19909, 1.2 ) }
    dend_37 { pt3dadd( 23.8308, -78.4463, 8.19909, 1.8 ) }
    dend_37 { pt3dadd( 24.8872, -79.6259, 8.19909, 1.8 ) }
    dend_37 { pt3dadd( 26.943, -81.9804, 8.22058, 1.08 ) }
    dend_37 { pt3dadd( 28.3907, -83.6764, 8.24863, 1.68 ) }
    dend_37 { pt3dadd( 30.0496, -85.6801, 8.26392, 1.32 ) }
    dend_37 { pt3dadd( 31.1259, -87.0246, 8.26426, 1.32 ) }
    dend_37 { pt3dadd( 31.7869, -87.865, 8.25907, 1.32 ) }
    dend_37 { pt3dadd( 33.334, -89.9114, 8.23382, 1.08 ) }
    dend_37 { pt3dadd( 34.3966, -91.4011, 8.17955, 1.56 ) }
    dend_37 { pt3dadd( 35.9708, -93.7632, 8.10126, 1.2 ) }
    dend_37 { pt3dadd( 36.5202, -94.6245, 8.07543, 1.2 ) }
    dend_37 { pt3dadd( 37.041, -95.4525, 8.06662, 1.2 ) }
    dend_37 { pt3dadd( 38.0594, -97.0721, 8.07511, 1.68 ) }
    dend_37 { pt3dadd( 38.9106, -98.4152, 8.14137, 1.2 ) }
    dend_37 { pt3dadd( 39.9966, -100.089, 8.30382, 0.96 ) }
    dend_37 { pt3dadd( 40.7157, -101.107, 8.44763, 0.96 ) }
    dend_37 { pt3dadd( 42.6316, -103.589, 8.83554, 0.84 ) }
    dend_37 { pt3dadd( 43.6089, -104.786, 9.04429, 0.84 ) }
    dend_37 { pt3dadd( 45.1412, -106.549, 9.38875, 1.44 ) }
    dend_37 { pt3dadd( 45.955, -107.446, 9.57841, 1.44 ) }
    dend_37 { pt3dadd( 47.4291, -109.051, 9.87799, 1.44 ) }
    dend_37 { pt3dadd( 48.2804, -110.032, 10.0515, 0.96 ) }
    dend_37 { pt3dadd( 49.2033, -111.18, 10.223, 1.44 ) }
    dend_37 { pt3dadd( 49.5296, -111.597, 10.275, 1.44 ) }
    dend_37 { pt3dadd( 50.3556, -112.685, 10.3656, 1.44 ) }
    dend_37 { pt3dadd( 50.9901, -113.562, 10.4319, 1.44 ) }
    dend_37 { pt3dadd( 52.1494, -115.208, 10.5334, 1.08 ) }
    dend_37 { pt3dadd( 53.2136, -116.672, 10.5989, 1.08 ) }
    dend_37 { pt3dadd( 53.856, -117.483, 10.6191, 1.08 ) }
    dend_37 { pt3dadd( 55.1443, -118.974, 10.6412, 1.44 ) }
    dend_37 { pt3dadd( 55.7838, -119.663, 10.6532, 1.44 ) }
    dend_37 { pt3dadd( 57.4302, -121.426, 10.7049, 0.84 ) }
    dend_37 { pt3dadd( 58.4924, -122.588, 10.7474, 1.56 ) }
    dend_37 { pt3dadd( 60.2784, -124.623, 10.8333, 1.08 ) }
    dend_37 { pt3dadd( 61.1421, -125.629, 10.8789, 1.32 ) }
    dend_37 { pt3dadd( 63.7363, -128.4, 11.0089, 1.08 ) }
    dend_37 { pt3dadd( 65.0527, -129.704, 11.0855, 1.08 ) }
    dend_37 { pt3dadd( 66.1954, -130.764, 11.1565, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 67.8848, -132.219, 11.2579, 1.08 ) }
    dend_37 { pt3dadd( 69.0429, -133.175, 11.2834, 1.08 ) }
    dend_37 { pt3dadd( 72.5412, -135.973, 11.2236, 1.44 ) }
    dend_37 { pt3dadd( 74.9356, -137.846, 11.0859, 1.08 ) }
    dend_37 { pt3dadd( 76.4158, -139.018, 10.9625, 1.08 ) }
    dend_37 { pt3dadd( 78.7803, -140.99, 10.7416, 1.08 ) }
    dend_37 { pt3dadd( 81.4648, -143.279, 10.4471, 0.72 ) }
    dend_37 { pt3dadd( 83.4919, -145.121, 10.1742, 1.32 ) }
    dend_37 { pt3dadd( 84.9073, -146.602, 9.90912, 0.84 ) }
    dend_37 { pt3dadd( 85.7742, -147.578, 9.69624, 0.84 ) }
    dend_37 { pt3dadd( 87.2216, -149.418, 9.29267, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 12.6477, -66.6807, 8.19909, 1.68 ) }
    dend_20 { pt3dadd( 12.7391, -69.119, 8.26517, 1.68 ) }
    dend_20 { pt3dadd( 12.8808, -71.2726, 8.32388, 1.68 ) }
    dend_20 { pt3dadd( 12.9986, -72.5084, 8.35617, 1.68 ) }
    dend_20 { pt3dadd( 13.4453, -76.0751, 8.44276, 1.32 ) }
    dend_20 { pt3dadd( 13.788, -78.4463, 8.49409, 1.56 ) }
    dend_20 { pt3dadd( 14.1684, -81.5078, 8.55057, 1.56 ) }
    dend_20 { pt3dadd( 14.3102, -82.6612, 8.56329, 1.56 ) }
    dend_20 { pt3dadd( 14.4619, -84.4301, 8.57988, 1.56 ) }
    dend_20 { pt3dadd( 14.5608, -86.5585, 8.59596, 1.56 ) }
    dend_20 { pt3dadd( 14.6184, -89.5769, 8.61233, 1.2 ) }
    dend_20 { pt3dadd( 14.6327, -93.8214, 8.62474, 1.56 ) }
    dend_20 { pt3dadd( 14.6195, -96.7763, 8.65514, 1.2 ) }
    dend_20 { pt3dadd( 14.6162, -100.489, 8.72207, 1.2 ) }
    dend_20 { pt3dadd( 14.622, -102.641, 8.75123, 1.56 ) }
    dend_20 { pt3dadd( 14.6383, -105.123, 8.75475, 1.56 ) }
    dend_20 { pt3dadd( 14.6858, -107.125, 8.72327, 1.56 ) }
    dend_20 { pt3dadd( 14.856, -110.213, 8.69985, 1.2 ) }
    dend_20 { pt3dadd( 14.9892, -112.897, 8.69859, 1.56 ) }
    dend_20 { pt3dadd( 15.1061, -115.943, 8.71405, 1.44 ) }
    dend_20 { pt3dadd( 15.1405, -118.078, 8.73312, 1.44 ) }
    dend_20 { pt3dadd( 15.1221, -119.612, 8.75109, 1.44 ) }
    dend_20 { pt3dadd( 15.0154, -124.773, 8.8209, 1.08 ) }
    dend_20 { pt3dadd( 14.9599, -127.551, 8.78877, 1.08 ) }
    dend_20 { pt3dadd( 14.9431, -130.045, 8.70335, 1.44 ) }
    dend_20 { pt3dadd( 14.9595, -131.158, 8.64854, 1.44 ) }
    dend_20 { pt3dadd( 15.0198, -132.779, 8.52893, 1.44 ) }
    dend_20 { pt3dadd( 15.1554, -135.092, 8.2548, 1.44 ) }
    dend_20 { pt3dadd( 15.4589, -138.353, 7.6073, 1.32 ) }
    dend_20 { pt3dadd( 15.7757, -140.615, 7.09997, 1.32 ) }
    dend_20 { pt3dadd( 15.971, -141.815, 6.81236, 1.32 ) }
    dend_20 { pt3dadd( 16.1163, -142.808, 6.58405, 1.32 ) }
    dend_20 { pt3dadd( 16.3227, -144.557, 6.22395, 1.32 ) }
    dend_20 { pt3dadd( 16.4019, -145.6, 6.05347, 1.32 ) }
    dend_20 { pt3dadd( 16.4863, -146.823, 5.9065, 1.32 ) }
    dend_20 { pt3dadd( 16.6551, -149.394, 5.5864, 1.8 ) }
    dend_20 { pt3dadd( 16.7923, -151.866, 5.26193, 1.8 ) }
    dend_20 { pt3dadd( 16.903, -154.015, 5.04483, 1.8 ) }
    dend_20 { pt3dadd( 16.9914, -156.16, 4.88259, 1.8 ) }
    dend_20 { pt3dadd( 17.0804, -159.649, 4.69524, 1.56 ) }
    dend_20 { pt3dadd( 17.1079, -163.192, 4.56884, 1.56 ) }
    dend_20 { pt3dadd( 17.0898, -164.89, 4.53964, 1.56 ) }
    dend_20 { pt3dadd( 17.0177, -168.509, 4.5565, 1.32 ) }
    dend_20 { pt3dadd( 16.9688, -170.207, 4.59959, 1.32 ) }
    dend_20 { pt3dadd( 16.8381, -173.25, 4.74416, 1.8 ) }
    dend_20 { pt3dadd( 16.6677, -175.915, 4.9426, 1.8 ) }
    dend_20 { pt3dadd( 16.5277, -178.648, 5.17728, 1.56 ) }
    dend_20 { pt3dadd( 16.4923, -181.225, 5.35964, 1.56 ) }
    dend_20 { pt3dadd( 16.5416, -182.96, 5.43745, 1.56 ) }
    dend_20 { pt3dadd( 16.6256, -184.215, 5.49158, 1.56 ) }
    dend_20 { pt3dadd( 16.7281, -185.503, 5.52791, 1.56 ) }
    dend_20 { pt3dadd( 16.8701, -187.364, 5.54404, 1.56 ) }
    dend_20 { pt3dadd( 17.0075, -189.655, 5.5202, 1.2 ) }
    dend_20 { pt3dadd( 17.0732, -191.851, 5.436, 1.2 ) }
    dend_20 { pt3dadd( 17.0819, -193.365, 5.35142, 1.2 ) }
    dend_20 { pt3dadd( 17.0154, -196.186, 5.13951, 1.56 ) }
    dend_20 { pt3dadd( 16.9076, -198.9, 4.88164, 1.56 ) }
    dend_20 { pt3dadd( 16.8331, -200.591, 4.69662, 1.56 ) }
    dend_20 { pt3dadd( 16.7797, -202.817, 4.44325, 1.56 ) }
    dend_20 { pt3dadd( 16.7569, -204.935, 4.18342, 1.56 ) }
    dend_20 { pt3dadd( 16.7896, -209.111, 3.63988, 1.56 ) }
    dend_20 { pt3dadd( 16.9425, -213.913, 2.9716, 1.32 ) }
    dend_20 { pt3dadd( 17.1036, -217.913, 2.36902, 1.32 ) }
    dend_20 { pt3dadd( 17.1925, -220.067, 2.03893, 0.84 ) }
    dend_20 { pt3dadd( 17.2819, -222.28, 1.70228, 1.32 ) }
    dend_20 { pt3dadd( 17.3971, -224.907, 1.29904, 1.08 ) }
    dend_20 { pt3dadd( 17.5493, -227.371, 0.894805, 1.44 ) }
    dend_20 { pt3dadd( 17.7106, -229.971, 0.422057, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.88688, 35.2057, 16.2039, 1.2 ) }
    dend_11 { pt3dadd( 5.20081, 37.9136, 16.9623, 1.2 ) }
    dend_11 { pt3dadd( 4.56512, 39.1496, 17.3838, 1.2 ) }
    dend_11 { pt3dadd( 4.097, 40.227, 17.7901, 1.2 ) }
    dend_11 { pt3dadd( 3.36826, 42.4359, 18.7841, 1.2 ) }
    dend_11 { pt3dadd( 3.08431, 43.6255, 19.3544, 1.2 ) }
    dend_11 { pt3dadd( 2.90129, 44.7689, 19.9142, 1.08 ) }
    dend_11 { pt3dadd( 2.84833, 46.5905, 20.8839, 1.56 ) }
    dend_11 { pt3dadd( 2.89326, 47.8155, 21.5417, 1.56 ) }
    dend_11 { pt3dadd( 3.15546, 50.5164, 22.9301, 1.2 ) }
    dend_11 { pt3dadd( 3.41205, 52.2552, 23.7465, 0.96 ) }
    dend_11 { pt3dadd( 3.67969, 54.1594, 24.5285, 1.32 ) }
    dend_11 { pt3dadd( 3.76162, 55.0281, 24.8567, 1.32 ) }
    dend_11 { pt3dadd( 3.80352, 55.996, 25.1782, 1.32 ) }
    dend_11 { pt3dadd( 3.82367, 57.4389, 25.5733, 1.32 ) }
    dend_11 { pt3dadd( 3.81511, 58.2482, 25.7585, 1.32 ) }
    dend_11 { pt3dadd( 3.81927, 59.8273, 26.1265, 1.2 ) }
    dend_11 { pt3dadd( 3.87832, 61.4693, 26.5603, 1.56 ) }
    dend_11 { pt3dadd( 3.93555, 62.5659, 26.8682, 1.2 ) }
    dend_11 { pt3dadd( 4.06689, 64.2549, 27.3825, 1.68 ) }
    dend_11 { pt3dadd( 4.3603, 66.5471, 28.1359, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 4.54288, 67.4641, 28.4555, 1.44 ) }
    dend_11 { pt3dadd( 5.02966, 68.9847, 28.9977, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.88688, 35.2057, 16.2039, 1.44 ) }
    dend_2 { pt3dadd( 6.84667, 38.6261, 15.8367, 1.44 ) }
    dend_2 { pt3dadd( 6.82824, 40.1943, 15.6684, 1.44 ) }
    dend_2 { pt3dadd( 6.80692, 42.0074, 15.4737, 1.44 ) }
    dend_2 { pt3dadd( 6.7824, 44.0939, 15.2498, 1.44 ) }
    dend_2 { pt3dadd( 6.7527, 46.62, 14.9786, 1.8 ) }
    dend_2 { pt3dadd( 6.72758, 48.757, 14.7492, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.78802, -55.5979, 18.0211, 0.96 ) }
    dend_60 { pt3dadd( -2.7382, -58.9867, 18.7942, 0.96 ) }
    dend_60 { pt3dadd( -3.39613, -61.0684, 19.1948, 0.96 ) }
    dend_60 { pt3dadd( -3.80662, -62.4157, 19.4139, 0.96 ) }
    dend_60 { pt3dadd( -4.12209, -63.4378, 19.5726, 0.96 ) }
    dend_60 { pt3dadd( -4.47846, -64.5993, 19.7371, 0.96 ) }
    dend_60 { pt3dadd( -5.05753, -66.7015, 20.0144, 0.6 ) }
    dend_60 { pt3dadd( -5.27057, -67.3468, 20.0763, 0.6 ) }
    dend_60 { pt3dadd( -5.66602, -68.4957, 20.214, 1.08 ) }
    dend_60 { pt3dadd( -6.52751, -70.8927, 20.591, 0.72 ) }
    dend_60 { pt3dadd( -7.19536, -72.6908, 20.9123, 0.72 ) }
    dend_60 { pt3dadd( -8.267, -75.4637, 21.4265, 0.72 ) }
    dend_60 { pt3dadd( -9.37861, -78.11, 21.9175, 1.2 ) }
    dend_60 { pt3dadd( -10.0532, -79.5437, 22.1772, 1.08 ) }
    dend_60 { pt3dadd( -10.9776, -81.2443, 22.4723, 0.48 ) }
    dend_60 { pt3dadd( -12.1614, -83.217, 22.7722, 0.48 ) }
    dend_60 { pt3dadd( -13.5577, -85.3865, 23.057, 1.44 ) }
    dend_60 { pt3dadd( -14.6484, -87.0244, 23.2163, 0.84 ) }
    dend_60 { pt3dadd( -15.2103, -87.9559, 23.2742, 1.08 ) }
    dend_60 { pt3dadd( -16.0522, -89.4637, 23.3262, 1.08 ) }
    dend_60 { pt3dadd( -17.1065, -91.5706, 23.3684, 1.44 ) }
    dend_60 { pt3dadd( -17.819, -93.1432, 23.4145, 0.84 ) }
    dend_60 { pt3dadd( -18.278, -94.3049, 23.4948, 1.32 ) }
    dend_60 { pt3dadd( -18.921, -96.2644, 23.6887, 0.72 ) }
    dend_60 { pt3dadd( -19.2265, -97.2392, 23.8059, 0.72 ) }
    dend_60 { pt3dadd( -19.5228, -98.1087, 23.9432, 0.72 ) }
    dend_60 { pt3dadd( -20.142, -99.3631, 24.201, 0.72 ) }
    dend_60 { pt3dadd( -21.2124, -100.696, 24.5451, 1.08 ) }
    dend_60 { pt3dadd( -22.2815, -101.774, 24.8632, 0.6 ) }
    dend_60 { pt3dadd( -23.6982, -102.87, 25.2356, 1.08 ) }
    dend_60 { pt3dadd( -24.8039, -103.561, 25.5024, 0.96 ) }
    dend_60 { pt3dadd( -26.7155, -104.481, 25.9016, 0.84 ) }
    dend_60 { pt3dadd( -28.7408, -105.133, 26.2233, 0.84 ) }
    dend_60 { pt3dadd( -32.3475, -113.979, 26.7531, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -1.78802, -55.5979, 18.0211, 0.84 ) }
    dend_59 { pt3dadd( -2.59208, -57.1128, 18.9742, 0.84 ) }
    dend_59 { pt3dadd( -3.16728, -58.1961, 19.6287, 0.84 ) }
    dend_59 { pt3dadd( -3.42425, -58.7134, 19.915, 0.84 ) }
    dend_59 { pt3dadd( -4.29946, -60.6793, 20.9327, 0.48 ) }
    dend_59 { pt3dadd( -4.74734, -61.77, 21.4598, 0.48 ) }
    dend_59 { pt3dadd( -5.47249, -63.6617, 22.2906, 0.84 ) }
    dend_59 { pt3dadd( -5.88607, -64.861, 22.7291, 0.84 ) }
    dend_59 { pt3dadd( -6.27144, -66.0039, 23.0762, 0.84 ) }
    dend_59 { pt3dadd( -7.07669, -68.566, 23.725, 0.84 ) }
    dend_59 { pt3dadd( -7.35025, -69.5381, 23.9187, 0.84 ) }
    dend_59 { pt3dadd( -7.77487, -71.2881, 24.2159, 0.6 ) }
    dend_59 { pt3dadd( -8.04674, -72.4054, 24.3748, 1.08 ) }
    dend_59 { pt3dadd( -8.4742, -73.8808, 24.5715, 1.08 ) }
    dend_59 { pt3dadd( -8.83697, -74.9486, 24.7173, 1.56 ) }
    dend_59 { pt3dadd( -9.34327, -76.2179, 24.8753, 1.56 ) }
    dend_59 { pt3dadd( -9.76618, -77.214, 25.0119, 1.08 ) }
    dend_59 { pt3dadd( -10.5647, -78.9915, 25.2883, 0.72 ) }
    dend_59 { pt3dadd( -11.0986, -80.1243, 25.4818, 1.32 ) }
    dend_59 { pt3dadd( -11.5786, -81.0801, 25.6599, 1.32 ) }
    dend_59 { pt3dadd( -12.3124, -82.4053, 25.9212, 0.72 ) }
    dend_59 { pt3dadd( -13.1206, -83.7718, 26.1861, 0.72 ) }
    dend_59 { pt3dadd( -17.748, -91.857, 28.667, 0.72 ) }
    dend_59 { pt3dadd( -21.226, -100.368, 31.4315, 0.72 ) }
    dend_59 { pt3dadd( -25.1898, -108.413, 34.9789, 0.72 ) }
    dend_59 { pt3dadd( -29.1635, -116.467, 38.4901, 0.72 ) }
    dend_59 { pt3dadd( -32.032, -124.633, 42.719, 0.72 ) }
    dend_59 { pt3dadd( -33.3067, -132.689, 47.8631, 0.72 ) }
    dend_59 { pt3dadd( -34.3507, -141.462, 51.5565, 0.72 ) }
    dend_59 { pt3dadd( -34.6224, -150.814, 53.2898, 0.72 ) }
    dend_59 { pt3dadd( -34.5865, -160.029, 55.7217, 0.72 ) }
    dend_59 { pt3dadd( -35.5066, -169.314, 57.6245, 0.72 ) }
    dend_59 { pt3dadd( -38.1755, -178.465, 57.9355, 0.72 ) }
    dend_59 { pt3dadd( -41.1065, -187.548, 57.954, 0.72 ) }
    dend_59 { pt3dadd( -42.5561, -196.915, 58.769, 0.72 ) }
    dend_59 { pt3dadd( -43.227, -206.229, 60.6246, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.59717, -61.6851, 10.0075, 1.08 ) }
    dend_57 { pt3dadd( 5.93558, -62.5695, 5.55454, 1.08 ) }
    dend_57 { pt3dadd( 6.95332, -63.3974, 2.55686, 1.08 ) }
    dend_57 { pt3dadd( 7.24266, -63.7058, 1.72079, 1.08 ) }
    dend_57 { pt3dadd( 7.45594, -64.0451, 0.964861, 1.08 ) }
    dend_57 { pt3dadd( 7.57283, -64.2753, 0.521114, 1.08 ) }
    dend_57 { pt3dadd( 7.99642, -65.309, -1.27575, 1.44 ) }
    dend_57 { pt3dadd( 8.2003, -66.1784, -2.4996, 1.44 ) }
    dend_57 { pt3dadd( 8.29453, -67.1966, -3.7647, 1.44 ) }
    dend_57 { pt3dadd( 8.33066, -68.8384, -5.67597, 1.44 ) }
    dend_57 { pt3dadd( 8.30935, -69.4769, -6.3512, 1.44 ) }
    dend_57 { pt3dadd( 8.18892, -71.1763, -7.93063, 1.2 ) }
    dend_57 { pt3dadd( 7.87588, -73.9171, -10.1449, 1.2 ) }
    dend_57 { pt3dadd( 7.64674, -75.7888, -11.5667, 1.68 ) }
    dend_57 { pt3dadd( 7.37164, -77.8104, -13.1022, 0.72 ) }
    dend_57 { pt3dadd( 7.1337, -79.3316, -14.2172, 0.72 ) }
    dend_57 { pt3dadd( 6.77938, -81.0018, -15.5481, 1.44 ) }
    dend_57 { pt3dadd( 6.44365, -82.1911, -16.584, 1.44 ) }
    dend_57 { pt3dadd( 5.63717, -84.3502, -18.9717, 0.96 ) }
    dend_57 { pt3dadd( 4.72043, -86.249, -21.9539, 1.68 ) }
    dend_57 { pt3dadd( 4.36476, -86.8444, -23.1686, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( 3.55388, -88.0508, -26.1984, 1.68 ) }
    dend_57 { pt3dadd( 2.93587, -88.9143, -28.6551, 1.68 ) }
    dend_57 { pt3dadd( 1.98172, -90.2498, -32.5767, 1.68 ) }
    dend_57 { pt3dadd( 0.93588, -91.743, -36.8036, 1.68 ) }
    dend_57 { pt3dadd( 0.156426, -92.8855, -39.8822, 1.2 ) }
    dend_57 { pt3dadd( -0.631722, -94.1426, -42.9603, 0.84 ) }
    dend_57 { pt3dadd( -0.95841, -94.7578, -44.2181, 1.44 ) }
    dend_57 { pt3dadd( -1.25234, -95.4049, -45.3109, 0.72 ) }
    dend_57 { pt3dadd( -1.92835, -97.0271, -47.5993, 1.32 ) }
    dend_57 { pt3dadd( -2.96686, -99.7485, -50.9117, 0.6 ) }
    dend_57 { pt3dadd( -3.20649, -100.43, -51.6853, 0.6 ) }
    dend_57 { pt3dadd( -3.54152, -101.362, -52.6897, 0.96 ) }
    dend_57 { pt3dadd( -3.83069, -102.143, -53.5694, 0.96 ) }
    dend_57 { pt3dadd( -4.94769, -105.213, -57.2815, 0.6 ) }
    dend_57 { pt3dadd( -5.26947, -106.339, -58.6298, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.59717, -61.6851, 10.0075, 1.32 ) }
    dend_44 { pt3dadd( 4.60731, -61.8081, 9.98664, 1.32 ) }
    dend_44 { pt3dadd( 4.96451, -65.0351, 9.45924, 1.32 ) }
    dend_44 { pt3dadd( 5.45599, -68.7868, 8.88164, 1.68 ) }
    dend_44 { pt3dadd( 5.78345, -71.1757, 8.5468, 2.04 ) }
    dend_44 { pt3dadd( 6.06846, -73.2934, 8.2744, 1.68 ) }
    dend_44 { pt3dadd( 6.29954, -75.0418, 8.06892, 1.68 ) }
    dend_44 { pt3dadd( 6.44363, -76.0992, 7.96692, 1.68 ) }
    dend_44 { pt3dadd( 6.64269, -77.5127, 7.86698, 1.68 ) }
    dend_44 { pt3dadd( 6.91148, -79.6614, 7.76372, 2.04 ) }
    dend_44 { pt3dadd( 7.0347, -80.8979, 7.75026, 1.68 ) }
    dend_44 { pt3dadd( 7.14555, -82.508, 7.77001, 1.68 ) }
    dend_44 { pt3dadd( 7.24719, -84.2407, 7.83628, 1.68 ) }
    dend_44 { pt3dadd( 7.37851, -86.2056, 7.94121, 1.56 ) }
    dend_44 { pt3dadd( 7.52564, -88.0244, 8.05212, 1.56 ) }
    dend_44 { pt3dadd( 7.88006, -91.6768, 8.28795, 1.56 ) }
    dend_44 { pt3dadd( 8.20833, -94.6497, 8.48508, 1.8 ) }
    dend_44 { pt3dadd( 8.78731, -99.4009, 8.80052, 1.56 ) }
    dend_44 { pt3dadd( 9.38886, -104.156, 9.09657, 1.44 ) }
    dend_44 { pt3dadd( 9.64264, -106.178, 9.21211, 1.92 ) }
    dend_44 { pt3dadd( 9.93627, -108.629, 9.33054, 1.8 ) }
    dend_44 { pt3dadd( 10.1295, -110.518, 9.40016, 1.68 ) }
    dend_44 { pt3dadd( 10.3018, -112.878, 9.47191, 2.04 ) }
    dend_44 { pt3dadd( 10.6625, -122.536, 9.51552, 1.8 ) }
    dend_44 { pt3dadd( 10.6742, -125.482, 9.46846, 1.8 ) }
    dend_44 { pt3dadd( 10.6489, -127.08, 9.42048, 1.68 ) }
    dend_44 { pt3dadd( 10.5952, -128.59, 9.35505, 1.68 ) }
    dend_44 { pt3dadd( 10.374, -132.767, 9.11808, 1.68 ) }
    dend_44 { pt3dadd( 10.2075, -135.042, 8.893, 1.68 ) }
    dend_44 { pt3dadd( 10.0444, -136.948, 8.6176, 1.68 ) }
    dend_44 { pt3dadd( 9.84829, -139.459, 8.23388, 1.32 ) }
    dend_44 { pt3dadd( 9.6492, -142.47, 7.7762, 1.32 ) }
    dend_44 { pt3dadd( 9.47771, -145.61, 7.31086, 1.32 ) }
    dend_44 { pt3dadd( 9.28453, -150.617, 6.60014, 1.32 ) }
    dend_44 { pt3dadd( 9.19378, -154.006, 6.16989, 1.8 ) }
    dend_44 { pt3dadd( 9.13637, -156.267, 5.91732, 1.8 ) }
    dend_44 { pt3dadd( 9.09406, -158.084, 5.74896, 1.8 ) }
    dend_44 { pt3dadd( 9.06738, -159.681, 5.6457, 1.8 ) }
    dend_44 { pt3dadd( 9.02956, -162.649, 5.57992, 1.68 ) }
    dend_44 { pt3dadd( 9.00344, -166.912, 5.57196, 2.04 ) }
    dend_44 { pt3dadd( 9.0264, -170.273, 5.50564, 2.04 ) }
    dend_44 { pt3dadd( 9.06338, -173.032, 5.43066, 1.8 ) }
    dend_44 { pt3dadd( 9.14393, -176.535, 5.31844, 1.56 ) }
    dend_44 { pt3dadd( 9.25932, -180.092, 5.1939, 1.92 ) }
    dend_44 { pt3dadd( 9.37594, -184.605, 5.02345, 1.56 ) }
    dend_44 { pt3dadd( 9.43694, -188.118, 4.86536, 1.32 ) }
    dend_44 { pt3dadd( 9.47582, -192.083, 4.63073, 1.32 ) }
    dend_44 { pt3dadd( 9.47657, -193.967, 4.52419, 1.32 ) }
    dend_44 { pt3dadd( 9.47601, -195.613, 4.44128, 1.2 ) }
    dend_44 { pt3dadd( 9.43493, -199.423, 4.30106, 1.68 ) }
    dend_44 { pt3dadd( 9.37267, -202.942, 4.34893, 1.68 ) }
    dend_44 { pt3dadd( 9.28689, -205.205, 4.41009, 1.68 ) }
    dend_44 { pt3dadd( 9.20205, -207.131, 4.45479, 1.68 ) }
    dend_44 { pt3dadd( 9.08276, -209.276, 4.5142, 1.68 ) }
    dend_44 { pt3dadd( 9.04812, -210.187, 4.54603, 1.68 ) }
    dend_44 { pt3dadd( 9.23023, -216.022, 4.83797, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 87.2216, -149.418, 9.29267, 0.84 ) }
    dend_39 { pt3dadd( 89.696, -149.059, 10.1616, 0.84 ) }
    dend_39 { pt3dadd( 91.6379, -148.746, 10.914, 0.84 ) }
    dend_39 { pt3dadd( 93.1514, -148.5, 11.551, 1.32 ) }
    dend_39 { pt3dadd( 95.6331, -148.116, 12.6995, 1.32 ) }
    dend_39 { pt3dadd( 97.5833, -147.826, 13.6777, 1.68 ) }
    dend_39 { pt3dadd( 100.012, -147.41, 14.9571, 1.2 ) }
    dend_39 { pt3dadd( 101.278, -147.192, 15.7214, 0.96 ) }
    dend_39 { pt3dadd( 102.913, -146.83, 16.8367, 1.44 ) }
    dend_39 { pt3dadd( 104.857, -146.262, 18.2927, 0.84 ) }
    dend_39 { pt3dadd( 105.764, -145.897, 19.0712, 0.84 ) }
    dend_39 { pt3dadd( 106.635, -145.423, 19.9755, 0.84 ) }
    dend_39 { pt3dadd( 107.187, -144.971, 20.7514, 0.84 ) }
    dend_39 { pt3dadd( 107.789, -144.325, 21.7442, 0.84 ) }
    dend_39 { pt3dadd( 108.263, -143.581, 22.7486, 0.84 ) }
    dend_39 { pt3dadd( 108.701, -142.548, 23.9994, 1.08 ) }
    dend_39 { pt3dadd( 109.145, -141.317, 25.4755, 0.72 ) }
    dend_39 { pt3dadd( 109.686, -139.803, 27.4821, 1.2 ) }
    dend_39 { pt3dadd( 118.335, -136.724, 31.3158, 1.2 ) }
    dend_39 { pt3dadd( 126.811, -132.489, 34.1934, 1.2 ) }
    dend_39 { pt3dadd( 135.033, -127.349, 35.9696, 1.2 ) }
    dend_39 { pt3dadd( 141.747, -121.005, 39.1793, 1.2 ) }
    dend_39 { pt3dadd( 149.514, -115.867, 42.4082, 1.2 ) }
    dend_39 { pt3dadd( 156.619, -109.916, 45.6145, 1.2 ) }
    dend_39 { pt3dadd( 164.281, -103.927, 46.8551, 1.2 ) }
    dend_39 { pt3dadd( 171.659, -97.7581, 48.7027, 1.2 ) }
    dend_39 { pt3dadd( 178.083, -90.8362, 51.0781, 1.2 ) }
    dend_39 { pt3dadd( 183.944, -83.1997, 52.095, 1.2 ) }
    dend_39 { pt3dadd( 188.898, -75.2135, 54.2816, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 192.501, -66.4563, 55.7123, 1.2 ) }
    dend_39 { pt3dadd( 196.107, -57.7168, 57.2511, 1.2 ) }
    dend_39 { pt3dadd( 199.774, -48.9396, 58.3412, 1.2 ) }
    dend_39 { pt3dadd( 204.842, -41.0372, 60.6045, 1.2 ) }
    dend_39 { pt3dadd( 209.766, -32.9575, 62.4542, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 87.2216, -149.418, 9.29267, 0.84 ) }
    dend_38 { pt3dadd( 88.3658, -151.587, 9.67741, 0.84 ) }
    dend_38 { pt3dadd( 89.6091, -153.848, 10.0601, 0.6 ) }
    dend_38 { pt3dadd( 90.4162, -155.334, 10.2892, 1.32 ) }
    dend_38 { pt3dadd( 91.6855, -157.672, 10.6494, 0.84 ) }
    dend_38 { pt3dadd( 92.5064, -159.184, 10.8824, 0.72 ) }
    dend_38 { pt3dadd( 93.1602, -160.388, 11.068, 1.08 ) }
    dend_38 { pt3dadd( 93.9762, -161.963, 11.2865, 0.72 ) }
    dend_38 { pt3dadd( 94.7362, -163.464, 11.5651, 1.2 ) }
    dend_38 { pt3dadd( 100.126, -171.429, 12.3661, 1.2 ) }
    dend_38 { pt3dadd( 105.894, -178.891, 14.6105, 1.2 ) }
    dend_38 { pt3dadd( 111.512, -185.758, 18.6332, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.7106, -229.971, 0.422057, 0.96 ) }
    dend_36 { pt3dadd( 19.6398, -232.081, 1.80307, 0.96 ) }
    dend_36 { pt3dadd( 20.7404, -233.472, 2.71859, 0.96 ) }
    dend_36 { pt3dadd( 22.7284, -236.154, 4.50913, 1.44 ) }
    dend_36 { pt3dadd( 24.207, -238.093, 5.8925, 0.96 ) }
    dend_36 { pt3dadd( 25.3628, -239.618, 6.98302, 0.96 ) }
    dend_36 { pt3dadd( 26.307, -240.902, 7.88028, 0.96 ) }
    dend_36 { pt3dadd( 27.1123, -242.077, 8.6807, 0.96 ) }
    dend_36 { pt3dadd( 28.0499, -243.573, 9.74407, 1.08 ) }
    dend_36 { pt3dadd( 29.1936, -245.632, 11.1469, 1.08 ) }
    dend_36 { pt3dadd( 29.7551, -246.663, 11.8191, 1.08 ) }
    dend_36 { pt3dadd( 30.2752, -247.551, 12.3653, 1.08 ) }
    dend_36 { pt3dadd( 31.512, -249.705, 13.7717, 1.08 ) }
    dend_36 { pt3dadd( 32.5797, -251.861, 15.2146, 0.84 ) }
    dend_36 { pt3dadd( 33.202, -253.651, 16.4182, 1.2 ) }
    dend_36 { pt3dadd( 33.4624, -255.065, 17.3374, 1.2 ) }
    dend_36 { pt3dadd( 33.5846, -256.23, 18.1041, 1.2 ) }
    dend_36 { pt3dadd( 33.754, -259.079, 20.024, 0.96 ) }
    dend_36 { pt3dadd( 33.7756, -260.575, 21.035, 0.96 ) }
    dend_36 { pt3dadd( 33.8561, -261.962, 21.9552, 0.96 ) }
    dend_36 { pt3dadd( 33.993, -263.738, 23.083, 0.72 ) }
    dend_36 { pt3dadd( 34.0609, -264.85, 23.7387, 0.72 ) }
    dend_36 { pt3dadd( 34.2377, -266.454, 24.6344, 0.72 ) }
    dend_36 { pt3dadd( 34.735, -268.479, 25.608, 1.2 ) }
    dend_36 { pt3dadd( 35.8143, -271.468, 27.149, 0.84 ) }
    dend_36 { pt3dadd( 36.3792, -272.709, 27.8315, 0.84 ) }
    dend_36 { pt3dadd( 37.0078, -274.016, 28.615, 0.84 ) }
    dend_36 { pt3dadd( 40.4291, -281.608, 33.5573, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 17.7106, -229.971, 0.422057, 1.32 ) }
    dend_21 { pt3dadd( 18.2304, -233.24, 0.585961, 1.32 ) }
    dend_21 { pt3dadd( 18.4946, -235.266, 0.65507, 1.32 ) }
    dend_21 { pt3dadd( 18.7014, -237.239, 0.704359, 1.32 ) }
    dend_21 { pt3dadd( 18.8077, -238.709, 0.73091, 1.32 ) }
    dend_21 { pt3dadd( 19.0467, -241.838, 0.774474, 1.68 ) }
    dend_21 { pt3dadd( 19.2961, -244.45, 0.804841, 1.68 ) }
    dend_21 { pt3dadd( 19.4922, -246.363, 0.743847, 1.68 ) }
    dend_21 { pt3dadd( 19.6893, -248.166, 0.665101, 1.68 ) }
    dend_21 { pt3dadd( 20.0267, -251.202, 0.505899, 1.2 ) }
    dend_21 { pt3dadd( 20.2544, -253.2, 0.382855, 1.2 ) }
    dend_21 { pt3dadd( 20.6483, -256.218, 0.17601, 1.2 ) }
    dend_21 { pt3dadd( 21.1723, -259.65, -0.116057, 1.56 ) }
    dend_21 { pt3dadd( 21.4655, -261.374, -0.28148, 1.56 ) }
    dend_21 { pt3dadd( 21.7336, -262.861, -0.434431, 1.56 ) }
    dend_21 { pt3dadd( 22.0407, -264.425, -0.60233, 1.56 ) }
    dend_21 { pt3dadd( 22.5263, -267.14, -0.767192, 1.44 ) }
    dend_21 { pt3dadd( 23.0047, -269.89, -0.895331, 1.44 ) }
    dend_21 { pt3dadd( 23.2441, -271.138, -0.910882, 1.44 ) }
    dend_21 { pt3dadd( 23.5481, -272.654, -0.91498, 1.44 ) }
    dend_21 { pt3dadd( 23.924, -274.394, -0.885717, 1.44 ) }
    dend_21 { pt3dadd( 24.6074, -277.217, -0.727913, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.02966, 68.9847, 28.9977, 1.44 ) }
    dend_17 { pt3dadd( 3.68974, 67.4643, 29.1099, 1.44 ) }
    dend_17 { pt3dadd( 3.16371, 66.9429, 29.1837, 1.2 ) }
    dend_17 { pt3dadd( 2.03095, 66.0298, 29.3421, 0.96 ) }
    dend_17 { pt3dadd( 1.01165, 65.2081, 29.4846, 0.96 ) }
    dend_17 { pt3dadd( 0.30927, 64.6419, 29.5828, 0.96 ) }
    dend_17 { pt3dadd( -0.438268, 64.0393, 29.6873, 0.96 ) }
    dend_17 { pt3dadd( -1.19097, 63.3625, 29.7004, 0.96 ) }
    dend_17 { pt3dadd( -2.62092, 62.2075, 29.7751, 1.2 ) }
    dend_17 { pt3dadd( -10.0242, 55.8639, 28.9995, 1.2 ) }
    dend_17 { pt3dadd( -16.6801, 48.7741, 29.0544, 1.2 ) }
    dend_17 { pt3dadd( -23.3472, 41.76, 28.0353, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.02966, 68.9847, 28.9977, 0.96 ) }
    dend_12 { pt3dadd( 5.89556, 67.6115, 29.2408, 0.96 ) }
    dend_12 { pt3dadd( 6.89185, 66.0314, 29.5206, 0.96 ) }
    dend_12 { pt3dadd( 7.63286, 64.8563, 29.7287, 1.2 ) }
    dend_12 { pt3dadd( 8.04311, 64.2057, 29.8439, 1.2 ) }
    dend_12 { pt3dadd( 9.39708, 62.0584, 30.224, 0.84 ) }
    dend_12 { pt3dadd( 10.004, 61.0959, 30.3945, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.72758, 48.757, 14.7492, 1.44 ) }
    dend_8 { pt3dadd( 7.57813, 50.922, 15.154, 1.44 ) }
    dend_8 { pt3dadd( 8.22485, 52.6223, 15.4502, 1.44 ) }
    dend_8 { pt3dadd( 8.55196, 53.5131, 15.6037, 1.44 ) }
    dend_8 { pt3dadd( 9.28225, 55.5839, 15.9969, 1.44 ) }
    dend_8 { pt3dadd( 10.162, 58.0349, 16.5191, 1.32 ) }
    dend_8 { pt3dadd( 10.7195, 59.4401, 16.774, 1.32 ) }
    dend_8 { pt3dadd( 11.4359, 60.9843, 16.9961, 1.32 ) }
    dend_8 { pt3dadd( 12.0885, 62.2309, 17.1506, 1.56 ) }
    dend_8 { pt3dadd( 12.7888, 63.4155, 17.263, 1.56 ) }
    dend_8 { pt3dadd( 13.8103, 64.9406, 17.3642, 1.32 ) }
    dend_8 { pt3dadd( 15.7168, 67.4639, 17.5043, 1.32 ) }
    dend_8 { pt3dadd( 16.9396, 68.9172, 17.5742, 1.32 ) }
    dend_8 { pt3dadd( 18.0082, 70.0867, 17.5525, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 19.2065, 71.3366, 17.4536, 1.56 ) }
    dend_8 { pt3dadd( 19.8826, 72.0554, 17.3496, 1.56 ) }
    dend_8 { pt3dadd( 21.5233, 73.8462, 17.0166, 1.2 ) }
    dend_8 { pt3dadd( 22.3946, 74.8191, 16.8412, 1.2 ) }
    dend_8 { pt3dadd( 24.0966, 76.7593, 16.4509, 1.44 ) }
    dend_8 { pt3dadd( 24.9955, 77.8218, 16.1962, 1.92 ) }
    dend_8 { pt3dadd( 26.7224, 80.0326, 15.7528, 1.56 ) }
    dend_8 { pt3dadd( 27.7927, 81.5024, 15.5124, 1.32 ) }
    dend_8 { pt3dadd( 29.334, 83.81, 15.2087, 1.32 ) }
    dend_8 { pt3dadd( 30.5503, 85.7657, 15.0789, 1.32 ) }
    dend_8 { pt3dadd( 31.7377, 87.8106, 15.101, 1.56 ) }
    dend_8 { pt3dadd( 33.279, 90.7907, 15.2814, 1.2 ) }
    dend_8 { pt3dadd( 33.7434, 91.848, 15.4106, 1.2 ) }
    dend_8 { pt3dadd( 33.9888, 92.6023, 15.5332, 1.2 ) }
    dend_8 { pt3dadd( 34.2029, 93.6198, 15.7483, 0.96 ) }
    dend_8 { pt3dadd( 34.292, 94.2772, 15.9135, 1.32 ) }
    dend_8 { pt3dadd( 34.4415, 96.2087, 16.4347, 0.96 ) }
    dend_8 { pt3dadd( 34.4783, 97.1582, 16.6252, 0.96 ) }
    dend_8 { pt3dadd( 34.5134, 98.122, 16.7926, 0.96 ) }
    dend_8 { pt3dadd( 34.6484, 99.9472, 17.1175, 1.32 ) }
    dend_8 { pt3dadd( 34.7575, 100.838, 17.2807, 1.32 ) }
    dend_8 { pt3dadd( 35.0195, 102.182, 17.5733, 0.84 ) }
    dend_8 { pt3dadd( 35.4155, 103.564, 17.9433, 1.08 ) }
    dend_8 { pt3dadd( 35.8984, 104.908, 18.4015, 1.08 ) }
    dend_8 { pt3dadd( 36.6864, 106.81, 19.1495, 0.84 ) }
    dend_8 { pt3dadd( 37.0939, 107.734, 19.4769, 1.2 ) }
    dend_8 { pt3dadd( 37.5802, 108.756, 19.873, 0.84 ) }
    dend_8 { pt3dadd( 38.1492, 109.845, 20.3401, 1.2 ) }
    dend_8 { pt3dadd( 39.0442, 111.484, 21.1006, 0.96 ) }
    dend_8 { pt3dadd( 39.3402, 112.052, 21.3649, 0.96 ) }
    dend_8 { pt3dadd( 40.4743, 114.728, 22.3569, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.72758, 48.757, 14.7492, 1.08 ) }
    dend_3 { pt3dadd( 8.20811, 50.7425, 14.7985, 1.08 ) }
    dend_3 { pt3dadd( 9.97361, 53.2124, 14.8462, 1.08 ) }
    dend_3 { pt3dadd( 10.5067, 53.9732, 14.8583, 1.08 ) }
    dend_3 { pt3dadd( 11.0167, 54.7164, 14.8278, 1.08 ) }
    dend_3 { pt3dadd( 11.922, 56.0356, 14.7736, 1.32 ) }
    dend_3 { pt3dadd( 13.2669, 57.9955, 14.6932, 0.96 ) }
    dend_3 { pt3dadd( 14.1151, 59.2201, 14.6041, 1.44 ) }
    dend_3 { pt3dadd( 14.6896, 60.0684, 14.5212, 1.44 ) }
    dend_3 { pt3dadd( 15.8318, 61.8236, 14.3187, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.23023, -216.022, 4.83797, 1.08 ) }
    dend_52 { pt3dadd( 8.83763, -218.642, 5.69238, 1.08 ) }
    dend_52 { pt3dadd( 8.56495, -220.364, 6.26338, 1.08 ) }
    dend_52 { pt3dadd( 8.10444, -222.822, 7.05879, 1.08 ) }
    dend_52 { pt3dadd( 7.80599, -224.329, 7.54279, 1.08 ) }
    dend_52 { pt3dadd( 7.42183, -226.084, 8.10716, 1.08 ) }
    dend_52 { pt3dadd( 7.1312, -227.287, 8.51607, 1.08 ) }
    dend_52 { pt3dadd( 6.91837, -228.046, 8.76964, 1.08 ) }
    dend_52 { pt3dadd( 6.51818, -229.166, 9.13668, 1.08 ) }
    dend_52 { pt3dadd( 5.6996, -231.105, 9.68867, 0.84 ) }
    dend_52 { pt3dadd( 5.23276, -232.098, 9.95473, 0.84 ) }
    dend_52 { pt3dadd( 4.51113, -233.504, 10.2757, 1.32 ) }
    dend_52 { pt3dadd( 3.46678, -235.412, 10.6377, 1.32 ) }
    dend_52 { pt3dadd( 1.97517, -238.109, 11.079, 0.96 ) }
    dend_52 { pt3dadd( 0.984122, -239.954, 11.3197, 0.96 ) }
    dend_52 { pt3dadd( 0.305076, -241.304, 11.4839, 1.2 ) }
    dend_52 { pt3dadd( -0.88371, -243.964, 11.8005, 1.2 ) }
    dend_52 { pt3dadd( -1.59127, -245.782, 12.0293, 1.44 ) }
    dend_52 { pt3dadd( -2.31572, -247.946, 12.3505, 1.2 ) }
    dend_52 { pt3dadd( -2.92846, -250.223, 12.7141, 1.2 ) }
    dend_52 { pt3dadd( -3.64803, -253.246, 13.2254, 1.2 ) }
    dend_52 { pt3dadd( -3.87604, -254.339, 13.4147, 1.2 ) }
    dend_52 { pt3dadd( -4.10414, -256.12, 13.7871, 1.2 ) }
    dend_52 { pt3dadd( -4.15913, -257.117, 14.0308, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 9.23023, -216.022, 4.83797, 0.96 ) }
    dend_45 { pt3dadd( 10.0845, -219.756, 3.6355, 0.96 ) }
    dend_45 { pt3dadd( 10.5993, -222.138, 2.88565, 1.32 ) }
    dend_45 { pt3dadd( 10.7185, -223.097, 2.68463, 1.32 ) }
    dend_45 { pt3dadd( 10.8665, -224.287, 2.43531, 1.32 ) }
    dend_45 { pt3dadd( 11.1989, -226.96, 1.87508, 1.56 ) }
    dend_45 { pt3dadd( 11.4455, -228.942, 1.45951, 1.56 ) }
    dend_45 { pt3dadd( 11.5918, -230.409, 1.18432, 1.56 ) }
    dend_45 { pt3dadd( 11.8534, -234.461, 0.868041, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 24.6074, -277.217, -0.727913, 0.96 ) }
    dend_35 { pt3dadd( 24.386, -278.858, -0.057056, 0.96 ) }
    dend_35 { pt3dadd( 24.1481, -280.336, 0.495537, 0.96 ) }
    dend_35 { pt3dadd( 23.8571, -281.809, 1.0449, 1.44 ) }
    dend_35 { pt3dadd( 23.1783, -285.071, 2.30193, 1.08 ) }
    dend_35 { pt3dadd( 22.874, -286.591, 2.87291, 1.08 ) }
    dend_35 { pt3dadd( 22.4769, -288.914, 3.70738, 1.08 ) }
    dend_35 { pt3dadd( 22.3521, -290.006, 4.10058, 1.08 ) }
    dend_35 { pt3dadd( 22.1513, -292.83, 5.07649, 0.84 ) }
    dend_35 { pt3dadd( 22.0822, -295.157, 5.79903, 0.84 ) }
    dend_35 { pt3dadd( 22.0975, -296.633, 6.15772, 0.84 ) }
    dend_35 { pt3dadd( 22.1914, -298.297, 6.5407, 0.84 ) }
    dend_35 { pt3dadd( 22.3325, -299.856, 6.87198, 0.84 ) }
    dend_35 { pt3dadd( 22.4424, -301.134, 7.09721, 0.84 ) }
    dend_35 { pt3dadd( 22.4915, -302.041, 7.18934, 0.84 ) }
    dend_35 { pt3dadd( 22.5054, -303.082, 7.25522, 0.84 ) }
    dend_35 { pt3dadd( 22.3958, -304.464, 7.34492, 0.84 ) }
    dend_35 { pt3dadd( 22.1295, -305.666, 7.41248, 0.84 ) }
    dend_35 { pt3dadd( 21.7692, -306.681, 7.44768, 0.84 ) }
    dend_35 { pt3dadd( 20.968, -308.447, 7.52563, 0.6 ) }
    dend_35 { pt3dadd( 18.2756, -317.573, 8.21536, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 24.6074, -277.217, -0.727913, 0.84 ) }
    dend_22 { pt3dadd( 24.7088, -279.134, -0.828397, 0.84 ) }
    dend_22 { pt3dadd( 24.7636, -280.51, -0.930864, 0.84 ) }
    dend_22 { pt3dadd( 24.8026, -281.975, -1.08775, 0.84 ) }
    dend_22 { pt3dadd( 24.8107, -285.001, -1.4731, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 24.7937, -285.706, -1.57262, 1.2 ) }
    dend_22 { pt3dadd( 24.6606, -288.846, -2.04698, 0.96 ) }
    dend_22 { pt3dadd( 24.491, -291.483, -2.5079, 1.32 ) }
    dend_22 { pt3dadd( 24.2943, -294.83, -3.10509, 1.08 ) }
    dend_22 { pt3dadd( 24.2307, -296.716, -3.45774, 1.08 ) }
    dend_22 { pt3dadd( 24.2147, -298.107, -3.71796, 1.08 ) }
    dend_22 { pt3dadd( 24.2644, -299.144, -3.90302, 1.08 ) }
    dend_22 { pt3dadd( 24.3333, -299.854, -4.01616, 1.08 ) }
    dend_22 { pt3dadd( 24.6922, -302.642, -4.41865, 0.84 ) }
    dend_22 { pt3dadd( 25.3009, -306.249, -4.87926, 1.2 ) }
    dend_22 { pt3dadd( 25.5093, -307.267, -4.99957, 1.2 ) }
    dend_22 { pt3dadd( 26.7161, -312.542, -5.58828, 0.84 ) }
    dend_22 { pt3dadd( 27.4101, -315.514, -5.90872, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.004, 61.0959, 30.3945, 0.72 ) }
    dend_14 { pt3dadd( 9.41288, 59.9295, 30.1098, 0.72 ) }
    dend_14 { pt3dadd( 8.90302, 58.9235, 29.8643, 0.48 ) }
    dend_14 { pt3dadd( 8.28841, 57.7108, 29.5683, 0.96 ) }
    dend_14 { pt3dadd( 7.85268, 56.851, 29.3585, 0.96 ) }
    dend_14 { pt3dadd( 3.38983, 48.8349, 26.3781, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.004, 61.0959, 30.3945, 0.72 ) }
    dend_13 { pt3dadd( 10.4317, 59.6707, 30.5313, 0.72 ) }
    dend_13 { pt3dadd( 10.6509, 58.6676, 30.6428, 1.08 ) }
    dend_13 { pt3dadd( 10.9799, 56.9395, 30.7603, 0.72 ) }
    dend_13 { pt3dadd( 11.1307, 55.6913, 30.7563, 0.72 ) }
    dend_13 { pt3dadd( 11.2371, 53.9142, 30.6251, 0.72 ) }
    dend_13 { pt3dadd( 11.3321, 52.4569, 30.4666, 1.2 ) }
    dend_13 { pt3dadd( 11.325, 51.766, 30.3836, 1.2 ) }
    dend_13 { pt3dadd( 11.2229, 50.2669, 30.1768, 0.84 ) }
    dend_13 { pt3dadd( 11.0201, 48.4098, 29.8564, 0.84 ) }
    dend_13 { pt3dadd( 10.8788, 46.902, 29.4202, 1.32 ) }
    dend_13 { pt3dadd( 10.7996, 45.9281, 28.9925, 1.08 ) }
    dend_13 { pt3dadd( 10.1135, 36.519, 27.7953, 1.08 ) }
    dend_13 { pt3dadd( 8.84008, 27.1353, 26.8941, 1.08 ) }
    dend_13 { pt3dadd( 7.30736, 18.0534, 24.3922, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 40.4743, 114.728, 22.3569, 0.6 ) }
    dend_10 { pt3dadd( 41.0856, 115.62, 22.7187, 0.6 ) }
    dend_10 { pt3dadd( 41.7098, 116.53, 23.0882, 0.6 ) }
    dend_10 { pt3dadd( 42.5199, 117.713, 23.5678, 0.6 ) }
    dend_10 { pt3dadd( 43.8287, 119.622, 24.3425, 0.6 ) }
    dend_10 { pt3dadd( 44.6776, 120.861, 24.845, 0.6 ) }
    dend_10 { pt3dadd( 45.5413, 122.121, 25.3563, 0.48 ) }
    dend_10 { pt3dadd( 49.4754, 130.757, 26.7295, 0.48 ) }
    dend_10 { pt3dadd( 54.0551, 139.188, 27.2428, 0.48 ) }
    dend_10 { pt3dadd( 58.9293, 147.196, 29.5193, 0.48 ) }
    dend_10 { pt3dadd( 65.5028, 154.288, 30.5512, 0.48 ) }
    dend_10 { pt3dadd( 71.868, 161.613, 30.7035, 0.48 ) }
    dend_10 { pt3dadd( 78.7171, 168.448, 31.8556, 0.48 ) }
    dend_10 { pt3dadd( 83.9101, 176.566, 31.7576, 0.48 ) }
    dend_10 { pt3dadd( 87.2009, 185.365, 29.917, 0.48 ) }
    dend_10 { pt3dadd( 89.294, 194.631, 29.2166, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 40.4743, 114.728, 22.3569, 0.84 ) }
    dend_9 { pt3dadd( 41.8025, 117.111, 22.2445, 0.84 ) }
    dend_9 { pt3dadd( 42.552, 118.457, 22.1811, 0.84 ) }
    dend_9 { pt3dadd( 43.3509, 119.89, 22.1135, 0.36 ) }
    dend_9 { pt3dadd( 44.11, 121.253, 22.0493, 0.6 ) }
    dend_9 { pt3dadd( 44.7236, 122.354, 21.9973, 0.6 ) }
    dend_9 { pt3dadd( 45.8156, 124.313, 21.905, 0.6 ) }
    dend_9 { pt3dadd( 50.9274, 132.317, 20.2032, 0.6 ) }
    dend_9 { pt3dadd( 55.5559, 140.399, 17.7156, 0.6 ) }
    dend_9 { pt3dadd( 61.3344, 147.716, 15.0147, 0.6 ) }
    dend_9 { pt3dadd( 66.6013, 155.302, 12.1008, 0.6 ) }
    dend_9 { pt3dadd( 70.0983, 163.31, 8.01262, 0.6 ) }
    dend_9 { pt3dadd( 73.4818, 172.061, 6.08938, 0.6 ) }
    dend_9 { pt3dadd( 77.7302, 180.612, 5.12077, 0.6 ) }
    dend_9 { pt3dadd( 81.669, 189.313, 4.34589, 0.6 ) }
    dend_9 { pt3dadd( 84.0681, 198.297, 2.15074, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 15.8318, 61.8236, 14.3187, 1.08 ) }
    dend_5 { pt3dadd( 15.125, 63.4979, 14.6534, 1.08 ) }
    dend_5 { pt3dadd( 14.6695, 64.2972, 14.8925, 1.08 ) }
    dend_5 { pt3dadd( 14.0073, 65.4594, 15.2401, 1.08 ) }
    dend_5 { pt3dadd( 13.272, 66.7498, 15.626, 0.96 ) }
    dend_5 { pt3dadd( 12.2063, 68.6199, 16.1853, 0.96 ) }
    dend_5 { pt3dadd( 11.3254, 70.1657, 16.6477, 0.84 ) }
    dend_5 { pt3dadd( 10.0489, 72.0132, 17.396, 1.08 ) }
    dend_5 { pt3dadd( 4.39266, 79.7811, 18.4672, 1.08 ) }
    dend_5 { pt3dadd( -0.108503, 88.1497, 19.93, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 15.8318, 61.8236, 14.3187, 0.96 ) }
    dend_4 { pt3dadd( 17.527, 62.8918, 13.7802, 0.96 ) }
    dend_4 { pt3dadd( 18.2955, 63.3611, 13.4984, 0.96 ) }
    dend_4 { pt3dadd( 19.5064, 64.1301, 13.0196, 0.96 ) }
    dend_4 { pt3dadd( 20.9379, 65.0934, 12.3187, 0.84 ) }
    dend_4 { pt3dadd( 21.6889, 65.6104, 11.9214, 0.84 ) }
    dend_4 { pt3dadd( 22.8866, 66.4336, 11.2565, 0.84 ) }
    dend_4 { pt3dadd( 23.442, 66.7879, 10.9121, 0.84 ) }
    dend_4 { pt3dadd( 24.34, 67.331, 10.338, 0.84 ) }
    dend_4 { pt3dadd( 26.1902, 68.3143, 9.2205, 1.2 ) }
    dend_4 { pt3dadd( 26.5452, 68.4714, 9.04409, 1.2 ) }
    dend_4 { pt3dadd( 27.5119, 68.8147, 8.66341, 1.2 ) }
    dend_4 { pt3dadd( 29.0116, 69.2057, 8.24679, 1.2 ) }
    dend_4 { pt3dadd( 29.4921, 69.2953, 8.15755, 1.2 ) }
    dend_4 { pt3dadd( 31.3797, 69.5623, 7.89905, 1.2 ) }
    dend_4 { pt3dadd( 32.8749, 69.7553, 7.75194, 0.96 ) }
    dend_4 { pt3dadd( 34.3567, 69.9734, 7.60823, 0.96 ) }
    dend_4 { pt3dadd( 36.0478, 70.1969, 7.45594, 0.96 ) }
    dend_4 { pt3dadd( 37.7258, 70.4133, 7.30569, 1.32 ) }
    dend_4 { pt3dadd( 40.2561, 70.7621, 7.07112, 0.84 ) }
    dend_4 { pt3dadd( 42.447, 71.0827, 6.8555, 1.2 ) }
    dend_4 { pt3dadd( 43.981, 71.3324, 6.77072, 1.2 ) }
    dend_4 { pt3dadd( 45.4678, 71.6242, 6.76205, 0.96 ) }
    dend_4 { pt3dadd( 46.7154, 71.9179, 6.84372, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 47.6443, 72.1528, 6.98177, 1.2 ) }
    dend_4 { pt3dadd( 48.256, 72.3157, 7.12149, 1.2 ) }
    dend_4 { pt3dadd( 51.3714, 73.2536, 8.02382, 1.2 ) }
    dend_4 { pt3dadd( 52.613, 73.6994, 8.41639, 1.2 ) }
    dend_4 { pt3dadd( 53.656, 74.1532, 8.75789, 1.2 ) }
    dend_4 { pt3dadd( 55.6746, 75.0392, 9.41735, 1.08 ) }
    dend_4 { pt3dadd( 56.5881, 75.4052, 9.69207, 1.44 ) }
    dend_4 { pt3dadd( 58.3289, 75.9809, 10.0126, 1.08 ) }
    dend_4 { pt3dadd( 59.6723, 76.3431, 10.0439, 1.08 ) }
    dend_4 { pt3dadd( 60.6968, 76.6155, 9.97281, 1.08 ) }
    dend_4 { pt3dadd( 62.4256, 77.1326, 9.72417, 1.08 ) }
    dend_4 { pt3dadd( 64.3362, 77.7294, 9.32531, 1.44 ) }
    dend_4 { pt3dadd( 67.3009, 78.6637, 8.5424, 1.08 ) }
    dend_4 { pt3dadd( 69.236, 79.3387, 7.93152, 0.84 ) }
    dend_4 { pt3dadd( 70.691, 79.9377, 7.44556, 1.2 ) }
    dend_4 { pt3dadd( 72.1547, 80.5988, 6.93733, 1.2 ) }
    dend_4 { pt3dadd( 73.7836, 81.4457, 6.29564, 0.84 ) }
    dend_4 { pt3dadd( 74.9735, 82.124, 5.81348, 1.08 ) }
    dend_4 { pt3dadd( 77.5291, 83.5739, 4.85836, 0.72 ) }
    dend_4 { pt3dadd( 80.0567, 84.9024, 3.89097, 0.72 ) }
    dend_4 { pt3dadd( 81.6661, 85.6124, 3.27939, 1.2 ) }
    dend_4 { pt3dadd( 84.0395, 86.5535, 2.39031, 0.72 ) }
    dend_4 { pt3dadd( 84.8762, 86.8649, 2.097, 0.72 ) }
    dend_4 { pt3dadd( 86.628, 87.4636, 1.5473, 0.96 ) }
    dend_4 { pt3dadd( 88.4771, 88.0364, 1.02242, 0.96 ) }
    dend_4 { pt3dadd( 91.7493, 89.1504, 0.226786, 0.72 ) }
    dend_4 { pt3dadd( 93.4316, 89.8583, -0.113623, 0.6 ) }
    dend_4 { pt3dadd( 94.7861, 90.5093, -0.329816, 0.6 ) }
    dend_4 { pt3dadd( 96.5264, 91.496, -0.601276, 1.2 ) }
    dend_4 { pt3dadd( 97.0436, 91.8435, -0.67572, 1.2 ) }
    dend_4 { pt3dadd( 99.1556, 93.3968, -0.9052, 0.72 ) }
    dend_4 { pt3dadd( 100.142, 94.2141, -0.99683, 0.72 ) }
    dend_4 { pt3dadd( 100.832, 94.7717, -1.05812, 0.72 ) }
    dend_4 { pt3dadd( 102.481, 96.1623, -1.26907, 0.6 ) }
    dend_4 { pt3dadd( 102.751, 96.3897, -1.30914, 0.6 ) }
    dend_4 { pt3dadd( 104.117, 97.5177, -1.60359, 0.96 ) }
    dend_4 { pt3dadd( 105.034, 98.2969, -1.90551, 0.72 ) }
    dend_4 { pt3dadd( 105.631, 98.8339, -2.14735, 0.96 ) }
    dend_4 { pt3dadd( 107.936, 101.034, -3.21165, 0.72 ) }
    dend_4 { pt3dadd( 109.264, 102.353, -3.8847, 0.72 ) }
    dend_4 { pt3dadd( 111.028, 104.089, -4.8559, 1.2 ) }
    dend_4 { pt3dadd( 112.893, 105.85, -5.8382, 0.72 ) }
    dend_4 { pt3dadd( 114.175, 106.972, -6.44267, 0.72 ) }
    dend_4 { pt3dadd( 115.769, 108.252, -7.12046, 0.72 ) }
    dend_4 { pt3dadd( 116.394, 108.696, -7.33377, 0.72 ) }
    dend_4 { pt3dadd( 118.338, 109.994, -7.81067, 1.08 ) }
    dend_4 { pt3dadd( 120.583, 111.36, -8.05764, 0.72 ) }
    dend_4 { pt3dadd( 122.201, 112.286, -8.09338, 1.08 ) }
    dend_4 { pt3dadd( 122.623, 112.529, -8.0803, 1.08 ) }
    dend_4 { pt3dadd( 124.397, 113.503, -8.00915, 0.72 ) }
    dend_4 { pt3dadd( 125.443, 114.088, -7.9927, 0.72 ) }
    dend_4 { pt3dadd( 127.405, 115.228, -8.03647, 1.08 ) }
    dend_4 { pt3dadd( 128.178, 115.668, -8.11634, 1.08 ) }
    dend_4 { pt3dadd( 129.712, 116.499, -8.3214, 0.84 ) }
    dend_4 { pt3dadd( 132.538, 117.959, -8.73875, 0.84 ) }
    dend_4 { pt3dadd( 134.933, 119.112, -9.07037, 0.6 ) }
    dend_4 { pt3dadd( 136.798, 119.896, -9.25443, 1.08 ) }
    dend_4 { pt3dadd( 137.695, 120.221, -9.297, 1.08 ) }
    dend_4 { pt3dadd( 140.046, 121.022, -9.25541, 0.72 ) }
    dend_4 { pt3dadd( 141.218, 121.408, -9.15189, 0.72 ) }
    dend_4 { pt3dadd( 143.673, 122.24, -8.68642, 1.08 ) }
    dend_4 { pt3dadd( 145.813, 122.952, -8.12369, 0.84 ) }
    dend_4 { pt3dadd( 146.939, 123.343, -7.78487, 1.08 ) }
    dend_4 { pt3dadd( 148.624, 123.982, -7.26121, 0.84 ) }
    dend_4 { pt3dadd( 149.49, 124.315, -7.0028, 0.84 ) }
    dend_4 { pt3dadd( 151.72, 125.152, -6.43319, 0.6 ) }
    dend_4 { pt3dadd( 152.821, 125.517, -6.21383, 0.6 ) }
    dend_4 { pt3dadd( 154.509, 126.017, -5.95807, 0.96 ) }
    dend_4 { pt3dadd( 155.214, 126.16, -5.87891, 0.96 ) }
    dend_4 { pt3dadd( 157.346, 126.354, -5.68677, 0.72 ) }
    dend_4 { pt3dadd( 159.024, 126.402, -5.54686, 0.72 ) }
    dend_4 { pt3dadd( 160.39, 126.385, -5.5036, 0.72 ) }
    dend_4 { pt3dadd( 160.732, 126.391, -5.50946, 0.72 ) }
    dend_4 { pt3dadd( 161.974, 126.492, -5.63642, 0.72 ) }
    dend_4 { pt3dadd( 163.994, 126.78, -6.07219, 0.72 ) }
    dend_4 { pt3dadd( 164.558, 126.895, -6.28227, 0.72 ) }
    dend_4 { pt3dadd( 166.668, 127.383, -7.27117, 0.6 ) }
    dend_4 { pt3dadd( 167.826, 127.66, -7.88588, 0.96 ) }
    dend_4 { pt3dadd( 169.822, 128.06, -8.97751, 0.96 ) }
    dend_4 { pt3dadd( 171.098, 128.317, -9.72901, 0.96 ) }
    dend_4 { pt3dadd( 173.216, 128.689, -11.0738, 0.72 ) }
    dend_4 { pt3dadd( 175.135, 128.951, -12.2938, 0.72 ) }
    dend_4 { pt3dadd( 176.964, 129.084, -13.4333, 1.2 ) }
    dend_4 { pt3dadd( 178.684, 129.11, -14.4763, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.15913, -257.117, 14.0308, 0.48 ) }
    dend_56 { pt3dadd( -4.02258, -259.639, 14.1773, 0.48 ) }
    dend_56 { pt3dadd( -3.90027, -261.897, 14.3085, 0.48 ) }
    dend_56 { pt3dadd( -3.79562, -263.83, 14.4208, 0.84 ) }
    dend_56 { pt3dadd( -3.70514, -265.501, 14.5179, 0.84 ) }
    dend_56 { pt3dadd( -3.61772, -267.115, 14.6117, 0.6 ) }
    dend_56 { pt3dadd( -4.44085, -276.54, 13.6622, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.15913, -257.117, 14.0308, 0.84 ) }
    dend_53 { pt3dadd( -3.50156, -259.092, 14.6243, 0.84 ) }
    dend_53 { pt3dadd( -3.00017, -260.706, 15.0797, 0.84 ) }
    dend_53 { pt3dadd( -2.55634, -262.29, 15.4833, 1.08 ) }
    dend_53 { pt3dadd( -2.01484, -264.265, 15.9384, 0.84 ) }
    dend_53 { pt3dadd( -1.64012, -265.634, 16.2387, 0.84 ) }
    dend_53 { pt3dadd( -1.29218, -266.928, 16.5049, 0.84 ) }
    dend_53 { pt3dadd( -1.11471, -267.661, 16.6366, 0.84 ) }
    dend_53 { pt3dadd( -0.622509, -269.951, 16.9559, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( -0.391069, -271.247, 17.0971, 1.32 ) }
    dend_53 { pt3dadd( -0.0694213, -273.625, 17.3086, 1.2 ) }
    dend_53 { pt3dadd( 0.0689437, -275.015, 17.4132, 0.96 ) }
    dend_53 { pt3dadd( 0.195948, -276.741, 17.5625, 1.32 ) }
    dend_53 { pt3dadd( 0.271488, -278.31, 17.7201, 1.32 ) }
    dend_53 { pt3dadd( 0.291841, -280.235, 17.956, 1.08 ) }
    dend_53 { pt3dadd( 0.240202, -284.31, 18.4724, 1.08 ) }
    dend_53 { pt3dadd( 0.16628, -286.439, 18.7479, 0.84 ) }
    dend_53 { pt3dadd( 0.0860827, -288.255, 19.0109, 1.2 ) }
    dend_53 { pt3dadd( -0.0153593, -290.263, 19.3428, 1.08 ) }
    dend_53 { pt3dadd( -0.0935803, -291.883, 19.6528, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 11.8534, -234.461, 0.868041, 0.96 ) }
    dend_51 { pt3dadd( 10.638, -236.846, 1.16346, 0.96 ) }
    dend_51 { pt3dadd( 10.2002, -237.908, 1.41437, 0.96 ) }
    dend_51 { pt3dadd( 9.79505, -238.849, 1.66441, 0.96 ) }
    dend_51 { pt3dadd( 9.30959, -239.977, 1.96087, 0.96 ) }
    dend_51 { pt3dadd( 8.76472, -241.192, 2.29207, 0.96 ) }
    dend_51 { pt3dadd( 7.63868, -243.867, 3.02535, 1.44 ) }
    dend_51 { pt3dadd( 6.81093, -246.236, 3.76084, 0.96 ) }
    dend_51 { pt3dadd( 5.53874, -250.231, 5.06743, 1.44 ) }
    dend_51 { pt3dadd( 5.16937, -251.504, 5.48958, 0.96 ) }
    dend_51 { pt3dadd( 4.47568, -254.051, 6.32577, 1.56 ) }
    dend_51 { pt3dadd( 3.72577, -257.016, 7.2467, 1.2 ) }
    dend_51 { pt3dadd( 2.84006, -261.11, 8.38386, 0.96 ) }
    dend_51 { pt3dadd( 2.51949, -262.923, 8.84304, 1.44 ) }
    dend_51 { pt3dadd( 2.12264, -265.811, 9.52601, 0.96 ) }
    dend_51 { pt3dadd( 1.68547, -268.966, 10.1932, 1.32 ) }
    dend_51 { pt3dadd( 1.1836, -272.307, 10.7621, 0.96 ) }
    dend_51 { pt3dadd( 0.729229, -274.813, 11.0729, 0.96 ) }
    dend_51 { pt3dadd( 0.471248, -276.269, 11.1807, 0.96 ) }
    dend_51 { pt3dadd( 0.281189, -277.504, 11.245, 0.96 ) }
    dend_51 { pt3dadd( -0.171113, -280.811, 11.3571, 1.32 ) }
    dend_51 { pt3dadd( -0.535223, -283.732, 11.4169, 0.96 ) }
    dend_51 { pt3dadd( -0.96924, -287.897, 11.4978, 1.44 ) }
    dend_51 { pt3dadd( -1.21967, -290.937, 11.5667, 0.84 ) }
    dend_51 { pt3dadd( -1.31823, -293.119, 11.6531, 1.2 ) }
    dend_51 { pt3dadd( -1.33335, -294.243, 11.7458, 1.2 ) }
    dend_51 { pt3dadd( -1.31087, -294.998, 11.8444, 0.84 ) }
    dend_51 { pt3dadd( -1.1605, -297.908, 12.4103, 1.2 ) }
    dend_51 { pt3dadd( -1.03729, -300.584, 13.1084, 1.2 ) }
    dend_51 { pt3dadd( -1.03918, -302.398, 13.6595, 0.96 ) }
    dend_51 { pt3dadd( -1.17442, -305.394, 14.6238, 0.96 ) }
    dend_51 { pt3dadd( -1.45187, -308.188, 15.4761, 1.32 ) }
    dend_51 { pt3dadd( -1.82898, -310.504, 16.1649, 1.68 ) }
    dend_51 { pt3dadd( -2.43432, -312.909, 16.8496, 1.2 ) }
    dend_51 { pt3dadd( -3.50842, -315.939, 17.6525, 0.96 ) }
    dend_51 { pt3dadd( -4.78353, -318.58, 18.2146, 0.96 ) }
    dend_51 { pt3dadd( -6.34758, -320.864, 18.5369, 0.84 ) }
    dend_51 { pt3dadd( -7.61227, -322.037, 18.6187, 0.84 ) }
    dend_51 { pt3dadd( -9.14832, -322.648, 18.5007, 0.84 ) }
    dend_51 { pt3dadd( -10.6401, -321.995, 18.2222, 0.84 ) }
    dend_51 { pt3dadd( -11.4312, -321.318, 18.0442, 0.84 ) }
    dend_51 { pt3dadd( -12.1477, -320.458, 17.8788, 0.84 ) }
    dend_51 { pt3dadd( -12.794, -319.352, 17.7705, 1.08 ) }
    dend_51 { pt3dadd( -13.4752, -317.805, 17.6679, 0.84 ) }
    dend_51 { pt3dadd( -13.8696, -316.502, 17.6679, 0.6 ) }
    dend_51 { pt3dadd( -14.6267, -325.825, 19.4316, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 11.8534, -234.461, 0.868041, 1.08 ) }
    dend_46 { pt3dadd( 12.1798, -237.989, 1.02739, 1.08 ) }
    dend_46 { pt3dadd( 12.5443, -241.814, 1.17053, 1.44 ) }
    dend_46 { pt3dadd( 12.6756, -243.531, 1.22461, 0.84 ) }
    dend_46 { pt3dadd( 12.8453, -246.027, 1.28738, 1.32 ) }
    dend_46 { pt3dadd( 12.9582, -247.725, 1.32318, 1.32 ) }
    dend_46 { pt3dadd( 13.1455, -250.663, 1.32991, 1.32 ) }
    dend_46 { pt3dadd( 13.2201, -252.553, 1.28725, 1.32 ) }
    dend_46 { pt3dadd( 13.31, -254.614, 1.22469, 1.32 ) }
    dend_46 { pt3dadd( 13.3986, -258.421, 1.09692, 1.44 ) }
    dend_46 { pt3dadd( 13.4251, -260.29, 1.03257, 1.44 ) }
    dend_46 { pt3dadd( 13.4605, -266.176, 0.835103, 1.44 ) }
    dend_46 { pt3dadd( 13.4496, -267.647, 0.788078, 1.44 ) }
    dend_46 { pt3dadd( 13.4278, -270.192, 0.713661, 1.08 ) }
    dend_46 { pt3dadd( 13.4663, -275.274, 0.585099, 1.08 ) }
    dend_46 { pt3dadd( 13.4868, -277.887, 0.533933, 0.84 ) }
    dend_46 { pt3dadd( 13.5234, -280.9, 0.514515, 1.32 ) }
    dend_46 { pt3dadd( 13.6021, -283.284, 0.537453, 1.32 ) }
    dend_46 { pt3dadd( 13.7866, -286.982, 0.588193, 0.96 ) }
    dend_46 { pt3dadd( 13.9166, -288.903, 0.634593, 1.44 ) }
    dend_46 { pt3dadd( 14.1358, -291.72, 0.640253, 1.44 ) }
    dend_46 { pt3dadd( 14.3008, -294.704, 0.585903, 1.2 ) }
    dend_46 { pt3dadd( 14.3692, -297.687, 0.474519, 1.08 ) }
    dend_46 { pt3dadd( 14.3706, -300.064, 0.3472, 1.08 ) }
    dend_46 { pt3dadd( 14.2932, -302.307, 0.197805, 1.68 ) }
    dend_46 { pt3dadd( 14.125, -305.86, -0.0636416, 1.2 ) }
    dend_46 { pt3dadd( 14.0665, -307.327, -0.176894, 1.2 ) }
    dend_46 { pt3dadd( 13.9942, -310.261, -0.399138, 1.44 ) }
    dend_46 { pt3dadd( 13.9772, -312.833, -0.592984, 1.44 ) }
    dend_46 { pt3dadd( 14.0528, -316.001, -0.809778, 1.44 ) }
    dend_46 { pt3dadd( 14.1894, -318.73, -0.95896, 1.44 ) }
    dend_46 { pt3dadd( 14.4588, -321.854, -1.04715, 1.8 ) }
    dend_46 { pt3dadd( 14.7744, -325.092, -1.14836, 1.32 ) }
    dend_46 { pt3dadd( 14.9761, -326.989, -1.21208, 1.08 ) }
    dend_46 { pt3dadd( 15.2372, -329.645, -1.30749, 1.56 ) }
    dend_46 { pt3dadd( 15.534, -332.72, -1.43493, 1.56 ) }
    dend_46 { pt3dadd( 15.6941, -334.433, -1.51103, 1.56 ) }
    dend_46 { pt3dadd( 15.8334, -336.014, -1.58085, 1.56 ) }
    dend_46 { pt3dadd( 16.0303, -338.425, -1.67498, 1.56 ) }
    dend_46 { pt3dadd( 16.2155, -340.464, -1.73173, 1.56 ) }
    dend_46 { pt3dadd( 16.4815, -342.812, -1.80111, 1.32 ) }
    dend_46 { pt3dadd( 16.6121, -343.871, -1.83152, 1.32 ) }
    dend_46 { pt3dadd( 16.7436, -345.439, -1.885, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( 16.8615, -347.17, -1.94652, 1.32 ) }
    dend_46 { pt3dadd( 17.0319, -349.741, -2.07992, 1.32 ) }
    dend_46 { pt3dadd( 17.1559, -351.668, -2.17956, 1.32 ) }
    dend_46 { pt3dadd( 17.2638, -353.933, -2.29635, 1.68 ) }
    dend_46 { pt3dadd( 17.4358, -359.849, -2.63186, 1.32 ) }
    dend_46 { pt3dadd( 17.4561, -361.706, -2.75087, 1.32 ) }
    dend_46 { pt3dadd( 17.443, -363.836, -2.90857, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 27.4101, -315.514, -5.90872, 0.96 ) }
    dend_30 { pt3dadd( 29.7265, -316.699, -4.70109, 0.96 ) }
    dend_30 { pt3dadd( 30.8895, -317.276, -4.09936, 1.32 ) }
    dend_30 { pt3dadd( 33.2967, -318.49, -2.86239, 0.96 ) }
    dend_30 { pt3dadd( 35.0905, -319.446, -1.92194, 1.32 ) }
    dend_30 { pt3dadd( 37.3675, -320.735, -0.797181, 1.2 ) }
    dend_30 { pt3dadd( 38.5315, -321.362, -0.258733, 1.2 ) }
    dend_30 { pt3dadd( 39.6681, -321.948, 0.223341, 1.2 ) }
    dend_30 { pt3dadd( 40.4546, -322.37, 0.555679, 1.2 ) }
    dend_30 { pt3dadd( 41.363, -322.87, 0.899746, 1.2 ) }
    dend_30 { pt3dadd( 44.0491, -324.263, 1.75182, 0.96 ) }
    dend_30 { pt3dadd( 45.9624, -325.189, 2.18194, 1.32 ) }
    dend_30 { pt3dadd( 47.0941, -325.685, 2.3949, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.4101, -315.514, -5.90872, 1.08 ) }
    dend_23 { pt3dadd( 27.7223, -319.312, -5.7692, 1.08 ) }
    dend_23 { pt3dadd( 27.9209, -322.748, -5.66281, 0.72 ) }
    dend_23 { pt3dadd( 28.0205, -324.435, -5.68206, 0.72 ) }
    dend_23 { pt3dadd( 28.2364, -328.512, -5.821, 1.2 ) }
    dend_23 { pt3dadd( 28.4026, -331.833, -5.96938, 0.84 ) }
    dend_23 { pt3dadd( 28.4851, -333.841, -6.06759, 0.84 ) }
    dend_23 { pt3dadd( 28.5482, -335.311, -6.17145, 0.84 ) }
    dend_23 { pt3dadd( 28.7076, -339.161, -6.45381, 0.6 ) }
    dend_23 { pt3dadd( 28.8136, -341.303, -6.59911, 0.6 ) }
    dend_23 { pt3dadd( 29.0379, -344.156, -6.76989, 1.2 ) }
    dend_23 { pt3dadd( 29.3728, -347.407, -6.98446, 1.2 ) }
    dend_23 { pt3dadd( 29.7074, -350.144, -7.16322, 0.84 ) }
    dend_23 { pt3dadd( 29.9938, -352.419, -7.29765, 0.84 ) }
    dend_23 { pt3dadd( 30.4195, -356.031, -7.5016, 1.08 ) }
    dend_23 { pt3dadd( 30.7818, -359.16, -7.74734, 0.72 ) }
    dend_23 { pt3dadd( 31.091, -361.933, -8.04723, 1.08 ) }
    dend_23 { pt3dadd( 31.304, -363.843, -8.30024, 1.08 ) }
    dend_23 { pt3dadd( 31.4728, -365.633, -8.57104, 1.08 ) }
    dend_23 { pt3dadd( 31.691, -368.85, -9.09039, 0.72 ) }
    dend_23 { pt3dadd( 31.8022, -370.924, -9.43284, 0.72 ) }
    dend_23 { pt3dadd( 31.842, -372.922, -9.66578, 1.08 ) }
    dend_23 { pt3dadd( 31.8302, -374.44, -9.73996, 1.08 ) }
    dend_23 { pt3dadd( 31.817, -375.465, -9.72836, 1.08 ) }
    dend_23 { pt3dadd( 31.7274, -378.3, -9.66595, 0.72 ) }
    dend_23 { pt3dadd( 31.6549, -379.884, -9.63498, 0.72 ) }
    dend_23 { pt3dadd( 31.4838, -383.406, -9.64006, 1.2 ) }
    dend_23 { pt3dadd( 31.3322, -386.925, -9.70941, 1.2 ) }
    dend_23 { pt3dadd( 31.1721, -391.542, -9.90808, 1.2 ) }
    dend_23 { pt3dadd( 31.0757, -395.989, -10.2122, 0.84 ) }
    dend_23 { pt3dadd( 31.0411, -397.744, -10.383, 1.32 ) }
    dend_23 { pt3dadd( 30.9909, -399.687, -10.6357, 1.32 ) }
    dend_23 { pt3dadd( 30.979, -400.59, -10.7962, 1.32 ) }
    dend_23 { pt3dadd( 30.9543, -402.597, -11.2026, 0.96 ) }
    dend_23 { pt3dadd( 30.9185, -404.387, -11.5651, 1.56 ) }
    dend_23 { pt3dadd( 30.9206, -406.249, -11.8875, 1.56 ) }
    dend_23 { pt3dadd( 30.9498, -407.82, -12.1446, 1.08 ) }
    dend_23 { pt3dadd( 30.9649, -409.344, -12.3859, 1.08 ) }
    dend_23 { pt3dadd( 31.0289, -412.462, -12.9162, 0.84 ) }
    dend_23 { pt3dadd( 31.1169, -413.916, -13.1726, 1.44 ) }
    dend_23 { pt3dadd( 31.4067, -416.615, -13.6791, 1.08 ) }
    dend_23 { pt3dadd( 31.6853, -418.29, -14.0242, 1.08 ) }
    dend_23 { pt3dadd( 32.1773, -420.951, -14.5858, 0.72 ) }
    dend_23 { pt3dadd( 32.7438, -424.132, -15.2438, 1.08 ) }
    dend_23 { pt3dadd( 33.0651, -425.795, -15.6472, 1.08 ) }
    dend_23 { pt3dadd( 33.448, -427.683, -16.1443, 0.96 ) }
    dend_23 { pt3dadd( 34.0863, -430.885, -16.9851, 0.72 ) }
    dend_23 { pt3dadd( 34.4258, -432.481, -17.4559, 0.72 ) }
    dend_23 { pt3dadd( 34.7093, -433.613, -17.8402, 0.72 ) }
    dend_23 { pt3dadd( 35.5244, -436.971, -19.1229, 0.72 ) }
    dend_23 { pt3dadd( 35.7858, -438.294, -19.6812, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.38983, 48.8349, 26.3781, 0.6 ) }
    dend_16 { pt3dadd( -0.83032, 40.5032, 24.0818, 0.6 ) }
    dend_16 { pt3dadd( -4.91519, 31.8727, 23.1974, 0.6 ) }
    dend_16 { pt3dadd( -8.34585, 23.1984, 20.993, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.38983, 48.8349, 26.3781, 0.84 ) }
    dend_15 { pt3dadd( -1.35582, 41.1469, 22.9158, 0.6 ) }
    dend_15 { pt3dadd( -8.05961, 34.3946, 20.7851, 0.6 ) }
    dend_15 { pt3dadd( -14.5445, 27.2865, 19.3841, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.108503, 88.1497, 19.93, 0.6 ) }
    dend_7 { pt3dadd( -5.02578, 95.8359, 23.149, 0.6 ) }
    dend_7 { pt3dadd( -11.4451, 102.373, 26.5308, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.108503, 88.1497, 19.93, 0.84 ) }
    dend_6 { pt3dadd( -4.92996, 96.4582, 20.4453, 0.6 ) }
    dend_6 { pt3dadd( -8.27928, 105.409, 20.3566, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.0935803, -291.883, 19.6528, 0.6 ) }
    dend_55 { pt3dadd( -1.64143, -291.561, 20.6402, 0.6 ) }
    dend_55 { pt3dadd( -3.56782, -291.161, 21.8691, 0.6 ) }
    dend_55 { pt3dadd( -4.47287, -290.973, 22.4464, 0.6 ) }
    dend_55 { pt3dadd( -5.55924, -290.747, 23.1394, 0.96 ) }
    dend_55 { pt3dadd( -14.1064, -287.974, 27.4325, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -0.0935803, -291.883, 19.6528, 0.96 ) }
    dend_54 { pt3dadd( -0.380495, -293.126, 19.7341, 0.96 ) }
    dend_54 { pt3dadd( -0.661804, -294.345, 19.8138, 0.72 ) }
    dend_54 { pt3dadd( -1.12143, -296.337, 19.944, 0.72 ) }
    dend_54 { pt3dadd( -3.70997, -305.238, 22.2908, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 17.443, -363.836, -2.90857, 0.84 ) }
    dend_50 { pt3dadd( 19.0211, -366.01, -3.93063, 0.84 ) }
    dend_50 { pt3dadd( 20.6481, -367.97, -4.91627, 0.84 ) }
    dend_50 { pt3dadd( 21.0691, -368.505, -5.20524, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( 22.0781, -369.897, -6.00879, 0.84 ) }
    dend_50 { pt3dadd( 23.3133, -371.766, -7.08218, 0.6 ) }
    dend_50 { pt3dadd( 24.3582, -373.437, -8.01693, 1.08 ) }
    dend_50 { pt3dadd( 25.0904, -374.718, -8.71582, 1.08 ) }
    dend_50 { pt3dadd( 26.2106, -376.679, -9.77286, 0.72 ) }
    dend_50 { pt3dadd( 27.1337, -378.37, -10.6162, 0.72 ) }
    dend_50 { pt3dadd( 27.6451, -379.399, -11.1425, 0.72 ) }
    dend_50 { pt3dadd( 28.0638, -380.245, -11.6492, 0.72 ) }
    dend_50 { pt3dadd( 28.4826, -381.154, -12.2139, 1.2 ) }
    dend_50 { pt3dadd( 29.5233, -383.404, -13.5661, 0.84 ) }
    dend_50 { pt3dadd( 30.9358, -386.266, -15.2, 1.08 ) }
    dend_50 { pt3dadd( 32.5118, -389.455, -16.9429, 1.08 ) }
    dend_50 { pt3dadd( 34.0648, -392.666, -18.6803, 0.84 ) }
    dend_50 { pt3dadd( 34.716, -394.091, -19.4123, 0.84 ) }
    dend_50 { pt3dadd( 35.4806, -395.803, -20.2439, 1.32 ) }
    dend_50 { pt3dadd( 36.4368, -398.009, -21.2001, 0.84 ) }
    dend_50 { pt3dadd( 36.8048, -398.816, -21.5187, 0.84 ) }
    dend_50 { pt3dadd( 37.4526, -400.162, -21.9417, 1.32 ) }
    dend_50 { pt3dadd( 38.461, -402.234, -22.5859, 0.84 ) }
    dend_50 { pt3dadd( 39.178, -403.617, -23.1704, 1.44 ) }
    dend_50 { pt3dadd( 40.3856, -406.005, -24.4354, 1.2 ) }
    dend_50 { pt3dadd( 40.9151, -407.066, -25.0922, 1.2 ) }
    dend_50 { pt3dadd( 41.6011, -408.463, -25.9954, 1.44 ) }
    dend_50 { pt3dadd( 42.4723, -410.272, -27.1977, 1.08 ) }
    dend_50 { pt3dadd( 43.9939, -413.57, -29.3886, 0.84 ) }
    dend_50 { pt3dadd( 44.7726, -415.338, -30.5224, 1.44 ) }
    dend_50 { pt3dadd( 45.5219, -417.198, -31.6559, 0.96 ) }
    dend_50 { pt3dadd( 45.9932, -418.585, -32.4111, 0.96 ) }
    dend_50 { pt3dadd( 46.3018, -419.685, -32.9201, 1.44 ) }
    dend_50 { pt3dadd( 46.8065, -422.218, -33.9079, 0.96 ) }
    dend_50 { pt3dadd( 46.8979, -422.902, -34.1362, 0.96 ) }
    dend_50 { pt3dadd( 47.1787, -425.503, -34.9524, 1.44 ) }
    dend_50 { pt3dadd( 47.4388, -428.277, -35.8492, 0.84 ) }
    dend_50 { pt3dadd( 47.6983, -431.415, -37.0425, 1.44 ) }
    dend_50 { pt3dadd( 47.9277, -434.664, -38.3978, 0.84 ) }
    dend_50 { pt3dadd( 47.9781, -435.604, -38.8309, 0.84 ) }
    dend_50 { pt3dadd( 48.132, -438.091, -40.0911, 1.44 ) }
    dend_50 { pt3dadd( 48.4119, -441.552, -41.9745, 1.44 ) }
    dend_50 { pt3dadd( 48.6983, -445.351, -44.096, 1.08 ) }
    dend_50 { pt3dadd( 48.8635, -447.374, -45.2727, 0.72 ) }
    dend_50 { pt3dadd( 49.0531, -449.43, -46.5201, 1.32 ) }
    dend_50 { pt3dadd( 49.1875, -451.25, -47.6591, 0.72 ) }
    dend_50 { pt3dadd( 49.2096, -452.173, -48.2469, 0.72 ) }
    dend_50 { pt3dadd( 49.1417, -454.653, -49.7899, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 17.443, -363.836, -2.90857, 1.08 ) }
    dend_47 { pt3dadd( 17.2312, -366.229, -3.10396, 1.08 ) }
    dend_47 { pt3dadd( 17.1654, -367.809, -3.19923, 1.08 ) }
    dend_47 { pt3dadd( 17.1259, -368.946, -3.2076, 1.08 ) }
    dend_47 { pt3dadd( 17.0176, -371.09, -3.35918, 1.08 ) }
    dend_47 { pt3dadd( 16.8932, -373.682, -3.69715, 1.44 ) }
    dend_47 { pt3dadd( 16.8011, -376.177, -4.09602, 0.96 ) }
    dend_47 { pt3dadd( 16.7902, -378.24, -4.47416, 0.96 ) }
    dend_47 { pt3dadd( 16.8279, -380.249, -4.91531, 0.96 ) }
    dend_47 { pt3dadd( 16.948, -384.04, -5.71825, 0.96 ) }
    dend_47 { pt3dadd( 17.0671, -386.515, -6.18548, 0.84 ) }
    dend_47 { pt3dadd( 17.1652, -387.973, -6.41817, 1.44 ) }
    dend_47 { pt3dadd( 17.3089, -390.224, -6.71401, 1.08 ) }
    dend_47 { pt3dadd( 17.4524, -392.027, -6.89185, 1.08 ) }
    dend_47 { pt3dadd( 17.7039, -394.7, -7.07654, 1.56 ) }
    dend_47 { pt3dadd( 18.1399, -398.857, -7.12906, 1.32 ) }
    dend_47 { pt3dadd( 18.3418, -400.928, -7.1415, 0.96 ) }
    dend_47 { pt3dadd( 18.5194, -402.993, -7.17106, 1.32 ) }
    dend_47 { pt3dadd( 18.8422, -406.84, -7.25408, 1.08 ) }
    dend_47 { pt3dadd( 19.0423, -409.266, -7.35284, 0.72 ) }
    dend_47 { pt3dadd( 19.1903, -411.396, -7.4871, 1.32 ) }
    dend_47 { pt3dadd( 19.3786, -414.376, -7.65674, 1.08 ) }
    dend_47 { pt3dadd( 19.5157, -416.749, -7.76408, 1.56 ) }
    dend_47 { pt3dadd( 19.6717, -419.472, -7.84786, 0.84 ) }
    dend_47 { pt3dadd( 19.8564, -422.789, -7.93781, 0.6 ) }
    dend_47 { pt3dadd( 19.9391, -424.219, -7.97511, 1.08 ) }
    dend_47 { pt3dadd( 20.1067, -427.256, -8.05507, 1.2 ) }
    dend_47 { pt3dadd( 20.2725, -429.978, -8.12359, 0.72 ) }
    dend_47 { pt3dadd( 20.3361, -430.884, -8.15148, 0.72 ) }
    dend_47 { pt3dadd( 20.6576, -435.223, -8.32055, 1.32 ) }
    dend_47 { pt3dadd( 20.7412, -436.017, -8.3607, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 47.0941, -325.685, 2.3949, 0.96 ) }
    dend_34 { pt3dadd( 48.9535, -324.489, 2.74027, 0.96 ) }
    dend_34 { pt3dadd( 49.7014, -324.008, 2.87919, 0.96 ) }
    dend_34 { pt3dadd( 50.6125, -323.422, 3.04842, 0.84 ) }
    dend_34 { pt3dadd( 52.8045, -322.012, 3.45558, 0.84 ) }
    dend_34 { pt3dadd( 54.1318, -321.158, 3.70212, 1.08 ) }
    dend_34 { pt3dadd( 55.2889, -320.413, 3.91706, 1.08 ) }
    dend_34 { pt3dadd( 63.054, -314.606, 5.44462, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 47.0941, -325.685, 2.3949, 0.6 ) }
    dend_31 { pt3dadd( 48.2949, -327.261, 3.2905, 0.6 ) }
    dend_31 { pt3dadd( 49.7426, -329.274, 4.60336, 1.08 ) }
    dend_31 { pt3dadd( 51.2014, -331.51, 6.07289, 0.96 ) }
    dend_31 { pt3dadd( 52.0134, -332.767, 6.89023, 0.96 ) }
    dend_31 { pt3dadd( 52.8601, -334.079, 7.74244, 1.32 ) }
    dend_31 { pt3dadd( 54.408, -336.476, 9.3004, 1.08 ) }
    dend_31 { pt3dadd( 55.0283, -337.508, 10.0286, 1.08 ) }
    dend_31 { pt3dadd( 56.1961, -339.562, 11.6179, 1.08 ) }
    dend_31 { pt3dadd( 57.2399, -341.494, 13.0759, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 35.7858, -438.294, -19.6812, 0.72 ) }
    dend_27 { pt3dadd( 35.6161, -439.699, -20.0269, 0.72 ) }
    dend_27 { pt3dadd( 35.4846, -441.042, -20.3153, 0.72 ) }
    dend_27 { pt3dadd( 35.2902, -442.881, -20.7179, 0.72 ) }
    dend_27 { pt3dadd( 35.1304, -444.099, -20.9708, 0.72 ) }
    dend_27 { pt3dadd( 35.0594, -444.658, -21.0874, 0.72 ) }
    dend_27 { pt3dadd( 34.8454, -446.587, -21.4806, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 34.718, -447.599, -21.6627, 0.6 ) }
    dend_27 { pt3dadd( 34.5971, -448.479, -21.8085, 0.6 ) }
    dend_27 { pt3dadd( 34.373, -449.996, -22.0217, 0.48 ) }
    dend_27 { pt3dadd( 34.2359, -450.851, -22.1543, 0.48 ) }
    dend_27 { pt3dadd( 33.9151, -452.658, -22.4543, 0.84 ) }
    dend_27 { pt3dadd( 33.4489, -454.693, -22.8223, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 35.7858, -438.294, -19.6812, 0.72 ) }
    dend_24 { pt3dadd( 36.619, -440.274, -19.6222, 0.72 ) }
    dend_24 { pt3dadd( 37.7919, -443.06, -19.5392, 1.2 ) }
    dend_24 { pt3dadd( 38.182, -443.986, -19.5116, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 20.7412, -436.017, -8.3607, 0.48 ) }
    dend_49 { pt3dadd( 18.7772, -437.355, -8.23824, 0.48 ) }
    dend_49 { pt3dadd( 18.4197, -437.573, -8.22337, 0.48 ) }
    dend_49 { pt3dadd( 17.2858, -438.346, -8.18526, 0.48 ) }
    dend_49 { pt3dadd( 16.0245, -439.36, -8.03331, 0.48 ) }
    dend_49 { pt3dadd( 15.4701, -439.857, -7.92033, 0.48 ) }
    dend_49 { pt3dadd( 14.0049, -441.212, -7.57084, 0.96 ) }
    dend_49 { pt3dadd( 12.2908, -442.833, -7.07497, 0.6 ) }
    dend_49 { pt3dadd( 11.0131, -444.118, -6.65638, 0.6 ) }
    dend_49 { pt3dadd( 9.11845, -446.109, -5.96009, 1.08 ) }
    dend_49 { pt3dadd( 7.76733, -447.58, -5.40433, 0.84 ) }
    dend_49 { pt3dadd( 6.9211, -448.566, -5.01014, 0.84 ) }
    dend_49 { pt3dadd( 5.95795, -449.85, -4.46365, 1.2 ) }
    dend_49 { pt3dadd( 4.91993, -451.27, -3.78372, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 20.7412, -436.017, -8.3607, 0.84 ) }
    dend_48 { pt3dadd( 21.2677, -439.311, -8.86733, 0.84 ) }
    dend_48 { pt3dadd( 21.3948, -440.88, -9.09404, 0.84 ) }
    dend_48 { pt3dadd( 21.4811, -442.268, -9.27313, 0.84 ) }
    dend_48 { pt3dadd( 21.6969, -445.803, -9.73664, 0.84 ) }
    dend_48 { pt3dadd( 21.7819, -447.114, -9.90464, 0.84 ) }
    dend_48 { pt3dadd( 21.9798, -450.164, -10.2813, 1.44 ) }
    dend_48 { pt3dadd( 22.1079, -452.417, -10.5744, 1.08 ) }
    dend_48 { pt3dadd( 22.2219, -454.984, -10.8719, 1.08 ) }
    dend_48 { pt3dadd( 22.2972, -457.428, -11.0999, 0.84 ) }
    dend_48 { pt3dadd( 22.3487, -458.962, -11.1881, 0.84 ) }
    dend_48 { pt3dadd( 22.4527, -460.316, -11.2462, 1.08 ) }
    dend_48 { pt3dadd( 22.7304, -462.112, -11.3157, 0.6 ) }
    dend_48 { pt3dadd( 23.028, -463.556, -11.3589, 0.6 ) }
    dend_48 { pt3dadd( 23.35, -465.064, -11.3655, 0.6 ) }
    dend_48 { pt3dadd( 23.804, -467.058, -11.3965, 1.2 ) }
    dend_48 { pt3dadd( 24.2847, -469.053, -11.481, 1.2 ) }
    dend_48 { pt3dadd( 24.5978, -470.437, -11.5649, 1.2 ) }
    dend_48 { pt3dadd( 24.9142, -472.002, -11.6783, 0.96 ) }
    dend_48 { pt3dadd( 25.1088, -473.044, -11.7576, 1.44 ) }
    dend_48 { pt3dadd( 25.4245, -475.111, -11.9119, 1.44 ) }
    dend_48 { pt3dadd( 25.7714, -478.063, -12.123, 0.96 ) }
    dend_48 { pt3dadd( 26.0802, -481.32, -12.3374, 1.32 ) }
    dend_48 { pt3dadd( 26.2053, -482.67, -12.4178, 1.32 ) }
    dend_48 { pt3dadd( 26.4772, -485.698, -12.5744, 0.84 ) }
    dend_48 { pt3dadd( 26.6651, -488.188, -12.6859, 1.32 ) }
    dend_48 { pt3dadd( 26.757, -489.544, -12.7189, 1.32 ) }
    dend_48 { pt3dadd( 26.8502, -491.137, -12.7883, 1.32 ) }
    dend_48 { pt3dadd( 27.02, -494.221, -12.9675, 1.32 ) }
    dend_48 { pt3dadd( 27.0993, -496.251, -13.1037, 0.96 ) }
    dend_48 { pt3dadd( 27.1348, -497.875, -13.2242, 0.96 ) }
    dend_48 { pt3dadd( 27.246, -501.525, -13.5176, 1.44 ) }
    dend_48 { pt3dadd( 27.3172, -503.762, -13.7254, 1.08 ) }
    dend_48 { pt3dadd( 27.3376, -505.56, -13.9148, 1.08 ) }
    dend_48 { pt3dadd( 27.3304, -507.362, -14.1511, 1.08 ) }
    dend_48 { pt3dadd( 27.3531, -509.563, -14.4617, 1.08 ) }
    dend_48 { pt3dadd( 27.3994, -511.924, -14.8017, 1.08 ) }
    dend_48 { pt3dadd( 27.4521, -515.263, -15.3243, 1.08 ) }
    dend_48 { pt3dadd( 27.5703, -520.216, -16.1446, 0.96 ) }
    dend_48 { pt3dadd( 27.7431, -527.821, -17.4566, 1.32 ) }
    dend_48 { pt3dadd( 27.7993, -530.324, -17.9024, 0.84 ) }
    dend_48 { pt3dadd( 27.8278, -531.814, -18.1705, 0.84 ) }
    dend_48 { pt3dadd( 27.8539, -533.841, -18.527, 0.84 ) }
    dend_48 { pt3dadd( 27.8692, -535.391, -18.7775, 0.84 ) }
    dend_48 { pt3dadd( 27.9085, -538.438, -19.2119, 0.84 ) }
    dend_48 { pt3dadd( 27.8857, -539.956, -19.3834, 0.84 ) }
    dend_48 { pt3dadd( 27.829, -541.216, -19.5111, 0.84 ) }
    dend_48 { pt3dadd( 27.744, -542.536, -19.6177, 1.2 ) }
    dend_48 { pt3dadd( 27.5948, -545.017, -19.775, 0.72 ) }
    dend_48 { pt3dadd( 27.4255, -546.949, -19.8902, 1.32 ) }
    dend_48 { pt3dadd( 27.2744, -548.485, -20.0414, 0.84 ) }
    dend_48 { pt3dadd( 27.074, -550.277, -20.237, 1.56 ) }
    dend_48 { pt3dadd( 26.5048, -554.642, -20.827, 0.84 ) }
    dend_48 { pt3dadd( 26.2539, -556.265, -21.0761, 1.32 ) }
    dend_48 { pt3dadd( 25.7029, -559.19, -21.5646, 0.84 ) }
    dend_48 { pt3dadd( 24.7886, -563.536, -22.3082, 0.6 ) }
    dend_48 { pt3dadd( 24.5099, -564.826, -22.5249, 1.08 ) }
    dend_48 { pt3dadd( 23.9768, -567.247, -22.9146, 0.84 ) }
    dend_48 { pt3dadd( 23.5141, -569.26, -23.2464, 1.44 ) }
    dend_48 { pt3dadd( 23.0051, -571.364, -23.574, 0.96 ) }
    dend_48 { pt3dadd( 22.6153, -573.101, -23.8173, 0.72 ) }
    dend_48 { pt3dadd( 22.2196, -574.774, -23.949, 0.72 ) }
    dend_48 { pt3dadd( 21.5354, -577.909, -24.1945, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 57.2399, -341.494, 13.0759, 0.84 ) }
    dend_33 { pt3dadd( 59.7052, -340.975, 13.4801, 0.84 ) }
    dend_33 { pt3dadd( 60.7876, -340.747, 13.6576, 0.84 ) }
    dend_33 { pt3dadd( 63.3343, -340.211, 14.0751, 0.72 ) }
    dend_33 { pt3dadd( 64.9432, -339.872, 14.3389, 0.72 ) }
    dend_33 { pt3dadd( 74.8956, -339.258, 15.0689, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 57.2399, -341.494, 13.0759, 0.72 ) }
    dend_32 { pt3dadd( 58.2774, -343.217, 13.6958, 0.72 ) }
    dend_32 { pt3dadd( 59.3776, -345.044, 14.3532, 0.84 ) }
    dend_32 { pt3dadd( 59.842, -345.815, 14.6307, 0.84 ) }
    dend_32 { pt3dadd( 60.8145, -347.431, 15.2118, 0.6 ) }
    dend_32 { pt3dadd( 61.4878, -348.549, 15.6141, 0.6 ) }
    dend_32 { pt3dadd( 62.1917, -349.718, 16.0347, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 67.5343, -356.994, 19.6116, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 33.4489, -454.693, -22.8223, 0.48 ) }
    dend_29 { pt3dadd( 29.1365, -455.028, -24.6695, 0.48 ) }
    dend_29 { pt3dadd( 28.1333, -455.106, -25.0993, 1.08 ) }
    dend_29 { pt3dadd( 27.1003, -455.187, -25.5418, 0.48 ) }
    dend_29 { pt3dadd( 25.8042, -455.288, -26.097, 0.96 ) }
    dend_29 { pt3dadd( 24.7078, -455.373, -26.5666, 0.48 ) }
    dend_29 { pt3dadd( 22.5681, -455.539, -27.4831, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 33.4489, -454.693, -22.8223, 0.96 ) }
    dend_28 { pt3dadd( 33.3749, -456.126, -24.0501, 0.96 ) }
    dend_28 { pt3dadd( 33.1818, -458.661, -26.0886, 0.48 ) }
    dend_28 { pt3dadd( 33.1032, -459.658, -26.8224, 0.48 ) }
    dend_28 { pt3dadd( 32.9926, -461.707, -28.2509, 0.84 ) }
    dend_28 { pt3dadd( 32.928, -463.197, -29.275, 0.6 ) }
    dend_28 { pt3dadd( 32.9036, -463.919, -29.7646, 0.6 ) }
    dend_28 { pt3dadd( 32.9042, -465.487, -30.8807, 0.96 ) }
    dend_28 { pt3dadd( 32.9265, -466.534, -31.6342, 0.96 ) }
    dend_28 { pt3dadd( 33.0251, -468.544, -33.1995, 0.72 ) }
    dend_28 { pt3dadd( 33.1939, -470.48, -34.8307, 0.72 ) }
    dend_28 { pt3dadd( 33.427, -471.998, -36.3743, 1.2 ) }
    dend_28 { pt3dadd( 33.6932, -473.421, -37.9243, 1.2 ) }
    dend_28 { pt3dadd( 33.883, -474.276, -38.9384, 1.2 ) }
    dend_28 { pt3dadd( 34.1324, -475.283, -40.2729, 1.08 ) }
    dend_28 { pt3dadd( 34.5013, -476.542, -42.1586, 0.84 ) }
    dend_28 { pt3dadd( 35.0324, -477.844, -44.4099, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 38.182, -443.986, -19.5116, 0.72 ) }
    dend_26 { pt3dadd( 41.8839, -444.585, -19.5116, 0.72 ) }
    dend_26 { pt3dadd( 44.0993, -444.943, -19.5116, 0.72 ) }
    dend_26 { pt3dadd( 45.525, -445.173, -19.5116, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 38.182, -443.986, -19.5116, 0.48 ) }
    dend_25 { pt3dadd( 38.1811, -447.051, -19.5116, 0.48 ) }
    dend_25 { pt3dadd( 38.0872, -448.777, -19.5317, 0.96 ) }
    dend_25 { pt3dadd( 38.0107, -449.576, -19.5449, 0.96 ) }
    dend_25 { pt3dadd( 37.7635, -451.515, -19.58, 0.48 ) }
    dend_25 { pt3dadd( 37.5832, -452.685, -19.6011, 0.48 ) }
    dend_25 { pt3dadd( 37.2794, -454.599, -19.6348, 0.96 ) }
    dend_25 { pt3dadd( 36.931, -456.512, -19.6723, 0.96 ) }
    dend_25 { pt3dadd( 36.6757, -457.778, -19.697, 0.96 ) }
    dend_25 { pt3dadd( 36.2336, -459.668, -19.7473, 1.32 ) }
    dend_25 { pt3dadd( 35.7306, -461.56, -19.8082, 0.96 ) }
    dend_25 { pt3dadd( 35.5384, -462.301, -19.8341, 0.96 ) }
    dend_25 { pt3dadd( 35.3377, -463.193, -19.8652, 0.96 ) }
    dend_25 { pt3dadd( 35.0642, -464.66, -19.9104, 1.32 ) }
    dend_25 { pt3dadd( 34.8634, -466.208, -19.9599, 0.96 ) }
    dend_25 { pt3dadd( 34.7465, -467.903, -20.0152, 0.6 ) }
    dend_25 { pt3dadd( 34.7444, -469.161, -20.1271, 0.6 ) }
    dend_25 { pt3dadd( 34.8663, -470.717, -20.4324, 1.32 ) }
    dend_25 { pt3dadd( 35.1304, -472.336, -20.9274, 0.84 ) }
    dend_25 { pt3dadd( 35.4276, -473.678, -21.4261, 0.84 ) }
    dend_25 { pt3dadd( 35.5941, -474.283, -21.6699, 0.84 ) }
    dend_25 { pt3dadd( 36.3204, -476.694, -22.7094, 0.84 ) }
    dend_25 { pt3dadd( 37.1057, -479.205, -23.8359, 1.44 ) }
    dend_25 { pt3dadd( 37.8803, -481.873, -25.0511, 0.96 ) }
    dend_25 { pt3dadd( 38.1386, -483.008, -25.5105, 0.96 ) }
    dend_25 { pt3dadd( 38.3645, -484.558, -26.03, 0.96 ) }
    dend_25 { pt3dadd( 38.4435, -485.696, -26.3065, 0.96 ) }
    dend_25 { pt3dadd( 38.422, -486.871, -26.4477, 0.96 ) }
    dend_25 { pt3dadd( 38.1045, -489.651, -26.5277, 0.72 ) }
    dend_25 { pt3dadd( 37.5861, -492.511, -26.4479, 1.08 ) }
    dend_25 { pt3dadd( 37.1681, -494.398, -26.3369, 0.72 ) }
    dend_25 { pt3dadd( 36.7293, -496.168, -26.1938, 1.2 ) }
    dend_25 { pt3dadd( 36.2168, -498.209, -25.9943, 0.96 ) }
    dend_25 { pt3dadd( 35.4211, -501.414, -25.6313, 1.44 ) }
    dend_25 { pt3dadd( 34.897, -503.604, -25.3624, 0.96 ) }
    dend_25 { pt3dadd( 34.6109, -504.86, -25.2719, 0.72 ) }
    dend_25 { pt3dadd( 33.9295, -507.997, -25.1696, 1.08 ) }
    dend_25 { pt3dadd( 33.5236, -509.878, -25.1902, 0.6 ) }
    dend_25 { pt3dadd( 33.2543, -511.117, -25.2077, 0.6 ) }
    dend_25 { pt3dadd( 32.9231, -512.63, -25.2247, 1.2 ) }
    dend_25 { pt3dadd( 32.088, -516.113, -25.1627, 0.72 ) }
    dend_25 { pt3dadd( 31.7053, -517.557, -25.1415, 1.08 ) }
    dend_25 { pt3dadd( 31.0348, -519.751, -25.0933, 0.96 ) }
    dend_25 { pt3dadd( 30.3013, -521.903, -25.0324, 0.72 ) }
    dend_25 { pt3dadd( 29.8752, -523.13, -24.9772, 0.72 ) }
    dend_25 { pt3dadd( 28.8086, -526.117, -24.7536, 0.72 ) }
    dend_25 { pt3dadd( 27.945, -528.354, -24.4517, 0.72 ) }
    dend_25 { pt3dadd( 27.5588, -529.33, -24.3381, 1.2 ) }
    dend_25 { pt3dadd( 27.0059, -530.712, -24.2655, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_61 nseg = 7
    dend_40 nseg = 5
    dend_19 nseg = 3
    dend_77 nseg = 7
    dend_76 nseg = 3
    dend_72 nseg = 9
    dend_71 nseg = 3
    dend_68 nseg = 7
    dend_67 nseg = 7
    dend_62 nseg = 7
    dend_37 nseg = 5
    dend_20 nseg = 9
    dend_60 nseg = 3
    dend_59 nseg = 9
    dend_57 nseg = 5
    dend_44 nseg = 7
    dend_39 nseg = 9
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_8 nseg = 3
    dend_52 nseg = 3
    dend_35 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 9
    dend_51 nseg = 5
    dend_46 nseg = 7
    dend_23 nseg = 7
    dend_50 nseg = 5
    dend_47 nseg = 3
    dend_48 nseg = 7
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_DBC_b8f064ed89_0_0


