// Cell: dNAC222_L5_LBC_f906bb679c_0_0
/*
{
  "id" : "dNAC222_L5_LBC_f906bb679c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.18524, -4.81916, 0.0, 3.9822", "-8.34327, -4.32353, 0.0, 6.87607", "-7.5013, -3.82789, 0.0, 10.1189", "-6.65933, -3.33226, 0.0, 12.2867", "-5.81736, -2.83662, 0.0, 13.8376", "-4.97539, -2.34099, 0.0, 14.8265", "-4.13342, -1.84535, 0.0, 15.382", "-3.29145, -1.34972, 0.0, 16.0094", "-2.44948, -0.854082, 0.0, 16.562", "-1.60751, -0.358447, 0.0, 16.8144", "-0.765536, 0.137188, 0.0, 17.0145", "0.0764342, 0.632823, 0.0, 17.0541", "0.918405, 1.12846, 0.0, 16.8224", "1.76037, 1.62409, 0.0, 16.2232", "2.60235, 2.11973, 0.0, 15.3709", "3.44432, 2.61536, 0.0, 14.0738", "4.28629, 3.111, 0.0, 12.5479", "5.12826, 3.60663, 0.0, 11.1251", "5.97023, 4.10227, 0.0, 9.76121", "6.8122, 4.5979, 0.0, 7.58188", "7.65417, 5.09354, 0.0, 4.50057" ]
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-4.45607, 3.26886, -15.4, 1.55", "-4.45607, 3.26886, -15.4, 1.55", "-5.04783, 3.45058, -15.4, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.93607, -6.92964, -8.99, 1.77", "-4.93607, -6.92964, -8.99, 1.62", "-5.50802, -7.47136, -9.15341, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.77393, 3.15186, 4.25, 0.96", "8.77393, 3.15186, 4.25, 0.96", "9.55214, 3.22134, 4.13786, 0.81", "10.3125, 3.24511, 4.02193, 0.74", "11.1363, 3.27086, 3.89631, 0.66", "11.9663, 3.2968, 3.76976, 0.66", "12.7296, 3.32065, 3.65337, 1.25", "13.5136, 3.32361, 3.52252, 1.92", "14.0369, 3.28951, 3.41629, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.38393, 6.75936, 4.97, 0.74", "5.08111, 7.06036, 5.31952, 0.74", "4.60932, 7.46381, 5.74416, 0.74", "3.82596, 8.05971, 6.38964, 0.74", "2.96727, 8.67902, 7.10127, 0.59", "2.031, 9.35709, 7.90039, 0.74", "1.20589, 9.98427, 8.61901, 0.96", "0.241876, 10.7495, 9.44217, 0.52", "-0.45768, 11.3484, 10.0627, 0.22", "-1.00395, 11.894, 10.6309, 0.22", "-1.37633, 12.3754, 11.1239, 0.66", "-1.63162, 12.8152, 11.5862, 0.66", "-2.0329, 13.6884, 12.5266, 0.29", "-2.23128, 14.303, 13.1577, 0.29", "-2.43095, 15.139, 13.9636, 1.03", "-2.56172, 15.771, 14.5561, 2.51", "-2.75063, 16.6582, 15.4263, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.87607, 3.60036, 6.38, 0.52", "-8.16449, 3.57447, 6.2778, 0.52", "-8.70546, 3.53621, 6.06686, 0.52", "-9.04143, 3.51569, 5.93871, 0.74", "-9.72262, 3.50954, 5.69247, 1.25", "-10.283, 3.54565, 5.50429, 1.33", "-11.1029, 3.65858, 5.25009, 0.74", "-11.8703, 3.83438, 5.02998, 0.59", "-12.4886, 4.03898, 4.86457, 0.29", "-13.0935, 4.31331, 4.71482, 0.44", "-13.7687, 4.71605, 4.57987, 0.59", "-14.3279, 5.10604, 4.48831, 0.44", "-14.6435, 5.34265, 4.44893, 0.81", "-15.062, 5.65303, 4.41228, 1.62", "-15.6171, 6.01396, 4.35708, 1.77", "-16.5432, 6.43836, 4.2532, 0.37", "-16.9373, 6.5433, 4.21188, 0.37", "-17.328, 6.5959, 4.17162, 0.52", "-17.8013, 6.61927, 4.12894, 0.59", "-18.4527, 6.62725, 4.08374, 0.22", "-18.87, 6.64606, 4.03687, 0.29", "-19.3053, 6.6849, 3.98015, 0.74", "-19.9065, 6.76958, 3.90554, 1.77", "-20.5077, 6.89039, 3.83653, 2.8", "-21.4066, 7.11705, 3.74732, 3.17", "-22.6866, 7.4872, 3.64686, 0.44", "-23.5643, 7.76951, 3.59836, 0.29", "-24.7815, 8.18703, 3.55661, 0.37", "-25.5302, 8.46893, 3.57161, 0.37", "-26.1783, 8.73044, 3.62205, 0.52", "-26.5676, 8.89835, 3.67854, 1.03", "-27.291, 9.22208, 3.83854, 1.84", "-27.861, 9.48189, 3.97584, 1.4", "-28.6481, 9.81853, 4.16906, 0.22", "-29.3034, 10.0373, 4.31849, 0.59", "-29.5151, 10.0939, 4.36317, 0.59", "-30.4687, 10.3099, 4.54675, 0.44", "-30.9317, 10.3908, 4.63912, 1.47", "-31.4535, 10.4643, 4.74763, 2.51", "-32.2234, 10.5481, 4.89701, 2.36", "-33.5883, 10.6857, 5.17372, 0.15", "-33.8137, 10.7014, 5.22263, 0.22", "-34.5152, 10.7229, 5.3832, 0.22", "-34.9702, 10.7118, 5.47534, 0.22", "-35.8235, 10.6509, 5.63222, 0.22", "-36.0777, 10.624, 5.67097, 0.96", "-36.6557, 10.5446, 5.74081, 2.06", "-37.376, 10.4608, 5.81189, 2.58", "-38.8962, 10.3524, 5.91654, 0.22", "-39.337, 10.3371, 5.95039, 0.81", "-39.8508, 10.3399, 5.99231, 1.77", "-40.2286, 10.3585, 6.02261, 1.99", "-41.2567, 10.4591, 6.10033, 0.44", "-42.5015, 10.6056, 6.18515, 0.29", "-42.9091, 10.6591, 6.21353, 0.29", "-43.2802, 10.7043, 6.23639, 0.81", "-43.8021, 10.7622, 6.27127, 1.99", "-44.4246, 10.8175, 6.31483, 2.06", "-45.6723, 10.8968, 6.40199, 0.15", "-46.0203, 10.9047, 6.42514, 0.22", "-46.3651, 10.9017, 6.445, 0.15", "-46.5789, 10.8994, 6.45942, 0.37", "-46.8919, 10.899, 6.48236, 0.66", "-47.5131, 10.9356, 6.53553, 0.37", "-48.0931, 10.9972, 6.56509, 0.22", "-48.55, 11.0469, 6.5753, 0.88", "-49.194, 11.1129, 6.58025, 1.99", "-49.8587, 11.1777, 6.57708, 1.4", "-50.898, 11.2704, 6.55832, 0.22", "-51.6815, 11.3471, 6.53759, 0.22", "-51.9439, 11.3811, 6.5289, 0.37", "-52.2915, 11.4355, 6.51721, 0.81", "-52.5239, 11.4782, 6.51504, 1.11", "-53.3694, 11.6747, 6.55492, 0.59", "-53.901, 11.8201, 6.62005, 0.15", "-54.3093, 11.9528, 6.71317, 0.66", "-54.6914, 12.084, 6.81225, 0.66", "-55.5101, 12.3925, 7.03609, 0.15", "-56.0164, 12.5921, 7.1761, 0.88", "-56.6887, 12.8626, 7.36258, 1.7", "-57.9867, 13.3551, 7.69354, 0.22", "-58.4633, 13.5277, 7.80937, 0.29", "-59.1332, 13.7661, 7.95647, 0.29", "-59.5906, 13.9204, 8.03946, 0.66", "-59.9523, 14.0326, 8.09488, 0.81", "-60.6721, 14.2148, 8.20943, 0.29", "-61.4744, 14.3488, 8.37433, 0.22", "-61.8017, 14.3782, 8.45981, 1.03", "-62.3997, 14.3897, 8.64003, 1.92", "-62.8574, 14.3797, 8.79906, 1.92", "-63.837, 14.3235, 9.17188, 0.37", "-64.7306, 14.2318, 9.52997, 0.29", "-65.1397, 14.1691, 9.68735, 0.22", "-65.5682, 14.0885, 9.84978, 0.59", "-66.1205, 13.9704, 10.0466, 0.22", "-66.3084, 13.9261, 10.1043, 0.44", "-66.8293, 13.7921, 10.2354, 0.96", "-67.5711, 13.6057, 10.3863, 0.22", "-68.2984, 13.4477, 10.5288, 0.22", "-68.3987, 13.4256, 10.5467, 0.52", "-68.6996, 13.3619, 10.5928, 1.03", "-69.1668, 13.2781, 10.6642, 1.62", "-69.7342, 13.2067, 10.7494, 1.47", "-70.6675, 13.1552, 10.8777, 0.22", "-71.0984, 13.1617, 10.9193, 0.22", "-71.4558, 13.1931, 10.9502, 0.15", "-71.7025, 13.2402, 10.9681, 0.15", "-71.9071, 13.3, 11.004, 0.29", "-72.2076, 13.4125, 11.0786, 0.29", "-72.5782, 13.5688, 11.194, 0.22", "-73.0233, 13.7607, 11.348, 1.25", "-73.5286, 13.9661, 11.5233, 1.99", "-74.8017, 14.434, 11.9501, 0.29", "-75.5846, 14.7037, 12.2042, 0.22", "-75.9815, 14.8371, 12.3274, 0.66", "-76.4325, 14.9909, 12.4605, 1.62", "-77.2091, 15.2945, 12.6543, 0.52", "-78.0274, 15.6663, 12.8313, 0.22", "-78.2874, 15.8038, 12.8729, 0.59", "-78.717, 16.0552, 12.9518, 1.25", "-78.9342, 16.1925, 12.9976, 1.25", "-79.7833, 16.7574, 13.2446, 0.15", "-80.4997, 17.249, 13.535, 0.15", "-80.6924, 17.3813, 13.6338, 0.66", "-81.0771, 17.6337, 13.8653, 1.55", "-81.4292, 17.8535, 14.0979, 0.96", "-82.2307, 18.3322, 14.6723, 0.15", "-82.7987, 18.6715, 15.1201, 0.15", "-83.1298, 18.8957, 15.4013, 0.44", "-83.5692, 19.223, 15.7866, 0.88", "-83.8223, 19.4322, 16.004, 0.44", "-84.241, 19.826, 16.3218, 0.15", "-84.8118, 20.4372, 16.6801, 0.74", "-85.3279, 21.0329, 16.8642, 0.22", "-85.5148, 21.257, 16.8954, 1.03", "-85.8409, 21.6576, 16.9024, 1.99", "-86.6659, 22.6944, 16.8346, 0.15", "-87.103, 23.2428, 16.7517, 1.25", "-87.9721, 24.3177, 16.5052, 0.07", "-88.4068, 24.8426, 16.355, 0.07", "-88.8346, 25.3599, 16.2025, 0.88", "-89.1653, 25.7652, 16.0795, 1.62", "-89.3821, 26.0416, 15.9873, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.12393, -6.21789, 1.7, 0.88", "5.15491, -6.78169, 1.81895, 0.74", "5.15915, -7.30458, 1.94107, 0.88", "5.15084, -7.89011, 2.08043, 1.25", "5.13862, -8.79926, 2.29063, 0.88", "5.12775, -9.89022, 2.52819, 0.74", "5.12127, -10.9234, 2.7411, 0.66", "5.11793, -11.8626, 2.91392, 0.96", "5.12731, -12.7753, 3.0638, 1.18", "5.17042, -13.6296, 3.19198, 1.25", "5.33233, -14.7485, 3.33468, 0.81", "5.54715, -15.5806, 3.41453, 0.74", "5.89645, -16.6354, 3.49625, 0.52", "6.11185, -17.1949, 3.5372, 1.4", "6.44712, -18.0034, 3.61282, 2.43", "6.92746, -19.1408, 3.74511, 3.1", "7.55903, -20.6185, 3.96074, 0.22", "7.77154, -21.1802, 4.05428, 0.22", "7.88968, -21.5725, 4.13444, 0.74", "8.01536, -22.1271, 4.25157, 1.25", "8.08548, -22.5494, 4.3449, 1.7", "8.18782, -23.3757, 4.54779, 1.03", "8.37761, -24.4576, 4.84296, 0.52", "8.59349, -25.2548, 5.05183, 0.22", "8.71341, -25.5934, 5.13254, 0.22", "8.87205, -25.9402, 5.21488, 0.22", "8.96616, -26.1124, 5.25603, 0.22", "9.19814, -26.5288, 5.33968, 0.22", "9.47429, -27.0624, 5.42383, 0.81", "9.6876, -27.5751, 5.4796, 1.7", "10.0466, -28.5186, 5.54969, 2.88", "10.3779, -29.4579, 5.59592, 2.06", "10.7922, -30.725, 5.65426, 1.47", "11.0916, -31.7124, 5.70456, 1.33", "11.4367, -32.9154, 5.76435, 0.22", "11.6289, -33.6389, 5.80567, 0.15", "11.7863, -34.2739, 5.8438, 0.29", "11.991, -35.0834, 5.9049, 0.29", "12.175, -35.7484, 5.96499, 1.03", "12.311, -36.2444, 6.01422, 1.99", "12.5239, -37.0893, 6.09953, 2.21", "12.7273, -38.0713, 6.21448, 0.37", "12.88, -38.8675, 6.30392, 0.15", "12.9354, -39.1914, 6.33537, 0.15", "13.0419, -39.8745, 6.4008, 0.22", "13.1525, -40.5964, 6.47663, 0.37", "13.2505, -41.2472, 6.56205, 0.96", "13.3214, -41.8137, 6.64391, 1.7", "13.385, -42.3861, 6.731, 1.99", "13.4732, -43.1124, 6.84075, 1.7", "13.7152, -44.7212, 7.06258, 0.37", "13.8548, -45.5912, 7.17207, 0.22", "13.953, -46.1319, 7.22658, 0.22", "14.0606, -46.6458, 7.29395, 0.22", "14.2096, -47.2675, 7.40562, 0.37", "14.3209, -47.7086, 7.50445, 1.03", "14.4458, -48.1745, 7.62824, 1.77", "14.6626, -48.9596, 7.83132, 0.88", "14.9345, -49.9202, 8.10968, 0.29", "15.1286, -50.5989, 8.32814, 0.52", "15.2679, -51.0759, 8.4979, 1.03", "15.4971, -51.8577, 8.80504, 1.55", "15.7739, -52.8405, 9.20603, 0.88", "15.9857, -53.6511, 9.55572, 0.22", "16.0817, -54.0459, 9.7166, 0.22", "16.1354, -54.2866, 9.8112, 0.22", "16.2301, -54.7721, 10.0117, 0.29", "16.3377, -55.4288, 10.2798, 0.52", "16.3794, -55.7661, 10.4075, 1.18", "16.4409, -56.4212, 10.6132, 1.33", "16.5131, -57.2508, 10.8384, 0.59", "16.5955, -58.0015, 11.0138, 0.22", "16.6628, -58.5625, 11.1325, 0.22", "16.7188, -58.9603, 11.2124, 0.59", "16.8381, -59.7092, 11.3547, 0.29", "16.9714, -60.3998, 11.4927, 1.18", "17.1477, -61.1644, 11.6376, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.70607, -8.89914, 3.08, 0.66", "-1.70607, -8.89914, 3.08, 0.66", "-1.5577, -9.4993, 3.08416, 0.66", "-1.39102, -10.3696, 3.04505, 0.88", "-1.27176, -11.2618, 2.98493, 1.03", "-1.1611, -12.4884, 2.8908, 0.81", "-1.1101, -13.6311, 2.80192, 0.96", "-1.14997, -14.5167, 2.73162, 1.33", "-1.34663, -15.6003, 2.66814, 1.77", "-1.66878, -16.5472, 2.65214, 2.21", "-1.94904, -17.1177, 2.67555, 2.58", "-2.7117, -18.3076, 2.82814, 2.73", "-3.59542, -19.4292, 3.10043, 0.81", "-4.63466, -20.6194, 3.47105, 0.52", "-5.40434, -21.4146, 3.79685, 0.59", "-5.91164, -21.8831, 4.02801, 1.25", "-6.63159, -22.4738, 4.38301, 2.73", "-7.4196, -23.0075, 4.82176, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.65417, 5.09354, 0.0, 0.686328", "20.5808, 12.7029, 0.0, 0.686328", "33.5074, 20.3123, 0.0, 0.686328" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-5.04783, 3.45058, -15.4, 0.74", "-6.48323, 3.42218, -15.5686, 0.74", "-7.16093, 3.47837, -15.7485, 0.81", "-8.06895, 3.61178, -16.1336, 0.74", "-8.98577, 3.74649, -16.5224, 0.96", "-9.96883, 3.89093, -16.9393, 1.03", "-11.1526, 4.06488, -17.4414, 1.03", "-12.1306, 4.34506, -17.957, 1.47", "-13.2425, 4.7626, -18.6606, 2.29" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-5.04783, 3.45058, -15.4, 0.37", "-4.72717, 3.98008, -15.3852, 0.37", "-4.58653, 4.50998, -15.3724, 0.22", "-4.54716, 4.94406, -15.3702, 0.22", "-4.52167, 5.48407, -15.3945, 0.66", "-4.51403, 5.63505, -15.4126, 0.66", "-4.48188, 6.22492, -15.5064, 0.96", "-4.47582, 6.77272, -15.6328, 0.52", "-4.46718, 7.29635, -15.7906, 0.81", "-4.42482, 7.72177, -15.9577, 0.88", "-4.26475, 8.29775, -16.2457, 0.81", "-4.08142, 8.66547, -16.4744, 0.22", "-3.87528, 8.95774, -16.6877, 0.29", "-3.62607, 9.27815, -16.9499, 0.37", "-3.42208, 9.59606, -17.2119, 0.15", "-3.35513, 9.84255, -17.3879, 0.22", "-3.35274, 10.1508, -17.5841, 0.22", "-3.37724, 10.6022, -17.8455, 0.52", "-3.38886, 11.0553, -18.077, 0.37", "-3.38304, 11.5158, -18.2993, 0.44", "-3.34315, 12.2546, -18.6334, 0.37", "-3.30748, 12.5601, -18.7717, 0.37", "-3.20025, 13.2082, -19.0689, 0.52", "-3.08024, 13.8318, -19.3458, 0.59", "-2.92671, 14.6473, -19.6807, 0.44", "-2.85141, 15.2295, -19.8963, 0.29", "-2.83263, 15.7664, -20.0599, 0.22", "-2.89221, 16.1873, -20.166, 0.88", "-3.03749, 16.6797, -20.2753, 0.29", "-3.24386, 17.1225, -20.3541, 0.66", "-3.66291, 17.7622, -20.4098, 0.22", "-3.87852, 18.0245, -20.4144, 0.22", "-4.20107, 18.3689, -20.3831, 0.59", "-4.34945, 23.9828, -21.0939, 0.59", "-3.87944, 29.3118, -22.9345, 0.59", "-2.71661, 34.7747, -23.7661, 0.59", "-1.01502, 39.879, -25.4896, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.50802, -7.47136, -9.15341, 1.03", "-6.2466, -8.91304, -9.11148, 1.03", "-6.68262, -9.91912, -9.05164, 0.88", "-7.13165, -10.9552, -8.99002, 1.33", "-7.54154, -11.901, -8.93377, 1.92", "-8.02648, -13.0199, -8.86722, 2.29", "-8.70739, -14.5911, -8.77378, 1.7", "-9.12465, -15.8065, -8.70282, 1.47" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.50802, -7.47136, -9.15341, 0.37", "-4.82158, -8.57231, -9.02438, 0.37", "-4.38244, -9.18075, -8.95781, 0.59", "-4.0223, -9.60744, -8.93367, 0.52", "-3.26443, -10.3441, -8.93918, 0.37", "-2.35738, -10.9842, -9.00486, 0.37", "-1.63299, -11.413, -9.10297, 0.37", "-1.20761, -11.6078, -9.18769, 0.88", "-0.343665, -11.9554, -9.38813, 1.4", "0.598037, -12.2999, -9.61744, 1.18", "2.50232, -13.0205, -10.1008, 0.37", "4.04183, -13.6849, -10.5038, 0.22", "4.73893, -14.0414, -10.6764, 0.81", "5.62525, -14.5823, -10.8706, 1.92", "7.48061, -16.0092, -11.2402, 0.59", "8.41335, -16.9453, -11.4285, 0.66", "8.9563, -17.6856, -11.5414, 0.52", "9.50887, -18.6993, -11.6795, 0.59", "9.85212, -19.5389, -11.7947, 0.44", "10.2187, -20.6789, -11.9865, 0.44", "10.4242, -21.4176, -12.1205, 0.44", "10.6367, -22.0623, -12.2608, 0.66", "11.1754, -23.3635, -12.5958, 1.03", "11.8933, -24.7333, -13.0009, 0.74", "12.7028, -25.8724, -13.359, 0.59", "13.4545, -26.6947, -13.6152, 0.44", "14.0447, -27.2343, -13.7795, 0.81", "14.6072, -27.6699, -13.9152, 1.47", "15.1856, -28.0581, -14.0368, 1.47", "16.9369, -29.0963, -14.3991, 0.29", "17.9521, -29.6592, -14.5893, 0.37", "18.784, -30.1063, -14.7425, 0.29", "19.286, -30.3819, -14.8138, 0.15", "26.1166, -36.7544, -16.5285, 0.15", "33.3258, -42.6366, -18.5141, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "14.0369, 3.28951, 3.41629, 0.88", "14.3442, 2.15075, 4.34354, 0.88", "14.4944, 1.15847, 5.11975, 0.44", "14.5556, 0.594364, 5.53832, 0.44", "14.634, -0.0710835, 6.00455, 0.59", "14.7273, -0.666253, 6.40127, 0.44", "14.9056, -1.40838, 6.84594, 0.29", "15.0286, -1.78007, 7.03785, 0.29", "15.3646, -2.32435, 7.26779, 0.52", "15.7075, -2.67175, 7.4004, 0.96", "16.2347, -3.04841, 7.53691, 1.92", "17.3749, -3.64357, 7.72452, 2.8", "18.782, -4.18366, 7.87794, 1.18", "19.8576, -4.53571, 7.98138, 0.29", "20.4379, -4.68957, 8.02672, 0.29", "21.015, -4.80842, 8.06581, 0.74", "21.9307, -4.91701, 8.10662, 1.47", "22.6236, -4.89488, 8.11904, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "14.0369, 3.28951, 3.41629, 0.44", "14.7425, 3.67107, 2.78382, 0.44", "14.9745, 3.81008, 2.47349, 0.44", "15.2381, 3.90659, 2.07954, 0.44", "15.506, 3.96939, 1.70326, 0.44", "15.8952, 4.06646, 1.15464, 0.52", "16.3841, 4.20708, 0.461017, 0.37", "17.1409, 4.46935, -0.62838, 1.4", "17.8968, 4.7267, -1.68715, 2.29", "18.8916, 4.97449, -2.9169, 0.22", "19.1633, 5.01761, -3.23043, 0.22", "19.4121, 5.02606, -3.49832, 0.22", "19.8528, 5.0101, -3.85656, 0.37", "20.2138, 4.98066, -4.08781, 0.37", "21.3859, 4.86872, -4.73253, 0.22", "22.1829, 4.77548, -5.09946, 0.74", "23.2216, 4.65559, -5.53947, 2.36", "25.0939, 4.44401, -6.28152, 0.15", "25.5431, 4.39569, -6.45335, 1.11", "25.837, 4.36716, -6.57265, 1.62", "27.3081, 4.24972, -7.22725, 0.15", "28.0987, 4.2059, -7.59045, 0.15", "28.4064, 4.19903, -7.74924, 0.59", "28.6785, 4.186, -7.94254, 0.59", "29.5046, 4.14056, -8.67913, 0.22", "30.0478, 4.10931, -9.23291, 0.37", "30.3425, 4.09637, -9.58366, 0.59", "30.618, 4.10325, -9.89271, 0.22", "31.2063, 4.15338, -10.4554, 0.15", "31.887, 4.23149, -11.0412, 0.15", "32.3186, 4.28743, -11.3556, 0.66", "32.7549, 4.33771, -11.6529, 1.47", "33.4517, 4.4068, -12.1515, 1.11", "34.618, 4.54667, -12.9934, 0.22", "40.4654, 3.36685, -19.3499, 0.22", "46.7934, 2.36054, -25.2644, 0.22", "53.2891, 0.793599, -30.8563, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.75063, 16.6582, 15.4263, 0.29", "-4.12953, 17.1685, 17.0063, 0.29", "-5.09254, 17.6189, 18.1255, 0.15", "-5.53799, 17.8851, 18.6895, 0.96", "-5.99479, 18.2243, 19.325, 2.06", "-6.99158, 19.1423, 20.8588, 0.22", "-7.25009, 19.4793, 21.344, 0.37", "-7.35877, 19.7595, 21.6743, 0.37", "-7.50663, 20.4087, 22.3793, 0.29", "-7.60994, 21.1203, 23.1239, 1.99", "-7.64255, 21.6219, 23.6418, 2.06", "-7.67777, 23.0118, 25.1164, 0.15", "-7.72443, 23.9884, 26.1719, 0.15", "-7.76482, 24.5055, 26.7359, 1.18", "-7.8078, 24.939, 27.2031, 2.14", "-7.95003, 26.1911, 28.5748, 0.15", "-8.06114, 26.8766, 29.33, 0.44", "-8.21023, 27.5488, 30.0823, 0.15", "-8.35664, 28.1534, 30.766, 0.29", "-8.4835, 28.6747, 31.4016, 0.44", "-8.61491, 29.2243, 32.1265, 1.03", "-8.70554, 29.6134, 32.6777, 1.7", "-8.9, 30.6662, 34.2629, 0.15", "-8.96881, 31.1702, 35.0783, 0.22", "-8.99723, 31.8219, 36.1619, 0.15", "-8.98638, 32.3024, 36.9884, 0.52", "-8.94428, 32.8528, 37.9964, 0.88", "-8.85464, 33.5249, 39.3514, 1.25", "-8.78514, 33.9427, 40.2405, 1.62", "-8.65627, 34.8083, 42.105, 0.15", "-8.62253, 35.1995, 42.9674, 0.22", "-8.62023, 35.7467, 44.1802, 0.22", "-8.64211, 36.0746, 44.8921, 0.37", "-8.68415, 36.4799, 45.7253, 0.88", "-8.72339, 36.7576, 46.2897, 1.4", "-8.88929, 37.5933, 47.9898, 0.37", "-9.04183, 38.3869, 49.4656, 0.22", "-9.14836, 38.9809, 50.4596, 0.88", "-9.23807, 39.48, 51.2528, 1.7" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.75063, 16.6582, 15.4263, 0.22", "-2.20926, 17.7612, 14.5503, 0.22", "-1.69716, 18.8788, 13.7398, 0.15", "-1.38755, 19.5454, 13.3217, 0.15", "-1.04564, 20.2682, 12.9129, 0.44", "-0.475475, 21.456, 12.3019, 0.15", "-0.13845, 22.1418, 11.9783, 0.66", "0.17807, 22.801, 11.7222, 1.7", "0.694842, 23.8432, 11.3954, 0.22", "1.21822, 24.8717, 11.0956, 0.22", "1.51885, 25.4596, 10.9261, 0.44", "1.81042, 26.0243, 10.7844, 0.81", "2.05214, 26.5033, 10.6642, 0.37", "2.6539, 27.7989, 10.3173, 0.22", "2.88683, 28.3839, 10.1576, 0.59", "3.03473, 28.8025, 10.0522, 1.18", "3.28942, 29.6434, 9.90356, 1.11", "3.82035, 31.5852, 9.66337, 0.22", "4.01326, 32.3378, 9.60665, 0.66", "4.22147, 33.1556, 9.5855, 1.7", "4.41093, 33.918, 9.58473, 1.62", "5.13602, 36.8693, 9.63566, 0.15", "5.26298, 37.3931, 9.65788, 0.66", "5.41603, 37.9895, 9.70033, 0.22", "5.5934, 38.6147, 9.74254, 0.07", "5.83523, 39.4097, 9.78746, 0.07", "5.99823, 39.9319, 9.80468, 0.37", "6.21229, 40.5479, 9.80115, 0.22", "6.70624, 41.8869, 9.79062, 0.15", "7.01238, 42.6807, 9.77897, 0.44", "7.34076, 43.5037, 9.76382, 0.81", "7.80251, 44.5877, 9.73726, 1.84", "8.75512, 46.799, 9.69995, 0.07", "9.07854, 47.5477, 9.70122, 0.29", "9.71971, 49.0312, 9.73168, 0.07", "9.89505, 49.4409, 9.74985, 0.66", "10.1921, 50.1515, 9.8037, 1.33", "10.8295, 51.7607, 9.99278, 0.07", "11.113, 52.5532, 10.1242, 0.07", "11.2314, 52.9082, 10.193, 0.22", "11.4484, 53.5902, 10.348, 0.74", "11.6036, 54.0944, 10.4679, 1.55", "12.1971, 56.0819, 10.9667, 0.07", "12.3371, 56.5249, 11.076, 0.22", "12.5758, 57.2674, 11.2454, 0.07", "12.8275, 58.0356, 11.4129, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-89.3821, 26.0416, 15.9873, 0.15", "-89.7855, 27.9325, 17.369, 0.15", "-89.9979, 28.9284, 18.0967, 0.66", "-90.1029, 29.4205, 18.4563, 0.66", "-90.3757, 30.6995, 19.3909, 0.07", "-90.5059, 31.3098, 19.8368, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-89.3821, 26.0416, 15.9873, 0.07", "-90.3837, 26.9127, 15.7328, 0.07", "-91.2463, 27.6475, 15.5709, 0.07", "-91.7518, 28.0498, 15.5278, 0.52", "-92.3152, 28.4913, 15.5217, 1.11", "-93.9999, 29.8564, 15.604, 0.07", "-94.3365, 30.1432, 15.6345, 0.07", "-94.9124, 30.6742, 15.7794, 0.52", "-95.6966, 31.4346, 16.0704, 0.15", "-96.2113, 31.9579, 16.2995, 0.22", "-96.6525, 32.418, 16.5214, 0.59", "-97.0322, 32.7919, 16.7202, 0.59", "-97.7965, 33.4706, 17.1104, 0.15", "-98.223, 33.7911, 17.304, 0.22", "-98.7356, 34.1056, 17.4929, 0.66", "-99.2286, 34.3583, 17.6477, 1.62", "-99.942, 34.6859, 17.8635, 1.62", "-101.439, 35.36, 18.304, 0.22", "-102.251, 35.7034, 18.5326, 0.22", "-102.956, 35.9965, 18.7329, 0.22", "-103.73, 36.3246, 18.9524, 0.22", "-104.636, 36.7298, 19.2243, 0.22", "-105.454, 37.1607, 19.4812, 1.77" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "17.1477, -61.1644, 11.6376, 0.22", "18.1893, -62.6889, 12.4678, 0.22", "19.1058, -64.0945, 13.245, 0.22", "19.3988, -64.5917, 13.5183, 0.66", "19.6996, -65.1429, 13.8137, 0.88", "20.0508, -65.8938, 14.2026, 0.22", "20.3866, -66.7007, 14.6064, 0.07", "20.5674, -67.3019, 14.8796, 0.15", "20.7513, -68.0701, 15.2103, 0.07", "20.8573, -68.5732, 15.4339, 0.15", "21.0884, -69.8457, 16.0001, 0.07", "21.1699, -70.3778, 16.2161, 0.52", "21.2419, -71.0056, 16.4371, 0.88" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "17.1477, -61.1644, 11.6376, 2.8", "17.7563, -62.2187, 11.7963, 2.8", "18.5429, -63.6448, 12.0564, 0.37", "18.9489, -64.4489, 12.2139, 0.22", "19.4855, -65.6349, 12.4408, 0.22", "19.7888, -66.4168, 12.6025, 0.22", "20.0312, -67.1286, 12.7598, 0.29", "20.1871, -67.694, 12.8995, 0.88", "20.3929, -68.5783, 13.146, 0.96", "20.5644, -69.3988, 13.3739, 0.52", "20.8215, -70.744, 13.7322, 0.37", "20.9891, -71.5619, 13.9268, 0.81", "21.171, -72.2685, 14.1017, 0.44", "21.4929, -73.3362, 14.4042, 0.29", "21.7207, -74.0297, 14.6352, 0.88", "21.938, -74.6863, 14.8895, 1.92", "22.2345, -75.6435, 15.2818, 2.06", "22.6662, -77.1596, 15.9112, 0.29", "22.9355, -78.2411, 16.3614, 0.37", "23.154, -79.1948, 16.7272, 0.29", "23.3453, -80.0272, 17.0205, 0.37", "23.6403, -81.239, 17.3508, 0.37", "23.9377, -82.4591, 17.5734, 0.29", "24.0464, -82.9183, 17.5936, 0.88", "24.3103, -83.9502, 17.5087, 1.84", "24.4832, -84.5582, 17.4002, 2.06", "24.9947, -86.171, 16.9831, 0.29", "25.2305, -86.879, 16.7628, 0.37", "25.4668, -87.5818, 16.5316, 0.22", "25.6521, -88.1012, 16.3683, 0.22", "25.8975, -88.7529, 16.1961, 0.37", "26.2566, -89.5828, 16.0345, 0.29", "26.401, -89.8939, 16.001, 1.03", "26.6972, -90.5091, 15.9806, 1.62", "26.9681, -91.075, 15.998, 1.92", "27.5025, -92.2035, 16.0765, 0.81", "27.9896, -93.2696, 16.1869, 0.22", "28.4574, -94.3136, 16.3759, 0.22", "28.9203, -95.3947, 16.6267, 0.22", "29.0642, -95.7479, 16.7247, 1.03", "29.3157, -96.3945, 16.93, 2.14", "29.6705, -97.355, 17.2667, 1.4", "30.2014, -98.7715, 17.8109, 0.22", "30.5288, -99.6188, 18.1539, 0.29", "30.7826, -100.269, 18.4221, 0.66", "30.9836, -100.759, 18.6113, 0.66", "31.3241, -101.522, 18.8813, 0.22", "31.7985, -102.463, 19.1893, 0.22", "32.0248, -102.881, 19.3129, 0.74", "32.3488, -103.45, 19.4922, 1.62", "32.8239, -104.309, 19.7686, 0.96", "33.3713, -105.413, 20.1315, 0.22", "33.6472, -106.06, 20.3447, 0.15", "33.7624, -106.412, 20.4515, 0.15", "33.8337, -106.673, 20.5302, 0.44", "33.9364, -107.16, 20.6728, 0.66", "34.057, -107.939, 20.8891, 0.15", "34.1093, -108.353, 21.0099, 0.15", "34.1772, -108.829, 21.1526, 0.29", "34.2643, -109.299, 21.3141, 0.29", "34.4687, -110.164, 21.6392, 0.07", "34.5355, -110.405, 21.7306, 0.44", "34.7635, -111.192, 22.0274, 1.18", "34.9107, -111.771, 22.2415, 2.06", "35.0591, -112.419, 22.4709, 1.55", "35.3867, -113.945, 22.98, 0.44", "35.6109, -114.998, 23.3035, 0.66", "35.8247, -115.968, 23.5574, 0.22", "36.145, -117.317, 23.8355, 0.22", "36.2515, -117.766, 23.9125, 0.96", "36.3786, -118.321, 23.9858, 1.92", "36.4909, -118.84, 24.0334, 1.99", "36.861, -120.479, 24.1388, 0.29", "37.1558, -121.63, 24.2002, 0.15", "37.3066, -122.154, 24.2155, 0.74", "37.4202, -122.542, 24.2245, 0.74", "37.6963, -123.511, 24.2373, 0.22", "37.8623, -124.154, 24.2385, 0.37", "38.0769, -125.092, 24.239, 0.22", "38.221, -125.816, 24.2501, 0.22", "38.3037, -126.282, 24.2612, 0.59", "38.4027, -126.961, 24.2791, 1.18", "38.6096, -128.807, 24.351, 0.22", "38.6736, -129.498, 24.3829, 0.44", "38.7411, -130.173, 24.4069, 0.22", "38.7887, -130.641, 24.4247, 0.81", "38.8468, -131.17, 24.4431, 1.47", "38.9303, -131.89, 24.466, 1.55", "39.0472, -132.895, 24.4899, 0.22", "39.1772, -134.008, 24.5213, 0.15", "39.3089, -135.081, 24.5593, 0.15", "39.3703, -135.607, 24.5982, 0.29", "39.4198, -136.086, 24.653, 0.59", "39.4531, -136.477, 24.7176, 0.96", "39.5097, -137.221, 24.9034, 0.22", "39.57, -137.976, 25.1355, 0.15", "39.6724, -138.994, 25.4833, 0.15", "39.7242, -139.548, 25.6723, 0.96", "39.7978, -140.433, 25.9834, 1.92", "39.885, -141.679, 26.4292, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.4196, -23.0075, 4.82176, 1.03", "-6.91875, -24.0411, 5.76145, 1.03", "-6.40518, -25.0504, 6.71976, 0.37", "-6.01954, -25.7695, 7.39127, 0.66", "-5.61669, -26.4888, 8.02018, 1.11", "-5.19868, -27.2174, 8.60691, 1.55", "-4.7151, -28.0785, 9.22079, 0.52", "-4.24249, -28.9314, 9.75961, 0.44", "-3.68904, -29.9856, 10.3214, 0.88", "-3.20275, -30.9387, 10.7683, 0.74", "-2.75419, -31.8422, 11.1426, 0.44", "-2.23335, -32.9115, 11.5049, 0.37", "-1.97087, -33.4958, 11.6659, 1.18", "-1.47179, -34.7238, 11.8992, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.4196, -23.0075, 4.82176, 1.03", "-8.31683, -23.3186, 5.26247, 1.03", "-9.67724, -23.8923, 5.99489, 0.52", "-10.7088, -24.4297, 6.63633, 0.44", "-11.5292, -24.9735, 7.22796, 0.29", "-12.0204, -25.3905, 7.61745, 0.29", "-12.3106, -25.7064, 7.89128, 0.29", "-12.7089, -26.3355, 8.3809, 0.96", "-13.0434, -27.0937, 8.88836, 2.14", "-13.4017, -28.1234, 9.50739, 2.06", "-13.7325, -29.2929, 10.1649, 0.74", "-14.13, -30.8519, 10.9815, 0.44", "-14.2735, -31.4483, 11.2793, 0.59", "-14.4244, -32.1295, 11.5884, 0.88", "-14.607, -33.0059, 11.9608, 0.29", "-14.7833, -33.9578, 12.3404, 0.15", "-14.8642, -34.4075, 12.5176, 0.29", "-15.092, -35.5878, 12.9008, 0.22", "-15.1818, -36.0397, 13.0464, 0.66", "-15.3465, -36.8485, 13.285, 1.7", "-15.4937, -37.5221, 13.4565, 2.21", "-15.6676, -38.2678, 13.6448, 1.92", "-16.1343, -40.2726, 14.1571, 0.37", "-16.3301, -41.1496, 14.3888, 1.25", "-16.5414, -42.1698, 14.6671, 0.96", "-16.786, -43.4587, 15.0089, 0.22", "-16.9961, -44.575, 15.3, 0.22", "-17.1641, -45.4086, 15.5002, 0.44", "-17.3476, -46.1924, 15.6831, 1.18", "-17.5433, -46.8569, 15.8114, 2.29", "-17.88, -47.7987, 15.9713, 2.51", "-18.3909, -49.0819, 16.1379, 0.44", "-18.9107, -50.2837, 16.2346, 0.44", "-19.1655, -50.8312, 16.2687, 0.37", "-19.7632, -52.044, 16.3203, 0.37", "-19.9805, -52.4699, 16.3464, 0.22", "-20.1891, -52.8748, 16.3804, 0.22", "-20.5271, -53.5819, 16.4496, 0.22", "-20.692, -53.9337, 16.4963, 0.74", "-20.914, -54.4429, 16.5867, 1.4", "-21.2159, -55.2167, 16.7436, 2.14", "-21.6709, -56.3926, 16.9894, 0.66", "-22.1255, -57.5499, 17.2311, 0.37", "-22.488, -58.5393, 17.394, 0.22", "-22.7583, -59.378, 17.4949, 0.22", "-22.9546, -60.0856, 17.5481, 1.11", "-23.1379, -60.8112, 17.5888, 1.25", "-23.3644, -61.7649, 17.6325, 0.59", "-23.6345, -62.8517, 17.6629, 0.22", "-23.7504, -63.291, 17.6646, 0.22", "-24.1084, -64.414, 17.6641, 0.29", "-24.6648, -65.8991, 17.6953, 0.29", "-24.887, -66.4285, 17.7347, 0.29", "-25.1503, -66.9988, 17.8054, 0.96", "-25.3935, -67.4793, 17.8877, 1.99", "-25.6027, -67.8732, 17.953, 2.51", "-26.283, -69.1249, 18.1424, 0.81", "-27.0093, -70.4823, 18.3027, 0.22", "-27.3742, -71.1798, 18.3624, 0.22", "-27.6475, -71.7321, 18.3923, 0.22", "-27.7992, -72.0519, 18.3983, 0.44", "-28.0367, -72.5769, 18.3865, 0.96", "-28.3103, -73.2089, 18.3436, 0.44", "-28.6831, -74.1039, 18.2256, 0.15", "-28.9198, -74.687, 18.1468, 0.15", "-29.1028, -75.1545, 18.0865, 0.44", "-29.3058, -75.668, 18.0333, 0.52", "-29.5298, -76.2595, 17.9623, 0.22", "-29.7539, -76.8082, 17.8844, 0.22", "-29.9889, -77.3314, 17.8094, 0.74", "-30.3428, -78.0669, 17.692, 1.33", "-30.7368, -78.8554, 17.5691, 0.29", "-31.2913, -79.9054, 17.4179, 0.22", "-31.689, -80.6199, 17.3253, 0.22", "-32.2758, -81.642, 17.219, 0.22", "-32.5053, -82.0398, 17.1844, 0.52", "-33.0162, -82.9374, 17.1256, 1.7", "-33.6966, -84.1539, 17.0692, 0.44", "-34.2052, -85.0677, 17.0534, 0.37", "-34.7952, -86.1946, 17.0449, 0.15", "-35.0736, -86.7392, 17.0378, 0.81", "-35.3981, -87.3842, 17.024, 1.7", "-35.6572, -87.921, 17.0019, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "33.5074, 20.3123, 0.0, 0.159967", "46.434, 27.9217, 0.0, 0.159967", "59.3606, 35.5311, 0.0, 0.159967" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-13.2425, 4.7626, -18.6606, 0.52", "-12.2523, 4.75213, -19.3287, 0.52", "-11.1624, 4.90993, -20.1312, 0.37", "-10.2594, 5.32427, -20.9268, 0.22", "-9.96093, 5.64566, -21.3004, 0.29", "-9.76619, 5.92359, -21.6164, 0.29", "-9.49069, 6.29785, -22.1156, 0.66", "-9.1901, 6.73189, -22.7676, 1.03", "-8.98422, 7.17099, -23.3763, 0.81", "-8.75982, 7.71966, -24.0781, 0.44", "-8.41735, 8.41752, -24.9436, 0.74", "-8.0369, 9.0236, -25.6553, 0.66", "-7.64547, 9.55723, -26.1883, 0.66", "-6.88349, 10.4713, -27.1144, 0.29", "-6.39469, 11.0214, -27.6236, 0.29", "-5.77805, 11.7288, -28.1328, 0.52", "-5.27778, 12.3929, -28.4276, 0.52", "-4.69905, 13.2581, -28.6438, 1.03", "0.677448, 19.9129, -33.1626, 1.03", "5.71607, 26.4079, -38.2744, 1.03", "10.5539, 32.027, -44.5415, 1.03", "15.2195, 37.1935, -51.3286, 1.03", "19.285, 43.2607, -57.7032, 1.03", "22.2748, 49.6395, -64.3485, 1.03", "26.5736, 55.5318, -70.7427, 1.03", "31.6159, 61.8362, -76.0959, 1.03", "37.4561, 68.4244, -80.1166, 1.03", "43.2524, 74.6925, -84.6977, 1.03", "49.5824, 81.2199, -88.0263, 1.03", "56.5761, 86.8261, -91.7679, 1.03" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-13.2425, 4.7626, -18.6606, 1.25", "-13.2213, 3.40085, -18.956, 1.25", "-13.1037, 2.05072, -19.2076, 0.59", "-12.987, 0.976251, -19.4294, 0.81", "-12.846, -0.304031, -19.7648, 1.11", "-12.6673, -1.68721, -20.1491, 1.4", "-12.4722, -2.89733, -20.469, 1.11", "-11.8795, -5.11021, -21.0469, 0.52", "-11.3725, -6.57196, -21.4268, 0.74", "-10.8368, -7.87943, -21.8208, 1.7", "-10.219, -9.15975, -22.2771, 1.84", "-9.4549, -10.4816, -22.8174, 1.92", "-8.0578, -12.6253, -23.7505, 0.96", "-7.3165, -13.5843, -24.1828, 0.96", "-6.59514, -14.4014, -24.5427, 0.44", "-5.75813, -15.2487, -24.91, 1.18", "-5.37202, -15.5947, -25.1075, 1.18", "-0.717255, -24.3339, -26.5923, 1.18", "4.4093, -32.8979, -27.4576, 1.18", "7.73164, -42.1424, -29.2835, 1.18", "10.9584, -51.5861, -29.2059, 1.18", "15.0408, -60.5313, -27.3813, 1.18", "18.3818, -69.9195, -26.7986, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-1.01502, 39.879, -25.4896, 0.07", "-0.810316, 50.8334, -27.9098, 0.07", "-0.45938, 62.0376, -28.4049, 0.07", "-2.69692, 73.0842, -28.3365, 0.07", "-6.31031, 83.7085, -29.65, 0.07", "-11.571, 93.7512, -30.0695, 0.07", "-18.0308, 103.061, -28.9458, 0.07", "-22.5706, 113.191, -26.5922, 0.07", "-29.5707, 121.715, -23.6389, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-1.01502, 39.879, -25.4896, 0.81", "0.141549, 46.2673, -27.5257, 0.07", "1.70595, 52.1623, -30.5607, 0.07", "4.25757, 58.0422, -32.8383, 0.07", "6.3916, 64.0912, -35.1005, 0.07", "8.99489, 69.9996, -37.2381, 0.07", "10.2679, 76.0095, -40.183, 0.07", "10.8492, 82.3811, -42.522, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-9.12465, -15.8065, -8.70282, 0.37", "-10.6715, -15.8527, -8.87915, 0.37", "-11.8524, -15.8809, -9.1831, 0.37", "-12.6103, -15.9855, -9.42457, 0.22", "-13.4064, -16.1945, -9.8152, 0.22", "-13.8055, -16.3274, -10.0419, 0.22", "-14.3799, -16.5253, -10.3682, 0.44", "-14.953, -16.7465, -10.7403, 0.52", "-15.8244, -17.0963, -11.2699, 1.18", "-17.2953, -17.7586, -12.0477, 0.22", "-18.2256, -18.2135, -12.4851, 0.22", "-18.9007, -18.5538, -12.7606, 0.22", "-19.5778, -18.9117, -13.0272, 0.22", "-20.3998, -19.3609, -13.3299, 0.29", "-21.1096, -19.7725, -13.5772, 0.59", "-21.6602, -20.1333, -13.7423, 0.96", "-22.5216, -20.803, -14.01, 0.37", "-23.3496, -21.5827, -14.3011, 0.22", "-24.0403, -22.374, -14.5754, 0.07", "-24.764, -23.2948, -14.8845, 0.07", "-25.3156, -24.0498, -15.1233, 0.22", "-25.893, -24.8834, -15.3489, 0.07", "-26.317, -25.586, -15.5189, 0.07", "-26.6631, -26.2469, -15.6166, 0.74", "-36.3047, -33.3584, -17.3917, 0.74", "-46.8292, -39.3653, -18.1097, 0.74", "-57.1228, -45.5881, -19.7112, 0.74", "-67.8477, -51.2197, -20.6186, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-9.12465, -15.8065, -8.70282, 0.96", "-8.92045, -17.2815, -8.89459, 0.96", "-8.76324, -18.4099, -9.10793, 0.88", "-8.57139, -19.8911, -9.44458, 0.81", "-8.46847, -20.7673, -9.67658, 1.03", "-8.40032, -21.5824, -9.91819, 1.33", "-8.32577, -23.2421, -10.4301, 0.88", "-8.34985, -24.6978, -10.9544, 1.03", "-8.46271, -25.9891, -11.4655, 1.62", "-8.67868, -27.8426, -12.2489, 0.37", "-8.83145, -28.8397, -12.6759, 0.37", "-8.9904, -29.6249, -13.0302, 0.74", "-9.18791, -30.253, -13.3214, 1.25", "-9.56781, -31.0887, -13.7135, 1.77" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "22.6236, -4.89488, 8.11904, 0.15", "23.5032, -3.79674, 8.03903, 0.15", "23.9437, -3.24271, 8.01045, 0.15", "24.3053, -2.75604, 7.96929, 0.88", "24.7061, -2.17089, 7.91361, 1.55", "25.6148, -0.676807, 7.76174, 0.22", "26.0265, 6.66976E-5, 7.69293, 0.22", "26.2903, 0.454541, 7.66451, 0.37", "26.7403, 1.24948, 7.6327, 0.07", "26.9276, 1.62365, 7.61048, 0.07", "27.1524, 2.23954, 7.52295, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "22.6236, -4.89488, 8.11904, 0.29", "23.4537, -5.5481, 9.26649, 0.29", "24.0289, -5.8964, 10.0017, 0.29", "24.9201, -6.29378, 11.0547, 0.66", "25.1788, -6.37788, 11.3401, 0.66", "25.939, -6.55612, 12.1246, 0.22", "26.3794, -6.64653, 12.5487, 0.22", "27.0189, -6.75256, 13.1553, 0.66", "27.9306, -6.89827, 13.9827, 1.84", "29.0517, -7.11059, 14.9808, 3.02", "30.296, -7.43392, 16.1254, 1.55", "31.5879, -7.91758, 17.2948, 0.44", "32.5955, -8.41599, 18.1969, 0.44", "33.6473, -9.05159, 19.1364, 0.22", "34.5512, -9.67115, 19.9251, 1.03", "35.2616, -10.201, 20.5068, 2.29", "36.8403, -11.4195, 21.7077, 0.22", "37.6286, -11.9866, 22.3, 0.22", "38.1074, -12.2928, 22.6368, 0.22", "38.7058, -12.6259, 23.0366, 1.47", "39.6711, -13.0865, 23.638, 2.88", "40.4943, -13.42, 24.1221, 2.14", "43.286, -14.4066, 25.6599, 0.29", "44.3648, -14.7565, 26.2289, 0.29", "45.0169, -14.9545, 26.5687, 0.29", "45.6107, -15.1233, 26.8829, 0.66", "46.4277, -15.3202, 27.3036, 1.03", "47.2913, -15.4798, 27.6727, 0.22", "48.2613, -15.566, 28.022, 0.22", "48.9197, -15.5832, 28.3003, 0.22", "49.6143, -15.5779, 28.6206, 0.59", "50.4636, -15.5528, 29.0274, 1.4", "51.7909, -15.5154, 29.6689, 0.37", "52.8054, -15.5518, 30.1298, 0.22", "53.7579, -15.6358, 30.5026, 0.22", "54.2704, -15.7148, 30.6803, 1.33", "55.1029, -15.8851, 30.9426, 2.73", "55.8348, -16.0697, 31.1638, 2.73", "58.2453, -16.8061, 31.8583, 0.22", "59.1778, -17.1404, 32.1096, 0.52", "60.2974, -17.5775, 32.4324, 0.15", "60.8579, -17.8076, 32.6074, 0.52", "61.5811, -18.1117, 32.8455, 0.96", "63.2279, -18.8107, 33.4135, 0.22", "64.167, -19.195, 33.7564, 0.96", "65.1634, -19.5954, 34.1697, 2.29", "67.3028, -20.4121, 35.1014, 0.22", "67.8925, -20.6336, 35.366, 0.74", "68.8065, -20.9737, 35.7892, 1.11", "70.6031, -21.6342, 36.6425, 0.15", "71.6195, -22.006, 37.1206, 0.44", "72.4009, -22.2982, 37.4894, 1.25", "74.1268, -22.9432, 38.3752, 0.15", "74.6214, -23.131, 38.632, 0.15", "75.0563, -23.3023, 38.8574, 0.44", "75.6035, -23.5384, 39.1284, 0.66", "76.6413, -23.9732, 39.582, 0.15", "77.5392, -24.3307, 39.9592, 1.03", "78.338, -24.6365, 40.2579, 2.14", "80.0013, -25.2384, 40.8598, 0.15", "80.5263, -25.4148, 41.0716, 0.15", "81.3483, -25.6479, 41.4557, 0.15", "82.2171, -25.846, 41.9341, 0.15", "82.6295, -25.9191, 42.2028, 0.74", "83.4976, -26.0157, 42.8893, 1.92", "84.9815, -26.0927, 44.2761, 0.15", "85.9142, -26.1232, 45.2857, 0.59", "86.6481, -26.1471, 46.1806, 0.15", "87.3084, -26.1568, 47.0339, 1.03", "87.9818, -26.1636, 47.8999, 1.33", "89.1906, -26.1785, 49.4491, 0.15", "90.3284, -26.205, 50.8893, 0.15", "90.9767, -26.2518, 51.6832, 1.03", "91.8283, -26.3467, 52.6987, 1.77", "92.9262, -26.5228, 53.9875, 0.15", "93.8473, -26.7141, 55.0202, 0.15", "94.6062, -26.9004, 55.7587, 0.59", "95.5976, -27.1777, 56.6169, 0.15", "96.0839, -27.3278, 57.0213, 0.15", "96.6048, -27.5025, 57.441, 1.03", "97.322, -27.7224, 57.9907, 1.62", "99.2193, -28.2255, 59.3373, 0.15", "99.8889, -28.3651, 59.7943, 0.15", "100.61, -28.4682, 60.2792, 0.81", "101.57, -28.54, 60.9529, 1.62", "102.966, -28.5646, 61.9715, 0.07", "103.913, -28.5362, 62.7044, 0.07", "104.355, -28.4925, 63.0549, 0.59", "104.685, -28.4466, 63.3003, 0.59", "105.569, -28.2963, 63.942, 0.07", "106.228, -28.1768, 64.4036, 0.07", "106.575, -28.1119, 64.6376, 0.07", "107.192, -27.977, 65.0368, 0.59", "107.891, -27.8237, 65.4956, 1.33", "108.907, -27.62, 66.1567, 0.15", "109.635, -27.4837, 66.6515, 0.52", "110.334, -27.345, 67.1738, 0.07", "110.799, -27.2599, 67.5386, 0.22", "111.5, -27.1305, 68.1172, 0.07", "112.39, -26.9689, 68.9059, 0.66", "113.48, -26.7902, 69.9091, 0.22", "114.202, -26.6952, 70.563, 0.96", "114.956, -26.6577, 71.2739, 1.62", "116.415, -26.6521, 72.6532, 0.15", "117.235, -26.6553, 73.4261, 0.74", "117.988, -26.6639, 74.1308, 1.11", "119.274, -26.6978, 75.2777, 0.22", "121.054, -26.7771, 76.8077, 0.29", "121.484, -26.8017, 77.1559, 0.15", "121.829, -26.8363, 77.401, 0.15", "122.496, -26.8955, 77.8022, 0.22", "122.84, -26.909, 77.9837, 0.74", "123.663, -26.8683, 78.3301, 1.47", "124.47, -26.764, 78.6011, 1.18", "125.91, -26.5581, 79.1273, 0.15", "126.352, -26.4932, 79.3123, 0.37", "126.863, -26.4228, 79.5417, 0.37", "127.842, -26.2825, 79.978, 0.15", "128.621, -26.1472, 80.3456, 1.25", "129.044, -26.0637, 80.564, 1.25", "130.354, -25.7795, 81.2448, 0.15", "130.979, -25.6577, 81.5613, 0.15", "131.819, -25.5133, 81.959, 0.22", "132.672, -25.3789, 82.302, 0.15", "133.383, -25.2396, 82.5377, 0.22", "134.06, -25.0857, 82.7454, 0.96", "135.003, -24.8378, 83.0037, 1.62", "135.59, -24.6782, 83.1518, 1.33", "137.337, -24.2258, 83.5749, 0.15", "138.35, -23.9702, 83.7985, 0.15", "138.927, -23.8225, 83.9266, 0.66", "139.666, -23.6245, 84.0731, 1.11", "141.14, -23.2045, 84.3269, 0.15", "141.908, -22.9754, 84.4301, 0.44", "142.268, -22.8615, 84.461, 0.44", "143.257, -22.5732, 84.4977, 0.15", "144.437, -22.2533, 84.4964, 0.15", "144.827, -22.1457, 84.4884, 0.88", "145.838, -21.8575, 84.4211, 1.7", "147.209, -21.4777, 84.2872, 0.15", "147.956, -21.2801, 84.2147, 0.29", "148.706, -21.095, 84.1467, 0.07", "149.57, -20.9106, 84.1007, 0.22", "150.773, -20.6844, 84.0405, 0.15", "151.382, -20.5817, 84.015, 0.59", "152.31, -20.4408, 83.9826, 1.4", "152.936, -20.3522, 83.9681, 1.25", "154.702, -20.1659, 83.9461, 0.15", "155.689, -20.1076, 83.9481, 0.37", "156.606, -20.0794, 83.9718, 0.15", "157.365, -20.0705, 84.0239, 0.37", "157.824, -20.0736, 84.0947, 0.37", "158.472, -20.073, 84.2452, 0.88", "159.09, -20.0796, 84.4241, 1.62", "159.467, -20.0874, 84.5566, 1.62", "161.299, -20.1559, 85.2856, 0.07", "162.544, -20.2107, 85.8317, 0.07", "163.1, -20.2222, 86.1084, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "53.2891, 0.793599, -30.8563, 0.07", "63.5886, -1.06003, -39.0037, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "53.2891, 0.793599, -30.8563, 0.81", "57.4661, 0.399582, -34.4545, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-9.23807, 39.48, 51.2528, 0.07", "-7.97233, 41.0626, 50.7065, 0.07", "-7.15225, 42.1226, 50.2655, 0.07", "-6.61135, 42.868, 49.941, 0.81", "-5.85139, 44.009, 49.3951, 0.07", "-5.52695, 44.5384, 49.1175, 0.15", "-4.82594, 45.6822, 48.5176, 0.07", "-4.49535, 46.2767, 48.1529, 0.66", "-4.26054, 46.7581, 47.8223, 0.88", "-3.77839, 47.874, 47.0469, 0.15", "-3.51197, 48.6828, 46.4249, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.23807, 39.48, 51.2528, 0.07", "-9.76297, 40.9477, 52.9001, 0.07", "-10.1328, 42.0261, 54.1226, 0.07", "-10.346, 42.8948, 55.1483, 0.07", "-10.4865, 43.5983, 56.0787, 0.96", "-10.5248, 43.8151, 56.4056, 0.96", "-10.6568, 44.8291, 58.0712, 0.07", "-10.6654, 45.4872, 59.291, 0.59", "-10.5666, 46.4743, 61.2468, 0.22", "-10.4346, 47.2506, 62.9086, 1.25", "-10.2341, 48.2934, 65.3734, 0.22", "-10.0839, 48.9802, 67.1116, 0.22", "-9.88783, 49.7652, 69.1916, 0.22", "-9.70993, 50.4675, 71.0608, 0.22", "-9.61161, 50.9223, 72.294, 1.33", "-9.37093, 52.0267, 75.1377, 0.15", "-9.19427, 52.6525, 76.7008, 0.29", "-8.99705, 53.3203, 78.3152, 0.29", "-8.87542, 53.7288, 79.2105, 0.44", "-8.44168, 54.924, 81.5612, 0.22", "-7.98748, 55.9701, 83.4129, 0.22", "-7.17769, 57.5581, 85.9859, 0.29", "-7.03907, 57.8052, 86.3725, 1.11", "-6.20372, 59.0752, 88.372, 0.29", "-5.45611, 60.0394, 89.9623, 0.29", "-5.19811, 60.3161, 90.4416, 0.29", "-4.50725, 60.936, 91.8395, 0.29", "-4.34228, 61.0561, 92.2427, 0.29", "-3.82364, 61.3452, 93.7566, 0.29", "-3.41472, 61.4819, 95.1491, 0.29", "-3.1716, 61.537, 96.1006, 0.29", "-2.61824, 61.6302, 98.0739, 0.29", "-2.07174, 61.7014, 99.8695, 0.29", "-1.48823, 61.7664, 101.765, 0.29", "-0.978506, 61.8138, 103.463, 0.29", "-0.242019, 61.9185, 105.88, 0.29", "0.469703, 62.0799, 108.19, 0.52", "0.963711, 62.2659, 109.781, 0.52", "1.32057, 62.4848, 111.016, 0.52", "1.54661, 62.7285, 111.921, 0.22", "2.10112, 63.6208, 114.505, 0.22", "2.37786, 64.3119, 116.155, 0.22", "2.60689, 65.1723, 118.022, 0.44", "2.83696, 66.1106, 119.94, 0.88", "3.32, 67.7735, 123.244, 0.15", "3.59548, 68.6216, 124.918, 0.15", "3.75839, 69.1839, 126.023, 0.22", "3.86786, 69.5657, 126.837, 0.22", "3.93197, 69.8323, 127.472, 0.22", "3.99557, 70.0806, 128.105, 0.22", "4.09913, 70.357, 128.834, 0.22", "4.27172, 70.8424, 129.978, 0.22", "4.51519, 71.5343, 131.7, 0.22", "4.59901, 71.7888, 132.385, 0.22", "4.83336, 72.3988, 134.104, 0.22", "5.15466, 73.0689, 135.998, 0.22", "5.35887, 73.3772, 136.856, 0.22", "5.82306, 73.9371, 138.286, 0.22", "6.32318, 74.5167, 139.575, 0.22", "6.80823, 75.0115, 140.7, 0.22", "7.36355, 75.5036, 141.889, 0.22", "8.25874, 76.2278, 143.502, 0.22", "8.94495, 76.7672, 144.573, 0.22", "9.53467, 77.3106, 145.364, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-105.454, 37.1607, 19.4812, 0.29", "-106.793, 38.6235, 19.8111, 0.29", "-108.114, 40.0039, 20.0806, 0.07", "-108.534, 40.4343, 20.1555, 0.15", "-109.149, 41.033, 20.2738, 0.07", "-109.639, 41.4849, 20.3699, 0.29", "-110.68, 42.4012, 20.5656, 0.07", "-111.125, 42.7532, 20.6371, 0.37", "-111.397, 42.9719, 20.6661, 0.37", "-112.328, 43.7328, 20.7732, 0.07", "-112.611, 43.9734, 20.8118, 0.15", "-113.428, 44.7503, 20.9786, 0.07", "-114.122, 45.5112, 21.1628, 0.07", "-114.542, 46.1028, 21.3359, 0.74", "-114.804, 46.5432, 21.4866, 0.74", "-115.382, 47.7044, 21.911, 0.07", "-115.795, 48.6849, 22.3538, 0.07", "-115.977, 49.1775, 22.6426, 0.29", "-116.442, 50.5031, 23.6632, 0.07", "-116.714, 51.2964, 24.4244, 0.07", "-116.877, 51.8024, 24.9882, 0.66", "-117.205, 52.8195, 26.2398, 0.07", "-117.529, 53.653, 27.3637, 0.29", "-117.934, 54.6062, 28.7847, 0.22", "-118.373, 55.5652, 30.2847, 1.33", "-118.828, 56.5339, 31.8279, 0.07", "-119.096, 57.1355, 32.8116, 0.44", "-119.526, 58.2058, 34.5321, 0.15", "-119.699, 58.7268, 35.3145, 0.15", "-119.902, 59.5187, 36.402, 1.4", "-120.154, 61.0173, 38.3416, 0.22", "-120.274, 61.9285, 39.514, 0.15", "-120.317, 62.6181, 40.3778, 0.22", "-120.295, 63.6295, 41.5541, 1.7", "-120.198, 65.3506, 43.4493, 0.07", "-120.102, 66.0868, 44.2527, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-105.454, 37.1607, 19.4812, 0.96", "-106.611, 37.2949, 19.7632, 0.96", "-107.66, 37.3441, 19.9741, 0.07", "-107.988, 37.3507, 20.0303, 0.07", "-108.451, 37.353, 20.1069, 0.15", "-108.633, 37.3539, 20.1369, 0.37", "-109.093, 37.3561, 20.2131, 0.44", "-110.113, 37.2818, 20.3688, 0.22", "-110.695, 37.2171, 20.4238, 0.96", "-111.237, 37.1779, 20.4747, 1.7" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "39.885, -141.679, 26.4292, 0.07", "39.7764, -143.478, 27.9675, 0.07", "39.6556, -144.395, 28.8456, 0.07", "39.637, -144.504, 28.9554, 0.59", "39.5468, -145.016, 29.46, 1.11", "39.3881, -145.976, 30.3638, 0.07", "39.3354, -146.416, 30.7525, 0.52", "39.1882, -148.241, 32.2194, 0.07", "39.1664, -148.612, 32.5041, 0.07", "39.1331, -149.044, 32.8163, 1.03", "39.0722, -149.545, 33.1603, 1.25", "38.787, -151.048, 34.2376, 0.15", "38.5416, -152.044, 34.9824, 0.15", "38.3698, -152.679, 35.4473, 1.03", "38.0034, -153.826, 36.2767, 0.07", "37.7315, -154.572, 36.815, 0.81", "36.9546, -156.48, 38.1753, 0.07", "36.6445, -157.179, 38.6402, 0.66", "36.4054, -157.731, 38.9862, 1.18", "35.8455, -159.104, 39.7957, 0.15", "35.5451, -159.947, 40.2226, 0.44", "35.4475, -160.273, 40.3466, 0.44", "35.0683, -161.813, 40.7837, 0.22", "34.8383, -162.928, 41.0806, 0.66", "34.6896, -163.775, 41.3112, 1.47", "34.5709, -164.681, 41.5487, 0.52", "34.4163, -165.878, 41.8997, 0.15", "34.2697, -167.1, 42.28, 0.15", "34.1846, -167.984, 42.561, 0.15", "34.1364, -168.575, 42.7379, 0.96", "34.0853, -169.145, 42.9199, 1.11", "33.8626, -171.363, 43.6552, 0.07", "33.811, -171.799, 43.7937, 0.07", "33.7296, -172.379, 43.9271, 0.52", "33.5303, -173.707, 44.1683, 0.07", "33.4017, -174.73, 44.2945, 0.07", "33.3716, -175.1, 44.3196, 0.22", "33.363, -175.441, 44.3157, 0.52", "33.3443, -176.837, 44.3123, 0.07", "33.3449, -177.131, 44.3145, 0.52", "33.3724, -177.842, 44.3284, 1.03", "33.4609, -179.426, 44.4102, 0.07", "33.4848, -179.875, 44.4603, 0.15", "33.5112, -180.466, 44.5541, 0.07", "33.5259, -180.787, 44.619, 0.44", "33.5388, -181.216, 44.7129, 0.81", "33.5411, -182.721, 45.0769, 0.22", "33.5344, -183.453, 45.2792, 0.81", "33.5177, -184.057, 45.4713, 1.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.885, -141.679, 26.4292, 0.07", "40.1975, -143.715, 26.7634, 0.07", "40.2853, -144.22, 26.84, 0.22", "40.5578, -145.617, 27.0294, 0.07", "40.6296, -145.957, 27.0707, 0.15", "41.0717, -147.855, 27.2831, 0.07", "41.195, -148.362, 27.3315, 0.66", "41.3424, -148.875, 27.3666, 0.66", "41.6373, -149.816, 27.4237, 0.07", "41.8965, -150.567, 27.4599, 0.74", "42.1022, -151.149, 27.4861, 1.55", "42.6557, -152.787, 27.5452, 0.22", "43.1797, -154.332, 27.5717, 0.07", "43.3327, -154.776, 27.5568, 0.74", "43.6748, -155.715, 27.4674, 1.77", "44.2798, -157.206, 27.224, 0.22", "44.7301, -158.118, 26.9684, 0.22", "45.181, -158.819, 26.6265, 0.22", "45.8129, -159.589, 26.0552, 0.22", "46.272, -160.06, 25.629, 0.81", "46.8304, -160.547, 25.091, 1.55", "47.8983, -161.376, 24.0514, 0.22", "48.6492, -161.934, 23.2936, 0.66", "49.4066, -162.511, 22.4676, 1.25", "50.1215, -163.07, 21.6415, 0.22", "50.8814, -163.703, 20.6899, 0.22", "51.3957, -164.216, 19.9778, 0.22", "51.8785, -164.793, 19.2738, 0.22", "52.5056, -165.631, 18.3371, 0.29", "52.8149, -166.075, 17.8732, 1.03", "53.0289, -166.381, 17.5679, 1.92", "54.3439, -168.199, 15.9095, 0.22", "55.1547, -169.274, 15.029, 0.15", "55.6222, -169.903, 14.5841, 0.74", "56.0721, -170.533, 14.1837, 1.33", "56.8946, -171.719, 13.4738, 0.07", "57.1668, -172.105, 13.2548, 0.22", "57.5849, -172.675, 12.9901, 0.15", "57.8926, -173.105, 12.8194, 0.22", "58.4346, -173.909, 12.5119, 0.22", "58.7663, -174.455, 12.3023, 0.66", "59.0523, -174.969, 12.127, 1.18", "59.5343, -175.84, 11.8122, 0.15", "59.9974, -176.629, 11.5211, 0.15", "60.5614, -177.498, 11.214, 0.22", "60.9946, -178.144, 11.0185, 0.66", "61.5329, -178.916, 10.8033, 0.15", "62.417, -180.12, 10.5175, 0.22", "62.832, -180.657, 10.4178, 0.74", "63.3327, -181.281, 10.3452, 1.18", "64.3828, -182.53, 10.2663, 0.15", "64.8751, -183.126, 10.2446, 0.22", "65.5429, -184.009, 10.2398, 0.15", "65.8236, -184.423, 10.2584, 0.59", "65.9983, -184.714, 10.2711, 0.96", "66.2679, -185.24, 10.2882, 0.59", "66.6728, -186.097, 10.3112, 0.15", "66.9836, -186.767, 10.3284, 0.37", "67.5499, -187.98, 10.36, 0.15", "67.7428, -188.367, 10.3718, 0.52", "68.1083, -189.075, 10.3951, 0.88", "68.792, -190.301, 10.4425, 0.15", "69.1733, -190.932, 10.4709, 0.29", "69.5022, -191.455, 10.4962, 0.22", "69.7423, -191.861, 10.5138, 0.44", "70.0909, -192.46, 10.5389, 0.44", "70.8889, -193.845, 10.5959, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.47179, -34.7238, 11.8992, 0.29", "-0.6008, -35.663, 11.516, 0.29", "0.177238, -36.7273, 11.071, 0.07", "0.464335, -37.1887, 10.8452, 0.29", "0.942563, -38.0633, 10.4185, 0.15", "1.23019, -38.6312, 10.1339, 0.52", "1.57558, -39.3747, 9.76782, 0.59", "2.14797, -40.7884, 9.11742, 0.15", "2.51925, -41.8464, 8.6436, 0.74", "2.80255, -42.7185, 8.24806, 1.99", "3.00219, -43.3596, 7.96788, 1.99", "3.61707, -45.2907, 7.17651, 0.15", "3.81675, -45.8559, 6.97198, 0.29", "4.26459, -47.0429, 6.64779, 0.22", "4.40025, -47.3883, 6.57417, 0.81", "4.69102, -48.1152, 6.44432, 1.18", "4.97964, -48.8158, 6.34299, 0.59", "5.58551, -50.2308, 6.18229, 0.07", "5.94232, -51.0686, 6.1007, 0.07", "6.07652, -51.3682, 6.08417, 0.07", "6.4113, -52.0948, 6.04204, 0.29", "6.90208, -53.1541, 5.98357, 0.22", "7.31543, -54.0095, 5.9452, 0.96", "7.73803, -54.9045, 5.92702, 0.22", "8.34332, -56.306, 5.8816, 0.15", "8.84135, -57.5835, 5.83715, 0.15", "9.17047, -58.4923, 5.80973, 1.03", "9.54383, -59.6109, 5.79378, 2.14", "10.0447, -61.2448, 5.76205, 0.22", "10.4219, -62.6136, 5.7361, 0.22", "10.5851, -63.3317, 5.72801, 0.66", "10.7199, -64.0601, 5.71438, 0.96", "10.9195, -65.3579, 5.67359, 0.52", "11.0798, -66.7327, 5.6259, 0.22", "11.1947, -67.9513, 5.58278, 0.88", "11.3316, -69.8027, 5.53031, 0.22", "11.3789, -71.356, 5.50536, 0.15", "11.3667, -72.4179, 5.48664, 0.22", "11.2812, -74.1314, 5.4662, 0.15", "11.2222, -75.0429, 5.4688, 0.81", "11.1688, -75.8553, 5.48043, 0.81", "11.1161, -77.7615, 5.55481, 0.15", "11.1335, -78.9173, 5.68708, 0.22", "11.1784, -79.5764, 5.77235, 0.88", "11.2825, -80.4142, 5.87839, 1.84", "11.4524, -81.2998, 5.98456, 1.03", "11.8834, -83.0204, 6.12156, 0.22", "12.3391, -84.5541, 6.21291, 0.22", "12.6353, -85.5068, 6.21444, 0.22", "12.8726, -86.3255, 6.18136, 0.81", "13.1454, -87.2977, 6.11771, 1.47", "13.6555, -89.1841, 5.93031, 0.37", "13.9447, -90.3304, 5.7491, 0.44", "14.3823, -92.0215, 5.39003, 0.74", "14.7847, -93.702, 5.111, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.47179, -34.7238, 11.8992, 0.22", "-2.32111, -37.1029, 13.4725, 0.22", "-2.62927, -37.9501, 14.0962, 0.66", "-2.98955, -38.9621, 14.8549, 1.03", "-3.36983, -40.0895, 15.6892, 0.22", "-3.66671, -40.9901, 16.3335, 0.22", "-3.95557, -41.9236, 16.965, 0.37", "-4.20732, -42.9071, 17.603, 0.37", "-4.38615, -43.5677, 18.0118, 0.88", "-4.52735, -44.09, 18.3137, 1.92", "-4.70728, -44.8006, 18.6898, 2.14", "-5.10676, -46.5556, 19.5769, 0.22", "-5.42058, -48.0088, 20.3246, 0.22", "-5.59879, -48.8525, 20.7792, 0.88", "-5.76335, -49.6443, 21.2604, 1.7", "-5.91695, -50.4259, 21.7922, 2.06", "-6.27232, -52.4036, 23.2816, 0.29", "-6.45053, -53.5643, 24.1973, 0.29", "-6.55866, -54.4675, 24.9245, 0.81", "-6.63098, -55.3022, 25.5526, 1.25", "-6.81325, -57.1362, 26.8277, 0.15", "-6.89457, -57.9106, 27.3036, 0.15", "-6.96959, -58.6217, 27.6812, 0.88", "-7.0922, -59.8365, 28.2352, 2.43", "-7.28762, -61.7913, 28.9984, 0.66", "-7.50318, -63.8432, 29.6785, 0.29", "-7.59866, -64.8322, 29.9654, 0.88", "-7.74469, -66.595, 30.4559, 0.22", "-7.78981, -67.1834, 30.6392, 0.52", "-7.81908, -67.9214, 30.8783, 0.88", "-7.80872, -68.656, 31.1439, 0.37", "-7.72504, -69.6233, 31.5051, 0.15", "-7.63256, -70.6351, 31.8968, 0.52", "-7.53545, -71.7638, 32.3443, 0.15", "-7.47549, -72.6514, 32.7198, 0.15", "-7.46122, -73.0698, 32.9114, 0.66", "-7.46154, -73.6309, 33.1752, 0.96", "-7.49673, -75.1894, 33.9304, 0.22", "-7.52474, -76.1792, 34.4144, 1.25", "-7.54962, -76.8162, 34.723, 2.43", "-7.58706, -77.5388, 35.091, 1.99", "-7.69369, -79.4274, 36.0895, 0.22", "-7.76119, -80.6806, 36.7713, 0.07", "-7.81562, -81.5218, 37.245, 0.96", "-7.97377, -83.0756, 38.1355, 0.15", "-8.07525, -83.688, 38.4899, 0.15", "-8.23262, -84.2911, 38.8432, 0.88", "-8.55921, -85.0125, 39.2869, 1.47", "-9.56356, -86.491, 40.1873, 0.15", "-10.0796, -87.0422, 40.5194, 0.22", "-10.9103, -87.7062, 40.9123, 0.22", "-11.687, -88.223, 41.2145, 0.37", "-12.7104, -88.8061, 41.5562, 0.81", "-13.6907, -89.3041, 41.8185, 1.25", "-14.6256, -89.7446, 42.0135, 0.22", "-15.7962, -90.3193, 42.2385, 0.22", "-16.7807, -90.8211, 42.4226, 0.66", "-17.6423, -91.282, 42.5743, 1.11", "-19.0077, -92.0472, 42.8342, 0.15", "-19.3427, -92.2453, 42.9056, 0.37", "-20.4431, -92.9323, 43.1484, 0.15", "-21.2593, -93.4631, 43.3113, 0.66", "-21.798, -93.8551, 43.4011, 1.18", "-23.4279, -95.0751, 43.7152, 0.29", "-24.7849, -96.1119, 44.0313, 0.15", "-25.1621, -96.4225, 44.1377, 0.74", "-25.8908, -97.0639, 44.3751, 1.7", "-27.737, -98.768, 45.0776, 0.22", "-29.2342, -100.247, 45.7831, 0.22", "-30.1531, -101.235, 46.3056, 1.18", "-31.4116, -102.662, 47.1644, 0.07", "-31.88, -103.239, 47.5448, 0.29", "-32.645, -104.287, 48.3245, 0.66", "-33.2291, -105.191, 49.0959, 0.15", "-33.4601, -105.617, 49.4575, 0.29", "-33.7611, -106.204, 49.987, 0.37", "-34.1109, -106.882, 50.6724, 1.11", "-34.5584, -107.747, 51.6656, 0.29", "-35.0268, -108.687, 52.872, 0.88", "-35.6441, -109.893, 54.6559, 0.15", "-35.9459, -110.474, 55.6784, 1.11", "-36.4046, -111.348, 57.4783, 0.66", "-36.8747, -112.184, 59.4051, 0.22", "-37.1339, -112.677, 60.563, 0.96", "-37.5301, -113.506, 62.5143, 0.88", "-38.0066, -114.421, 64.7184, 0.22", "-38.3567, -115.038, 66.181, 0.74", "-38.641, -115.525, 67.2906, 1.03", "-39.2294, -116.536, 69.4486, 0.15", "-39.6829, -117.335, 71.0567, 1.33", "-40.5069, -118.86, 73.9378, 0.37", "-40.8858, -119.615, 75.29, 0.37", "-41.1887, -120.266, 76.4023, 0.22", "-41.3294, -120.583, 76.9382, 0.74", "-41.7554, -121.563, 78.5134, 0.22", "-42.019, -122.253, 79.4622, 0.52", "-42.165, -122.758, 80.0197, 1.11", "-42.5209, -123.905, 81.129, 0.07", "-42.7405, -124.572, 81.6984, 0.15", "-42.9597, -125.235, 82.205, 0.66", "-43.2637, -126.213, 82.8137, 0.07", "-43.394, -126.639, 83.0565, 0.22", "-43.6331, -127.358, 83.4684, 0.07", "-43.8784, -128.013, 83.8292, 1.03", "-44.1278, -128.663, 84.1747, 1.4", "-44.7113, -130.209, 84.9737, 0.22", "-45.1948, -131.465, 85.6268, 0.07", "-45.5197, -132.273, 86.0562, 0.59", "-46.0504, -133.537, 86.7604, 0.07", "-46.3987, -134.298, 87.2152, 0.15", "-46.8148, -135.083, 87.7085, 1.18", "-47.274, -135.876, 88.2126, 0.15", "-47.7533, -136.611, 88.7314, 0.88", "-48.4388, -137.587, 89.4644, 0.07", "-48.8397, -138.12, 89.896, 0.44", "-49.7921, -139.225, 90.8696, 0.15", "-50.4664, -139.935, 91.5419, 0.96", "-51.8735, -141.358, 92.9381, 0.29", "-52.3748, -141.857, 93.4238, 0.15", "-52.7764, -142.264, 93.7841, 0.52", "-53.7697, -143.324, 94.6347, 0.37", "-54.6066, -144.318, 95.3402, 1.25", "-55.198, -145.113, 95.824, 0.07", "-55.5555, -145.68, 96.1181, 0.22", "-56.2797, -146.96, 96.754, 0.07", "-56.4767, -147.365, 96.9455, 0.59", "-56.8126, -148.173, 97.3079, 1.33", "-57.5007, -149.96, 98.0891, 0.07", "-57.9862, -151.28, 98.6876, 0.07", "-58.2163, -151.914, 99.0129, 0.59", "-58.5281, -152.796, 99.5316, 0.15", "-58.8316, -153.602, 100.039, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-35.6572, -87.921, 17.0019, 0.22", "-36.6325, -88.9493, 17.6436, 0.22", "-37.3069, -89.6866, 17.9899, 0.22", "-37.5922, -89.9687, 18.096, 0.15", "-37.9933, -90.356, 18.2423, 0.44", "-38.3706, -90.7158, 18.3832, 0.96", "-38.7604, -91.0855, 18.5298, 1.11", "-39.5722, -91.8521, 18.7964, 0.29", "-40.7239, -92.9863, 19.2056, 0.22", "-41.1597, -93.402, 19.3541, 0.59", "-41.4563, -93.6739, 19.4535, 0.96", "-41.9008, -94.0697, 19.6133, 0.96", "-42.5554, -94.6397, 19.8688, 0.22", "-43.1263, -95.1421, 20.1172, 0.22", "-43.8762, -95.8541, 20.4788, 0.22", "-44.2029, -96.1656, 20.6464, 0.52", "-44.7508, -96.6994, 20.9558, 1.33", "-45.3912, -97.33, 21.3488, 0.22", "-45.9348, -97.8747, 21.6989, 0.52", "-46.6253, -98.6026, 22.1922, 0.15", "-47.1091, -99.1663, 22.5689, 0.15", "-47.3848, -99.506, 22.7828, 0.22", "-47.5137, -99.6853, 22.8901, 0.37", "-47.8352, -100.162, 23.1783, 0.81", "-48.2472, -100.826, 23.5949, 0.15", "-48.3634, -101.035, 23.7329, 0.07", "-48.5277, -101.366, 23.9558, 0.15", "-48.8289, -101.921, 24.3732, 0.22", "-49.1325, -102.427, 24.833, 0.15", "-49.3804, -102.775, 25.2174, 0.15", "-49.5714, -102.986, 25.4998, 0.44", "-49.8484, -103.243, 25.8923, 0.66", "-50.586, -103.869, 26.961, 0.22", "-51.1136, -104.303, 27.7169, 0.74", "-51.6678, -104.749, 28.5136, 1.7", "-52.4541, -105.375, 29.6453, 0.22", "-52.8817, -105.724, 30.2743, 0.15", "-53.3419, -106.098, 30.9702, 0.52", "-53.6, -106.306, 31.3786, 0.66", "-54.156, -106.732, 32.2231, 0.22", "-54.6221, -107.065, 32.9051, 0.37", "-55.0513, -107.335, 33.4906, 0.22", "-55.4511, -107.532, 33.9717, 0.37", "-55.8438, -107.674, 34.3691, 0.37", "-56.2537, -107.798, 34.763, 0.15", "-56.8734, -107.997, 35.3094, 0.15", "-57.1323, -108.081, 35.5211, 0.74", "-57.8519, -108.347, 36.0658, 1.55", "-59.005, -108.846, 36.9338, 0.07", "-59.8141, -109.252, 37.5579, 0.15", "-60.431, -109.605, 38.0499, 0.07", "-60.6346, -109.743, 38.2191, 0.44", "-60.928, -109.975, 38.4785, 0.44", "-61.5802, -110.578, 39.0877, 0.22", "-62.0029, -111.031, 39.5004, 0.88", "-62.3113, -111.385, 39.7865, 1.47", "-63.1272, -112.385, 40.5505, 0.07", "-63.559, -112.94, 40.9483, 0.07", "-63.6933, -113.122, 41.0688, 0.29", "-64.0817, -113.671, 41.3808, 0.81", "-64.6246, -114.428, 41.7595, 0.07", "-65.1054, -115.093, 42.044, 0.07", "-65.6273, -115.827, 42.2717, 0.07", "-65.8251, -116.115, 42.3465, 0.59", "-66.1216, -116.554, 42.4522, 0.96", "-66.8368, -117.657, 42.7125, 0.15", "-67.1747, -118.21, 42.8419, 0.88", "-67.9856, -119.554, 43.1649, 0.07", "-68.3126, -120.131, 43.3252, 0.37", "-68.3426, -120.187, 43.3439, 0.37", "-68.77, -121.096, 43.6947, 0.07", "-69.022, -121.742, 43.9917, 0.88", "-69.3842, -122.79, 44.5559, 0.07", "-69.5929, -123.5, 44.9706, 0.07", "-69.6774, -123.836, 45.1636, 0.29", "-69.7406, -124.105, 45.3181, 0.29", "-69.9587, -125.073, 45.8745, 0.07", "-70.127, -125.735, 46.2563, 0.81", "-70.2507, -126.166, 46.4987, 1.4", "-70.9514, -128.236, 47.6986, 0.07", "-71.1431, -128.738, 48.0051, 0.74", "-71.307, -129.126, 48.2487, 0.74", "-71.8366, -130.288, 49.0084, 0.07", "-72.0487, -130.717, 49.3023, 0.22", "-72.5055, -131.54, 49.9135, 0.07", "-72.821, -132.038, 50.3313, 0.81", "-73.0326, -132.378, 50.6405, 1.25", "-73.5826, -133.263, 51.5597, 0.22", "-73.8501, -133.681, 52.0347, 0.07", "-74.0498, -133.987, 52.3937, 0.44", "-74.7429, -134.988, 53.5958, 0.07", "-75.1781, -135.593, 54.362, 1.03", "-75.7147, -136.321, 55.3548, 0.07", "-75.941, -136.615, 55.7887, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-35.6572, -87.921, 17.0019, 0.07", "-35.9717, -88.5723, 17.0755, 0.07", "-36.2101, -89.0327, 17.141, 0.29", "-36.5822, -89.6719, 17.2549, 0.15", "-36.8428, -90.0707, 17.3348, 0.15", "-37.1877, -90.5636, 17.4365, 0.74", "-37.3255, -90.7583, 17.4725, 0.74", "-37.9597, -91.6275, 17.5867, 0.15", "-38.4144, -92.2609, 17.6298, 0.15", "-38.7052, -92.693, 17.6302, 0.29", "-39.0708, -93.2697, 17.5935, 0.15", "-39.3181, -93.7183, 17.533, 0.29", "-39.6757, -94.5413, 17.3858, 0.07", "-39.7632, -94.8185, 17.3233, 0.52", "-39.8446, -95.1655, 17.241, 0.88", "-39.9395, -95.6866, 17.1406, 0.88", "-40.1074, -96.6606, 17.019, 0.07", "-40.2299, -97.336, 16.9756, 0.07", "-40.3137, -97.747, 16.97, 0.29", "-40.4042, -98.1452, 16.9716, 0.74", "-40.5923, -98.8425, 16.9843, 0.22", "-41.0127, -100.174, 16.9856, 0.22", "-41.1617, -100.555, 16.9821, 0.59", "-41.3471, -100.954, 16.9714, 1.11", "-41.4382, -101.135, 16.9602, 1.25", "-41.7535, -101.737, 16.8962, 0.74", "-42.1422, -102.457, 16.78, 0.22", "-42.4737, -103.074, 16.6542, 0.15", "-42.7626, -103.635, 16.5265, 0.15", "-42.9648, -104.048, 16.4289, 0.15", "-43.1945, -104.529, 16.3227, 0.15", "-43.4012, -104.967, 16.2243, 0.37", "-43.7353, -105.677, 16.0754, 0.22", "-43.9728, -106.192, 15.9643, 0.74", "-44.1897, -106.68, 15.839, 1.25", "-44.5143, -107.441, 15.6336, 0.22", "-44.8644, -108.317, 15.3855, 0.15", "-44.9878, -108.655, 15.2898, 0.74", "-45.1482, -109.16, 15.1568, 0.88", "-45.5276, -110.49, 14.7969, 0.15", "-45.7208, -111.272, 14.5726, 0.15", "-45.7733, -111.539, 14.4931, 0.29", "-45.8532, -112.085, 14.3412, 0.37", "-45.9398, -112.692, 14.1731, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-9.56781, -31.0887, -13.7135, 0.66", "-8.80019, -32.2714, -13.3917, 0.66", "-7.99867, -33.2393, -13.2308, 0.29", "-7.60169, -33.7098, -13.1802, 0.29", "-7.11913, -34.3371, -13.1315, 0.66", "-6.32693, -35.4642, -13.0101, 0.81", "-5.46191, -36.773, -12.8465, 0.37", "-4.75641, -37.7829, -12.7255, 0.37", "-4.17009, -38.649, -12.5937, 0.22", "-3.63236, -39.4943, -12.4567, 0.29", "-3.03498, -40.5626, -12.2338, 0.29", "-2.78989, -41.1146, -12.0764, 1.4", "-2.57454, -41.7444, -11.8247, 2.58", "-2.26264, -42.9394, -11.2031, 2.58" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-9.56781, -31.0887, -13.7135, 0.59", "-9.28564, -31.3336, -14.1948, 0.59", "-8.7146, -31.6629, -15.0086, 0.59", "-8.14187, -31.9041, -15.806, 0.59", "-7.87479, -31.9892, -16.2261, 0.59", "-7.36654, -32.1319, -17.1683, 0.44", "-6.85841, -32.2745, -18.1103, 0.44", "-6.45068, -32.3524, -18.7633, 0.74", "-6.07657, -32.3638, -19.3036, 0.74", "-5.54883, -32.2719, -20.1125, 0.22", "-5.26235, -32.1453, -20.6965, 0.37", "0.997411, -33.7814, -26.5189, 0.37", "6.51172, -34.7286, -33.1918, 0.37", "11.2389, -34.4646, -40.4993, 0.37", "15.0535, -34.2319, -48.323, 0.37", "18.1949, -33.9788, -56.4395, 0.37" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "163.1, -20.2222, 86.1084, 0.07", "163.353, -19.2714, 86.3553, 0.07", "163.549, -18.5745, 86.5945, 0.22", "163.901, -17.4275, 87.0341, 0.07", "164.049, -16.995, 87.2177, 0.59", "164.186, -16.6258, 87.3806, 0.96", "164.823, -14.9702, 88.1161, 0.07", "165.191, -14.1481, 88.4916, 0.15", "165.71, -13.0808, 88.9985, 0.07", "166.257, -12.026, 89.4739, 0.07", "166.495, -11.5978, 89.6522, 0.29", "166.801, -11.0803, 89.84, 0.96", "167.595, -9.81112, 90.2425, 0.07", "168.098, -8.99173, 90.4581, 0.07", "168.499, -8.32039, 90.6414, 0.29", "169.006, -7.45141, 90.8884, 1.18", "169.916, -5.84626, 91.394, 0.07", "170.403, -4.95496, 91.7076, 0.07", "170.71, -4.35225, 91.9384, 0.22", "171.293, -3.13624, 92.5035, 0.07", "171.472, -2.7398, 92.7282, 0.29", "171.695, -2.18753, 93.0551, 0.52", "172.153, -0.873309, 93.8287, 0.07", "172.25, -0.56755, 94.0179, 0.29", "172.795, 1.13389, 95.2763, 0.07", "173.038, 1.85056, 95.9166, 0.07", "173.254, 2.50092, 96.5273, 1.11", "173.595, 3.51532, 97.5579, 0.07", "173.908, 4.42128, 98.6007, 0.07", "174.367, 5.6426, 100.152, 0.29", "174.665, 6.30095, 101.181, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "163.1, -20.2222, 86.1084, 0.07", "163.836, -20.6685, 86.1969, 0.07", "164.293, -20.9463, 86.252, 0.15", "164.787, -21.2461, 86.3114, 1.4", "165.491, -21.6736, 86.3962, 0.52", "166.037, -22.0048, 86.4618, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-111.237, 37.1779, 20.4747, 0.22", "-112.642, 37.5366, 19.7943, 0.22", "-113.052, 37.6474, 19.5932, 0.44", "-113.675, 37.8209, 19.2762, 0.66", "-114.646, 38.1078, 18.7686, 0.15", "-115.584, 38.4188, 18.2685, 0.15", "-115.898, 38.538, 18.1027, 0.52", "-116.477, 38.7949, 17.757, 1.18", "-117.058, 39.0773, 17.3965, 0.37", "-117.578, 39.3648, 17.0744, 0.07", "-117.91, 39.5665, 16.8948, 0.07", "-118.448, 39.9169, 16.6118, 0.15", "-119.122, 40.3816, 16.2374, 0.07", "-119.42, 40.5914, 16.0649, 0.59", "-119.709, 40.7844, 15.8893, 1.11", "-120.958, 41.578, 15.0687, 0.15", "-121.643, 42.0107, 14.5744, 0.15", "-122.021, 42.265, 14.2762, 0.59", "-122.298, 42.473, 14.0193, 0.52", "-122.86, 42.9254, 13.4201, 0.15", "-123.196, 43.2234, 13.0103, 0.15", "-123.458, 43.5066, 12.5845, 0.15", "-123.691, 43.8416, 12.1153, 0.66", "-124.092, 44.5299, 11.186, 0.15", "-124.269, 44.8981, 10.7118, 0.37", "-124.441, 45.3368, 10.1809, 0.22", "-124.689, 46.028, 9.31959, 0.22", "-124.818, 46.4285, 8.79586, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-111.237, 37.1779, 20.4747, 0.15", "-112.938, 36.974, 21.0724, 0.15", "-113.458, 36.9078, 21.2358, 0.59", "-113.919, 36.8839, 21.3479, 0.81", "-114.644, 36.8826, 21.4961, 0.15", "-115.879, 36.928, 21.7168, 0.15", "-116.171, 36.9532, 21.7697, 0.59", "-116.554, 37.011, 21.8191, 1.03", "-118.166, 37.3494, 22.029, 0.07", "-118.655, 37.4725, 22.0948, 0.74", "-119.135, 37.6154, 22.158, 0.74", "-120.485, 38.0351, 22.3142, 0.07", "-121.461, 38.3262, 22.4406, 0.07", "-122.491, 38.6327, 22.5831, 0.07", "-122.706, 38.6903, 22.6151, 0.88", "-123.486, 38.8918, 22.728, 1.4", "-124.943, 39.2663, 22.9244, 0.44", "-126.239, 39.5991, 23.0664, 0.07", "-126.912, 39.7761, 23.1507, 0.07", "-127.73, 39.9955, 23.2733, 0.07", "-128.454, 40.2062, 23.4029, 0.07", "-128.956, 40.3669, 23.5048, 0.81", "-130.475, 40.9024, 23.8443, 0.07", "-131.337, 41.2275, 24.0554, 0.96", "-132.822, 41.7583, 24.4897, 0.15", "-133.465, 41.9818, 24.7118, 0.15", "-133.993, 42.1537, 24.9195, 0.74", "-134.58, 42.3414, 25.1757, 1.18", "-135.62, 42.6524, 25.6757, 0.07", "-136.554, 42.8905, 26.0933, 0.15", "-137.303, 43.0462, 26.4009, 0.15", "-137.666, 43.1057, 26.5281, 0.15", "-138.181, 43.1788, 26.683, 0.81", "-139.028, 43.3106, 26.8744, 1.25", "-140.139, 43.5049, 27.0689, 0.15", "-140.835, 43.6459, 27.1663, 0.15", "-141.426, 43.7533, 27.239, 0.66", "-141.962, 43.845, 27.3033, 0.22", "-143.054, 44.0619, 27.4521, 0.15", "-143.788, 44.2488, 27.5654, 0.96", "-144.222, 44.3759, 27.6476, 1.11", "-144.848, 44.5872, 27.7788, 0.52", "-145.681, 44.9243, 27.9651, 0.15", "-146.238, 45.2109, 28.0878, 0.22", "-146.545, 45.4338, 28.1657, 0.15", "-146.809, 45.6969, 28.2339, 0.15", "-147.186, 46.1785, 28.3471, 0.37", "-147.368, 46.427, 28.4085, 0.37", "-147.954, 47.1787, 28.6048, 0.15", "-148.592, 47.862, 28.8193, 0.22", "-149.014, 48.2768, 28.9787, 0.74", "-149.327, 48.5635, 29.1038, 1.18", "-150.511, 49.5744, 29.6455, 0.07", "-151.075, 50.0441, 29.9279, 0.81", "-152.023, 50.8473, 30.4762, 0.15", "-152.465, 51.2421, 30.7615, 0.59", "-152.821, 51.607, 31.0649, 1.18", "-153.768, 52.6729, 32.0536, 0.15", "-154.124, 53.1024, 32.4938, 0.29", "-154.567, 53.6325, 33.0745, 0.52", "-154.862, 53.9746, 33.4597, 0.96", "-155.849, 54.9664, 34.6277, 0.22", "-156.3, 55.3221, 35.1124, 0.29", "-156.937, 55.6457, 35.7112, 0.15", "-157.641, 55.8558, 36.312, 0.15", "-158.068, 55.9015, 36.6645, 0.88", "-158.465, 55.865, 37.0504, 1.4", "-159.413, 55.5201, 38.3225, 0.22", "-159.785, 55.2506, 39.163, 0.29", "-159.941, 54.9993, 39.8421, 0.15", "-160.033, 54.5997, 40.8082, 0.37", "-160.058, 54.0557, 42.1058, 0.15", "-160.0, 53.5971, 43.1581, 0.81", "-159.895, 53.1935, 44.084, 0.15", "-159.782, 52.841, 44.9686, 0.66", "-159.589, 52.2986, 46.5094, 0.15", "-159.434, 51.8825, 47.7986, 0.74", "-159.269, 51.4312, 49.3285, 0.22", "-159.121, 51.0241, 50.7511, 0.22", "-158.947, 50.4842, 52.6438, 0.81", "-158.847, 50.1436, 53.8551, 1.25", "-158.643, 49.4885, 56.3388, 0.15", "-158.5, 49.0974, 57.9846, 0.44", "-158.415, 48.9198, 58.8464, 0.44", "-158.344, 48.8204, 59.4126, 0.44", "-158.294, 48.7668, 59.7641, 0.44", "-158.174, 48.6617, 60.6423, 0.44", "-158.037, 48.5841, 61.6109, 0.44", "-157.926, 48.5278, 62.1809, 0.44", "-157.578, 48.3598, 63.5415, 0.44", "-157.39, 48.2429, 64.122, 0.44", "-156.731, 47.7121, 65.744, 0.44", "-156.529, 47.5202, 66.1351, 0.07", "-156.067, 47.0656, 66.8763, 0.07", "-155.522, 46.5623, 67.6202, 0.37", "-154.809, 46.0071, 68.4303, 0.15", "-154.245, 45.6399, 69.0331, 1.47", "-153.386, 45.113, 69.8691, 0.07", "-153.085, 44.9406, 70.1902, 0.22", "-152.321, 44.5449, 71.1019, 0.07", "-151.74, 44.2904, 71.8677, 0.44", "-151.124, 44.1067, 72.6348, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "33.5177, -184.057, 45.4713, 0.15", "35.338, -186.078, 46.3275, 0.15", "35.7212, -186.522, 46.5033, 0.29", "36.1847, -187.065, 46.7144, 0.66", "37.3241, -188.415, 47.2297, 0.15", "37.8438, -188.99, 47.4745, 0.29", "38.9501, -190.18, 48.0042, 0.07", "39.5171, -190.785, 48.2767, 0.07", "39.879, -191.162, 48.4529, 0.74", "40.4804, -191.775, 48.749, 1.47", "42.5634, -193.805, 49.7972, 0.22", "43.0339, -194.235, 50.0407, 0.81", "43.6207, -194.714, 50.3588, 1.4" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "33.5177, -184.057, 45.4713, 0.22", "32.4433, -185.859, 46.8681, 0.22", "31.9894, -186.692, 47.4886, 0.29", "31.5567, -187.602, 48.1954, 0.15", "31.1444, -188.556, 48.9567, 0.37", "30.9977, -188.917, 49.2458, 0.52", "30.6432, -189.82, 49.9679, 0.22", "30.3751, -190.569, 50.5774, 0.81", "30.0415, -191.618, 51.4108, 0.15", "29.9502, -191.919, 51.6546, 0.22", "29.8065, -192.328, 52.0236, 0.52", "29.4111, -193.313, 52.9797, 0.15", "29.0442, -194.158, 53.7993, 0.88", "28.8628, -194.557, 54.1685, 0.96", "28.286, -195.745, 55.2187, 0.22", "27.7101, -196.963, 56.2653, 1.33", "27.0988, -198.141, 57.2544, 0.22", "26.7825, -198.681, 57.7076, 0.07", "26.5246, -199.083, 58.0509, 0.15", "25.7806, -200.093, 58.9582, 0.15", "25.5189, -200.422, 59.2584, 1.18", "24.1848, -202.028, 60.7845, 0.22", "23.2421, -203.112, 61.9474, 0.22", "22.8313, -203.592, 62.51, 0.37", "22.0888, -204.504, 63.6335, 0.37", "21.7147, -204.995, 64.2534, 1.25", "20.9042, -206.179, 65.7867, 0.15", "20.4924, -206.914, 66.7487, 0.15", "20.3075, -207.297, 67.2227, 0.37", "19.8012, -208.483, 68.5935, 0.22", "19.59, -209.067, 69.2255, 0.81", "19.0418, -210.511, 70.6762, 0.07", "18.891, -210.901, 71.0161, 0.29", "18.6644, -211.468, 71.4686, 0.44", "18.5387, -211.762, 71.6906, 0.22", "18.4335, -212.019, 71.8642, 0.37", "17.7039, -213.839, 72.9166, 0.15", "17.3265, -214.677, 73.2742, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "14.7847, -93.702, 5.111, 0.59", "14.9946, -93.6883, 3.65244, 0.59", "15.0675, -93.87, 2.8394, 0.59", "15.0818, -93.9571, 2.66104, 0.59", "15.2019, -94.4732, 2.0139, 0.59", "15.2998, -94.8334, 1.68191, 0.59", "15.4189, -95.2712, 1.27829, 1.11", "15.5988, -96.214, 0.717477, 0.15", "15.7151, -96.8405, 0.424608, 1.03", "15.9513, -97.9434, -0.00253445, 0.15", "16.1422, -98.6593, -0.187647, 0.22", "18.0744, -103.473, -4.04676, 0.22", "19.0678, -108.83, -7.48714, 0.22", "20.1212, -114.349, -10.6281, 0.22", "20.5196, -120.319, -12.9428, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "14.7847, -93.702, 5.111, 0.07", "14.801, -95.4032, 5.17395, 0.07", "14.8219, -96.2511, 5.20954, 0.07", "14.8321, -96.6627, 5.22682, 0.81", "14.85, -97.3915, 5.25742, 1.62", "14.8802, -98.615, 5.30878, 0.15", "14.8929, -99.1309, 5.33044, 0.15", "14.9105, -99.4373, 5.34642, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-45.9398, -112.692, 14.1731, 0.07", "-46.5266, -112.969, 14.5747, 0.07", "-47.1477, -113.263, 14.9998, 0.07", "-47.5361, -113.447, 15.2656, 0.15", "-48.1701, -113.747, 15.6995, 0.07", "-48.6096, -113.956, 16.0004, 0.07", "-48.9833, -114.132, 16.2562, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-45.9398, -112.692, 14.1731, 0.81", "-46.0557, -113.387, 13.8138, 0.81", "-46.1977, -114.396, 13.3015, 0.22", "-46.3252, -115.395, 12.8207, 0.22", "-46.4422, -116.086, 12.4861, 0.15", "-46.6172, -117.014, 12.039, 0.15", "-46.6364, -117.116, 11.9914, 0.15", "-46.7219, -117.565, 11.7657, 0.66", "-46.8162, -118.055, 11.4998, 1.03", "-47.0644, -119.336, 10.8211, 0.22", "-47.2215, -119.979, 10.4831, 0.66", "-47.4093, -120.681, 10.1328, 0.22", "-47.6348, -121.533, 9.72735, 0.15", "-47.7772, -122.083, 9.47984, 0.15", "-47.8594, -122.461, 9.32612, 0.66", "-47.9678, -123.151, 9.09575, 0.29", "-48.1411, -124.399, 8.75417, 0.15", "-48.2223, -124.95, 8.63948, 0.15", "-48.2955, -125.422, 8.57613, 0.15", "-48.4265, -126.144, 8.50698, 0.22", "-48.5686, -126.846, 8.44782, 0.59", "-48.7917, -127.797, 8.38161, 1.18", "-49.0274, -128.615, 8.34235, 1.7", "-49.3366, -129.565, 8.29931, 1.99", "-49.6712, -130.52, 8.25195, 1.25", "-50.1699, -131.865, 8.17846, 0.22", "-50.4812, -132.683, 8.12906, 0.37", "-50.8637, -133.626, 8.04906, 0.15", "-51.3621, -134.808, 7.91546, 0.22", "-51.5727, -135.27, 7.85431, 0.59", "-51.8251, -135.786, 7.77655, 1.11", "-52.2288, -136.541, 7.68181, 0.52", "-52.9381, -137.827, 7.54856, 0.22", "-53.2232, -138.298, 7.51721, 0.88", "-53.6887, -139.016, 7.48878, 0.96", "-54.4165, -140.11, 7.47182, 0.07", "-54.9911, -140.957, 7.48174, 0.07", "-55.0819, -141.091, 7.48979, 0.44", "-55.3713, -141.567, 7.57147, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-2.26264, -42.9394, -11.2031, 0.44", "-3.51981, -44.9254, -10.8785, 0.44", "-4.11988, -45.8679, -10.7123, 0.66", "-4.66161, -46.75, -10.5614, 0.66", "-5.37439, -47.9477, -10.3723, 0.44", "-5.78228, -48.6554, -10.2698, 0.81", "-6.0898, -49.2156, -10.1952, 1.33", "-6.66601, -50.3386, -10.0483, 0.74", "-7.14827, -51.3528, -9.9226, 0.37", "-7.43846, -52.0325, -9.85101, 0.22", "-7.75848, -52.8487, -9.79495, 0.96", "-7.97848, -53.4533, -9.79196, 0.15", "-8.12911, -53.9357, -9.79531, 0.29", "-11.6552, -61.7585, -9.7462, 0.29", "-16.326, -68.8302, -8.17608, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-2.26264, -42.9394, -11.2031, 0.59", "-0.783426, -44.1523, -11.4021, 0.59", "0.132847, -44.9609, -11.4387, 0.29", "0.546852, -45.3263, -11.4552, 0.81", "1.52473, -46.1894, -11.4943, 0.52", "2.5866, -47.1266, -11.5368, 0.22", "3.24085, -47.704, -11.5629, 0.66", "3.95603, -48.5389, -11.4863, 1.18" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "18.1949, -33.9788, -56.4395, 0.07", "23.6388, -35.4278, -62.016, 0.07", "29.3566, -35.5602, -67.5026, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "18.1949, -33.9788, -56.4395, 0.81", "22.9597, -34.4941, -63.7099, 0.07", "27.758, -34.112, -70.9627, 0.07", "31.4127, -33.6605, -78.8499, 0.07", "34.8955, -34.5029, -86.7863, 0.07", "38.3988, -35.0279, -94.7411, 0.07", "42.7105, -35.6661, -102.28, 0.07", "47.2119, -35.8914, -109.73, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "166.037, -22.0048, 86.4618, 0.15", "167.133, -22.4097, 85.9731, 0.15", "167.767, -22.6321, 85.6883, 0.66", "168.331, -22.827, 85.426, 0.66", "169.876, -23.3542, 84.6936, 0.07", "171.047, -23.7619, 84.1024, 0.07", "171.893, -24.0575, 83.6703, 0.96", "173.583, -24.6498, 82.8268, 0.07", "174.157, -24.8231, 82.5312, 0.07", "174.499, -24.909, 82.3487, 0.22", "175.32, -25.073, 81.8613, 0.07", "176.068, -25.2217, 81.3883, 0.66", "176.336, -25.2749, 81.2068, 0.66", "177.913, -25.5973, 80.0416, 0.07", "178.549, -25.7357, 79.5377, 0.44", "179.501, -25.9678, 78.7442, 0.22", "180.099, -26.1417, 78.2326, 0.96", "181.238, -26.5738, 77.1903, 0.22", "182.124, -27.0127, 76.3998, 0.07", "183.04, -27.5701, 75.6208, 0.74", "183.386, -27.7949, 75.3637, 1.03", "184.023, -28.2197, 74.9603, 0.59", "185.141, -28.976, 74.336, 0.15", "186.532, -29.9435, 73.6768, 0.15", "186.914, -30.1893, 73.5009, 0.59", "188.395, -31.0584, 72.8452, 0.07", "188.863, -31.2845, 72.628, 0.74", "189.362, -31.4677, 72.3722, 0.96", "191.05, -31.908, 71.4416, 0.07", "192.382, -32.1649, 70.6423, 0.07", "192.902, -32.2414, 70.3096, 0.66", "194.042, -32.3172, 69.516, 0.22", "195.062, -32.3429, 68.7706, 0.66", "195.519, -32.316, 68.4121, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "166.037, -22.0048, 86.4618, 0.07", "167.281, -21.8419, 87.6127, 0.07", "168.086, -21.7457, 88.3445, 0.07", "168.607, -21.6883, 88.8006, 0.81", "169.19, -21.635, 89.315, 0.22", "169.813, -21.5864, 89.8588, 0.96", "171.298, -21.5081, 91.1277, 0.07", "171.703, -21.4898, 91.449, 0.07", "172.088, -21.4741, 91.7639, 0.29", "172.751, -21.4572, 92.3466, 1.11", "173.201, -21.4587, 92.7545, 1.55", "174.362, -21.4901, 93.7947, 0.22", "175.314, -21.5311, 94.6567, 0.88", "176.338, -21.5788, 95.6742, 0.22", "176.869, -21.6052, 96.2734, 0.22", "177.439, -21.6268, 97.0293, 0.66", "177.599, -21.6302, 97.2885, 1.33", "178.513, -21.6525, 99.0707, 0.22", "179.121, -21.694, 100.445, 0.22", "179.647, -21.7403, 101.756, 0.66", "180.181, -21.7552, 103.154, 0.88", "180.734, -21.7244, 104.639, 0.37", "181.065, -21.6987, 105.576, 0.37", "181.364, -21.6684, 106.474, 0.81", "181.557, -21.6497, 106.998, 1.11", "181.982, -21.6124, 107.992, 0.22", "182.347, -21.5864, 108.665, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-16.326, -68.8302, -8.17608, 0.07", "-21.6909, -78.0421, -7.20041, 0.07", "-26.7217, -87.4429, -6.36654, 0.07", "-32.2811, -96.4777, -4.85853, 0.07", "-38.1802, -105.418, -5.09151, 0.07", "-44.0824, -114.318, -5.93425, 0.07", "-51.2442, -122.333, -6.21922, 0.07", "-58.7383, -130.045, -6.68274, 0.07", "-65.6872, -138.186, -7.62546, 0.07", "-72.049, -146.819, -7.28558, 0.07", "-78.2821, -155.435, -5.8262, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-16.326, -68.8302, -8.17608, 0.81", "-18.7533, -77.8624, -5.85148, 0.07", "-22.4373, -86.2388, -2.70663, 0.07", "-25.5245, -95.1334, -0.612739, 0.07", "-29.067, -104.049, 0.311424, 0.07", "-32.8577, -112.688, 2.38439, 0.07", "-37.973, -120.838, 3.42086, 0.07", "-42.2518, -129.136, 5.97062, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "3.95603, -48.5389, -11.4863, 0.15", "3.36212, -50.6886, -11.1811, 0.15", "3.21888, -51.2071, -11.1075, 0.59", "2.97064, -52.1056, -10.98, 1.33", "2.70652, -53.0616, -10.8443, 0.22", "-1.27749, -64.917, -10.8136, 0.22", "-4.65426, -76.8326, -9.07096, 0.22", "-8.49588, -88.7278, -9.32358, 0.22", "-12.6403, -100.39, -7.40188, 0.22" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "3.95603, -48.5389, -11.4863, 0.44", "4.48392, -49.5725, -11.5561, 0.44", "4.99402, -50.592, -11.6087, 0.15", "5.36473, -51.3157, -11.6299, 0.15", "5.58302, -51.727, -11.6337, 0.88", "5.98709, -52.4893, -11.6338, 1.92", "7.27215, -54.9137, -11.6339, 0.22", "7.64333, -55.6329, -11.6249, 0.66", "8.00976, -56.3215, -11.619, 1.33", "8.3284, -56.9452, -11.6222, 2.06", "8.6807, -57.6417, -11.6121, 1.62", "13.1511, -66.0085, -9.85458, 1.62", "18.7971, -73.4168, -7.20386, 1.62" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "29.3566, -35.5602, -67.5026, 0.07", "34.5723, -35.8788, -73.4867, 0.07", "39.5892, -35.9814, -79.6454, 0.07", "44.243, -36.8674, -86.0223, 0.07", "48.9451, -39.5035, -91.8366, 0.07", "54.9215, -40.8461, -96.8899, 0.07", "61.2101, -42.2856, -101.518, 0.07", "67.6705, -44.4182, -105.596, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "29.3566, -35.5602, -67.5026, 0.07", "35.6475, -35.7859, -74.9792, 0.07", "42.9698, -35.1093, -81.4129, 0.07", "51.6681, -34.9563, -85.8674, 0.07", "60.7398, -33.639, -89.2432, 0.07", "69.4997, -31.8871, -93.1847, 0.07", "78.4422, -28.64, -95.3015, 0.07", "87.6462, -25.7688, -96.7759, 0.07", "96.6891, -23.1384, -99.3205, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "47.2119, -35.8914, -109.73, 0.07", "50.7183, -36.0948, -116.432, 0.07", "53.9547, -36.8636, -123.229, 0.07", "56.6901, -37.5728, -130.249, 0.07", "58.025, -38.7417, -137.605, 0.07", "60.1246, -40.5983, -144.628, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "47.2119, -35.8914, -109.73, 0.07", "51.2381, -36.1068, -117.41, 0.07", "56.2865, -37.4949, -124.324, 0.07", "61.8135, -39.4818, -130.7, 0.07", "67.2969, -40.4686, -137.348, 0.07", "72.3597, -40.484, -144.39, 0.07", "76.5775, -41.3652, -151.918, 0.07", "79.7781, -41.5745, -159.977, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "182.347, -21.5864, 108.665, 0.29", "183.438, -22.1794, 110.571, 0.29", "184.157, -22.4333, 111.594, 0.52", "184.733, -22.5353, 112.334, 0.52", "185.357, -22.6032, 113.137, 0.52", "185.787, -22.647, 113.692, 0.52", "186.15, -22.6795, 114.192, 0.52", "187.173, -22.7197, 115.549, 0.15", "188.187, -22.7726, 117.022, 0.15", "188.791, -22.7877, 117.859, 0.15", "189.257, -22.7987, 118.474, 0.59", "190.083, -22.8527, 119.558, 0.59", "190.536, -22.9038, 120.186, 0.59", "191.266, -23.0159, 121.319, 0.81", "191.864, -23.137, 122.22, 0.15", "192.515, -23.2701, 123.136, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "182.347, -21.5864, 108.665, 0.15", "182.596, -20.4667, 109.577, 0.15", "182.836, -19.4508, 110.445, 0.15", "182.959, -18.9504, 110.878, 0.52", "183.123, -18.3682, 111.376, 0.88", "183.246, -17.9357, 111.742, 1.11", "183.643, -16.5372, 112.912, 0.07", "183.873, -15.6777, 113.632, 0.07", "184.022, -15.0739, 114.117, 1.11", "184.301, -13.8828, 115.073, 0.15", "184.399, -13.419, 115.447, 0.15", "184.438, -13.214, 115.612, 0.29", "184.539, -12.5786, 116.113, 0.15", "184.653, -11.8446, 116.665, 0.74", "184.762, -11.1381, 117.235, 0.07", "184.837, -10.6634, 117.643, 0.07", "184.934, -10.1863, 118.087, 0.07", "185.062, -9.5913, 118.619, 0.74", "185.297, -8.6453, 119.487, 0.07", "185.538, -7.83949, 120.299, 0.07", "185.741, -7.2728, 120.928, 0.44", "186.146, -6.26968, 122.106, 0.07", "186.418, -5.61842, 122.889, 0.59", "186.7, -4.96489, 123.691, 1.11", "187.257, -3.7621, 125.164, 0.15", "187.565, -3.12796, 125.905, 0.15", "187.867, -2.52917, 126.589, 0.96", "188.364, -1.55136, 127.667, 0.07", "188.524, -1.22188, 128.015, 0.22", "188.791, -0.642432, 128.533, 0.07", "189.037, -0.0840728, 128.959, 0.22", "189.435, 0.797855, 129.611, 0.07", "189.613, 1.16033, 129.884, 0.22", "190.123, 2.09662, 130.609, 0.07", "190.501, 2.72646, 131.111, 0.96", "191.134, 3.7016, 131.899, 0.07", "191.661, 4.4278, 132.492, 0.07", "192.028, 4.90351, 132.88, 0.52", "192.338, 5.2926, 133.181, 0.29", "193.133, 6.27068, 133.874, 0.15", "193.611, 6.8707, 134.266, 0.59", "194.637, 8.07712, 134.999, 0.07", "195.277, 8.7969, 135.403, 0.07", "195.841, 9.40636, 135.727, 0.44", "197.222, 10.9021, 136.497, 0.07", "197.576, 11.2795, 136.681, 0.22", "198.799, 12.5471, 137.276, 0.07", "199.344, 13.079, 137.515, 0.29", "199.894, 13.5681, 137.743, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-12.6403, -100.39, -7.40188, 0.07", "-16.7425, -112.705, -6.6845, 0.07", "-21.9773, -124.468, -4.62328, 0.07", "-25.9144, -136.809, -3.53325, 0.07", "-28.7667, -149.418, -4.55452, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-12.6403, -100.39, -7.40188, 0.81", "-14.58, -106.536, -6.84699, 0.07", "-17.3783, -112.382, -6.55501, 0.07", "-20.6165, -118.016, -6.43894, 0.07", "-23.0139, -123.991, -7.13011, 0.07", "-23.6728, -130.4, -7.17512, 0.07", "-24.7502, -136.729, -6.51713, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "18.7971, -73.4168, -7.20386, 0.22", "24.483, -82.5734, -5.93333, 0.22", "29.5077, -92.1122, -4.80724, 0.22", "33.0861, -102.316, -4.54522, 0.22", "35.7892, -112.783, -4.39815, 0.22", "40.6413, -122.463, -4.12765, 0.22", "46.3211, -131.653, -3.12277, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "18.7971, -73.4168, -7.20386, 0.07", "23.3868, -81.02, -5.91479, 0.22", "27.8844, -88.3868, -3.39973, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "67.6705, -44.4182, -105.596, 0.07", "76.8995, -46.5619, -114.845, 0.07", "84.6034, -51.0094, -124.623, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "67.6705, -44.4182, -105.596, 0.07", "77.1873, -47.4073, -114.209, 0.07", "87.1548, -52.061, -121.439, 0.07", "98.4605, -56.1128, -126.85, 0.07", "108.286, -60.9505, -134.148, 0.07", "117.297, -66.5598, -141.905, 0.07", "126.042, -73.234, -149.063, 0.07", "135.548, -80.0356, -155.031, 0.07", "144.241, -88.0344, -160.677, 0.07", "152.054, -96.2891, -167.155, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "96.6891, -23.1384, -99.3205, 0.07", "102.681, -24.3932, -100.163, 0.07", "108.756, -25.5092, -100.38, 0.07", "114.663, -26.8909, -101.557, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "96.6891, -23.1384, -99.3205, 0.07", "103.295, -20.6617, -103.967, 0.07", "109.907, -18.6381, -108.833, 0.07", "117.221, -17.9436, -113.046, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "60.1246, -40.5983, -144.628, 0.07", "65.127, -41.1791, -154.174, 0.07", "69.5591, -40.9369, -164.009, 0.07", "73.6619, -39.6744, -173.901, 0.07", "76.8626, -37.2305, -183.888, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "60.1246, -40.5983, -144.628, 0.07", "60.9803, -43.8304, -153.841, 0.07", "62.6549, -47.7661, -162.646, 0.07", "64.3616, -50.5619, -171.886, 0.07", "66.1622, -53.5903, -181.033, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-24.7502, -136.729, -6.51713, 0.07", "-27.042, -144.868, -5.28444, 0.07", "-28.3774, -153.156, -3.76797, 0.07", "-30.2918, -160.882, -0.605362, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-24.7502, -136.729, -6.51713, 0.07", "-27.7124, -143.795, -7.78344, 0.07", "-30.3566, -150.855, -9.63145, 0.07", "-32.5432, -157.574, -12.8619, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "27.8844, -88.3868, -3.39973, 0.07", "31.2155, -94.4642, -1.64876, 0.07", "33.5787, -101.067, -0.358895, 0.07", "36.6876, -107.374, 0.862897, 0.07", "39.7767, -113.791, 1.10836, 0.07", "43.3288, -119.819, 2.56796, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "27.8844, -88.3868, -3.39973, 0.81", "32.6928, -97.868, -0.321166, 0.07", "37.3799, -107.584, 2.09633, 0.07", "41.2333, -117.842, 3.35824, 0.07", "44.1259, -128.426, 4.40498, 0.07", "48.2794, -138.576, 3.31705, 0.07", "54.2086, -147.872, 4.11327, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "117.221, -17.9436, -113.046, 0.07", "127.392, -15.4902, -118.565, 0.07", "137.383, -12.1811, -123.943, 0.07", "147.536, -8.11092, -128.404, 0.07", "156.893, -3.0697, -133.51, 0.07", "166.261, 3.44275, -136.404, 0.07", "174.839, 10.6992, -139.827, 0.07", "183.396, 18.2315, -142.638, 0.07", "191.317, 25.9462, -146.542, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "117.221, -17.9436, -113.046, 0.07", "124.301, -15.2551, -120.001, 0.07", "131.291, -13.5965, -127.376, 0.07", "139.199, -11.2948, -133.545, 0.07", "147.763, -8.44205, -138.476, 0.07", "155.488, -4.73259, -144.133, 0.07", "162.839, 0.309544, -149.171, 0.07", "170.505, 5.77145, -153.184, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "76.8626, -37.2305, -183.888, 0.07", "77.5793, -36.0036, -191.821, 0.07", "78.3022, -33.5901, -199.458, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "76.8626, -37.2305, -183.888, 0.07", "80.9808, -37.159, -190.066, 0.07", "85.6792, -38.1444, -195.734, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "66.1622, -53.5903, -181.033, 0.07", "67.5103, -56.5731, -189.536, 0.07", "69.3998, -58.9213, -198.139, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "66.1622, -53.5903, -181.033, 0.07", "68.1299, -57.6748, -189.604, 0.07", "68.5655, -63.5962, -197.228, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "43.3288, -119.819, 2.56796, 0.07", "47.601, -128.609, 4.34075, 0.07", "53.6568, -136.409, 5.65527, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "43.3288, -119.819, 2.56796, 0.07", "47.6383, -127.135, 3.247, 0.07", "50.8196, -134.691, 5.57163, 0.07", "55.4448, -140.952, 9.15987, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "54.2086, -147.872, 4.11327, 0.07", "58.6661, -157.994, 5.35468, 0.07", "64.0173, -167.64, 3.88271, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "54.2086, -147.872, 4.11327, 0.07", "57.5526, -155.407, 5.1052, 0.07", "60.1615, -163.196, 6.28251, 0.07", "61.4891, -171.371, 6.56733, 0.07", "61.3684, -179.613, 5.6736, 0.07", "59.6911, -187.567, 3.9228, 0.07", "58.8115, -195.679, 2.39686, 0.07", "58.0109, -203.409, -0.551456, 0.07", "55.9892, -210.51, -4.44179, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "53.6568, -136.409, 5.65527, 0.07", "59.5539, -145.135, 6.08416, 0.07", "64.9748, -154.16, 5.87747, 0.07", "70.8266, -162.85, 4.70174, 0.07", "77.563, -170.964, 4.11336, 0.07", "84.9118, -178.559, 4.6513, 0.07", "92.2026, -186.219, 4.93562, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "53.6568, -136.409, 5.65527, 0.07", "57.3846, -142.603, 7.03477, 0.07", "61.2985, -148.683, 8.4277, 0.07", "65.3518, -154.799, 9.00694, 0.07", "68.2266, -161.536, 9.44237, 0.07", "71.3112, -168.196, 9.42853, 0.07", "74.5701, -174.765, 9.07666, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "55.9892, -210.51, -4.44179, 0.07", "56.4758, -218.923, -6.00896, 0.07", "55.4406, -227.003, -8.75358, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "55.9892, -210.51, -4.44179, 0.07", "56.3729, -219.653, -5.92601, 0.07", "56.9618, -228.367, -9.06133, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "92.2026, -186.219, 4.93562, 0.07", "97.6656, -188.119, 2.06423, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "92.2026, -186.219, 4.93562, 0.07", "96.8121, -195.684, 6.65482, 0.07", "99.4752, -205.845, 8.3943, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "74.5701, -174.765, 9.07666, 0.07", "79.6744, -180.72, 10.717, 0.07", "84.6456, -186.898, 11.8009, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "74.5701, -174.765, 9.07666, 0.07", "75.0376, -183.024, 6.01704, 0.07", "76.4963, -190.433, 1.41927, 0.07", "77.5245, -198.394, -2.24737, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_94", "dend_94", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_69", "dend_69", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_55", "dend_55", "dend_53", "dend_53", "dend_52", "dend_52", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_72", "dend_72", "dend_83", "dend_82", "dend_82", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_LBC_f906bb679c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_94, id: dend_94, parent: soma_0
create dend_94
public dend_94
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_94
create dend_98
public dend_98
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_95
create dend_97
public dend_97
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_93, id: dend_93, parent: dend_45
create dend_93
public dend_93
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_66, id: dend_66, parent: dend_46
create dend_66
public dend_66
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_90, id: dend_90, parent: dend_66
create dend_90
public dend_90
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_47
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_92, id: dend_92, parent: dend_90
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_85, id: dend_85, parent: dend_67
create dend_85
public dend_85
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_89, id: dend_89, parent: dend_85
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_84, id: dend_84, parent: dend_68
create dend_84
public dend_84
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_75, id: dend_75, parent: dend_69
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_81, id: dend_81, parent: dend_77
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_100
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_94(0), soma_0(0.4999999039757195)
    connect dend_43(0), soma_0(0.4999999039757195)
    connect dend_30(0), soma_0(0.4999999039757195)
    connect dend_25(0), soma_0(0.4999999039757195)
    connect dend_18(0), soma_0(0.4999999039757195)
    connect dend_11(0), soma_0(0.4999999039757195)
    connect dend_0(0), soma_0(0.4999999039757195)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_93(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_66(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_90(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_92(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_85(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_89(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_84(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_75(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_81(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.18524, -4.81916, 0.0, 3.9822 ) }
    soma_0 { pt3dadd( -8.34327, -4.32353, 0.0, 6.87607 ) }
    soma_0 { pt3dadd( -7.5013, -3.82789, 0.0, 10.1189 ) }
    soma_0 { pt3dadd( -6.65933, -3.33226, 0.0, 12.2867 ) }
    soma_0 { pt3dadd( -5.81736, -2.83662, 0.0, 13.8376 ) }
    soma_0 { pt3dadd( -4.97539, -2.34099, 0.0, 14.8265 ) }
    soma_0 { pt3dadd( -4.13342, -1.84535, 0.0, 15.382 ) }
    soma_0 { pt3dadd( -3.29145, -1.34972, 0.0, 16.0094 ) }
    soma_0 { pt3dadd( -2.44948, -0.854082, 0.0, 16.562 ) }
    soma_0 { pt3dadd( -1.60751, -0.358447, 0.0, 16.8144 ) }
    soma_0 { pt3dadd( -0.765536, 0.137188, 0.0, 17.0145 ) }
    soma_0 { pt3dadd( 0.0764342, 0.632823, 0.0, 17.0541 ) }
    soma_0 { pt3dadd( 0.918405, 1.12846, 0.0, 16.8224 ) }
    soma_0 { pt3dadd( 1.76037, 1.62409, 0.0, 16.2232 ) }
    soma_0 { pt3dadd( 2.60235, 2.11973, 0.0, 15.3709 ) }
    soma_0 { pt3dadd( 3.44432, 2.61536, 0.0, 14.0738 ) }
    soma_0 { pt3dadd( 4.28629, 3.111, 0.0, 12.5479 ) }
    soma_0 { pt3dadd( 5.12826, 3.60663, 0.0, 11.1251 ) }
    soma_0 { pt3dadd( 5.97023, 4.10227, 0.0, 9.76121 ) }
    soma_0 { pt3dadd( 6.8122, 4.5979, 0.0, 7.58188 ) }
    soma_0 { pt3dadd( 7.65417, 5.09354, 0.0, 4.50057 ) }
    // Section: dend_94, id: dend_94, parent: soma_0 (entry count 21/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -4.45607, 3.26886, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -4.45607, 3.26886, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -5.04783, 3.45058, -15.4, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.93607, -6.92964, -8.99, 1.77 ) }
    dend_43 { pt3dadd( -4.93607, -6.92964, -8.99, 1.62 ) }
    dend_43 { pt3dadd( -5.50802, -7.47136, -9.15341, 1.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.77393, 3.15186, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 8.77393, 3.15186, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 9.55214, 3.22134, 4.13786, 0.81 ) }
    dend_30 { pt3dadd( 10.3125, 3.24511, 4.02193, 0.74 ) }
    dend_30 { pt3dadd( 11.1363, 3.27086, 3.89631, 0.66 ) }
    dend_30 { pt3dadd( 11.9663, 3.2968, 3.76976, 0.66 ) }
    dend_30 { pt3dadd( 12.7296, 3.32065, 3.65337, 1.25 ) }
    dend_30 { pt3dadd( 13.5136, 3.32361, 3.52252, 1.92 ) }
    dend_30 { pt3dadd( 14.0369, 3.28951, 3.41629, 1.77 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.38393, 6.75936, 4.97, 0.74 ) }
    dend_25 { pt3dadd( 5.08111, 7.06036, 5.31952, 0.74 ) }
    dend_25 { pt3dadd( 4.60932, 7.46381, 5.74416, 0.74 ) }
    dend_25 { pt3dadd( 3.82596, 8.05971, 6.38964, 0.74 ) }
    dend_25 { pt3dadd( 2.96727, 8.67902, 7.10127, 0.59 ) }
    dend_25 { pt3dadd( 2.031, 9.35709, 7.90039, 0.74 ) }
    dend_25 { pt3dadd( 1.20589, 9.98427, 8.61901, 0.96 ) }
    dend_25 { pt3dadd( 0.241876, 10.7495, 9.44217, 0.52 ) }
    dend_25 { pt3dadd( -0.45768, 11.3484, 10.0627, 0.22 ) }
    dend_25 { pt3dadd( -1.00395, 11.894, 10.6309, 0.22 ) }
    dend_25 { pt3dadd( -1.37633, 12.3754, 11.1239, 0.66 ) }
    dend_25 { pt3dadd( -1.63162, 12.8152, 11.5862, 0.66 ) }
    dend_25 { pt3dadd( -2.0329, 13.6884, 12.5266, 0.29 ) }
    dend_25 { pt3dadd( -2.23128, 14.303, 13.1577, 0.29 ) }
    dend_25 { pt3dadd( -2.43095, 15.139, 13.9636, 1.03 ) }
    dend_25 { pt3dadd( -2.56172, 15.771, 14.5561, 2.51 ) }
    dend_25 { pt3dadd( -2.75063, 16.6582, 15.4263, 3.32 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.87607, 3.60036, 6.38, 0.52 ) }
    dend_18 { pt3dadd( -8.16449, 3.57447, 6.2778, 0.52 ) }
    dend_18 { pt3dadd( -8.70546, 3.53621, 6.06686, 0.52 ) }
    dend_18 { pt3dadd( -9.04143, 3.51569, 5.93871, 0.74 ) }
    dend_18 { pt3dadd( -9.72262, 3.50954, 5.69247, 1.25 ) }
    dend_18 { pt3dadd( -10.283, 3.54565, 5.50429, 1.33 ) }
    dend_18 { pt3dadd( -11.1029, 3.65858, 5.25009, 0.74 ) }
    dend_18 { pt3dadd( -11.8703, 3.83438, 5.02998, 0.59 ) }
    dend_18 { pt3dadd( -12.4886, 4.03898, 4.86457, 0.29 ) }
    dend_18 { pt3dadd( -13.0935, 4.31331, 4.71482, 0.44 ) }
    dend_18 { pt3dadd( -13.7687, 4.71605, 4.57987, 0.59 ) }
    dend_18 { pt3dadd( -14.3279, 5.10604, 4.48831, 0.44 ) }
    dend_18 { pt3dadd( -14.6435, 5.34265, 4.44893, 0.81 ) }
    dend_18 { pt3dadd( -15.062, 5.65303, 4.41228, 1.62 ) }
    dend_18 { pt3dadd( -15.6171, 6.01396, 4.35708, 1.77 ) }
    dend_18 { pt3dadd( -16.5432, 6.43836, 4.2532, 0.37 ) }
    dend_18 { pt3dadd( -16.9373, 6.5433, 4.21188, 0.37 ) }
    dend_18 { pt3dadd( -17.328, 6.5959, 4.17162, 0.52 ) }
    dend_18 { pt3dadd( -17.8013, 6.61927, 4.12894, 0.59 ) }
    dend_18 { pt3dadd( -18.4527, 6.62725, 4.08374, 0.22 ) }
    dend_18 { pt3dadd( -18.87, 6.64606, 4.03687, 0.29 ) }
    dend_18 { pt3dadd( -19.3053, 6.6849, 3.98015, 0.74 ) }
    dend_18 { pt3dadd( -19.9065, 6.76958, 3.90554, 1.77 ) }
    dend_18 { pt3dadd( -20.5077, 6.89039, 3.83653, 2.8 ) }
    dend_18 { pt3dadd( -21.4066, 7.11705, 3.74732, 3.17 ) }
    dend_18 { pt3dadd( -22.6866, 7.4872, 3.64686, 0.44 ) }
    dend_18 { pt3dadd( -23.5643, 7.76951, 3.59836, 0.29 ) }
    dend_18 { pt3dadd( -24.7815, 8.18703, 3.55661, 0.37 ) }
    dend_18 { pt3dadd( -25.5302, 8.46893, 3.57161, 0.37 ) }
    dend_18 { pt3dadd( -26.1783, 8.73044, 3.62205, 0.52 ) }
    dend_18 { pt3dadd( -26.5676, 8.89835, 3.67854, 1.03 ) }
    dend_18 { pt3dadd( -27.291, 9.22208, 3.83854, 1.84 ) }
    dend_18 { pt3dadd( -27.861, 9.48189, 3.97584, 1.4 ) }
    dend_18 { pt3dadd( -28.6481, 9.81853, 4.16906, 0.22 ) }
    dend_18 { pt3dadd( -29.3034, 10.0373, 4.31849, 0.59 ) }
    dend_18 { pt3dadd( -29.5151, 10.0939, 4.36317, 0.59 ) }
    dend_18 { pt3dadd( -30.4687, 10.3099, 4.54675, 0.44 ) }
    dend_18 { pt3dadd( -30.9317, 10.3908, 4.63912, 1.47 ) }
    dend_18 { pt3dadd( -31.4535, 10.4643, 4.74763, 2.51 ) }
    dend_18 { pt3dadd( -32.2234, 10.5481, 4.89701, 2.36 ) }
    dend_18 { pt3dadd( -33.5883, 10.6857, 5.17372, 0.15 ) }
    dend_18 { pt3dadd( -33.8137, 10.7014, 5.22263, 0.22 ) }
    dend_18 { pt3dadd( -34.5152, 10.7229, 5.3832, 0.22 ) }
    dend_18 { pt3dadd( -34.9702, 10.7118, 5.47534, 0.22 ) }
    dend_18 { pt3dadd( -35.8235, 10.6509, 5.63222, 0.22 ) }
    dend_18 { pt3dadd( -36.0777, 10.624, 5.67097, 0.96 ) }
    dend_18 { pt3dadd( -36.6557, 10.5446, 5.74081, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -37.376, 10.4608, 5.81189, 2.58 ) }
    dend_18 { pt3dadd( -38.8962, 10.3524, 5.91654, 0.22 ) }
    dend_18 { pt3dadd( -39.337, 10.3371, 5.95039, 0.81 ) }
    dend_18 { pt3dadd( -39.8508, 10.3399, 5.99231, 1.77 ) }
    dend_18 { pt3dadd( -40.2286, 10.3585, 6.02261, 1.99 ) }
    dend_18 { pt3dadd( -41.2567, 10.4591, 6.10033, 0.44 ) }
    dend_18 { pt3dadd( -42.5015, 10.6056, 6.18515, 0.29 ) }
    dend_18 { pt3dadd( -42.9091, 10.6591, 6.21353, 0.29 ) }
    dend_18 { pt3dadd( -43.2802, 10.7043, 6.23639, 0.81 ) }
    dend_18 { pt3dadd( -43.8021, 10.7622, 6.27127, 1.99 ) }
    dend_18 { pt3dadd( -44.4246, 10.8175, 6.31483, 2.06 ) }
    dend_18 { pt3dadd( -45.6723, 10.8968, 6.40199, 0.15 ) }
    dend_18 { pt3dadd( -46.0203, 10.9047, 6.42514, 0.22 ) }
    dend_18 { pt3dadd( -46.3651, 10.9017, 6.445, 0.15 ) }
    dend_18 { pt3dadd( -46.5789, 10.8994, 6.45942, 0.37 ) }
    dend_18 { pt3dadd( -46.8919, 10.899, 6.48236, 0.66 ) }
    dend_18 { pt3dadd( -47.5131, 10.9356, 6.53553, 0.37 ) }
    dend_18 { pt3dadd( -48.0931, 10.9972, 6.56509, 0.22 ) }
    dend_18 { pt3dadd( -48.55, 11.0469, 6.5753, 0.88 ) }
    dend_18 { pt3dadd( -49.194, 11.1129, 6.58025, 1.99 ) }
    dend_18 { pt3dadd( -49.8587, 11.1777, 6.57708, 1.4 ) }
    dend_18 { pt3dadd( -50.898, 11.2704, 6.55832, 0.22 ) }
    dend_18 { pt3dadd( -51.6815, 11.3471, 6.53759, 0.22 ) }
    dend_18 { pt3dadd( -51.9439, 11.3811, 6.5289, 0.37 ) }
    dend_18 { pt3dadd( -52.2915, 11.4355, 6.51721, 0.81 ) }
    dend_18 { pt3dadd( -52.5239, 11.4782, 6.51504, 1.11 ) }
    dend_18 { pt3dadd( -53.3694, 11.6747, 6.55492, 0.59 ) }
    dend_18 { pt3dadd( -53.901, 11.8201, 6.62005, 0.15 ) }
    dend_18 { pt3dadd( -54.3093, 11.9528, 6.71317, 0.66 ) }
    dend_18 { pt3dadd( -54.6914, 12.084, 6.81225, 0.66 ) }
    dend_18 { pt3dadd( -55.5101, 12.3925, 7.03609, 0.15 ) }
    dend_18 { pt3dadd( -56.0164, 12.5921, 7.1761, 0.88 ) }
    dend_18 { pt3dadd( -56.6887, 12.8626, 7.36258, 1.7 ) }
    dend_18 { pt3dadd( -57.9867, 13.3551, 7.69354, 0.22 ) }
    dend_18 { pt3dadd( -58.4633, 13.5277, 7.80937, 0.29 ) }
    dend_18 { pt3dadd( -59.1332, 13.7661, 7.95647, 0.29 ) }
    dend_18 { pt3dadd( -59.5906, 13.9204, 8.03946, 0.66 ) }
    dend_18 { pt3dadd( -59.9523, 14.0326, 8.09488, 0.81 ) }
    dend_18 { pt3dadd( -60.6721, 14.2148, 8.20943, 0.29 ) }
    dend_18 { pt3dadd( -61.4744, 14.3488, 8.37433, 0.22 ) }
    dend_18 { pt3dadd( -61.8017, 14.3782, 8.45981, 1.03 ) }
    dend_18 { pt3dadd( -62.3997, 14.3897, 8.64003, 1.92 ) }
    dend_18 { pt3dadd( -62.8574, 14.3797, 8.79906, 1.92 ) }
    dend_18 { pt3dadd( -63.837, 14.3235, 9.17188, 0.37 ) }
    dend_18 { pt3dadd( -64.7306, 14.2318, 9.52997, 0.29 ) }
    dend_18 { pt3dadd( -65.1397, 14.1691, 9.68735, 0.22 ) }
    dend_18 { pt3dadd( -65.5682, 14.0885, 9.84978, 0.59 ) }
    dend_18 { pt3dadd( -66.1205, 13.9704, 10.0466, 0.22 ) }
    dend_18 { pt3dadd( -66.3084, 13.9261, 10.1043, 0.44 ) }
    dend_18 { pt3dadd( -66.8293, 13.7921, 10.2354, 0.96 ) }
    dend_18 { pt3dadd( -67.5711, 13.6057, 10.3863, 0.22 ) }
    dend_18 { pt3dadd( -68.2984, 13.4477, 10.5288, 0.22 ) }
    dend_18 { pt3dadd( -68.3987, 13.4256, 10.5467, 0.52 ) }
    dend_18 { pt3dadd( -68.6996, 13.3619, 10.5928, 1.03 ) }
    dend_18 { pt3dadd( -69.1668, 13.2781, 10.6642, 1.62 ) }
    dend_18 { pt3dadd( -69.7342, 13.2067, 10.7494, 1.47 ) }
    dend_18 { pt3dadd( -70.6675, 13.1552, 10.8777, 0.22 ) }
    dend_18 { pt3dadd( -71.0984, 13.1617, 10.9193, 0.22 ) }
    dend_18 { pt3dadd( -71.4558, 13.1931, 10.9502, 0.15 ) }
    dend_18 { pt3dadd( -71.7025, 13.2402, 10.9681, 0.15 ) }
    dend_18 { pt3dadd( -71.9071, 13.3, 11.004, 0.29 ) }
    dend_18 { pt3dadd( -72.2076, 13.4125, 11.0786, 0.29 ) }
    dend_18 { pt3dadd( -72.5782, 13.5688, 11.194, 0.22 ) }
    dend_18 { pt3dadd( -73.0233, 13.7607, 11.348, 1.25 ) }
    dend_18 { pt3dadd( -73.5286, 13.9661, 11.5233, 1.99 ) }
    dend_18 { pt3dadd( -74.8017, 14.434, 11.9501, 0.29 ) }
    dend_18 { pt3dadd( -75.5846, 14.7037, 12.2042, 0.22 ) }
    dend_18 { pt3dadd( -75.9815, 14.8371, 12.3274, 0.66 ) }
    dend_18 { pt3dadd( -76.4325, 14.9909, 12.4605, 1.62 ) }
    dend_18 { pt3dadd( -77.2091, 15.2945, 12.6543, 0.52 ) }
    dend_18 { pt3dadd( -78.0274, 15.6663, 12.8313, 0.22 ) }
    dend_18 { pt3dadd( -78.2874, 15.8038, 12.8729, 0.59 ) }
    dend_18 { pt3dadd( -78.717, 16.0552, 12.9518, 1.25 ) }
    dend_18 { pt3dadd( -78.9342, 16.1925, 12.9976, 1.25 ) }
    dend_18 { pt3dadd( -79.7833, 16.7574, 13.2446, 0.15 ) }
    dend_18 { pt3dadd( -80.4997, 17.249, 13.535, 0.15 ) }
    dend_18 { pt3dadd( -80.6924, 17.3813, 13.6338, 0.66 ) }
    dend_18 { pt3dadd( -81.0771, 17.6337, 13.8653, 1.55 ) }
    dend_18 { pt3dadd( -81.4292, 17.8535, 14.0979, 0.96 ) }
    dend_18 { pt3dadd( -82.2307, 18.3322, 14.6723, 0.15 ) }
    dend_18 { pt3dadd( -82.7987, 18.6715, 15.1201, 0.15 ) }
    dend_18 { pt3dadd( -83.1298, 18.8957, 15.4013, 0.44 ) }
    dend_18 { pt3dadd( -83.5692, 19.223, 15.7866, 0.88 ) }
    dend_18 { pt3dadd( -83.8223, 19.4322, 16.004, 0.44 ) }
    dend_18 { pt3dadd( -84.241, 19.826, 16.3218, 0.15 ) }
    dend_18 { pt3dadd( -84.8118, 20.4372, 16.6801, 0.74 ) }
    dend_18 { pt3dadd( -85.3279, 21.0329, 16.8642, 0.22 ) }
    dend_18 { pt3dadd( -85.5148, 21.257, 16.8954, 1.03 ) }
    dend_18 { pt3dadd( -85.8409, 21.6576, 16.9024, 1.99 ) }
    dend_18 { pt3dadd( -86.6659, 22.6944, 16.8346, 0.15 ) }
    dend_18 { pt3dadd( -87.103, 23.2428, 16.7517, 1.25 ) }
    dend_18 { pt3dadd( -87.9721, 24.3177, 16.5052, 0.07 ) }
    dend_18 { pt3dadd( -88.4068, 24.8426, 16.355, 0.07 ) }
    dend_18 { pt3dadd( -88.8346, 25.3599, 16.2025, 0.88 ) }
    dend_18 { pt3dadd( -89.1653, 25.7652, 16.0795, 1.62 ) }
    dend_18 { pt3dadd( -89.3821, 26.0416, 15.9873, 1.62 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.12393, -6.21789, 1.7, 0.88 ) }
    dend_11 { pt3dadd( 5.15491, -6.78169, 1.81895, 0.74 ) }
    dend_11 { pt3dadd( 5.15915, -7.30458, 1.94107, 0.88 ) }
    dend_11 { pt3dadd( 5.15084, -7.89011, 2.08043, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( 5.13862, -8.79926, 2.29063, 0.88 ) }
    dend_11 { pt3dadd( 5.12775, -9.89022, 2.52819, 0.74 ) }
    dend_11 { pt3dadd( 5.12127, -10.9234, 2.7411, 0.66 ) }
    dend_11 { pt3dadd( 5.11793, -11.8626, 2.91392, 0.96 ) }
    dend_11 { pt3dadd( 5.12731, -12.7753, 3.0638, 1.18 ) }
    dend_11 { pt3dadd( 5.17042, -13.6296, 3.19198, 1.25 ) }
    dend_11 { pt3dadd( 5.33233, -14.7485, 3.33468, 0.81 ) }
    dend_11 { pt3dadd( 5.54715, -15.5806, 3.41453, 0.74 ) }
    dend_11 { pt3dadd( 5.89645, -16.6354, 3.49625, 0.52 ) }
    dend_11 { pt3dadd( 6.11185, -17.1949, 3.5372, 1.4 ) }
    dend_11 { pt3dadd( 6.44712, -18.0034, 3.61282, 2.43 ) }
    dend_11 { pt3dadd( 6.92746, -19.1408, 3.74511, 3.1 ) }
    dend_11 { pt3dadd( 7.55903, -20.6185, 3.96074, 0.22 ) }
    dend_11 { pt3dadd( 7.77154, -21.1802, 4.05428, 0.22 ) }
    dend_11 { pt3dadd( 7.88968, -21.5725, 4.13444, 0.74 ) }
    dend_11 { pt3dadd( 8.01536, -22.1271, 4.25157, 1.25 ) }
    dend_11 { pt3dadd( 8.08548, -22.5494, 4.3449, 1.7 ) }
    dend_11 { pt3dadd( 8.18782, -23.3757, 4.54779, 1.03 ) }
    dend_11 { pt3dadd( 8.37761, -24.4576, 4.84296, 0.52 ) }
    dend_11 { pt3dadd( 8.59349, -25.2548, 5.05183, 0.22 ) }
    dend_11 { pt3dadd( 8.71341, -25.5934, 5.13254, 0.22 ) }
    dend_11 { pt3dadd( 8.87205, -25.9402, 5.21488, 0.22 ) }
    dend_11 { pt3dadd( 8.96616, -26.1124, 5.25603, 0.22 ) }
    dend_11 { pt3dadd( 9.19814, -26.5288, 5.33968, 0.22 ) }
    dend_11 { pt3dadd( 9.47429, -27.0624, 5.42383, 0.81 ) }
    dend_11 { pt3dadd( 9.6876, -27.5751, 5.4796, 1.7 ) }
    dend_11 { pt3dadd( 10.0466, -28.5186, 5.54969, 2.88 ) }
    dend_11 { pt3dadd( 10.3779, -29.4579, 5.59592, 2.06 ) }
    dend_11 { pt3dadd( 10.7922, -30.725, 5.65426, 1.47 ) }
    dend_11 { pt3dadd( 11.0916, -31.7124, 5.70456, 1.33 ) }
    dend_11 { pt3dadd( 11.4367, -32.9154, 5.76435, 0.22 ) }
    dend_11 { pt3dadd( 11.6289, -33.6389, 5.80567, 0.15 ) }
    dend_11 { pt3dadd( 11.7863, -34.2739, 5.8438, 0.29 ) }
    dend_11 { pt3dadd( 11.991, -35.0834, 5.9049, 0.29 ) }
    dend_11 { pt3dadd( 12.175, -35.7484, 5.96499, 1.03 ) }
    dend_11 { pt3dadd( 12.311, -36.2444, 6.01422, 1.99 ) }
    dend_11 { pt3dadd( 12.5239, -37.0893, 6.09953, 2.21 ) }
    dend_11 { pt3dadd( 12.7273, -38.0713, 6.21448, 0.37 ) }
    dend_11 { pt3dadd( 12.88, -38.8675, 6.30392, 0.15 ) }
    dend_11 { pt3dadd( 12.9354, -39.1914, 6.33537, 0.15 ) }
    dend_11 { pt3dadd( 13.0419, -39.8745, 6.4008, 0.22 ) }
    dend_11 { pt3dadd( 13.1525, -40.5964, 6.47663, 0.37 ) }
    dend_11 { pt3dadd( 13.2505, -41.2472, 6.56205, 0.96 ) }
    dend_11 { pt3dadd( 13.3214, -41.8137, 6.64391, 1.7 ) }
    dend_11 { pt3dadd( 13.385, -42.3861, 6.731, 1.99 ) }
    dend_11 { pt3dadd( 13.4732, -43.1124, 6.84075, 1.7 ) }
    dend_11 { pt3dadd( 13.7152, -44.7212, 7.06258, 0.37 ) }
    dend_11 { pt3dadd( 13.8548, -45.5912, 7.17207, 0.22 ) }
    dend_11 { pt3dadd( 13.953, -46.1319, 7.22658, 0.22 ) }
    dend_11 { pt3dadd( 14.0606, -46.6458, 7.29395, 0.22 ) }
    dend_11 { pt3dadd( 14.2096, -47.2675, 7.40562, 0.37 ) }
    dend_11 { pt3dadd( 14.3209, -47.7086, 7.50445, 1.03 ) }
    dend_11 { pt3dadd( 14.4458, -48.1745, 7.62824, 1.77 ) }
    dend_11 { pt3dadd( 14.6626, -48.9596, 7.83132, 0.88 ) }
    dend_11 { pt3dadd( 14.9345, -49.9202, 8.10968, 0.29 ) }
    dend_11 { pt3dadd( 15.1286, -50.5989, 8.32814, 0.52 ) }
    dend_11 { pt3dadd( 15.2679, -51.0759, 8.4979, 1.03 ) }
    dend_11 { pt3dadd( 15.4971, -51.8577, 8.80504, 1.55 ) }
    dend_11 { pt3dadd( 15.7739, -52.8405, 9.20603, 0.88 ) }
    dend_11 { pt3dadd( 15.9857, -53.6511, 9.55572, 0.22 ) }
    dend_11 { pt3dadd( 16.0817, -54.0459, 9.7166, 0.22 ) }
    dend_11 { pt3dadd( 16.1354, -54.2866, 9.8112, 0.22 ) }
    dend_11 { pt3dadd( 16.2301, -54.7721, 10.0117, 0.29 ) }
    dend_11 { pt3dadd( 16.3377, -55.4288, 10.2798, 0.52 ) }
    dend_11 { pt3dadd( 16.3794, -55.7661, 10.4075, 1.18 ) }
    dend_11 { pt3dadd( 16.4409, -56.4212, 10.6132, 1.33 ) }
    dend_11 { pt3dadd( 16.5131, -57.2508, 10.8384, 0.59 ) }
    dend_11 { pt3dadd( 16.5955, -58.0015, 11.0138, 0.22 ) }
    dend_11 { pt3dadd( 16.6628, -58.5625, 11.1325, 0.22 ) }
    dend_11 { pt3dadd( 16.7188, -58.9603, 11.2124, 0.59 ) }
    dend_11 { pt3dadd( 16.8381, -59.7092, 11.3547, 0.29 ) }
    dend_11 { pt3dadd( 16.9714, -60.3998, 11.4927, 1.18 ) }
    dend_11 { pt3dadd( 17.1477, -61.1644, 11.6376, 2.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 73/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.70607, -8.89914, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.70607, -8.89914, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.5577, -9.4993, 3.08416, 0.66 ) }
    dend_0 { pt3dadd( -1.39102, -10.3696, 3.04505, 0.88 ) }
    dend_0 { pt3dadd( -1.27176, -11.2618, 2.98493, 1.03 ) }
    dend_0 { pt3dadd( -1.1611, -12.4884, 2.8908, 0.81 ) }
    dend_0 { pt3dadd( -1.1101, -13.6311, 2.80192, 0.96 ) }
    dend_0 { pt3dadd( -1.14997, -14.5167, 2.73162, 1.33 ) }
    dend_0 { pt3dadd( -1.34663, -15.6003, 2.66814, 1.77 ) }
    dend_0 { pt3dadd( -1.66878, -16.5472, 2.65214, 2.21 ) }
    dend_0 { pt3dadd( -1.94904, -17.1177, 2.67555, 2.58 ) }
    dend_0 { pt3dadd( -2.7117, -18.3076, 2.82814, 2.73 ) }
    dend_0 { pt3dadd( -3.59542, -19.4292, 3.10043, 0.81 ) }
    dend_0 { pt3dadd( -4.63466, -20.6194, 3.47105, 0.52 ) }
    dend_0 { pt3dadd( -5.40434, -21.4146, 3.79685, 0.59 ) }
    dend_0 { pt3dadd( -5.91164, -21.8831, 4.02801, 1.25 ) }
    dend_0 { pt3dadd( -6.63159, -22.4738, 4.38301, 2.73 ) }
    dend_0 { pt3dadd( -7.4196, -23.0075, 4.82176, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 91/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.65417, 5.09354, 0.0, 0.686328 ) }
    axon_0 { pt3dadd( 20.5808, 12.7029, 0.0, 0.686328 ) }
    axon_0 { pt3dadd( 33.5074, 20.3123, 0.0, 0.686328 ) }
    // Section: dend_98, id: dend_98, parent: dend_94 (entry count 94/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -5.04783, 3.45058, -15.4, 0.74 ) }
    dend_98 { pt3dadd( -6.48323, 3.42218, -15.5686, 0.74 ) }
    dend_98 { pt3dadd( -7.16093, 3.47837, -15.7485, 0.81 ) }
    dend_98 { pt3dadd( -8.06895, 3.61178, -16.1336, 0.74 ) }
    dend_98 { pt3dadd( -8.98577, 3.74649, -16.5224, 0.96 ) }
    dend_98 { pt3dadd( -9.96883, 3.89093, -16.9393, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_98 { pt3dadd( -11.1526, 4.06488, -17.4414, 1.03 ) }
    dend_98 { pt3dadd( -12.1306, 4.34506, -17.957, 1.47 ) }
    dend_98 { pt3dadd( -13.2425, 4.7626, -18.6606, 2.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 3/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -5.04783, 3.45058, -15.4, 0.37 ) }
    dend_95 { pt3dadd( -4.72717, 3.98008, -15.3852, 0.37 ) }
    dend_95 { pt3dadd( -4.58653, 4.50998, -15.3724, 0.22 ) }
    dend_95 { pt3dadd( -4.54716, 4.94406, -15.3702, 0.22 ) }
    dend_95 { pt3dadd( -4.52167, 5.48407, -15.3945, 0.66 ) }
    dend_95 { pt3dadd( -4.51403, 5.63505, -15.4126, 0.66 ) }
    dend_95 { pt3dadd( -4.48188, 6.22492, -15.5064, 0.96 ) }
    dend_95 { pt3dadd( -4.47582, 6.77272, -15.6328, 0.52 ) }
    dend_95 { pt3dadd( -4.46718, 7.29635, -15.7906, 0.81 ) }
    dend_95 { pt3dadd( -4.42482, 7.72177, -15.9577, 0.88 ) }
    dend_95 { pt3dadd( -4.26475, 8.29775, -16.2457, 0.81 ) }
    dend_95 { pt3dadd( -4.08142, 8.66547, -16.4744, 0.22 ) }
    dend_95 { pt3dadd( -3.87528, 8.95774, -16.6877, 0.29 ) }
    dend_95 { pt3dadd( -3.62607, 9.27815, -16.9499, 0.37 ) }
    dend_95 { pt3dadd( -3.42208, 9.59606, -17.2119, 0.15 ) }
    dend_95 { pt3dadd( -3.35513, 9.84255, -17.3879, 0.22 ) }
    dend_95 { pt3dadd( -3.35274, 10.1508, -17.5841, 0.22 ) }
    dend_95 { pt3dadd( -3.37724, 10.6022, -17.8455, 0.52 ) }
    dend_95 { pt3dadd( -3.38886, 11.0553, -18.077, 0.37 ) }
    dend_95 { pt3dadd( -3.38304, 11.5158, -18.2993, 0.44 ) }
    dend_95 { pt3dadd( -3.34315, 12.2546, -18.6334, 0.37 ) }
    dend_95 { pt3dadd( -3.30748, 12.5601, -18.7717, 0.37 ) }
    dend_95 { pt3dadd( -3.20025, 13.2082, -19.0689, 0.52 ) }
    dend_95 { pt3dadd( -3.08024, 13.8318, -19.3458, 0.59 ) }
    dend_95 { pt3dadd( -2.92671, 14.6473, -19.6807, 0.44 ) }
    dend_95 { pt3dadd( -2.85141, 15.2295, -19.8963, 0.29 ) }
    dend_95 { pt3dadd( -2.83263, 15.7664, -20.0599, 0.22 ) }
    dend_95 { pt3dadd( -2.89221, 16.1873, -20.166, 0.88 ) }
    dend_95 { pt3dadd( -3.03749, 16.6797, -20.2753, 0.29 ) }
    dend_95 { pt3dadd( -3.24386, 17.1225, -20.3541, 0.66 ) }
    dend_95 { pt3dadd( -3.66291, 17.7622, -20.4098, 0.22 ) }
    dend_95 { pt3dadd( -3.87852, 18.0245, -20.4144, 0.22 ) }
    dend_95 { pt3dadd( -4.20107, 18.3689, -20.3831, 0.59 ) }
    dend_95 { pt3dadd( -4.34945, 23.9828, -21.0939, 0.59 ) }
    dend_95 { pt3dadd( -3.87944, 29.3118, -22.9345, 0.59 ) }
    dend_95 { pt3dadd( -2.71661, 34.7747, -23.7661, 0.59 ) }
    dend_95 { pt3dadd( -1.01502, 39.879, -25.4896, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.50802, -7.47136, -9.15341, 1.03 ) }
    dend_45 { pt3dadd( -6.2466, -8.91304, -9.11148, 1.03 ) }
    dend_45 { pt3dadd( -6.68262, -9.91912, -9.05164, 0.88 ) }
    dend_45 { pt3dadd( -7.13165, -10.9552, -8.99002, 1.33 ) }
    dend_45 { pt3dadd( -7.54154, -11.901, -8.93377, 1.92 ) }
    dend_45 { pt3dadd( -8.02648, -13.0199, -8.86722, 2.29 ) }
    dend_45 { pt3dadd( -8.70739, -14.5911, -8.77378, 1.7 ) }
    dend_45 { pt3dadd( -9.12465, -15.8065, -8.70282, 1.47 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.50802, -7.47136, -9.15341, 0.37 ) }
    dend_44 { pt3dadd( -4.82158, -8.57231, -9.02438, 0.37 ) }
    dend_44 { pt3dadd( -4.38244, -9.18075, -8.95781, 0.59 ) }
    dend_44 { pt3dadd( -4.0223, -9.60744, -8.93367, 0.52 ) }
    dend_44 { pt3dadd( -3.26443, -10.3441, -8.93918, 0.37 ) }
    dend_44 { pt3dadd( -2.35738, -10.9842, -9.00486, 0.37 ) }
    dend_44 { pt3dadd( -1.63299, -11.413, -9.10297, 0.37 ) }
    dend_44 { pt3dadd( -1.20761, -11.6078, -9.18769, 0.88 ) }
    dend_44 { pt3dadd( -0.343665, -11.9554, -9.38813, 1.4 ) }
    dend_44 { pt3dadd( 0.598037, -12.2999, -9.61744, 1.18 ) }
    dend_44 { pt3dadd( 2.50232, -13.0205, -10.1008, 0.37 ) }
    dend_44 { pt3dadd( 4.04183, -13.6849, -10.5038, 0.22 ) }
    dend_44 { pt3dadd( 4.73893, -14.0414, -10.6764, 0.81 ) }
    dend_44 { pt3dadd( 5.62525, -14.5823, -10.8706, 1.92 ) }
    dend_44 { pt3dadd( 7.48061, -16.0092, -11.2402, 0.59 ) }
    dend_44 { pt3dadd( 8.41335, -16.9453, -11.4285, 0.66 ) }
    dend_44 { pt3dadd( 8.9563, -17.6856, -11.5414, 0.52 ) }
    dend_44 { pt3dadd( 9.50887, -18.6993, -11.6795, 0.59 ) }
    dend_44 { pt3dadd( 9.85212, -19.5389, -11.7947, 0.44 ) }
    dend_44 { pt3dadd( 10.2187, -20.6789, -11.9865, 0.44 ) }
    dend_44 { pt3dadd( 10.4242, -21.4176, -12.1205, 0.44 ) }
    dend_44 { pt3dadd( 10.6367, -22.0623, -12.2608, 0.66 ) }
    dend_44 { pt3dadd( 11.1754, -23.3635, -12.5958, 1.03 ) }
    dend_44 { pt3dadd( 11.8933, -24.7333, -13.0009, 0.74 ) }
    dend_44 { pt3dadd( 12.7028, -25.8724, -13.359, 0.59 ) }
    dend_44 { pt3dadd( 13.4545, -26.6947, -13.6152, 0.44 ) }
    dend_44 { pt3dadd( 14.0447, -27.2343, -13.7795, 0.81 ) }
    dend_44 { pt3dadd( 14.6072, -27.6699, -13.9152, 1.47 ) }
    dend_44 { pt3dadd( 15.1856, -28.0581, -14.0368, 1.47 ) }
    dend_44 { pt3dadd( 16.9369, -29.0963, -14.3991, 0.29 ) }
    dend_44 { pt3dadd( 17.9521, -29.6592, -14.5893, 0.37 ) }
    dend_44 { pt3dadd( 18.784, -30.1063, -14.7425, 0.29 ) }
    dend_44 { pt3dadd( 19.286, -30.3819, -14.8138, 0.15 ) }
    dend_44 { pt3dadd( 26.1166, -36.7544, -16.5285, 0.15 ) }
    dend_44 { pt3dadd( 33.3258, -42.6366, -18.5141, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 14.0369, 3.28951, 3.41629, 0.88 ) }
    dend_34 { pt3dadd( 14.3442, 2.15075, 4.34354, 0.88 ) }
    dend_34 { pt3dadd( 14.4944, 1.15847, 5.11975, 0.44 ) }
    dend_34 { pt3dadd( 14.5556, 0.594364, 5.53832, 0.44 ) }
    dend_34 { pt3dadd( 14.634, -0.0710835, 6.00455, 0.59 ) }
    dend_34 { pt3dadd( 14.7273, -0.666253, 6.40127, 0.44 ) }
    dend_34 { pt3dadd( 14.9056, -1.40838, 6.84594, 0.29 ) }
    dend_34 { pt3dadd( 15.0286, -1.78007, 7.03785, 0.29 ) }
    dend_34 { pt3dadd( 15.3646, -2.32435, 7.26779, 0.52 ) }
    dend_34 { pt3dadd( 15.7075, -2.67175, 7.4004, 0.96 ) }
    dend_34 { pt3dadd( 16.2347, -3.04841, 7.53691, 1.92 ) }
    dend_34 { pt3dadd( 17.3749, -3.64357, 7.72452, 2.8 ) }
    dend_34 { pt3dadd( 18.782, -4.18366, 7.87794, 1.18 ) }
    dend_34 { pt3dadd( 19.8576, -4.53571, 7.98138, 0.29 ) }
    dend_34 { pt3dadd( 20.4379, -4.68957, 8.02672, 0.29 ) }
    dend_34 { pt3dadd( 21.015, -4.80842, 8.06581, 0.74 ) }
    dend_34 { pt3dadd( 21.9307, -4.91701, 8.10662, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 22.6236, -4.89488, 8.11904, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 1/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 14.0369, 3.28951, 3.41629, 0.44 ) }
    dend_31 { pt3dadd( 14.7425, 3.67107, 2.78382, 0.44 ) }
    dend_31 { pt3dadd( 14.9745, 3.81008, 2.47349, 0.44 ) }
    dend_31 { pt3dadd( 15.2381, 3.90659, 2.07954, 0.44 ) }
    dend_31 { pt3dadd( 15.506, 3.96939, 1.70326, 0.44 ) }
    dend_31 { pt3dadd( 15.8952, 4.06646, 1.15464, 0.52 ) }
    dend_31 { pt3dadd( 16.3841, 4.20708, 0.461017, 0.37 ) }
    dend_31 { pt3dadd( 17.1409, 4.46935, -0.62838, 1.4 ) }
    dend_31 { pt3dadd( 17.8968, 4.7267, -1.68715, 2.29 ) }
    dend_31 { pt3dadd( 18.8916, 4.97449, -2.9169, 0.22 ) }
    dend_31 { pt3dadd( 19.1633, 5.01761, -3.23043, 0.22 ) }
    dend_31 { pt3dadd( 19.4121, 5.02606, -3.49832, 0.22 ) }
    dend_31 { pt3dadd( 19.8528, 5.0101, -3.85656, 0.37 ) }
    dend_31 { pt3dadd( 20.2138, 4.98066, -4.08781, 0.37 ) }
    dend_31 { pt3dadd( 21.3859, 4.86872, -4.73253, 0.22 ) }
    dend_31 { pt3dadd( 22.1829, 4.77548, -5.09946, 0.74 ) }
    dend_31 { pt3dadd( 23.2216, 4.65559, -5.53947, 2.36 ) }
    dend_31 { pt3dadd( 25.0939, 4.44401, -6.28152, 0.15 ) }
    dend_31 { pt3dadd( 25.5431, 4.39569, -6.45335, 1.11 ) }
    dend_31 { pt3dadd( 25.837, 4.36716, -6.57265, 1.62 ) }
    dend_31 { pt3dadd( 27.3081, 4.24972, -7.22725, 0.15 ) }
    dend_31 { pt3dadd( 28.0987, 4.2059, -7.59045, 0.15 ) }
    dend_31 { pt3dadd( 28.4064, 4.19903, -7.74924, 0.59 ) }
    dend_31 { pt3dadd( 28.6785, 4.186, -7.94254, 0.59 ) }
    dend_31 { pt3dadd( 29.5046, 4.14056, -8.67913, 0.22 ) }
    dend_31 { pt3dadd( 30.0478, 4.10931, -9.23291, 0.37 ) }
    dend_31 { pt3dadd( 30.3425, 4.09637, -9.58366, 0.59 ) }
    dend_31 { pt3dadd( 30.618, 4.10325, -9.89271, 0.22 ) }
    dend_31 { pt3dadd( 31.2063, 4.15338, -10.4554, 0.15 ) }
    dend_31 { pt3dadd( 31.887, 4.23149, -11.0412, 0.15 ) }
    dend_31 { pt3dadd( 32.3186, 4.28743, -11.3556, 0.66 ) }
    dend_31 { pt3dadd( 32.7549, 4.33771, -11.6529, 1.47 ) }
    dend_31 { pt3dadd( 33.4517, 4.4068, -12.1515, 1.11 ) }
    dend_31 { pt3dadd( 34.618, 4.54667, -12.9934, 0.22 ) }
    dend_31 { pt3dadd( 40.4654, 3.36685, -19.3499, 0.22 ) }
    dend_31 { pt3dadd( 46.7934, 2.36054, -25.2644, 0.22 ) }
    dend_31 { pt3dadd( 53.2891, 0.793599, -30.8563, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.75063, 16.6582, 15.4263, 0.29 ) }
    dend_27 { pt3dadd( -4.12953, 17.1685, 17.0063, 0.29 ) }
    dend_27 { pt3dadd( -5.09254, 17.6189, 18.1255, 0.15 ) }
    dend_27 { pt3dadd( -5.53799, 17.8851, 18.6895, 0.96 ) }
    dend_27 { pt3dadd( -5.99479, 18.2243, 19.325, 2.06 ) }
    dend_27 { pt3dadd( -6.99158, 19.1423, 20.8588, 0.22 ) }
    dend_27 { pt3dadd( -7.25009, 19.4793, 21.344, 0.37 ) }
    dend_27 { pt3dadd( -7.35877, 19.7595, 21.6743, 0.37 ) }
    dend_27 { pt3dadd( -7.50663, 20.4087, 22.3793, 0.29 ) }
    dend_27 { pt3dadd( -7.60994, 21.1203, 23.1239, 1.99 ) }
    dend_27 { pt3dadd( -7.64255, 21.6219, 23.6418, 2.06 ) }
    dend_27 { pt3dadd( -7.67777, 23.0118, 25.1164, 0.15 ) }
    dend_27 { pt3dadd( -7.72443, 23.9884, 26.1719, 0.15 ) }
    dend_27 { pt3dadd( -7.76482, 24.5055, 26.7359, 1.18 ) }
    dend_27 { pt3dadd( -7.8078, 24.939, 27.2031, 2.14 ) }
    dend_27 { pt3dadd( -7.95003, 26.1911, 28.5748, 0.15 ) }
    dend_27 { pt3dadd( -8.06114, 26.8766, 29.33, 0.44 ) }
    dend_27 { pt3dadd( -8.21023, 27.5488, 30.0823, 0.15 ) }
    dend_27 { pt3dadd( -8.35664, 28.1534, 30.766, 0.29 ) }
    dend_27 { pt3dadd( -8.4835, 28.6747, 31.4016, 0.44 ) }
    dend_27 { pt3dadd( -8.61491, 29.2243, 32.1265, 1.03 ) }
    dend_27 { pt3dadd( -8.70554, 29.6134, 32.6777, 1.7 ) }
    dend_27 { pt3dadd( -8.9, 30.6662, 34.2629, 0.15 ) }
    dend_27 { pt3dadd( -8.96881, 31.1702, 35.0783, 0.22 ) }
    dend_27 { pt3dadd( -8.99723, 31.8219, 36.1619, 0.15 ) }
    dend_27 { pt3dadd( -8.98638, 32.3024, 36.9884, 0.52 ) }
    dend_27 { pt3dadd( -8.94428, 32.8528, 37.9964, 0.88 ) }
    dend_27 { pt3dadd( -8.85464, 33.5249, 39.3514, 1.25 ) }
    dend_27 { pt3dadd( -8.78514, 33.9427, 40.2405, 1.62 ) }
    dend_27 { pt3dadd( -8.65627, 34.8083, 42.105, 0.15 ) }
    dend_27 { pt3dadd( -8.62253, 35.1995, 42.9674, 0.22 ) }
    dend_27 { pt3dadd( -8.62023, 35.7467, 44.1802, 0.22 ) }
    dend_27 { pt3dadd( -8.64211, 36.0746, 44.8921, 0.37 ) }
    dend_27 { pt3dadd( -8.68415, 36.4799, 45.7253, 0.88 ) }
    dend_27 { pt3dadd( -8.72339, 36.7576, 46.2897, 1.4 ) }
    dend_27 { pt3dadd( -8.88929, 37.5933, 47.9898, 0.37 ) }
    dend_27 { pt3dadd( -9.04183, 38.3869, 49.4656, 0.22 ) }
    dend_27 { pt3dadd( -9.14836, 38.9809, 50.4596, 0.88 ) }
    dend_27 { pt3dadd( -9.23807, 39.48, 51.2528, 1.7 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.75063, 16.6582, 15.4263, 0.22 ) }
    dend_26 { pt3dadd( -2.20926, 17.7612, 14.5503, 0.22 ) }
    dend_26 { pt3dadd( -1.69716, 18.8788, 13.7398, 0.15 ) }
    dend_26 { pt3dadd( -1.38755, 19.5454, 13.3217, 0.15 ) }
    dend_26 { pt3dadd( -1.04564, 20.2682, 12.9129, 0.44 ) }
    dend_26 { pt3dadd( -0.475475, 21.456, 12.3019, 0.15 ) }
    dend_26 { pt3dadd( -0.13845, 22.1418, 11.9783, 0.66 ) }
    dend_26 { pt3dadd( 0.17807, 22.801, 11.7222, 1.7 ) }
    dend_26 { pt3dadd( 0.694842, 23.8432, 11.3954, 0.22 ) }
    dend_26 { pt3dadd( 1.21822, 24.8717, 11.0956, 0.22 ) }
    dend_26 { pt3dadd( 1.51885, 25.4596, 10.9261, 0.44 ) }
    dend_26 { pt3dadd( 1.81042, 26.0243, 10.7844, 0.81 ) }
    dend_26 { pt3dadd( 2.05214, 26.5033, 10.6642, 0.37 ) }
    dend_26 { pt3dadd( 2.6539, 27.7989, 10.3173, 0.22 ) }
    dend_26 { pt3dadd( 2.88683, 28.3839, 10.1576, 0.59 ) }
    dend_26 { pt3dadd( 3.03473, 28.8025, 10.0522, 1.18 ) }
    dend_26 { pt3dadd( 3.28942, 29.6434, 9.90356, 1.11 ) }
    dend_26 { pt3dadd( 3.82035, 31.5852, 9.66337, 0.22 ) }
    dend_26 { pt3dadd( 4.01326, 32.3378, 9.60665, 0.66 ) }
    dend_26 { pt3dadd( 4.22147, 33.1556, 9.5855, 1.7 ) }
    dend_26 { pt3dadd( 4.41093, 33.918, 9.58473, 1.62 ) }
    dend_26 { pt3dadd( 5.13602, 36.8693, 9.63566, 0.15 ) }
    dend_26 { pt3dadd( 5.26298, 37.3931, 9.65788, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 5.41603, 37.9895, 9.70033, 0.22 ) }
    dend_26 { pt3dadd( 5.5934, 38.6147, 9.74254, 0.07 ) }
    dend_26 { pt3dadd( 5.83523, 39.4097, 9.78746, 0.07 ) }
    dend_26 { pt3dadd( 5.99823, 39.9319, 9.80468, 0.37 ) }
    dend_26 { pt3dadd( 6.21229, 40.5479, 9.80115, 0.22 ) }
    dend_26 { pt3dadd( 6.70624, 41.8869, 9.79062, 0.15 ) }
    dend_26 { pt3dadd( 7.01238, 42.6807, 9.77897, 0.44 ) }
    dend_26 { pt3dadd( 7.34076, 43.5037, 9.76382, 0.81 ) }
    dend_26 { pt3dadd( 7.80251, 44.5877, 9.73726, 1.84 ) }
    dend_26 { pt3dadd( 8.75512, 46.799, 9.69995, 0.07 ) }
    dend_26 { pt3dadd( 9.07854, 47.5477, 9.70122, 0.29 ) }
    dend_26 { pt3dadd( 9.71971, 49.0312, 9.73168, 0.07 ) }
    dend_26 { pt3dadd( 9.89505, 49.4409, 9.74985, 0.66 ) }
    dend_26 { pt3dadd( 10.1921, 50.1515, 9.8037, 1.33 ) }
    dend_26 { pt3dadd( 10.8295, 51.7607, 9.99278, 0.07 ) }
    dend_26 { pt3dadd( 11.113, 52.5532, 10.1242, 0.07 ) }
    dend_26 { pt3dadd( 11.2314, 52.9082, 10.193, 0.22 ) }
    dend_26 { pt3dadd( 11.4484, 53.5902, 10.348, 0.74 ) }
    dend_26 { pt3dadd( 11.6036, 54.0944, 10.4679, 1.55 ) }
    dend_26 { pt3dadd( 12.1971, 56.0819, 10.9667, 0.07 ) }
    dend_26 { pt3dadd( 12.3371, 56.5249, 11.076, 0.22 ) }
    dend_26 { pt3dadd( 12.5758, 57.2674, 11.2454, 0.07 ) }
    dend_26 { pt3dadd( 12.8275, 58.0356, 11.4129, 1.03 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -89.3821, 26.0416, 15.9873, 0.15 ) }
    dend_24 { pt3dadd( -89.7855, 27.9325, 17.369, 0.15 ) }
    dend_24 { pt3dadd( -89.9979, 28.9284, 18.0967, 0.66 ) }
    dend_24 { pt3dadd( -90.1029, 29.4205, 18.4563, 0.66 ) }
    dend_24 { pt3dadd( -90.3757, 30.6995, 19.3909, 0.07 ) }
    dend_24 { pt3dadd( -90.5059, 31.3098, 19.8368, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -89.3821, 26.0416, 15.9873, 0.07 ) }
    dend_19 { pt3dadd( -90.3837, 26.9127, 15.7328, 0.07 ) }
    dend_19 { pt3dadd( -91.2463, 27.6475, 15.5709, 0.07 ) }
    dend_19 { pt3dadd( -91.7518, 28.0498, 15.5278, 0.52 ) }
    dend_19 { pt3dadd( -92.3152, 28.4913, 15.5217, 1.11 ) }
    dend_19 { pt3dadd( -93.9999, 29.8564, 15.604, 0.07 ) }
    dend_19 { pt3dadd( -94.3365, 30.1432, 15.6345, 0.07 ) }
    dend_19 { pt3dadd( -94.9124, 30.6742, 15.7794, 0.52 ) }
    dend_19 { pt3dadd( -95.6966, 31.4346, 16.0704, 0.15 ) }
    dend_19 { pt3dadd( -96.2113, 31.9579, 16.2995, 0.22 ) }
    dend_19 { pt3dadd( -96.6525, 32.418, 16.5214, 0.59 ) }
    dend_19 { pt3dadd( -97.0322, 32.7919, 16.7202, 0.59 ) }
    dend_19 { pt3dadd( -97.7965, 33.4706, 17.1104, 0.15 ) }
    dend_19 { pt3dadd( -98.223, 33.7911, 17.304, 0.22 ) }
    dend_19 { pt3dadd( -98.7356, 34.1056, 17.4929, 0.66 ) }
    dend_19 { pt3dadd( -99.2286, 34.3583, 17.6477, 1.62 ) }
    dend_19 { pt3dadd( -99.942, 34.6859, 17.8635, 1.62 ) }
    dend_19 { pt3dadd( -101.439, 35.36, 18.304, 0.22 ) }
    dend_19 { pt3dadd( -102.251, 35.7034, 18.5326, 0.22 ) }
    dend_19 { pt3dadd( -102.956, 35.9965, 18.7329, 0.22 ) }
    dend_19 { pt3dadd( -103.73, 36.3246, 18.9524, 0.22 ) }
    dend_19 { pt3dadd( -104.636, 36.7298, 19.2243, 0.22 ) }
    dend_19 { pt3dadd( -105.454, 37.1607, 19.4812, 1.77 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 17.1477, -61.1644, 11.6376, 0.22 ) }
    dend_17 { pt3dadd( 18.1893, -62.6889, 12.4678, 0.22 ) }
    dend_17 { pt3dadd( 19.1058, -64.0945, 13.245, 0.22 ) }
    dend_17 { pt3dadd( 19.3988, -64.5917, 13.5183, 0.66 ) }
    dend_17 { pt3dadd( 19.6996, -65.1429, 13.8137, 0.88 ) }
    dend_17 { pt3dadd( 20.0508, -65.8938, 14.2026, 0.22 ) }
    dend_17 { pt3dadd( 20.3866, -66.7007, 14.6064, 0.07 ) }
    dend_17 { pt3dadd( 20.5674, -67.3019, 14.8796, 0.15 ) }
    dend_17 { pt3dadd( 20.7513, -68.0701, 15.2103, 0.07 ) }
    dend_17 { pt3dadd( 20.8573, -68.5732, 15.4339, 0.15 ) }
    dend_17 { pt3dadd( 21.0884, -69.8457, 16.0001, 0.07 ) }
    dend_17 { pt3dadd( 21.1699, -70.3778, 16.2161, 0.52 ) }
    dend_17 { pt3dadd( 21.2419, -71.0056, 16.4371, 0.88 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 65/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 17.1477, -61.1644, 11.6376, 2.8 ) }
    dend_12 { pt3dadd( 17.7563, -62.2187, 11.7963, 2.8 ) }
    dend_12 { pt3dadd( 18.5429, -63.6448, 12.0564, 0.37 ) }
    dend_12 { pt3dadd( 18.9489, -64.4489, 12.2139, 0.22 ) }
    dend_12 { pt3dadd( 19.4855, -65.6349, 12.4408, 0.22 ) }
    dend_12 { pt3dadd( 19.7888, -66.4168, 12.6025, 0.22 ) }
    dend_12 { pt3dadd( 20.0312, -67.1286, 12.7598, 0.29 ) }
    dend_12 { pt3dadd( 20.1871, -67.694, 12.8995, 0.88 ) }
    dend_12 { pt3dadd( 20.3929, -68.5783, 13.146, 0.96 ) }
    dend_12 { pt3dadd( 20.5644, -69.3988, 13.3739, 0.52 ) }
    dend_12 { pt3dadd( 20.8215, -70.744, 13.7322, 0.37 ) }
    dend_12 { pt3dadd( 20.9891, -71.5619, 13.9268, 0.81 ) }
    dend_12 { pt3dadd( 21.171, -72.2685, 14.1017, 0.44 ) }
    dend_12 { pt3dadd( 21.4929, -73.3362, 14.4042, 0.29 ) }
    dend_12 { pt3dadd( 21.7207, -74.0297, 14.6352, 0.88 ) }
    dend_12 { pt3dadd( 21.938, -74.6863, 14.8895, 1.92 ) }
    dend_12 { pt3dadd( 22.2345, -75.6435, 15.2818, 2.06 ) }
    dend_12 { pt3dadd( 22.6662, -77.1596, 15.9112, 0.29 ) }
    dend_12 { pt3dadd( 22.9355, -78.2411, 16.3614, 0.37 ) }
    dend_12 { pt3dadd( 23.154, -79.1948, 16.7272, 0.29 ) }
    dend_12 { pt3dadd( 23.3453, -80.0272, 17.0205, 0.37 ) }
    dend_12 { pt3dadd( 23.6403, -81.239, 17.3508, 0.37 ) }
    dend_12 { pt3dadd( 23.9377, -82.4591, 17.5734, 0.29 ) }
    dend_12 { pt3dadd( 24.0464, -82.9183, 17.5936, 0.88 ) }
    dend_12 { pt3dadd( 24.3103, -83.9502, 17.5087, 1.84 ) }
    dend_12 { pt3dadd( 24.4832, -84.5582, 17.4002, 2.06 ) }
    dend_12 { pt3dadd( 24.9947, -86.171, 16.9831, 0.29 ) }
    dend_12 { pt3dadd( 25.2305, -86.879, 16.7628, 0.37 ) }
    dend_12 { pt3dadd( 25.4668, -87.5818, 16.5316, 0.22 ) }
    dend_12 { pt3dadd( 25.6521, -88.1012, 16.3683, 0.22 ) }
    dend_12 { pt3dadd( 25.8975, -88.7529, 16.1961, 0.37 ) }
    dend_12 { pt3dadd( 26.2566, -89.5828, 16.0345, 0.29 ) }
    dend_12 { pt3dadd( 26.401, -89.8939, 16.001, 1.03 ) }
    dend_12 { pt3dadd( 26.6972, -90.5091, 15.9806, 1.62 ) }
    dend_12 { pt3dadd( 26.9681, -91.075, 15.998, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 27.5025, -92.2035, 16.0765, 0.81 ) }
    dend_12 { pt3dadd( 27.9896, -93.2696, 16.1869, 0.22 ) }
    dend_12 { pt3dadd( 28.4574, -94.3136, 16.3759, 0.22 ) }
    dend_12 { pt3dadd( 28.9203, -95.3947, 16.6267, 0.22 ) }
    dend_12 { pt3dadd( 29.0642, -95.7479, 16.7247, 1.03 ) }
    dend_12 { pt3dadd( 29.3157, -96.3945, 16.93, 2.14 ) }
    dend_12 { pt3dadd( 29.6705, -97.355, 17.2667, 1.4 ) }
    dend_12 { pt3dadd( 30.2014, -98.7715, 17.8109, 0.22 ) }
    dend_12 { pt3dadd( 30.5288, -99.6188, 18.1539, 0.29 ) }
    dend_12 { pt3dadd( 30.7826, -100.269, 18.4221, 0.66 ) }
    dend_12 { pt3dadd( 30.9836, -100.759, 18.6113, 0.66 ) }
    dend_12 { pt3dadd( 31.3241, -101.522, 18.8813, 0.22 ) }
    dend_12 { pt3dadd( 31.7985, -102.463, 19.1893, 0.22 ) }
    dend_12 { pt3dadd( 32.0248, -102.881, 19.3129, 0.74 ) }
    dend_12 { pt3dadd( 32.3488, -103.45, 19.4922, 1.62 ) }
    dend_12 { pt3dadd( 32.8239, -104.309, 19.7686, 0.96 ) }
    dend_12 { pt3dadd( 33.3713, -105.413, 20.1315, 0.22 ) }
    dend_12 { pt3dadd( 33.6472, -106.06, 20.3447, 0.15 ) }
    dend_12 { pt3dadd( 33.7624, -106.412, 20.4515, 0.15 ) }
    dend_12 { pt3dadd( 33.8337, -106.673, 20.5302, 0.44 ) }
    dend_12 { pt3dadd( 33.9364, -107.16, 20.6728, 0.66 ) }
    dend_12 { pt3dadd( 34.057, -107.939, 20.8891, 0.15 ) }
    dend_12 { pt3dadd( 34.1093, -108.353, 21.0099, 0.15 ) }
    dend_12 { pt3dadd( 34.1772, -108.829, 21.1526, 0.29 ) }
    dend_12 { pt3dadd( 34.2643, -109.299, 21.3141, 0.29 ) }
    dend_12 { pt3dadd( 34.4687, -110.164, 21.6392, 0.07 ) }
    dend_12 { pt3dadd( 34.5355, -110.405, 21.7306, 0.44 ) }
    dend_12 { pt3dadd( 34.7635, -111.192, 22.0274, 1.18 ) }
    dend_12 { pt3dadd( 34.9107, -111.771, 22.2415, 2.06 ) }
    dend_12 { pt3dadd( 35.0591, -112.419, 22.4709, 1.55 ) }
    dend_12 { pt3dadd( 35.3867, -113.945, 22.98, 0.44 ) }
    dend_12 { pt3dadd( 35.6109, -114.998, 23.3035, 0.66 ) }
    dend_12 { pt3dadd( 35.8247, -115.968, 23.5574, 0.22 ) }
    dend_12 { pt3dadd( 36.145, -117.317, 23.8355, 0.22 ) }
    dend_12 { pt3dadd( 36.2515, -117.766, 23.9125, 0.96 ) }
    dend_12 { pt3dadd( 36.3786, -118.321, 23.9858, 1.92 ) }
    dend_12 { pt3dadd( 36.4909, -118.84, 24.0334, 1.99 ) }
    dend_12 { pt3dadd( 36.861, -120.479, 24.1388, 0.29 ) }
    dend_12 { pt3dadd( 37.1558, -121.63, 24.2002, 0.15 ) }
    dend_12 { pt3dadd( 37.3066, -122.154, 24.2155, 0.74 ) }
    dend_12 { pt3dadd( 37.4202, -122.542, 24.2245, 0.74 ) }
    dend_12 { pt3dadd( 37.6963, -123.511, 24.2373, 0.22 ) }
    dend_12 { pt3dadd( 37.8623, -124.154, 24.2385, 0.37 ) }
    dend_12 { pt3dadd( 38.0769, -125.092, 24.239, 0.22 ) }
    dend_12 { pt3dadd( 38.221, -125.816, 24.2501, 0.22 ) }
    dend_12 { pt3dadd( 38.3037, -126.282, 24.2612, 0.59 ) }
    dend_12 { pt3dadd( 38.4027, -126.961, 24.2791, 1.18 ) }
    dend_12 { pt3dadd( 38.6096, -128.807, 24.351, 0.22 ) }
    dend_12 { pt3dadd( 38.6736, -129.498, 24.3829, 0.44 ) }
    dend_12 { pt3dadd( 38.7411, -130.173, 24.4069, 0.22 ) }
    dend_12 { pt3dadd( 38.7887, -130.641, 24.4247, 0.81 ) }
    dend_12 { pt3dadd( 38.8468, -131.17, 24.4431, 1.47 ) }
    dend_12 { pt3dadd( 38.9303, -131.89, 24.466, 1.55 ) }
    dend_12 { pt3dadd( 39.0472, -132.895, 24.4899, 0.22 ) }
    dend_12 { pt3dadd( 39.1772, -134.008, 24.5213, 0.15 ) }
    dend_12 { pt3dadd( 39.3089, -135.081, 24.5593, 0.15 ) }
    dend_12 { pt3dadd( 39.3703, -135.607, 24.5982, 0.29 ) }
    dend_12 { pt3dadd( 39.4198, -136.086, 24.653, 0.59 ) }
    dend_12 { pt3dadd( 39.4531, -136.477, 24.7176, 0.96 ) }
    dend_12 { pt3dadd( 39.5097, -137.221, 24.9034, 0.22 ) }
    dend_12 { pt3dadd( 39.57, -137.976, 25.1355, 0.15 ) }
    dend_12 { pt3dadd( 39.6724, -138.994, 25.4833, 0.15 ) }
    dend_12 { pt3dadd( 39.7242, -139.548, 25.6723, 0.96 ) }
    dend_12 { pt3dadd( 39.7978, -140.433, 25.9834, 1.92 ) }
    dend_12 { pt3dadd( 39.885, -141.679, 26.4292, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 65/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.4196, -23.0075, 4.82176, 1.03 ) }
    dend_6 { pt3dadd( -6.91875, -24.0411, 5.76145, 1.03 ) }
    dend_6 { pt3dadd( -6.40518, -25.0504, 6.71976, 0.37 ) }
    dend_6 { pt3dadd( -6.01954, -25.7695, 7.39127, 0.66 ) }
    dend_6 { pt3dadd( -5.61669, -26.4888, 8.02018, 1.11 ) }
    dend_6 { pt3dadd( -5.19868, -27.2174, 8.60691, 1.55 ) }
    dend_6 { pt3dadd( -4.7151, -28.0785, 9.22079, 0.52 ) }
    dend_6 { pt3dadd( -4.24249, -28.9314, 9.75961, 0.44 ) }
    dend_6 { pt3dadd( -3.68904, -29.9856, 10.3214, 0.88 ) }
    dend_6 { pt3dadd( -3.20275, -30.9387, 10.7683, 0.74 ) }
    dend_6 { pt3dadd( -2.75419, -31.8422, 11.1426, 0.44 ) }
    dend_6 { pt3dadd( -2.23335, -32.9115, 11.5049, 0.37 ) }
    dend_6 { pt3dadd( -1.97087, -33.4958, 11.6659, 1.18 ) }
    dend_6 { pt3dadd( -1.47179, -34.7238, 11.8992, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 79/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.4196, -23.0075, 4.82176, 1.03 ) }
    dend_1 { pt3dadd( -8.31683, -23.3186, 5.26247, 1.03 ) }
    dend_1 { pt3dadd( -9.67724, -23.8923, 5.99489, 0.52 ) }
    dend_1 { pt3dadd( -10.7088, -24.4297, 6.63633, 0.44 ) }
    dend_1 { pt3dadd( -11.5292, -24.9735, 7.22796, 0.29 ) }
    dend_1 { pt3dadd( -12.0204, -25.3905, 7.61745, 0.29 ) }
    dend_1 { pt3dadd( -12.3106, -25.7064, 7.89128, 0.29 ) }
    dend_1 { pt3dadd( -12.7089, -26.3355, 8.3809, 0.96 ) }
    dend_1 { pt3dadd( -13.0434, -27.0937, 8.88836, 2.14 ) }
    dend_1 { pt3dadd( -13.4017, -28.1234, 9.50739, 2.06 ) }
    dend_1 { pt3dadd( -13.7325, -29.2929, 10.1649, 0.74 ) }
    dend_1 { pt3dadd( -14.13, -30.8519, 10.9815, 0.44 ) }
    dend_1 { pt3dadd( -14.2735, -31.4483, 11.2793, 0.59 ) }
    dend_1 { pt3dadd( -14.4244, -32.1295, 11.5884, 0.88 ) }
    dend_1 { pt3dadd( -14.607, -33.0059, 11.9608, 0.29 ) }
    dend_1 { pt3dadd( -14.7833, -33.9578, 12.3404, 0.15 ) }
    dend_1 { pt3dadd( -14.8642, -34.4075, 12.5176, 0.29 ) }
    dend_1 { pt3dadd( -15.092, -35.5878, 12.9008, 0.22 ) }
    dend_1 { pt3dadd( -15.1818, -36.0397, 13.0464, 0.66 ) }
    dend_1 { pt3dadd( -15.3465, -36.8485, 13.285, 1.7 ) }
    dend_1 { pt3dadd( -15.4937, -37.5221, 13.4565, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -15.6676, -38.2678, 13.6448, 1.92 ) }
    dend_1 { pt3dadd( -16.1343, -40.2726, 14.1571, 0.37 ) }
    dend_1 { pt3dadd( -16.3301, -41.1496, 14.3888, 1.25 ) }
    dend_1 { pt3dadd( -16.5414, -42.1698, 14.6671, 0.96 ) }
    dend_1 { pt3dadd( -16.786, -43.4587, 15.0089, 0.22 ) }
    dend_1 { pt3dadd( -16.9961, -44.575, 15.3, 0.22 ) }
    dend_1 { pt3dadd( -17.1641, -45.4086, 15.5002, 0.44 ) }
    dend_1 { pt3dadd( -17.3476, -46.1924, 15.6831, 1.18 ) }
    dend_1 { pt3dadd( -17.5433, -46.8569, 15.8114, 2.29 ) }
    dend_1 { pt3dadd( -17.88, -47.7987, 15.9713, 2.51 ) }
    dend_1 { pt3dadd( -18.3909, -49.0819, 16.1379, 0.44 ) }
    dend_1 { pt3dadd( -18.9107, -50.2837, 16.2346, 0.44 ) }
    dend_1 { pt3dadd( -19.1655, -50.8312, 16.2687, 0.37 ) }
    dend_1 { pt3dadd( -19.7632, -52.044, 16.3203, 0.37 ) }
    dend_1 { pt3dadd( -19.9805, -52.4699, 16.3464, 0.22 ) }
    dend_1 { pt3dadd( -20.1891, -52.8748, 16.3804, 0.22 ) }
    dend_1 { pt3dadd( -20.5271, -53.5819, 16.4496, 0.22 ) }
    dend_1 { pt3dadd( -20.692, -53.9337, 16.4963, 0.74 ) }
    dend_1 { pt3dadd( -20.914, -54.4429, 16.5867, 1.4 ) }
    dend_1 { pt3dadd( -21.2159, -55.2167, 16.7436, 2.14 ) }
    dend_1 { pt3dadd( -21.6709, -56.3926, 16.9894, 0.66 ) }
    dend_1 { pt3dadd( -22.1255, -57.5499, 17.2311, 0.37 ) }
    dend_1 { pt3dadd( -22.488, -58.5393, 17.394, 0.22 ) }
    dend_1 { pt3dadd( -22.7583, -59.378, 17.4949, 0.22 ) }
    dend_1 { pt3dadd( -22.9546, -60.0856, 17.5481, 1.11 ) }
    dend_1 { pt3dadd( -23.1379, -60.8112, 17.5888, 1.25 ) }
    dend_1 { pt3dadd( -23.3644, -61.7649, 17.6325, 0.59 ) }
    dend_1 { pt3dadd( -23.6345, -62.8517, 17.6629, 0.22 ) }
    dend_1 { pt3dadd( -23.7504, -63.291, 17.6646, 0.22 ) }
    dend_1 { pt3dadd( -24.1084, -64.414, 17.6641, 0.29 ) }
    dend_1 { pt3dadd( -24.6648, -65.8991, 17.6953, 0.29 ) }
    dend_1 { pt3dadd( -24.887, -66.4285, 17.7347, 0.29 ) }
    dend_1 { pt3dadd( -25.1503, -66.9988, 17.8054, 0.96 ) }
    dend_1 { pt3dadd( -25.3935, -67.4793, 17.8877, 1.99 ) }
    dend_1 { pt3dadd( -25.6027, -67.8732, 17.953, 2.51 ) }
    dend_1 { pt3dadd( -26.283, -69.1249, 18.1424, 0.81 ) }
    dend_1 { pt3dadd( -27.0093, -70.4823, 18.3027, 0.22 ) }
    dend_1 { pt3dadd( -27.3742, -71.1798, 18.3624, 0.22 ) }
    dend_1 { pt3dadd( -27.6475, -71.7321, 18.3923, 0.22 ) }
    dend_1 { pt3dadd( -27.7992, -72.0519, 18.3983, 0.44 ) }
    dend_1 { pt3dadd( -28.0367, -72.5769, 18.3865, 0.96 ) }
    dend_1 { pt3dadd( -28.3103, -73.2089, 18.3436, 0.44 ) }
    dend_1 { pt3dadd( -28.6831, -74.1039, 18.2256, 0.15 ) }
    dend_1 { pt3dadd( -28.9198, -74.687, 18.1468, 0.15 ) }
    dend_1 { pt3dadd( -29.1028, -75.1545, 18.0865, 0.44 ) }
    dend_1 { pt3dadd( -29.3058, -75.668, 18.0333, 0.52 ) }
    dend_1 { pt3dadd( -29.5298, -76.2595, 17.9623, 0.22 ) }
    dend_1 { pt3dadd( -29.7539, -76.8082, 17.8844, 0.22 ) }
    dend_1 { pt3dadd( -29.9889, -77.3314, 17.8094, 0.74 ) }
    dend_1 { pt3dadd( -30.3428, -78.0669, 17.692, 1.33 ) }
    dend_1 { pt3dadd( -30.7368, -78.8554, 17.5691, 0.29 ) }
    dend_1 { pt3dadd( -31.2913, -79.9054, 17.4179, 0.22 ) }
    dend_1 { pt3dadd( -31.689, -80.6199, 17.3253, 0.22 ) }
    dend_1 { pt3dadd( -32.2758, -81.642, 17.219, 0.22 ) }
    dend_1 { pt3dadd( -32.5053, -82.0398, 17.1844, 0.52 ) }
    dend_1 { pt3dadd( -33.0162, -82.9374, 17.1256, 1.7 ) }
    dend_1 { pt3dadd( -33.6966, -84.1539, 17.0692, 0.44 ) }
    dend_1 { pt3dadd( -34.2052, -85.0677, 17.0534, 0.37 ) }
    dend_1 { pt3dadd( -34.7952, -86.1946, 17.0449, 0.15 ) }
    dend_1 { pt3dadd( -35.0736, -86.7392, 17.0378, 0.81 ) }
    dend_1 { pt3dadd( -35.3981, -87.3842, 17.024, 1.7 ) }
    dend_1 { pt3dadd( -35.6572, -87.921, 17.0019, 0.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 33.5074, 20.3123, 0.0, 0.159967 ) }
    axon_1 { pt3dadd( 46.434, 27.9217, 0.0, 0.159967 ) }
    axon_1 { pt3dadd( 59.3606, 35.5311, 0.0, 0.159967 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 65/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -13.2425, 4.7626, -18.6606, 0.52 ) }
    dend_100 { pt3dadd( -12.2523, 4.75213, -19.3287, 0.52 ) }
    dend_100 { pt3dadd( -11.1624, 4.90993, -20.1312, 0.37 ) }
    dend_100 { pt3dadd( -10.2594, 5.32427, -20.9268, 0.22 ) }
    dend_100 { pt3dadd( -9.96093, 5.64566, -21.3004, 0.29 ) }
    dend_100 { pt3dadd( -9.76619, 5.92359, -21.6164, 0.29 ) }
    dend_100 { pt3dadd( -9.49069, 6.29785, -22.1156, 0.66 ) }
    dend_100 { pt3dadd( -9.1901, 6.73189, -22.7676, 1.03 ) }
    dend_100 { pt3dadd( -8.98422, 7.17099, -23.3763, 0.81 ) }
    dend_100 { pt3dadd( -8.75982, 7.71966, -24.0781, 0.44 ) }
    dend_100 { pt3dadd( -8.41735, 8.41752, -24.9436, 0.74 ) }
    dend_100 { pt3dadd( -8.0369, 9.0236, -25.6553, 0.66 ) }
    dend_100 { pt3dadd( -7.64547, 9.55723, -26.1883, 0.66 ) }
    dend_100 { pt3dadd( -6.88349, 10.4713, -27.1144, 0.29 ) }
    dend_100 { pt3dadd( -6.39469, 11.0214, -27.6236, 0.29 ) }
    dend_100 { pt3dadd( -5.77805, 11.7288, -28.1328, 0.52 ) }
    dend_100 { pt3dadd( -5.27778, 12.3929, -28.4276, 0.52 ) }
    dend_100 { pt3dadd( -4.69905, 13.2581, -28.6438, 1.03 ) }
    dend_100 { pt3dadd( 0.677448, 19.9129, -33.1626, 1.03 ) }
    dend_100 { pt3dadd( 5.71607, 26.4079, -38.2744, 1.03 ) }
    dend_100 { pt3dadd( 10.5539, 32.027, -44.5415, 1.03 ) }
    dend_100 { pt3dadd( 15.2195, 37.1935, -51.3286, 1.03 ) }
    dend_100 { pt3dadd( 19.285, 43.2607, -57.7032, 1.03 ) }
    dend_100 { pt3dadd( 22.2748, 49.6395, -64.3485, 1.03 ) }
    dend_100 { pt3dadd( 26.5736, 55.5318, -70.7427, 1.03 ) }
    dend_100 { pt3dadd( 31.6159, 61.8362, -76.0959, 1.03 ) }
    dend_100 { pt3dadd( 37.4561, 68.4244, -80.1166, 1.03 ) }
    dend_100 { pt3dadd( 43.2524, 74.6925, -84.6977, 1.03 ) }
    dend_100 { pt3dadd( 49.5824, 81.2199, -88.0263, 1.03 ) }
    dend_100 { pt3dadd( 56.5761, 86.8261, -91.7679, 1.03 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 95/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -13.2425, 4.7626, -18.6606, 1.25 ) }
    dend_99 { pt3dadd( -13.2213, 3.40085, -18.956, 1.25 ) }
    dend_99 { pt3dadd( -13.1037, 2.05072, -19.2076, 0.59 ) }
    dend_99 { pt3dadd( -12.987, 0.976251, -19.4294, 0.81 ) }
    dend_99 { pt3dadd( -12.846, -0.304031, -19.7648, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_99 { pt3dadd( -12.6673, -1.68721, -20.1491, 1.4 ) }
    dend_99 { pt3dadd( -12.4722, -2.89733, -20.469, 1.11 ) }
    dend_99 { pt3dadd( -11.8795, -5.11021, -21.0469, 0.52 ) }
    dend_99 { pt3dadd( -11.3725, -6.57196, -21.4268, 0.74 ) }
    dend_99 { pt3dadd( -10.8368, -7.87943, -21.8208, 1.7 ) }
    dend_99 { pt3dadd( -10.219, -9.15975, -22.2771, 1.84 ) }
    dend_99 { pt3dadd( -9.4549, -10.4816, -22.8174, 1.92 ) }
    dend_99 { pt3dadd( -8.0578, -12.6253, -23.7505, 0.96 ) }
    dend_99 { pt3dadd( -7.3165, -13.5843, -24.1828, 0.96 ) }
    dend_99 { pt3dadd( -6.59514, -14.4014, -24.5427, 0.44 ) }
    dend_99 { pt3dadd( -5.75813, -15.2487, -24.91, 1.18 ) }
    dend_99 { pt3dadd( -5.37202, -15.5947, -25.1075, 1.18 ) }
    dend_99 { pt3dadd( -0.717255, -24.3339, -26.5923, 1.18 ) }
    dend_99 { pt3dadd( 4.4093, -32.8979, -27.4576, 1.18 ) }
    dend_99 { pt3dadd( 7.73164, -42.1424, -29.2835, 1.18 ) }
    dend_99 { pt3dadd( 10.9584, -51.5861, -29.2059, 1.18 ) }
    dend_99 { pt3dadd( 15.0408, -60.5313, -27.3813, 1.18 ) }
    dend_99 { pt3dadd( 18.3818, -69.9195, -26.7986, 1.18 ) }
    // Section: dend_97, id: dend_97, parent: dend_95 (entry count 18/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -1.01502, 39.879, -25.4896, 0.07 ) }
    dend_97 { pt3dadd( -0.810316, 50.8334, -27.9098, 0.07 ) }
    dend_97 { pt3dadd( -0.45938, 62.0376, -28.4049, 0.07 ) }
    dend_97 { pt3dadd( -2.69692, 73.0842, -28.3365, 0.07 ) }
    dend_97 { pt3dadd( -6.31031, 83.7085, -29.65, 0.07 ) }
    dend_97 { pt3dadd( -11.571, 93.7512, -30.0695, 0.07 ) }
    dend_97 { pt3dadd( -18.0308, 103.061, -28.9458, 0.07 ) }
    dend_97 { pt3dadd( -22.5706, 113.191, -26.5922, 0.07 ) }
    dend_97 { pt3dadd( -29.5707, 121.715, -23.6389, 0.07 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 27/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -1.01502, 39.879, -25.4896, 0.81 ) }
    dend_96 { pt3dadd( 0.141549, 46.2673, -27.5257, 0.07 ) }
    dend_96 { pt3dadd( 1.70595, 52.1623, -30.5607, 0.07 ) }
    dend_96 { pt3dadd( 4.25757, 58.0422, -32.8383, 0.07 ) }
    dend_96 { pt3dadd( 6.3916, 64.0912, -35.1005, 0.07 ) }
    dend_96 { pt3dadd( 8.99489, 69.9996, -37.2381, 0.07 ) }
    dend_96 { pt3dadd( 10.2679, 76.0095, -40.183, 0.07 ) }
    dend_96 { pt3dadd( 10.8492, 82.3811, -42.522, 0.07 ) }
    // Section: dend_93, id: dend_93, parent: dend_45 (entry count 35/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -9.12465, -15.8065, -8.70282, 0.37 ) }
    dend_93 { pt3dadd( -10.6715, -15.8527, -8.87915, 0.37 ) }
    dend_93 { pt3dadd( -11.8524, -15.8809, -9.1831, 0.37 ) }
    dend_93 { pt3dadd( -12.6103, -15.9855, -9.42457, 0.22 ) }
    dend_93 { pt3dadd( -13.4064, -16.1945, -9.8152, 0.22 ) }
    dend_93 { pt3dadd( -13.8055, -16.3274, -10.0419, 0.22 ) }
    dend_93 { pt3dadd( -14.3799, -16.5253, -10.3682, 0.44 ) }
    dend_93 { pt3dadd( -14.953, -16.7465, -10.7403, 0.52 ) }
    dend_93 { pt3dadd( -15.8244, -17.0963, -11.2699, 1.18 ) }
    dend_93 { pt3dadd( -17.2953, -17.7586, -12.0477, 0.22 ) }
    dend_93 { pt3dadd( -18.2256, -18.2135, -12.4851, 0.22 ) }
    dend_93 { pt3dadd( -18.9007, -18.5538, -12.7606, 0.22 ) }
    dend_93 { pt3dadd( -19.5778, -18.9117, -13.0272, 0.22 ) }
    dend_93 { pt3dadd( -20.3998, -19.3609, -13.3299, 0.29 ) }
    dend_93 { pt3dadd( -21.1096, -19.7725, -13.5772, 0.59 ) }
    dend_93 { pt3dadd( -21.6602, -20.1333, -13.7423, 0.96 ) }
    dend_93 { pt3dadd( -22.5216, -20.803, -14.01, 0.37 ) }
    dend_93 { pt3dadd( -23.3496, -21.5827, -14.3011, 0.22 ) }
    dend_93 { pt3dadd( -24.0403, -22.374, -14.5754, 0.07 ) }
    dend_93 { pt3dadd( -24.764, -23.2948, -14.8845, 0.07 ) }
    dend_93 { pt3dadd( -25.3156, -24.0498, -15.1233, 0.22 ) }
    dend_93 { pt3dadd( -25.893, -24.8834, -15.3489, 0.07 ) }
    dend_93 { pt3dadd( -26.317, -25.586, -15.5189, 0.07 ) }
    dend_93 { pt3dadd( -26.6631, -26.2469, -15.6166, 0.74 ) }
    dend_93 { pt3dadd( -36.3047, -33.3584, -17.3917, 0.74 ) }
    dend_93 { pt3dadd( -46.8292, -39.3653, -18.1097, 0.74 ) }
    dend_93 { pt3dadd( -57.1228, -45.5881, -19.7112, 0.74 ) }
    dend_93 { pt3dadd( -67.8477, -51.2197, -20.6186, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 63/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -9.12465, -15.8065, -8.70282, 0.96 ) }
    dend_46 { pt3dadd( -8.92045, -17.2815, -8.89459, 0.96 ) }
    dend_46 { pt3dadd( -8.76324, -18.4099, -9.10793, 0.88 ) }
    dend_46 { pt3dadd( -8.57139, -19.8911, -9.44458, 0.81 ) }
    dend_46 { pt3dadd( -8.46847, -20.7673, -9.67658, 1.03 ) }
    dend_46 { pt3dadd( -8.40032, -21.5824, -9.91819, 1.33 ) }
    dend_46 { pt3dadd( -8.32577, -23.2421, -10.4301, 0.88 ) }
    dend_46 { pt3dadd( -8.34985, -24.6978, -10.9544, 1.03 ) }
    dend_46 { pt3dadd( -8.46271, -25.9891, -11.4655, 1.62 ) }
    dend_46 { pt3dadd( -8.67868, -27.8426, -12.2489, 0.37 ) }
    dend_46 { pt3dadd( -8.83145, -28.8397, -12.6759, 0.37 ) }
    dend_46 { pt3dadd( -8.9904, -29.6249, -13.0302, 0.74 ) }
    dend_46 { pt3dadd( -9.18791, -30.253, -13.3214, 1.25 ) }
    dend_46 { pt3dadd( -9.56781, -31.0887, -13.7135, 1.77 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 22.6236, -4.89488, 8.11904, 0.15 ) }
    dend_42 { pt3dadd( 23.5032, -3.79674, 8.03903, 0.15 ) }
    dend_42 { pt3dadd( 23.9437, -3.24271, 8.01045, 0.15 ) }
    dend_42 { pt3dadd( 24.3053, -2.75604, 7.96929, 0.88 ) }
    dend_42 { pt3dadd( 24.7061, -2.17089, 7.91361, 1.55 ) }
    dend_42 { pt3dadd( 25.6148, -0.676807, 7.76174, 0.22 ) }
    dend_42 { pt3dadd( 26.0265, 6.66976E-5, 7.69293, 0.22 ) }
    dend_42 { pt3dadd( 26.2903, 0.454541, 7.66451, 0.37 ) }
    dend_42 { pt3dadd( 26.7403, 1.24948, 7.6327, 0.07 ) }
    dend_42 { pt3dadd( 26.9276, 1.62365, 7.61048, 0.07 ) }
    dend_42 { pt3dadd( 27.1524, 2.23954, 7.52295, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 22.6236, -4.89488, 8.11904, 0.29 ) }
    dend_35 { pt3dadd( 23.4537, -5.5481, 9.26649, 0.29 ) }
    dend_35 { pt3dadd( 24.0289, -5.8964, 10.0017, 0.29 ) }
    dend_35 { pt3dadd( 24.9201, -6.29378, 11.0547, 0.66 ) }
    dend_35 { pt3dadd( 25.1788, -6.37788, 11.3401, 0.66 ) }
    dend_35 { pt3dadd( 25.939, -6.55612, 12.1246, 0.22 ) }
    dend_35 { pt3dadd( 26.3794, -6.64653, 12.5487, 0.22 ) }
    dend_35 { pt3dadd( 27.0189, -6.75256, 13.1553, 0.66 ) }
    dend_35 { pt3dadd( 27.9306, -6.89827, 13.9827, 1.84 ) }
    dend_35 { pt3dadd( 29.0517, -7.11059, 14.9808, 3.02 ) }
    dend_35 { pt3dadd( 30.296, -7.43392, 16.1254, 1.55 ) }
    dend_35 { pt3dadd( 31.5879, -7.91758, 17.2948, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 32.5955, -8.41599, 18.1969, 0.44 ) }
    dend_35 { pt3dadd( 33.6473, -9.05159, 19.1364, 0.22 ) }
    dend_35 { pt3dadd( 34.5512, -9.67115, 19.9251, 1.03 ) }
    dend_35 { pt3dadd( 35.2616, -10.201, 20.5068, 2.29 ) }
    dend_35 { pt3dadd( 36.8403, -11.4195, 21.7077, 0.22 ) }
    dend_35 { pt3dadd( 37.6286, -11.9866, 22.3, 0.22 ) }
    dend_35 { pt3dadd( 38.1074, -12.2928, 22.6368, 0.22 ) }
    dend_35 { pt3dadd( 38.7058, -12.6259, 23.0366, 1.47 ) }
    dend_35 { pt3dadd( 39.6711, -13.0865, 23.638, 2.88 ) }
    dend_35 { pt3dadd( 40.4943, -13.42, 24.1221, 2.14 ) }
    dend_35 { pt3dadd( 43.286, -14.4066, 25.6599, 0.29 ) }
    dend_35 { pt3dadd( 44.3648, -14.7565, 26.2289, 0.29 ) }
    dend_35 { pt3dadd( 45.0169, -14.9545, 26.5687, 0.29 ) }
    dend_35 { pt3dadd( 45.6107, -15.1233, 26.8829, 0.66 ) }
    dend_35 { pt3dadd( 46.4277, -15.3202, 27.3036, 1.03 ) }
    dend_35 { pt3dadd( 47.2913, -15.4798, 27.6727, 0.22 ) }
    dend_35 { pt3dadd( 48.2613, -15.566, 28.022, 0.22 ) }
    dend_35 { pt3dadd( 48.9197, -15.5832, 28.3003, 0.22 ) }
    dend_35 { pt3dadd( 49.6143, -15.5779, 28.6206, 0.59 ) }
    dend_35 { pt3dadd( 50.4636, -15.5528, 29.0274, 1.4 ) }
    dend_35 { pt3dadd( 51.7909, -15.5154, 29.6689, 0.37 ) }
    dend_35 { pt3dadd( 52.8054, -15.5518, 30.1298, 0.22 ) }
    dend_35 { pt3dadd( 53.7579, -15.6358, 30.5026, 0.22 ) }
    dend_35 { pt3dadd( 54.2704, -15.7148, 30.6803, 1.33 ) }
    dend_35 { pt3dadd( 55.1029, -15.8851, 30.9426, 2.73 ) }
    dend_35 { pt3dadd( 55.8348, -16.0697, 31.1638, 2.73 ) }
    dend_35 { pt3dadd( 58.2453, -16.8061, 31.8583, 0.22 ) }
    dend_35 { pt3dadd( 59.1778, -17.1404, 32.1096, 0.52 ) }
    dend_35 { pt3dadd( 60.2974, -17.5775, 32.4324, 0.15 ) }
    dend_35 { pt3dadd( 60.8579, -17.8076, 32.6074, 0.52 ) }
    dend_35 { pt3dadd( 61.5811, -18.1117, 32.8455, 0.96 ) }
    dend_35 { pt3dadd( 63.2279, -18.8107, 33.4135, 0.22 ) }
    dend_35 { pt3dadd( 64.167, -19.195, 33.7564, 0.96 ) }
    dend_35 { pt3dadd( 65.1634, -19.5954, 34.1697, 2.29 ) }
    dend_35 { pt3dadd( 67.3028, -20.4121, 35.1014, 0.22 ) }
    dend_35 { pt3dadd( 67.8925, -20.6336, 35.366, 0.74 ) }
    dend_35 { pt3dadd( 68.8065, -20.9737, 35.7892, 1.11 ) }
    dend_35 { pt3dadd( 70.6031, -21.6342, 36.6425, 0.15 ) }
    dend_35 { pt3dadd( 71.6195, -22.006, 37.1206, 0.44 ) }
    dend_35 { pt3dadd( 72.4009, -22.2982, 37.4894, 1.25 ) }
    dend_35 { pt3dadd( 74.1268, -22.9432, 38.3752, 0.15 ) }
    dend_35 { pt3dadd( 74.6214, -23.131, 38.632, 0.15 ) }
    dend_35 { pt3dadd( 75.0563, -23.3023, 38.8574, 0.44 ) }
    dend_35 { pt3dadd( 75.6035, -23.5384, 39.1284, 0.66 ) }
    dend_35 { pt3dadd( 76.6413, -23.9732, 39.582, 0.15 ) }
    dend_35 { pt3dadd( 77.5392, -24.3307, 39.9592, 1.03 ) }
    dend_35 { pt3dadd( 78.338, -24.6365, 40.2579, 2.14 ) }
    dend_35 { pt3dadd( 80.0013, -25.2384, 40.8598, 0.15 ) }
    dend_35 { pt3dadd( 80.5263, -25.4148, 41.0716, 0.15 ) }
    dend_35 { pt3dadd( 81.3483, -25.6479, 41.4557, 0.15 ) }
    dend_35 { pt3dadd( 82.2171, -25.846, 41.9341, 0.15 ) }
    dend_35 { pt3dadd( 82.6295, -25.9191, 42.2028, 0.74 ) }
    dend_35 { pt3dadd( 83.4976, -26.0157, 42.8893, 1.92 ) }
    dend_35 { pt3dadd( 84.9815, -26.0927, 44.2761, 0.15 ) }
    dend_35 { pt3dadd( 85.9142, -26.1232, 45.2857, 0.59 ) }
    dend_35 { pt3dadd( 86.6481, -26.1471, 46.1806, 0.15 ) }
    dend_35 { pt3dadd( 87.3084, -26.1568, 47.0339, 1.03 ) }
    dend_35 { pt3dadd( 87.9818, -26.1636, 47.8999, 1.33 ) }
    dend_35 { pt3dadd( 89.1906, -26.1785, 49.4491, 0.15 ) }
    dend_35 { pt3dadd( 90.3284, -26.205, 50.8893, 0.15 ) }
    dend_35 { pt3dadd( 90.9767, -26.2518, 51.6832, 1.03 ) }
    dend_35 { pt3dadd( 91.8283, -26.3467, 52.6987, 1.77 ) }
    dend_35 { pt3dadd( 92.9262, -26.5228, 53.9875, 0.15 ) }
    dend_35 { pt3dadd( 93.8473, -26.7141, 55.0202, 0.15 ) }
    dend_35 { pt3dadd( 94.6062, -26.9004, 55.7587, 0.59 ) }
    dend_35 { pt3dadd( 95.5976, -27.1777, 56.6169, 0.15 ) }
    dend_35 { pt3dadd( 96.0839, -27.3278, 57.0213, 0.15 ) }
    dend_35 { pt3dadd( 96.6048, -27.5025, 57.441, 1.03 ) }
    dend_35 { pt3dadd( 97.322, -27.7224, 57.9907, 1.62 ) }
    dend_35 { pt3dadd( 99.2193, -28.2255, 59.3373, 0.15 ) }
    dend_35 { pt3dadd( 99.8889, -28.3651, 59.7943, 0.15 ) }
    dend_35 { pt3dadd( 100.61, -28.4682, 60.2792, 0.81 ) }
    dend_35 { pt3dadd( 101.57, -28.54, 60.9529, 1.62 ) }
    dend_35 { pt3dadd( 102.966, -28.5646, 61.9715, 0.07 ) }
    dend_35 { pt3dadd( 103.913, -28.5362, 62.7044, 0.07 ) }
    dend_35 { pt3dadd( 104.355, -28.4925, 63.0549, 0.59 ) }
    dend_35 { pt3dadd( 104.685, -28.4466, 63.3003, 0.59 ) }
    dend_35 { pt3dadd( 105.569, -28.2963, 63.942, 0.07 ) }
    dend_35 { pt3dadd( 106.228, -28.1768, 64.4036, 0.07 ) }
    dend_35 { pt3dadd( 106.575, -28.1119, 64.6376, 0.07 ) }
    dend_35 { pt3dadd( 107.192, -27.977, 65.0368, 0.59 ) }
    dend_35 { pt3dadd( 107.891, -27.8237, 65.4956, 1.33 ) }
    dend_35 { pt3dadd( 108.907, -27.62, 66.1567, 0.15 ) }
    dend_35 { pt3dadd( 109.635, -27.4837, 66.6515, 0.52 ) }
    dend_35 { pt3dadd( 110.334, -27.345, 67.1738, 0.07 ) }
    dend_35 { pt3dadd( 110.799, -27.2599, 67.5386, 0.22 ) }
    dend_35 { pt3dadd( 111.5, -27.1305, 68.1172, 0.07 ) }
    dend_35 { pt3dadd( 112.39, -26.9689, 68.9059, 0.66 ) }
    dend_35 { pt3dadd( 113.48, -26.7902, 69.9091, 0.22 ) }
    dend_35 { pt3dadd( 114.202, -26.6952, 70.563, 0.96 ) }
    dend_35 { pt3dadd( 114.956, -26.6577, 71.2739, 1.62 ) }
    dend_35 { pt3dadd( 116.415, -26.6521, 72.6532, 0.15 ) }
    dend_35 { pt3dadd( 117.235, -26.6553, 73.4261, 0.74 ) }
    dend_35 { pt3dadd( 117.988, -26.6639, 74.1308, 1.11 ) }
    dend_35 { pt3dadd( 119.274, -26.6978, 75.2777, 0.22 ) }
    dend_35 { pt3dadd( 121.054, -26.7771, 76.8077, 0.29 ) }
    dend_35 { pt3dadd( 121.484, -26.8017, 77.1559, 0.15 ) }
    dend_35 { pt3dadd( 121.829, -26.8363, 77.401, 0.15 ) }
    dend_35 { pt3dadd( 122.496, -26.8955, 77.8022, 0.22 ) }
    dend_35 { pt3dadd( 122.84, -26.909, 77.9837, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 123.663, -26.8683, 78.3301, 1.47 ) }
    dend_35 { pt3dadd( 124.47, -26.764, 78.6011, 1.18 ) }
    dend_35 { pt3dadd( 125.91, -26.5581, 79.1273, 0.15 ) }
    dend_35 { pt3dadd( 126.352, -26.4932, 79.3123, 0.37 ) }
    dend_35 { pt3dadd( 126.863, -26.4228, 79.5417, 0.37 ) }
    dend_35 { pt3dadd( 127.842, -26.2825, 79.978, 0.15 ) }
    dend_35 { pt3dadd( 128.621, -26.1472, 80.3456, 1.25 ) }
    dend_35 { pt3dadd( 129.044, -26.0637, 80.564, 1.25 ) }
    dend_35 { pt3dadd( 130.354, -25.7795, 81.2448, 0.15 ) }
    dend_35 { pt3dadd( 130.979, -25.6577, 81.5613, 0.15 ) }
    dend_35 { pt3dadd( 131.819, -25.5133, 81.959, 0.22 ) }
    dend_35 { pt3dadd( 132.672, -25.3789, 82.302, 0.15 ) }
    dend_35 { pt3dadd( 133.383, -25.2396, 82.5377, 0.22 ) }
    dend_35 { pt3dadd( 134.06, -25.0857, 82.7454, 0.96 ) }
    dend_35 { pt3dadd( 135.003, -24.8378, 83.0037, 1.62 ) }
    dend_35 { pt3dadd( 135.59, -24.6782, 83.1518, 1.33 ) }
    dend_35 { pt3dadd( 137.337, -24.2258, 83.5749, 0.15 ) }
    dend_35 { pt3dadd( 138.35, -23.9702, 83.7985, 0.15 ) }
    dend_35 { pt3dadd( 138.927, -23.8225, 83.9266, 0.66 ) }
    dend_35 { pt3dadd( 139.666, -23.6245, 84.0731, 1.11 ) }
    dend_35 { pt3dadd( 141.14, -23.2045, 84.3269, 0.15 ) }
    dend_35 { pt3dadd( 141.908, -22.9754, 84.4301, 0.44 ) }
    dend_35 { pt3dadd( 142.268, -22.8615, 84.461, 0.44 ) }
    dend_35 { pt3dadd( 143.257, -22.5732, 84.4977, 0.15 ) }
    dend_35 { pt3dadd( 144.437, -22.2533, 84.4964, 0.15 ) }
    dend_35 { pt3dadd( 144.827, -22.1457, 84.4884, 0.88 ) }
    dend_35 { pt3dadd( 145.838, -21.8575, 84.4211, 1.7 ) }
    dend_35 { pt3dadd( 147.209, -21.4777, 84.2872, 0.15 ) }
    dend_35 { pt3dadd( 147.956, -21.2801, 84.2147, 0.29 ) }
    dend_35 { pt3dadd( 148.706, -21.095, 84.1467, 0.07 ) }
    dend_35 { pt3dadd( 149.57, -20.9106, 84.1007, 0.22 ) }
    dend_35 { pt3dadd( 150.773, -20.6844, 84.0405, 0.15 ) }
    dend_35 { pt3dadd( 151.382, -20.5817, 84.015, 0.59 ) }
    dend_35 { pt3dadd( 152.31, -20.4408, 83.9826, 1.4 ) }
    dend_35 { pt3dadd( 152.936, -20.3522, 83.9681, 1.25 ) }
    dend_35 { pt3dadd( 154.702, -20.1659, 83.9461, 0.15 ) }
    dend_35 { pt3dadd( 155.689, -20.1076, 83.9481, 0.37 ) }
    dend_35 { pt3dadd( 156.606, -20.0794, 83.9718, 0.15 ) }
    dend_35 { pt3dadd( 157.365, -20.0705, 84.0239, 0.37 ) }
    dend_35 { pt3dadd( 157.824, -20.0736, 84.0947, 0.37 ) }
    dend_35 { pt3dadd( 158.472, -20.073, 84.2452, 0.88 ) }
    dend_35 { pt3dadd( 159.09, -20.0796, 84.4241, 1.62 ) }
    dend_35 { pt3dadd( 159.467, -20.0874, 84.5566, 1.62 ) }
    dend_35 { pt3dadd( 161.299, -20.1559, 85.2856, 0.07 ) }
    dend_35 { pt3dadd( 162.544, -20.2107, 85.8317, 0.07 ) }
    dend_35 { pt3dadd( 163.1, -20.2222, 86.1084, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 53.2891, 0.793599, -30.8563, 0.07 ) }
    dend_33 { pt3dadd( 63.5886, -1.06003, -39.0037, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 53.2891, 0.793599, -30.8563, 0.81 ) }
    dend_32 { pt3dadd( 57.4661, 0.399582, -34.4545, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 50/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -9.23807, 39.48, 51.2528, 0.07 ) }
    dend_29 { pt3dadd( -7.97233, 41.0626, 50.7065, 0.07 ) }
    dend_29 { pt3dadd( -7.15225, 42.1226, 50.2655, 0.07 ) }
    dend_29 { pt3dadd( -6.61135, 42.868, 49.941, 0.81 ) }
    dend_29 { pt3dadd( -5.85139, 44.009, 49.3951, 0.07 ) }
    dend_29 { pt3dadd( -5.52695, 44.5384, 49.1175, 0.15 ) }
    dend_29 { pt3dadd( -4.82594, 45.6822, 48.5176, 0.07 ) }
    dend_29 { pt3dadd( -4.49535, 46.2767, 48.1529, 0.66 ) }
    dend_29 { pt3dadd( -4.26054, 46.7581, 47.8223, 0.88 ) }
    dend_29 { pt3dadd( -3.77839, 47.874, 47.0469, 0.15 ) }
    dend_29 { pt3dadd( -3.51197, 48.6828, 46.4249, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.23807, 39.48, 51.2528, 0.07 ) }
    dend_28 { pt3dadd( -9.76297, 40.9477, 52.9001, 0.07 ) }
    dend_28 { pt3dadd( -10.1328, 42.0261, 54.1226, 0.07 ) }
    dend_28 { pt3dadd( -10.346, 42.8948, 55.1483, 0.07 ) }
    dend_28 { pt3dadd( -10.4865, 43.5983, 56.0787, 0.96 ) }
    dend_28 { pt3dadd( -10.5248, 43.8151, 56.4056, 0.96 ) }
    dend_28 { pt3dadd( -10.6568, 44.8291, 58.0712, 0.07 ) }
    dend_28 { pt3dadd( -10.6654, 45.4872, 59.291, 0.59 ) }
    dend_28 { pt3dadd( -10.5666, 46.4743, 61.2468, 0.22 ) }
    dend_28 { pt3dadd( -10.4346, 47.2506, 62.9086, 1.25 ) }
    dend_28 { pt3dadd( -10.2341, 48.2934, 65.3734, 0.22 ) }
    dend_28 { pt3dadd( -10.0839, 48.9802, 67.1116, 0.22 ) }
    dend_28 { pt3dadd( -9.88783, 49.7652, 69.1916, 0.22 ) }
    dend_28 { pt3dadd( -9.70993, 50.4675, 71.0608, 0.22 ) }
    dend_28 { pt3dadd( -9.61161, 50.9223, 72.294, 1.33 ) }
    dend_28 { pt3dadd( -9.37093, 52.0267, 75.1377, 0.15 ) }
    dend_28 { pt3dadd( -9.19427, 52.6525, 76.7008, 0.29 ) }
    dend_28 { pt3dadd( -8.99705, 53.3203, 78.3152, 0.29 ) }
    dend_28 { pt3dadd( -8.87542, 53.7288, 79.2105, 0.44 ) }
    dend_28 { pt3dadd( -8.44168, 54.924, 81.5612, 0.22 ) }
    dend_28 { pt3dadd( -7.98748, 55.9701, 83.4129, 0.22 ) }
    dend_28 { pt3dadd( -7.17769, 57.5581, 85.9859, 0.29 ) }
    dend_28 { pt3dadd( -7.03907, 57.8052, 86.3725, 1.11 ) }
    dend_28 { pt3dadd( -6.20372, 59.0752, 88.372, 0.29 ) }
    dend_28 { pt3dadd( -5.45611, 60.0394, 89.9623, 0.29 ) }
    dend_28 { pt3dadd( -5.19811, 60.3161, 90.4416, 0.29 ) }
    dend_28 { pt3dadd( -4.50725, 60.936, 91.8395, 0.29 ) }
    dend_28 { pt3dadd( -4.34228, 61.0561, 92.2427, 0.29 ) }
    dend_28 { pt3dadd( -3.82364, 61.3452, 93.7566, 0.29 ) }
    dend_28 { pt3dadd( -3.41472, 61.4819, 95.1491, 0.29 ) }
    dend_28 { pt3dadd( -3.1716, 61.537, 96.1006, 0.29 ) }
    dend_28 { pt3dadd( -2.61824, 61.6302, 98.0739, 0.29 ) }
    dend_28 { pt3dadd( -2.07174, 61.7014, 99.8695, 0.29 ) }
    dend_28 { pt3dadd( -1.48823, 61.7664, 101.765, 0.29 ) }
    dend_28 { pt3dadd( -0.978506, 61.8138, 103.463, 0.29 ) }
    dend_28 { pt3dadd( -0.242019, 61.9185, 105.88, 0.29 ) }
    dend_28 { pt3dadd( 0.469703, 62.0799, 108.19, 0.52 ) }
    dend_28 { pt3dadd( 0.963711, 62.2659, 109.781, 0.52 ) }
    dend_28 { pt3dadd( 1.32057, 62.4848, 111.016, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 1.54661, 62.7285, 111.921, 0.22 ) }
    dend_28 { pt3dadd( 2.10112, 63.6208, 114.505, 0.22 ) }
    dend_28 { pt3dadd( 2.37786, 64.3119, 116.155, 0.22 ) }
    dend_28 { pt3dadd( 2.60689, 65.1723, 118.022, 0.44 ) }
    dend_28 { pt3dadd( 2.83696, 66.1106, 119.94, 0.88 ) }
    dend_28 { pt3dadd( 3.32, 67.7735, 123.244, 0.15 ) }
    dend_28 { pt3dadd( 3.59548, 68.6216, 124.918, 0.15 ) }
    dend_28 { pt3dadd( 3.75839, 69.1839, 126.023, 0.22 ) }
    dend_28 { pt3dadd( 3.86786, 69.5657, 126.837, 0.22 ) }
    dend_28 { pt3dadd( 3.93197, 69.8323, 127.472, 0.22 ) }
    dend_28 { pt3dadd( 3.99557, 70.0806, 128.105, 0.22 ) }
    dend_28 { pt3dadd( 4.09913, 70.357, 128.834, 0.22 ) }
    dend_28 { pt3dadd( 4.27172, 70.8424, 129.978, 0.22 ) }
    dend_28 { pt3dadd( 4.51519, 71.5343, 131.7, 0.22 ) }
    dend_28 { pt3dadd( 4.59901, 71.7888, 132.385, 0.22 ) }
    dend_28 { pt3dadd( 4.83336, 72.3988, 134.104, 0.22 ) }
    dend_28 { pt3dadd( 5.15466, 73.0689, 135.998, 0.22 ) }
    dend_28 { pt3dadd( 5.35887, 73.3772, 136.856, 0.22 ) }
    dend_28 { pt3dadd( 5.82306, 73.9371, 138.286, 0.22 ) }
    dend_28 { pt3dadd( 6.32318, 74.5167, 139.575, 0.22 ) }
    dend_28 { pt3dadd( 6.80823, 75.0115, 140.7, 0.22 ) }
    dend_28 { pt3dadd( 7.36355, 75.5036, 141.889, 0.22 ) }
    dend_28 { pt3dadd( 8.25874, 76.2278, 143.502, 0.22 ) }
    dend_28 { pt3dadd( 8.94495, 76.7672, 144.573, 0.22 ) }
    dend_28 { pt3dadd( 9.53467, 77.3106, 145.364, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -105.454, 37.1607, 19.4812, 0.29 ) }
    dend_23 { pt3dadd( -106.793, 38.6235, 19.8111, 0.29 ) }
    dend_23 { pt3dadd( -108.114, 40.0039, 20.0806, 0.07 ) }
    dend_23 { pt3dadd( -108.534, 40.4343, 20.1555, 0.15 ) }
    dend_23 { pt3dadd( -109.149, 41.033, 20.2738, 0.07 ) }
    dend_23 { pt3dadd( -109.639, 41.4849, 20.3699, 0.29 ) }
    dend_23 { pt3dadd( -110.68, 42.4012, 20.5656, 0.07 ) }
    dend_23 { pt3dadd( -111.125, 42.7532, 20.6371, 0.37 ) }
    dend_23 { pt3dadd( -111.397, 42.9719, 20.6661, 0.37 ) }
    dend_23 { pt3dadd( -112.328, 43.7328, 20.7732, 0.07 ) }
    dend_23 { pt3dadd( -112.611, 43.9734, 20.8118, 0.15 ) }
    dend_23 { pt3dadd( -113.428, 44.7503, 20.9786, 0.07 ) }
    dend_23 { pt3dadd( -114.122, 45.5112, 21.1628, 0.07 ) }
    dend_23 { pt3dadd( -114.542, 46.1028, 21.3359, 0.74 ) }
    dend_23 { pt3dadd( -114.804, 46.5432, 21.4866, 0.74 ) }
    dend_23 { pt3dadd( -115.382, 47.7044, 21.911, 0.07 ) }
    dend_23 { pt3dadd( -115.795, 48.6849, 22.3538, 0.07 ) }
    dend_23 { pt3dadd( -115.977, 49.1775, 22.6426, 0.29 ) }
    dend_23 { pt3dadd( -116.442, 50.5031, 23.6632, 0.07 ) }
    dend_23 { pt3dadd( -116.714, 51.2964, 24.4244, 0.07 ) }
    dend_23 { pt3dadd( -116.877, 51.8024, 24.9882, 0.66 ) }
    dend_23 { pt3dadd( -117.205, 52.8195, 26.2398, 0.07 ) }
    dend_23 { pt3dadd( -117.529, 53.653, 27.3637, 0.29 ) }
    dend_23 { pt3dadd( -117.934, 54.6062, 28.7847, 0.22 ) }
    dend_23 { pt3dadd( -118.373, 55.5652, 30.2847, 1.33 ) }
    dend_23 { pt3dadd( -118.828, 56.5339, 31.8279, 0.07 ) }
    dend_23 { pt3dadd( -119.096, 57.1355, 32.8116, 0.44 ) }
    dend_23 { pt3dadd( -119.526, 58.2058, 34.5321, 0.15 ) }
    dend_23 { pt3dadd( -119.699, 58.7268, 35.3145, 0.15 ) }
    dend_23 { pt3dadd( -119.902, 59.5187, 36.402, 1.4 ) }
    dend_23 { pt3dadd( -120.154, 61.0173, 38.3416, 0.22 ) }
    dend_23 { pt3dadd( -120.274, 61.9285, 39.514, 0.15 ) }
    dend_23 { pt3dadd( -120.317, 62.6181, 40.3778, 0.22 ) }
    dend_23 { pt3dadd( -120.295, 63.6295, 41.5541, 1.7 ) }
    dend_23 { pt3dadd( -120.198, 65.3506, 43.4493, 0.07 ) }
    dend_23 { pt3dadd( -120.102, 66.0868, 44.2527, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 61/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -105.454, 37.1607, 19.4812, 0.96 ) }
    dend_20 { pt3dadd( -106.611, 37.2949, 19.7632, 0.96 ) }
    dend_20 { pt3dadd( -107.66, 37.3441, 19.9741, 0.07 ) }
    dend_20 { pt3dadd( -107.988, 37.3507, 20.0303, 0.07 ) }
    dend_20 { pt3dadd( -108.451, 37.353, 20.1069, 0.15 ) }
    dend_20 { pt3dadd( -108.633, 37.3539, 20.1369, 0.37 ) }
    dend_20 { pt3dadd( -109.093, 37.3561, 20.2131, 0.44 ) }
    dend_20 { pt3dadd( -110.113, 37.2818, 20.3688, 0.22 ) }
    dend_20 { pt3dadd( -110.695, 37.2171, 20.4238, 0.96 ) }
    dend_20 { pt3dadd( -111.237, 37.1779, 20.4747, 1.7 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 71/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 39.885, -141.679, 26.4292, 0.07 ) }
    dend_14 { pt3dadd( 39.7764, -143.478, 27.9675, 0.07 ) }
    dend_14 { pt3dadd( 39.6556, -144.395, 28.8456, 0.07 ) }
    dend_14 { pt3dadd( 39.637, -144.504, 28.9554, 0.59 ) }
    dend_14 { pt3dadd( 39.5468, -145.016, 29.46, 1.11 ) }
    dend_14 { pt3dadd( 39.3881, -145.976, 30.3638, 0.07 ) }
    dend_14 { pt3dadd( 39.3354, -146.416, 30.7525, 0.52 ) }
    dend_14 { pt3dadd( 39.1882, -148.241, 32.2194, 0.07 ) }
    dend_14 { pt3dadd( 39.1664, -148.612, 32.5041, 0.07 ) }
    dend_14 { pt3dadd( 39.1331, -149.044, 32.8163, 1.03 ) }
    dend_14 { pt3dadd( 39.0722, -149.545, 33.1603, 1.25 ) }
    dend_14 { pt3dadd( 38.787, -151.048, 34.2376, 0.15 ) }
    dend_14 { pt3dadd( 38.5416, -152.044, 34.9824, 0.15 ) }
    dend_14 { pt3dadd( 38.3698, -152.679, 35.4473, 1.03 ) }
    dend_14 { pt3dadd( 38.0034, -153.826, 36.2767, 0.07 ) }
    dend_14 { pt3dadd( 37.7315, -154.572, 36.815, 0.81 ) }
    dend_14 { pt3dadd( 36.9546, -156.48, 38.1753, 0.07 ) }
    dend_14 { pt3dadd( 36.6445, -157.179, 38.6402, 0.66 ) }
    dend_14 { pt3dadd( 36.4054, -157.731, 38.9862, 1.18 ) }
    dend_14 { pt3dadd( 35.8455, -159.104, 39.7957, 0.15 ) }
    dend_14 { pt3dadd( 35.5451, -159.947, 40.2226, 0.44 ) }
    dend_14 { pt3dadd( 35.4475, -160.273, 40.3466, 0.44 ) }
    dend_14 { pt3dadd( 35.0683, -161.813, 40.7837, 0.22 ) }
    dend_14 { pt3dadd( 34.8383, -162.928, 41.0806, 0.66 ) }
    dend_14 { pt3dadd( 34.6896, -163.775, 41.3112, 1.47 ) }
    dend_14 { pt3dadd( 34.5709, -164.681, 41.5487, 0.52 ) }
    dend_14 { pt3dadd( 34.4163, -165.878, 41.8997, 0.15 ) }
    dend_14 { pt3dadd( 34.2697, -167.1, 42.28, 0.15 ) }
    dend_14 { pt3dadd( 34.1846, -167.984, 42.561, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 34.1364, -168.575, 42.7379, 0.96 ) }
    dend_14 { pt3dadd( 34.0853, -169.145, 42.9199, 1.11 ) }
    dend_14 { pt3dadd( 33.8626, -171.363, 43.6552, 0.07 ) }
    dend_14 { pt3dadd( 33.811, -171.799, 43.7937, 0.07 ) }
    dend_14 { pt3dadd( 33.7296, -172.379, 43.9271, 0.52 ) }
    dend_14 { pt3dadd( 33.5303, -173.707, 44.1683, 0.07 ) }
    dend_14 { pt3dadd( 33.4017, -174.73, 44.2945, 0.07 ) }
    dend_14 { pt3dadd( 33.3716, -175.1, 44.3196, 0.22 ) }
    dend_14 { pt3dadd( 33.363, -175.441, 44.3157, 0.52 ) }
    dend_14 { pt3dadd( 33.3443, -176.837, 44.3123, 0.07 ) }
    dend_14 { pt3dadd( 33.3449, -177.131, 44.3145, 0.52 ) }
    dend_14 { pt3dadd( 33.3724, -177.842, 44.3284, 1.03 ) }
    dend_14 { pt3dadd( 33.4609, -179.426, 44.4102, 0.07 ) }
    dend_14 { pt3dadd( 33.4848, -179.875, 44.4603, 0.15 ) }
    dend_14 { pt3dadd( 33.5112, -180.466, 44.5541, 0.07 ) }
    dend_14 { pt3dadd( 33.5259, -180.787, 44.619, 0.44 ) }
    dend_14 { pt3dadd( 33.5388, -181.216, 44.7129, 0.81 ) }
    dend_14 { pt3dadd( 33.5411, -182.721, 45.0769, 0.22 ) }
    dend_14 { pt3dadd( 33.5344, -183.453, 45.2792, 0.81 ) }
    dend_14 { pt3dadd( 33.5177, -184.057, 45.4713, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.885, -141.679, 26.4292, 0.07 ) }
    dend_13 { pt3dadd( 40.1975, -143.715, 26.7634, 0.07 ) }
    dend_13 { pt3dadd( 40.2853, -144.22, 26.84, 0.22 ) }
    dend_13 { pt3dadd( 40.5578, -145.617, 27.0294, 0.07 ) }
    dend_13 { pt3dadd( 40.6296, -145.957, 27.0707, 0.15 ) }
    dend_13 { pt3dadd( 41.0717, -147.855, 27.2831, 0.07 ) }
    dend_13 { pt3dadd( 41.195, -148.362, 27.3315, 0.66 ) }
    dend_13 { pt3dadd( 41.3424, -148.875, 27.3666, 0.66 ) }
    dend_13 { pt3dadd( 41.6373, -149.816, 27.4237, 0.07 ) }
    dend_13 { pt3dadd( 41.8965, -150.567, 27.4599, 0.74 ) }
    dend_13 { pt3dadd( 42.1022, -151.149, 27.4861, 1.55 ) }
    dend_13 { pt3dadd( 42.6557, -152.787, 27.5452, 0.22 ) }
    dend_13 { pt3dadd( 43.1797, -154.332, 27.5717, 0.07 ) }
    dend_13 { pt3dadd( 43.3327, -154.776, 27.5568, 0.74 ) }
    dend_13 { pt3dadd( 43.6748, -155.715, 27.4674, 1.77 ) }
    dend_13 { pt3dadd( 44.2798, -157.206, 27.224, 0.22 ) }
    dend_13 { pt3dadd( 44.7301, -158.118, 26.9684, 0.22 ) }
    dend_13 { pt3dadd( 45.181, -158.819, 26.6265, 0.22 ) }
    dend_13 { pt3dadd( 45.8129, -159.589, 26.0552, 0.22 ) }
    dend_13 { pt3dadd( 46.272, -160.06, 25.629, 0.81 ) }
    dend_13 { pt3dadd( 46.8304, -160.547, 25.091, 1.55 ) }
    dend_13 { pt3dadd( 47.8983, -161.376, 24.0514, 0.22 ) }
    dend_13 { pt3dadd( 48.6492, -161.934, 23.2936, 0.66 ) }
    dend_13 { pt3dadd( 49.4066, -162.511, 22.4676, 1.25 ) }
    dend_13 { pt3dadd( 50.1215, -163.07, 21.6415, 0.22 ) }
    dend_13 { pt3dadd( 50.8814, -163.703, 20.6899, 0.22 ) }
    dend_13 { pt3dadd( 51.3957, -164.216, 19.9778, 0.22 ) }
    dend_13 { pt3dadd( 51.8785, -164.793, 19.2738, 0.22 ) }
    dend_13 { pt3dadd( 52.5056, -165.631, 18.3371, 0.29 ) }
    dend_13 { pt3dadd( 52.8149, -166.075, 17.8732, 1.03 ) }
    dend_13 { pt3dadd( 53.0289, -166.381, 17.5679, 1.92 ) }
    dend_13 { pt3dadd( 54.3439, -168.199, 15.9095, 0.22 ) }
    dend_13 { pt3dadd( 55.1547, -169.274, 15.029, 0.15 ) }
    dend_13 { pt3dadd( 55.6222, -169.903, 14.5841, 0.74 ) }
    dend_13 { pt3dadd( 56.0721, -170.533, 14.1837, 1.33 ) }
    dend_13 { pt3dadd( 56.8946, -171.719, 13.4738, 0.07 ) }
    dend_13 { pt3dadd( 57.1668, -172.105, 13.2548, 0.22 ) }
    dend_13 { pt3dadd( 57.5849, -172.675, 12.9901, 0.15 ) }
    dend_13 { pt3dadd( 57.8926, -173.105, 12.8194, 0.22 ) }
    dend_13 { pt3dadd( 58.4346, -173.909, 12.5119, 0.22 ) }
    dend_13 { pt3dadd( 58.7663, -174.455, 12.3023, 0.66 ) }
    dend_13 { pt3dadd( 59.0523, -174.969, 12.127, 1.18 ) }
    dend_13 { pt3dadd( 59.5343, -175.84, 11.8122, 0.15 ) }
    dend_13 { pt3dadd( 59.9974, -176.629, 11.5211, 0.15 ) }
    dend_13 { pt3dadd( 60.5614, -177.498, 11.214, 0.22 ) }
    dend_13 { pt3dadd( 60.9946, -178.144, 11.0185, 0.66 ) }
    dend_13 { pt3dadd( 61.5329, -178.916, 10.8033, 0.15 ) }
    dend_13 { pt3dadd( 62.417, -180.12, 10.5175, 0.22 ) }
    dend_13 { pt3dadd( 62.832, -180.657, 10.4178, 0.74 ) }
    dend_13 { pt3dadd( 63.3327, -181.281, 10.3452, 1.18 ) }
    dend_13 { pt3dadd( 64.3828, -182.53, 10.2663, 0.15 ) }
    dend_13 { pt3dadd( 64.8751, -183.126, 10.2446, 0.22 ) }
    dend_13 { pt3dadd( 65.5429, -184.009, 10.2398, 0.15 ) }
    dend_13 { pt3dadd( 65.8236, -184.423, 10.2584, 0.59 ) }
    dend_13 { pt3dadd( 65.9983, -184.714, 10.2711, 0.96 ) }
    dend_13 { pt3dadd( 66.2679, -185.24, 10.2882, 0.59 ) }
    dend_13 { pt3dadd( 66.6728, -186.097, 10.3112, 0.15 ) }
    dend_13 { pt3dadd( 66.9836, -186.767, 10.3284, 0.37 ) }
    dend_13 { pt3dadd( 67.5499, -187.98, 10.36, 0.15 ) }
    dend_13 { pt3dadd( 67.7428, -188.367, 10.3718, 0.52 ) }
    dend_13 { pt3dadd( 68.1083, -189.075, 10.3951, 0.88 ) }
    dend_13 { pt3dadd( 68.792, -190.301, 10.4425, 0.15 ) }
    dend_13 { pt3dadd( 69.1733, -190.932, 10.4709, 0.29 ) }
    dend_13 { pt3dadd( 69.5022, -191.455, 10.4962, 0.22 ) }
    dend_13 { pt3dadd( 69.7423, -191.861, 10.5138, 0.44 ) }
    dend_13 { pt3dadd( 70.0909, -192.46, 10.5389, 0.44 ) }
    dend_13 { pt3dadd( 70.8889, -193.845, 10.5959, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.47179, -34.7238, 11.8992, 0.29 ) }
    dend_8 { pt3dadd( -0.6008, -35.663, 11.516, 0.29 ) }
    dend_8 { pt3dadd( 0.177238, -36.7273, 11.071, 0.07 ) }
    dend_8 { pt3dadd( 0.464335, -37.1887, 10.8452, 0.29 ) }
    dend_8 { pt3dadd( 0.942563, -38.0633, 10.4185, 0.15 ) }
    dend_8 { pt3dadd( 1.23019, -38.6312, 10.1339, 0.52 ) }
    dend_8 { pt3dadd( 1.57558, -39.3747, 9.76782, 0.59 ) }
    dend_8 { pt3dadd( 2.14797, -40.7884, 9.11742, 0.15 ) }
    dend_8 { pt3dadd( 2.51925, -41.8464, 8.6436, 0.74 ) }
    dend_8 { pt3dadd( 2.80255, -42.7185, 8.24806, 1.99 ) }
    dend_8 { pt3dadd( 3.00219, -43.3596, 7.96788, 1.99 ) }
    dend_8 { pt3dadd( 3.61707, -45.2907, 7.17651, 0.15 ) }
    dend_8 { pt3dadd( 3.81675, -45.8559, 6.97198, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( 4.26459, -47.0429, 6.64779, 0.22 ) }
    dend_8 { pt3dadd( 4.40025, -47.3883, 6.57417, 0.81 ) }
    dend_8 { pt3dadd( 4.69102, -48.1152, 6.44432, 1.18 ) }
    dend_8 { pt3dadd( 4.97964, -48.8158, 6.34299, 0.59 ) }
    dend_8 { pt3dadd( 5.58551, -50.2308, 6.18229, 0.07 ) }
    dend_8 { pt3dadd( 5.94232, -51.0686, 6.1007, 0.07 ) }
    dend_8 { pt3dadd( 6.07652, -51.3682, 6.08417, 0.07 ) }
    dend_8 { pt3dadd( 6.4113, -52.0948, 6.04204, 0.29 ) }
    dend_8 { pt3dadd( 6.90208, -53.1541, 5.98357, 0.22 ) }
    dend_8 { pt3dadd( 7.31543, -54.0095, 5.9452, 0.96 ) }
    dend_8 { pt3dadd( 7.73803, -54.9045, 5.92702, 0.22 ) }
    dend_8 { pt3dadd( 8.34332, -56.306, 5.8816, 0.15 ) }
    dend_8 { pt3dadd( 8.84135, -57.5835, 5.83715, 0.15 ) }
    dend_8 { pt3dadd( 9.17047, -58.4923, 5.80973, 1.03 ) }
    dend_8 { pt3dadd( 9.54383, -59.6109, 5.79378, 2.14 ) }
    dend_8 { pt3dadd( 10.0447, -61.2448, 5.76205, 0.22 ) }
    dend_8 { pt3dadd( 10.4219, -62.6136, 5.7361, 0.22 ) }
    dend_8 { pt3dadd( 10.5851, -63.3317, 5.72801, 0.66 ) }
    dend_8 { pt3dadd( 10.7199, -64.0601, 5.71438, 0.96 ) }
    dend_8 { pt3dadd( 10.9195, -65.3579, 5.67359, 0.52 ) }
    dend_8 { pt3dadd( 11.0798, -66.7327, 5.6259, 0.22 ) }
    dend_8 { pt3dadd( 11.1947, -67.9513, 5.58278, 0.88 ) }
    dend_8 { pt3dadd( 11.3316, -69.8027, 5.53031, 0.22 ) }
    dend_8 { pt3dadd( 11.3789, -71.356, 5.50536, 0.15 ) }
    dend_8 { pt3dadd( 11.3667, -72.4179, 5.48664, 0.22 ) }
    dend_8 { pt3dadd( 11.2812, -74.1314, 5.4662, 0.15 ) }
    dend_8 { pt3dadd( 11.2222, -75.0429, 5.4688, 0.81 ) }
    dend_8 { pt3dadd( 11.1688, -75.8553, 5.48043, 0.81 ) }
    dend_8 { pt3dadd( 11.1161, -77.7615, 5.55481, 0.15 ) }
    dend_8 { pt3dadd( 11.1335, -78.9173, 5.68708, 0.22 ) }
    dend_8 { pt3dadd( 11.1784, -79.5764, 5.77235, 0.88 ) }
    dend_8 { pt3dadd( 11.2825, -80.4142, 5.87839, 1.84 ) }
    dend_8 { pt3dadd( 11.4524, -81.2998, 5.98456, 1.03 ) }
    dend_8 { pt3dadd( 11.8834, -83.0204, 6.12156, 0.22 ) }
    dend_8 { pt3dadd( 12.3391, -84.5541, 6.21291, 0.22 ) }
    dend_8 { pt3dadd( 12.6353, -85.5068, 6.21444, 0.22 ) }
    dend_8 { pt3dadd( 12.8726, -86.3255, 6.18136, 0.81 ) }
    dend_8 { pt3dadd( 13.1454, -87.2977, 6.11771, 1.47 ) }
    dend_8 { pt3dadd( 13.6555, -89.1841, 5.93031, 0.37 ) }
    dend_8 { pt3dadd( 13.9447, -90.3304, 5.7491, 0.44 ) }
    dend_8 { pt3dadd( 14.3823, -92.0215, 5.39003, 0.74 ) }
    dend_8 { pt3dadd( 14.7847, -93.702, 5.111, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.47179, -34.7238, 11.8992, 0.22 ) }
    dend_7 { pt3dadd( -2.32111, -37.1029, 13.4725, 0.22 ) }
    dend_7 { pt3dadd( -2.62927, -37.9501, 14.0962, 0.66 ) }
    dend_7 { pt3dadd( -2.98955, -38.9621, 14.8549, 1.03 ) }
    dend_7 { pt3dadd( -3.36983, -40.0895, 15.6892, 0.22 ) }
    dend_7 { pt3dadd( -3.66671, -40.9901, 16.3335, 0.22 ) }
    dend_7 { pt3dadd( -3.95557, -41.9236, 16.965, 0.37 ) }
    dend_7 { pt3dadd( -4.20732, -42.9071, 17.603, 0.37 ) }
    dend_7 { pt3dadd( -4.38615, -43.5677, 18.0118, 0.88 ) }
    dend_7 { pt3dadd( -4.52735, -44.09, 18.3137, 1.92 ) }
    dend_7 { pt3dadd( -4.70728, -44.8006, 18.6898, 2.14 ) }
    dend_7 { pt3dadd( -5.10676, -46.5556, 19.5769, 0.22 ) }
    dend_7 { pt3dadd( -5.42058, -48.0088, 20.3246, 0.22 ) }
    dend_7 { pt3dadd( -5.59879, -48.8525, 20.7792, 0.88 ) }
    dend_7 { pt3dadd( -5.76335, -49.6443, 21.2604, 1.7 ) }
    dend_7 { pt3dadd( -5.91695, -50.4259, 21.7922, 2.06 ) }
    dend_7 { pt3dadd( -6.27232, -52.4036, 23.2816, 0.29 ) }
    dend_7 { pt3dadd( -6.45053, -53.5643, 24.1973, 0.29 ) }
    dend_7 { pt3dadd( -6.55866, -54.4675, 24.9245, 0.81 ) }
    dend_7 { pt3dadd( -6.63098, -55.3022, 25.5526, 1.25 ) }
    dend_7 { pt3dadd( -6.81325, -57.1362, 26.8277, 0.15 ) }
    dend_7 { pt3dadd( -6.89457, -57.9106, 27.3036, 0.15 ) }
    dend_7 { pt3dadd( -6.96959, -58.6217, 27.6812, 0.88 ) }
    dend_7 { pt3dadd( -7.0922, -59.8365, 28.2352, 2.43 ) }
    dend_7 { pt3dadd( -7.28762, -61.7913, 28.9984, 0.66 ) }
    dend_7 { pt3dadd( -7.50318, -63.8432, 29.6785, 0.29 ) }
    dend_7 { pt3dadd( -7.59866, -64.8322, 29.9654, 0.88 ) }
    dend_7 { pt3dadd( -7.74469, -66.595, 30.4559, 0.22 ) }
    dend_7 { pt3dadd( -7.78981, -67.1834, 30.6392, 0.52 ) }
    dend_7 { pt3dadd( -7.81908, -67.9214, 30.8783, 0.88 ) }
    dend_7 { pt3dadd( -7.80872, -68.656, 31.1439, 0.37 ) }
    dend_7 { pt3dadd( -7.72504, -69.6233, 31.5051, 0.15 ) }
    dend_7 { pt3dadd( -7.63256, -70.6351, 31.8968, 0.52 ) }
    dend_7 { pt3dadd( -7.53545, -71.7638, 32.3443, 0.15 ) }
    dend_7 { pt3dadd( -7.47549, -72.6514, 32.7198, 0.15 ) }
    dend_7 { pt3dadd( -7.46122, -73.0698, 32.9114, 0.66 ) }
    dend_7 { pt3dadd( -7.46154, -73.6309, 33.1752, 0.96 ) }
    dend_7 { pt3dadd( -7.49673, -75.1894, 33.9304, 0.22 ) }
    dend_7 { pt3dadd( -7.52474, -76.1792, 34.4144, 1.25 ) }
    dend_7 { pt3dadd( -7.54962, -76.8162, 34.723, 2.43 ) }
    dend_7 { pt3dadd( -7.58706, -77.5388, 35.091, 1.99 ) }
    dend_7 { pt3dadd( -7.69369, -79.4274, 36.0895, 0.22 ) }
    dend_7 { pt3dadd( -7.76119, -80.6806, 36.7713, 0.07 ) }
    dend_7 { pt3dadd( -7.81562, -81.5218, 37.245, 0.96 ) }
    dend_7 { pt3dadd( -7.97377, -83.0756, 38.1355, 0.15 ) }
    dend_7 { pt3dadd( -8.07525, -83.688, 38.4899, 0.15 ) }
    dend_7 { pt3dadd( -8.23262, -84.2911, 38.8432, 0.88 ) }
    dend_7 { pt3dadd( -8.55921, -85.0125, 39.2869, 1.47 ) }
    dend_7 { pt3dadd( -9.56356, -86.491, 40.1873, 0.15 ) }
    dend_7 { pt3dadd( -10.0796, -87.0422, 40.5194, 0.22 ) }
    dend_7 { pt3dadd( -10.9103, -87.7062, 40.9123, 0.22 ) }
    dend_7 { pt3dadd( -11.687, -88.223, 41.2145, 0.37 ) }
    dend_7 { pt3dadd( -12.7104, -88.8061, 41.5562, 0.81 ) }
    dend_7 { pt3dadd( -13.6907, -89.3041, 41.8185, 1.25 ) }
    dend_7 { pt3dadd( -14.6256, -89.7446, 42.0135, 0.22 ) }
    dend_7 { pt3dadd( -15.7962, -90.3193, 42.2385, 0.22 ) }
    dend_7 { pt3dadd( -16.7807, -90.8211, 42.4226, 0.66 ) }
    dend_7 { pt3dadd( -17.6423, -91.282, 42.5743, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( -19.0077, -92.0472, 42.8342, 0.15 ) }
    dend_7 { pt3dadd( -19.3427, -92.2453, 42.9056, 0.37 ) }
    dend_7 { pt3dadd( -20.4431, -92.9323, 43.1484, 0.15 ) }
    dend_7 { pt3dadd( -21.2593, -93.4631, 43.3113, 0.66 ) }
    dend_7 { pt3dadd( -21.798, -93.8551, 43.4011, 1.18 ) }
    dend_7 { pt3dadd( -23.4279, -95.0751, 43.7152, 0.29 ) }
    dend_7 { pt3dadd( -24.7849, -96.1119, 44.0313, 0.15 ) }
    dend_7 { pt3dadd( -25.1621, -96.4225, 44.1377, 0.74 ) }
    dend_7 { pt3dadd( -25.8908, -97.0639, 44.3751, 1.7 ) }
    dend_7 { pt3dadd( -27.737, -98.768, 45.0776, 0.22 ) }
    dend_7 { pt3dadd( -29.2342, -100.247, 45.7831, 0.22 ) }
    dend_7 { pt3dadd( -30.1531, -101.235, 46.3056, 1.18 ) }
    dend_7 { pt3dadd( -31.4116, -102.662, 47.1644, 0.07 ) }
    dend_7 { pt3dadd( -31.88, -103.239, 47.5448, 0.29 ) }
    dend_7 { pt3dadd( -32.645, -104.287, 48.3245, 0.66 ) }
    dend_7 { pt3dadd( -33.2291, -105.191, 49.0959, 0.15 ) }
    dend_7 { pt3dadd( -33.4601, -105.617, 49.4575, 0.29 ) }
    dend_7 { pt3dadd( -33.7611, -106.204, 49.987, 0.37 ) }
    dend_7 { pt3dadd( -34.1109, -106.882, 50.6724, 1.11 ) }
    dend_7 { pt3dadd( -34.5584, -107.747, 51.6656, 0.29 ) }
    dend_7 { pt3dadd( -35.0268, -108.687, 52.872, 0.88 ) }
    dend_7 { pt3dadd( -35.6441, -109.893, 54.6559, 0.15 ) }
    dend_7 { pt3dadd( -35.9459, -110.474, 55.6784, 1.11 ) }
    dend_7 { pt3dadd( -36.4046, -111.348, 57.4783, 0.66 ) }
    dend_7 { pt3dadd( -36.8747, -112.184, 59.4051, 0.22 ) }
    dend_7 { pt3dadd( -37.1339, -112.677, 60.563, 0.96 ) }
    dend_7 { pt3dadd( -37.5301, -113.506, 62.5143, 0.88 ) }
    dend_7 { pt3dadd( -38.0066, -114.421, 64.7184, 0.22 ) }
    dend_7 { pt3dadd( -38.3567, -115.038, 66.181, 0.74 ) }
    dend_7 { pt3dadd( -38.641, -115.525, 67.2906, 1.03 ) }
    dend_7 { pt3dadd( -39.2294, -116.536, 69.4486, 0.15 ) }
    dend_7 { pt3dadd( -39.6829, -117.335, 71.0567, 1.33 ) }
    dend_7 { pt3dadd( -40.5069, -118.86, 73.9378, 0.37 ) }
    dend_7 { pt3dadd( -40.8858, -119.615, 75.29, 0.37 ) }
    dend_7 { pt3dadd( -41.1887, -120.266, 76.4023, 0.22 ) }
    dend_7 { pt3dadd( -41.3294, -120.583, 76.9382, 0.74 ) }
    dend_7 { pt3dadd( -41.7554, -121.563, 78.5134, 0.22 ) }
    dend_7 { pt3dadd( -42.019, -122.253, 79.4622, 0.52 ) }
    dend_7 { pt3dadd( -42.165, -122.758, 80.0197, 1.11 ) }
    dend_7 { pt3dadd( -42.5209, -123.905, 81.129, 0.07 ) }
    dend_7 { pt3dadd( -42.7405, -124.572, 81.6984, 0.15 ) }
    dend_7 { pt3dadd( -42.9597, -125.235, 82.205, 0.66 ) }
    dend_7 { pt3dadd( -43.2637, -126.213, 82.8137, 0.07 ) }
    dend_7 { pt3dadd( -43.394, -126.639, 83.0565, 0.22 ) }
    dend_7 { pt3dadd( -43.6331, -127.358, 83.4684, 0.07 ) }
    dend_7 { pt3dadd( -43.8784, -128.013, 83.8292, 1.03 ) }
    dend_7 { pt3dadd( -44.1278, -128.663, 84.1747, 1.4 ) }
    dend_7 { pt3dadd( -44.7113, -130.209, 84.9737, 0.22 ) }
    dend_7 { pt3dadd( -45.1948, -131.465, 85.6268, 0.07 ) }
    dend_7 { pt3dadd( -45.5197, -132.273, 86.0562, 0.59 ) }
    dend_7 { pt3dadd( -46.0504, -133.537, 86.7604, 0.07 ) }
    dend_7 { pt3dadd( -46.3987, -134.298, 87.2152, 0.15 ) }
    dend_7 { pt3dadd( -46.8148, -135.083, 87.7085, 1.18 ) }
    dend_7 { pt3dadd( -47.274, -135.876, 88.2126, 0.15 ) }
    dend_7 { pt3dadd( -47.7533, -136.611, 88.7314, 0.88 ) }
    dend_7 { pt3dadd( -48.4388, -137.587, 89.4644, 0.07 ) }
    dend_7 { pt3dadd( -48.8397, -138.12, 89.896, 0.44 ) }
    dend_7 { pt3dadd( -49.7921, -139.225, 90.8696, 0.15 ) }
    dend_7 { pt3dadd( -50.4664, -139.935, 91.5419, 0.96 ) }
    dend_7 { pt3dadd( -51.8735, -141.358, 92.9381, 0.29 ) }
    dend_7 { pt3dadd( -52.3748, -141.857, 93.4238, 0.15 ) }
    dend_7 { pt3dadd( -52.7764, -142.264, 93.7841, 0.52 ) }
    dend_7 { pt3dadd( -53.7697, -143.324, 94.6347, 0.37 ) }
    dend_7 { pt3dadd( -54.6066, -144.318, 95.3402, 1.25 ) }
    dend_7 { pt3dadd( -55.198, -145.113, 95.824, 0.07 ) }
    dend_7 { pt3dadd( -55.5555, -145.68, 96.1181, 0.22 ) }
    dend_7 { pt3dadd( -56.2797, -146.96, 96.754, 0.07 ) }
    dend_7 { pt3dadd( -56.4767, -147.365, 96.9455, 0.59 ) }
    dend_7 { pt3dadd( -56.8126, -148.173, 97.3079, 1.33 ) }
    dend_7 { pt3dadd( -57.5007, -149.96, 98.0891, 0.07 ) }
    dend_7 { pt3dadd( -57.9862, -151.28, 98.6876, 0.07 ) }
    dend_7 { pt3dadd( -58.2163, -151.914, 99.0129, 0.59 ) }
    dend_7 { pt3dadd( -58.5281, -152.796, 99.5316, 0.15 ) }
    dend_7 { pt3dadd( -58.8316, -153.602, 100.039, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -35.6572, -87.921, 17.0019, 0.22 ) }
    dend_5 { pt3dadd( -36.6325, -88.9493, 17.6436, 0.22 ) }
    dend_5 { pt3dadd( -37.3069, -89.6866, 17.9899, 0.22 ) }
    dend_5 { pt3dadd( -37.5922, -89.9687, 18.096, 0.15 ) }
    dend_5 { pt3dadd( -37.9933, -90.356, 18.2423, 0.44 ) }
    dend_5 { pt3dadd( -38.3706, -90.7158, 18.3832, 0.96 ) }
    dend_5 { pt3dadd( -38.7604, -91.0855, 18.5298, 1.11 ) }
    dend_5 { pt3dadd( -39.5722, -91.8521, 18.7964, 0.29 ) }
    dend_5 { pt3dadd( -40.7239, -92.9863, 19.2056, 0.22 ) }
    dend_5 { pt3dadd( -41.1597, -93.402, 19.3541, 0.59 ) }
    dend_5 { pt3dadd( -41.4563, -93.6739, 19.4535, 0.96 ) }
    dend_5 { pt3dadd( -41.9008, -94.0697, 19.6133, 0.96 ) }
    dend_5 { pt3dadd( -42.5554, -94.6397, 19.8688, 0.22 ) }
    dend_5 { pt3dadd( -43.1263, -95.1421, 20.1172, 0.22 ) }
    dend_5 { pt3dadd( -43.8762, -95.8541, 20.4788, 0.22 ) }
    dend_5 { pt3dadd( -44.2029, -96.1656, 20.6464, 0.52 ) }
    dend_5 { pt3dadd( -44.7508, -96.6994, 20.9558, 1.33 ) }
    dend_5 { pt3dadd( -45.3912, -97.33, 21.3488, 0.22 ) }
    dend_5 { pt3dadd( -45.9348, -97.8747, 21.6989, 0.52 ) }
    dend_5 { pt3dadd( -46.6253, -98.6026, 22.1922, 0.15 ) }
    dend_5 { pt3dadd( -47.1091, -99.1663, 22.5689, 0.15 ) }
    dend_5 { pt3dadd( -47.3848, -99.506, 22.7828, 0.22 ) }
    dend_5 { pt3dadd( -47.5137, -99.6853, 22.8901, 0.37 ) }
    dend_5 { pt3dadd( -47.8352, -100.162, 23.1783, 0.81 ) }
    dend_5 { pt3dadd( -48.2472, -100.826, 23.5949, 0.15 ) }
    dend_5 { pt3dadd( -48.3634, -101.035, 23.7329, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -48.5277, -101.366, 23.9558, 0.15 ) }
    dend_5 { pt3dadd( -48.8289, -101.921, 24.3732, 0.22 ) }
    dend_5 { pt3dadd( -49.1325, -102.427, 24.833, 0.15 ) }
    dend_5 { pt3dadd( -49.3804, -102.775, 25.2174, 0.15 ) }
    dend_5 { pt3dadd( -49.5714, -102.986, 25.4998, 0.44 ) }
    dend_5 { pt3dadd( -49.8484, -103.243, 25.8923, 0.66 ) }
    dend_5 { pt3dadd( -50.586, -103.869, 26.961, 0.22 ) }
    dend_5 { pt3dadd( -51.1136, -104.303, 27.7169, 0.74 ) }
    dend_5 { pt3dadd( -51.6678, -104.749, 28.5136, 1.7 ) }
    dend_5 { pt3dadd( -52.4541, -105.375, 29.6453, 0.22 ) }
    dend_5 { pt3dadd( -52.8817, -105.724, 30.2743, 0.15 ) }
    dend_5 { pt3dadd( -53.3419, -106.098, 30.9702, 0.52 ) }
    dend_5 { pt3dadd( -53.6, -106.306, 31.3786, 0.66 ) }
    dend_5 { pt3dadd( -54.156, -106.732, 32.2231, 0.22 ) }
    dend_5 { pt3dadd( -54.6221, -107.065, 32.9051, 0.37 ) }
    dend_5 { pt3dadd( -55.0513, -107.335, 33.4906, 0.22 ) }
    dend_5 { pt3dadd( -55.4511, -107.532, 33.9717, 0.37 ) }
    dend_5 { pt3dadd( -55.8438, -107.674, 34.3691, 0.37 ) }
    dend_5 { pt3dadd( -56.2537, -107.798, 34.763, 0.15 ) }
    dend_5 { pt3dadd( -56.8734, -107.997, 35.3094, 0.15 ) }
    dend_5 { pt3dadd( -57.1323, -108.081, 35.5211, 0.74 ) }
    dend_5 { pt3dadd( -57.8519, -108.347, 36.0658, 1.55 ) }
    dend_5 { pt3dadd( -59.005, -108.846, 36.9338, 0.07 ) }
    dend_5 { pt3dadd( -59.8141, -109.252, 37.5579, 0.15 ) }
    dend_5 { pt3dadd( -60.431, -109.605, 38.0499, 0.07 ) }
    dend_5 { pt3dadd( -60.6346, -109.743, 38.2191, 0.44 ) }
    dend_5 { pt3dadd( -60.928, -109.975, 38.4785, 0.44 ) }
    dend_5 { pt3dadd( -61.5802, -110.578, 39.0877, 0.22 ) }
    dend_5 { pt3dadd( -62.0029, -111.031, 39.5004, 0.88 ) }
    dend_5 { pt3dadd( -62.3113, -111.385, 39.7865, 1.47 ) }
    dend_5 { pt3dadd( -63.1272, -112.385, 40.5505, 0.07 ) }
    dend_5 { pt3dadd( -63.559, -112.94, 40.9483, 0.07 ) }
    dend_5 { pt3dadd( -63.6933, -113.122, 41.0688, 0.29 ) }
    dend_5 { pt3dadd( -64.0817, -113.671, 41.3808, 0.81 ) }
    dend_5 { pt3dadd( -64.6246, -114.428, 41.7595, 0.07 ) }
    dend_5 { pt3dadd( -65.1054, -115.093, 42.044, 0.07 ) }
    dend_5 { pt3dadd( -65.6273, -115.827, 42.2717, 0.07 ) }
    dend_5 { pt3dadd( -65.8251, -116.115, 42.3465, 0.59 ) }
    dend_5 { pt3dadd( -66.1216, -116.554, 42.4522, 0.96 ) }
    dend_5 { pt3dadd( -66.8368, -117.657, 42.7125, 0.15 ) }
    dend_5 { pt3dadd( -67.1747, -118.21, 42.8419, 0.88 ) }
    dend_5 { pt3dadd( -67.9856, -119.554, 43.1649, 0.07 ) }
    dend_5 { pt3dadd( -68.3126, -120.131, 43.3252, 0.37 ) }
    dend_5 { pt3dadd( -68.3426, -120.187, 43.3439, 0.37 ) }
    dend_5 { pt3dadd( -68.77, -121.096, 43.6947, 0.07 ) }
    dend_5 { pt3dadd( -69.022, -121.742, 43.9917, 0.88 ) }
    dend_5 { pt3dadd( -69.3842, -122.79, 44.5559, 0.07 ) }
    dend_5 { pt3dadd( -69.5929, -123.5, 44.9706, 0.07 ) }
    dend_5 { pt3dadd( -69.6774, -123.836, 45.1636, 0.29 ) }
    dend_5 { pt3dadd( -69.7406, -124.105, 45.3181, 0.29 ) }
    dend_5 { pt3dadd( -69.9587, -125.073, 45.8745, 0.07 ) }
    dend_5 { pt3dadd( -70.127, -125.735, 46.2563, 0.81 ) }
    dend_5 { pt3dadd( -70.2507, -126.166, 46.4987, 1.4 ) }
    dend_5 { pt3dadd( -70.9514, -128.236, 47.6986, 0.07 ) }
    dend_5 { pt3dadd( -71.1431, -128.738, 48.0051, 0.74 ) }
    dend_5 { pt3dadd( -71.307, -129.126, 48.2487, 0.74 ) }
    dend_5 { pt3dadd( -71.8366, -130.288, 49.0084, 0.07 ) }
    dend_5 { pt3dadd( -72.0487, -130.717, 49.3023, 0.22 ) }
    dend_5 { pt3dadd( -72.5055, -131.54, 49.9135, 0.07 ) }
    dend_5 { pt3dadd( -72.821, -132.038, 50.3313, 0.81 ) }
    dend_5 { pt3dadd( -73.0326, -132.378, 50.6405, 1.25 ) }
    dend_5 { pt3dadd( -73.5826, -133.263, 51.5597, 0.22 ) }
    dend_5 { pt3dadd( -73.8501, -133.681, 52.0347, 0.07 ) }
    dend_5 { pt3dadd( -74.0498, -133.987, 52.3937, 0.44 ) }
    dend_5 { pt3dadd( -74.7429, -134.988, 53.5958, 0.07 ) }
    dend_5 { pt3dadd( -75.1781, -135.593, 54.362, 1.03 ) }
    dend_5 { pt3dadd( -75.7147, -136.321, 55.3548, 0.07 ) }
    dend_5 { pt3dadd( -75.941, -136.615, 55.7887, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -35.6572, -87.921, 17.0019, 0.07 ) }
    dend_2 { pt3dadd( -35.9717, -88.5723, 17.0755, 0.07 ) }
    dend_2 { pt3dadd( -36.2101, -89.0327, 17.141, 0.29 ) }
    dend_2 { pt3dadd( -36.5822, -89.6719, 17.2549, 0.15 ) }
    dend_2 { pt3dadd( -36.8428, -90.0707, 17.3348, 0.15 ) }
    dend_2 { pt3dadd( -37.1877, -90.5636, 17.4365, 0.74 ) }
    dend_2 { pt3dadd( -37.3255, -90.7583, 17.4725, 0.74 ) }
    dend_2 { pt3dadd( -37.9597, -91.6275, 17.5867, 0.15 ) }
    dend_2 { pt3dadd( -38.4144, -92.2609, 17.6298, 0.15 ) }
    dend_2 { pt3dadd( -38.7052, -92.693, 17.6302, 0.29 ) }
    dend_2 { pt3dadd( -39.0708, -93.2697, 17.5935, 0.15 ) }
    dend_2 { pt3dadd( -39.3181, -93.7183, 17.533, 0.29 ) }
    dend_2 { pt3dadd( -39.6757, -94.5413, 17.3858, 0.07 ) }
    dend_2 { pt3dadd( -39.7632, -94.8185, 17.3233, 0.52 ) }
    dend_2 { pt3dadd( -39.8446, -95.1655, 17.241, 0.88 ) }
    dend_2 { pt3dadd( -39.9395, -95.6866, 17.1406, 0.88 ) }
    dend_2 { pt3dadd( -40.1074, -96.6606, 17.019, 0.07 ) }
    dend_2 { pt3dadd( -40.2299, -97.336, 16.9756, 0.07 ) }
    dend_2 { pt3dadd( -40.3137, -97.747, 16.97, 0.29 ) }
    dend_2 { pt3dadd( -40.4042, -98.1452, 16.9716, 0.74 ) }
    dend_2 { pt3dadd( -40.5923, -98.8425, 16.9843, 0.22 ) }
    dend_2 { pt3dadd( -41.0127, -100.174, 16.9856, 0.22 ) }
    dend_2 { pt3dadd( -41.1617, -100.555, 16.9821, 0.59 ) }
    dend_2 { pt3dadd( -41.3471, -100.954, 16.9714, 1.11 ) }
    dend_2 { pt3dadd( -41.4382, -101.135, 16.9602, 1.25 ) }
    dend_2 { pt3dadd( -41.7535, -101.737, 16.8962, 0.74 ) }
    dend_2 { pt3dadd( -42.1422, -102.457, 16.78, 0.22 ) }
    dend_2 { pt3dadd( -42.4737, -103.074, 16.6542, 0.15 ) }
    dend_2 { pt3dadd( -42.7626, -103.635, 16.5265, 0.15 ) }
    dend_2 { pt3dadd( -42.9648, -104.048, 16.4289, 0.15 ) }
    dend_2 { pt3dadd( -43.1945, -104.529, 16.3227, 0.15 ) }
    dend_2 { pt3dadd( -43.4012, -104.967, 16.2243, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -43.7353, -105.677, 16.0754, 0.22 ) }
    dend_2 { pt3dadd( -43.9728, -106.192, 15.9643, 0.74 ) }
    dend_2 { pt3dadd( -44.1897, -106.68, 15.839, 1.25 ) }
    dend_2 { pt3dadd( -44.5143, -107.441, 15.6336, 0.22 ) }
    dend_2 { pt3dadd( -44.8644, -108.317, 15.3855, 0.15 ) }
    dend_2 { pt3dadd( -44.9878, -108.655, 15.2898, 0.74 ) }
    dend_2 { pt3dadd( -45.1482, -109.16, 15.1568, 0.88 ) }
    dend_2 { pt3dadd( -45.5276, -110.49, 14.7969, 0.15 ) }
    dend_2 { pt3dadd( -45.7208, -111.272, 14.5726, 0.15 ) }
    dend_2 { pt3dadd( -45.7733, -111.539, 14.4931, 0.29 ) }
    dend_2 { pt3dadd( -45.8532, -112.085, 14.3412, 0.37 ) }
    dend_2 { pt3dadd( -45.9398, -112.692, 14.1731, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_46 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -9.56781, -31.0887, -13.7135, 0.66 ) }
    dend_66 { pt3dadd( -8.80019, -32.2714, -13.3917, 0.66 ) }
    dend_66 { pt3dadd( -7.99867, -33.2393, -13.2308, 0.29 ) }
    dend_66 { pt3dadd( -7.60169, -33.7098, -13.1802, 0.29 ) }
    dend_66 { pt3dadd( -7.11913, -34.3371, -13.1315, 0.66 ) }
    dend_66 { pt3dadd( -6.32693, -35.4642, -13.0101, 0.81 ) }
    dend_66 { pt3dadd( -5.46191, -36.773, -12.8465, 0.37 ) }
    dend_66 { pt3dadd( -4.75641, -37.7829, -12.7255, 0.37 ) }
    dend_66 { pt3dadd( -4.17009, -38.649, -12.5937, 0.22 ) }
    dend_66 { pt3dadd( -3.63236, -39.4943, -12.4567, 0.29 ) }
    dend_66 { pt3dadd( -3.03498, -40.5626, -12.2338, 0.29 ) }
    dend_66 { pt3dadd( -2.78989, -41.1146, -12.0764, 1.4 ) }
    dend_66 { pt3dadd( -2.57454, -41.7444, -11.8247, 2.58 ) }
    dend_66 { pt3dadd( -2.26264, -42.9394, -11.2031, 2.58 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 26/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -9.56781, -31.0887, -13.7135, 0.59 ) }
    dend_47 { pt3dadd( -9.28564, -31.3336, -14.1948, 0.59 ) }
    dend_47 { pt3dadd( -8.7146, -31.6629, -15.0086, 0.59 ) }
    dend_47 { pt3dadd( -8.14187, -31.9041, -15.806, 0.59 ) }
    dend_47 { pt3dadd( -7.87479, -31.9892, -16.2261, 0.59 ) }
    dend_47 { pt3dadd( -7.36654, -32.1319, -17.1683, 0.44 ) }
    dend_47 { pt3dadd( -6.85841, -32.2745, -18.1103, 0.44 ) }
    dend_47 { pt3dadd( -6.45068, -32.3524, -18.7633, 0.74 ) }
    dend_47 { pt3dadd( -6.07657, -32.3638, -19.3036, 0.74 ) }
    dend_47 { pt3dadd( -5.54883, -32.2719, -20.1125, 0.22 ) }
    dend_47 { pt3dadd( -5.26235, -32.1453, -20.6965, 0.37 ) }
    dend_47 { pt3dadd( 0.997411, -33.7814, -26.5189, 0.37 ) }
    dend_47 { pt3dadd( 6.51172, -34.7286, -33.1918, 0.37 ) }
    dend_47 { pt3dadd( 11.2389, -34.4646, -40.4993, 0.37 ) }
    dend_47 { pt3dadd( 15.0535, -34.2319, -48.323, 0.37 ) }
    dend_47 { pt3dadd( 18.1949, -33.9788, -56.4395, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 163.1, -20.2222, 86.1084, 0.07 ) }
    dend_41 { pt3dadd( 163.353, -19.2714, 86.3553, 0.07 ) }
    dend_41 { pt3dadd( 163.549, -18.5745, 86.5945, 0.22 ) }
    dend_41 { pt3dadd( 163.901, -17.4275, 87.0341, 0.07 ) }
    dend_41 { pt3dadd( 164.049, -16.995, 87.2177, 0.59 ) }
    dend_41 { pt3dadd( 164.186, -16.6258, 87.3806, 0.96 ) }
    dend_41 { pt3dadd( 164.823, -14.9702, 88.1161, 0.07 ) }
    dend_41 { pt3dadd( 165.191, -14.1481, 88.4916, 0.15 ) }
    dend_41 { pt3dadd( 165.71, -13.0808, 88.9985, 0.07 ) }
    dend_41 { pt3dadd( 166.257, -12.026, 89.4739, 0.07 ) }
    dend_41 { pt3dadd( 166.495, -11.5978, 89.6522, 0.29 ) }
    dend_41 { pt3dadd( 166.801, -11.0803, 89.84, 0.96 ) }
    dend_41 { pt3dadd( 167.595, -9.81112, 90.2425, 0.07 ) }
    dend_41 { pt3dadd( 168.098, -8.99173, 90.4581, 0.07 ) }
    dend_41 { pt3dadd( 168.499, -8.32039, 90.6414, 0.29 ) }
    dend_41 { pt3dadd( 169.006, -7.45141, 90.8884, 1.18 ) }
    dend_41 { pt3dadd( 169.916, -5.84626, 91.394, 0.07 ) }
    dend_41 { pt3dadd( 170.403, -4.95496, 91.7076, 0.07 ) }
    dend_41 { pt3dadd( 170.71, -4.35225, 91.9384, 0.22 ) }
    dend_41 { pt3dadd( 171.293, -3.13624, 92.5035, 0.07 ) }
    dend_41 { pt3dadd( 171.472, -2.7398, 92.7282, 0.29 ) }
    dend_41 { pt3dadd( 171.695, -2.18753, 93.0551, 0.52 ) }
    dend_41 { pt3dadd( 172.153, -0.873309, 93.8287, 0.07 ) }
    dend_41 { pt3dadd( 172.25, -0.56755, 94.0179, 0.29 ) }
    dend_41 { pt3dadd( 172.795, 1.13389, 95.2763, 0.07 ) }
    dend_41 { pt3dadd( 173.038, 1.85056, 95.9166, 0.07 ) }
    dend_41 { pt3dadd( 173.254, 2.50092, 96.5273, 1.11 ) }
    dend_41 { pt3dadd( 173.595, 3.51532, 97.5579, 0.07 ) }
    dend_41 { pt3dadd( 173.908, 4.42128, 98.6007, 0.07 ) }
    dend_41 { pt3dadd( 174.367, 5.6426, 100.152, 0.29 ) }
    dend_41 { pt3dadd( 174.665, 6.30095, 101.181, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 163.1, -20.2222, 86.1084, 0.07 ) }
    dend_36 { pt3dadd( 163.836, -20.6685, 86.1969, 0.07 ) }
    dend_36 { pt3dadd( 164.293, -20.9463, 86.252, 0.15 ) }
    dend_36 { pt3dadd( 164.787, -21.2461, 86.3114, 1.4 ) }
    dend_36 { pt3dadd( 165.491, -21.6736, 86.3962, 0.52 ) }
    dend_36 { pt3dadd( 166.037, -22.0048, 86.4618, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -111.237, 37.1779, 20.4747, 0.22 ) }
    dend_22 { pt3dadd( -112.642, 37.5366, 19.7943, 0.22 ) }
    dend_22 { pt3dadd( -113.052, 37.6474, 19.5932, 0.44 ) }
    dend_22 { pt3dadd( -113.675, 37.8209, 19.2762, 0.66 ) }
    dend_22 { pt3dadd( -114.646, 38.1078, 18.7686, 0.15 ) }
    dend_22 { pt3dadd( -115.584, 38.4188, 18.2685, 0.15 ) }
    dend_22 { pt3dadd( -115.898, 38.538, 18.1027, 0.52 ) }
    dend_22 { pt3dadd( -116.477, 38.7949, 17.757, 1.18 ) }
    dend_22 { pt3dadd( -117.058, 39.0773, 17.3965, 0.37 ) }
    dend_22 { pt3dadd( -117.578, 39.3648, 17.0744, 0.07 ) }
    dend_22 { pt3dadd( -117.91, 39.5665, 16.8948, 0.07 ) }
    dend_22 { pt3dadd( -118.448, 39.9169, 16.6118, 0.15 ) }
    dend_22 { pt3dadd( -119.122, 40.3816, 16.2374, 0.07 ) }
    dend_22 { pt3dadd( -119.42, 40.5914, 16.0649, 0.59 ) }
    dend_22 { pt3dadd( -119.709, 40.7844, 15.8893, 1.11 ) }
    dend_22 { pt3dadd( -120.958, 41.578, 15.0687, 0.15 ) }
    dend_22 { pt3dadd( -121.643, 42.0107, 14.5744, 0.15 ) }
    dend_22 { pt3dadd( -122.021, 42.265, 14.2762, 0.59 ) }
    dend_22 { pt3dadd( -122.298, 42.473, 14.0193, 0.52 ) }
    dend_22 { pt3dadd( -122.86, 42.9254, 13.4201, 0.15 ) }
    dend_22 { pt3dadd( -123.196, 43.2234, 13.0103, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( -123.458, 43.5066, 12.5845, 0.15 ) }
    dend_22 { pt3dadd( -123.691, 43.8416, 12.1153, 0.66 ) }
    dend_22 { pt3dadd( -124.092, 44.5299, 11.186, 0.15 ) }
    dend_22 { pt3dadd( -124.269, 44.8981, 10.7118, 0.37 ) }
    dend_22 { pt3dadd( -124.441, 45.3368, 10.1809, 0.22 ) }
    dend_22 { pt3dadd( -124.689, 46.028, 9.31959, 0.22 ) }
    dend_22 { pt3dadd( -124.818, 46.4285, 8.79586, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 7/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -111.237, 37.1779, 20.4747, 0.15 ) }
    dend_21 { pt3dadd( -112.938, 36.974, 21.0724, 0.15 ) }
    dend_21 { pt3dadd( -113.458, 36.9078, 21.2358, 0.59 ) }
    dend_21 { pt3dadd( -113.919, 36.8839, 21.3479, 0.81 ) }
    dend_21 { pt3dadd( -114.644, 36.8826, 21.4961, 0.15 ) }
    dend_21 { pt3dadd( -115.879, 36.928, 21.7168, 0.15 ) }
    dend_21 { pt3dadd( -116.171, 36.9532, 21.7697, 0.59 ) }
    dend_21 { pt3dadd( -116.554, 37.011, 21.8191, 1.03 ) }
    dend_21 { pt3dadd( -118.166, 37.3494, 22.029, 0.07 ) }
    dend_21 { pt3dadd( -118.655, 37.4725, 22.0948, 0.74 ) }
    dend_21 { pt3dadd( -119.135, 37.6154, 22.158, 0.74 ) }
    dend_21 { pt3dadd( -120.485, 38.0351, 22.3142, 0.07 ) }
    dend_21 { pt3dadd( -121.461, 38.3262, 22.4406, 0.07 ) }
    dend_21 { pt3dadd( -122.491, 38.6327, 22.5831, 0.07 ) }
    dend_21 { pt3dadd( -122.706, 38.6903, 22.6151, 0.88 ) }
    dend_21 { pt3dadd( -123.486, 38.8918, 22.728, 1.4 ) }
    dend_21 { pt3dadd( -124.943, 39.2663, 22.9244, 0.44 ) }
    dend_21 { pt3dadd( -126.239, 39.5991, 23.0664, 0.07 ) }
    dend_21 { pt3dadd( -126.912, 39.7761, 23.1507, 0.07 ) }
    dend_21 { pt3dadd( -127.73, 39.9955, 23.2733, 0.07 ) }
    dend_21 { pt3dadd( -128.454, 40.2062, 23.4029, 0.07 ) }
    dend_21 { pt3dadd( -128.956, 40.3669, 23.5048, 0.81 ) }
    dend_21 { pt3dadd( -130.475, 40.9024, 23.8443, 0.07 ) }
    dend_21 { pt3dadd( -131.337, 41.2275, 24.0554, 0.96 ) }
    dend_21 { pt3dadd( -132.822, 41.7583, 24.4897, 0.15 ) }
    dend_21 { pt3dadd( -133.465, 41.9818, 24.7118, 0.15 ) }
    dend_21 { pt3dadd( -133.993, 42.1537, 24.9195, 0.74 ) }
    dend_21 { pt3dadd( -134.58, 42.3414, 25.1757, 1.18 ) }
    dend_21 { pt3dadd( -135.62, 42.6524, 25.6757, 0.07 ) }
    dend_21 { pt3dadd( -136.554, 42.8905, 26.0933, 0.15 ) }
    dend_21 { pt3dadd( -137.303, 43.0462, 26.4009, 0.15 ) }
    dend_21 { pt3dadd( -137.666, 43.1057, 26.5281, 0.15 ) }
    dend_21 { pt3dadd( -138.181, 43.1788, 26.683, 0.81 ) }
    dend_21 { pt3dadd( -139.028, 43.3106, 26.8744, 1.25 ) }
    dend_21 { pt3dadd( -140.139, 43.5049, 27.0689, 0.15 ) }
    dend_21 { pt3dadd( -140.835, 43.6459, 27.1663, 0.15 ) }
    dend_21 { pt3dadd( -141.426, 43.7533, 27.239, 0.66 ) }
    dend_21 { pt3dadd( -141.962, 43.845, 27.3033, 0.22 ) }
    dend_21 { pt3dadd( -143.054, 44.0619, 27.4521, 0.15 ) }
    dend_21 { pt3dadd( -143.788, 44.2488, 27.5654, 0.96 ) }
    dend_21 { pt3dadd( -144.222, 44.3759, 27.6476, 1.11 ) }
    dend_21 { pt3dadd( -144.848, 44.5872, 27.7788, 0.52 ) }
    dend_21 { pt3dadd( -145.681, 44.9243, 27.9651, 0.15 ) }
    dend_21 { pt3dadd( -146.238, 45.2109, 28.0878, 0.22 ) }
    dend_21 { pt3dadd( -146.545, 45.4338, 28.1657, 0.15 ) }
    dend_21 { pt3dadd( -146.809, 45.6969, 28.2339, 0.15 ) }
    dend_21 { pt3dadd( -147.186, 46.1785, 28.3471, 0.37 ) }
    dend_21 { pt3dadd( -147.368, 46.427, 28.4085, 0.37 ) }
    dend_21 { pt3dadd( -147.954, 47.1787, 28.6048, 0.15 ) }
    dend_21 { pt3dadd( -148.592, 47.862, 28.8193, 0.22 ) }
    dend_21 { pt3dadd( -149.014, 48.2768, 28.9787, 0.74 ) }
    dend_21 { pt3dadd( -149.327, 48.5635, 29.1038, 1.18 ) }
    dend_21 { pt3dadd( -150.511, 49.5744, 29.6455, 0.07 ) }
    dend_21 { pt3dadd( -151.075, 50.0441, 29.9279, 0.81 ) }
    dend_21 { pt3dadd( -152.023, 50.8473, 30.4762, 0.15 ) }
    dend_21 { pt3dadd( -152.465, 51.2421, 30.7615, 0.59 ) }
    dend_21 { pt3dadd( -152.821, 51.607, 31.0649, 1.18 ) }
    dend_21 { pt3dadd( -153.768, 52.6729, 32.0536, 0.15 ) }
    dend_21 { pt3dadd( -154.124, 53.1024, 32.4938, 0.29 ) }
    dend_21 { pt3dadd( -154.567, 53.6325, 33.0745, 0.52 ) }
    dend_21 { pt3dadd( -154.862, 53.9746, 33.4597, 0.96 ) }
    dend_21 { pt3dadd( -155.849, 54.9664, 34.6277, 0.22 ) }
    dend_21 { pt3dadd( -156.3, 55.3221, 35.1124, 0.29 ) }
    dend_21 { pt3dadd( -156.937, 55.6457, 35.7112, 0.15 ) }
    dend_21 { pt3dadd( -157.641, 55.8558, 36.312, 0.15 ) }
    dend_21 { pt3dadd( -158.068, 55.9015, 36.6645, 0.88 ) }
    dend_21 { pt3dadd( -158.465, 55.865, 37.0504, 1.4 ) }
    dend_21 { pt3dadd( -159.413, 55.5201, 38.3225, 0.22 ) }
    dend_21 { pt3dadd( -159.785, 55.2506, 39.163, 0.29 ) }
    dend_21 { pt3dadd( -159.941, 54.9993, 39.8421, 0.15 ) }
    dend_21 { pt3dadd( -160.033, 54.5997, 40.8082, 0.37 ) }
    dend_21 { pt3dadd( -160.058, 54.0557, 42.1058, 0.15 ) }
    dend_21 { pt3dadd( -160.0, 53.5971, 43.1581, 0.81 ) }
    dend_21 { pt3dadd( -159.895, 53.1935, 44.084, 0.15 ) }
    dend_21 { pt3dadd( -159.782, 52.841, 44.9686, 0.66 ) }
    dend_21 { pt3dadd( -159.589, 52.2986, 46.5094, 0.15 ) }
    dend_21 { pt3dadd( -159.434, 51.8825, 47.7986, 0.74 ) }
    dend_21 { pt3dadd( -159.269, 51.4312, 49.3285, 0.22 ) }
    dend_21 { pt3dadd( -159.121, 51.0241, 50.7511, 0.22 ) }
    dend_21 { pt3dadd( -158.947, 50.4842, 52.6438, 0.81 ) }
    dend_21 { pt3dadd( -158.847, 50.1436, 53.8551, 1.25 ) }
    dend_21 { pt3dadd( -158.643, 49.4885, 56.3388, 0.15 ) }
    dend_21 { pt3dadd( -158.5, 49.0974, 57.9846, 0.44 ) }
    dend_21 { pt3dadd( -158.415, 48.9198, 58.8464, 0.44 ) }
    dend_21 { pt3dadd( -158.344, 48.8204, 59.4126, 0.44 ) }
    dend_21 { pt3dadd( -158.294, 48.7668, 59.7641, 0.44 ) }
    dend_21 { pt3dadd( -158.174, 48.6617, 60.6423, 0.44 ) }
    dend_21 { pt3dadd( -158.037, 48.5841, 61.6109, 0.44 ) }
    dend_21 { pt3dadd( -157.926, 48.5278, 62.1809, 0.44 ) }
    dend_21 { pt3dadd( -157.578, 48.3598, 63.5415, 0.44 ) }
    dend_21 { pt3dadd( -157.39, 48.2429, 64.122, 0.44 ) }
    dend_21 { pt3dadd( -156.731, 47.7121, 65.744, 0.44 ) }
    dend_21 { pt3dadd( -156.529, 47.5202, 66.1351, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_21 { pt3dadd( -156.067, 47.0656, 66.8763, 0.07 ) }
    dend_21 { pt3dadd( -155.522, 46.5623, 67.6202, 0.37 ) }
    dend_21 { pt3dadd( -154.809, 46.0071, 68.4303, 0.15 ) }
    dend_21 { pt3dadd( -154.245, 45.6399, 69.0331, 1.47 ) }
    dend_21 { pt3dadd( -153.386, 45.113, 69.8691, 0.07 ) }
    dend_21 { pt3dadd( -153.085, 44.9406, 70.1902, 0.22 ) }
    dend_21 { pt3dadd( -152.321, 44.5449, 71.1019, 0.07 ) }
    dend_21 { pt3dadd( -151.74, 44.2904, 71.8677, 0.44 ) }
    dend_21 { pt3dadd( -151.124, 44.1067, 72.6348, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 33.5177, -184.057, 45.4713, 0.15 ) }
    dend_16 { pt3dadd( 35.338, -186.078, 46.3275, 0.15 ) }
    dend_16 { pt3dadd( 35.7212, -186.522, 46.5033, 0.29 ) }
    dend_16 { pt3dadd( 36.1847, -187.065, 46.7144, 0.66 ) }
    dend_16 { pt3dadd( 37.3241, -188.415, 47.2297, 0.15 ) }
    dend_16 { pt3dadd( 37.8438, -188.99, 47.4745, 0.29 ) }
    dend_16 { pt3dadd( 38.9501, -190.18, 48.0042, 0.07 ) }
    dend_16 { pt3dadd( 39.5171, -190.785, 48.2767, 0.07 ) }
    dend_16 { pt3dadd( 39.879, -191.162, 48.4529, 0.74 ) }
    dend_16 { pt3dadd( 40.4804, -191.775, 48.749, 1.47 ) }
    dend_16 { pt3dadd( 42.5634, -193.805, 49.7972, 0.22 ) }
    dend_16 { pt3dadd( 43.0339, -194.235, 50.0407, 0.81 ) }
    dend_16 { pt3dadd( 43.6207, -194.714, 50.3588, 1.4 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 33.5177, -184.057, 45.4713, 0.22 ) }
    dend_15 { pt3dadd( 32.4433, -185.859, 46.8681, 0.22 ) }
    dend_15 { pt3dadd( 31.9894, -186.692, 47.4886, 0.29 ) }
    dend_15 { pt3dadd( 31.5567, -187.602, 48.1954, 0.15 ) }
    dend_15 { pt3dadd( 31.1444, -188.556, 48.9567, 0.37 ) }
    dend_15 { pt3dadd( 30.9977, -188.917, 49.2458, 0.52 ) }
    dend_15 { pt3dadd( 30.6432, -189.82, 49.9679, 0.22 ) }
    dend_15 { pt3dadd( 30.3751, -190.569, 50.5774, 0.81 ) }
    dend_15 { pt3dadd( 30.0415, -191.618, 51.4108, 0.15 ) }
    dend_15 { pt3dadd( 29.9502, -191.919, 51.6546, 0.22 ) }
    dend_15 { pt3dadd( 29.8065, -192.328, 52.0236, 0.52 ) }
    dend_15 { pt3dadd( 29.4111, -193.313, 52.9797, 0.15 ) }
    dend_15 { pt3dadd( 29.0442, -194.158, 53.7993, 0.88 ) }
    dend_15 { pt3dadd( 28.8628, -194.557, 54.1685, 0.96 ) }
    dend_15 { pt3dadd( 28.286, -195.745, 55.2187, 0.22 ) }
    dend_15 { pt3dadd( 27.7101, -196.963, 56.2653, 1.33 ) }
    dend_15 { pt3dadd( 27.0988, -198.141, 57.2544, 0.22 ) }
    dend_15 { pt3dadd( 26.7825, -198.681, 57.7076, 0.07 ) }
    dend_15 { pt3dadd( 26.5246, -199.083, 58.0509, 0.15 ) }
    dend_15 { pt3dadd( 25.7806, -200.093, 58.9582, 0.15 ) }
    dend_15 { pt3dadd( 25.5189, -200.422, 59.2584, 1.18 ) }
    dend_15 { pt3dadd( 24.1848, -202.028, 60.7845, 0.22 ) }
    dend_15 { pt3dadd( 23.2421, -203.112, 61.9474, 0.22 ) }
    dend_15 { pt3dadd( 22.8313, -203.592, 62.51, 0.37 ) }
    dend_15 { pt3dadd( 22.0888, -204.504, 63.6335, 0.37 ) }
    dend_15 { pt3dadd( 21.7147, -204.995, 64.2534, 1.25 ) }
    dend_15 { pt3dadd( 20.9042, -206.179, 65.7867, 0.15 ) }
    dend_15 { pt3dadd( 20.4924, -206.914, 66.7487, 0.15 ) }
    dend_15 { pt3dadd( 20.3075, -207.297, 67.2227, 0.37 ) }
    dend_15 { pt3dadd( 19.8012, -208.483, 68.5935, 0.22 ) }
    dend_15 { pt3dadd( 19.59, -209.067, 69.2255, 0.81 ) }
    dend_15 { pt3dadd( 19.0418, -210.511, 70.6762, 0.07 ) }
    dend_15 { pt3dadd( 18.891, -210.901, 71.0161, 0.29 ) }
    dend_15 { pt3dadd( 18.6644, -211.468, 71.4686, 0.44 ) }
    dend_15 { pt3dadd( 18.5387, -211.762, 71.6906, 0.22 ) }
    dend_15 { pt3dadd( 18.4335, -212.019, 71.8642, 0.37 ) }
    dend_15 { pt3dadd( 17.7039, -213.839, 72.9166, 0.15 ) }
    dend_15 { pt3dadd( 17.3265, -214.677, 73.2742, 1.47 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 60/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 14.7847, -93.702, 5.111, 0.59 ) }
    dend_10 { pt3dadd( 14.9946, -93.6883, 3.65244, 0.59 ) }
    dend_10 { pt3dadd( 15.0675, -93.87, 2.8394, 0.59 ) }
    dend_10 { pt3dadd( 15.0818, -93.9571, 2.66104, 0.59 ) }
    dend_10 { pt3dadd( 15.2019, -94.4732, 2.0139, 0.59 ) }
    dend_10 { pt3dadd( 15.2998, -94.8334, 1.68191, 0.59 ) }
    dend_10 { pt3dadd( 15.4189, -95.2712, 1.27829, 1.11 ) }
    dend_10 { pt3dadd( 15.5988, -96.214, 0.717477, 0.15 ) }
    dend_10 { pt3dadd( 15.7151, -96.8405, 0.424608, 1.03 ) }
    dend_10 { pt3dadd( 15.9513, -97.9434, -0.00253445, 0.15 ) }
    dend_10 { pt3dadd( 16.1422, -98.6593, -0.187647, 0.22 ) }
    dend_10 { pt3dadd( 18.0744, -103.473, -4.04676, 0.22 ) }
    dend_10 { pt3dadd( 19.0678, -108.83, -7.48714, 0.22 ) }
    dend_10 { pt3dadd( 20.1212, -114.349, -10.6281, 0.22 ) }
    dend_10 { pt3dadd( 20.5196, -120.319, -12.9428, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 14.7847, -93.702, 5.111, 0.07 ) }
    dend_9 { pt3dadd( 14.801, -95.4032, 5.17395, 0.07 ) }
    dend_9 { pt3dadd( 14.8219, -96.2511, 5.20954, 0.07 ) }
    dend_9 { pt3dadd( 14.8321, -96.6627, 5.22682, 0.81 ) }
    dend_9 { pt3dadd( 14.85, -97.3915, 5.25742, 1.62 ) }
    dend_9 { pt3dadd( 14.8802, -98.615, 5.30878, 0.15 ) }
    dend_9 { pt3dadd( 14.8929, -99.1309, 5.33044, 0.15 ) }
    dend_9 { pt3dadd( 14.9105, -99.4373, 5.34642, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 83/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -45.9398, -112.692, 14.1731, 0.07 ) }
    dend_4 { pt3dadd( -46.5266, -112.969, 14.5747, 0.07 ) }
    dend_4 { pt3dadd( -47.1477, -113.263, 14.9998, 0.07 ) }
    dend_4 { pt3dadd( -47.5361, -113.447, 15.2656, 0.15 ) }
    dend_4 { pt3dadd( -48.1701, -113.747, 15.6995, 0.07 ) }
    dend_4 { pt3dadd( -48.6096, -113.956, 16.0004, 0.07 ) }
    dend_4 { pt3dadd( -48.9833, -114.132, 16.2562, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -45.9398, -112.692, 14.1731, 0.81 ) }
    dend_3 { pt3dadd( -46.0557, -113.387, 13.8138, 0.81 ) }
    dend_3 { pt3dadd( -46.1977, -114.396, 13.3015, 0.22 ) }
    dend_3 { pt3dadd( -46.3252, -115.395, 12.8207, 0.22 ) }
    dend_3 { pt3dadd( -46.4422, -116.086, 12.4861, 0.15 ) }
    dend_3 { pt3dadd( -46.6172, -117.014, 12.039, 0.15 ) }
    dend_3 { pt3dadd( -46.6364, -117.116, 11.9914, 0.15 ) }
    dend_3 { pt3dadd( -46.7219, -117.565, 11.7657, 0.66 ) }
    dend_3 { pt3dadd( -46.8162, -118.055, 11.4998, 1.03 ) }
    dend_3 { pt3dadd( -47.0644, -119.336, 10.8211, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( -47.2215, -119.979, 10.4831, 0.66 ) }
    dend_3 { pt3dadd( -47.4093, -120.681, 10.1328, 0.22 ) }
    dend_3 { pt3dadd( -47.6348, -121.533, 9.72735, 0.15 ) }
    dend_3 { pt3dadd( -47.7772, -122.083, 9.47984, 0.15 ) }
    dend_3 { pt3dadd( -47.8594, -122.461, 9.32612, 0.66 ) }
    dend_3 { pt3dadd( -47.9678, -123.151, 9.09575, 0.29 ) }
    dend_3 { pt3dadd( -48.1411, -124.399, 8.75417, 0.15 ) }
    dend_3 { pt3dadd( -48.2223, -124.95, 8.63948, 0.15 ) }
    dend_3 { pt3dadd( -48.2955, -125.422, 8.57613, 0.15 ) }
    dend_3 { pt3dadd( -48.4265, -126.144, 8.50698, 0.22 ) }
    dend_3 { pt3dadd( -48.5686, -126.846, 8.44782, 0.59 ) }
    dend_3 { pt3dadd( -48.7917, -127.797, 8.38161, 1.18 ) }
    dend_3 { pt3dadd( -49.0274, -128.615, 8.34235, 1.7 ) }
    dend_3 { pt3dadd( -49.3366, -129.565, 8.29931, 1.99 ) }
    dend_3 { pt3dadd( -49.6712, -130.52, 8.25195, 1.25 ) }
    dend_3 { pt3dadd( -50.1699, -131.865, 8.17846, 0.22 ) }
    dend_3 { pt3dadd( -50.4812, -132.683, 8.12906, 0.37 ) }
    dend_3 { pt3dadd( -50.8637, -133.626, 8.04906, 0.15 ) }
    dend_3 { pt3dadd( -51.3621, -134.808, 7.91546, 0.22 ) }
    dend_3 { pt3dadd( -51.5727, -135.27, 7.85431, 0.59 ) }
    dend_3 { pt3dadd( -51.8251, -135.786, 7.77655, 1.11 ) }
    dend_3 { pt3dadd( -52.2288, -136.541, 7.68181, 0.52 ) }
    dend_3 { pt3dadd( -52.9381, -137.827, 7.54856, 0.22 ) }
    dend_3 { pt3dadd( -53.2232, -138.298, 7.51721, 0.88 ) }
    dend_3 { pt3dadd( -53.6887, -139.016, 7.48878, 0.96 ) }
    dend_3 { pt3dadd( -54.4165, -140.11, 7.47182, 0.07 ) }
    dend_3 { pt3dadd( -54.9911, -140.957, 7.48174, 0.07 ) }
    dend_3 { pt3dadd( -55.0819, -141.091, 7.48979, 0.44 ) }
    dend_3 { pt3dadd( -55.3713, -141.567, 7.57147, 0.52 ) }
    // Section: dend_90, id: dend_90, parent: dend_66 (entry count 29/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -2.26264, -42.9394, -11.2031, 0.44 ) }
    dend_90 { pt3dadd( -3.51981, -44.9254, -10.8785, 0.44 ) }
    dend_90 { pt3dadd( -4.11988, -45.8679, -10.7123, 0.66 ) }
    dend_90 { pt3dadd( -4.66161, -46.75, -10.5614, 0.66 ) }
    dend_90 { pt3dadd( -5.37439, -47.9477, -10.3723, 0.44 ) }
    dend_90 { pt3dadd( -5.78228, -48.6554, -10.2698, 0.81 ) }
    dend_90 { pt3dadd( -6.0898, -49.2156, -10.1952, 1.33 ) }
    dend_90 { pt3dadd( -6.66601, -50.3386, -10.0483, 0.74 ) }
    dend_90 { pt3dadd( -7.14827, -51.3528, -9.9226, 0.37 ) }
    dend_90 { pt3dadd( -7.43846, -52.0325, -9.85101, 0.22 ) }
    dend_90 { pt3dadd( -7.75848, -52.8487, -9.79495, 0.96 ) }
    dend_90 { pt3dadd( -7.97848, -53.4533, -9.79196, 0.15 ) }
    dend_90 { pt3dadd( -8.12911, -53.9357, -9.79531, 0.29 ) }
    dend_90 { pt3dadd( -11.6552, -61.7585, -9.7462, 0.29 ) }
    dend_90 { pt3dadd( -16.326, -68.8302, -8.17608, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 44/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -2.26264, -42.9394, -11.2031, 0.59 ) }
    dend_67 { pt3dadd( -0.783426, -44.1523, -11.4021, 0.59 ) }
    dend_67 { pt3dadd( 0.132847, -44.9609, -11.4387, 0.29 ) }
    dend_67 { pt3dadd( 0.546852, -45.3263, -11.4552, 0.81 ) }
    dend_67 { pt3dadd( 1.52473, -46.1894, -11.4943, 0.52 ) }
    dend_67 { pt3dadd( 2.5866, -47.1266, -11.5368, 0.22 ) }
    dend_67 { pt3dadd( 3.24085, -47.704, -11.5629, 0.66 ) }
    dend_67 { pt3dadd( 3.95603, -48.5389, -11.4863, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_47 (entry count 52/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 18.1949, -33.9788, -56.4395, 0.07 ) }
    dend_57 { pt3dadd( 23.6388, -35.4278, -62.016, 0.07 ) }
    dend_57 { pt3dadd( 29.3566, -35.5602, -67.5026, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 55/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 18.1949, -33.9788, -56.4395, 0.81 ) }
    dend_48 { pt3dadd( 22.9597, -34.4941, -63.7099, 0.07 ) }
    dend_48 { pt3dadd( 27.758, -34.112, -70.9627, 0.07 ) }
    dend_48 { pt3dadd( 31.4127, -33.6605, -78.8499, 0.07 ) }
    dend_48 { pt3dadd( 34.8955, -34.5029, -86.7863, 0.07 ) }
    dend_48 { pt3dadd( 38.3988, -35.0279, -94.7411, 0.07 ) }
    dend_48 { pt3dadd( 42.7105, -35.6661, -102.28, 0.07 ) }
    dend_48 { pt3dadd( 47.2119, -35.8914, -109.73, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 63/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 166.037, -22.0048, 86.4618, 0.15 ) }
    dend_40 { pt3dadd( 167.133, -22.4097, 85.9731, 0.15 ) }
    dend_40 { pt3dadd( 167.767, -22.6321, 85.6883, 0.66 ) }
    dend_40 { pt3dadd( 168.331, -22.827, 85.426, 0.66 ) }
    dend_40 { pt3dadd( 169.876, -23.3542, 84.6936, 0.07 ) }
    dend_40 { pt3dadd( 171.047, -23.7619, 84.1024, 0.07 ) }
    dend_40 { pt3dadd( 171.893, -24.0575, 83.6703, 0.96 ) }
    dend_40 { pt3dadd( 173.583, -24.6498, 82.8268, 0.07 ) }
    dend_40 { pt3dadd( 174.157, -24.8231, 82.5312, 0.07 ) }
    dend_40 { pt3dadd( 174.499, -24.909, 82.3487, 0.22 ) }
    dend_40 { pt3dadd( 175.32, -25.073, 81.8613, 0.07 ) }
    dend_40 { pt3dadd( 176.068, -25.2217, 81.3883, 0.66 ) }
    dend_40 { pt3dadd( 176.336, -25.2749, 81.2068, 0.66 ) }
    dend_40 { pt3dadd( 177.913, -25.5973, 80.0416, 0.07 ) }
    dend_40 { pt3dadd( 178.549, -25.7357, 79.5377, 0.44 ) }
    dend_40 { pt3dadd( 179.501, -25.9678, 78.7442, 0.22 ) }
    dend_40 { pt3dadd( 180.099, -26.1417, 78.2326, 0.96 ) }
    dend_40 { pt3dadd( 181.238, -26.5738, 77.1903, 0.22 ) }
    dend_40 { pt3dadd( 182.124, -27.0127, 76.3998, 0.07 ) }
    dend_40 { pt3dadd( 183.04, -27.5701, 75.6208, 0.74 ) }
    dend_40 { pt3dadd( 183.386, -27.7949, 75.3637, 1.03 ) }
    dend_40 { pt3dadd( 184.023, -28.2197, 74.9603, 0.59 ) }
    dend_40 { pt3dadd( 185.141, -28.976, 74.336, 0.15 ) }
    dend_40 { pt3dadd( 186.532, -29.9435, 73.6768, 0.15 ) }
    dend_40 { pt3dadd( 186.914, -30.1893, 73.5009, 0.59 ) }
    dend_40 { pt3dadd( 188.395, -31.0584, 72.8452, 0.07 ) }
    dend_40 { pt3dadd( 188.863, -31.2845, 72.628, 0.74 ) }
    dend_40 { pt3dadd( 189.362, -31.4677, 72.3722, 0.96 ) }
    dend_40 { pt3dadd( 191.05, -31.908, 71.4416, 0.07 ) }
    dend_40 { pt3dadd( 192.382, -32.1649, 70.6423, 0.07 ) }
    dend_40 { pt3dadd( 192.902, -32.2414, 70.3096, 0.66 ) }
    dend_40 { pt3dadd( 194.042, -32.3172, 69.516, 0.22 ) }
    dend_40 { pt3dadd( 195.062, -32.3429, 68.7706, 0.66 ) }
    dend_40 { pt3dadd( 195.519, -32.316, 68.4121, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 166.037, -22.0048, 86.4618, 0.07 ) }
    dend_37 { pt3dadd( 167.281, -21.8419, 87.6127, 0.07 ) }
    dend_37 { pt3dadd( 168.086, -21.7457, 88.3445, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_37 { pt3dadd( 168.607, -21.6883, 88.8006, 0.81 ) }
    dend_37 { pt3dadd( 169.19, -21.635, 89.315, 0.22 ) }
    dend_37 { pt3dadd( 169.813, -21.5864, 89.8588, 0.96 ) }
    dend_37 { pt3dadd( 171.298, -21.5081, 91.1277, 0.07 ) }
    dend_37 { pt3dadd( 171.703, -21.4898, 91.449, 0.07 ) }
    dend_37 { pt3dadd( 172.088, -21.4741, 91.7639, 0.29 ) }
    dend_37 { pt3dadd( 172.751, -21.4572, 92.3466, 1.11 ) }
    dend_37 { pt3dadd( 173.201, -21.4587, 92.7545, 1.55 ) }
    dend_37 { pt3dadd( 174.362, -21.4901, 93.7947, 0.22 ) }
    dend_37 { pt3dadd( 175.314, -21.5311, 94.6567, 0.88 ) }
    dend_37 { pt3dadd( 176.338, -21.5788, 95.6742, 0.22 ) }
    dend_37 { pt3dadd( 176.869, -21.6052, 96.2734, 0.22 ) }
    dend_37 { pt3dadd( 177.439, -21.6268, 97.0293, 0.66 ) }
    dend_37 { pt3dadd( 177.599, -21.6302, 97.2885, 1.33 ) }
    dend_37 { pt3dadd( 178.513, -21.6525, 99.0707, 0.22 ) }
    dend_37 { pt3dadd( 179.121, -21.694, 100.445, 0.22 ) }
    dend_37 { pt3dadd( 179.647, -21.7403, 101.756, 0.66 ) }
    dend_37 { pt3dadd( 180.181, -21.7552, 103.154, 0.88 ) }
    dend_37 { pt3dadd( 180.734, -21.7244, 104.639, 0.37 ) }
    dend_37 { pt3dadd( 181.065, -21.6987, 105.576, 0.37 ) }
    dend_37 { pt3dadd( 181.364, -21.6684, 106.474, 0.81 ) }
    dend_37 { pt3dadd( 181.557, -21.6497, 106.998, 1.11 ) }
    dend_37 { pt3dadd( 181.982, -21.6124, 107.992, 0.22 ) }
    dend_37 { pt3dadd( 182.347, -21.5864, 108.665, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_90 (entry count 24/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -16.326, -68.8302, -8.17608, 0.07 ) }
    dend_92 { pt3dadd( -21.6909, -78.0421, -7.20041, 0.07 ) }
    dend_92 { pt3dadd( -26.7217, -87.4429, -6.36654, 0.07 ) }
    dend_92 { pt3dadd( -32.2811, -96.4777, -4.85853, 0.07 ) }
    dend_92 { pt3dadd( -38.1802, -105.418, -5.09151, 0.07 ) }
    dend_92 { pt3dadd( -44.0824, -114.318, -5.93425, 0.07 ) }
    dend_92 { pt3dadd( -51.2442, -122.333, -6.21922, 0.07 ) }
    dend_92 { pt3dadd( -58.7383, -130.045, -6.68274, 0.07 ) }
    dend_92 { pt3dadd( -65.6872, -138.186, -7.62546, 0.07 ) }
    dend_92 { pt3dadd( -72.049, -146.819, -7.28558, 0.07 ) }
    dend_92 { pt3dadd( -78.2821, -155.435, -5.8262, 0.07 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 35/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -16.326, -68.8302, -8.17608, 0.81 ) }
    dend_91 { pt3dadd( -18.7533, -77.8624, -5.85148, 0.07 ) }
    dend_91 { pt3dadd( -22.4373, -86.2388, -2.70663, 0.07 ) }
    dend_91 { pt3dadd( -25.5245, -95.1334, -0.612739, 0.07 ) }
    dend_91 { pt3dadd( -29.067, -104.049, 0.311424, 0.07 ) }
    dend_91 { pt3dadd( -32.8577, -112.688, 2.38439, 0.07 ) }
    dend_91 { pt3dadd( -37.973, -120.838, 3.42086, 0.07 ) }
    dend_91 { pt3dadd( -42.2518, -129.136, 5.97062, 0.07 ) }
    // Section: dend_85, id: dend_85, parent: dend_67 (entry count 43/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 3.95603, -48.5389, -11.4863, 0.15 ) }
    dend_85 { pt3dadd( 3.36212, -50.6886, -11.1811, 0.15 ) }
    dend_85 { pt3dadd( 3.21888, -51.2071, -11.1075, 0.59 ) }
    dend_85 { pt3dadd( 2.97064, -52.1056, -10.98, 1.33 ) }
    dend_85 { pt3dadd( 2.70652, -53.0616, -10.8443, 0.22 ) }
    dend_85 { pt3dadd( -1.27749, -64.917, -10.8136, 0.22 ) }
    dend_85 { pt3dadd( -4.65426, -76.8326, -9.07096, 0.22 ) }
    dend_85 { pt3dadd( -8.49588, -88.7278, -9.32358, 0.22 ) }
    dend_85 { pt3dadd( -12.6403, -100.39, -7.40188, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 52/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 3.95603, -48.5389, -11.4863, 0.44 ) }
    dend_68 { pt3dadd( 4.48392, -49.5725, -11.5561, 0.44 ) }
    dend_68 { pt3dadd( 4.99402, -50.592, -11.6087, 0.15 ) }
    dend_68 { pt3dadd( 5.36473, -51.3157, -11.6299, 0.15 ) }
    dend_68 { pt3dadd( 5.58302, -51.727, -11.6337, 0.88 ) }
    dend_68 { pt3dadd( 5.98709, -52.4893, -11.6338, 1.92 ) }
    dend_68 { pt3dadd( 7.27215, -54.9137, -11.6339, 0.22 ) }
    dend_68 { pt3dadd( 7.64333, -55.6329, -11.6249, 0.66 ) }
    dend_68 { pt3dadd( 8.00976, -56.3215, -11.619, 1.33 ) }
    dend_68 { pt3dadd( 8.3284, -56.9452, -11.6222, 2.06 ) }
    dend_68 { pt3dadd( 8.6807, -57.6417, -11.6121, 1.62 ) }
    dend_68 { pt3dadd( 13.1511, -66.0085, -9.85458, 1.62 ) }
    dend_68 { pt3dadd( 18.7971, -73.4168, -7.20386, 1.62 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 65/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 29.3566, -35.5602, -67.5026, 0.07 ) }
    dend_63 { pt3dadd( 34.5723, -35.8788, -73.4867, 0.07 ) }
    dend_63 { pt3dadd( 39.5892, -35.9814, -79.6454, 0.07 ) }
    dend_63 { pt3dadd( 44.243, -36.8674, -86.0223, 0.07 ) }
    dend_63 { pt3dadd( 48.9451, -39.5035, -91.8366, 0.07 ) }
    dend_63 { pt3dadd( 54.9215, -40.8461, -96.8899, 0.07 ) }
    dend_63 { pt3dadd( 61.2101, -42.2856, -101.518, 0.07 ) }
    dend_63 { pt3dadd( 67.6705, -44.4182, -105.596, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 73/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 29.3566, -35.5602, -67.5026, 0.07 ) }
    dend_58 { pt3dadd( 35.6475, -35.7859, -74.9792, 0.07 ) }
    dend_58 { pt3dadd( 42.9698, -35.1093, -81.4129, 0.07 ) }
    dend_58 { pt3dadd( 51.6681, -34.9563, -85.8674, 0.07 ) }
    dend_58 { pt3dadd( 60.7398, -33.639, -89.2432, 0.07 ) }
    dend_58 { pt3dadd( 69.4997, -31.8871, -93.1847, 0.07 ) }
    dend_58 { pt3dadd( 78.4422, -28.64, -95.3015, 0.07 ) }
    dend_58 { pt3dadd( 87.6462, -25.7688, -96.7759, 0.07 ) }
    dend_58 { pt3dadd( 96.6891, -23.1384, -99.3205, 0.07 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 82/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 47.2119, -35.8914, -109.73, 0.07 ) }
    dend_50 { pt3dadd( 50.7183, -36.0948, -116.432, 0.07 ) }
    dend_50 { pt3dadd( 53.9547, -36.8636, -123.229, 0.07 ) }
    dend_50 { pt3dadd( 56.6901, -37.5728, -130.249, 0.07 ) }
    dend_50 { pt3dadd( 58.025, -38.7417, -137.605, 0.07 ) }
    dend_50 { pt3dadd( 60.1246, -40.5983, -144.628, 0.07 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 88/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 47.2119, -35.8914, -109.73, 0.07 ) }
    dend_49 { pt3dadd( 51.2381, -36.1068, -117.41, 0.07 ) }
    dend_49 { pt3dadd( 56.2865, -37.4949, -124.324, 0.07 ) }
    dend_49 { pt3dadd( 61.8135, -39.4818, -130.7, 0.07 ) }
    dend_49 { pt3dadd( 67.2969, -40.4686, -137.348, 0.07 ) }
    dend_49 { pt3dadd( 72.3597, -40.484, -144.39, 0.07 ) }
    dend_49 { pt3dadd( 76.5775, -41.3652, -151.918, 0.07 ) }
    dend_49 { pt3dadd( 79.7781, -41.5745, -159.977, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 182.347, -21.5864, 108.665, 0.29 ) }
    dend_39 { pt3dadd( 183.438, -22.1794, 110.571, 0.29 ) }
    dend_39 { pt3dadd( 184.157, -22.4333, 111.594, 0.52 ) }
    dend_39 { pt3dadd( 184.733, -22.5353, 112.334, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_39 { pt3dadd( 185.357, -22.6032, 113.137, 0.52 ) }
    dend_39 { pt3dadd( 185.787, -22.647, 113.692, 0.52 ) }
    dend_39 { pt3dadd( 186.15, -22.6795, 114.192, 0.52 ) }
    dend_39 { pt3dadd( 187.173, -22.7197, 115.549, 0.15 ) }
    dend_39 { pt3dadd( 188.187, -22.7726, 117.022, 0.15 ) }
    dend_39 { pt3dadd( 188.791, -22.7877, 117.859, 0.15 ) }
    dend_39 { pt3dadd( 189.257, -22.7987, 118.474, 0.59 ) }
    dend_39 { pt3dadd( 190.083, -22.8527, 119.558, 0.59 ) }
    dend_39 { pt3dadd( 190.536, -22.9038, 120.186, 0.59 ) }
    dend_39 { pt3dadd( 191.266, -23.0159, 121.319, 0.81 ) }
    dend_39 { pt3dadd( 191.864, -23.137, 122.22, 0.15 ) }
    dend_39 { pt3dadd( 192.515, -23.2701, 123.136, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 182.347, -21.5864, 108.665, 0.15 ) }
    dend_38 { pt3dadd( 182.596, -20.4667, 109.577, 0.15 ) }
    dend_38 { pt3dadd( 182.836, -19.4508, 110.445, 0.15 ) }
    dend_38 { pt3dadd( 182.959, -18.9504, 110.878, 0.52 ) }
    dend_38 { pt3dadd( 183.123, -18.3682, 111.376, 0.88 ) }
    dend_38 { pt3dadd( 183.246, -17.9357, 111.742, 1.11 ) }
    dend_38 { pt3dadd( 183.643, -16.5372, 112.912, 0.07 ) }
    dend_38 { pt3dadd( 183.873, -15.6777, 113.632, 0.07 ) }
    dend_38 { pt3dadd( 184.022, -15.0739, 114.117, 1.11 ) }
    dend_38 { pt3dadd( 184.301, -13.8828, 115.073, 0.15 ) }
    dend_38 { pt3dadd( 184.399, -13.419, 115.447, 0.15 ) }
    dend_38 { pt3dadd( 184.438, -13.214, 115.612, 0.29 ) }
    dend_38 { pt3dadd( 184.539, -12.5786, 116.113, 0.15 ) }
    dend_38 { pt3dadd( 184.653, -11.8446, 116.665, 0.74 ) }
    dend_38 { pt3dadd( 184.762, -11.1381, 117.235, 0.07 ) }
    dend_38 { pt3dadd( 184.837, -10.6634, 117.643, 0.07 ) }
    dend_38 { pt3dadd( 184.934, -10.1863, 118.087, 0.07 ) }
    dend_38 { pt3dadd( 185.062, -9.5913, 118.619, 0.74 ) }
    dend_38 { pt3dadd( 185.297, -8.6453, 119.487, 0.07 ) }
    dend_38 { pt3dadd( 185.538, -7.83949, 120.299, 0.07 ) }
    dend_38 { pt3dadd( 185.741, -7.2728, 120.928, 0.44 ) }
    dend_38 { pt3dadd( 186.146, -6.26968, 122.106, 0.07 ) }
    dend_38 { pt3dadd( 186.418, -5.61842, 122.889, 0.59 ) }
    dend_38 { pt3dadd( 186.7, -4.96489, 123.691, 1.11 ) }
    dend_38 { pt3dadd( 187.257, -3.7621, 125.164, 0.15 ) }
    dend_38 { pt3dadd( 187.565, -3.12796, 125.905, 0.15 ) }
    dend_38 { pt3dadd( 187.867, -2.52917, 126.589, 0.96 ) }
    dend_38 { pt3dadd( 188.364, -1.55136, 127.667, 0.07 ) }
    dend_38 { pt3dadd( 188.524, -1.22188, 128.015, 0.22 ) }
    dend_38 { pt3dadd( 188.791, -0.642432, 128.533, 0.07 ) }
    dend_38 { pt3dadd( 189.037, -0.0840728, 128.959, 0.22 ) }
    dend_38 { pt3dadd( 189.435, 0.797855, 129.611, 0.07 ) }
    dend_38 { pt3dadd( 189.613, 1.16033, 129.884, 0.22 ) }
    dend_38 { pt3dadd( 190.123, 2.09662, 130.609, 0.07 ) }
    dend_38 { pt3dadd( 190.501, 2.72646, 131.111, 0.96 ) }
    dend_38 { pt3dadd( 191.134, 3.7016, 131.899, 0.07 ) }
    dend_38 { pt3dadd( 191.661, 4.4278, 132.492, 0.07 ) }
    dend_38 { pt3dadd( 192.028, 4.90351, 132.88, 0.52 ) }
    dend_38 { pt3dadd( 192.338, 5.2926, 133.181, 0.29 ) }
    dend_38 { pt3dadd( 193.133, 6.27068, 133.874, 0.15 ) }
    dend_38 { pt3dadd( 193.611, 6.8707, 134.266, 0.59 ) }
    dend_38 { pt3dadd( 194.637, 8.07712, 134.999, 0.07 ) }
    dend_38 { pt3dadd( 195.277, 8.7969, 135.403, 0.07 ) }
    dend_38 { pt3dadd( 195.841, 9.40636, 135.727, 0.44 ) }
    dend_38 { pt3dadd( 197.222, 10.9021, 136.497, 0.07 ) }
    dend_38 { pt3dadd( 197.576, 11.2795, 136.681, 0.22 ) }
    dend_38 { pt3dadd( 198.799, 12.5471, 137.276, 0.07 ) }
    dend_38 { pt3dadd( 199.344, 13.079, 137.515, 0.29 ) }
    dend_38 { pt3dadd( 199.894, 13.5681, 137.743, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_85 (entry count 61/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -12.6403, -100.39, -7.40188, 0.07 ) }
    dend_89 { pt3dadd( -16.7425, -112.705, -6.6845, 0.07 ) }
    dend_89 { pt3dadd( -21.9773, -124.468, -4.62328, 0.07 ) }
    dend_89 { pt3dadd( -25.9144, -136.809, -3.53325, 0.07 ) }
    dend_89 { pt3dadd( -28.7667, -149.418, -4.55452, 0.07 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 66/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -12.6403, -100.39, -7.40188, 0.81 ) }
    dend_86 { pt3dadd( -14.58, -106.536, -6.84699, 0.07 ) }
    dend_86 { pt3dadd( -17.3783, -112.382, -6.55501, 0.07 ) }
    dend_86 { pt3dadd( -20.6165, -118.016, -6.43894, 0.07 ) }
    dend_86 { pt3dadd( -23.0139, -123.991, -7.13011, 0.07 ) }
    dend_86 { pt3dadd( -23.6728, -130.4, -7.17512, 0.07 ) }
    dend_86 { pt3dadd( -24.7502, -136.729, -6.51713, 0.07 ) }
    // Section: dend_84, id: dend_84, parent: dend_68 (entry count 73/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 18.7971, -73.4168, -7.20386, 0.22 ) }
    dend_84 { pt3dadd( 24.483, -82.5734, -5.93333, 0.22 ) }
    dend_84 { pt3dadd( 29.5077, -92.1122, -4.80724, 0.22 ) }
    dend_84 { pt3dadd( 33.0861, -102.316, -4.54522, 0.22 ) }
    dend_84 { pt3dadd( 35.7892, -112.783, -4.39815, 0.22 ) }
    dend_84 { pt3dadd( 40.6413, -122.463, -4.12765, 0.22 ) }
    dend_84 { pt3dadd( 46.3211, -131.653, -3.12277, 0.22 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 80/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 18.7971, -73.4168, -7.20386, 0.07 ) }
    dend_69 { pt3dadd( 23.3868, -81.02, -5.91479, 0.22 ) }
    dend_69 { pt3dadd( 27.8844, -88.3868, -3.39973, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 83/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 67.6705, -44.4182, -105.596, 0.07 ) }
    dend_65 { pt3dadd( 76.8995, -46.5619, -114.845, 0.07 ) }
    dend_65 { pt3dadd( 84.6034, -51.0094, -124.623, 0.07 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 67.6705, -44.4182, -105.596, 0.07 ) }
    dend_64 { pt3dadd( 77.1873, -47.4073, -114.209, 0.07 ) }
    dend_64 { pt3dadd( 87.1548, -52.061, -121.439, 0.07 ) }
    dend_64 { pt3dadd( 98.4605, -56.1128, -126.85, 0.07 ) }
    dend_64 { pt3dadd( 108.286, -60.9505, -134.148, 0.07 ) }
    dend_64 { pt3dadd( 117.297, -66.5598, -141.905, 0.07 ) }
    dend_64 { pt3dadd( 126.042, -73.234, -149.063, 0.07 ) }
    dend_64 { pt3dadd( 135.548, -80.0356, -155.031, 0.07 ) }
    dend_64 { pt3dadd( 144.241, -88.0344, -160.677, 0.07 ) }
    dend_64 { pt3dadd( 152.054, -96.2891, -167.155, 0.07 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 96.6891, -23.1384, -99.3205, 0.07 ) }
    dend_62 { pt3dadd( 102.681, -24.3932, -100.163, 0.07 ) }
    dend_62 { pt3dadd( 108.756, -25.5092, -100.38, 0.07 ) }
    dend_62 { pt3dadd( 114.663, -26.8909, -101.557, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 0/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 96.6891, -23.1384, -99.3205, 0.07 ) }
    dend_59 { pt3dadd( 103.295, -20.6617, -103.967, 0.07 ) }
    dend_59 { pt3dadd( 109.907, -18.6381, -108.833, 0.07 ) }
    dend_59 { pt3dadd( 117.221, -17.9436, -113.046, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 60.1246, -40.5983, -144.628, 0.07 ) }
    dend_54 { pt3dadd( 65.127, -41.1791, -154.174, 0.07 ) }
    dend_54 { pt3dadd( 69.5591, -40.9369, -164.009, 0.07 ) }
    dend_54 { pt3dadd( 73.6619, -39.6744, -173.901, 0.07 ) }
    dend_54 { pt3dadd( 76.8626, -37.2305, -183.888, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 9/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 60.1246, -40.5983, -144.628, 0.07 ) }
    dend_51 { pt3dadd( 60.9803, -43.8304, -153.841, 0.07 ) }
    dend_51 { pt3dadd( 62.6549, -47.7661, -162.646, 0.07 ) }
    dend_51 { pt3dadd( 64.3616, -50.5619, -171.886, 0.07 ) }
    dend_51 { pt3dadd( 66.1622, -53.5903, -181.033, 0.07 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 14/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -24.7502, -136.729, -6.51713, 0.07 ) }
    dend_88 { pt3dadd( -27.042, -144.868, -5.28444, 0.07 ) }
    dend_88 { pt3dadd( -28.3774, -153.156, -3.76797, 0.07 ) }
    dend_88 { pt3dadd( -30.2918, -160.882, -0.605362, 0.07 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 18/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -24.7502, -136.729, -6.51713, 0.07 ) }
    dend_87 { pt3dadd( -27.7124, -143.795, -7.78344, 0.07 ) }
    dend_87 { pt3dadd( -30.3566, -150.855, -9.63145, 0.07 ) }
    dend_87 { pt3dadd( -32.5432, -157.574, -12.8619, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_69 (entry count 22/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 27.8844, -88.3868, -3.39973, 0.07 ) }
    dend_75 { pt3dadd( 31.2155, -94.4642, -1.64876, 0.07 ) }
    dend_75 { pt3dadd( 33.5787, -101.067, -0.358895, 0.07 ) }
    dend_75 { pt3dadd( 36.6876, -107.374, 0.862897, 0.07 ) }
    dend_75 { pt3dadd( 39.7767, -113.791, 1.10836, 0.07 ) }
    dend_75 { pt3dadd( 43.3288, -119.819, 2.56796, 0.07 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 28/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 27.8844, -88.3868, -3.39973, 0.81 ) }
    dend_70 { pt3dadd( 32.6928, -97.868, -0.321166, 0.07 ) }
    dend_70 { pt3dadd( 37.3799, -107.584, 2.09633, 0.07 ) }
    dend_70 { pt3dadd( 41.2333, -117.842, 3.35824, 0.07 ) }
    dend_70 { pt3dadd( 44.1259, -128.426, 4.40498, 0.07 ) }
    dend_70 { pt3dadd( 48.2794, -138.576, 3.31705, 0.07 ) }
    dend_70 { pt3dadd( 54.2086, -147.872, 4.11327, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 35/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 117.221, -17.9436, -113.046, 0.07 ) }
    dend_61 { pt3dadd( 127.392, -15.4902, -118.565, 0.07 ) }
    dend_61 { pt3dadd( 137.383, -12.1811, -123.943, 0.07 ) }
    dend_61 { pt3dadd( 147.536, -8.11092, -128.404, 0.07 ) }
    dend_61 { pt3dadd( 156.893, -3.0697, -133.51, 0.07 ) }
    dend_61 { pt3dadd( 166.261, 3.44275, -136.404, 0.07 ) }
    dend_61 { pt3dadd( 174.839, 10.6992, -139.827, 0.07 ) }
    dend_61 { pt3dadd( 183.396, 18.2315, -142.638, 0.07 ) }
    dend_61 { pt3dadd( 191.317, 25.9462, -146.542, 0.07 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 44/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 117.221, -17.9436, -113.046, 0.07 ) }
    dend_60 { pt3dadd( 124.301, -15.2551, -120.001, 0.07 ) }
    dend_60 { pt3dadd( 131.291, -13.5965, -127.376, 0.07 ) }
    dend_60 { pt3dadd( 139.199, -11.2948, -133.545, 0.07 ) }
    dend_60 { pt3dadd( 147.763, -8.44205, -138.476, 0.07 ) }
    dend_60 { pt3dadd( 155.488, -4.73259, -144.133, 0.07 ) }
    dend_60 { pt3dadd( 162.839, 0.309544, -149.171, 0.07 ) }
    dend_60 { pt3dadd( 170.505, 5.77145, -153.184, 0.07 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 76.8626, -37.2305, -183.888, 0.07 ) }
    dend_56 { pt3dadd( 77.5793, -36.0036, -191.821, 0.07 ) }
    dend_56 { pt3dadd( 78.3022, -33.5901, -199.458, 0.07 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 55/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 76.8626, -37.2305, -183.888, 0.07 ) }
    dend_55 { pt3dadd( 80.9808, -37.159, -190.066, 0.07 ) }
    dend_55 { pt3dadd( 85.6792, -38.1444, -195.734, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 66.1622, -53.5903, -181.033, 0.07 ) }
    dend_53 { pt3dadd( 67.5103, -56.5731, -189.536, 0.07 ) }
    dend_53 { pt3dadd( 69.3998, -58.9213, -198.139, 0.07 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 61/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 66.1622, -53.5903, -181.033, 0.07 ) }
    dend_52 { pt3dadd( 68.1299, -57.6748, -189.604, 0.07 ) }
    dend_52 { pt3dadd( 68.5655, -63.5962, -197.228, 0.07 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 64/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 43.3288, -119.819, 2.56796, 0.07 ) }
    dend_77 { pt3dadd( 47.601, -128.609, 4.34075, 0.07 ) }
    dend_77 { pt3dadd( 53.6568, -136.409, 5.65527, 0.07 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 67/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 43.3288, -119.819, 2.56796, 0.07 ) }
    dend_76 { pt3dadd( 47.6383, -127.135, 3.247, 0.07 ) }
    dend_76 { pt3dadd( 50.8196, -134.691, 5.57163, 0.07 ) }
    dend_76 { pt3dadd( 55.4448, -140.952, 9.15987, 0.07 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 71/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 54.2086, -147.872, 4.11327, 0.07 ) }
    dend_74 { pt3dadd( 58.6661, -157.994, 5.35468, 0.07 ) }
    dend_74 { pt3dadd( 64.0173, -167.64, 3.88271, 0.07 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 74/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 54.2086, -147.872, 4.11327, 0.07 ) }
    dend_71 { pt3dadd( 57.5526, -155.407, 5.1052, 0.07 ) }
    dend_71 { pt3dadd( 60.1615, -163.196, 6.28251, 0.07 ) }
    dend_71 { pt3dadd( 61.4891, -171.371, 6.56733, 0.07 ) }
    dend_71 { pt3dadd( 61.3684, -179.613, 5.6736, 0.07 ) }
    dend_71 { pt3dadd( 59.6911, -187.567, 3.9228, 0.07 ) }
    dend_71 { pt3dadd( 58.8115, -195.679, 2.39686, 0.07 ) }
    dend_71 { pt3dadd( 58.0109, -203.409, -0.551456, 0.07 ) }
    dend_71 { pt3dadd( 55.9892, -210.51, -4.44179, 0.07 ) }
    // Section: dend_81, id: dend_81, parent: dend_77 (entry count 83/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 53.6568, -136.409, 5.65527, 0.07 ) }
    dend_81 { pt3dadd( 59.5539, -145.135, 6.08416, 0.07 ) }
    dend_81 { pt3dadd( 64.9748, -154.16, 5.87747, 0.07 ) }
    dend_81 { pt3dadd( 70.8266, -162.85, 4.70174, 0.07 ) }
    dend_81 { pt3dadd( 77.563, -170.964, 4.11336, 0.07 ) }
    dend_81 { pt3dadd( 84.9118, -178.559, 4.6513, 0.07 ) }
    dend_81 { pt3dadd( 92.2026, -186.219, 4.93562, 0.07 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 90/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 53.6568, -136.409, 5.65527, 0.07 ) }
    dend_78 { pt3dadd( 57.3846, -142.603, 7.03477, 0.07 ) }
    dend_78 { pt3dadd( 61.2985, -148.683, 8.4277, 0.07 ) }
    dend_78 { pt3dadd( 65.3518, -154.799, 9.00694, 0.07 ) }
    dend_78 { pt3dadd( 68.2266, -161.536, 9.44237, 0.07 ) }
    dend_78 { pt3dadd( 71.3112, -168.196, 9.42853, 0.07 ) }
    dend_78 { pt3dadd( 74.5701, -174.765, 9.07666, 0.07 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 55.9892, -210.51, -4.44179, 0.07 ) }
    dend_73 { pt3dadd( 56.4758, -218.923, -6.00896, 0.07 ) }
    dend_73 { pt3dadd( 55.4406, -227.003, -8.75358, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 0/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 55.9892, -210.51, -4.44179, 0.07 ) }
    dend_72 { pt3dadd( 56.3729, -219.653, -5.92601, 0.07 ) }
    dend_72 { pt3dadd( 56.9618, -228.367, -9.06133, 0.07 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 3/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 92.2026, -186.219, 4.93562, 0.07 ) }
    dend_83 { pt3dadd( 97.6656, -188.119, 2.06423, 0.07 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 5/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 92.2026, -186.219, 4.93562, 0.07 ) }
    dend_82 { pt3dadd( 96.8121, -195.684, 6.65482, 0.07 ) }
    dend_82 { pt3dadd( 99.4752, -205.845, 8.3943, 0.07 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 8/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 74.5701, -174.765, 9.07666, 0.07 ) }
    dend_80 { pt3dadd( 79.6744, -180.72, 10.717, 0.07 ) }
    dend_80 { pt3dadd( 84.6456, -186.898, 11.8009, 0.07 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 11/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 74.5701, -174.765, 9.07666, 0.07 ) }
    dend_79 { pt3dadd( 75.0376, -183.024, 6.01704, 0.07 ) }
    dend_79 { pt3dadd( 76.4963, -190.433, 1.41927, 0.07 ) }
    dend_79 { pt3dadd( 77.5245, -198.394, -2.24737, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_94 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_94 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_98 ModelViewParmSubset_3.append()
    dend_95 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_100 ModelViewParmSubset_3.append()
    dend_99 ModelViewParmSubset_3.append()
    dend_97 ModelViewParmSubset_3.append()
    dend_96 ModelViewParmSubset_3.append()
    dend_93 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_90 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_92 ModelViewParmSubset_3.append()
    dend_91 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_89 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_73 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_44 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_100 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_99 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_97 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_96 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_93 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_35 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_23 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_8 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_48 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_92 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_91 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_85 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_63 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_58 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_49 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_38 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_89 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_84 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_64 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_54 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_70 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_61 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_60 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_71 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_81 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_78 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_94 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_98 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_95 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_67 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_32 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_90 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_29 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_68 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_57 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_69 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_2 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_75 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_86 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_3 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_77 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_76 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_87 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_88 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_50 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_74 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_62 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_59 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_80 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_51 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_83 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_79 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_37 OneSecGrp_SectionRef_62.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_40 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_53 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_55 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_52 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_56 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_82 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_39 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_73 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_72 OneSecGrp_SectionRef_100.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_90 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_85 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_71 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 5
    dend_11 nseg = 3
    dend_44 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_12 nseg = 5
    dend_1 nseg = 3
    dend_100 nseg = 7
    dend_99 nseg = 5
    dend_97 nseg = 5
    dend_96 nseg = 3
    dend_93 nseg = 3
    dend_35 nseg = 9
    dend_28 nseg = 5
    dend_23 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 9
    dend_5 nseg = 3
    dend_47 nseg = 3
    dend_21 nseg = 5
    dend_15 nseg = 3
    dend_48 nseg = 3
    dend_92 nseg = 5
    dend_91 nseg = 3
    dend_85 nseg = 3
    dend_63 nseg = 3
    dend_58 nseg = 3
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_89 nseg = 3
    dend_84 nseg = 3
    dend_64 nseg = 5
    dend_54 nseg = 3
    dend_70 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_71 nseg = 3
    dend_81 nseg = 3
    dend_78 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_LBC_f906bb679c_0_0


