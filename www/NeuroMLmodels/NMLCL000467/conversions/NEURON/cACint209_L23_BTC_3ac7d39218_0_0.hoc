// Cell: cACint209_L23_BTC_3ac7d39218_0_0
/*
{
  "id" : "cACint209_L23_BTC_3ac7d39218_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.414762, -11.6197, -1.62187, 2.64004", "0.384603, -10.5465, -1.46411, 4.71198", "0.354444, -9.47334, -1.30636, 5.74801", "0.324285, -8.40018, -1.1486, 7.28344", "0.294125, -7.32702, -0.990848, 9.16307", "0.263966, -6.25385, -0.833093, 10.6182", "0.233807, -5.18069, -0.675338, 11.6398", "0.203648, -4.10753, -0.517583, 12.315", "0.173489, -3.03436, -0.359828, 12.8408", "0.14333, -1.9612, -0.202073, 12.9638", "0.113171, -0.888035, -0.0443183, 12.9997", "0.083012, 0.185129, 0.113437, 12.9186", "0.052853, 1.25829, 0.271192, 12.6149", "0.0226939, 2.33146, 0.428947, 11.9889", "-0.00746517, 3.40462, 0.586702, 11.363", "-0.0376242, 4.47778, 0.744457, 10.7371", "-0.0677833, 5.55095, 0.902211, 10.104", "-0.0979424, 6.62411, 1.05997, 9.17803", "-0.128101, 7.69727, 1.21772, 8.07035", "-0.15826, 8.77044, 1.37548, 6.54703", "-0.18842, 9.8436, 1.53323, 5.23645" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.765137, 10.4112, 2.31562, 3.33", "-0.82384, 12.7078, 2.31562, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.87486, 4.35343, -11.9444, 1.11", "4.04391, 6.44926, -12.4351, 1.11", "5.49958, 8.76147, -13.1647, 0.83", "7.09907, 10.7585, -14.2357, 1.11", "8.58295, 12.2064, -15.5882, 0.56", "9.22477, 12.8327, -16.1731, 0.56", "9.86377, 13.4562, -16.7556, 0.83", "10.8121, 14.23, -17.6857, 0.83", "12.7554, 15.4868, -19.8535, 0.56", "15.2585, 16.7238, -22.881, 0.28", "20.6131, 22.0675, -28.356, 0.28", "26.6632, 25.7661, -34.373, 0.28", "32.6918, 29.5894, -40.3371, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.09513, -2.93432, -11.7344, 1.11", "-3.45708, -6.28474, -14.0081, 0.83", "-4.93201, -9.91312, -16.4704, 0.83", "-6.08526, -12.7501, -18.3958, 0.83", "-7.69241, -16.7037, -21.0789, 1.39", "-13.4005, -27.1993, -25.574, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.62514, -12.2413, 1.00562, 2.78", "-1.9529, -13.4601, -0.922836, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.604862, -11.9133, 2.12562, 1.39", "1.01236, -12.819, 2.62196, 1.39", "2.52472, -16.7075, 4.07204, 1.39", "3.35246, -18.8582, 4.66914, 1.39", "3.92099, -20.2175, 4.96412, 1.39", "4.87886, -22.4249, 5.40381, 1.11", "5.71525, -24.3523, 5.78773, 1.39", "7.28888, -28.054, 6.38235, 1.11", "8.13565, -30.0523, 6.53071, 1.11", "9.39628, -33.0131, 6.54992, 1.11", "10.1077, -34.579, 6.50702, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.80514, 7.21318, 5.69562, 1.39", "-5.2305, 8.12877, 5.63797, 1.39", "-6.94846, 11.8267, 5.40514, 1.39", "-8.05515, 14.2088, 5.25516, 1.39", "-8.70717, 15.6123, 5.16679, 1.11", "-10.2605, 18.9557, 4.95628, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.18842, 9.8436, 1.53323, 0.83", "-0.609797, 24.8377, 1.53323, 0.83", "-1.03117, 39.8318, 1.53323, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.82384, 12.7078, 2.31562, 1.39", "-1.76256, 14.5779, 3.04356, 1.39", "-3.67341, 18.3845, 4.52535, 1.39", "-5.83435, 22.6894, 6.20107, 1.39" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.82384, 12.7078, 2.31562, 1.39", "0.355859, 15.9075, 6.14343, 1.39", "1.31641, 18.7528, 9.82116, 1.11", "1.87711, 20.4138, 11.968, 1.11", "2.55072, 22.4092, 14.5471, 1.39", "3.51425, 25.2634, 18.2363, 1.11", "4.12862, 27.0833, 20.5886, 0.83", "4.58938, 28.8842, 23.5441, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "32.6918, 29.5894, -40.3371, 0.28", "38.1507, 34.481, -45.6931, 0.28", "43.7505, 40.8165, -49.092, 0.28", "48.1794, 48.0568, -52.5056, 0.28", "52.8451, 55.7886, -54.0332, 0.28", "58.3584, 62.6977, -56.3134, 0.28", "64.5397, 69.0485, -58.4131, 0.28", "70.983, 74.6239, -61.5729, 0.28", "78.474, 78.9788, -64.2032, 0.28", "85.6889, 83.3645, -67.4827, 0.28", "93.0836, 86.2287, -71.81, 0.28", "100.066, 90.9829, -75.1033, 0.28", "106.9, 96.239, -77.9435, 0.28", "113.343, 102.122, -80.5101, 0.28", "119.675, 107.038, -84.761, 0.28", "125.926, 111.292, -89.7538, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "32.6918, 29.5894, -40.3371, 0.28", "38.3001, 34.3121, -45.6396, 0.28", "42.8976, 39.4366, -51.5277, 0.28", "47.5066, 44.4382, -57.5069, 0.28", "51.5062, 49.7875, -63.6365, 0.28", "54.3558, 54.2525, -70.9655, 0.28", "57.2075, 58.8055, -78.242, 0.28", "59.2132, 62.5611, -86.2021, 0.28", "59.4109, 67.0494, -94.051, 0.28", "59.3612, 73.4768, -100.493, 0.28", "60.1298, 79.5645, -107.198, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-13.4005, -27.1993, -25.574, 0.83", "-17.2686, -34.2516, -29.8006, 0.83", "-21.3028, -41.9378, -32.5887, 0.83", "-24.8784, -49.1908, -36.7448, 0.83", "-28.2707, -55.8966, -41.819, 0.83", "-30.0117, -62.5437, -47.7115, 0.83", "-31.0373, -68.2734, -54.5985, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-13.4005, -27.1993, -25.574, 0.83", "-17.5628, -35.5286, -30.3412, 0.83", "-20.7087, -44.6303, -34.5033, 0.83", "-25.2814, -52.7995, -39.1582, 0.83", "-28.6977, -60.3907, -45.445, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.9529, -13.4601, -0.922836, 1.94", "-3.03311, -24.3327, 3.23099, 1.94", "-3.67922, -30.8359, 5.71549, 1.94", "-4.12456, -35.3184, 7.428, 1.94" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "10.1077, -34.579, 6.50702, 0.83", "11.7261, -36.2518, 9.86043, 0.83", "15.0481, -39.2679, 15.6046, 0.83", "16.5663, -40.5542, 18.2664, 0.83", "19.2259, -42.9111, 23.6478, 0.83", "20.4696, -44.0804, 26.4174, 0.83", "21.3697, -44.9318, 28.4924, 0.28", "22.8549, -46.2534, 31.7121, 1.39", "25.7578, -49.0124, 37.969, 1.11", "29.913, -53.1866, 47.2943, 0.56", "31.6677, -55.057, 51.5022, 2.5", "32.7813, -56.3617, 54.3085, 2.5", "34.1768, -58.1782, 58.0981, 0.28", "35.0502, -59.4161, 60.6008, 1.11", "35.5411, -60.1334, 61.8426, 1.11", "38.56, -64.5552, 68.8631, 0.28", "38.8404, -64.9728, 69.5052, 0.56", "40.1559, -66.9839, 72.5791, 0.28", "41.9122, -69.5963, 76.7119, 3.33", "43.8312, -72.2296, 80.6739, 0.28", "44.0603, -72.5115, 81.0309, 0.56", "47.3649, -76.373, 85.0178, 0.28", "47.64, -76.6897, 85.3114, 0.83", "50.0881, -79.44, 87.5835, 0.28", "51.5551, -81.0126, 88.767, 1.39", "59.8862, -89.504, 94.9355, 0.28", "61.6848, -91.2769, 96.1776, 2.5", "65.1661, -94.5583, 98.3156, 0.28", "65.8645, -95.2026, 98.6915, 0.83", "69.6583, -98.5592, 100.321, 0.28", "70.6379, -99.3501, 100.641, 1.11", "74.4325, -101.981, 101.419, 0.28", "75.9201, -102.968, 101.684, 1.11", "79.0582, -104.917, 102.062, 0.28", "80.8144, -106.015, 102.235, 1.39", "88.3527, -110.785, 102.565, 0.28", "89.0305, -111.211, 102.587, 1.39" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.1077, -34.579, 6.50702, 0.83", "12.1807, -39.57, 8.14188, 0.83", "13.5462, -43.0131, 9.29125, 0.83", "14.3353, -45.0354, 9.93993, 0.83", "15.2965, -47.4516, 10.6635, 0.83", "16.3943, -50.2571, 11.4477, 0.83", "17.9016, -53.7678, 12.3425, 0.83", "20.2913, -58.4665, 13.6196, 0.83", "21.0991, -59.9837, 13.987, 1.11", "22.0972, -61.8845, 14.4162, 0.83", "23.0492, -63.662, 14.779, 1.11", "26.7602, -70.1406, 16.0936, 0.83", "28.0747, -72.1522, 16.5442, 0.28", "28.2446, -72.3805, 16.5983, 0.83", "28.9749, -73.3391, 16.8295, 0.28", "31.8934, -77.12, 17.7849, 0.83", "33.9285, -79.7562, 18.442, 0.56", "34.9699, -81.2292, 18.8334, 0.83", "35.8051, -82.5027, 19.1712, 0.56", "37.6287, -85.4776, 19.9653, 1.11", "38.7663, -87.4706, 20.5417, 0.56", "39.4054, -88.7271, 20.9067, 0.83", "40.6175, -91.4708, 21.7071, 0.28", "40.8512, -92.0516, 21.8782, 0.83", "42.5078, -96.3516, 23.1396, 1.94", "43.2801, -98.334, 23.7157, 1.11", "44.2207, -100.698, 24.3435, 0.56", "45.1342, -102.769, 24.9047, 0.83", "46.1083, -104.831, 25.4431, 0.56", "48.1381, -108.846, 26.4755, 1.39", "49.2082, -110.925, 26.9717, 0.56", "49.896, -112.199, 27.2618, 0.83", "51.954, -115.818, 28.1803, 0.28", "52.2401, -116.307, 28.3215, 0.83", "53.8986, -119.106, 29.1796, 2.22", "58.6122, -126.922, 31.7638, 0.28", "60.1624, -129.61, 32.6748, 1.39", "61.5387, -132.155, 33.5876, 0.56", "62.7361, -134.553, 34.4679, 0.28", "63.2554, -135.651, 34.904, 0.83", "64.3252, -138.078, 35.9575, 0.28", "66.1674, -142.533, 37.9914, 1.39", "67.5631, -146.262, 39.5435, 0.28", "67.7561, -146.839, 39.7714, 0.83", "68.3628, -148.887, 40.549, 0.28", "68.5457, -149.642, 40.8127, 0.83", "68.9548, -151.891, 41.4909, 0.28", "69.191, -153.552, 41.9455, 1.94", "69.5289, -157.149, 42.7982, 0.28", "69.6093, -158.592, 43.1279, 0.83", "69.9012, -161.375, 43.7581, 0.28", "70.0899, -162.632, 44.0431, 0.83", "70.3574, -164.329, 44.4187, 0.56", "71.0779, -168.381, 45.2826, 0.28", "71.3, -169.403, 45.4737, 1.67", "72.943, -175.374, 46.8306, 0.28", "73.2874, -176.312, 47.103, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.2605, 18.9557, 4.95628, 0.83", "-10.8826, 19.7317, 6.14748, 0.83", "-11.8046, 20.8289, 7.96896, 0.83", "-13.7881, 23.7939, 12.7281, 0.83", "-14.0428, 24.2401, 13.4961, 0.83", "-14.7694, 25.6138, 15.8604, 0.83", "-15.8149, 27.7087, 19.5223, 0.83", "-16.4891, 29.0018, 21.9491, 0.83", "-17.324, 30.6597, 25.1918, 0.83", "-18.628, 33.2858, 30.1059, 0.56", "-18.8357, 33.7907, 30.9552, 0.83", "-19.3099, 35.313, 33.1137, 0.83", "-19.9143, 37.1181, 35.3886, 1.11", "-20.7484, 39.0676, 37.555, 0.28", "-21.2638, 39.9224, 38.3789, 1.11", "-22.7254, 41.7337, 39.8461, 0.56", "-24.2137, 43.0728, 40.9506, 0.28", "-27.1171, 44.6515, 42.536, 0.56", "-27.9612, 44.9543, 42.9253, 0.56", "-30.9678, 45.7526, 44.189, 2.22", "-34.5592, 46.4364, 45.8302, 0.28", "-37.0059, 46.7341, 46.9317, 0.83", "-41.3836, 47.0941, 48.8834, 0.28", "-42.3342, 47.1657, 49.2797, 0.56", "-43.4814, 47.2079, 49.7575, 0.83", "-46.2687, 47.1976, 50.9019, 0.83", "-47.6452, 47.1831, 51.5322, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-10.2605, 18.9557, 4.95628, 0.83", "-13.619, 19.6219, 5.4966, 0.83", "-15.9158, 20.0185, 5.76126, 0.56", "-17.7105, 20.2969, 5.9222, 0.56", "-20.6677, 20.8719, 6.30367, 0.56", "-21.6873, 21.0777, 6.46298, 0.56", "-24.6105, 21.7758, 6.95097, 0.56", "-26.0243, 22.1849, 7.29651, 0.56", "-26.487, 22.3487, 7.43149, 0.56", "-30.0118, 23.9993, 8.61163, 0.56", "-32.1184, 25.2108, 9.34591, 0.56", "-34.765, 26.8633, 10.3511, 0.56", "-36.8819, 28.3415, 11.2683, 0.56", "-39.5806, 30.312, 12.5103, 0.83", "-42.2207, 32.3453, 13.7255, 1.11", "-43.1534, 33.1287, 14.1312, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.03117, 39.8318, 1.53323, 0.647035", "-1.45255, 54.8258, 1.53323, 0.647035", "-1.87393, 69.8199, 1.53323, 0.647035" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-5.83435, 22.6894, 6.20107, 0.83", "-5.6041, 23.6479, 7.15437, 0.83", "-5.47857, 24.2131, 7.72758, 1.11", "-4.72415, 26.2708, 9.9964, 0.56", "-4.37564, 27.2835, 11.0695, 0.83", "-4.09173, 28.1537, 11.9332, 0.83", "-3.65894, 29.4957, 13.2348, 0.83", "-3.2748, 30.6997, 14.3546, 1.39", "-2.14199, 34.4376, 17.6431, 0.83", "-1.69656, 35.8065, 18.7856, 1.11", "0.587967, 42.8498, 24.2844, 0.28", "1.31585, 45.112, 26.0035, 1.67", "2.24762, 48.117, 28.2177, 0.28", "2.4843, 48.9088, 28.7987, 0.83", "3.40194, 52.3472, 31.1279, 0.28", "3.92764, 54.3419, 32.4451, 0.28", "4.25294, 55.7039, 33.2946, 0.83", "4.47763, 56.6569, 33.9272, 0.28", "4.72373, 57.4517, 34.6805, 0.56", "6.15732, 61.4764, 39.2021, 0.28", "6.63011, 62.422, 40.4423, 0.83", "7.76744, 64.3159, 43.1504, 0.56", "8.19678, 64.9769, 44.0669, 1.39", "10.6872, 68.5584, 49.0649, 0.28", "11.0556, 69.0861, 49.7613, 1.39", "13.1851, 72.1311, 53.7822, 0.28", "13.5424, 72.7132, 54.448, 1.11", "14.8343, 75.2317, 56.9524, 0.28", "14.9735, 75.5612, 57.2388, 0.83", "17.3859, 83.0755, 62.7259, 0.28", "17.7926, 84.5479, 63.7454, 1.67", "18.5288, 88.2169, 66.07, 0.28", "18.6139, 88.644, 66.3381, 0.83", "18.7791, 89.7607, 67.0379, 0.28", "18.8491, 90.3708, 67.42, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.83435, 22.6894, 6.20107, 1.11", "-7.30003, 24.5422, 5.68872, 1.11", "-8.35933, 25.8813, 5.31843, 1.11", "-9.02032, 26.7169, 5.08737, 1.11", "-10.108, 28.0919, 4.70717, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.58938, 28.8842, 23.5441, 0.56", "4.41161, 31.5264, 27.1355, 0.56", "4.80879, 34.0688, 30.9623, 0.83", "5.1809, 35.4372, 33.1272, 0.56", "6.1402, 38.1698, 37.2872, 1.11", "7.26959, 41.2513, 41.827, 0.56", "8.01221, 43.2523, 44.6629, 1.39", "9.73173, 47.1543, 49.8242, 0.28", "10.7269, 49.2426, 52.5709, 1.67", "12.1722, 52.123, 56.3196, 0.28", "12.4424, 52.7947, 57.0678, 0.56", "12.8925, 54.4166, 58.4961, 0.28", "12.9767, 54.8078, 58.8052, 0.83", "13.3695, 57.224, 60.5529, 0.28", "13.6961, 59.1627, 61.9229, 1.67", "15.615, 70.5131, 69.7601, 0.28", "16.0769, 73.2809, 71.7157, 2.22", "16.8257, 78.2436, 75.2083, 0.28", "16.9446, 79.1067, 75.8142, 0.83", "17.4239, 83.0033, 78.5024, 0.28", "17.5373, 84.4569, 79.4625, 0.56", "17.6884, 89.7531, 82.6695, 0.28", "17.6112, 91.467, 83.663, 1.11", "17.29, 94.3639, 85.1239, 0.28", "17.1271, 95.5566, 85.6768, 0.83", "16.5377, 98.3479, 86.7975, 0.28", "15.6845, 101.886, 88.0849, 1.11", "13.4596, 109.92, 90.5972, 0.28", "13.0951, 111.031, 90.9591, 0.28", "12.536, 112.528, 91.4596, 1.11", "10.3736, 117.966, 93.3168, 0.28", "10.1903, 118.377, 93.4585, 0.28", "8.92044, 120.832, 94.2191, 1.39", "7.328, 123.179, 95.1382, 0.28", "6.19879, 124.812, 95.9292, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.58938, 28.8842, 23.5441, 0.28", "5.64596, 32.9348, 25.9673, 0.28", "5.96837, 33.9794, 26.6902, 0.83", "6.67396, 35.7979, 28.0356, 1.11", "7.49534, 37.7593, 29.4631, 0.83", "7.85948, 38.5742, 30.027, 0.28", "8.12492, 39.1368, 30.4246, 0.28", "9.64946, 41.8049, 32.3944, 1.39", "11.0792, 43.8949, 34.1431, 0.83", "12.7045, 46.1188, 36.0206, 0.28", "13.3846, 46.9856, 36.7179, 0.83", "15.1392, 49.1555, 38.3736, 0.28", "17.0548, 51.353, 39.9704, 1.39", "19.2485, 53.7173, 41.5475, 0.28", "21.1309, 55.6152, 42.7341, 0.28", "22.5446, 56.9263, 43.4975, 0.56", "23.7095, 57.8715, 44.1516, 0.83", "26.1546, 59.6647, 45.4575, 0.28", "26.5116, 59.9044, 45.6421, 0.83", "29.0366, 61.4263, 47.2547, 0.28", "30.2648, 62.1016, 48.1374, 0.83", "35.5096, 64.8345, 52.2271, 0.28", "36.172, 65.1678, 52.7644, 1.39", "38.8665, 66.5568, 55.079, 1.94", "44.0064, 69.2887, 59.6086, 0.28", "44.6925, 69.6917, 60.2528, 0.56", "46.8573, 71.17, 62.2725, 0.28", "47.6179, 71.7813, 62.9408, 1.11", "49.9366, 73.8333, 65.0207, 0.28", "50.7794, 74.7056, 65.8221, 1.39", "53.0556, 77.5097, 67.8956, 0.28", "55.3035, 80.8737, 70.099, 0.56", "56.1177, 82.3244, 70.9259, 0.56", "57.2182, 84.5944, 72.0764, 0.83", "58.3087, 87.3317, 73.219, 0.28", "59.0619, 89.5925, 74.0491, 1.39", "60.2104, 94.0074, 75.361, 0.28", "60.4741, 95.5829, 75.7994, 0.56", "60.7325, 97.4884, 76.3081, 0.28", "61.088, 100.096, 77.0432, 1.39", "61.3706, 102.05, 77.6892, 0.28", "61.5205, 103.012, 78.0895, 0.56", "62.5925, 109.225, 81.0225, 0.28", "62.7909, 110.26, 81.5609, 1.39", "63.8642, 115.064, 84.2368, 0.28", "64.3776, 117.187, 85.4467, 0.83", "65.743, 123.07, 88.6286, 0.28", "65.8907, 123.71, 88.9533, 0.56", "66.4445, 126.874, 90.2154, 0.28", "66.5689, 127.858, 90.5261, 0.28", "66.7887, 130.183, 91.124, 1.39", "67.3665, 138.066, 92.7737, 0.28", "67.4714, 140.449, 93.1538, 1.11", "67.6291, 148.665, 94.2948, 0.28", "67.6157, 149.725, 94.4021, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-28.6977, -60.3907, -45.445, 0.28", "-32.1559, -68.0696, -50.0123, 0.28", "-34.8772, -76.4915, -53.7577, 0.28", "-37.7853, -84.383, -58.3665, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-28.6977, -60.3907, -45.445, 0.28", "-30.9946, -67.609, -49.7372, 0.28", "-32.4808, -74.815, -54.3907, 0.28", "-32.2955, -81.9318, -59.3947, 0.28", "-30.9719, -87.6926, -65.7145, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.12456, -35.3184, 7.428, 0.83", "-5.20202, -38.9219, 6.2079, 0.83", "-5.64801, -41.3784, 5.41941, 1.11", "-6.30828, -46.1596, 3.51766, 1.11", "-6.82264, -50.4168, 1.79353, 1.11", "-7.19312, -53.4831, 0.551672, 1.11", "-8.17989, -61.6502, -2.75595, 1.11", "-8.46707, -65.2359, -4.27671, 0.83", "-8.67133, -71.6203, -6.91311, 0.83", "-8.5245, -75.7083, -8.44051, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.12456, -35.3184, 7.428, 1.11", "-4.16902, -37.5837, 10.6018, 1.11", "-4.12341, -38.6065, 12.2581, 1.11", "-4.10151, -40.5173, 15.4357, 1.11", "-4.23496, -42.6069, 18.8763, 1.11", "-4.64036, -47.0444, 26.2114, 1.11", "-4.94234, -49.5372, 30.3925, 1.11", "-5.29121, -51.6686, 34.1648, 0.83", "-5.44837, -52.6531, 35.9568, 0.83", "-5.67358, -54.812, 39.8878, 0.83", "-5.66943, -56.0606, 41.9578, 0.83", "-5.57837, -59.0535, 46.4759, 0.56", "-5.41832, -60.687, 48.8706, 0.56", "-5.22504, -61.6182, 50.2309, 0.28", "-4.49208, -63.801, 53.4924, 1.67", "-2.70587, -68.2501, 60.701, 0.28", "-2.22405, -69.3969, 62.8448, 1.94", "-1.86423, -70.2036, 64.5634, 3.33", "-1.31436, -71.5365, 67.9068, 0.83", "-0.787742, -73.0155, 71.9823, 0.28", "0.00435103, -75.9323, 80.1377, 2.22", "0.774797, -79.1167, 89.1728, 0.28", "1.00187, -80.1687, 92.2472, 1.94", "1.50313, -83.2428, 101.587, 0.28", "1.54979, -83.7349, 103.113, 1.94", "1.65837, -85.3277, 108.188, 0.28", "1.67905, -85.5602, 108.86, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-43.1534, 33.1287, 14.1312, 0.28", "-45.6036, 36.2865, 14.5341, 0.28", "-47.4205, 38.5586, 14.9562, 0.56", "-48.6358, 40.0297, 15.255, 0.83", "-50.2118, 41.4867, 15.748, 1.67", "-52.2954, 43.27, 16.2797, 0.56", "-53.4256, 44.2087, 16.5274, 0.56", "-56.0077, 46.1687, 17.1575, 0.28", "-56.8002, 46.7458, 17.3506, 0.83", "-66.1392, 53.4612, 19.5353, 0.28", "-68.8788, 55.4223, 20.1175, 1.11", "-70.9683, 56.8798, 20.4608, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-43.1534, 33.1287, 14.1312, 0.28", "-49.9813, 31.9158, 14.2212, 0.28", "-52.1326, 31.5439, 14.2975, 0.56", "-54.5469, 31.1069, 14.5376, 0.28", "-55.7988, 30.8573, 14.6875, 0.56", "-59.6408, 30.0088, 15.3996, 0.28", "-62.3521, 29.4497, 15.9922, 0.56", "-63.2197, 29.308, 16.3008, 0.28", "-67.0188, 29.2488, 18.0783, 0.56", "-68.2464, 29.4079, 18.7234, 0.56", "-72.954, 31.2636, 20.2754, 0.28", "-74.5261, 32.2735, 20.4499, 0.56", "-76.6193, 33.9576, 20.2659, 1.67", "-82.6399, 39.3449, 19.0087, 0.28", "-84.4169, 41.1071, 18.481, 1.39", "-94.677, 52.0261, 14.5939, 0.28", "-95.4894, 52.9601, 14.172, 0.83", "-100.666, 58.914, 10.884, 0.28", "-101.323, 59.6663, 10.3478, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.108, 28.0919, 4.70717, 0.56", "-11.4621, 30.6871, 4.36713, 0.56", "-12.0893, 31.8893, 4.20962, 0.83", "-12.7644, 33.1833, 4.04008, 0.28", "-13.4012, 34.4038, 3.88016, 0.56", "-15.3063, 38.0553, 3.40174, 0.56", "-16.8237, 40.9636, 3.02069, 0.56", "-20.9941, 49.8416, 2.74531, 0.56" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.108, 28.0919, 4.70717, 0.83", "-12.6412, 33.4307, 0.549477, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.5245, -75.7083, -8.44051, 0.83", "-9.55869, -77.4668, -8.98367, 0.83", "-10.8019, -80.3783, -9.89244, 0.83", "-11.357, -81.7757, -10.3275, 0.83", "-11.9408, -83.2452, -10.785, 0.83", "-13.0928, -86.1449, -11.6878, 0.83", "-13.9993, -88.4267, -12.3983, 0.83", "-15.0765, -91.9162, -13.5005, 0.83", "-15.5105, -93.8854, -14.1679, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-8.5245, -75.7083, -8.44051, 0.83", "-9.1687, -81.59, -7.1742, 0.83", "-9.37016, -84.2503, -6.57792, 0.83", "-9.41453, -85.2602, -6.30632, 0.56", "-9.55778, -89.5122, -5.00547, 0.56", "-9.57196, -90.7737, -4.60658, 0.56", "-9.56924, -94.3224, -3.49004, 0.56", "-9.54379, -97.0375, -2.70106, 0.56", "-9.51339, -99.4806, -1.85635, 0.56", "-9.57903, -101.921, -0.92709, 0.28", "-9.70653, -103.494, -0.284912, 0.83", "-9.85499, -104.851, 0.256867, 0.83", "-10.4447, -108.803, 1.72875, 0.28", "-10.7499, -110.515, 2.26621, 0.83", "-11.9103, -116.582, 3.91072, 0.28", "-12.1255, -117.699, 4.1739, 1.11", "-12.6956, -121.086, 4.91473, 0.28", "-12.9536, -123.113, 5.30851, 1.39", "-13.2347, -129.51, 6.38244, 0.28", "-13.2091, -130.206, 6.49556, 1.39", "-12.9752, -131.584, 6.72869, 1.94", "-11.9056, -135.628, 7.53233, 0.28", "-11.5036, -136.718, 7.77981, 1.11", "-10.0298, -139.836, 8.54949, 0.28", "-9.77312, -140.274, 8.66681, 0.83", "-6.86834, -144.925, 9.71966, 0.28", "-6.21683, -145.895, 9.9023, 0.28", "-5.60394, -146.735, 9.95273, 0.56", "-4.86227, -147.729, 9.87005, 0.28", "-4.41769, -148.275, 9.66613, 0.83", "-2.60576, -150.129, 8.48777, 0.28", "-2.45943, -150.247, 8.35397, 0.56", "-1.49235, -150.965, 7.42607, 0.28", "-0.81779, -151.449, 6.78306, 0.56", "1.65953, -153.095, 4.69442, 0.28", "1.81966, -153.198, 4.56089, 0.56", "3.06034, -154.014, 3.55752, 0.28", "3.90495, -154.566, 2.87648, 0.83", "6.62416, -156.292, 0.715976, 0.28", "9.90704, -158.311, -1.87881, 0.28", "10.9015, -158.882, -2.74619, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-20.9941, 49.8416, 2.74531, 0.56", "-24.9449, 55.844, 2.71573, 0.56", "-28.9036, 61.706, 3.89392, 0.56", "-32.3056, 68.0483, 3.91916, 0.56", "-36.5301, 73.8528, 3.80058, 0.56", "-41.1215, 79.2311, 4.89726, 0.56", "-45.3832, 84.8222, 6.25816, 0.56", "-49.5252, 90.5901, 7.24719, 0.56", "-53.2209, 96.5208, 8.84872, 0.56", "-55.6332, 103.197, 10.0326, 0.56", "-59.3864, 109.252, 10.9296, 0.56", "-62.9194, 115.135, 12.9826, 0.56", "-67.1243, 120.718, 14.5322, 0.56", "-71.8535, 126.029, 15.3303, 0.56", "-77.1224, 130.846, 15.6134, 0.56", "-82.1007, 135.883, 16.5757, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-20.9941, 49.8416, 2.74531, 0.28", "-24.0609, 57.2341, 2.01435, 0.56", "-27.4579, 64.5114, 2.08607, 0.56", "-30.5042, 71.9, 2.91186, 0.56", "-34.2673, 78.9866, 2.97828, 0.56", "-38.2298, 85.8928, 2.03277, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.6412, 33.4307, 0.549477, 0.56", "-14.8293, 34.65, -1.60666, 0.56", "-16.0478, 35.3992, -2.77345, 0.56", "-17.2533, 36.1291, -3.85424, 0.28", "-19.3362, 37.3288, -5.56716, 0.83", "-23.8381, 39.9021, -9.25758, 0.56", "-25.0395, 40.6366, -10.2338, 0.56", "-25.9727, 41.2289, -10.9641, 0.56", "-26.8327, 41.8172, -11.6399, 0.56", "-27.6877, 42.5502, -12.3485, 0.56", "-30.2603, 45.1695, -14.3453, 0.56", "-31.2564, 46.2053, -14.9515, 0.56", "-32.0304, 47.0167, -15.4725, 0.56", "-32.7759, 47.863, -16.0295, 0.83", "-35.0738, 50.8631, -17.9205, 0.28", "-35.98, 52.2052, -18.7099, 0.56", "-40.6452, 57.4145, -24.1664, 0.56", "-44.7403, 63.3507, -29.3656, 0.56", "-48.4636, 69.6961, -34.3793, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.6412, 33.4307, 0.549477, 0.56", "-12.8461, 34.6854, -0.218204, 0.56", "-13.235, 36.431, -1.29712, 0.56", "-13.6456, 38.0168, -2.28256, 0.56", "-14.1763, 39.7956, -3.3561, 0.56", "-15.3652, 43.5888, -5.5783, 0.56", "-16.2133, 46.1985, -7.03334, 0.56", "-16.826, 47.9169, -8.00297, 0.56", "-17.5015, 49.8176, -9.05451, 0.56", "-17.8553, 50.8042, -9.54721, 0.56", "-18.3554, 52.1985, -10.1876, 0.56", "-19.0134, 53.821, -10.9405, 0.56", "-19.9878, 56.3543, -12.0152, 0.56", "-20.2826, 57.1868, -12.3993, 0.28", "-20.568, 58.0138, -12.7931, 0.56", "-21.4422, 60.6675, -14.1624, 0.56", "-22.3201, 63.1485, -15.5463, 0.56", "-25.3655, 70.3425, -18.5542, 0.56", "-27.1444, 77.2542, -22.9005, 0.56", "-28.3811, 84.329, -27.1827, 0.56", "-31.1591, 90.5158, -32.0202, 0.56", "-32.1945, 97.9105, -35.8129, 0.56", "-32.9758, 105.572, -39.1331, 0.56", "-33.4971, 112.619, -43.5981, 0.56", "-32.6434, 120.209, -47.0446, 0.56", "-31.2963, 127.576, -50.7784, 0.56", "-29.1626, 134.342, -55.1686, 0.56", "-26.3157, 140.186, -60.3432, 0.56", "-23.4733, 147.047, -64.1489, 0.56", "-20.6816, 154.068, -67.7087, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.5105, -93.8854, -14.1679, 0.83", "-16.3842, -97.0322, -12.8317, 0.83", "-16.9795, -98.8701, -12.4608, 0.83", "-17.3946, -100.177, -12.3035, 0.83", "-17.7241, -101.19, -12.2427, 0.83", "-18.0564, -102.219, -12.225, 0.83", "-18.7204, -104.259, -12.232, 0.83", "-20.3412, -108.901, -12.4923, 0.83", "-21.2739, -111.613, -12.6572, 0.83", "-22.6396, -115.695, -12.8987, 0.83", "-23.3568, -117.911, -13.0501, 1.11", "-24.057, -120.248, -13.2296, 0.83", "-24.7937, -122.887, -13.4419, 0.83", "-25.654, -126.24, -13.6727, 0.83", "-26.0129, -127.726, -13.7659, 0.83", "-26.9651, -132.152, -13.9721, 0.83", "-27.136, -133.017, -14.0065, 0.83", "-28.0059, -136.736, -14.2211, 0.83", "-28.2953, -137.93, -14.3204, 0.83", "-29.5166, -142.504, -14.8197, 0.83", "-31.1728, -148.377, -15.497, 0.83", "-31.7483, -150.344, -15.7252, 0.83", "-33.4185, -155.848, -16.4227, 0.83", "-34.1118, -158.038, -16.7406, 0.83", "-35.0039, -160.562, -17.1469, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.5105, -93.8854, -14.1679, 0.83", "-17.1961, -94.7899, -15.5176, 0.83", "-18.5398, -95.6203, -16.4586, 0.83", "-22.1712, -97.7585, -19.191, 0.56", "-23.1737, -98.3149, -19.9653, 0.56", "-24.4131, -98.9577, -20.9685, 0.56", "-26.231, -99.9001, -22.4399, 0.56", "-28.1011, -100.873, -24.1311, 0.56", "-29.8521, -101.812, -25.7626, 0.56", "-31.9869, -102.87, -27.4386, 0.56", "-33.3925, -103.51, -28.6655, 0.83", "-40.7587, -106.824, -34.0679, 0.83", "-49.1894, -108.581, -38.5268, 0.83", "-56.984, -109.502, -44.2131, 0.83", "-64.5935, -111.161, -49.9902, 0.83", "-71.952, -112.886, -56.0663, 0.83", "-79.4331, -112.463, -62.2112, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-35.0039, -160.562, -17.1469, 0.56", "-35.8198, -165.028, -17.9059, 0.56", "-36.4285, -168.359, -18.4721, 0.56", "-36.6524, -169.584, -18.6804, 0.56", "-37.3928, -173.637, -19.3692, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-35.0039, -160.562, -17.1469, 0.56", "-34.793, -161.578, -15.6697, 0.56", "-34.6247, -162.628, -14.252, 0.56", "-34.1281, -166.137, -9.69182, 0.56", "-33.9918, -167.517, -8.00976, 0.28", "-33.9533, -167.837, -7.61434, 0.83", "-33.7333, -169.679, -5.354, 0.28", "-33.6632, -170.358, -4.43876, 0.56", "-33.5893, -171.477, -2.82961, 0.28", "-33.58, -172.26, -1.79486, 0.56", "-33.6203, -173.819, 0.128989, 0.28", "-33.601, -174.157, 0.503995, 0.56", "-33.372, -175.703, 2.07569, 0.28", "-32.978, -177.345, 3.61837, 1.11", "-32.7595, -178.163, 4.29877, 1.11", "-32.2278, -180.125, 5.78209, 0.56", "-30.9125, -185.338, 9.43807, 0.28", "-30.6259, -186.384, 10.1433, 1.39", "-29.8834, -188.884, 11.6986, 0.28", "-29.425, -190.328, 12.5508, 1.11", "-28.5931, -192.995, 14.1657, 0.28", "-28.2865, -194.046, 14.8486, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-37.3928, -173.637, -19.3692, 0.56", "-38.3581, -176.314, -19.4192, 0.56", "-39.0545, -178.423, -19.5272, 0.56", "-39.7705, -180.661, -19.6754, 0.56", "-40.9945, -184.486, -19.9288, 0.56", "-41.3813, -185.695, -20.0089, 0.56", "-42.573, -189.42, -20.2556, 0.56", "-42.9188, -190.634, -20.3551, 0.56", "-43.1722, -191.594, -20.4521, 0.56", "-44.6305, -199.96, -19.9954, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-37.3928, -173.637, -19.3692, 0.28", "-37.7535, -176.258, -17.7689, 0.28", "-37.949, -177.221, -17.0827, 0.56", "-38.2933, -178.929, -15.8496, 0.28", "-38.5136, -180.056, -14.9621, 0.28", "-38.8109, -181.576, -13.7646, 0.28", "-39.2027, -183.58, -12.1865, 0.56", "-39.7842, -185.813, -10.4831, 0.28", "-40.1595, -187.262, -9.3189, 0.28", "-40.4637, -188.611, -8.2392, 0.56", "-40.4663, -197.775, -3.03335, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "axon_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "axon_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BTC_3ac7d39218_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, axon_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, axon_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.450000697082259)
    connect dend_25(0), soma_0(0.450000697082259)
    connect dend_20(0), soma_0(0.450000697082259)
    connect dend_8(0), soma_0(0.450000697082259)
    connect dend_5(0), soma_0(0.450000697082259)
    connect dend_0(0), soma_0(0.450000697082259)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.414762, -11.6197, -1.62187, 2.64004 ) }
    soma_0 { pt3dadd( 0.384603, -10.5465, -1.46411, 4.71198 ) }
    soma_0 { pt3dadd( 0.354444, -9.47334, -1.30636, 5.74801 ) }
    soma_0 { pt3dadd( 0.324285, -8.40018, -1.1486, 7.28344 ) }
    soma_0 { pt3dadd( 0.294125, -7.32702, -0.990848, 9.16307 ) }
    soma_0 { pt3dadd( 0.263966, -6.25385, -0.833093, 10.6182 ) }
    soma_0 { pt3dadd( 0.233807, -5.18069, -0.675338, 11.6398 ) }
    soma_0 { pt3dadd( 0.203648, -4.10753, -0.517583, 12.315 ) }
    soma_0 { pt3dadd( 0.173489, -3.03436, -0.359828, 12.8408 ) }
    soma_0 { pt3dadd( 0.14333, -1.9612, -0.202073, 12.9638 ) }
    soma_0 { pt3dadd( 0.113171, -0.888035, -0.0443183, 12.9997 ) }
    soma_0 { pt3dadd( 0.083012, 0.185129, 0.113437, 12.9186 ) }
    soma_0 { pt3dadd( 0.052853, 1.25829, 0.271192, 12.6149 ) }
    soma_0 { pt3dadd( 0.0226939, 2.33146, 0.428947, 11.9889 ) }
    soma_0 { pt3dadd( -0.00746517, 3.40462, 0.586702, 11.363 ) }
    soma_0 { pt3dadd( -0.0376242, 4.47778, 0.744457, 10.7371 ) }
    soma_0 { pt3dadd( -0.0677833, 5.55095, 0.902211, 10.104 ) }
    soma_0 { pt3dadd( -0.0979424, 6.62411, 1.05997, 9.17803 ) }
    soma_0 { pt3dadd( -0.128101, 7.69727, 1.21772, 8.07035 ) }
    soma_0 { pt3dadd( -0.15826, 8.77044, 1.37548, 6.54703 ) }
    soma_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 5.23645 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.765137, 10.4112, 2.31562, 3.33 ) }
    dend_28 { pt3dadd( -0.82384, 12.7078, 2.31562, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.87486, 4.35343, -11.9444, 1.11 ) }
    dend_25 { pt3dadd( 4.04391, 6.44926, -12.4351, 1.11 ) }
    dend_25 { pt3dadd( 5.49958, 8.76147, -13.1647, 0.83 ) }
    dend_25 { pt3dadd( 7.09907, 10.7585, -14.2357, 1.11 ) }
    dend_25 { pt3dadd( 8.58295, 12.2064, -15.5882, 0.56 ) }
    dend_25 { pt3dadd( 9.22477, 12.8327, -16.1731, 0.56 ) }
    dend_25 { pt3dadd( 9.86377, 13.4562, -16.7556, 0.83 ) }
    dend_25 { pt3dadd( 10.8121, 14.23, -17.6857, 0.83 ) }
    dend_25 { pt3dadd( 12.7554, 15.4868, -19.8535, 0.56 ) }
    dend_25 { pt3dadd( 15.2585, 16.7238, -22.881, 0.28 ) }
    dend_25 { pt3dadd( 20.6131, 22.0675, -28.356, 0.28 ) }
    dend_25 { pt3dadd( 26.6632, 25.7661, -34.373, 0.28 ) }
    dend_25 { pt3dadd( 32.6918, 29.5894, -40.3371, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.09513, -2.93432, -11.7344, 1.11 ) }
    dend_20 { pt3dadd( -3.45708, -6.28474, -14.0081, 0.83 ) }
    dend_20 { pt3dadd( -4.93201, -9.91312, -16.4704, 0.83 ) }
    dend_20 { pt3dadd( -6.08526, -12.7501, -18.3958, 0.83 ) }
    dend_20 { pt3dadd( -7.69241, -16.7037, -21.0789, 1.39 ) }
    dend_20 { pt3dadd( -13.4005, -27.1993, -25.574, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.62514, -12.2413, 1.00562, 2.78 ) }
    dend_8 { pt3dadd( -1.9529, -13.4601, -0.922836, 2.22 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.604862, -11.9133, 2.12562, 1.39 ) }
    dend_5 { pt3dadd( 1.01236, -12.819, 2.62196, 1.39 ) }
    dend_5 { pt3dadd( 2.52472, -16.7075, 4.07204, 1.39 ) }
    dend_5 { pt3dadd( 3.35246, -18.8582, 4.66914, 1.39 ) }
    dend_5 { pt3dadd( 3.92099, -20.2175, 4.96412, 1.39 ) }
    dend_5 { pt3dadd( 4.87886, -22.4249, 5.40381, 1.11 ) }
    dend_5 { pt3dadd( 5.71525, -24.3523, 5.78773, 1.39 ) }
    dend_5 { pt3dadd( 7.28888, -28.054, 6.38235, 1.11 ) }
    dend_5 { pt3dadd( 8.13565, -30.0523, 6.53071, 1.11 ) }
    dend_5 { pt3dadd( 9.39628, -33.0131, 6.54992, 1.11 ) }
    dend_5 { pt3dadd( 10.1077, -34.579, 6.50702, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.80514, 7.21318, 5.69562, 1.39 ) }
    dend_0 { pt3dadd( -5.2305, 8.12877, 5.63797, 1.39 ) }
    dend_0 { pt3dadd( -6.94846, 11.8267, 5.40514, 1.39 ) }
    dend_0 { pt3dadd( -8.05515, 14.2088, 5.25516, 1.39 ) }
    dend_0 { pt3dadd( -8.70717, 15.6123, 5.16679, 1.11 ) }
    dend_0 { pt3dadd( -10.2605, 18.9557, 4.95628, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -0.609797, 24.8377, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.82384, 12.7078, 2.31562, 1.39 ) }
    dend_32 { pt3dadd( -1.76256, 14.5779, 3.04356, 1.39 ) }
    dend_32 { pt3dadd( -3.67341, 18.3845, 4.52535, 1.39 ) }
    dend_32 { pt3dadd( -5.83435, 22.6894, 6.20107, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.82384, 12.7078, 2.31562, 1.39 ) }
    dend_29 { pt3dadd( 0.355859, 15.9075, 6.14343, 1.39 ) }
    dend_29 { pt3dadd( 1.31641, 18.7528, 9.82116, 1.11 ) }
    dend_29 { pt3dadd( 1.87711, 20.4138, 11.968, 1.11 ) }
    dend_29 { pt3dadd( 2.55072, 22.4092, 14.5471, 1.39 ) }
    dend_29 { pt3dadd( 3.51425, 25.2634, 18.2363, 1.11 ) }
    dend_29 { pt3dadd( 4.12862, 27.0833, 20.5886, 0.83 ) }
    dend_29 { pt3dadd( 4.58938, 28.8842, 23.5441, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 32.6918, 29.5894, -40.3371, 0.28 ) }
    dend_27 { pt3dadd( 38.1507, 34.481, -45.6931, 0.28 ) }
    dend_27 { pt3dadd( 43.7505, 40.8165, -49.092, 0.28 ) }
    dend_27 { pt3dadd( 48.1794, 48.0568, -52.5056, 0.28 ) }
    dend_27 { pt3dadd( 52.8451, 55.7886, -54.0332, 0.28 ) }
    dend_27 { pt3dadd( 58.3584, 62.6977, -56.3134, 0.28 ) }
    dend_27 { pt3dadd( 64.5397, 69.0485, -58.4131, 0.28 ) }
    dend_27 { pt3dadd( 70.983, 74.6239, -61.5729, 0.28 ) }
    dend_27 { pt3dadd( 78.474, 78.9788, -64.2032, 0.28 ) }
    dend_27 { pt3dadd( 85.6889, 83.3645, -67.4827, 0.28 ) }
    dend_27 { pt3dadd( 93.0836, 86.2287, -71.81, 0.28 ) }
    dend_27 { pt3dadd( 100.066, 90.9829, -75.1033, 0.28 ) }
    dend_27 { pt3dadd( 106.9, 96.239, -77.9435, 0.28 ) }
    dend_27 { pt3dadd( 113.343, 102.122, -80.5101, 0.28 ) }
    dend_27 { pt3dadd( 119.675, 107.038, -84.761, 0.28 ) }
    dend_27 { pt3dadd( 125.926, 111.292, -89.7538, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 32.6918, 29.5894, -40.3371, 0.28 ) }
    dend_26 { pt3dadd( 38.3001, 34.3121, -45.6396, 0.28 ) }
    dend_26 { pt3dadd( 42.8976, 39.4366, -51.5277, 0.28 ) }
    dend_26 { pt3dadd( 47.5066, 44.4382, -57.5069, 0.28 ) }
    dend_26 { pt3dadd( 51.5062, 49.7875, -63.6365, 0.28 ) }
    dend_26 { pt3dadd( 54.3558, 54.2525, -70.9655, 0.28 ) }
    dend_26 { pt3dadd( 57.2075, 58.8055, -78.242, 0.28 ) }
    dend_26 { pt3dadd( 59.2132, 62.5611, -86.2021, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( 59.4109, 67.0494, -94.051, 0.28 ) }
    dend_26 { pt3dadd( 59.3612, 73.4768, -100.493, 0.28 ) }
    dend_26 { pt3dadd( 60.1298, 79.5645, -107.198, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -13.4005, -27.1993, -25.574, 0.83 ) }
    dend_24 { pt3dadd( -17.2686, -34.2516, -29.8006, 0.83 ) }
    dend_24 { pt3dadd( -21.3028, -41.9378, -32.5887, 0.83 ) }
    dend_24 { pt3dadd( -24.8784, -49.1908, -36.7448, 0.83 ) }
    dend_24 { pt3dadd( -28.2707, -55.8966, -41.819, 0.83 ) }
    dend_24 { pt3dadd( -30.0117, -62.5437, -47.7115, 0.83 ) }
    dend_24 { pt3dadd( -31.0373, -68.2734, -54.5985, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -13.4005, -27.1993, -25.574, 0.83 ) }
    dend_21 { pt3dadd( -17.5628, -35.5286, -30.3412, 0.83 ) }
    dend_21 { pt3dadd( -20.7087, -44.6303, -34.5033, 0.83 ) }
    dend_21 { pt3dadd( -25.2814, -52.7995, -39.1582, 0.83 ) }
    dend_21 { pt3dadd( -28.6977, -60.3907, -45.445, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.9529, -13.4601, -0.922836, 1.94 ) }
    dend_9 { pt3dadd( -3.03311, -24.3327, 3.23099, 1.94 ) }
    dend_9 { pt3dadd( -3.67922, -30.8359, 5.71549, 1.94 ) }
    dend_9 { pt3dadd( -4.12456, -35.3184, 7.428, 1.94 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 19/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 10.1077, -34.579, 6.50702, 0.83 ) }
    dend_7 { pt3dadd( 11.7261, -36.2518, 9.86043, 0.83 ) }
    dend_7 { pt3dadd( 15.0481, -39.2679, 15.6046, 0.83 ) }
    dend_7 { pt3dadd( 16.5663, -40.5542, 18.2664, 0.83 ) }
    dend_7 { pt3dadd( 19.2259, -42.9111, 23.6478, 0.83 ) }
    dend_7 { pt3dadd( 20.4696, -44.0804, 26.4174, 0.83 ) }
    dend_7 { pt3dadd( 21.3697, -44.9318, 28.4924, 0.28 ) }
    dend_7 { pt3dadd( 22.8549, -46.2534, 31.7121, 1.39 ) }
    dend_7 { pt3dadd( 25.7578, -49.0124, 37.969, 1.11 ) }
    dend_7 { pt3dadd( 29.913, -53.1866, 47.2943, 0.56 ) }
    dend_7 { pt3dadd( 31.6677, -55.057, 51.5022, 2.5 ) }
    dend_7 { pt3dadd( 32.7813, -56.3617, 54.3085, 2.5 ) }
    dend_7 { pt3dadd( 34.1768, -58.1782, 58.0981, 0.28 ) }
    dend_7 { pt3dadd( 35.0502, -59.4161, 60.6008, 1.11 ) }
    dend_7 { pt3dadd( 35.5411, -60.1334, 61.8426, 1.11 ) }
    dend_7 { pt3dadd( 38.56, -64.5552, 68.8631, 0.28 ) }
    dend_7 { pt3dadd( 38.8404, -64.9728, 69.5052, 0.56 ) }
    dend_7 { pt3dadd( 40.1559, -66.9839, 72.5791, 0.28 ) }
    dend_7 { pt3dadd( 41.9122, -69.5963, 76.7119, 3.33 ) }
    dend_7 { pt3dadd( 43.8312, -72.2296, 80.6739, 0.28 ) }
    dend_7 { pt3dadd( 44.0603, -72.5115, 81.0309, 0.56 ) }
    dend_7 { pt3dadd( 47.3649, -76.373, 85.0178, 0.28 ) }
    dend_7 { pt3dadd( 47.64, -76.6897, 85.3114, 0.83 ) }
    dend_7 { pt3dadd( 50.0881, -79.44, 87.5835, 0.28 ) }
    dend_7 { pt3dadd( 51.5551, -81.0126, 88.767, 1.39 ) }
    dend_7 { pt3dadd( 59.8862, -89.504, 94.9355, 0.28 ) }
    dend_7 { pt3dadd( 61.6848, -91.2769, 96.1776, 2.5 ) }
    dend_7 { pt3dadd( 65.1661, -94.5583, 98.3156, 0.28 ) }
    dend_7 { pt3dadd( 65.8645, -95.2026, 98.6915, 0.83 ) }
    dend_7 { pt3dadd( 69.6583, -98.5592, 100.321, 0.28 ) }
    dend_7 { pt3dadd( 70.6379, -99.3501, 100.641, 1.11 ) }
    dend_7 { pt3dadd( 74.4325, -101.981, 101.419, 0.28 ) }
    dend_7 { pt3dadd( 75.9201, -102.968, 101.684, 1.11 ) }
    dend_7 { pt3dadd( 79.0582, -104.917, 102.062, 0.28 ) }
    dend_7 { pt3dadd( 80.8144, -106.015, 102.235, 1.39 ) }
    dend_7 { pt3dadd( 88.3527, -110.785, 102.565, 0.28 ) }
    dend_7 { pt3dadd( 89.0305, -111.211, 102.587, 1.39 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 56/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.1077, -34.579, 6.50702, 0.83 ) }
    dend_6 { pt3dadd( 12.1807, -39.57, 8.14188, 0.83 ) }
    dend_6 { pt3dadd( 13.5462, -43.0131, 9.29125, 0.83 ) }
    dend_6 { pt3dadd( 14.3353, -45.0354, 9.93993, 0.83 ) }
    dend_6 { pt3dadd( 15.2965, -47.4516, 10.6635, 0.83 ) }
    dend_6 { pt3dadd( 16.3943, -50.2571, 11.4477, 0.83 ) }
    dend_6 { pt3dadd( 17.9016, -53.7678, 12.3425, 0.83 ) }
    dend_6 { pt3dadd( 20.2913, -58.4665, 13.6196, 0.83 ) }
    dend_6 { pt3dadd( 21.0991, -59.9837, 13.987, 1.11 ) }
    dend_6 { pt3dadd( 22.0972, -61.8845, 14.4162, 0.83 ) }
    dend_6 { pt3dadd( 23.0492, -63.662, 14.779, 1.11 ) }
    dend_6 { pt3dadd( 26.7602, -70.1406, 16.0936, 0.83 ) }
    dend_6 { pt3dadd( 28.0747, -72.1522, 16.5442, 0.28 ) }
    dend_6 { pt3dadd( 28.2446, -72.3805, 16.5983, 0.83 ) }
    dend_6 { pt3dadd( 28.9749, -73.3391, 16.8295, 0.28 ) }
    dend_6 { pt3dadd( 31.8934, -77.12, 17.7849, 0.83 ) }
    dend_6 { pt3dadd( 33.9285, -79.7562, 18.442, 0.56 ) }
    dend_6 { pt3dadd( 34.9699, -81.2292, 18.8334, 0.83 ) }
    dend_6 { pt3dadd( 35.8051, -82.5027, 19.1712, 0.56 ) }
    dend_6 { pt3dadd( 37.6287, -85.4776, 19.9653, 1.11 ) }
    dend_6 { pt3dadd( 38.7663, -87.4706, 20.5417, 0.56 ) }
    dend_6 { pt3dadd( 39.4054, -88.7271, 20.9067, 0.83 ) }
    dend_6 { pt3dadd( 40.6175, -91.4708, 21.7071, 0.28 ) }
    dend_6 { pt3dadd( 40.8512, -92.0516, 21.8782, 0.83 ) }
    dend_6 { pt3dadd( 42.5078, -96.3516, 23.1396, 1.94 ) }
    dend_6 { pt3dadd( 43.2801, -98.334, 23.7157, 1.11 ) }
    dend_6 { pt3dadd( 44.2207, -100.698, 24.3435, 0.56 ) }
    dend_6 { pt3dadd( 45.1342, -102.769, 24.9047, 0.83 ) }
    dend_6 { pt3dadd( 46.1083, -104.831, 25.4431, 0.56 ) }
    dend_6 { pt3dadd( 48.1381, -108.846, 26.4755, 1.39 ) }
    dend_6 { pt3dadd( 49.2082, -110.925, 26.9717, 0.56 ) }
    dend_6 { pt3dadd( 49.896, -112.199, 27.2618, 0.83 ) }
    dend_6 { pt3dadd( 51.954, -115.818, 28.1803, 0.28 ) }
    dend_6 { pt3dadd( 52.2401, -116.307, 28.3215, 0.83 ) }
    dend_6 { pt3dadd( 53.8986, -119.106, 29.1796, 2.22 ) }
    dend_6 { pt3dadd( 58.6122, -126.922, 31.7638, 0.28 ) }
    dend_6 { pt3dadd( 60.1624, -129.61, 32.6748, 1.39 ) }
    dend_6 { pt3dadd( 61.5387, -132.155, 33.5876, 0.56 ) }
    dend_6 { pt3dadd( 62.7361, -134.553, 34.4679, 0.28 ) }
    dend_6 { pt3dadd( 63.2554, -135.651, 34.904, 0.83 ) }
    dend_6 { pt3dadd( 64.3252, -138.078, 35.9575, 0.28 ) }
    dend_6 { pt3dadd( 66.1674, -142.533, 37.9914, 1.39 ) }
    dend_6 { pt3dadd( 67.5631, -146.262, 39.5435, 0.28 ) }
    dend_6 { pt3dadd( 67.7561, -146.839, 39.7714, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 68.3628, -148.887, 40.549, 0.28 ) }
    dend_6 { pt3dadd( 68.5457, -149.642, 40.8127, 0.83 ) }
    dend_6 { pt3dadd( 68.9548, -151.891, 41.4909, 0.28 ) }
    dend_6 { pt3dadd( 69.191, -153.552, 41.9455, 1.94 ) }
    dend_6 { pt3dadd( 69.5289, -157.149, 42.7982, 0.28 ) }
    dend_6 { pt3dadd( 69.6093, -158.592, 43.1279, 0.83 ) }
    dend_6 { pt3dadd( 69.9012, -161.375, 43.7581, 0.28 ) }
    dend_6 { pt3dadd( 70.0899, -162.632, 44.0431, 0.83 ) }
    dend_6 { pt3dadd( 70.3574, -164.329, 44.4187, 0.56 ) }
    dend_6 { pt3dadd( 71.0779, -168.381, 45.2826, 0.28 ) }
    dend_6 { pt3dadd( 71.3, -169.403, 45.4737, 1.67 ) }
    dend_6 { pt3dadd( 72.943, -175.374, 46.8306, 0.28 ) }
    dend_6 { pt3dadd( 73.2874, -176.312, 47.103, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.2605, 18.9557, 4.95628, 0.83 ) }
    dend_4 { pt3dadd( -10.8826, 19.7317, 6.14748, 0.83 ) }
    dend_4 { pt3dadd( -11.8046, 20.8289, 7.96896, 0.83 ) }
    dend_4 { pt3dadd( -13.7881, 23.7939, 12.7281, 0.83 ) }
    dend_4 { pt3dadd( -14.0428, 24.2401, 13.4961, 0.83 ) }
    dend_4 { pt3dadd( -14.7694, 25.6138, 15.8604, 0.83 ) }
    dend_4 { pt3dadd( -15.8149, 27.7087, 19.5223, 0.83 ) }
    dend_4 { pt3dadd( -16.4891, 29.0018, 21.9491, 0.83 ) }
    dend_4 { pt3dadd( -17.324, 30.6597, 25.1918, 0.83 ) }
    dend_4 { pt3dadd( -18.628, 33.2858, 30.1059, 0.56 ) }
    dend_4 { pt3dadd( -18.8357, 33.7907, 30.9552, 0.83 ) }
    dend_4 { pt3dadd( -19.3099, 35.313, 33.1137, 0.83 ) }
    dend_4 { pt3dadd( -19.9143, 37.1181, 35.3886, 1.11 ) }
    dend_4 { pt3dadd( -20.7484, 39.0676, 37.555, 0.28 ) }
    dend_4 { pt3dadd( -21.2638, 39.9224, 38.3789, 1.11 ) }
    dend_4 { pt3dadd( -22.7254, 41.7337, 39.8461, 0.56 ) }
    dend_4 { pt3dadd( -24.2137, 43.0728, 40.9506, 0.28 ) }
    dend_4 { pt3dadd( -27.1171, 44.6515, 42.536, 0.56 ) }
    dend_4 { pt3dadd( -27.9612, 44.9543, 42.9253, 0.56 ) }
    dend_4 { pt3dadd( -30.9678, 45.7526, 44.189, 2.22 ) }
    dend_4 { pt3dadd( -34.5592, 46.4364, 45.8302, 0.28 ) }
    dend_4 { pt3dadd( -37.0059, 46.7341, 46.9317, 0.83 ) }
    dend_4 { pt3dadd( -41.3836, 47.0941, 48.8834, 0.28 ) }
    dend_4 { pt3dadd( -42.3342, 47.1657, 49.2797, 0.56 ) }
    dend_4 { pt3dadd( -43.4814, 47.2079, 49.7575, 0.83 ) }
    dend_4 { pt3dadd( -46.2687, 47.1976, 50.9019, 0.83 ) }
    dend_4 { pt3dadd( -47.6452, 47.1831, 51.5322, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -10.2605, 18.9557, 4.95628, 0.83 ) }
    dend_1 { pt3dadd( -13.619, 19.6219, 5.4966, 0.83 ) }
    dend_1 { pt3dadd( -15.9158, 20.0185, 5.76126, 0.56 ) }
    dend_1 { pt3dadd( -17.7105, 20.2969, 5.9222, 0.56 ) }
    dend_1 { pt3dadd( -20.6677, 20.8719, 6.30367, 0.56 ) }
    dend_1 { pt3dadd( -21.6873, 21.0777, 6.46298, 0.56 ) }
    dend_1 { pt3dadd( -24.6105, 21.7758, 6.95097, 0.56 ) }
    dend_1 { pt3dadd( -26.0243, 22.1849, 7.29651, 0.56 ) }
    dend_1 { pt3dadd( -26.487, 22.3487, 7.43149, 0.56 ) }
    dend_1 { pt3dadd( -30.0118, 23.9993, 8.61163, 0.56 ) }
    dend_1 { pt3dadd( -32.1184, 25.2108, 9.34591, 0.56 ) }
    dend_1 { pt3dadd( -34.765, 26.8633, 10.3511, 0.56 ) }
    dend_1 { pt3dadd( -36.8819, 28.3415, 11.2683, 0.56 ) }
    dend_1 { pt3dadd( -39.5806, 30.312, 12.5103, 0.83 ) }
    dend_1 { pt3dadd( -42.2207, 32.3453, 13.7255, 1.11 ) }
    dend_1 { pt3dadd( -43.1534, 33.1287, 14.1312, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.647035 ) }
    axon_1 { pt3dadd( -1.45255, 54.8258, 1.53323, 0.647035 ) }
    axon_1 { pt3dadd( -1.87393, 69.8199, 1.53323, 0.647035 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 59/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -5.83435, 22.6894, 6.20107, 0.83 ) }
    dend_40 { pt3dadd( -5.6041, 23.6479, 7.15437, 0.83 ) }
    dend_40 { pt3dadd( -5.47857, 24.2131, 7.72758, 1.11 ) }
    dend_40 { pt3dadd( -4.72415, 26.2708, 9.9964, 0.56 ) }
    dend_40 { pt3dadd( -4.37564, 27.2835, 11.0695, 0.83 ) }
    dend_40 { pt3dadd( -4.09173, 28.1537, 11.9332, 0.83 ) }
    dend_40 { pt3dadd( -3.65894, 29.4957, 13.2348, 0.83 ) }
    dend_40 { pt3dadd( -3.2748, 30.6997, 14.3546, 1.39 ) }
    dend_40 { pt3dadd( -2.14199, 34.4376, 17.6431, 0.83 ) }
    dend_40 { pt3dadd( -1.69656, 35.8065, 18.7856, 1.11 ) }
    dend_40 { pt3dadd( 0.587967, 42.8498, 24.2844, 0.28 ) }
    dend_40 { pt3dadd( 1.31585, 45.112, 26.0035, 1.67 ) }
    dend_40 { pt3dadd( 2.24762, 48.117, 28.2177, 0.28 ) }
    dend_40 { pt3dadd( 2.4843, 48.9088, 28.7987, 0.83 ) }
    dend_40 { pt3dadd( 3.40194, 52.3472, 31.1279, 0.28 ) }
    dend_40 { pt3dadd( 3.92764, 54.3419, 32.4451, 0.28 ) }
    dend_40 { pt3dadd( 4.25294, 55.7039, 33.2946, 0.83 ) }
    dend_40 { pt3dadd( 4.47763, 56.6569, 33.9272, 0.28 ) }
    dend_40 { pt3dadd( 4.72373, 57.4517, 34.6805, 0.56 ) }
    dend_40 { pt3dadd( 6.15732, 61.4764, 39.2021, 0.28 ) }
    dend_40 { pt3dadd( 6.63011, 62.422, 40.4423, 0.83 ) }
    dend_40 { pt3dadd( 7.76744, 64.3159, 43.1504, 0.56 ) }
    dend_40 { pt3dadd( 8.19678, 64.9769, 44.0669, 1.39 ) }
    dend_40 { pt3dadd( 10.6872, 68.5584, 49.0649, 0.28 ) }
    dend_40 { pt3dadd( 11.0556, 69.0861, 49.7613, 1.39 ) }
    dend_40 { pt3dadd( 13.1851, 72.1311, 53.7822, 0.28 ) }
    dend_40 { pt3dadd( 13.5424, 72.7132, 54.448, 1.11 ) }
    dend_40 { pt3dadd( 14.8343, 75.2317, 56.9524, 0.28 ) }
    dend_40 { pt3dadd( 14.9735, 75.5612, 57.2388, 0.83 ) }
    dend_40 { pt3dadd( 17.3859, 83.0755, 62.7259, 0.28 ) }
    dend_40 { pt3dadd( 17.7926, 84.5479, 63.7454, 1.67 ) }
    dend_40 { pt3dadd( 18.5288, 88.2169, 66.07, 0.28 ) }
    dend_40 { pt3dadd( 18.6139, 88.644, 66.3381, 0.83 ) }
    dend_40 { pt3dadd( 18.7791, 89.7607, 67.0379, 0.28 ) }
    dend_40 { pt3dadd( 18.8491, 90.3708, 67.42, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.83435, 22.6894, 6.20107, 1.11 ) }
    dend_33 { pt3dadd( -7.30003, 24.5422, 5.68872, 1.11 ) }
    dend_33 { pt3dadd( -8.35933, 25.8813, 5.31843, 1.11 ) }
    dend_33 { pt3dadd( -9.02032, 26.7169, 5.08737, 1.11 ) }
    dend_33 { pt3dadd( -10.108, 28.0919, 4.70717, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 99/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.58938, 28.8842, 23.5441, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( 4.41161, 31.5264, 27.1355, 0.56 ) }
    dend_31 { pt3dadd( 4.80879, 34.0688, 30.9623, 0.83 ) }
    dend_31 { pt3dadd( 5.1809, 35.4372, 33.1272, 0.56 ) }
    dend_31 { pt3dadd( 6.1402, 38.1698, 37.2872, 1.11 ) }
    dend_31 { pt3dadd( 7.26959, 41.2513, 41.827, 0.56 ) }
    dend_31 { pt3dadd( 8.01221, 43.2523, 44.6629, 1.39 ) }
    dend_31 { pt3dadd( 9.73173, 47.1543, 49.8242, 0.28 ) }
    dend_31 { pt3dadd( 10.7269, 49.2426, 52.5709, 1.67 ) }
    dend_31 { pt3dadd( 12.1722, 52.123, 56.3196, 0.28 ) }
    dend_31 { pt3dadd( 12.4424, 52.7947, 57.0678, 0.56 ) }
    dend_31 { pt3dadd( 12.8925, 54.4166, 58.4961, 0.28 ) }
    dend_31 { pt3dadd( 12.9767, 54.8078, 58.8052, 0.83 ) }
    dend_31 { pt3dadd( 13.3695, 57.224, 60.5529, 0.28 ) }
    dend_31 { pt3dadd( 13.6961, 59.1627, 61.9229, 1.67 ) }
    dend_31 { pt3dadd( 15.615, 70.5131, 69.7601, 0.28 ) }
    dend_31 { pt3dadd( 16.0769, 73.2809, 71.7157, 2.22 ) }
    dend_31 { pt3dadd( 16.8257, 78.2436, 75.2083, 0.28 ) }
    dend_31 { pt3dadd( 16.9446, 79.1067, 75.8142, 0.83 ) }
    dend_31 { pt3dadd( 17.4239, 83.0033, 78.5024, 0.28 ) }
    dend_31 { pt3dadd( 17.5373, 84.4569, 79.4625, 0.56 ) }
    dend_31 { pt3dadd( 17.6884, 89.7531, 82.6695, 0.28 ) }
    dend_31 { pt3dadd( 17.6112, 91.467, 83.663, 1.11 ) }
    dend_31 { pt3dadd( 17.29, 94.3639, 85.1239, 0.28 ) }
    dend_31 { pt3dadd( 17.1271, 95.5566, 85.6768, 0.83 ) }
    dend_31 { pt3dadd( 16.5377, 98.3479, 86.7975, 0.28 ) }
    dend_31 { pt3dadd( 15.6845, 101.886, 88.0849, 1.11 ) }
    dend_31 { pt3dadd( 13.4596, 109.92, 90.5972, 0.28 ) }
    dend_31 { pt3dadd( 13.0951, 111.031, 90.9591, 0.28 ) }
    dend_31 { pt3dadd( 12.536, 112.528, 91.4596, 1.11 ) }
    dend_31 { pt3dadd( 10.3736, 117.966, 93.3168, 0.28 ) }
    dend_31 { pt3dadd( 10.1903, 118.377, 93.4585, 0.28 ) }
    dend_31 { pt3dadd( 8.92044, 120.832, 94.2191, 1.39 ) }
    dend_31 { pt3dadd( 7.328, 123.179, 95.1382, 0.28 ) }
    dend_31 { pt3dadd( 6.19879, 124.812, 95.9292, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 34/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.58938, 28.8842, 23.5441, 0.28 ) }
    dend_30 { pt3dadd( 5.64596, 32.9348, 25.9673, 0.28 ) }
    dend_30 { pt3dadd( 5.96837, 33.9794, 26.6902, 0.83 ) }
    dend_30 { pt3dadd( 6.67396, 35.7979, 28.0356, 1.11 ) }
    dend_30 { pt3dadd( 7.49534, 37.7593, 29.4631, 0.83 ) }
    dend_30 { pt3dadd( 7.85948, 38.5742, 30.027, 0.28 ) }
    dend_30 { pt3dadd( 8.12492, 39.1368, 30.4246, 0.28 ) }
    dend_30 { pt3dadd( 9.64946, 41.8049, 32.3944, 1.39 ) }
    dend_30 { pt3dadd( 11.0792, 43.8949, 34.1431, 0.83 ) }
    dend_30 { pt3dadd( 12.7045, 46.1188, 36.0206, 0.28 ) }
    dend_30 { pt3dadd( 13.3846, 46.9856, 36.7179, 0.83 ) }
    dend_30 { pt3dadd( 15.1392, 49.1555, 38.3736, 0.28 ) }
    dend_30 { pt3dadd( 17.0548, 51.353, 39.9704, 1.39 ) }
    dend_30 { pt3dadd( 19.2485, 53.7173, 41.5475, 0.28 ) }
    dend_30 { pt3dadd( 21.1309, 55.6152, 42.7341, 0.28 ) }
    dend_30 { pt3dadd( 22.5446, 56.9263, 43.4975, 0.56 ) }
    dend_30 { pt3dadd( 23.7095, 57.8715, 44.1516, 0.83 ) }
    dend_30 { pt3dadd( 26.1546, 59.6647, 45.4575, 0.28 ) }
    dend_30 { pt3dadd( 26.5116, 59.9044, 45.6421, 0.83 ) }
    dend_30 { pt3dadd( 29.0366, 61.4263, 47.2547, 0.28 ) }
    dend_30 { pt3dadd( 30.2648, 62.1016, 48.1374, 0.83 ) }
    dend_30 { pt3dadd( 35.5096, 64.8345, 52.2271, 0.28 ) }
    dend_30 { pt3dadd( 36.172, 65.1678, 52.7644, 1.39 ) }
    dend_30 { pt3dadd( 38.8665, 66.5568, 55.079, 1.94 ) }
    dend_30 { pt3dadd( 44.0064, 69.2887, 59.6086, 0.28 ) }
    dend_30 { pt3dadd( 44.6925, 69.6917, 60.2528, 0.56 ) }
    dend_30 { pt3dadd( 46.8573, 71.17, 62.2725, 0.28 ) }
    dend_30 { pt3dadd( 47.6179, 71.7813, 62.9408, 1.11 ) }
    dend_30 { pt3dadd( 49.9366, 73.8333, 65.0207, 0.28 ) }
    dend_30 { pt3dadd( 50.7794, 74.7056, 65.8221, 1.39 ) }
    dend_30 { pt3dadd( 53.0556, 77.5097, 67.8956, 0.28 ) }
    dend_30 { pt3dadd( 55.3035, 80.8737, 70.099, 0.56 ) }
    dend_30 { pt3dadd( 56.1177, 82.3244, 70.9259, 0.56 ) }
    dend_30 { pt3dadd( 57.2182, 84.5944, 72.0764, 0.83 ) }
    dend_30 { pt3dadd( 58.3087, 87.3317, 73.219, 0.28 ) }
    dend_30 { pt3dadd( 59.0619, 89.5925, 74.0491, 1.39 ) }
    dend_30 { pt3dadd( 60.2104, 94.0074, 75.361, 0.28 ) }
    dend_30 { pt3dadd( 60.4741, 95.5829, 75.7994, 0.56 ) }
    dend_30 { pt3dadd( 60.7325, 97.4884, 76.3081, 0.28 ) }
    dend_30 { pt3dadd( 61.088, 100.096, 77.0432, 1.39 ) }
    dend_30 { pt3dadd( 61.3706, 102.05, 77.6892, 0.28 ) }
    dend_30 { pt3dadd( 61.5205, 103.012, 78.0895, 0.56 ) }
    dend_30 { pt3dadd( 62.5925, 109.225, 81.0225, 0.28 ) }
    dend_30 { pt3dadd( 62.7909, 110.26, 81.5609, 1.39 ) }
    dend_30 { pt3dadd( 63.8642, 115.064, 84.2368, 0.28 ) }
    dend_30 { pt3dadd( 64.3776, 117.187, 85.4467, 0.83 ) }
    dend_30 { pt3dadd( 65.743, 123.07, 88.6286, 0.28 ) }
    dend_30 { pt3dadd( 65.8907, 123.71, 88.9533, 0.56 ) }
    dend_30 { pt3dadd( 66.4445, 126.874, 90.2154, 0.28 ) }
    dend_30 { pt3dadd( 66.5689, 127.858, 90.5261, 0.28 ) }
    dend_30 { pt3dadd( 66.7887, 130.183, 91.124, 1.39 ) }
    dend_30 { pt3dadd( 67.3665, 138.066, 92.7737, 0.28 ) }
    dend_30 { pt3dadd( 67.4714, 140.449, 93.1538, 1.11 ) }
    dend_30 { pt3dadd( 67.6291, 148.665, 94.2948, 0.28 ) }
    dend_30 { pt3dadd( 67.6157, 149.725, 94.4021, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -28.6977, -60.3907, -45.445, 0.28 ) }
    dend_23 { pt3dadd( -32.1559, -68.0696, -50.0123, 0.28 ) }
    dend_23 { pt3dadd( -34.8772, -76.4915, -53.7577, 0.28 ) }
    dend_23 { pt3dadd( -37.7853, -84.383, -58.3665, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 93/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -28.6977, -60.3907, -45.445, 0.28 ) }
    dend_22 { pt3dadd( -30.9946, -67.609, -49.7372, 0.28 ) }
    dend_22 { pt3dadd( -32.4808, -74.815, -54.3907, 0.28 ) }
    dend_22 { pt3dadd( -32.2955, -81.9318, -59.3947, 0.28 ) }
    dend_22 { pt3dadd( -30.9719, -87.6926, -65.7145, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.12456, -35.3184, 7.428, 0.83 ) }
    dend_11 { pt3dadd( -5.20202, -38.9219, 6.2079, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( -5.64801, -41.3784, 5.41941, 1.11 ) }
    dend_11 { pt3dadd( -6.30828, -46.1596, 3.51766, 1.11 ) }
    dend_11 { pt3dadd( -6.82264, -50.4168, 1.79353, 1.11 ) }
    dend_11 { pt3dadd( -7.19312, -53.4831, 0.551672, 1.11 ) }
    dend_11 { pt3dadd( -8.17989, -61.6502, -2.75595, 1.11 ) }
    dend_11 { pt3dadd( -8.46707, -65.2359, -4.27671, 0.83 ) }
    dend_11 { pt3dadd( -8.67133, -71.6203, -6.91311, 0.83 ) }
    dend_11 { pt3dadd( -8.5245, -75.7083, -8.44051, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 8/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.12456, -35.3184, 7.428, 1.11 ) }
    dend_10 { pt3dadd( -4.16902, -37.5837, 10.6018, 1.11 ) }
    dend_10 { pt3dadd( -4.12341, -38.6065, 12.2581, 1.11 ) }
    dend_10 { pt3dadd( -4.10151, -40.5173, 15.4357, 1.11 ) }
    dend_10 { pt3dadd( -4.23496, -42.6069, 18.8763, 1.11 ) }
    dend_10 { pt3dadd( -4.64036, -47.0444, 26.2114, 1.11 ) }
    dend_10 { pt3dadd( -4.94234, -49.5372, 30.3925, 1.11 ) }
    dend_10 { pt3dadd( -5.29121, -51.6686, 34.1648, 0.83 ) }
    dend_10 { pt3dadd( -5.44837, -52.6531, 35.9568, 0.83 ) }
    dend_10 { pt3dadd( -5.67358, -54.812, 39.8878, 0.83 ) }
    dend_10 { pt3dadd( -5.66943, -56.0606, 41.9578, 0.83 ) }
    dend_10 { pt3dadd( -5.57837, -59.0535, 46.4759, 0.56 ) }
    dend_10 { pt3dadd( -5.41832, -60.687, 48.8706, 0.56 ) }
    dend_10 { pt3dadd( -5.22504, -61.6182, 50.2309, 0.28 ) }
    dend_10 { pt3dadd( -4.49208, -63.801, 53.4924, 1.67 ) }
    dend_10 { pt3dadd( -2.70587, -68.2501, 60.701, 0.28 ) }
    dend_10 { pt3dadd( -2.22405, -69.3969, 62.8448, 1.94 ) }
    dend_10 { pt3dadd( -1.86423, -70.2036, 64.5634, 3.33 ) }
    dend_10 { pt3dadd( -1.31436, -71.5365, 67.9068, 0.83 ) }
    dend_10 { pt3dadd( -0.787742, -73.0155, 71.9823, 0.28 ) }
    dend_10 { pt3dadd( 0.00435103, -75.9323, 80.1377, 2.22 ) }
    dend_10 { pt3dadd( 0.774797, -79.1167, 89.1728, 0.28 ) }
    dend_10 { pt3dadd( 1.00187, -80.1687, 92.2472, 1.94 ) }
    dend_10 { pt3dadd( 1.50313, -83.2428, 101.587, 0.28 ) }
    dend_10 { pt3dadd( 1.54979, -83.7349, 103.113, 1.94 ) }
    dend_10 { pt3dadd( 1.65837, -85.3277, 108.188, 0.28 ) }
    dend_10 { pt3dadd( 1.67905, -85.5602, 108.86, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -43.1534, 33.1287, 14.1312, 0.28 ) }
    dend_3 { pt3dadd( -45.6036, 36.2865, 14.5341, 0.28 ) }
    dend_3 { pt3dadd( -47.4205, 38.5586, 14.9562, 0.56 ) }
    dend_3 { pt3dadd( -48.6358, 40.0297, 15.255, 0.83 ) }
    dend_3 { pt3dadd( -50.2118, 41.4867, 15.748, 1.67 ) }
    dend_3 { pt3dadd( -52.2954, 43.27, 16.2797, 0.56 ) }
    dend_3 { pt3dadd( -53.4256, 44.2087, 16.5274, 0.56 ) }
    dend_3 { pt3dadd( -56.0077, 46.1687, 17.1575, 0.28 ) }
    dend_3 { pt3dadd( -56.8002, 46.7458, 17.3506, 0.83 ) }
    dend_3 { pt3dadd( -66.1392, 53.4612, 19.5353, 0.28 ) }
    dend_3 { pt3dadd( -68.8788, 55.4223, 20.1175, 1.11 ) }
    dend_3 { pt3dadd( -70.9683, 56.8798, 20.4608, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -43.1534, 33.1287, 14.1312, 0.28 ) }
    dend_2 { pt3dadd( -49.9813, 31.9158, 14.2212, 0.28 ) }
    dend_2 { pt3dadd( -52.1326, 31.5439, 14.2975, 0.56 ) }
    dend_2 { pt3dadd( -54.5469, 31.1069, 14.5376, 0.28 ) }
    dend_2 { pt3dadd( -55.7988, 30.8573, 14.6875, 0.56 ) }
    dend_2 { pt3dadd( -59.6408, 30.0088, 15.3996, 0.28 ) }
    dend_2 { pt3dadd( -62.3521, 29.4497, 15.9922, 0.56 ) }
    dend_2 { pt3dadd( -63.2197, 29.308, 16.3008, 0.28 ) }
    dend_2 { pt3dadd( -67.0188, 29.2488, 18.0783, 0.56 ) }
    dend_2 { pt3dadd( -68.2464, 29.4079, 18.7234, 0.56 ) }
    dend_2 { pt3dadd( -72.954, 31.2636, 20.2754, 0.28 ) }
    dend_2 { pt3dadd( -74.5261, 32.2735, 20.4499, 0.56 ) }
    dend_2 { pt3dadd( -76.6193, 33.9576, 20.2659, 1.67 ) }
    dend_2 { pt3dadd( -82.6399, 39.3449, 19.0087, 0.28 ) }
    dend_2 { pt3dadd( -84.4169, 41.1071, 18.481, 1.39 ) }
    dend_2 { pt3dadd( -94.677, 52.0261, 14.5939, 0.28 ) }
    dend_2 { pt3dadd( -95.4894, 52.9601, 14.172, 0.83 ) }
    dend_2 { pt3dadd( -100.666, 58.914, 10.884, 0.28 ) }
    dend_2 { pt3dadd( -101.323, 59.6663, 10.3478, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.108, 28.0919, 4.70717, 0.56 ) }
    dend_37 { pt3dadd( -11.4621, 30.6871, 4.36713, 0.56 ) }
    dend_37 { pt3dadd( -12.0893, 31.8893, 4.20962, 0.83 ) }
    dend_37 { pt3dadd( -12.7644, 33.1833, 4.04008, 0.28 ) }
    dend_37 { pt3dadd( -13.4012, 34.4038, 3.88016, 0.56 ) }
    dend_37 { pt3dadd( -15.3063, 38.0553, 3.40174, 0.56 ) }
    dend_37 { pt3dadd( -16.8237, 40.9636, 3.02069, 0.56 ) }
    dend_37 { pt3dadd( -20.9941, 49.8416, 2.74531, 0.56 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 74/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.108, 28.0919, 4.70717, 0.83 ) }
    dend_34 { pt3dadd( -12.6412, 33.4307, 0.549477, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.5245, -75.7083, -8.44051, 0.83 ) }
    dend_13 { pt3dadd( -9.55869, -77.4668, -8.98367, 0.83 ) }
    dend_13 { pt3dadd( -10.8019, -80.3783, -9.89244, 0.83 ) }
    dend_13 { pt3dadd( -11.357, -81.7757, -10.3275, 0.83 ) }
    dend_13 { pt3dadd( -11.9408, -83.2452, -10.785, 0.83 ) }
    dend_13 { pt3dadd( -13.0928, -86.1449, -11.6878, 0.83 ) }
    dend_13 { pt3dadd( -13.9993, -88.4267, -12.3983, 0.83 ) }
    dend_13 { pt3dadd( -15.0765, -91.9162, -13.5005, 0.83 ) }
    dend_13 { pt3dadd( -15.5105, -93.8854, -14.1679, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -8.5245, -75.7083, -8.44051, 0.83 ) }
    dend_12 { pt3dadd( -9.1687, -81.59, -7.1742, 0.83 ) }
    dend_12 { pt3dadd( -9.37016, -84.2503, -6.57792, 0.83 ) }
    dend_12 { pt3dadd( -9.41453, -85.2602, -6.30632, 0.56 ) }
    dend_12 { pt3dadd( -9.55778, -89.5122, -5.00547, 0.56 ) }
    dend_12 { pt3dadd( -9.57196, -90.7737, -4.60658, 0.56 ) }
    dend_12 { pt3dadd( -9.56924, -94.3224, -3.49004, 0.56 ) }
    dend_12 { pt3dadd( -9.54379, -97.0375, -2.70106, 0.56 ) }
    dend_12 { pt3dadd( -9.51339, -99.4806, -1.85635, 0.56 ) }
    dend_12 { pt3dadd( -9.57903, -101.921, -0.92709, 0.28 ) }
    dend_12 { pt3dadd( -9.70653, -103.494, -0.284912, 0.83 ) }
    dend_12 { pt3dadd( -9.85499, -104.851, 0.256867, 0.83 ) }
    dend_12 { pt3dadd( -10.4447, -108.803, 1.72875, 0.28 ) }
    dend_12 { pt3dadd( -10.7499, -110.515, 2.26621, 0.83 ) }
    dend_12 { pt3dadd( -11.9103, -116.582, 3.91072, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -12.1255, -117.699, 4.1739, 1.11 ) }
    dend_12 { pt3dadd( -12.6956, -121.086, 4.91473, 0.28 ) }
    dend_12 { pt3dadd( -12.9536, -123.113, 5.30851, 1.39 ) }
    dend_12 { pt3dadd( -13.2347, -129.51, 6.38244, 0.28 ) }
    dend_12 { pt3dadd( -13.2091, -130.206, 6.49556, 1.39 ) }
    dend_12 { pt3dadd( -12.9752, -131.584, 6.72869, 1.94 ) }
    dend_12 { pt3dadd( -11.9056, -135.628, 7.53233, 0.28 ) }
    dend_12 { pt3dadd( -11.5036, -136.718, 7.77981, 1.11 ) }
    dend_12 { pt3dadd( -10.0298, -139.836, 8.54949, 0.28 ) }
    dend_12 { pt3dadd( -9.77312, -140.274, 8.66681, 0.83 ) }
    dend_12 { pt3dadd( -6.86834, -144.925, 9.71966, 0.28 ) }
    dend_12 { pt3dadd( -6.21683, -145.895, 9.9023, 0.28 ) }
    dend_12 { pt3dadd( -5.60394, -146.735, 9.95273, 0.56 ) }
    dend_12 { pt3dadd( -4.86227, -147.729, 9.87005, 0.28 ) }
    dend_12 { pt3dadd( -4.41769, -148.275, 9.66613, 0.83 ) }
    dend_12 { pt3dadd( -2.60576, -150.129, 8.48777, 0.28 ) }
    dend_12 { pt3dadd( -2.45943, -150.247, 8.35397, 0.56 ) }
    dend_12 { pt3dadd( -1.49235, -150.965, 7.42607, 0.28 ) }
    dend_12 { pt3dadd( -0.81779, -151.449, 6.78306, 0.56 ) }
    dend_12 { pt3dadd( 1.65953, -153.095, 4.69442, 0.28 ) }
    dend_12 { pt3dadd( 1.81966, -153.198, 4.56089, 0.56 ) }
    dend_12 { pt3dadd( 3.06034, -154.014, 3.55752, 0.28 ) }
    dend_12 { pt3dadd( 3.90495, -154.566, 2.87648, 0.83 ) }
    dend_12 { pt3dadd( 6.62416, -156.292, 0.715976, 0.28 ) }
    dend_12 { pt3dadd( 9.90704, -158.311, -1.87881, 0.28 ) }
    dend_12 { pt3dadd( 10.9015, -158.882, -2.74619, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 26/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -20.9941, 49.8416, 2.74531, 0.56 ) }
    dend_39 { pt3dadd( -24.9449, 55.844, 2.71573, 0.56 ) }
    dend_39 { pt3dadd( -28.9036, 61.706, 3.89392, 0.56 ) }
    dend_39 { pt3dadd( -32.3056, 68.0483, 3.91916, 0.56 ) }
    dend_39 { pt3dadd( -36.5301, 73.8528, 3.80058, 0.56 ) }
    dend_39 { pt3dadd( -41.1215, 79.2311, 4.89726, 0.56 ) }
    dend_39 { pt3dadd( -45.3832, 84.8222, 6.25816, 0.56 ) }
    dend_39 { pt3dadd( -49.5252, 90.5901, 7.24719, 0.56 ) }
    dend_39 { pt3dadd( -53.2209, 96.5208, 8.84872, 0.56 ) }
    dend_39 { pt3dadd( -55.6332, 103.197, 10.0326, 0.56 ) }
    dend_39 { pt3dadd( -59.3864, 109.252, 10.9296, 0.56 ) }
    dend_39 { pt3dadd( -62.9194, 115.135, 12.9826, 0.56 ) }
    dend_39 { pt3dadd( -67.1243, 120.718, 14.5322, 0.56 ) }
    dend_39 { pt3dadd( -71.8535, 126.029, 15.3303, 0.56 ) }
    dend_39 { pt3dadd( -77.1224, 130.846, 15.6134, 0.56 ) }
    dend_39 { pt3dadd( -82.1007, 135.883, 16.5757, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -20.9941, 49.8416, 2.74531, 0.28 ) }
    dend_38 { pt3dadd( -24.0609, 57.2341, 2.01435, 0.56 ) }
    dend_38 { pt3dadd( -27.4579, 64.5114, 2.08607, 0.56 ) }
    dend_38 { pt3dadd( -30.5042, 71.9, 2.91186, 0.56 ) }
    dend_38 { pt3dadd( -34.2673, 78.9866, 2.97828, 0.56 ) }
    dend_38 { pt3dadd( -38.2298, 85.8928, 2.03277, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.6412, 33.4307, 0.549477, 0.56 ) }
    dend_36 { pt3dadd( -14.8293, 34.65, -1.60666, 0.56 ) }
    dend_36 { pt3dadd( -16.0478, 35.3992, -2.77345, 0.56 ) }
    dend_36 { pt3dadd( -17.2533, 36.1291, -3.85424, 0.28 ) }
    dend_36 { pt3dadd( -19.3362, 37.3288, -5.56716, 0.83 ) }
    dend_36 { pt3dadd( -23.8381, 39.9021, -9.25758, 0.56 ) }
    dend_36 { pt3dadd( -25.0395, 40.6366, -10.2338, 0.56 ) }
    dend_36 { pt3dadd( -25.9727, 41.2289, -10.9641, 0.56 ) }
    dend_36 { pt3dadd( -26.8327, 41.8172, -11.6399, 0.56 ) }
    dend_36 { pt3dadd( -27.6877, 42.5502, -12.3485, 0.56 ) }
    dend_36 { pt3dadd( -30.2603, 45.1695, -14.3453, 0.56 ) }
    dend_36 { pt3dadd( -31.2564, 46.2053, -14.9515, 0.56 ) }
    dend_36 { pt3dadd( -32.0304, 47.0167, -15.4725, 0.56 ) }
    dend_36 { pt3dadd( -32.7759, 47.863, -16.0295, 0.83 ) }
    dend_36 { pt3dadd( -35.0738, 50.8631, -17.9205, 0.28 ) }
    dend_36 { pt3dadd( -35.98, 52.2052, -18.7099, 0.56 ) }
    dend_36 { pt3dadd( -40.6452, 57.4145, -24.1664, 0.56 ) }
    dend_36 { pt3dadd( -44.7403, 63.3507, -29.3656, 0.56 ) }
    dend_36 { pt3dadd( -48.4636, 69.6961, -34.3793, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.6412, 33.4307, 0.549477, 0.56 ) }
    dend_35 { pt3dadd( -12.8461, 34.6854, -0.218204, 0.56 ) }
    dend_35 { pt3dadd( -13.235, 36.431, -1.29712, 0.56 ) }
    dend_35 { pt3dadd( -13.6456, 38.0168, -2.28256, 0.56 ) }
    dend_35 { pt3dadd( -14.1763, 39.7956, -3.3561, 0.56 ) }
    dend_35 { pt3dadd( -15.3652, 43.5888, -5.5783, 0.56 ) }
    dend_35 { pt3dadd( -16.2133, 46.1985, -7.03334, 0.56 ) }
    dend_35 { pt3dadd( -16.826, 47.9169, -8.00297, 0.56 ) }
    dend_35 { pt3dadd( -17.5015, 49.8176, -9.05451, 0.56 ) }
    dend_35 { pt3dadd( -17.8553, 50.8042, -9.54721, 0.56 ) }
    dend_35 { pt3dadd( -18.3554, 52.1985, -10.1876, 0.56 ) }
    dend_35 { pt3dadd( -19.0134, 53.821, -10.9405, 0.56 ) }
    dend_35 { pt3dadd( -19.9878, 56.3543, -12.0152, 0.56 ) }
    dend_35 { pt3dadd( -20.2826, 57.1868, -12.3993, 0.28 ) }
    dend_35 { pt3dadd( -20.568, 58.0138, -12.7931, 0.56 ) }
    dend_35 { pt3dadd( -21.4422, 60.6675, -14.1624, 0.56 ) }
    dend_35 { pt3dadd( -22.3201, 63.1485, -15.5463, 0.56 ) }
    dend_35 { pt3dadd( -25.3655, 70.3425, -18.5542, 0.56 ) }
    dend_35 { pt3dadd( -27.1444, 77.2542, -22.9005, 0.56 ) }
    dend_35 { pt3dadd( -28.3811, 84.329, -27.1827, 0.56 ) }
    dend_35 { pt3dadd( -31.1591, 90.5158, -32.0202, 0.56 ) }
    dend_35 { pt3dadd( -32.1945, 97.9105, -35.8129, 0.56 ) }
    dend_35 { pt3dadd( -32.9758, 105.572, -39.1331, 0.56 ) }
    dend_35 { pt3dadd( -33.4971, 112.619, -43.5981, 0.56 ) }
    dend_35 { pt3dadd( -32.6434, 120.209, -47.0446, 0.56 ) }
    dend_35 { pt3dadd( -31.2963, 127.576, -50.7784, 0.56 ) }
    dend_35 { pt3dadd( -29.1626, 134.342, -55.1686, 0.56 ) }
    dend_35 { pt3dadd( -26.3157, 140.186, -60.3432, 0.56 ) }
    dend_35 { pt3dadd( -23.4733, 147.047, -64.1489, 0.56 ) }
    dend_35 { pt3dadd( -20.6816, 154.068, -67.7087, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.5105, -93.8854, -14.1679, 0.83 ) }
    dend_15 { pt3dadd( -16.3842, -97.0322, -12.8317, 0.83 ) }
    dend_15 { pt3dadd( -16.9795, -98.8701, -12.4608, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( -17.3946, -100.177, -12.3035, 0.83 ) }
    dend_15 { pt3dadd( -17.7241, -101.19, -12.2427, 0.83 ) }
    dend_15 { pt3dadd( -18.0564, -102.219, -12.225, 0.83 ) }
    dend_15 { pt3dadd( -18.7204, -104.259, -12.232, 0.83 ) }
    dend_15 { pt3dadd( -20.3412, -108.901, -12.4923, 0.83 ) }
    dend_15 { pt3dadd( -21.2739, -111.613, -12.6572, 0.83 ) }
    dend_15 { pt3dadd( -22.6396, -115.695, -12.8987, 0.83 ) }
    dend_15 { pt3dadd( -23.3568, -117.911, -13.0501, 1.11 ) }
    dend_15 { pt3dadd( -24.057, -120.248, -13.2296, 0.83 ) }
    dend_15 { pt3dadd( -24.7937, -122.887, -13.4419, 0.83 ) }
    dend_15 { pt3dadd( -25.654, -126.24, -13.6727, 0.83 ) }
    dend_15 { pt3dadd( -26.0129, -127.726, -13.7659, 0.83 ) }
    dend_15 { pt3dadd( -26.9651, -132.152, -13.9721, 0.83 ) }
    dend_15 { pt3dadd( -27.136, -133.017, -14.0065, 0.83 ) }
    dend_15 { pt3dadd( -28.0059, -136.736, -14.2211, 0.83 ) }
    dend_15 { pt3dadd( -28.2953, -137.93, -14.3204, 0.83 ) }
    dend_15 { pt3dadd( -29.5166, -142.504, -14.8197, 0.83 ) }
    dend_15 { pt3dadd( -31.1728, -148.377, -15.497, 0.83 ) }
    dend_15 { pt3dadd( -31.7483, -150.344, -15.7252, 0.83 ) }
    dend_15 { pt3dadd( -33.4185, -155.848, -16.4227, 0.83 ) }
    dend_15 { pt3dadd( -34.1118, -158.038, -16.7406, 0.83 ) }
    dend_15 { pt3dadd( -35.0039, -160.562, -17.1469, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.5105, -93.8854, -14.1679, 0.83 ) }
    dend_14 { pt3dadd( -17.1961, -94.7899, -15.5176, 0.83 ) }
    dend_14 { pt3dadd( -18.5398, -95.6203, -16.4586, 0.83 ) }
    dend_14 { pt3dadd( -22.1712, -97.7585, -19.191, 0.56 ) }
    dend_14 { pt3dadd( -23.1737, -98.3149, -19.9653, 0.56 ) }
    dend_14 { pt3dadd( -24.4131, -98.9577, -20.9685, 0.56 ) }
    dend_14 { pt3dadd( -26.231, -99.9001, -22.4399, 0.56 ) }
    dend_14 { pt3dadd( -28.1011, -100.873, -24.1311, 0.56 ) }
    dend_14 { pt3dadd( -29.8521, -101.812, -25.7626, 0.56 ) }
    dend_14 { pt3dadd( -31.9869, -102.87, -27.4386, 0.56 ) }
    dend_14 { pt3dadd( -33.3925, -103.51, -28.6655, 0.83 ) }
    dend_14 { pt3dadd( -40.7587, -106.824, -34.0679, 0.83 ) }
    dend_14 { pt3dadd( -49.1894, -108.581, -38.5268, 0.83 ) }
    dend_14 { pt3dadd( -56.984, -109.502, -44.2131, 0.83 ) }
    dend_14 { pt3dadd( -64.5935, -111.161, -49.9902, 0.83 ) }
    dend_14 { pt3dadd( -71.952, -112.886, -56.0663, 0.83 ) }
    dend_14 { pt3dadd( -79.4331, -112.463, -62.2112, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 39/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -35.0039, -160.562, -17.1469, 0.56 ) }
    dend_17 { pt3dadd( -35.8198, -165.028, -17.9059, 0.56 ) }
    dend_17 { pt3dadd( -36.4285, -168.359, -18.4721, 0.56 ) }
    dend_17 { pt3dadd( -36.6524, -169.584, -18.6804, 0.56 ) }
    dend_17 { pt3dadd( -37.3928, -173.637, -19.3692, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -35.0039, -160.562, -17.1469, 0.56 ) }
    dend_16 { pt3dadd( -34.793, -161.578, -15.6697, 0.56 ) }
    dend_16 { pt3dadd( -34.6247, -162.628, -14.252, 0.56 ) }
    dend_16 { pt3dadd( -34.1281, -166.137, -9.69182, 0.56 ) }
    dend_16 { pt3dadd( -33.9918, -167.517, -8.00976, 0.28 ) }
    dend_16 { pt3dadd( -33.9533, -167.837, -7.61434, 0.83 ) }
    dend_16 { pt3dadd( -33.7333, -169.679, -5.354, 0.28 ) }
    dend_16 { pt3dadd( -33.6632, -170.358, -4.43876, 0.56 ) }
    dend_16 { pt3dadd( -33.5893, -171.477, -2.82961, 0.28 ) }
    dend_16 { pt3dadd( -33.58, -172.26, -1.79486, 0.56 ) }
    dend_16 { pt3dadd( -33.6203, -173.819, 0.128989, 0.28 ) }
    dend_16 { pt3dadd( -33.601, -174.157, 0.503995, 0.56 ) }
    dend_16 { pt3dadd( -33.372, -175.703, 2.07569, 0.28 ) }
    dend_16 { pt3dadd( -32.978, -177.345, 3.61837, 1.11 ) }
    dend_16 { pt3dadd( -32.7595, -178.163, 4.29877, 1.11 ) }
    dend_16 { pt3dadd( -32.2278, -180.125, 5.78209, 0.56 ) }
    dend_16 { pt3dadd( -30.9125, -185.338, 9.43807, 0.28 ) }
    dend_16 { pt3dadd( -30.6259, -186.384, 10.1433, 1.39 ) }
    dend_16 { pt3dadd( -29.8834, -188.884, 11.6986, 0.28 ) }
    dend_16 { pt3dadd( -29.425, -190.328, 12.5508, 1.11 ) }
    dend_16 { pt3dadd( -28.5931, -192.995, 14.1657, 0.28 ) }
    dend_16 { pt3dadd( -28.2865, -194.046, 14.8486, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -37.3928, -173.637, -19.3692, 0.56 ) }
    dend_19 { pt3dadd( -38.3581, -176.314, -19.4192, 0.56 ) }
    dend_19 { pt3dadd( -39.0545, -178.423, -19.5272, 0.56 ) }
    dend_19 { pt3dadd( -39.7705, -180.661, -19.6754, 0.56 ) }
    dend_19 { pt3dadd( -40.9945, -184.486, -19.9288, 0.56 ) }
    dend_19 { pt3dadd( -41.3813, -185.695, -20.0089, 0.56 ) }
    dend_19 { pt3dadd( -42.573, -189.42, -20.2556, 0.56 ) }
    dend_19 { pt3dadd( -42.9188, -190.634, -20.3551, 0.56 ) }
    dend_19 { pt3dadd( -43.1722, -191.594, -20.4521, 0.56 ) }
    dend_19 { pt3dadd( -44.6305, -199.96, -19.9954, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -37.3928, -173.637, -19.3692, 0.28 ) }
    dend_18 { pt3dadd( -37.7535, -176.258, -17.7689, 0.28 ) }
    dend_18 { pt3dadd( -37.949, -177.221, -17.0827, 0.56 ) }
    dend_18 { pt3dadd( -38.2933, -178.929, -15.8496, 0.28 ) }
    dend_18 { pt3dadd( -38.5136, -180.056, -14.9621, 0.28 ) }
    dend_18 { pt3dadd( -38.8109, -181.576, -13.7646, 0.28 ) }
    dend_18 { pt3dadd( -39.2027, -183.58, -12.1865, 0.56 ) }
    dend_18 { pt3dadd( -39.7842, -185.813, -10.4831, 0.28 ) }
    dend_18 { pt3dadd( -40.1595, -187.262, -9.3189, 0.28 ) }
    dend_18 { pt3dadd( -40.4637, -188.611, -8.2392, 0.56 ) }
    dend_18 { pt3dadd( -40.4663, -197.775, -3.03335, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, axon_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, axon_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_5 = new SectionList()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_14 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_32 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_9 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_13 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_18 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_7 nseg = 7
    dend_6 nseg = 9
    dend_4 nseg = 3
    dend_40 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_11 nseg = 3
    dend_10 nseg = 5
    dend_2 nseg = 3
    dend_12 nseg = 5
    dend_39 nseg = 5
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 7
    dend_15 nseg = 3
    dend_14 nseg = 5
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BTC_3ac7d39218_0_0


