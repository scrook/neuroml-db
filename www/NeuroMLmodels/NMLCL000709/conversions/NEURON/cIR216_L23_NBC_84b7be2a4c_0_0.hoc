// Cell: cIR216_L23_NBC_84b7be2a4c_0_0
/*
{
  "id" : "cIR216_L23_NBC_84b7be2a4c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-11.2904, -1.90655, -0.0708968, 1.21335", "-10.2183, -1.82528, -0.0665607, 1.95742", "-9.14614, -1.74402, -0.0622246, 3.52326", "-8.07401, -1.66275, -0.0578885, 5.81709", "-7.00188, -1.58149, -0.0535524, 7.36561", "-5.92974, -1.50022, -0.0492164, 9.78862", "-4.85761, -1.41896, -0.0448803, 11.1132", "-3.78548, -1.3377, -0.0405442, 11.7228", "-2.71334, -1.25643, -0.0362081, 12.3311", "-1.64121, -1.17517, -0.031872, 12.4664", "-0.569079, -1.0939, -0.0275359, 12.3777", "0.503053, -1.01264, -0.0231998, 12.2817", "1.57519, -0.931372, -0.0188637, 12.3245", "2.64732, -0.850108, -0.0145276, 12.2615", "3.71945, -0.768843, -0.0101916, 12.0136", "4.79158, -0.687578, -0.00585547, 11.5505", "5.86372, -0.606314, -0.00151938, 11.1181", "6.93585, -0.525049, 0.00281671, 10.2871", "8.00798, -0.443784, 0.0071528, 7.35968", "9.08011, -0.36252, 0.0114889, 4.57252", "10.1522, -0.281255, 0.015825, 2.82158" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-1.31809, -6.01266, -0.14221, 1.11", "-0.524206, -5.53772, 5.63409, 1.11", "-0.185375, -4.96367, 9.72454, 0.83", "0.30325, -3.46219, 17.0786, 0.55", "0.503079, -2.77748, 19.8319, 0.55", "1.11263, -0.866594, 26.607, 0.55", "1.4767, 0.336996, 30.07, 0.55", "2.01608, 2.37187, 34.2768, 0.55", "2.29911, 3.33417, 35.9454, 0.55", "2.74442, 4.32231, 37.3737, 0.55", "3.7443, 5.9773, 39.4066, 0.55", "5.43565, 8.11189, 41.1687, 0.55", "6.45875, 9.18613, 41.7487, 0.55", "8.83157, 11.2788, 42.2511, 0.55", "11.3763, 13.1859, 42.2986, 0.55", "14.0272, 15.0554, 41.7909, 0.55", "16.9005, 17.1256, 40.611, 0.55", "21.0034, 19.8188, 38.0985, 0.55", "23.925, 21.5068, 36.0484, 0.55", "26.2233, 22.7115, 34.276, 0.55", "28.9393, 24.0208, 32.171, 0.55", "32.4962, 25.3991, 29.5282, 0.55", "37.892, 26.8109, 26.0484, 0.55", "41.2394, 27.4702, 24.1598, 0.55", "43.1906, 27.8588, 23.2004, 0.55", "45.7936, 28.2787, 22.1086, 0.55", "47.9338, 28.4521, 21.4276, 0.55", "51.6883, 28.5723, 20.3967, 0.55", "57.2798, 28.9465, 18.8173, 0.55", "59.5626, 29.1104, 18.0022, 0.55", "62.081, 29.2273, 16.986, 0.55", "64.2989, 29.3228, 15.9721, 0.55", "68.5189, 29.63, 13.9103, 0.55", "71.1789, 29.965, 12.6335, 0.55", "73.7392, 30.2731, 11.5265, 0.55", "75.7582, 30.6491, 10.5535, 0.55", "77.1768, 31.0506, 9.83672, 0.55", "78.1603, 31.3839, 9.36204, 0.55", "82.3721, 32.7714, 7.70904, 0.55", "84.9486, 33.725, 6.72772, 0.55", "86.6723, 34.4356, 6.05299, 0.55", "90.4102, 36.0924, 4.60997, 0.55", "91.6179, 36.6131, 4.10955, 0.55", "95.224, 38.1266, 2.59953, 0.55", "97.8422, 39.136, 1.56345, 0.55", "99.9306, 39.8186, 0.616863, 0.55", "102.324, 40.3701, -0.617095, 0.55", "105.932, 40.9985, -2.73516, 0.55", "107.742, 41.1752, -3.87396, 0.83", "109.828, 41.3359, -5.23081, 0.55", "114.909, 41.5221, -8.48672, 0.55", "118.586, 41.6605, -10.7828, 0.55", "121.309, 41.7095, -12.408, 0.55", "123.727, 41.8187, -13.7481, 0.55", "127.193, 41.9669, -15.6432, 0.55", "132.335, 42.1993, -18.2093, 0.55", "134.142, 42.244, -18.9156, 0.55", "137.322, 42.3341, -19.9748, 0.28", "138.742, 42.3401, -20.3448, 0.55", "141.639, 42.3154, -21.0049, 0.28", "143.311, 42.113, -21.39, 0.28", "144.85, 41.8571, -21.7252, 0.55", "146.569, 41.4563, -22.2236, 0.55", "148.416, 40.87, -22.8342, 0.55", "151.729, 39.4409, -23.9483, 0.55", "154.863, 37.6275, -25.0649, 0.55", "156.168, 36.6464, -25.6405, 0.28", "157.233, 35.6749, -26.1687, 0.55", "158.53, 34.307, -26.8711, 0.28", "159.891, 32.6125, -27.6276, 0.55", "162.124, 29.3874, -28.8293, 0.28", "163.12, 27.8507, -29.3529, 0.55", "163.995, 26.4442, -29.844, 0.28", "164.804, 25.1285, -30.3243, 0.55", "166.909, 21.7256, -31.7639, 0.28", "167.588, 20.5985, -32.2961, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "1.63191, 6.96734, -19.0822, 1.38", "1.69401, 9.74918, -19.0822, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "4.65191, 4.77734, 3.74779, 0.55", "5.22533, 5.53264, 4.94305, 0.55", "5.52208, 5.91416, 5.54507, 0.55", "6.00895, 6.38145, 6.58389, 0.55", "6.94267, 7.10504, 8.4884, 0.55", "8.14619, 8.05314, 10.9958, 0.55", "9.33593, 8.97021, 13.4105, 0.55", "10.5756, 9.74216, 15.7247, 0.55", "12.5976, 10.8558, 19.4491, 0.55", "13.2537, 11.1693, 20.6613, 0.55", "14.1389, 11.5227, 22.2358, 0.55", "14.8989, 11.7236, 23.4271, 0.55", "16.2543, 11.944, 25.4509, 0.55", "21.0558, 13.3006, 32.6831, 0.55", "25.6029, 15.7189, 39.8016, 0.55", "28.6604, 17.7521, 47.7839, 0.55", "32.5759, 19.5632, 55.4381, 0.55", "36.8939, 22.3056, 62.5818, 0.55", "39.898, 26.0199, 69.956, 0.55", "42.2927, 30.6046, 77.0583, 0.55", "45.9518, 36.2294, 82.7303, 0.55", "49.0668, 41.9284, 88.6478, 0.55", "51.3313, 48.5831, 93.919, 0.55", "52.2315, 56.6419, 97.3019, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "9.74188, -3.87266, -1.90221, 0.55", "11.8425, -4.71693, -1.72853, 0.55", "15.582, -5.65666, -1.29593, 0.83", "18.9071, -6.22089, -0.876126, 0.55", "22.8554, -6.60749, -0.361056, 0.55", "25.385, -6.79331, 0.0115667, 0.55", "29.6363, -6.93307, 0.652053, 0.55", "32.9869, -6.77783, 1.33933, 0.55", "36.2807, -6.3368, 2.13306, 0.55", "38.6455, -5.77522, 2.74686, 0.55", "41.4619, -4.81815, 3.51008, 0.55", "46.504, -2.71705, 4.86807, 0.55", "50.4201, -1.13826, 5.93057, 0.55", "53.7255, 0.132014, 6.84953, 0.55", "58.8956, 1.91487, 8.26513, 0.55", "62.019, 2.84066, 9.10171, 0.55", "64.7377, 3.55961, 9.81454, 0.55", "69.707, 4.47337, 11.0718, 0.55", "72.7324, 4.82864, 11.7452, 0.55", "77.4702, 5.20255, 12.807, 0.55", "81.0592, 5.38802, 13.6238, 0.55", "83.8052, 5.65123, 14.2626, 0.55", "86.5454, 6.01621, 14.8824, 0.55", "90.0407, 6.80878, 15.6405, 0.55", "93.0773, 7.611, 16.2652, 0.55", "96.3253, 8.74567, 16.9121, 0.55", "98.9565, 9.71253, 17.3972, 0.55", "100.477, 10.3342, 17.6909, 0.55", "103.198, 11.5541, 18.0792, 0.55", "105.922, 12.7001, 18.3227, 0.55", "108.69, 13.8699, 18.4392, 0.55", "111.139, 14.8382, 18.4446, 0.55", "115.033, 16.2389, 18.3919, 0.55", "120.095, 17.9928, 18.3678, 0.55", "122.475, 18.7556, 18.3648, 0.55", "127.083, 20.2588, 18.4021, 0.55", "131.808, 21.7566, 18.4935, 0.55", "134.96, 22.8936, 18.6205, 0.55", "138.178, 24.2152, 18.8864, 0.28", "139.519, 24.931, 19.1331, 0.28", "141.379, 26.2983, 19.5455, 0.28", "141.825, 26.7682, 19.6226, 0.55", "143.251, 29.0702, 19.6899, 0.28", "143.918, 30.4455, 19.5878, 0.55", "145.379, 33.8874, 18.8449, 0.28", "146.12, 35.6703, 18.2746, 0.28", "147.781, 39.3074, 16.7779, 0.55", "148.638, 41.2117, 15.9157, 0.28", "148.961, 41.903, 15.559, 0.55", "150.262, 44.6253, 14.1183, 0.28", "150.681, 45.5789, 13.6275, 0.55", "151.309, 46.9815, 12.993, 0.28", "152.381, 49.2635, 12.2529, 0.28", "153.069, 50.6133, 11.8696, 0.55", "154.092, 52.4273, 11.4945, 0.28", "154.722, 53.4015, 11.4015, 0.55", "156.116, 55.32, 11.3439, 0.28", "156.381, 55.6227, 11.3493, 0.55", "157.992, 57.1952, 11.4791, 0.28", "159.16, 58.2017, 11.8038, 0.55", "160.543, 59.3788, 12.3322, 0.28", "161.345, 60.1193, 12.6978, 0.55", "162.944, 61.7928, 13.632, 0.55", "164.145, 63.3835, 14.479, 0.55", "165.896, 66.8372, 16.2913, 0.28", "166.97, 69.3371, 17.814, 0.55", "167.65, 71.1209, 18.928, 0.55", "168.637, 74.1196, 20.7328, 0.28", "169.205, 76.0947, 21.8899, 0.28", "170.876, 82.3523, 25.5286, 0.28", "171.959, 86.8037, 28.0182, 0.28", "172.784, 90.0097, 29.9386, 0.28", "173.455, 92.4586, 31.4446, 0.28", "174.422, 95.9354, 33.5483, 0.28", "184.824, 104.115, 35.6989, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "6.53191, 0.237337, 10.2578, 0.83", "7.38002, -1.4053, 11.1395, 0.83", "8.01081, -2.62703, 11.7953, 0.83", "9.1922, -4.91519, 13.0236, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.22809, 2.23734, -8.58221, 0.83", "-6.79174, 2.47276, -9.18632, 0.83", "-7.71832, 3.21975, -10.3776, 0.83", "-8.98627, 4.60988, -11.9501, 0.83", "-9.76293, 5.71377, -12.9409, 0.83", "-11.0282, 7.80844, -14.6788, 0.55", "-11.621, 8.79536, -15.5028, 0.55", "-12.4378, 10.2538, -16.7283, 0.55", "-13.1441, 11.5556, -17.7706, 0.55", "-14.2911, 13.4316, -19.2273, 0.55", "-15.4493, 14.9641, -20.5121, 0.55", "-16.0264, 15.5648, -21.0322, 0.83", "-17.5375, 16.837, -22.179, 0.55", "-18.7998, 17.6748, -22.9496, 0.55", "-20.4467, 18.6988, -23.8665, 0.55", "-22.0592, 19.7181, -24.6733, 0.55", "-23.2626, 20.5654, -25.2295, 0.55", "-25.2959, 22.2461, -26.2043, 0.83", "-26.6456, 23.5163, -26.8561, 0.55", "-27.7611, 24.643, -27.4572, 0.55", "-29.0403, 26.0868, -28.2771, 0.83", "-29.6289, 26.7757, -28.6845, 0.83", "-30.4528, 27.7337, -29.2674, 0.28", "-31.0328, 28.3982, -29.68, 0.55", "-32.0836, 29.5328, -30.3022, 0.55", "-33.0718, 30.5322, -30.8868, 0.55", "-33.8388, 31.359, -31.3524, 0.55", "-34.6596, 32.3884, -31.958, 0.83", "-35.1776, 33.1007, -32.4209, 0.83", "-36.003, 34.3826, -33.2951, 0.83", "-37.2984, 36.6814, -34.8691, 0.83", "-37.8902, 37.746, -35.6082, 0.55", "-38.7402, 39.3072, -36.6923, 0.83", "-39.6654, 41.043, -37.8341, 0.55", "-40.1006, 41.7797, -38.3025, 0.55", "-40.3178, 42.1048, -38.4971, 0.55", "-41.0983, 43.1411, -39.0053, 0.83", "-42.251, 44.5333, -39.6786, 0.83", "-43.1216, 45.5389, -40.1268, 0.83", "-44.9251, 47.527, -40.9981, 0.83", "-46.0908, 48.636, -41.5432, 0.83", "-46.9122, 49.3355, -41.9238, 0.83", "-47.9396, 50.1125, -42.4082, 0.55", "-48.9891, 50.7771, -42.886, 0.55", "-49.9392, 51.2912, -43.3043, 0.55", "-51.279, 51.8797, -43.8281, 0.55", "-53.1551, 52.5805, -44.5201, 0.55", "-53.9943, 52.8553, -44.8621, 0.55", "-54.8899, 53.1137, -45.2376, 0.83", "-55.8723, 53.3452, -45.659, 0.55", "-56.7248, 53.5527, -46.0707, 0.55", "-57.6852, 53.8006, -46.5788, 0.83", "-59.419, 54.2197, -47.5368, 0.55", "-60.5948, 54.5162, -48.2019, 0.83", "-62.3301, 54.9761, -49.2263, 0.55", "-63.6767, 55.3478, -50.0401, 0.28", "-64.6485, 55.6418, -50.6646, 0.83", "-66.0303, 56.076, -51.571, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.71191, -5.76266, -1.57221, 2.22", "10.7693, -10.2621, -1.56067, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.35809, -5.38266, 3.20779, 1.11", "-9.13192, -7.73927, 4.11106, 1.11", "-10.0971, -10.6785, 5.23764, 0.83", "-11.1672, -13.9376, 6.48683, 1.11", "-12.2327, -17.1824, 7.73054, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-10.7781, -4.64266, -3.55221, 1.38", "-12.056, -5.85781, -4.08184, 1.38", "-13.8694, -7.58221, -4.83342, 1.11", "-15.4007, -9.03827, -5.46804, 1.11", "-17.0567, -10.6129, -6.15436, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.17809, 4.47734, 1.47779, 1.11", "-7.71332, 5.39596, 2.10523, 1.11", "-9.58109, 6.83318, 3.13332, 1.11", "-11.557, 8.84857, 4.26051, 1.11", "-13.9493, 11.7115, 5.35164, 1.11", "-15.0444, 13.3467, 5.79978, 0.83", "-15.9149, 14.7731, 6.1078, 0.83", "-17.8525, 18.3439, 6.56054, 0.83", "-19.3078, 21.4904, 6.66149, 0.83", "-20.4424, 24.5252, 6.52464, 0.55", "-21.629, 28.2771, 6.2756, 0.55", "-22.1175, 29.7379, 6.24139, 0.28", "-22.8376, 31.6624, 6.25828, 0.83", "-23.9208, 34.3432, 6.30647, 0.55", "-24.8303, 36.5746, 6.46173, 0.55", "-26.2724, 40.0281, 6.77885, 0.55", "-28.1629, 44.6218, 6.92163, 0.55", "-29.1756, 47.2277, 6.91169, 0.55", "-30.3513, 50.2906, 6.81636, 0.55", "-31.3623, 52.9989, 6.66101, 0.55", "-32.8829, 57.025, 6.31545, 0.55", "-34.7344, 62.1885, 5.65252, 0.55", "-35.6001, 64.7599, 5.28141, 0.55", "-36.371, 67.0185, 5.00975, 0.55", "-37.0698, 69.1115, 4.82871, 0.55", "-38.0598, 72.197, 4.68219, 0.55", "-38.9692, 75.0974, 4.67466, 0.55", "-39.8824, 78.0876, 4.79291, 0.55", "-41.1233, 82.6591, 4.91725, 0.55", "-41.4, 83.8129, 4.97072, 0.55", "-42.1623, 87.1677, 5.15148, 0.55", "-42.7177, 90.0977, 5.48414, 0.55", "-43.0404, 92.1783, 5.80435, 0.55", "-43.3106, 94.5475, 6.20947, 0.55", "-43.6299, 97.2328, 6.67588, 0.83", "-44.175, 100.202, 7.18662, 0.55", "-45.081, 103.489, 7.74541, 0.55", "-45.8359, 105.463, 8.09576, 0.55", "-46.9309, 107.724, 8.53044, 0.55", "-48.2953, 110.234, 8.97677, 0.55", "-49.7716, 112.701, 9.31551, 0.55", "-51.1181, 114.831, 9.68469, 0.55", "-52.3964, 116.749, 10.0332, 0.55", "-53.6966, 118.682, 10.5139, 0.55", "-54.5201, 119.994, 10.9381, 0.55", "-55.8623, 122.403, 11.8349, 0.55", "-56.9102, 124.683, 12.709, 0.55", "-57.8338, 127.114, 13.6507, 0.55", "-58.3225, 128.529, 14.1789, 0.83", "-59.1932, 131.229, 15.1251, 0.55", "-59.3937, 132.01, 15.4147, 0.55", "-59.7659, 133.721, 16.123, 0.55", "-60.3963, 136.152, 17.1398, 0.55", "-60.8819, 137.765, 17.9476, 0.55", "-61.3912, 139.403, 18.8479, 0.55", "-62.352, 142.141, 20.4929, 0.55", "-63.67, 145.447, 22.6011, 0.55", "-64.5186, 147.402, 23.9835, 0.55", "-66.2159, 151.272, 26.8439, 0.55", "-67.1168, 153.552, 28.4423, 0.55", "-68.0013, 156.362, 30.1511, 0.55", "-68.3354, 157.752, 30.7984, 0.55", "-68.6765, 160.856, 31.8285, 0.55", "-68.7697, 162.375, 32.1722, 0.55", "-69.0085, 165.966, 32.5836, 0.55", "-69.3039, 170.193, 32.8523, 0.55", "-69.3866, 173.163, 32.8531, 0.55", "-69.3745, 175.093, 32.8212, 0.55", "-69.2538, 178.725, 32.5443, 0.55", "-69.1332, 182.152, 32.2406, 0.55", "-68.989, 185.513, 31.9251, 0.55", "-68.7698, 188.773, 31.4954, 0.55", "-68.4514, 192.07, 30.9975, 0.55", "-67.9055, 196.076, 30.2941, 0.28", "-67.5088, 197.678, 29.9417, 0.28", "-67.0351, 199.185, 29.5044, 0.28", "-70.8468, 208.002, 30.6539, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000091771476175,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.1522, -0.281255, 0.015825, 0.611965", "25.1093, 0.852455, 0.015825, 0.611965", "40.0664, 1.98617, 0.015825, 0.611965" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.69401, 9.74918, -19.0822, 0.83", "3.20198, 12.8634, -18.9458, 0.83", "3.73301, 14.0847, -19.2002, 1.38", "4.46848, 16.0013, -19.9569, 0.83", "4.8839, 17.6422, -20.7323, 0.83", "5.29888, 20.0873, -22.0026, 0.83", "5.51796, 22.0074, -23.0527, 0.83", "5.74422, 25.5873, -25.0785, 1.11", "5.75204, 27.5756, -26.3024, 0.83", "5.67963, 30.7493, -28.35, 0.83", "5.62828, 32.6873, -29.6117, 0.83", "5.54443, 34.1617, -30.5024, 0.55", "5.52061, 34.9898, -30.8867, 0.55", "5.68554, 36.9854, -31.5448, 0.55", "6.04185, 38.77, -32.0485, 0.55", "6.48287, 40.1921, -32.4397, 0.55", "7.16854, 42.1763, -32.9569, 0.55", "7.98768, 44.4698, -33.633, 0.55", "8.99776, 47.3989, -34.5712, 0.55", "10.0067, 50.2886, -35.5453, 0.55", "10.585, 52.0281, -36.1752, 0.83", "11.141, 53.5881, -36.7977, 0.83", "11.8569, 55.4423, -37.6137, 0.55", "12.4342, 57.177, -38.41, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.69401, 9.74918, -19.0822, 0.55", "4.65142, 9.86299, -18.7547, 0.55", "9.32476, 10.0428, -18.2373, 1.11", "12.8175, 10.1772, -17.8506, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "9.1922, -4.91519, 13.0236, 0.55", "11.3457, -3.02078, 15.2239, 0.55", "12.7996, -2.21607, 16.7643, 0.55", "14.9764, -1.73554, 19.4211, 0.55", "17.1482, -1.4505, 22.3921, 0.55", "18.571, -1.46287, 24.3937, 0.55", "20.77, -1.62117, 27.5453, 0.55", "22.4827, -1.76958, 30.2466, 0.55", "24.905, -2.01109, 34.1404, 0.55", "26.4833, -2.30386, 36.6446, 0.55", "28.4271, -2.66389, 39.455, 0.55", "29.9124, -2.72195, 41.4486, 0.55", "32.0884, -2.38198, 43.9346, 0.55", "34.9573, -1.68965, 46.6516, 0.55", "36.8648, -1.15245, 48.127, 0.55", "39.5644, -0.352404, 49.9141, 0.55", "42.8002, 0.578034, 51.6939, 0.55", "45.2333, 1.17677, 52.8111, 0.55", "47.1366, 1.61925, 53.5797, 0.55", "48.4136, 1.99736, 54.0186, 0.55", "51.9832, 3.45286, 55.2156, 0.55", "54.7493, 4.72128, 55.9821, 0.55", "57.3557, 6.06869, 56.5302, 0.55", "59.0076, 7.12022, 56.8199, 0.55", "60.9826, 8.53948, 57.2786, 0.55", "63.1843, 10.2247, 57.7496, 0.55", "66.4843, 13.1734, 58.3615, 0.55", "68.8021, 15.4765, 58.848, 0.55", "71.0259, 17.6118, 59.2428, 0.55", "74.377, 20.4732, 59.858, 0.55", "85.6548, 26.6796, 65.3539, 0.55", "95.837, 35.4461, 69.2759, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "9.1922, -4.91519, 13.0236, 0.55", "3.31886, -6.71003, 15.0933, 0.55", "-7.73874, -11.0446, 17.3874, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-66.0303, 56.076, -51.571, 0.55", "-67.0801, 57.0163, -50.5361, 0.55", "-68.2202, 58.0373, -49.4123, 0.28", "-68.4263, 58.2219, -49.2091, 0.55", "-70.9964, 60.5239, -46.6754, 0.28", "-71.3159, 60.8101, -46.3605, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-66.0303, 56.076, -51.571, 0.28", "-69.7144, 56.0061, -54.0934, 0.28", "-70.4581, 55.9983, -54.5866, 0.55", "-71.9361, 55.9593, -55.2985, 0.28", "-72.5172, 55.944, -55.5785, 0.55", "-74.889, 55.8813, -56.721, 0.28", "-75.3895, 55.8681, -56.9621, 0.55", "-76.9904, 55.8281, -57.3965, 0.28", "-80.0228, 55.6376, -58.2122, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.7693, -10.2621, -1.56067, 1.11", "12.9522, -10.753, -3.80462, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "10.7693, -10.2621, -1.56067, 1.38", "11.4824, -13.5144, -2.17294, 1.38", "12.8436, -19.7223, -3.34159, 1.66", "13.386, -22.1958, -3.80725, 1.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.2327, -17.1824, 7.73054, 0.83", "-13.7201, -20.2696, 7.40125, 0.83", "-14.3531, -22.3235, 7.40439, 0.83", "-14.9211, -24.3134, 7.52795, 0.83", "-15.4681, -25.937, 7.72904, 0.83", "-16.078, -27.6734, 8.04702, 0.83", "-16.9536, -30.2361, 8.59443, 0.83", "-18.2562, -34.07, 9.79796, 0.83", "-18.8094, -35.712, 10.3676, 0.83", "-19.6698, -38.3205, 11.1959, 0.83", "-20.3168, -40.2931, 11.878, 0.83", "-21.3648, -43.1715, 13.0182, 0.83", "-22.0393, -44.8798, 13.7699, 0.83", "-23.6686, -48.6417, 15.6778, 0.83", "-24.8408, -51.5438, 17.3454, 0.83", "-25.8123, -54.1415, 19.0587, 0.83", "-26.6522, -56.3889, 20.6865, 0.83", "-27.0955, -57.6463, 21.6696, 0.83", "-27.7345, -59.6321, 23.2882, 0.83", "-28.6591, -62.9663, 26.1576, 0.83", "-29.0579, -64.8609, 27.7433, 0.83", "-29.4092, -67.0378, 29.2442, 0.83", "-29.559, -68.5088, 30.0956, 0.83", "-29.6907, -70.3504, 31.002, 0.83", "-29.7567, -73.2613, 32.1373, 0.55", "-29.7428, -75.1523, 32.7901, 0.55", "-29.6658, -78.1597, 33.6928, 0.55", "-29.5844, -80.3929, 34.3305, 0.55", "-29.5254, -82.3484, 34.8364, 0.55", "-29.4524, -85.2592, 35.482, 0.55", "-29.4814, -88.4783, 36.0996, 0.55", "-29.5545, -91.1031, 36.5687, 0.55", "-29.6555, -93.2853, 37.0147, 0.55", "-29.7575, -94.9477, 37.3799, 0.55", "-29.925, -96.4289, 37.7566, 0.55", "-30.5646, -100.239, 38.8018, 0.55", "-30.8474, -101.503, 39.1422, 0.55", "-31.7861, -105.044, 40.2195, 0.55", "-32.5877, -107.559, 40.9883, 0.55", "-33.9477, -111.139, 42.1831, 0.55", "-34.3372, -111.969, 42.475, 0.55", "-35.571, -114.242, 43.2792, 0.55", "-36.5035, -115.892, 43.8101, 0.55", "-37.4556, -117.531, 44.2724, 0.55", "-38.6932, -119.669, 44.8635, 0.55", "-39.2559, -120.764, 45.1528, 0.55", "-40.8883, -124.477, 46.0906, 0.55", "-41.5532, -126.257, 46.5271, 0.55", "-41.9105, -127.632, 46.8153, 0.55", "-42.1495, -129.031, 47.1223, 0.55", "-42.3335, -130.756, 47.4256, 0.28", "-42.5743, -133.054, 47.6269, 0.28", "-42.7388, -134.538, 47.626, 0.28", "-43.1971, -138.167, 47.2783, 0.55", "-43.5599, -141.317, 46.8779, 0.28", "-43.8978, -144.103, 46.4239, 0.55", "-44.5432, -148.719, 45.3645, 0.28", "-44.8548, -150.288, 44.862, 0.28", "-45.6045, -153.09, 43.6221, 0.28", "-46.2257, -160.634, 44.4548, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.2327, -17.1824, 7.73054, 0.55", "-13.0658, -16.9126, 8.516, 0.55", "-13.839, -16.662, 9.24512, 0.55", "-14.5605, -16.4283, 9.92535, 0.55", "-15.3743, -16.1647, 10.6927, 0.55", "-16.9549, -15.6526, 12.1831, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-17.0567, -10.6129, -6.15436, 1.11", "-18.7995, -14.1512, -6.61399, 1.11", "-21.5936, -19.8238, -7.35088, 0.83", "-22.8282, -22.3302, -7.67645, 0.83", "-24.6021, -25.9315, -8.14427, 0.83", "-26.0565, -28.8843, -8.52785, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.0567, -10.6129, -6.15436, 1.38", "-17.8236, -10.1028, -5.93526, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.0664, 1.98617, 0.015825, 0.55", "55.0235, 3.11988, 0.015825, 0.55", "69.9806, 4.25359, 0.015825, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "12.4342, 57.177, -38.41, 0.55", "12.2437, 58.6986, -40.2709, 0.55", "12.1794, 59.8771, -41.6253, 0.55", "12.0645, 61.6631, -43.4477, 0.55", "11.9155, 64.462, -46.0905, 0.55", "11.7445, 66.8835, -48.1073, 0.55", "11.6456, 69.6406, -50.2141, 0.28", "11.6564, 70.9583, -51.1776, 0.55", "11.7188, 73.4312, -52.9125, 0.55", "11.7198, 75.9635, -54.5001, 0.55", "11.6792, 78.7091, -56.0097, 0.55", "11.6332, 82.6389, -58.0059, 0.55", "11.5363, 85.2705, -59.2475, 0.55", "11.3586, 87.1856, -60.3233, 0.55", "11.1288, 88.5236, -61.2524, 0.28", "10.9542, 89.2875, -61.9209, 0.55", "10.6311, 90.4627, -63.0777, 0.28", "10.1977, 91.6306, -64.3162, 0.55", "8.54838, 95.8145, -69.0657, 0.83", "7.38589, 98.5684, -72.5059, 0.28", "6.51766, 100.714, -75.4794, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "12.4342, 57.177, -38.41, 0.55", "13.5259, 58.9396, -39.3221, 0.55", "15.2775, 61.5107, -41.1295, 0.55", "16.4425, 63.0734, -42.4549, 0.55", "17.7519, 64.7283, -43.9867, 0.55", "18.5317, 65.6394, -44.8764, 0.55", "19.3236, 66.534, -45.765, 0.55", "21.4605, 68.762, -48.2158, 0.55", "22.5685, 69.9106, -49.4828, 0.28", "23.0225, 70.3822, -49.9635, 0.55", "24.6786, 72.0336, -51.5279, 0.28", "25.1987, 72.6277, -52.0003, 0.55", "26.7415, 74.6623, -53.2291, 0.28", "27.5202, 75.8609, -53.688, 0.55", "28.1009, 77.0087, -53.969, 0.28", "28.8142, 78.8286, -54.3581, 0.55", "29.4998, 81.1753, -54.7671, 0.55", "29.9685, 82.897, -55.0465, 0.55", "30.4419, 84.9246, -55.3294, 0.55", "31.197, 88.4071, -55.7994, 0.55", "31.759, 91.483, -56.1941, 0.55", "32.093, 93.6596, -56.4846, 0.55", "32.4836, 96.1955, -56.8888, 0.55", "32.6479, 97.532, -57.1524, 0.28", "32.706, 98.1438, -57.2914, 0.55", "32.904, 99.8228, -57.7443, 0.28", "33.0049, 100.917, -57.9845, 0.55", "33.1164, 102.003, -58.2269, 0.28", "33.2961, 103.862, -58.5367, 0.55", "33.614, 105.542, -58.7283, 0.28", "33.871, 106.459, -58.7713, 0.28", "34.5989, 108.02, -58.6241, 0.55", "35.6792, 110.012, -58.1699, 0.55", "36.3608, 111.278, -57.7653, 0.55", "37.1442, 112.469, -57.1663, 0.28", "37.6562, 113.233, -56.7257, 0.55", "39.2967, 115.486, -55.3034, 0.55", "40.7658, 117.347, -54.2165, 0.55", "42.4467, 119.465, -52.9737, 0.55", "45.3323, 123.116, -50.9292, 0.28", "46.8534, 125.13, -49.8041, 0.28", "47.8215, 126.409, -49.0889, 0.28", "50.0484, 129.219, -47.5917, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "95.837, 35.4461, 69.2759, 0.55", "104.03, 38.8744, 74.1586, 0.55", "111.664, 42.5903, 79.691, 0.55", "120.103, 46.3502, 83.8572, 0.55", "129.039, 48.0769, 88.3147, 0.55", "137.838, 48.6561, 93.3107, 0.55", "147.26, 48.1085, 97.002, 0.55", "156.554, 47.9876, 101.041, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "95.837, 35.4461, 69.2759, 0.55", "103.41, 39.0221, 74.174, 0.55", "109.44, 44.1823, 79.7535, 0.55", "114.217, 48.8641, 86.7808, 0.55", "118.415, 53.6777, 94.0833, 0.55", "123.579, 56.9995, 101.595, 0.55", "127.541, 61.7832, 109.048, 0.55", "132.765, 67.5058, 114.885, 0.55", "137.411, 73.2042, 121.216, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.9522, -10.753, -3.80462, 0.55", "17.0495, -11.3895, -4.77014, 0.55", "19.252, -11.8837, -5.64066, 0.55", "21.2698, -12.5663, -6.78166, 0.55", "22.3487, -13.0204, -7.5226, 0.55", "24.9195, -14.4513, -9.64966, 0.55", "26.583, -15.3375, -11.2157, 0.55", "28.1999, -16.0818, -13.0967, 0.55", "29.7681, -16.7525, -15.0406, 0.55", "30.9383, -17.1823, -16.4898, 0.55", "32.8107, -17.8751, -18.6896, 0.55", "35.658, -18.786, -21.7107, 0.55", "37.9141, -19.3562, -23.6217, 0.55", "39.5233, -19.6349, -24.7523, 0.55", "41.1607, -19.8211, -25.7608, 0.55", "42.608, -19.954, -26.5412, 0.55", "44.5944, -20.1825, -27.523, 0.55", "47.3227, -20.8668, -28.7613, 0.55", "49.9324, -21.741, -30.059, 0.55", "50.7547, -22.0022, -30.5078, 0.55", "52.3905, -22.37, -31.4945, 0.55", "54.2132, -22.6452, -32.7753, 0.55", "55.3073, -22.7373, -33.7741, 0.55", "57.7272, -22.6634, -36.1718, 0.55", "59.0638, -22.5333, -37.5757, 0.55", "60.9695, -22.2275, -39.686, 0.55", "63.7565, -21.6099, -42.9237, 0.83", "66.8793, -20.8422, -46.596, 0.55", "68.3412, -20.4913, -48.3985, 0.55", "70.5062, -20.0477, -51.1194, 0.55", "72.7062, -19.7203, -53.8327, 0.55", "74.2867, -19.4773, -55.6933, 0.55", "75.0434, -19.3984, -56.5057, 0.55", "75.8091, -19.4505, -57.2224, 0.55", "76.7576, -19.644, -58.146, 0.55", "78.0315, -19.9367, -59.4033, 0.55", "79.7091, -20.2843, -61.0998, 0.55", "82.4399, -20.7374, -63.8628, 0.55", "85.0472, -21.0546, -66.5578, 0.55", "86.714, -21.2046, -68.3278, 0.55", "88.7338, -21.3389, -70.4613, 0.55", "90.7802, -21.3892, -72.6449, 0.55", "92.1229, -21.3067, -74.0475, 0.83", "94.0193, -20.9249, -76.1087, 0.55", "94.5649, -20.8015, -76.696, 0.55", "96.0157, -20.4715, -78.2799, 0.55", "97.974, -20.108, -80.5469, 0.55", "98.8496, -19.9645, -81.7395, 0.83", "101.705, -19.4546, -86.0088, 0.55", "102.97, -19.2794, -87.9555, 0.55", "105.227, -19.009, -91.3596, 0.28", "105.767, -18.9536, -92.1338, 0.55", "109.205, -18.7254, -96.7526, 0.55", "110.339, -18.6944, -98.1522, 0.55", "111.698, -18.7067, -99.5889, 0.28", "113.089, -18.8149, -100.974, 0.55", "114.682, -19.0975, -102.303, 0.28", "118.208, -19.9212, -104.874, 0.55", "119.805, -20.4045, -105.848, 0.28", "121.884, -21.1101, -107.128, 0.55", "123.719, -21.7587, -108.269, 0.28", "124.634, -22.087, -108.825, 0.55", "126.297, -22.6297, -109.761, 0.28", "127.74, -23.0781, -110.419, 0.55", "129.176, -23.5592, -111.096, 0.55", "130.377, -24.0006, -111.638, 0.55", "132.196, -24.7529, -112.377, 0.55", "133.091, -25.1576, -112.722, 0.55", "135.993, -26.508, -113.72, 0.28", "137.554, -27.1842, -114.219, 0.28", "138.43, -27.5144, -114.486, 0.55", "140.683, -28.2277, -115.239, 0.28", "141.665, -28.4877, -115.587, 0.28", "143.16, -28.6766, -116.247, 0.28", "145.25, -28.6858, -117.194, 0.28", "146.326, -28.5995, -117.741, 0.55", "147.745, -28.3865, -118.581, 0.28", "148.517, -28.1937, -119.143, 0.55", "151.516, -27.3984, -121.693, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.9522, -10.753, -3.80462, 0.83", "14.2267, -12.3197, -4.04022, 0.83", "16.4303, -14.876, -4.44334, 0.83", "17.9039, -16.5429, -4.69146, 0.83", "19.1447, -17.9967, -4.76235, 0.83", "20.8061, -19.9813, -4.71396, 0.83", "22.1351, -21.617, -4.63193, 0.83", "24.3273, -24.3708, -4.65299, 0.83", "25.9172, -26.3768, -4.813, 0.83", "27.8618, -28.9586, -5.16576, 0.55", "28.458, -29.7575, -5.30831, 0.55", "29.7399, -31.3501, -5.70111, 0.83", "32.2999, -34.5337, -6.51605, 0.83", "33.7345, -36.2237, -6.89613, 0.83", "34.8342, -37.3497, -7.04558, 0.55", "36.5337, -38.8264, -7.08595, 0.55", "38.8853, -40.5251, -6.71986, 0.55", "41.8895, -42.0617, -5.44084, 0.55", "44.0514, -42.7917, -4.04933, 0.55", "46.24, -43.2059, -2.48505, 0.55", "47.3938, -43.2801, -1.69297, 0.55", "49.7572, -43.21, -0.118093, 0.55", "51.7417, -43.0031, 1.16434, 0.55", "53.8298, -42.7065, 2.34377, 0.55", "56.278, -42.4352, 3.65871, 0.55", "58.1567, -42.2738, 4.69393, 0.55", "60.3549, -42.2863, 5.93763, 0.55", "61.8804, -42.5033, 6.88475, 0.28", "62.6019, -42.6705, 7.41201, 0.55", "63.6391, -42.9906, 8.35618, 0.55", "65.5919, -43.9933, 10.4909, 0.55", "66.8644, -44.8509, 11.9755, 0.55", "68.434, -46.2179, 13.6672, 0.55", "68.9562, -46.7437, 14.215, 0.55", "69.2383, -47.0488, 14.4861, 0.55", "70.8942, -48.9284, 15.8671, 0.55", "71.9373, -50.2629, 16.5676, 0.55", "73.9116, -52.8033, 17.6758, 0.55", "74.4492, -53.4632, 17.9125, 0.83", "75.7833, -55.0253, 18.3906, 0.55", "77.3371, -56.7582, 18.8667, 0.55", "79.4276, -59.1156, 19.5057, 0.55", "80.5043, -60.3483, 19.8196, 0.55", "81.1417, -61.0248, 19.987, 0.55", "83.2227, -63.1311, 20.5055, 0.55", "85.2893, -65.1621, 21.1253, 0.55", "87.3918, -67.19, 21.8616, 0.55", "88.0984, -67.8721, 22.1412, 0.55", "89.4041, -69.2215, 22.7161, 0.55", "89.9377, -69.8283, 22.9971, 0.55", "91.6042, -71.9212, 23.9922, 0.55", "91.7756, -72.148, 24.0982, 0.83", "92.8554, -73.6619, 24.7499, 0.55", "93.3286, -74.4553, 25.0515, 0.83", "94.166, -76.1892, 25.5965, 0.55", "95.2243, -78.8219, 25.9299, 0.55", "95.4484, -79.478, 25.8963, 0.83", "96.2544, -82.0264, 25.5221, 0.55", "96.8577, -84.1424, 25.0721, 0.55", "97.2349, -85.6607, 24.6404, 0.83", "98.084, -90.1212, 22.8851, 0.55", "98.3166, -91.9099, 21.973, 0.55", "98.4452, -93.0816, 21.2603, 0.83", "104.098, -98.9071, 23.9246, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.386, -22.1958, -3.80725, 1.11", "13.0635, -24.4368, -3.64288, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.386, -22.1958, -3.80725, 0.55", "14.0451, -22.7359, -5.23138, 0.55", "16.1015, -24.1589, -9.61201, 0.55", "16.9273, -24.7779, -11.281, 0.55", "18.3898, -25.7418, -14.0124, 0.55", "20.2408, -26.75, -17.5353, 0.55", "22.6682, -27.7009, -22.3603, 0.83", "25.0937, -28.1479, -27.0251, 0.55", "26.4796, -28.0609, -29.6314, 0.55", "27.7247, -27.6687, -32.1023, 0.55", "29.4317, -26.7341, -35.6756, 0.55", "31.9775, -24.7302, -41.0061, 0.55", "33.1379, -23.6569, -43.3323, 0.55", "35.0442, -21.7254, -46.8219, 0.28", "35.8397, -20.9616, -48.1986, 0.55", "38.324, -19.0428, -52.1233, 0.28", "39.191, -18.5211, -53.2438, 0.55", "40.3958, -17.8413, -54.6338, 0.28", "41.5024, -17.3075, -55.9713, 0.55", "44.0654, -16.1883, -58.7202, 0.28", "44.5321, -15.9686, -59.2438, 0.28", "45.4529, -15.4998, -60.2647, 0.28", "46.4116, -15.0145, -61.4356, 0.55", "48.7555, -13.798, -64.5868, 0.28", "49.4701, -13.4048, -65.5902, 0.55", "51.1202, -12.4112, -67.8649, 0.55", "52.2786, -11.7041, -69.5222, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-16.9549, -15.6526, 12.1831, 0.55", "-19.0721, -14.9321, 15.0487, 0.55", "-19.862, -14.6632, 16.1178, 0.55", "-20.921, -14.3028, 17.5513, 0.55", "-22.2337, -13.8561, 19.328, 0.55", "-23.3405, -13.4794, 20.8262, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.9549, -15.6526, 12.1831, 0.55", "-18.0253, -19.0306, 14.5161, 0.55", "-18.7813, -21.8557, 16.2763, 0.55", "-19.5947, -24.6712, 18.0373, 0.55", "-22.5143, -34.1343, 24.4294, 0.55", "-23.8979, -39.0708, 28.019, 0.55", "-24.8322, -42.8013, 30.8437, 0.55", "-25.5479, -46.0369, 33.5483, 0.55", "-26.0442, -48.9447, 36.2307, 0.55", "-26.3867, -53.5451, 40.7252, 0.55", "-26.4015, -57.8885, 45.3712, 0.55", "-26.4108, -58.9583, 46.6816, 0.55", "-26.3374, -61.4, 49.8763, 0.55", "-26.2246, -62.7057, 51.5308, 0.55", "-25.9275, -65.1815, 54.2193, 0.55", "-25.6256, -68.3779, 57.1555, 0.55", "-25.6212, -71.6229, 59.619, 0.55", "-25.6783, -74.3873, 61.5754, 0.28", "-25.7334, -75.9856, 62.5885, 0.28", "-25.7913, -78.4838, 64.0423, 0.55", "-25.8479, -81.6348, 65.7749, 0.55", "-25.8298, -87.0197, 68.438, 0.55", "-25.8928, -91.9336, 70.7732, 0.28", "-25.9752, -94.8376, 72.2573, 0.28", "-26.1211, -98.3348, 74.07, 0.28", "-28.4977, -110.737, 82.7132, 0.28", "-29.419, -123.038, 91.7689, 0.28", "-29.1327, -134.805, 101.548, 0.28", "-28.6287, -148.003, 109.276, 0.28", "-26.9761, -159.512, 119.225, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-26.0565, -28.8843, -8.52785, 0.83", "-27.6461, -30.081, -7.99942, 0.83", "-28.86, -30.8463, -7.58127, 0.83", "-30.1789, -31.6647, -7.08532, 0.83", "-32.7563, -33.0664, -5.95076, 0.83", "-33.9062, -33.7037, -5.40326, 0.83", "-37.0981, -35.3119, -3.77946, 0.83", "-37.9125, -35.6512, -3.3592, 0.55", "-39.0131, -36.0485, -2.73301, 0.83", "-42.1418, -37.0815, -0.862164, 0.55", "-43.9077, -37.5157, 0.202283, 0.55", "-47.0564, -38.2441, 2.10442, 0.55", "-48.3484, -38.5725, 2.86113, 0.55", "-50.9519, -39.1989, 4.29878, 0.55", "-52.3349, -39.5359, 5.00911, 0.55", "-55.4389, -40.3941, 6.52678, 0.55", "-57.4107, -40.9804, 7.52555, 0.55", "-60.2294, -42.073, 9.01142, 0.55", "-61.439, -42.655, 9.6778, 0.28", "-62.5573, -43.2822, 10.2884, 0.55", "-63.4017, -43.8401, 10.7844, 0.55", "-64.6387, -44.8561, 11.5722, 0.55", "-65.5183, -45.6957, 12.2463, 0.55", "-66.7758, -46.9282, 13.3491, 0.55", "-68.1166, -48.1883, 14.4983, 0.55", "-68.9925, -49.0143, 15.2331, 0.55", "-69.8982, -49.8819, 15.9479, 0.55", "-71.8112, -51.8555, 17.4169, 0.55", "-73.665, -53.8032, 18.8091, 0.28", "-74.6393, -54.8545, 19.5009, 0.55", "-76.0585, -56.3804, 20.3697, 0.55", "-77.351, -57.6633, 21.1119, 0.55", "-79.0231, -59.2159, 21.9671, 0.55", "-79.9825, -60.0384, 22.3887, 0.55", "-81.7022, -61.4233, 23.1543, 0.55", "-83.0517, -62.4264, 23.8453, 0.55", "-84.7449, -63.5116, 24.7798, 0.55", "-86.7257, -64.6607, 25.9627, 0.55", "-87.9363, -65.3509, 26.7141, 0.55", "-90.0736, -66.6665, 28.1591, 0.55", "-91.4479, -67.5587, 29.1339, 0.55", "-93.0055, -68.6463, 30.2496, 0.28", "-93.2202, -68.8165, 30.3866, 0.55", "-94.5454, -69.943, 31.2151, 0.28", "-94.8526, -70.2887, 31.4044, 0.55", "-95.1842, -70.8075, 31.5433, 0.28", "-95.392, -71.2173, 31.5891, 0.55", "-96.0632, -73.0152, 31.7356, 0.28", "-96.4745, -74.1122, 31.8629, 0.55", "-96.8489, -75.166, 32.0474, 0.28", "-97.0085, -75.5866, 32.1517, 0.55", "-97.3444, -76.5342, 32.4826, 0.28", "-97.5967, -77.2473, 32.7841, 0.55", "-98.1388, -78.4751, 33.3482, 0.28", "-98.4398, -79.0221, 33.6476, 0.55", "-99.2148, -80.2483, 34.488, 0.55", "-100.284, -81.7536, 35.7641, 0.28", "-101.394, -83.1724, 37.0932, 0.28", "-102.236, -84.2101, 38.1123, 0.28", "-103.541, -85.8008, 39.8516, 0.28", "-105.095, -87.7214, 42.1119, 0.28", "-106.378, -89.4328, 44.2757, 0.28", "-106.631, -89.7594, 44.722, 0.55", "-106.892, -90.1329, 45.2579, 0.55", "-107.657, -91.6034, 47.2924, 0.28", "-107.901, -92.3199, 48.1373, 0.55", "-108.328, -93.992, 50.3455, 0.28", "-113.282, -98.0585, 55.0266, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-26.0565, -28.8843, -8.52785, 0.55", "-25.271, -29.313, -11.1042, 0.55", "-25.1001, -29.4197, -11.8919, 0.83", "-24.7325, -30.0696, -13.3426, 0.55", "-24.5244, -30.635, -14.2992, 0.83", "-23.8651, -33.8715, -18.7854, 0.83", "-23.567, -37.2558, -23.2923, 0.83", "-23.7335, -39.8975, -26.2818, 1.11", "-25.1346, -47.0682, -33.8712, 0.83", "-25.5811, -48.94, -35.6315, 1.11", "-26.4474, -51.9479, -38.0524, 0.55", "-27.2059, -54.052, -39.4668, 0.55", "-28.3399, -57.11, -41.4458, 0.55", "-28.9636, -59.1906, -42.7409, 0.55", "-30.3559, -64.962, -45.8335, 0.55", "-30.6304, -67.1956, -46.9824, 0.55", "-30.6638, -68.2237, -47.4897, 0.55", "-30.5503, -74.1408, -50.1877, 0.55", "-30.3819, -77.6878, -51.7559, 0.83", "-29.9951, -84.0151, -54.3671, 0.55", "-29.8947, -87.0586, -55.6111, 0.55", "-29.7888, -91.3222, -57.4604, 0.83", "-29.6889, -93.0643, -58.2038, 0.55", "-29.6493, -94.1262, -58.6232, 0.83", "-29.7107, -96.6876, -59.6935, 0.55", "-29.9037, -99.9633, -61.0604, 0.83", "-30.1776, -103.708, -62.3936, 0.83", "-30.8538, -110.28, -64.7199, 0.83", "-31.1512, -112.665, -65.6843, 0.55", "-31.382, -114.316, -66.3926, 0.83", "-32.043, -117.941, -67.963, 0.55", "-32.4341, -119.622, -68.6161, 0.83", "-33.8552, -124.348, -70.2349, 0.55", "-34.9121, -126.965, -71.1386, 0.55", "-35.5805, -128.7, -71.8313, 0.28", "-36.3386, -130.626, -72.6667, 0.55", "-36.9456, -132.13, -73.4577, 0.28", "-37.819, -134.633, -75.174, 0.55", "-38.321, -136.235, -76.4518, 0.28", "-38.9562, -138.537, -78.5934, 0.55", "-39.7038, -141.005, -81.1374, 0.55", "-40.5611, -143.488, -83.9601, 0.55", "-41.9182, -146.925, -88.0277, 0.28", "-42.4851, -148.038, -89.4095, 0.28", "-44.298, -151.055, -93.2458, 0.55", "-45.5457, -152.618, -95.359, 0.55", "-46.8027, -153.929, -97.1348, 0.55", "-48.0424, -155.062, -98.4713, 0.28", "-49.9231, -156.589, -100.076, 0.55", "-51.6173, -157.91, -101.389, 0.55", "-53.38, -159.389, -102.634, 0.55", "-56.1991, -162.112, -104.736, 0.55", "-57.8486, -164.246, -106.305, 0.55", "-58.4317, -165.244, -107.018, 0.28", "-59.1047, -166.779, -107.952, 0.55", "-60.1302, -169.561, -109.421, 0.28", "-60.2527, -170.009, -109.628, 0.83", "-61.8205, -176.011, -112.093, 0.55", "-62.3081, -178.063, -112.835, 0.55", "-62.7597, -180.101, -113.498, 0.28", "-63.7535, -183.982, -114.561, 0.55", "-64.5217, -186.53, -115.221, 0.83", "-65.6717, -189.691, -116.015, 0.28", "-66.6226, -191.667, -116.506, 0.83", "-69.3446, -196.38, -117.976, 0.55", "-71.1153, -199.009, -118.999, 0.55", "-71.9128, -200.029, -119.469, 0.83", "-74.5539, -202.619, -120.87, 0.55", "-76.8705, -204.671, -122.119, 0.55", "-80.1953, -207.166, -123.837, 0.28", "-81.6603, -208.006, -124.538, 0.55", "-83.46, -208.969, -125.432, 0.28", "-88.6187, -211.45, -127.656, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.8236, -10.1028, -5.93526, 0.83", "-22.0008, -7.32273, -7.52001, 0.83", "-26.3724, -4.7452, -8.91696, 0.83", "-28.0908, -3.74716, -9.33952, 0.83", "-31.1909, -2.09551, -9.73844, 0.83", "-33.2918, -1.06386, -9.8648, 0.83", "-36.1561, 0.305804, -9.92578, 0.83", "-38.9145, 1.63379, -9.83468, 0.83", "-41.0262, 2.62297, -9.52793, 0.83", "-44.5328, 4.18635, -8.92351, 0.83", "-46.8865, 5.17902, -8.50759, 0.83", "-48.8601, 5.94542, -8.19609, 0.83", "-50.5563, 6.68158, -8.0889, 0.83", "-51.1614, 6.93705, -8.19203, 0.83", "-52.4573, 7.56218, -8.64076, 0.83", "-53.5643, 8.22305, -9.15772, 0.83", "-56.1837, 9.95401, -10.4378, 0.83", "-59.8289, 12.5233, -12.1744, 0.83", "-63.128, 15.0983, -13.6284, 0.55", "-64.8956, 16.633, -14.3403, 0.83", "-66.27, 17.8242, -14.7853, 0.55", "-68.2236, 19.5052, -15.2613, 0.55", "-69.6667, 20.5019, -15.5633, 0.55", "-72.2968, 21.6158, -15.8472, 0.55", "-73.6151, 21.8673, -15.9688, 0.55", "-77.7006, 21.9653, -16.3462, 0.55", "-81.1175, 21.6729, -16.6539, 0.55", "-86.9997, 20.8014, -17.0722, 0.55", "-91.3995, 20.0401, -17.2925, 0.55", "-94.2092, 19.4989, -17.335, 0.55", "-96.6176, 19.0609, -17.252, 0.55", "-99.292, 18.6238, -16.919, 0.55", "-102.001, 18.241, -16.2464, 0.55", "-103.846, 18.3127, -15.438, 0.55", "-105.873, 18.7008, -14.1129, 0.83", "-107.27, 19.1359, -12.9859, 0.55", "-108.975, 19.8399, -11.4795, 0.83", "-109.854, 20.2817, -10.6812, 0.55", "-112.308, 21.7, -8.59566, 0.83", "-115.866, 23.8891, -6.17878, 0.28", "-116.652, 24.4193, -5.73449, 0.55", "-118.495, 25.7343, -5.07322, 0.55", "-120.445, 27.1301, -4.59206, 0.55", "-121.993, 28.1349, -4.32037, 0.55", "-124.855, 29.9299, -4.04042, 0.55", "-126.251, 30.8308, -4.03178, 0.55", "-129.922, 33.0542, -4.02189, 0.55", "-133.616, 35.112, -4.18039, 0.55", "-135.78, 36.2116, -4.33687, 0.55", "-137.369, 36.9605, -4.58941, 0.83", "-139.687, 38.1016, -5.17873, 0.55", "-141.484, 39.0438, -5.87926, 0.55", "-143.455, 40.1944, -6.97391, 0.55", "-145.904, 42.0069, -9.11464, 0.55", "-147.943, 43.8387, -11.4836, 0.28", "-148.728, 44.6476, -12.5645, 0.28", "-149.907, 46.0766, -14.4449, 0.28", "-151.692, 48.7167, -17.8484, 0.28", "-153.512, 51.8408, -21.7426, 0.28", "-154.38, 53.5324, -23.8821, 0.55", "-154.743, 54.2679, -24.7564, 0.28", "-155.128, 54.9978, -25.6571, 0.55", "-156.224, 57.0632, -28.1027, 0.28", "-156.514, 57.7336, -28.9195, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-17.8236, -10.1028, -5.93526, 0.83", "-18.6443, -8.73068, -7.74358, 0.83", "-19.5905, -7.14868, -9.82855, 0.83", "-20.404, -5.78857, -11.6211, 0.83", "-21.9136, -3.26478, -14.9472, 0.83", "-22.8691, -1.66732, -17.0526, 0.83", "-24.2154, 0.583505, -20.019, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "13.0635, -24.4368, -3.64288, 0.83", "14.9445, -27.3942, -3.47939, 0.83", "16.3588, -29.4643, -3.41194, 0.83", "17.7002, -31.4983, -3.53689, 0.83", "18.3099, -32.4597, -3.65357, 0.83", "19.5352, -34.5288, -3.94732, 0.83", "20.0265, -35.484, -4.0975, 0.83", "21.046, -37.9418, -4.65622, 0.83", "21.9041, -40.5088, -4.98855, 0.83", "22.7227, -43.2428, -5.12359, 0.83", "23.398, -45.8521, -5.0415, 0.83", "24.2187, -49.4702, -4.71288, 0.83", "24.9599, -52.9609, -4.25977, 0.83", "26.3142, -59.6633, -3.11647, 0.83", "26.9871, -62.5572, -2.47954, 0.83", "27.4136, -64.2665, -2.07381, 0.55", "28.2901, -67.1737, -1.48192, 0.55", "28.9639, -68.9682, -1.1871, 0.83", "29.8596, -70.8609, -1.11364, 0.55", "31.4194, -73.6148, -1.65809, 0.55", "32.5601, -75.3048, -2.24603, 0.55", "34.7706, -78.0807, -3.65499, 0.55", "35.9809, -79.3849, -4.48075, 0.55", "38.4008, -81.7016, -6.09784, 0.55", "40.4027, -83.4575, -7.32755, 0.55", "42.7589, -85.3559, -8.5913, 0.55", "45.31, -87.2827, -9.64874, 0.28", "47.2139, -88.6672, -10.1997, 0.55", "49.1608, -90.0489, -10.6121, 0.55", "51.5756, -91.786, -10.8366, 0.55", "53.7188, -93.417, -10.844, 0.55", "56.0121, -95.2683, -10.654, 0.55", "57.9341, -96.8034, -10.4126, 0.55", "59.245, -97.8611, -10.292, 0.55", "61.4439, -99.5683, -9.9665, 0.55", "62.8919, -100.636, -9.59316, 0.55", "64.8403, -102.011, -8.85835, 0.55", "66.4537, -103.052, -8.06578, 0.55", "68.2354, -104.089, -7.05285, 0.28", "71.9832, -106.066, -4.7513, 0.55", "74.6307, -107.39, -3.02418, 0.55", "77.0378, -108.516, -1.40108, 0.55", "78.2834, -109.104, -0.528828, 0.55", "80.6974, -110.236, 1.16711, 0.55", "82.5682, -111.034, 2.40914, 0.28", "83.2445, -111.291, 2.73738, 0.55", "84.9573, -111.8, 3.42101, 0.28", "85.4977, -111.942, 3.6114, 0.55", "87.393, -112.383, 4.18266, 0.55", "88.8097, -112.653, 4.51835, 0.55", "90.6397, -112.965, 4.8614, 0.28", "91.7042, -113.097, 5.0689, 0.55", "93.5051, -113.318, 5.40447, 0.28", "94.8073, -113.476, 5.6594, 0.55", "97.1643, -113.723, 6.14198, 0.28", "99.3424, -114.008, 6.69348, 0.55", "102.517, -114.419, 7.62284, 0.28", "103.649, -114.546, 7.96255, 0.28", "105.003, -114.637, 8.38843, 0.28", "105.902, -114.714, 8.68473, 0.28", "108.182, -114.926, 9.53279, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.0635, -24.4368, -3.64288, 0.83", "12.6566, -27.0191, -4.24969, 0.83", "12.3397, -29.0561, -4.74011, 0.83", "12.0101, -31.7161, -5.35805, 0.83", "11.7183, -34.1887, -5.93171, 0.83", "11.1384, -39.0901, -7.11943, 0.83", "10.7739, -42.1899, -7.87097, 0.83", "10.5695, -44.2294, -8.36673, 0.83", "10.3095, -47.3828, -9.12132, 0.83", "9.96128, -51.8318, -10.1763, 0.83", "9.73848, -55.6993, -11.0611, 0.83", "9.58778, -58.0094, -11.5714, 0.83", "9.36285, -61.1869, -12.2545, 0.83", "9.14211, -63.7357, -12.7969, 0.83", "8.8818, -66.5242, -13.3603, 0.83", "8.70772, -69.1678, -13.836, 0.83", "8.57477, -71.8946, -14.2699, 0.83", "8.45768, -75.3267, -14.7882, 0.83", "8.29278, -78.2928, -15.2211, 0.83", "8.05709, -81.8076, -15.6002, 0.83", "7.72795, -86.4665, -15.9164, 0.83", "7.48362, -89.3837, -16.0387, 0.83", "7.25528, -91.7179, -16.0812, 0.83", "6.57129, -97.9655, -15.991, 0.83", "5.98747, -102.677, -15.7804, 0.83", "5.70866, -104.516, -15.65, 0.83", "5.1311, -108.036, -15.3335, 0.83", "4.74238, -110.46, -15.108, 0.83", "4.32341, -113.237, -14.8211, 0.83", "3.97688, -115.841, -14.5772, 0.83", "3.45444, -119.167, -14.4335, 0.83", "2.78867, -122.911, -14.3878, 0.83", "2.52333, -124.449, -14.3936, 0.83", "2.02688, -127.494, -14.5277, 0.55", "1.65997, -130.2, -14.7442, 0.55", "1.50808, -132.046, -14.9272, 0.55", "1.39008, -134.355, -15.2055, 0.55", "1.29173, -137.086, -15.5206, 0.55", "1.28421, -139.985, -15.833, 0.55", "1.40006, -142.733, -16.1177, 0.55", "1.57729, -146.227, -16.2667, 0.55", "1.70003, -149.246, -16.3025, 0.55", "1.7807, -151.978, -16.2746, 0.55", "1.75539, -154.185, -16.1421, 0.55", "1.67863, -156.654, -15.8658, 0.55", "1.40697, -161.149, -15.2384, 0.55", "1.19182, -163.24, -14.9295, 0.55", "0.793349, -166.312, -14.4846, 0.55", "0.297758, -170.27, -13.9301, 0.55", "-0.038362, -172.966, -13.536, 0.55", "-0.601583, -177.111, -12.9737, 0.55", "-1.2741, -182.111, -12.4258, 0.55", "-1.53532, -183.92, -12.2226, 0.55", "-1.92482, -186.807, -11.9187, 0.55", "-2.22209, -189.885, -11.6662, 0.55", "-2.44211, -193.039, -11.3906, 0.55", "-2.53356, -196.405, -11.0649, 0.55", "-2.54816, -198.323, -10.9235, 0.55", "-2.59077, -201.407, -10.7844, 0.55", "-2.65581, -204.362, -10.7179, 0.55", "-2.68744, -207.586, -10.6896, 0.55", "-2.65852, -209.158, -10.6763, 0.55", "-2.6103, -213.211, -10.6759, 0.55", "-2.65207, -218.338, -10.7618, 0.55", "-2.76297, -221.649, -10.8563, 0.55", "-2.81346, -223.265, -10.8996, 0.55", "-2.87103, -225.02, -10.9406, 0.55", "-2.9564, -226.786, -10.9969, 0.55", "-3.05977, -228.558, -11.0403, 0.55", "-3.32318, -232.087, -11.1887, 0.55", "-3.73549, -237.338, -11.4442, 0.55", "-3.82366, -238.564, -11.5005, 0.55", "-4.06862, -241.805, -11.6357, 0.55", "-4.17071, -243.523, -11.7004, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "52.2786, -11.7041, -69.5222, 0.55", "53.7146, -13.4074, -72.4447, 0.55", "55.0874, -14.8326, -74.9206, 0.55", "55.8689, -15.6335, -76.3973, 0.55", "58.3455, -18.0467, -80.9733, 0.55", "59.2803, -18.983, -82.7369, 0.55", "59.805, -19.4728, -83.684, 0.28", "62.1232, -21.3717, -87.6136, 0.83", "64.2184, -22.7183, -91.1537, 0.28", "64.6352, -22.907, -91.8436, 0.55", "66.4518, -23.4487, -94.6722, 0.28", "67.5222, -23.6464, -96.3303, 0.28", "68.6013, -23.7503, -97.9379, 0.83", "71.8049, -23.8656, -102.385, 0.28", "72.719, -23.8595, -103.555, 0.28", "75.4793, -23.8127, -107.119, 0.28", "75.7264, -23.8022, -107.43, 0.55", "77.7548, -23.8537, -110.083, 0.28", "79.3178, -24.01, -112.013, 0.28", "80.719, -24.2863, -113.542, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "52.2786, -11.7041, -69.5222, 0.28", "52.6022, -11.2433, -70.3399, 0.28", "52.854, -10.905, -71.2622, 0.55", "53.2515, -10.4756, -72.5614, 0.28", "53.3696, -10.3613, -72.9217, 0.55", "54.3938, -9.26082, -76.0631, 0.55", "55.5969, -7.86942, -79.8325, 0.28", "56.7891, -6.5297, -83.6336, 0.55", "57.2613, -6.0269, -85.132, 0.28", "57.9863, -5.29292, -87.3603, 0.28", "59.1827, -4.24552, -90.9273, 0.28", "59.5101, -3.97179, -91.8784, 0.28", "59.9181, -3.66101, -92.9705, 0.55", "60.7828, -3.00831, -95.2731, 0.28", "61.4087, -2.50446, -97.015, 0.55", "63.5876, -0.791166, -102.949, 0.28", "64.3364, -0.226923, -104.989, 0.28", "64.8836, 0.247224, -106.506, 0.55", "66.4212, 1.81306, -110.982, 0.28", "67.0467, 2.54526, -112.783, 0.28", "67.3958, 2.99404, -113.749, 0.55", "68.4354, 4.56248, -116.218, 0.28", "69.0993, 5.53022, -117.607, 0.28", "69.7319, 6.40796, -118.763, 0.55", "70.336, 7.22763, -119.548, 0.28", "70.4764, 7.40517, -119.714, 0.55", "71.9954, 9.31141, -121.208, 0.28", "72.6657, 10.1325, -121.682, 0.55", "74.0992, 11.7749, -122.537, 0.28", "75.1002, 12.9108, -123.032, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-23.3405, -13.4794, 20.8262, 0.28", "-26.5658, -12.8831, 26.6852, 0.28", "-27.1202, -12.7806, 27.6924, 0.28", "-27.5755, -12.6964, 28.5194, 0.55", "-28.5204, -12.5217, 30.236, 0.28", "-29.3097, -12.3758, 31.6698, 0.28", "-29.9751, -12.2527, 32.8786, 0.55", "-37.4979, -10.2884, 40.6802, 0.55", "-43.9066, -6.75392, 48.9112, 0.55", "-50.018, -2.34518, 56.9442, 0.55", "-57.1656, 0.477014, 64.8349, 0.55", "-63.2069, 4.43115, 73.1525, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-23.3405, -13.4794, 20.8262, 0.28", "-23.6842, -13.3183, 21.8179, 0.28", "-24.1672, -13.006, 23.0535, 0.28", "-24.6917, -12.524, 24.3936, 0.83", "-26.0703, -11.2571, 27.9158, 0.28", "-26.4811, -10.8796, 28.9653, 0.28", "-27.1697, -10.2467, 30.7249, 0.28", "-27.6768, -9.85302, 31.8435, 0.28", "-28.2444, -9.43226, 32.796, 0.55", "-31.81, -6.64984, 39.9728, 0.55", "-34.3398, -3.51889, 47.4401, 0.55", "-36.6181, -1.62178, 55.3882, 0.55", "-39.7186, -1.04235, 63.2631, 0.55", "-44.105, -1.23859, 70.5214, 0.55", "-48.5426, -1.44286, 77.7483, 0.55", "-53.221, -1.06403, 84.8145, 0.55", "-56.5887, -1.91579, 92.5537, 0.55", "-58.8964, -3.48698, 100.564, 0.55", "-60.9623, -4.19915, 108.761, 0.55", "-61.7345, -5.0147, 117.17, 0.55", "-61.6335, -4.59341, 125.642, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-24.2154, 0.583505, -20.019, 0.55", "-28.9153, 3.55479, -22.4238, 0.55", "-30.6714, 4.56811, -23.3737, 0.55", "-32.3377, 5.33632, -24.4635, 0.55", "-34.2133, 6.16964, -25.7465, 0.55", "-37.4415, 7.52271, -28.3566, 0.55", "-42.2425, 9.22998, -32.4349, 0.55", "-42.9274, 9.39603, -33.1019, 0.55", "-45.9703, 10.0122, -36.2494, 0.55", "-48.5525, 10.456, -39.0711, 0.55", "-52.4628, 10.9966, -43.5192, 0.55", "-55.6207, 11.3033, -47.0246, 0.55", "-58.324, 11.4579, -49.8684, 0.55", "-60.389, 11.6376, -51.9168, 0.55", "-66.2254, 12.205, -57.3238, 0.55", "-67.3758, 12.2742, -58.345, 0.55", "-69.2844, 12.4282, -59.8225, 0.55", "-72.7856, 12.7468, -62.4024, 0.55", "-75.1016, 13.0467, -64.1937, 0.28", "-76.176, 13.2062, -65.1173, 0.55", "-76.8581, 13.2954, -65.7232, 0.55", "-78.6639, 13.576, -67.4308, 0.55", "-81.5976, 14.0624, -70.4542, 0.55", "-86.1679, 14.9943, -75.6813, 0.83", "-88.7654, 15.5226, -78.5794, 0.55", "-90.5375, 15.9657, -80.5018, 0.55", "-92.8515, 16.576, -82.9765, 0.28", "-96.2029, 17.3409, -86.3708, 0.55", "-100.29, 18.1049, -90.0231, 0.83", "-102.941, 18.3757, -91.8821, 0.55", "-107.769, 18.7387, -94.6211, 0.28", "-108.957, 18.7932, -95.0816, 0.55", "-115.613, 18.6823, -95.9912, 0.28", "-117.481, 18.6423, -95.7686, 0.28", "-119.475, 18.6825, -95.2097, 0.83", "-122.862, 19.2332, -94.1056, 0.28", "-124.92, 19.8014, -93.3116, 0.55", "-129.137, 21.6756, -91.7963, 0.28", "-131.429, 22.9948, -91.0379, 0.28", "-132.914, 23.937, -90.4754, 0.28", "-135.535, 25.8104, -89.6341, 0.55", "-137.439, 27.2677, -89.0237, 0.55", "-139.934, 29.3287, -88.5528, 0.28", "-142.038, 31.0854, -88.3825, 0.28", "-143.578, 32.3176, -88.3288, 0.83", "-149.469, 36.7124, -88.1701, 0.28", "-151.407, 38.0692, -88.0956, 0.55", "-156.157, 41.3496, -87.8575, 0.28", "-158.551, 42.9685, -87.6542, 0.28", "-161.362, 44.9936, -87.1318, 0.28", "-162.305, 45.7113, -86.788, 0.28", "-163.343, 46.5239, -86.0113, 0.55", "-164.289, 47.3635, -85.068, 0.28", "-164.642, 47.7028, -84.5854, 0.55", "-166.502, 49.7567, -81.8761, 0.28", "-166.853, 50.12, -81.401, 0.55", "-168.213, 51.3278, -79.9546, 0.28", "-168.408, 51.4795, -79.7814, 0.55", "-171.342, 53.4956, -77.6573, 0.28", "-173.68, 54.9258, -76.2435, 0.28", "-175.353, 55.8072, -75.4274, 0.55", "-178.369, 57.3002, -74.1547, 0.28", "-178.912, 57.5475, -73.9644, 0.55", "-181.573, 58.6875, -73.1259, 0.28", "-182.746, 59.1424, -72.8143, 0.28", "-183.767, 59.5139, -72.5759, 0.55", "-185.297, 60.097, -72.1626, 0.28", "-186.183, 60.3646, -71.8453, 0.28", "-186.772, 60.5204, -71.643, 0.55", "-187.68, 60.6999, -71.3365, 0.28", "-188.38, 60.8358, -71.091, 0.55", "-189.811, 61.0487, -70.5358, 0.28", "-191.204, 61.1028, -69.8223, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-24.2154, 0.583505, -20.019, 0.83", "-24.233, 0.790411, -21.9916, 0.83", "-24.3689, 0.923974, -23.6046, 0.83", "-24.506, 1.38805, -28.2137, 0.83", "-24.4964, 1.43459, -29.2176, 0.83", "-24.4871, 1.43215, -30.0273, 0.83", "-24.4762, 1.34988, -32.7589, 0.83", "-24.4419, 1.14638, -35.5886, 0.83", "-24.2656, 0.469041, -40.2876, 0.83", "-24.1246, 0.0217931, -42.0441, 0.83", "-24.0066, -0.32146, -43.1826, 0.83", "-23.7516, -1.03694, -45.3619, 0.83", "-23.3965, -1.72865, -47.6035, 0.83", "-23.1409, -2.3153, -49.3164, 0.83", "-22.7777, -3.4339, -52.3119, 0.55", "-22.7125, -3.60553, -52.9238, 0.55", "-22.4617, -4.11962, -54.9325, 0.55", "-22.1489, -4.69156, -57.3055, 0.55", "-22.0792, -4.79139, -57.8913, 0.55", "-21.9077, -4.9447, -59.1774, 0.83", "-21.1951, -5.44551, -63.2928, 0.55", "-20.9378, -5.58295, -64.5029, 0.83", "-20.4672, -5.7709, -66.5141, 0.55", "-19.8044, -5.98065, -69.262, 0.83", "-19.0894, -6.02866, -72.0505, 0.55", "-18.6326, -6.0036, -73.6449, 0.55", "-18.0203, -5.91228, -75.6393, 0.83", "-16.6562, -5.38714, -80.4143, 0.55", "-16.3885, -5.23635, -81.3462, 0.83", "-15.6185, -4.6676, -83.9462, 0.28", "-15.3862, -4.391, -84.8737, 0.28", "-15.1592, -3.89572, -86.1, 0.55", "-14.6506, -1.41379, -90.9774, 0.28", "-14.6301, -1.18005, -91.362, 0.28", "-14.6423, -0.359907, -92.6445, 0.83", "-14.8696, 1.2994, -94.9897, 0.55", "-15.1501, 2.47932, -96.4995, 0.55", "-15.4765, 3.31843, -97.4164, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.17071, -243.523, -11.7004, 0.55", "-3.17044, -245.354, -11.2939, 0.55", "-2.31266, -246.925, -10.9453, 0.55", "2.57606, -254.45, -9.9515, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.17071, -243.523, -11.7004, 0.55", "-4.17995, -244.701, -11.6765, 0.55", "-4.17952, -246.447, -11.6148, 0.55", "-4.16594, -248.431, -11.4873, 0.55", "-4.1558, -251.776, -11.2113, 0.55", "-4.16404, -253.347, -11.08, 0.55", "-4.26015, -257.063, -10.7612, 0.55", "-4.51014, -261.338, -10.3537, 0.55", "-4.86087, -264.181, -10.0802, 0.55", "-5.34651, -266.845, -9.82456, 0.55", "-5.65374, -268.258, -9.66812, 0.55", "-5.96098, -269.464, -9.54438, 0.55", "-6.56162, -271.172, -9.34676, 0.55", "-7.74587, -273.455, -9.1042, 0.55", "-8.50477, -274.593, -9.02035, 0.28", "-9.84719, -276.285, -8.88798, 0.55", "-10.2949, -284.433, -7.2564, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-63.2069, 4.43115, 73.1525, 0.55", "-68.2639, 6.28921, 81.587, 0.55", "-73.1745, 7.42853, 90.233, 0.55", "-78.0735, 7.63578, 98.9578, 0.55", "-84.0679, 7.81423, 106.971, 0.55", "-89.6702, 10.7705, 114.719, 0.55", "-94.3002, 12.8744, 123.339, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-63.2069, 4.43115, 73.1525, 0.55", "-68.4064, 6.84021, 80.1085, 0.55", "-73.7781, 8.55713, 87.1385, 0.55", "-79.3814, 8.99599, 94.1838, 0.55", "-83.699, 10.2992, 101.987, 0.55", "-86.8469, 10.334, 110.432, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-86.8469, 10.334, 110.432, 0.55", "-92.5838, 12.0542, 118.963, 0.55", "-97.6414, 14.8206, 127.649, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-86.8469, 10.334, 110.432, 0.55", "-91.437, 11.4237, 117.768, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_44", "dend_43", "dend_42", "dend_37", "dend_34", "dend_21", "dend_10", "dend_1", "dend_0", "dend_46", "dend_45", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_22", "dend_20", "dend_11", "dend_7", "dend_2", "dend_48", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_26", "dend_23", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_30", "dend_27", "dend_25", "dend_24", "dend_15", "dend_14", "dend_5", "dend_4", "dend_29", "dend_28", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_44", "dend_43", "dend_42", "dend_37", "dend_34", "dend_21", "dend_10", "dend_1", "dend_0", "dend_46", "dend_45", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_22", "dend_20", "dend_11", "dend_7", "dend_2", "dend_48", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_26", "dend_23", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_30", "dend_27", "dend_25", "dend_24", "dend_15", "dend_14", "dend_5", "dend_4", "dend_29", "dend_28", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_44", "dend_43", "dend_42", "dend_37", "dend_34", "dend_21", "dend_10", "dend_1", "dend_0", "axon_0", "dend_46", "dend_45", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_22", "dend_20", "dend_11", "dend_7", "dend_2", "axon_1", "dend_48", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_26", "dend_23", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_30", "dend_27", "dend_25", "dend_24", "dend_15", "dend_14", "dend_5", "dend_4", "dend_29", "dend_28", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_18", "dend_18", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L23_NBC_84b7be2a4c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, axon_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, axon_1, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_21, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.45000091771476175)
    connect dend_44(0), soma_0(0.45000091771476175)
    connect dend_43(0), soma_0(0.45000091771476175)
    connect dend_42(0), soma_0(0.45000091771476175)
    connect dend_37(0), soma_0(0.45000091771476175)
    connect dend_34(0), soma_0(0.45000091771476175)
    connect dend_21(0), soma_0(0.45000091771476175)
    connect dend_10(0), soma_0(0.45000091771476175)
    connect dend_1(0), soma_0(0.45000091771476175)
    connect dend_0(0), soma_0(0.45000091771476175)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -11.2904, -1.90655, -0.0708968, 1.21335 ) }
    soma_0 { pt3dadd( -10.2183, -1.82528, -0.0665607, 1.95742 ) }
    soma_0 { pt3dadd( -9.14614, -1.74402, -0.0622246, 3.52326 ) }
    soma_0 { pt3dadd( -8.07401, -1.66275, -0.0578885, 5.81709 ) }
    soma_0 { pt3dadd( -7.00188, -1.58149, -0.0535524, 7.36561 ) }
    soma_0 { pt3dadd( -5.92974, -1.50022, -0.0492164, 9.78862 ) }
    soma_0 { pt3dadd( -4.85761, -1.41896, -0.0448803, 11.1132 ) }
    soma_0 { pt3dadd( -3.78548, -1.3377, -0.0405442, 11.7228 ) }
    soma_0 { pt3dadd( -2.71334, -1.25643, -0.0362081, 12.3311 ) }
    soma_0 { pt3dadd( -1.64121, -1.17517, -0.031872, 12.4664 ) }
    soma_0 { pt3dadd( -0.569079, -1.0939, -0.0275359, 12.3777 ) }
    soma_0 { pt3dadd( 0.503053, -1.01264, -0.0231998, 12.2817 ) }
    soma_0 { pt3dadd( 1.57519, -0.931372, -0.0188637, 12.3245 ) }
    soma_0 { pt3dadd( 2.64732, -0.850108, -0.0145276, 12.2615 ) }
    soma_0 { pt3dadd( 3.71945, -0.768843, -0.0101916, 12.0136 ) }
    soma_0 { pt3dadd( 4.79158, -0.687578, -0.00585547, 11.5505 ) }
    soma_0 { pt3dadd( 5.86372, -0.606314, -0.00151938, 11.1181 ) }
    soma_0 { pt3dadd( 6.93585, -0.525049, 0.00281671, 10.2871 ) }
    soma_0 { pt3dadd( 8.00798, -0.443784, 0.0071528, 7.35968 ) }
    soma_0 { pt3dadd( 9.08011, -0.36252, 0.0114889, 4.57252 ) }
    soma_0 { pt3dadd( 10.1522, -0.281255, 0.015825, 2.82158 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -1.31809, -6.01266, -0.14221, 1.11 ) }
    dend_49 { pt3dadd( -0.524206, -5.53772, 5.63409, 1.11 ) }
    dend_49 { pt3dadd( -0.185375, -4.96367, 9.72454, 0.83 ) }
    dend_49 { pt3dadd( 0.30325, -3.46219, 17.0786, 0.55 ) }
    dend_49 { pt3dadd( 0.503079, -2.77748, 19.8319, 0.55 ) }
    dend_49 { pt3dadd( 1.11263, -0.866594, 26.607, 0.55 ) }
    dend_49 { pt3dadd( 1.4767, 0.336996, 30.07, 0.55 ) }
    dend_49 { pt3dadd( 2.01608, 2.37187, 34.2768, 0.55 ) }
    dend_49 { pt3dadd( 2.29911, 3.33417, 35.9454, 0.55 ) }
    dend_49 { pt3dadd( 2.74442, 4.32231, 37.3737, 0.55 ) }
    dend_49 { pt3dadd( 3.7443, 5.9773, 39.4066, 0.55 ) }
    dend_49 { pt3dadd( 5.43565, 8.11189, 41.1687, 0.55 ) }
    dend_49 { pt3dadd( 6.45875, 9.18613, 41.7487, 0.55 ) }
    dend_49 { pt3dadd( 8.83157, 11.2788, 42.2511, 0.55 ) }
    dend_49 { pt3dadd( 11.3763, 13.1859, 42.2986, 0.55 ) }
    dend_49 { pt3dadd( 14.0272, 15.0554, 41.7909, 0.55 ) }
    dend_49 { pt3dadd( 16.9005, 17.1256, 40.611, 0.55 ) }
    dend_49 { pt3dadd( 21.0034, 19.8188, 38.0985, 0.55 ) }
    dend_49 { pt3dadd( 23.925, 21.5068, 36.0484, 0.55 ) }
    dend_49 { pt3dadd( 26.2233, 22.7115, 34.276, 0.55 ) }
    dend_49 { pt3dadd( 28.9393, 24.0208, 32.171, 0.55 ) }
    dend_49 { pt3dadd( 32.4962, 25.3991, 29.5282, 0.55 ) }
    dend_49 { pt3dadd( 37.892, 26.8109, 26.0484, 0.55 ) }
    dend_49 { pt3dadd( 41.2394, 27.4702, 24.1598, 0.55 ) }
    dend_49 { pt3dadd( 43.1906, 27.8588, 23.2004, 0.55 ) }
    dend_49 { pt3dadd( 45.7936, 28.2787, 22.1086, 0.55 ) }
    dend_49 { pt3dadd( 47.9338, 28.4521, 21.4276, 0.55 ) }
    dend_49 { pt3dadd( 51.6883, 28.5723, 20.3967, 0.55 ) }
    dend_49 { pt3dadd( 57.2798, 28.9465, 18.8173, 0.55 ) }
    dend_49 { pt3dadd( 59.5626, 29.1104, 18.0022, 0.55 ) }
    dend_49 { pt3dadd( 62.081, 29.2273, 16.986, 0.55 ) }
    dend_49 { pt3dadd( 64.2989, 29.3228, 15.9721, 0.55 ) }
    dend_49 { pt3dadd( 68.5189, 29.63, 13.9103, 0.55 ) }
    dend_49 { pt3dadd( 71.1789, 29.965, 12.6335, 0.55 ) }
    dend_49 { pt3dadd( 73.7392, 30.2731, 11.5265, 0.55 ) }
    dend_49 { pt3dadd( 75.7582, 30.6491, 10.5535, 0.55 ) }
    dend_49 { pt3dadd( 77.1768, 31.0506, 9.83672, 0.55 ) }
    dend_49 { pt3dadd( 78.1603, 31.3839, 9.36204, 0.55 ) }
    dend_49 { pt3dadd( 82.3721, 32.7714, 7.70904, 0.55 ) }
    dend_49 { pt3dadd( 84.9486, 33.725, 6.72772, 0.55 ) }
    dend_49 { pt3dadd( 86.6723, 34.4356, 6.05299, 0.55 ) }
    dend_49 { pt3dadd( 90.4102, 36.0924, 4.60997, 0.55 ) }
    dend_49 { pt3dadd( 91.6179, 36.6131, 4.10955, 0.55 ) }
    dend_49 { pt3dadd( 95.224, 38.1266, 2.59953, 0.55 ) }
    dend_49 { pt3dadd( 97.8422, 39.136, 1.56345, 0.55 ) }
    dend_49 { pt3dadd( 99.9306, 39.8186, 0.616863, 0.55 ) }
    dend_49 { pt3dadd( 102.324, 40.3701, -0.617095, 0.55 ) }
    dend_49 { pt3dadd( 105.932, 40.9985, -2.73516, 0.55 ) }
    dend_49 { pt3dadd( 107.742, 41.1752, -3.87396, 0.83 ) }
    dend_49 { pt3dadd( 109.828, 41.3359, -5.23081, 0.55 ) }
    dend_49 { pt3dadd( 114.909, 41.5221, -8.48672, 0.55 ) }
    dend_49 { pt3dadd( 118.586, 41.6605, -10.7828, 0.55 ) }
    dend_49 { pt3dadd( 121.309, 41.7095, -12.408, 0.55 ) }
    dend_49 { pt3dadd( 123.727, 41.8187, -13.7481, 0.55 ) }
    dend_49 { pt3dadd( 127.193, 41.9669, -15.6432, 0.55 ) }
    dend_49 { pt3dadd( 132.335, 42.1993, -18.2093, 0.55 ) }
    dend_49 { pt3dadd( 134.142, 42.244, -18.9156, 0.55 ) }
    dend_49 { pt3dadd( 137.322, 42.3341, -19.9748, 0.28 ) }
    dend_49 { pt3dadd( 138.742, 42.3401, -20.3448, 0.55 ) }
    dend_49 { pt3dadd( 141.639, 42.3154, -21.0049, 0.28 ) }
    dend_49 { pt3dadd( 143.311, 42.113, -21.39, 0.28 ) }
    dend_49 { pt3dadd( 144.85, 41.8571, -21.7252, 0.55 ) }
    dend_49 { pt3dadd( 146.569, 41.4563, -22.2236, 0.55 ) }
    dend_49 { pt3dadd( 148.416, 40.87, -22.8342, 0.55 ) }
    dend_49 { pt3dadd( 151.729, 39.4409, -23.9483, 0.55 ) }
    dend_49 { pt3dadd( 154.863, 37.6275, -25.0649, 0.55 ) }
    dend_49 { pt3dadd( 156.168, 36.6464, -25.6405, 0.28 ) }
    dend_49 { pt3dadd( 157.233, 35.6749, -26.1687, 0.55 ) }
    dend_49 { pt3dadd( 158.53, 34.307, -26.8711, 0.28 ) }
    dend_49 { pt3dadd( 159.891, 32.6125, -27.6276, 0.55 ) }
    dend_49 { pt3dadd( 162.124, 29.3874, -28.8293, 0.28 ) }
    dend_49 { pt3dadd( 163.12, 27.8507, -29.3529, 0.55 ) }
    dend_49 { pt3dadd( 163.995, 26.4442, -29.844, 0.28 ) }
    dend_49 { pt3dadd( 164.804, 25.1285, -30.3243, 0.55 ) }
    dend_49 { pt3dadd( 166.909, 21.7256, -31.7639, 0.28 ) }
    dend_49 { pt3dadd( 167.588, 20.5985, -32.2961, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 97/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 1.63191, 6.96734, -19.0822, 1.38 ) }
    dend_44 { pt3dadd( 1.69401, 9.74918, -19.0822, 1.38 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 99/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 4.65191, 4.77734, 3.74779, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 5.22533, 5.53264, 4.94305, 0.55 ) }
    dend_43 { pt3dadd( 5.52208, 5.91416, 5.54507, 0.55 ) }
    dend_43 { pt3dadd( 6.00895, 6.38145, 6.58389, 0.55 ) }
    dend_43 { pt3dadd( 6.94267, 7.10504, 8.4884, 0.55 ) }
    dend_43 { pt3dadd( 8.14619, 8.05314, 10.9958, 0.55 ) }
    dend_43 { pt3dadd( 9.33593, 8.97021, 13.4105, 0.55 ) }
    dend_43 { pt3dadd( 10.5756, 9.74216, 15.7247, 0.55 ) }
    dend_43 { pt3dadd( 12.5976, 10.8558, 19.4491, 0.55 ) }
    dend_43 { pt3dadd( 13.2537, 11.1693, 20.6613, 0.55 ) }
    dend_43 { pt3dadd( 14.1389, 11.5227, 22.2358, 0.55 ) }
    dend_43 { pt3dadd( 14.8989, 11.7236, 23.4271, 0.55 ) }
    dend_43 { pt3dadd( 16.2543, 11.944, 25.4509, 0.55 ) }
    dend_43 { pt3dadd( 21.0558, 13.3006, 32.6831, 0.55 ) }
    dend_43 { pt3dadd( 25.6029, 15.7189, 39.8016, 0.55 ) }
    dend_43 { pt3dadd( 28.6604, 17.7521, 47.7839, 0.55 ) }
    dend_43 { pt3dadd( 32.5759, 19.5632, 55.4381, 0.55 ) }
    dend_43 { pt3dadd( 36.8939, 22.3056, 62.5818, 0.55 ) }
    dend_43 { pt3dadd( 39.898, 26.0199, 69.956, 0.55 ) }
    dend_43 { pt3dadd( 42.2927, 30.6046, 77.0583, 0.55 ) }
    dend_43 { pt3dadd( 45.9518, 36.2294, 82.7303, 0.55 ) }
    dend_43 { pt3dadd( 49.0668, 41.9284, 88.6478, 0.55 ) }
    dend_43 { pt3dadd( 51.3313, 48.5831, 93.919, 0.55 ) }
    dend_43 { pt3dadd( 52.2315, 56.6419, 97.3019, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 9.74188, -3.87266, -1.90221, 0.55 ) }
    dend_42 { pt3dadd( 11.8425, -4.71693, -1.72853, 0.55 ) }
    dend_42 { pt3dadd( 15.582, -5.65666, -1.29593, 0.83 ) }
    dend_42 { pt3dadd( 18.9071, -6.22089, -0.876126, 0.55 ) }
    dend_42 { pt3dadd( 22.8554, -6.60749, -0.361056, 0.55 ) }
    dend_42 { pt3dadd( 25.385, -6.79331, 0.0115667, 0.55 ) }
    dend_42 { pt3dadd( 29.6363, -6.93307, 0.652053, 0.55 ) }
    dend_42 { pt3dadd( 32.9869, -6.77783, 1.33933, 0.55 ) }
    dend_42 { pt3dadd( 36.2807, -6.3368, 2.13306, 0.55 ) }
    dend_42 { pt3dadd( 38.6455, -5.77522, 2.74686, 0.55 ) }
    dend_42 { pt3dadd( 41.4619, -4.81815, 3.51008, 0.55 ) }
    dend_42 { pt3dadd( 46.504, -2.71705, 4.86807, 0.55 ) }
    dend_42 { pt3dadd( 50.4201, -1.13826, 5.93057, 0.55 ) }
    dend_42 { pt3dadd( 53.7255, 0.132014, 6.84953, 0.55 ) }
    dend_42 { pt3dadd( 58.8956, 1.91487, 8.26513, 0.55 ) }
    dend_42 { pt3dadd( 62.019, 2.84066, 9.10171, 0.55 ) }
    dend_42 { pt3dadd( 64.7377, 3.55961, 9.81454, 0.55 ) }
    dend_42 { pt3dadd( 69.707, 4.47337, 11.0718, 0.55 ) }
    dend_42 { pt3dadd( 72.7324, 4.82864, 11.7452, 0.55 ) }
    dend_42 { pt3dadd( 77.4702, 5.20255, 12.807, 0.55 ) }
    dend_42 { pt3dadd( 81.0592, 5.38802, 13.6238, 0.55 ) }
    dend_42 { pt3dadd( 83.8052, 5.65123, 14.2626, 0.55 ) }
    dend_42 { pt3dadd( 86.5454, 6.01621, 14.8824, 0.55 ) }
    dend_42 { pt3dadd( 90.0407, 6.80878, 15.6405, 0.55 ) }
    dend_42 { pt3dadd( 93.0773, 7.611, 16.2652, 0.55 ) }
    dend_42 { pt3dadd( 96.3253, 8.74567, 16.9121, 0.55 ) }
    dend_42 { pt3dadd( 98.9565, 9.71253, 17.3972, 0.55 ) }
    dend_42 { pt3dadd( 100.477, 10.3342, 17.6909, 0.55 ) }
    dend_42 { pt3dadd( 103.198, 11.5541, 18.0792, 0.55 ) }
    dend_42 { pt3dadd( 105.922, 12.7001, 18.3227, 0.55 ) }
    dend_42 { pt3dadd( 108.69, 13.8699, 18.4392, 0.55 ) }
    dend_42 { pt3dadd( 111.139, 14.8382, 18.4446, 0.55 ) }
    dend_42 { pt3dadd( 115.033, 16.2389, 18.3919, 0.55 ) }
    dend_42 { pt3dadd( 120.095, 17.9928, 18.3678, 0.55 ) }
    dend_42 { pt3dadd( 122.475, 18.7556, 18.3648, 0.55 ) }
    dend_42 { pt3dadd( 127.083, 20.2588, 18.4021, 0.55 ) }
    dend_42 { pt3dadd( 131.808, 21.7566, 18.4935, 0.55 ) }
    dend_42 { pt3dadd( 134.96, 22.8936, 18.6205, 0.55 ) }
    dend_42 { pt3dadd( 138.178, 24.2152, 18.8864, 0.28 ) }
    dend_42 { pt3dadd( 139.519, 24.931, 19.1331, 0.28 ) }
    dend_42 { pt3dadd( 141.379, 26.2983, 19.5455, 0.28 ) }
    dend_42 { pt3dadd( 141.825, 26.7682, 19.6226, 0.55 ) }
    dend_42 { pt3dadd( 143.251, 29.0702, 19.6899, 0.28 ) }
    dend_42 { pt3dadd( 143.918, 30.4455, 19.5878, 0.55 ) }
    dend_42 { pt3dadd( 145.379, 33.8874, 18.8449, 0.28 ) }
    dend_42 { pt3dadd( 146.12, 35.6703, 18.2746, 0.28 ) }
    dend_42 { pt3dadd( 147.781, 39.3074, 16.7779, 0.55 ) }
    dend_42 { pt3dadd( 148.638, 41.2117, 15.9157, 0.28 ) }
    dend_42 { pt3dadd( 148.961, 41.903, 15.559, 0.55 ) }
    dend_42 { pt3dadd( 150.262, 44.6253, 14.1183, 0.28 ) }
    dend_42 { pt3dadd( 150.681, 45.5789, 13.6275, 0.55 ) }
    dend_42 { pt3dadd( 151.309, 46.9815, 12.993, 0.28 ) }
    dend_42 { pt3dadd( 152.381, 49.2635, 12.2529, 0.28 ) }
    dend_42 { pt3dadd( 153.069, 50.6133, 11.8696, 0.55 ) }
    dend_42 { pt3dadd( 154.092, 52.4273, 11.4945, 0.28 ) }
    dend_42 { pt3dadd( 154.722, 53.4015, 11.4015, 0.55 ) }
    dend_42 { pt3dadd( 156.116, 55.32, 11.3439, 0.28 ) }
    dend_42 { pt3dadd( 156.381, 55.6227, 11.3493, 0.55 ) }
    dend_42 { pt3dadd( 157.992, 57.1952, 11.4791, 0.28 ) }
    dend_42 { pt3dadd( 159.16, 58.2017, 11.8038, 0.55 ) }
    dend_42 { pt3dadd( 160.543, 59.3788, 12.3322, 0.28 ) }
    dend_42 { pt3dadd( 161.345, 60.1193, 12.6978, 0.55 ) }
    dend_42 { pt3dadd( 162.944, 61.7928, 13.632, 0.55 ) }
    dend_42 { pt3dadd( 164.145, 63.3835, 14.479, 0.55 ) }
    dend_42 { pt3dadd( 165.896, 66.8372, 16.2913, 0.28 ) }
    dend_42 { pt3dadd( 166.97, 69.3371, 17.814, 0.55 ) }
    dend_42 { pt3dadd( 167.65, 71.1209, 18.928, 0.55 ) }
    dend_42 { pt3dadd( 168.637, 74.1196, 20.7328, 0.28 ) }
    dend_42 { pt3dadd( 169.205, 76.0947, 21.8899, 0.28 ) }
    dend_42 { pt3dadd( 170.876, 82.3523, 25.5286, 0.28 ) }
    dend_42 { pt3dadd( 171.959, 86.8037, 28.0182, 0.28 ) }
    dend_42 { pt3dadd( 172.784, 90.0097, 29.9386, 0.28 ) }
    dend_42 { pt3dadd( 173.455, 92.4586, 31.4446, 0.28 ) }
    dend_42 { pt3dadd( 174.422, 95.9354, 33.5483, 0.28 ) }
    dend_42 { pt3dadd( 184.824, 104.115, 35.6989, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 98/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 6.53191, 0.237337, 10.2578, 0.83 ) }
    dend_37 { pt3dadd( 7.38002, -1.4053, 11.1395, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 8.01081, -2.62703, 11.7953, 0.83 ) }
    dend_37 { pt3dadd( 9.1922, -4.91519, 13.0236, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 2/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.22809, 2.23734, -8.58221, 0.83 ) }
    dend_34 { pt3dadd( -6.79174, 2.47276, -9.18632, 0.83 ) }
    dend_34 { pt3dadd( -7.71832, 3.21975, -10.3776, 0.83 ) }
    dend_34 { pt3dadd( -8.98627, 4.60988, -11.9501, 0.83 ) }
    dend_34 { pt3dadd( -9.76293, 5.71377, -12.9409, 0.83 ) }
    dend_34 { pt3dadd( -11.0282, 7.80844, -14.6788, 0.55 ) }
    dend_34 { pt3dadd( -11.621, 8.79536, -15.5028, 0.55 ) }
    dend_34 { pt3dadd( -12.4378, 10.2538, -16.7283, 0.55 ) }
    dend_34 { pt3dadd( -13.1441, 11.5556, -17.7706, 0.55 ) }
    dend_34 { pt3dadd( -14.2911, 13.4316, -19.2273, 0.55 ) }
    dend_34 { pt3dadd( -15.4493, 14.9641, -20.5121, 0.55 ) }
    dend_34 { pt3dadd( -16.0264, 15.5648, -21.0322, 0.83 ) }
    dend_34 { pt3dadd( -17.5375, 16.837, -22.179, 0.55 ) }
    dend_34 { pt3dadd( -18.7998, 17.6748, -22.9496, 0.55 ) }
    dend_34 { pt3dadd( -20.4467, 18.6988, -23.8665, 0.55 ) }
    dend_34 { pt3dadd( -22.0592, 19.7181, -24.6733, 0.55 ) }
    dend_34 { pt3dadd( -23.2626, 20.5654, -25.2295, 0.55 ) }
    dend_34 { pt3dadd( -25.2959, 22.2461, -26.2043, 0.83 ) }
    dend_34 { pt3dadd( -26.6456, 23.5163, -26.8561, 0.55 ) }
    dend_34 { pt3dadd( -27.7611, 24.643, -27.4572, 0.55 ) }
    dend_34 { pt3dadd( -29.0403, 26.0868, -28.2771, 0.83 ) }
    dend_34 { pt3dadd( -29.6289, 26.7757, -28.6845, 0.83 ) }
    dend_34 { pt3dadd( -30.4528, 27.7337, -29.2674, 0.28 ) }
    dend_34 { pt3dadd( -31.0328, 28.3982, -29.68, 0.55 ) }
    dend_34 { pt3dadd( -32.0836, 29.5328, -30.3022, 0.55 ) }
    dend_34 { pt3dadd( -33.0718, 30.5322, -30.8868, 0.55 ) }
    dend_34 { pt3dadd( -33.8388, 31.359, -31.3524, 0.55 ) }
    dend_34 { pt3dadd( -34.6596, 32.3884, -31.958, 0.83 ) }
    dend_34 { pt3dadd( -35.1776, 33.1007, -32.4209, 0.83 ) }
    dend_34 { pt3dadd( -36.003, 34.3826, -33.2951, 0.83 ) }
    dend_34 { pt3dadd( -37.2984, 36.6814, -34.8691, 0.83 ) }
    dend_34 { pt3dadd( -37.8902, 37.746, -35.6082, 0.55 ) }
    dend_34 { pt3dadd( -38.7402, 39.3072, -36.6923, 0.83 ) }
    dend_34 { pt3dadd( -39.6654, 41.043, -37.8341, 0.55 ) }
    dend_34 { pt3dadd( -40.1006, 41.7797, -38.3025, 0.55 ) }
    dend_34 { pt3dadd( -40.3178, 42.1048, -38.4971, 0.55 ) }
    dend_34 { pt3dadd( -41.0983, 43.1411, -39.0053, 0.83 ) }
    dend_34 { pt3dadd( -42.251, 44.5333, -39.6786, 0.83 ) }
    dend_34 { pt3dadd( -43.1216, 45.5389, -40.1268, 0.83 ) }
    dend_34 { pt3dadd( -44.9251, 47.527, -40.9981, 0.83 ) }
    dend_34 { pt3dadd( -46.0908, 48.636, -41.5432, 0.83 ) }
    dend_34 { pt3dadd( -46.9122, 49.3355, -41.9238, 0.83 ) }
    dend_34 { pt3dadd( -47.9396, 50.1125, -42.4082, 0.55 ) }
    dend_34 { pt3dadd( -48.9891, 50.7771, -42.886, 0.55 ) }
    dend_34 { pt3dadd( -49.9392, 51.2912, -43.3043, 0.55 ) }
    dend_34 { pt3dadd( -51.279, 51.8797, -43.8281, 0.55 ) }
    dend_34 { pt3dadd( -53.1551, 52.5805, -44.5201, 0.55 ) }
    dend_34 { pt3dadd( -53.9943, 52.8553, -44.8621, 0.55 ) }
    dend_34 { pt3dadd( -54.8899, 53.1137, -45.2376, 0.83 ) }
    dend_34 { pt3dadd( -55.8723, 53.3452, -45.659, 0.55 ) }
    dend_34 { pt3dadd( -56.7248, 53.5527, -46.0707, 0.55 ) }
    dend_34 { pt3dadd( -57.6852, 53.8006, -46.5788, 0.83 ) }
    dend_34 { pt3dadd( -59.419, 54.2197, -47.5368, 0.55 ) }
    dend_34 { pt3dadd( -60.5948, 54.5162, -48.2019, 0.83 ) }
    dend_34 { pt3dadd( -62.3301, 54.9761, -49.2263, 0.55 ) }
    dend_34 { pt3dadd( -63.6767, 55.3478, -50.0401, 0.28 ) }
    dend_34 { pt3dadd( -64.6485, 55.6418, -50.6646, 0.83 ) }
    dend_34 { pt3dadd( -66.0303, 56.076, -51.571, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.71191, -5.76266, -1.57221, 2.22 ) }
    dend_21 { pt3dadd( 10.7693, -10.2621, -1.56067, 2.22 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 62/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.35809, -5.38266, 3.20779, 1.11 ) }
    dend_10 { pt3dadd( -9.13192, -7.73927, 4.11106, 1.11 ) }
    dend_10 { pt3dadd( -10.0971, -10.6785, 5.23764, 0.83 ) }
    dend_10 { pt3dadd( -11.1672, -13.9376, 6.48683, 1.11 ) }
    dend_10 { pt3dadd( -12.2327, -17.1824, 7.73054, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -10.7781, -4.64266, -3.55221, 1.38 ) }
    dend_1 { pt3dadd( -12.056, -5.85781, -4.08184, 1.38 ) }
    dend_1 { pt3dadd( -13.8694, -7.58221, -4.83342, 1.11 ) }
    dend_1 { pt3dadd( -15.4007, -9.03827, -5.46804, 1.11 ) }
    dend_1 { pt3dadd( -17.0567, -10.6129, -6.15436, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 72/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.17809, 4.47734, 1.47779, 1.11 ) }
    dend_0 { pt3dadd( -7.71332, 5.39596, 2.10523, 1.11 ) }
    dend_0 { pt3dadd( -9.58109, 6.83318, 3.13332, 1.11 ) }
    dend_0 { pt3dadd( -11.557, 8.84857, 4.26051, 1.11 ) }
    dend_0 { pt3dadd( -13.9493, 11.7115, 5.35164, 1.11 ) }
    dend_0 { pt3dadd( -15.0444, 13.3467, 5.79978, 0.83 ) }
    dend_0 { pt3dadd( -15.9149, 14.7731, 6.1078, 0.83 ) }
    dend_0 { pt3dadd( -17.8525, 18.3439, 6.56054, 0.83 ) }
    dend_0 { pt3dadd( -19.3078, 21.4904, 6.66149, 0.83 ) }
    dend_0 { pt3dadd( -20.4424, 24.5252, 6.52464, 0.55 ) }
    dend_0 { pt3dadd( -21.629, 28.2771, 6.2756, 0.55 ) }
    dend_0 { pt3dadd( -22.1175, 29.7379, 6.24139, 0.28 ) }
    dend_0 { pt3dadd( -22.8376, 31.6624, 6.25828, 0.83 ) }
    dend_0 { pt3dadd( -23.9208, 34.3432, 6.30647, 0.55 ) }
    dend_0 { pt3dadd( -24.8303, 36.5746, 6.46173, 0.55 ) }
    dend_0 { pt3dadd( -26.2724, 40.0281, 6.77885, 0.55 ) }
    dend_0 { pt3dadd( -28.1629, 44.6218, 6.92163, 0.55 ) }
    dend_0 { pt3dadd( -29.1756, 47.2277, 6.91169, 0.55 ) }
    dend_0 { pt3dadd( -30.3513, 50.2906, 6.81636, 0.55 ) }
    dend_0 { pt3dadd( -31.3623, 52.9989, 6.66101, 0.55 ) }
    dend_0 { pt3dadd( -32.8829, 57.025, 6.31545, 0.55 ) }
    dend_0 { pt3dadd( -34.7344, 62.1885, 5.65252, 0.55 ) }
    dend_0 { pt3dadd( -35.6001, 64.7599, 5.28141, 0.55 ) }
    dend_0 { pt3dadd( -36.371, 67.0185, 5.00975, 0.55 ) }
    dend_0 { pt3dadd( -37.0698, 69.1115, 4.82871, 0.55 ) }
    dend_0 { pt3dadd( -38.0598, 72.197, 4.68219, 0.55 ) }
    dend_0 { pt3dadd( -38.9692, 75.0974, 4.67466, 0.55 ) }
    dend_0 { pt3dadd( -39.8824, 78.0876, 4.79291, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( -41.1233, 82.6591, 4.91725, 0.55 ) }
    dend_0 { pt3dadd( -41.4, 83.8129, 4.97072, 0.55 ) }
    dend_0 { pt3dadd( -42.1623, 87.1677, 5.15148, 0.55 ) }
    dend_0 { pt3dadd( -42.7177, 90.0977, 5.48414, 0.55 ) }
    dend_0 { pt3dadd( -43.0404, 92.1783, 5.80435, 0.55 ) }
    dend_0 { pt3dadd( -43.3106, 94.5475, 6.20947, 0.55 ) }
    dend_0 { pt3dadd( -43.6299, 97.2328, 6.67588, 0.83 ) }
    dend_0 { pt3dadd( -44.175, 100.202, 7.18662, 0.55 ) }
    dend_0 { pt3dadd( -45.081, 103.489, 7.74541, 0.55 ) }
    dend_0 { pt3dadd( -45.8359, 105.463, 8.09576, 0.55 ) }
    dend_0 { pt3dadd( -46.9309, 107.724, 8.53044, 0.55 ) }
    dend_0 { pt3dadd( -48.2953, 110.234, 8.97677, 0.55 ) }
    dend_0 { pt3dadd( -49.7716, 112.701, 9.31551, 0.55 ) }
    dend_0 { pt3dadd( -51.1181, 114.831, 9.68469, 0.55 ) }
    dend_0 { pt3dadd( -52.3964, 116.749, 10.0332, 0.55 ) }
    dend_0 { pt3dadd( -53.6966, 118.682, 10.5139, 0.55 ) }
    dend_0 { pt3dadd( -54.5201, 119.994, 10.9381, 0.55 ) }
    dend_0 { pt3dadd( -55.8623, 122.403, 11.8349, 0.55 ) }
    dend_0 { pt3dadd( -56.9102, 124.683, 12.709, 0.55 ) }
    dend_0 { pt3dadd( -57.8338, 127.114, 13.6507, 0.55 ) }
    dend_0 { pt3dadd( -58.3225, 128.529, 14.1789, 0.83 ) }
    dend_0 { pt3dadd( -59.1932, 131.229, 15.1251, 0.55 ) }
    dend_0 { pt3dadd( -59.3937, 132.01, 15.4147, 0.55 ) }
    dend_0 { pt3dadd( -59.7659, 133.721, 16.123, 0.55 ) }
    dend_0 { pt3dadd( -60.3963, 136.152, 17.1398, 0.55 ) }
    dend_0 { pt3dadd( -60.8819, 137.765, 17.9476, 0.55 ) }
    dend_0 { pt3dadd( -61.3912, 139.403, 18.8479, 0.55 ) }
    dend_0 { pt3dadd( -62.352, 142.141, 20.4929, 0.55 ) }
    dend_0 { pt3dadd( -63.67, 145.447, 22.6011, 0.55 ) }
    dend_0 { pt3dadd( -64.5186, 147.402, 23.9835, 0.55 ) }
    dend_0 { pt3dadd( -66.2159, 151.272, 26.8439, 0.55 ) }
    dend_0 { pt3dadd( -67.1168, 153.552, 28.4423, 0.55 ) }
    dend_0 { pt3dadd( -68.0013, 156.362, 30.1511, 0.55 ) }
    dend_0 { pt3dadd( -68.3354, 157.752, 30.7984, 0.55 ) }
    dend_0 { pt3dadd( -68.6765, 160.856, 31.8285, 0.55 ) }
    dend_0 { pt3dadd( -68.7697, 162.375, 32.1722, 0.55 ) }
    dend_0 { pt3dadd( -69.0085, 165.966, 32.5836, 0.55 ) }
    dend_0 { pt3dadd( -69.3039, 170.193, 32.8523, 0.55 ) }
    dend_0 { pt3dadd( -69.3866, 173.163, 32.8531, 0.55 ) }
    dend_0 { pt3dadd( -69.3745, 175.093, 32.8212, 0.55 ) }
    dend_0 { pt3dadd( -69.2538, 178.725, 32.5443, 0.55 ) }
    dend_0 { pt3dadd( -69.1332, 182.152, 32.2406, 0.55 ) }
    dend_0 { pt3dadd( -68.989, 185.513, 31.9251, 0.55 ) }
    dend_0 { pt3dadd( -68.7698, 188.773, 31.4954, 0.55 ) }
    dend_0 { pt3dadd( -68.4514, 192.07, 30.9975, 0.55 ) }
    dend_0 { pt3dadd( -67.9055, 196.076, 30.2941, 0.28 ) }
    dend_0 { pt3dadd( -67.5088, 197.678, 29.9417, 0.28 ) }
    dend_0 { pt3dadd( -67.0351, 199.185, 29.5044, 0.28 ) }
    dend_0 { pt3dadd( -70.8468, 208.002, 30.6539, 0.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.1522, -0.281255, 0.015825, 0.611965 ) }
    axon_0 { pt3dadd( 25.1093, 0.852455, 0.015825, 0.611965 ) }
    axon_0 { pt3dadd( 40.0664, 1.98617, 0.015825, 0.611965 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 52/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.69401, 9.74918, -19.0822, 0.83 ) }
    dend_46 { pt3dadd( 3.20198, 12.8634, -18.9458, 0.83 ) }
    dend_46 { pt3dadd( 3.73301, 14.0847, -19.2002, 1.38 ) }
    dend_46 { pt3dadd( 4.46848, 16.0013, -19.9569, 0.83 ) }
    dend_46 { pt3dadd( 4.8839, 17.6422, -20.7323, 0.83 ) }
    dend_46 { pt3dadd( 5.29888, 20.0873, -22.0026, 0.83 ) }
    dend_46 { pt3dadd( 5.51796, 22.0074, -23.0527, 0.83 ) }
    dend_46 { pt3dadd( 5.74422, 25.5873, -25.0785, 1.11 ) }
    dend_46 { pt3dadd( 5.75204, 27.5756, -26.3024, 0.83 ) }
    dend_46 { pt3dadd( 5.67963, 30.7493, -28.35, 0.83 ) }
    dend_46 { pt3dadd( 5.62828, 32.6873, -29.6117, 0.83 ) }
    dend_46 { pt3dadd( 5.54443, 34.1617, -30.5024, 0.55 ) }
    dend_46 { pt3dadd( 5.52061, 34.9898, -30.8867, 0.55 ) }
    dend_46 { pt3dadd( 5.68554, 36.9854, -31.5448, 0.55 ) }
    dend_46 { pt3dadd( 6.04185, 38.77, -32.0485, 0.55 ) }
    dend_46 { pt3dadd( 6.48287, 40.1921, -32.4397, 0.55 ) }
    dend_46 { pt3dadd( 7.16854, 42.1763, -32.9569, 0.55 ) }
    dend_46 { pt3dadd( 7.98768, 44.4698, -33.633, 0.55 ) }
    dend_46 { pt3dadd( 8.99776, 47.3989, -34.5712, 0.55 ) }
    dend_46 { pt3dadd( 10.0067, 50.2886, -35.5453, 0.55 ) }
    dend_46 { pt3dadd( 10.585, 52.0281, -36.1752, 0.83 ) }
    dend_46 { pt3dadd( 11.141, 53.5881, -36.7977, 0.83 ) }
    dend_46 { pt3dadd( 11.8569, 55.4423, -37.6137, 0.55 ) }
    dend_46 { pt3dadd( 12.4342, 57.177, -38.41, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 76/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.69401, 9.74918, -19.0822, 0.55 ) }
    dend_45 { pt3dadd( 4.65142, 9.86299, -18.7547, 0.55 ) }
    dend_45 { pt3dadd( 9.32476, 10.0428, -18.2373, 1.11 ) }
    dend_45 { pt3dadd( 12.8175, 10.1772, -17.8506, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 9.1922, -4.91519, 13.0236, 0.55 ) }
    dend_39 { pt3dadd( 11.3457, -3.02078, 15.2239, 0.55 ) }
    dend_39 { pt3dadd( 12.7996, -2.21607, 16.7643, 0.55 ) }
    dend_39 { pt3dadd( 14.9764, -1.73554, 19.4211, 0.55 ) }
    dend_39 { pt3dadd( 17.1482, -1.4505, 22.3921, 0.55 ) }
    dend_39 { pt3dadd( 18.571, -1.46287, 24.3937, 0.55 ) }
    dend_39 { pt3dadd( 20.77, -1.62117, 27.5453, 0.55 ) }
    dend_39 { pt3dadd( 22.4827, -1.76958, 30.2466, 0.55 ) }
    dend_39 { pt3dadd( 24.905, -2.01109, 34.1404, 0.55 ) }
    dend_39 { pt3dadd( 26.4833, -2.30386, 36.6446, 0.55 ) }
    dend_39 { pt3dadd( 28.4271, -2.66389, 39.455, 0.55 ) }
    dend_39 { pt3dadd( 29.9124, -2.72195, 41.4486, 0.55 ) }
    dend_39 { pt3dadd( 32.0884, -2.38198, 43.9346, 0.55 ) }
    dend_39 { pt3dadd( 34.9573, -1.68965, 46.6516, 0.55 ) }
    dend_39 { pt3dadd( 36.8648, -1.15245, 48.127, 0.55 ) }
    dend_39 { pt3dadd( 39.5644, -0.352404, 49.9141, 0.55 ) }
    dend_39 { pt3dadd( 42.8002, 0.578034, 51.6939, 0.55 ) }
    dend_39 { pt3dadd( 45.2333, 1.17677, 52.8111, 0.55 ) }
    dend_39 { pt3dadd( 47.1366, 1.61925, 53.5797, 0.55 ) }
    dend_39 { pt3dadd( 48.4136, 1.99736, 54.0186, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 51.9832, 3.45286, 55.2156, 0.55 ) }
    dend_39 { pt3dadd( 54.7493, 4.72128, 55.9821, 0.55 ) }
    dend_39 { pt3dadd( 57.3557, 6.06869, 56.5302, 0.55 ) }
    dend_39 { pt3dadd( 59.0076, 7.12022, 56.8199, 0.55 ) }
    dend_39 { pt3dadd( 60.9826, 8.53948, 57.2786, 0.55 ) }
    dend_39 { pt3dadd( 63.1843, 10.2247, 57.7496, 0.55 ) }
    dend_39 { pt3dadd( 66.4843, 13.1734, 58.3615, 0.55 ) }
    dend_39 { pt3dadd( 68.8021, 15.4765, 58.848, 0.55 ) }
    dend_39 { pt3dadd( 71.0259, 17.6118, 59.2428, 0.55 ) }
    dend_39 { pt3dadd( 74.377, 20.4732, 59.858, 0.55 ) }
    dend_39 { pt3dadd( 85.6548, 26.6796, 65.3539, 0.55 ) }
    dend_39 { pt3dadd( 95.837, 35.4461, 69.2759, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 9.1922, -4.91519, 13.0236, 0.55 ) }
    dend_38 { pt3dadd( 3.31886, -6.71003, 15.0933, 0.55 ) }
    dend_38 { pt3dadd( -7.73874, -11.0446, 17.3874, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 15/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -66.0303, 56.076, -51.571, 0.55 ) }
    dend_36 { pt3dadd( -67.0801, 57.0163, -50.5361, 0.55 ) }
    dend_36 { pt3dadd( -68.2202, 58.0373, -49.4123, 0.28 ) }
    dend_36 { pt3dadd( -68.4263, 58.2219, -49.2091, 0.55 ) }
    dend_36 { pt3dadd( -70.9964, 60.5239, -46.6754, 0.28 ) }
    dend_36 { pt3dadd( -71.3159, 60.8101, -46.3605, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 21/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -66.0303, 56.076, -51.571, 0.28 ) }
    dend_35 { pt3dadd( -69.7144, 56.0061, -54.0934, 0.28 ) }
    dend_35 { pt3dadd( -70.4581, 55.9983, -54.5866, 0.55 ) }
    dend_35 { pt3dadd( -71.9361, 55.9593, -55.2985, 0.28 ) }
    dend_35 { pt3dadd( -72.5172, 55.944, -55.5785, 0.55 ) }
    dend_35 { pt3dadd( -74.889, 55.8813, -56.721, 0.28 ) }
    dend_35 { pt3dadd( -75.3895, 55.8681, -56.9621, 0.55 ) }
    dend_35 { pt3dadd( -76.9904, 55.8281, -57.3965, 0.28 ) }
    dend_35 { pt3dadd( -80.0228, 55.6376, -58.2122, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.7693, -10.2621, -1.56067, 1.11 ) }
    dend_31 { pt3dadd( 12.9522, -10.753, -3.80462, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 10.7693, -10.2621, -1.56067, 1.38 ) }
    dend_22 { pt3dadd( 11.4824, -13.5144, -2.17294, 1.38 ) }
    dend_22 { pt3dadd( 12.8436, -19.7223, -3.34159, 1.66 ) }
    dend_22 { pt3dadd( 13.386, -22.1958, -3.80725, 1.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.2327, -17.1824, 7.73054, 0.83 ) }
    dend_20 { pt3dadd( -13.7201, -20.2696, 7.40125, 0.83 ) }
    dend_20 { pt3dadd( -14.3531, -22.3235, 7.40439, 0.83 ) }
    dend_20 { pt3dadd( -14.9211, -24.3134, 7.52795, 0.83 ) }
    dend_20 { pt3dadd( -15.4681, -25.937, 7.72904, 0.83 ) }
    dend_20 { pt3dadd( -16.078, -27.6734, 8.04702, 0.83 ) }
    dend_20 { pt3dadd( -16.9536, -30.2361, 8.59443, 0.83 ) }
    dend_20 { pt3dadd( -18.2562, -34.07, 9.79796, 0.83 ) }
    dend_20 { pt3dadd( -18.8094, -35.712, 10.3676, 0.83 ) }
    dend_20 { pt3dadd( -19.6698, -38.3205, 11.1959, 0.83 ) }
    dend_20 { pt3dadd( -20.3168, -40.2931, 11.878, 0.83 ) }
    dend_20 { pt3dadd( -21.3648, -43.1715, 13.0182, 0.83 ) }
    dend_20 { pt3dadd( -22.0393, -44.8798, 13.7699, 0.83 ) }
    dend_20 { pt3dadd( -23.6686, -48.6417, 15.6778, 0.83 ) }
    dend_20 { pt3dadd( -24.8408, -51.5438, 17.3454, 0.83 ) }
    dend_20 { pt3dadd( -25.8123, -54.1415, 19.0587, 0.83 ) }
    dend_20 { pt3dadd( -26.6522, -56.3889, 20.6865, 0.83 ) }
    dend_20 { pt3dadd( -27.0955, -57.6463, 21.6696, 0.83 ) }
    dend_20 { pt3dadd( -27.7345, -59.6321, 23.2882, 0.83 ) }
    dend_20 { pt3dadd( -28.6591, -62.9663, 26.1576, 0.83 ) }
    dend_20 { pt3dadd( -29.0579, -64.8609, 27.7433, 0.83 ) }
    dend_20 { pt3dadd( -29.4092, -67.0378, 29.2442, 0.83 ) }
    dend_20 { pt3dadd( -29.559, -68.5088, 30.0956, 0.83 ) }
    dend_20 { pt3dadd( -29.6907, -70.3504, 31.002, 0.83 ) }
    dend_20 { pt3dadd( -29.7567, -73.2613, 32.1373, 0.55 ) }
    dend_20 { pt3dadd( -29.7428, -75.1523, 32.7901, 0.55 ) }
    dend_20 { pt3dadd( -29.6658, -78.1597, 33.6928, 0.55 ) }
    dend_20 { pt3dadd( -29.5844, -80.3929, 34.3305, 0.55 ) }
    dend_20 { pt3dadd( -29.5254, -82.3484, 34.8364, 0.55 ) }
    dend_20 { pt3dadd( -29.4524, -85.2592, 35.482, 0.55 ) }
    dend_20 { pt3dadd( -29.4814, -88.4783, 36.0996, 0.55 ) }
    dend_20 { pt3dadd( -29.5545, -91.1031, 36.5687, 0.55 ) }
    dend_20 { pt3dadd( -29.6555, -93.2853, 37.0147, 0.55 ) }
    dend_20 { pt3dadd( -29.7575, -94.9477, 37.3799, 0.55 ) }
    dend_20 { pt3dadd( -29.925, -96.4289, 37.7566, 0.55 ) }
    dend_20 { pt3dadd( -30.5646, -100.239, 38.8018, 0.55 ) }
    dend_20 { pt3dadd( -30.8474, -101.503, 39.1422, 0.55 ) }
    dend_20 { pt3dadd( -31.7861, -105.044, 40.2195, 0.55 ) }
    dend_20 { pt3dadd( -32.5877, -107.559, 40.9883, 0.55 ) }
    dend_20 { pt3dadd( -33.9477, -111.139, 42.1831, 0.55 ) }
    dend_20 { pt3dadd( -34.3372, -111.969, 42.475, 0.55 ) }
    dend_20 { pt3dadd( -35.571, -114.242, 43.2792, 0.55 ) }
    dend_20 { pt3dadd( -36.5035, -115.892, 43.8101, 0.55 ) }
    dend_20 { pt3dadd( -37.4556, -117.531, 44.2724, 0.55 ) }
    dend_20 { pt3dadd( -38.6932, -119.669, 44.8635, 0.55 ) }
    dend_20 { pt3dadd( -39.2559, -120.764, 45.1528, 0.55 ) }
    dend_20 { pt3dadd( -40.8883, -124.477, 46.0906, 0.55 ) }
    dend_20 { pt3dadd( -41.5532, -126.257, 46.5271, 0.55 ) }
    dend_20 { pt3dadd( -41.9105, -127.632, 46.8153, 0.55 ) }
    dend_20 { pt3dadd( -42.1495, -129.031, 47.1223, 0.55 ) }
    dend_20 { pt3dadd( -42.3335, -130.756, 47.4256, 0.28 ) }
    dend_20 { pt3dadd( -42.5743, -133.054, 47.6269, 0.28 ) }
    dend_20 { pt3dadd( -42.7388, -134.538, 47.626, 0.28 ) }
    dend_20 { pt3dadd( -43.1971, -138.167, 47.2783, 0.55 ) }
    dend_20 { pt3dadd( -43.5599, -141.317, 46.8779, 0.28 ) }
    dend_20 { pt3dadd( -43.8978, -144.103, 46.4239, 0.55 ) }
    dend_20 { pt3dadd( -44.5432, -148.719, 45.3645, 0.28 ) }
    dend_20 { pt3dadd( -44.8548, -150.288, 44.862, 0.28 ) }
    dend_20 { pt3dadd( -45.6045, -153.09, 43.6221, 0.28 ) }
    dend_20 { pt3dadd( -46.2257, -160.634, 44.4548, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.2327, -17.1824, 7.73054, 0.55 ) }
    dend_11 { pt3dadd( -13.0658, -16.9126, 8.516, 0.55 ) }
    dend_11 { pt3dadd( -13.839, -16.662, 9.24512, 0.55 ) }
    dend_11 { pt3dadd( -14.5605, -16.4283, 9.92535, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( -15.3743, -16.1647, 10.6927, 0.55 ) }
    dend_11 { pt3dadd( -16.9549, -15.6526, 12.1831, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 2/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -17.0567, -10.6129, -6.15436, 1.11 ) }
    dend_7 { pt3dadd( -18.7995, -14.1512, -6.61399, 1.11 ) }
    dend_7 { pt3dadd( -21.5936, -19.8238, -7.35088, 0.83 ) }
    dend_7 { pt3dadd( -22.8282, -22.3302, -7.67645, 0.83 ) }
    dend_7 { pt3dadd( -24.6021, -25.9315, -8.14427, 0.83 ) }
    dend_7 { pt3dadd( -26.0565, -28.8843, -8.52785, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.0567, -10.6129, -6.15436, 1.38 ) }
    dend_2 { pt3dadd( -17.8236, -10.1028, -5.93526, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 10/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.0664, 1.98617, 0.015825, 0.55 ) }
    axon_1 { pt3dadd( 55.0235, 3.11988, 0.015825, 0.55 ) }
    axon_1 { pt3dadd( 69.9806, 4.25359, 0.015825, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 12.4342, 57.177, -38.41, 0.55 ) }
    dend_48 { pt3dadd( 12.2437, 58.6986, -40.2709, 0.55 ) }
    dend_48 { pt3dadd( 12.1794, 59.8771, -41.6253, 0.55 ) }
    dend_48 { pt3dadd( 12.0645, 61.6631, -43.4477, 0.55 ) }
    dend_48 { pt3dadd( 11.9155, 64.462, -46.0905, 0.55 ) }
    dend_48 { pt3dadd( 11.7445, 66.8835, -48.1073, 0.55 ) }
    dend_48 { pt3dadd( 11.6456, 69.6406, -50.2141, 0.28 ) }
    dend_48 { pt3dadd( 11.6564, 70.9583, -51.1776, 0.55 ) }
    dend_48 { pt3dadd( 11.7188, 73.4312, -52.9125, 0.55 ) }
    dend_48 { pt3dadd( 11.7198, 75.9635, -54.5001, 0.55 ) }
    dend_48 { pt3dadd( 11.6792, 78.7091, -56.0097, 0.55 ) }
    dend_48 { pt3dadd( 11.6332, 82.6389, -58.0059, 0.55 ) }
    dend_48 { pt3dadd( 11.5363, 85.2705, -59.2475, 0.55 ) }
    dend_48 { pt3dadd( 11.3586, 87.1856, -60.3233, 0.55 ) }
    dend_48 { pt3dadd( 11.1288, 88.5236, -61.2524, 0.28 ) }
    dend_48 { pt3dadd( 10.9542, 89.2875, -61.9209, 0.55 ) }
    dend_48 { pt3dadd( 10.6311, 90.4627, -63.0777, 0.28 ) }
    dend_48 { pt3dadd( 10.1977, 91.6306, -64.3162, 0.55 ) }
    dend_48 { pt3dadd( 8.54838, 95.8145, -69.0657, 0.83 ) }
    dend_48 { pt3dadd( 7.38589, 98.5684, -72.5059, 0.28 ) }
    dend_48 { pt3dadd( 6.51766, 100.714, -75.4794, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 12.4342, 57.177, -38.41, 0.55 ) }
    dend_47 { pt3dadd( 13.5259, 58.9396, -39.3221, 0.55 ) }
    dend_47 { pt3dadd( 15.2775, 61.5107, -41.1295, 0.55 ) }
    dend_47 { pt3dadd( 16.4425, 63.0734, -42.4549, 0.55 ) }
    dend_47 { pt3dadd( 17.7519, 64.7283, -43.9867, 0.55 ) }
    dend_47 { pt3dadd( 18.5317, 65.6394, -44.8764, 0.55 ) }
    dend_47 { pt3dadd( 19.3236, 66.534, -45.765, 0.55 ) }
    dend_47 { pt3dadd( 21.4605, 68.762, -48.2158, 0.55 ) }
    dend_47 { pt3dadd( 22.5685, 69.9106, -49.4828, 0.28 ) }
    dend_47 { pt3dadd( 23.0225, 70.3822, -49.9635, 0.55 ) }
    dend_47 { pt3dadd( 24.6786, 72.0336, -51.5279, 0.28 ) }
    dend_47 { pt3dadd( 25.1987, 72.6277, -52.0003, 0.55 ) }
    dend_47 { pt3dadd( 26.7415, 74.6623, -53.2291, 0.28 ) }
    dend_47 { pt3dadd( 27.5202, 75.8609, -53.688, 0.55 ) }
    dend_47 { pt3dadd( 28.1009, 77.0087, -53.969, 0.28 ) }
    dend_47 { pt3dadd( 28.8142, 78.8286, -54.3581, 0.55 ) }
    dend_47 { pt3dadd( 29.4998, 81.1753, -54.7671, 0.55 ) }
    dend_47 { pt3dadd( 29.9685, 82.897, -55.0465, 0.55 ) }
    dend_47 { pt3dadd( 30.4419, 84.9246, -55.3294, 0.55 ) }
    dend_47 { pt3dadd( 31.197, 88.4071, -55.7994, 0.55 ) }
    dend_47 { pt3dadd( 31.759, 91.483, -56.1941, 0.55 ) }
    dend_47 { pt3dadd( 32.093, 93.6596, -56.4846, 0.55 ) }
    dend_47 { pt3dadd( 32.4836, 96.1955, -56.8888, 0.55 ) }
    dend_47 { pt3dadd( 32.6479, 97.532, -57.1524, 0.28 ) }
    dend_47 { pt3dadd( 32.706, 98.1438, -57.2914, 0.55 ) }
    dend_47 { pt3dadd( 32.904, 99.8228, -57.7443, 0.28 ) }
    dend_47 { pt3dadd( 33.0049, 100.917, -57.9845, 0.55 ) }
    dend_47 { pt3dadd( 33.1164, 102.003, -58.2269, 0.28 ) }
    dend_47 { pt3dadd( 33.2961, 103.862, -58.5367, 0.55 ) }
    dend_47 { pt3dadd( 33.614, 105.542, -58.7283, 0.28 ) }
    dend_47 { pt3dadd( 33.871, 106.459, -58.7713, 0.28 ) }
    dend_47 { pt3dadd( 34.5989, 108.02, -58.6241, 0.55 ) }
    dend_47 { pt3dadd( 35.6792, 110.012, -58.1699, 0.55 ) }
    dend_47 { pt3dadd( 36.3608, 111.278, -57.7653, 0.55 ) }
    dend_47 { pt3dadd( 37.1442, 112.469, -57.1663, 0.28 ) }
    dend_47 { pt3dadd( 37.6562, 113.233, -56.7257, 0.55 ) }
    dend_47 { pt3dadd( 39.2967, 115.486, -55.3034, 0.55 ) }
    dend_47 { pt3dadd( 40.7658, 117.347, -54.2165, 0.55 ) }
    dend_47 { pt3dadd( 42.4467, 119.465, -52.9737, 0.55 ) }
    dend_47 { pt3dadd( 45.3323, 123.116, -50.9292, 0.28 ) }
    dend_47 { pt3dadd( 46.8534, 125.13, -49.8041, 0.28 ) }
    dend_47 { pt3dadd( 47.8215, 126.409, -49.0889, 0.28 ) }
    dend_47 { pt3dadd( 50.0484, 129.219, -47.5917, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 95.837, 35.4461, 69.2759, 0.55 ) }
    dend_41 { pt3dadd( 104.03, 38.8744, 74.1586, 0.55 ) }
    dend_41 { pt3dadd( 111.664, 42.5903, 79.691, 0.55 ) }
    dend_41 { pt3dadd( 120.103, 46.3502, 83.8572, 0.55 ) }
    dend_41 { pt3dadd( 129.039, 48.0769, 88.3147, 0.55 ) }
    dend_41 { pt3dadd( 137.838, 48.6561, 93.3107, 0.55 ) }
    dend_41 { pt3dadd( 147.26, 48.1085, 97.002, 0.55 ) }
    dend_41 { pt3dadd( 156.554, 47.9876, 101.041, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 95.837, 35.4461, 69.2759, 0.55 ) }
    dend_40 { pt3dadd( 103.41, 39.0221, 74.174, 0.55 ) }
    dend_40 { pt3dadd( 109.44, 44.1823, 79.7535, 0.55 ) }
    dend_40 { pt3dadd( 114.217, 48.8641, 86.7808, 0.55 ) }
    dend_40 { pt3dadd( 118.415, 53.6777, 94.0833, 0.55 ) }
    dend_40 { pt3dadd( 123.579, 56.9995, 101.595, 0.55 ) }
    dend_40 { pt3dadd( 127.541, 61.7832, 109.048, 0.55 ) }
    dend_40 { pt3dadd( 132.765, 67.5058, 114.885, 0.55 ) }
    dend_40 { pt3dadd( 137.411, 73.2042, 121.216, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.9522, -10.753, -3.80462, 0.55 ) }
    dend_33 { pt3dadd( 17.0495, -11.3895, -4.77014, 0.55 ) }
    dend_33 { pt3dadd( 19.252, -11.8837, -5.64066, 0.55 ) }
    dend_33 { pt3dadd( 21.2698, -12.5663, -6.78166, 0.55 ) }
    dend_33 { pt3dadd( 22.3487, -13.0204, -7.5226, 0.55 ) }
    dend_33 { pt3dadd( 24.9195, -14.4513, -9.64966, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_33 { pt3dadd( 26.583, -15.3375, -11.2157, 0.55 ) }
    dend_33 { pt3dadd( 28.1999, -16.0818, -13.0967, 0.55 ) }
    dend_33 { pt3dadd( 29.7681, -16.7525, -15.0406, 0.55 ) }
    dend_33 { pt3dadd( 30.9383, -17.1823, -16.4898, 0.55 ) }
    dend_33 { pt3dadd( 32.8107, -17.8751, -18.6896, 0.55 ) }
    dend_33 { pt3dadd( 35.658, -18.786, -21.7107, 0.55 ) }
    dend_33 { pt3dadd( 37.9141, -19.3562, -23.6217, 0.55 ) }
    dend_33 { pt3dadd( 39.5233, -19.6349, -24.7523, 0.55 ) }
    dend_33 { pt3dadd( 41.1607, -19.8211, -25.7608, 0.55 ) }
    dend_33 { pt3dadd( 42.608, -19.954, -26.5412, 0.55 ) }
    dend_33 { pt3dadd( 44.5944, -20.1825, -27.523, 0.55 ) }
    dend_33 { pt3dadd( 47.3227, -20.8668, -28.7613, 0.55 ) }
    dend_33 { pt3dadd( 49.9324, -21.741, -30.059, 0.55 ) }
    dend_33 { pt3dadd( 50.7547, -22.0022, -30.5078, 0.55 ) }
    dend_33 { pt3dadd( 52.3905, -22.37, -31.4945, 0.55 ) }
    dend_33 { pt3dadd( 54.2132, -22.6452, -32.7753, 0.55 ) }
    dend_33 { pt3dadd( 55.3073, -22.7373, -33.7741, 0.55 ) }
    dend_33 { pt3dadd( 57.7272, -22.6634, -36.1718, 0.55 ) }
    dend_33 { pt3dadd( 59.0638, -22.5333, -37.5757, 0.55 ) }
    dend_33 { pt3dadd( 60.9695, -22.2275, -39.686, 0.55 ) }
    dend_33 { pt3dadd( 63.7565, -21.6099, -42.9237, 0.83 ) }
    dend_33 { pt3dadd( 66.8793, -20.8422, -46.596, 0.55 ) }
    dend_33 { pt3dadd( 68.3412, -20.4913, -48.3985, 0.55 ) }
    dend_33 { pt3dadd( 70.5062, -20.0477, -51.1194, 0.55 ) }
    dend_33 { pt3dadd( 72.7062, -19.7203, -53.8327, 0.55 ) }
    dend_33 { pt3dadd( 74.2867, -19.4773, -55.6933, 0.55 ) }
    dend_33 { pt3dadd( 75.0434, -19.3984, -56.5057, 0.55 ) }
    dend_33 { pt3dadd( 75.8091, -19.4505, -57.2224, 0.55 ) }
    dend_33 { pt3dadd( 76.7576, -19.644, -58.146, 0.55 ) }
    dend_33 { pt3dadd( 78.0315, -19.9367, -59.4033, 0.55 ) }
    dend_33 { pt3dadd( 79.7091, -20.2843, -61.0998, 0.55 ) }
    dend_33 { pt3dadd( 82.4399, -20.7374, -63.8628, 0.55 ) }
    dend_33 { pt3dadd( 85.0472, -21.0546, -66.5578, 0.55 ) }
    dend_33 { pt3dadd( 86.714, -21.2046, -68.3278, 0.55 ) }
    dend_33 { pt3dadd( 88.7338, -21.3389, -70.4613, 0.55 ) }
    dend_33 { pt3dadd( 90.7802, -21.3892, -72.6449, 0.55 ) }
    dend_33 { pt3dadd( 92.1229, -21.3067, -74.0475, 0.83 ) }
    dend_33 { pt3dadd( 94.0193, -20.9249, -76.1087, 0.55 ) }
    dend_33 { pt3dadd( 94.5649, -20.8015, -76.696, 0.55 ) }
    dend_33 { pt3dadd( 96.0157, -20.4715, -78.2799, 0.55 ) }
    dend_33 { pt3dadd( 97.974, -20.108, -80.5469, 0.55 ) }
    dend_33 { pt3dadd( 98.8496, -19.9645, -81.7395, 0.83 ) }
    dend_33 { pt3dadd( 101.705, -19.4546, -86.0088, 0.55 ) }
    dend_33 { pt3dadd( 102.97, -19.2794, -87.9555, 0.55 ) }
    dend_33 { pt3dadd( 105.227, -19.009, -91.3596, 0.28 ) }
    dend_33 { pt3dadd( 105.767, -18.9536, -92.1338, 0.55 ) }
    dend_33 { pt3dadd( 109.205, -18.7254, -96.7526, 0.55 ) }
    dend_33 { pt3dadd( 110.339, -18.6944, -98.1522, 0.55 ) }
    dend_33 { pt3dadd( 111.698, -18.7067, -99.5889, 0.28 ) }
    dend_33 { pt3dadd( 113.089, -18.8149, -100.974, 0.55 ) }
    dend_33 { pt3dadd( 114.682, -19.0975, -102.303, 0.28 ) }
    dend_33 { pt3dadd( 118.208, -19.9212, -104.874, 0.55 ) }
    dend_33 { pt3dadd( 119.805, -20.4045, -105.848, 0.28 ) }
    dend_33 { pt3dadd( 121.884, -21.1101, -107.128, 0.55 ) }
    dend_33 { pt3dadd( 123.719, -21.7587, -108.269, 0.28 ) }
    dend_33 { pt3dadd( 124.634, -22.087, -108.825, 0.55 ) }
    dend_33 { pt3dadd( 126.297, -22.6297, -109.761, 0.28 ) }
    dend_33 { pt3dadd( 127.74, -23.0781, -110.419, 0.55 ) }
    dend_33 { pt3dadd( 129.176, -23.5592, -111.096, 0.55 ) }
    dend_33 { pt3dadd( 130.377, -24.0006, -111.638, 0.55 ) }
    dend_33 { pt3dadd( 132.196, -24.7529, -112.377, 0.55 ) }
    dend_33 { pt3dadd( 133.091, -25.1576, -112.722, 0.55 ) }
    dend_33 { pt3dadd( 135.993, -26.508, -113.72, 0.28 ) }
    dend_33 { pt3dadd( 137.554, -27.1842, -114.219, 0.28 ) }
    dend_33 { pt3dadd( 138.43, -27.5144, -114.486, 0.55 ) }
    dend_33 { pt3dadd( 140.683, -28.2277, -115.239, 0.28 ) }
    dend_33 { pt3dadd( 141.665, -28.4877, -115.587, 0.28 ) }
    dend_33 { pt3dadd( 143.16, -28.6766, -116.247, 0.28 ) }
    dend_33 { pt3dadd( 145.25, -28.6858, -117.194, 0.28 ) }
    dend_33 { pt3dadd( 146.326, -28.5995, -117.741, 0.55 ) }
    dend_33 { pt3dadd( 147.745, -28.3865, -118.581, 0.28 ) }
    dend_33 { pt3dadd( 148.517, -28.1937, -119.143, 0.55 ) }
    dend_33 { pt3dadd( 151.516, -27.3984, -121.693, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.9522, -10.753, -3.80462, 0.83 ) }
    dend_32 { pt3dadd( 14.2267, -12.3197, -4.04022, 0.83 ) }
    dend_32 { pt3dadd( 16.4303, -14.876, -4.44334, 0.83 ) }
    dend_32 { pt3dadd( 17.9039, -16.5429, -4.69146, 0.83 ) }
    dend_32 { pt3dadd( 19.1447, -17.9967, -4.76235, 0.83 ) }
    dend_32 { pt3dadd( 20.8061, -19.9813, -4.71396, 0.83 ) }
    dend_32 { pt3dadd( 22.1351, -21.617, -4.63193, 0.83 ) }
    dend_32 { pt3dadd( 24.3273, -24.3708, -4.65299, 0.83 ) }
    dend_32 { pt3dadd( 25.9172, -26.3768, -4.813, 0.83 ) }
    dend_32 { pt3dadd( 27.8618, -28.9586, -5.16576, 0.55 ) }
    dend_32 { pt3dadd( 28.458, -29.7575, -5.30831, 0.55 ) }
    dend_32 { pt3dadd( 29.7399, -31.3501, -5.70111, 0.83 ) }
    dend_32 { pt3dadd( 32.2999, -34.5337, -6.51605, 0.83 ) }
    dend_32 { pt3dadd( 33.7345, -36.2237, -6.89613, 0.83 ) }
    dend_32 { pt3dadd( 34.8342, -37.3497, -7.04558, 0.55 ) }
    dend_32 { pt3dadd( 36.5337, -38.8264, -7.08595, 0.55 ) }
    dend_32 { pt3dadd( 38.8853, -40.5251, -6.71986, 0.55 ) }
    dend_32 { pt3dadd( 41.8895, -42.0617, -5.44084, 0.55 ) }
    dend_32 { pt3dadd( 44.0514, -42.7917, -4.04933, 0.55 ) }
    dend_32 { pt3dadd( 46.24, -43.2059, -2.48505, 0.55 ) }
    dend_32 { pt3dadd( 47.3938, -43.2801, -1.69297, 0.55 ) }
    dend_32 { pt3dadd( 49.7572, -43.21, -0.118093, 0.55 ) }
    dend_32 { pt3dadd( 51.7417, -43.0031, 1.16434, 0.55 ) }
    dend_32 { pt3dadd( 53.8298, -42.7065, 2.34377, 0.55 ) }
    dend_32 { pt3dadd( 56.278, -42.4352, 3.65871, 0.55 ) }
    dend_32 { pt3dadd( 58.1567, -42.2738, 4.69393, 0.55 ) }
    dend_32 { pt3dadd( 60.3549, -42.2863, 5.93763, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 61.8804, -42.5033, 6.88475, 0.28 ) }
    dend_32 { pt3dadd( 62.6019, -42.6705, 7.41201, 0.55 ) }
    dend_32 { pt3dadd( 63.6391, -42.9906, 8.35618, 0.55 ) }
    dend_32 { pt3dadd( 65.5919, -43.9933, 10.4909, 0.55 ) }
    dend_32 { pt3dadd( 66.8644, -44.8509, 11.9755, 0.55 ) }
    dend_32 { pt3dadd( 68.434, -46.2179, 13.6672, 0.55 ) }
    dend_32 { pt3dadd( 68.9562, -46.7437, 14.215, 0.55 ) }
    dend_32 { pt3dadd( 69.2383, -47.0488, 14.4861, 0.55 ) }
    dend_32 { pt3dadd( 70.8942, -48.9284, 15.8671, 0.55 ) }
    dend_32 { pt3dadd( 71.9373, -50.2629, 16.5676, 0.55 ) }
    dend_32 { pt3dadd( 73.9116, -52.8033, 17.6758, 0.55 ) }
    dend_32 { pt3dadd( 74.4492, -53.4632, 17.9125, 0.83 ) }
    dend_32 { pt3dadd( 75.7833, -55.0253, 18.3906, 0.55 ) }
    dend_32 { pt3dadd( 77.3371, -56.7582, 18.8667, 0.55 ) }
    dend_32 { pt3dadd( 79.4276, -59.1156, 19.5057, 0.55 ) }
    dend_32 { pt3dadd( 80.5043, -60.3483, 19.8196, 0.55 ) }
    dend_32 { pt3dadd( 81.1417, -61.0248, 19.987, 0.55 ) }
    dend_32 { pt3dadd( 83.2227, -63.1311, 20.5055, 0.55 ) }
    dend_32 { pt3dadd( 85.2893, -65.1621, 21.1253, 0.55 ) }
    dend_32 { pt3dadd( 87.3918, -67.19, 21.8616, 0.55 ) }
    dend_32 { pt3dadd( 88.0984, -67.8721, 22.1412, 0.55 ) }
    dend_32 { pt3dadd( 89.4041, -69.2215, 22.7161, 0.55 ) }
    dend_32 { pt3dadd( 89.9377, -69.8283, 22.9971, 0.55 ) }
    dend_32 { pt3dadd( 91.6042, -71.9212, 23.9922, 0.55 ) }
    dend_32 { pt3dadd( 91.7756, -72.148, 24.0982, 0.83 ) }
    dend_32 { pt3dadd( 92.8554, -73.6619, 24.7499, 0.55 ) }
    dend_32 { pt3dadd( 93.3286, -74.4553, 25.0515, 0.83 ) }
    dend_32 { pt3dadd( 94.166, -76.1892, 25.5965, 0.55 ) }
    dend_32 { pt3dadd( 95.2243, -78.8219, 25.9299, 0.55 ) }
    dend_32 { pt3dadd( 95.4484, -79.478, 25.8963, 0.83 ) }
    dend_32 { pt3dadd( 96.2544, -82.0264, 25.5221, 0.55 ) }
    dend_32 { pt3dadd( 96.8577, -84.1424, 25.0721, 0.55 ) }
    dend_32 { pt3dadd( 97.2349, -85.6607, 24.6404, 0.83 ) }
    dend_32 { pt3dadd( 98.084, -90.1212, 22.8851, 0.55 ) }
    dend_32 { pt3dadd( 98.3166, -91.9099, 21.973, 0.55 ) }
    dend_32 { pt3dadd( 98.4452, -93.0816, 21.2603, 0.83 ) }
    dend_32 { pt3dadd( 104.098, -98.9071, 23.9246, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 37/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.386, -22.1958, -3.80725, 1.11 ) }
    dend_26 { pt3dadd( 13.0635, -24.4368, -3.64288, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.386, -22.1958, -3.80725, 0.55 ) }
    dend_23 { pt3dadd( 14.0451, -22.7359, -5.23138, 0.55 ) }
    dend_23 { pt3dadd( 16.1015, -24.1589, -9.61201, 0.55 ) }
    dend_23 { pt3dadd( 16.9273, -24.7779, -11.281, 0.55 ) }
    dend_23 { pt3dadd( 18.3898, -25.7418, -14.0124, 0.55 ) }
    dend_23 { pt3dadd( 20.2408, -26.75, -17.5353, 0.55 ) }
    dend_23 { pt3dadd( 22.6682, -27.7009, -22.3603, 0.83 ) }
    dend_23 { pt3dadd( 25.0937, -28.1479, -27.0251, 0.55 ) }
    dend_23 { pt3dadd( 26.4796, -28.0609, -29.6314, 0.55 ) }
    dend_23 { pt3dadd( 27.7247, -27.6687, -32.1023, 0.55 ) }
    dend_23 { pt3dadd( 29.4317, -26.7341, -35.6756, 0.55 ) }
    dend_23 { pt3dadd( 31.9775, -24.7302, -41.0061, 0.55 ) }
    dend_23 { pt3dadd( 33.1379, -23.6569, -43.3323, 0.55 ) }
    dend_23 { pt3dadd( 35.0442, -21.7254, -46.8219, 0.28 ) }
    dend_23 { pt3dadd( 35.8397, -20.9616, -48.1986, 0.55 ) }
    dend_23 { pt3dadd( 38.324, -19.0428, -52.1233, 0.28 ) }
    dend_23 { pt3dadd( 39.191, -18.5211, -53.2438, 0.55 ) }
    dend_23 { pt3dadd( 40.3958, -17.8413, -54.6338, 0.28 ) }
    dend_23 { pt3dadd( 41.5024, -17.3075, -55.9713, 0.55 ) }
    dend_23 { pt3dadd( 44.0654, -16.1883, -58.7202, 0.28 ) }
    dend_23 { pt3dadd( 44.5321, -15.9686, -59.2438, 0.28 ) }
    dend_23 { pt3dadd( 45.4529, -15.4998, -60.2647, 0.28 ) }
    dend_23 { pt3dadd( 46.4116, -15.0145, -61.4356, 0.55 ) }
    dend_23 { pt3dadd( 48.7555, -13.798, -64.5868, 0.28 ) }
    dend_23 { pt3dadd( 49.4701, -13.4048, -65.5902, 0.55 ) }
    dend_23 { pt3dadd( 51.1202, -12.4112, -67.8649, 0.55 ) }
    dend_23 { pt3dadd( 52.2786, -11.7041, -69.5222, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -16.9549, -15.6526, 12.1831, 0.55 ) }
    dend_13 { pt3dadd( -19.0721, -14.9321, 15.0487, 0.55 ) }
    dend_13 { pt3dadd( -19.862, -14.6632, 16.1178, 0.55 ) }
    dend_13 { pt3dadd( -20.921, -14.3028, 17.5513, 0.55 ) }
    dend_13 { pt3dadd( -22.2337, -13.8561, 19.328, 0.55 ) }
    dend_13 { pt3dadd( -23.3405, -13.4794, 20.8262, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.9549, -15.6526, 12.1831, 0.55 ) }
    dend_12 { pt3dadd( -18.0253, -19.0306, 14.5161, 0.55 ) }
    dend_12 { pt3dadd( -18.7813, -21.8557, 16.2763, 0.55 ) }
    dend_12 { pt3dadd( -19.5947, -24.6712, 18.0373, 0.55 ) }
    dend_12 { pt3dadd( -22.5143, -34.1343, 24.4294, 0.55 ) }
    dend_12 { pt3dadd( -23.8979, -39.0708, 28.019, 0.55 ) }
    dend_12 { pt3dadd( -24.8322, -42.8013, 30.8437, 0.55 ) }
    dend_12 { pt3dadd( -25.5479, -46.0369, 33.5483, 0.55 ) }
    dend_12 { pt3dadd( -26.0442, -48.9447, 36.2307, 0.55 ) }
    dend_12 { pt3dadd( -26.3867, -53.5451, 40.7252, 0.55 ) }
    dend_12 { pt3dadd( -26.4015, -57.8885, 45.3712, 0.55 ) }
    dend_12 { pt3dadd( -26.4108, -58.9583, 46.6816, 0.55 ) }
    dend_12 { pt3dadd( -26.3374, -61.4, 49.8763, 0.55 ) }
    dend_12 { pt3dadd( -26.2246, -62.7057, 51.5308, 0.55 ) }
    dend_12 { pt3dadd( -25.9275, -65.1815, 54.2193, 0.55 ) }
    dend_12 { pt3dadd( -25.6256, -68.3779, 57.1555, 0.55 ) }
    dend_12 { pt3dadd( -25.6212, -71.6229, 59.619, 0.55 ) }
    dend_12 { pt3dadd( -25.6783, -74.3873, 61.5754, 0.28 ) }
    dend_12 { pt3dadd( -25.7334, -75.9856, 62.5885, 0.28 ) }
    dend_12 { pt3dadd( -25.7913, -78.4838, 64.0423, 0.55 ) }
    dend_12 { pt3dadd( -25.8479, -81.6348, 65.7749, 0.55 ) }
    dend_12 { pt3dadd( -25.8298, -87.0197, 68.438, 0.55 ) }
    dend_12 { pt3dadd( -25.8928, -91.9336, 70.7732, 0.28 ) }
    dend_12 { pt3dadd( -25.9752, -94.8376, 72.2573, 0.28 ) }
    dend_12 { pt3dadd( -26.1211, -98.3348, 74.07, 0.28 ) }
    dend_12 { pt3dadd( -28.4977, -110.737, 82.7132, 0.28 ) }
    dend_12 { pt3dadd( -29.419, -123.038, 91.7689, 0.28 ) }
    dend_12 { pt3dadd( -29.1327, -134.805, 101.548, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -28.6287, -148.003, 109.276, 0.28 ) }
    dend_12 { pt3dadd( -26.9761, -159.512, 119.225, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 2/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -26.0565, -28.8843, -8.52785, 0.83 ) }
    dend_9 { pt3dadd( -27.6461, -30.081, -7.99942, 0.83 ) }
    dend_9 { pt3dadd( -28.86, -30.8463, -7.58127, 0.83 ) }
    dend_9 { pt3dadd( -30.1789, -31.6647, -7.08532, 0.83 ) }
    dend_9 { pt3dadd( -32.7563, -33.0664, -5.95076, 0.83 ) }
    dend_9 { pt3dadd( -33.9062, -33.7037, -5.40326, 0.83 ) }
    dend_9 { pt3dadd( -37.0981, -35.3119, -3.77946, 0.83 ) }
    dend_9 { pt3dadd( -37.9125, -35.6512, -3.3592, 0.55 ) }
    dend_9 { pt3dadd( -39.0131, -36.0485, -2.73301, 0.83 ) }
    dend_9 { pt3dadd( -42.1418, -37.0815, -0.862164, 0.55 ) }
    dend_9 { pt3dadd( -43.9077, -37.5157, 0.202283, 0.55 ) }
    dend_9 { pt3dadd( -47.0564, -38.2441, 2.10442, 0.55 ) }
    dend_9 { pt3dadd( -48.3484, -38.5725, 2.86113, 0.55 ) }
    dend_9 { pt3dadd( -50.9519, -39.1989, 4.29878, 0.55 ) }
    dend_9 { pt3dadd( -52.3349, -39.5359, 5.00911, 0.55 ) }
    dend_9 { pt3dadd( -55.4389, -40.3941, 6.52678, 0.55 ) }
    dend_9 { pt3dadd( -57.4107, -40.9804, 7.52555, 0.55 ) }
    dend_9 { pt3dadd( -60.2294, -42.073, 9.01142, 0.55 ) }
    dend_9 { pt3dadd( -61.439, -42.655, 9.6778, 0.28 ) }
    dend_9 { pt3dadd( -62.5573, -43.2822, 10.2884, 0.55 ) }
    dend_9 { pt3dadd( -63.4017, -43.8401, 10.7844, 0.55 ) }
    dend_9 { pt3dadd( -64.6387, -44.8561, 11.5722, 0.55 ) }
    dend_9 { pt3dadd( -65.5183, -45.6957, 12.2463, 0.55 ) }
    dend_9 { pt3dadd( -66.7758, -46.9282, 13.3491, 0.55 ) }
    dend_9 { pt3dadd( -68.1166, -48.1883, 14.4983, 0.55 ) }
    dend_9 { pt3dadd( -68.9925, -49.0143, 15.2331, 0.55 ) }
    dend_9 { pt3dadd( -69.8982, -49.8819, 15.9479, 0.55 ) }
    dend_9 { pt3dadd( -71.8112, -51.8555, 17.4169, 0.55 ) }
    dend_9 { pt3dadd( -73.665, -53.8032, 18.8091, 0.28 ) }
    dend_9 { pt3dadd( -74.6393, -54.8545, 19.5009, 0.55 ) }
    dend_9 { pt3dadd( -76.0585, -56.3804, 20.3697, 0.55 ) }
    dend_9 { pt3dadd( -77.351, -57.6633, 21.1119, 0.55 ) }
    dend_9 { pt3dadd( -79.0231, -59.2159, 21.9671, 0.55 ) }
    dend_9 { pt3dadd( -79.9825, -60.0384, 22.3887, 0.55 ) }
    dend_9 { pt3dadd( -81.7022, -61.4233, 23.1543, 0.55 ) }
    dend_9 { pt3dadd( -83.0517, -62.4264, 23.8453, 0.55 ) }
    dend_9 { pt3dadd( -84.7449, -63.5116, 24.7798, 0.55 ) }
    dend_9 { pt3dadd( -86.7257, -64.6607, 25.9627, 0.55 ) }
    dend_9 { pt3dadd( -87.9363, -65.3509, 26.7141, 0.55 ) }
    dend_9 { pt3dadd( -90.0736, -66.6665, 28.1591, 0.55 ) }
    dend_9 { pt3dadd( -91.4479, -67.5587, 29.1339, 0.55 ) }
    dend_9 { pt3dadd( -93.0055, -68.6463, 30.2496, 0.28 ) }
    dend_9 { pt3dadd( -93.2202, -68.8165, 30.3866, 0.55 ) }
    dend_9 { pt3dadd( -94.5454, -69.943, 31.2151, 0.28 ) }
    dend_9 { pt3dadd( -94.8526, -70.2887, 31.4044, 0.55 ) }
    dend_9 { pt3dadd( -95.1842, -70.8075, 31.5433, 0.28 ) }
    dend_9 { pt3dadd( -95.392, -71.2173, 31.5891, 0.55 ) }
    dend_9 { pt3dadd( -96.0632, -73.0152, 31.7356, 0.28 ) }
    dend_9 { pt3dadd( -96.4745, -74.1122, 31.8629, 0.55 ) }
    dend_9 { pt3dadd( -96.8489, -75.166, 32.0474, 0.28 ) }
    dend_9 { pt3dadd( -97.0085, -75.5866, 32.1517, 0.55 ) }
    dend_9 { pt3dadd( -97.3444, -76.5342, 32.4826, 0.28 ) }
    dend_9 { pt3dadd( -97.5967, -77.2473, 32.7841, 0.55 ) }
    dend_9 { pt3dadd( -98.1388, -78.4751, 33.3482, 0.28 ) }
    dend_9 { pt3dadd( -98.4398, -79.0221, 33.6476, 0.55 ) }
    dend_9 { pt3dadd( -99.2148, -80.2483, 34.488, 0.55 ) }
    dend_9 { pt3dadd( -100.284, -81.7536, 35.7641, 0.28 ) }
    dend_9 { pt3dadd( -101.394, -83.1724, 37.0932, 0.28 ) }
    dend_9 { pt3dadd( -102.236, -84.2101, 38.1123, 0.28 ) }
    dend_9 { pt3dadd( -103.541, -85.8008, 39.8516, 0.28 ) }
    dend_9 { pt3dadd( -105.095, -87.7214, 42.1119, 0.28 ) }
    dend_9 { pt3dadd( -106.378, -89.4328, 44.2757, 0.28 ) }
    dend_9 { pt3dadd( -106.631, -89.7594, 44.722, 0.55 ) }
    dend_9 { pt3dadd( -106.892, -90.1329, 45.2579, 0.55 ) }
    dend_9 { pt3dadd( -107.657, -91.6034, 47.2924, 0.28 ) }
    dend_9 { pt3dadd( -107.901, -92.3199, 48.1373, 0.55 ) }
    dend_9 { pt3dadd( -108.328, -93.992, 50.3455, 0.28 ) }
    dend_9 { pt3dadd( -113.282, -98.0585, 55.0266, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -26.0565, -28.8843, -8.52785, 0.55 ) }
    dend_8 { pt3dadd( -25.271, -29.313, -11.1042, 0.55 ) }
    dend_8 { pt3dadd( -25.1001, -29.4197, -11.8919, 0.83 ) }
    dend_8 { pt3dadd( -24.7325, -30.0696, -13.3426, 0.55 ) }
    dend_8 { pt3dadd( -24.5244, -30.635, -14.2992, 0.83 ) }
    dend_8 { pt3dadd( -23.8651, -33.8715, -18.7854, 0.83 ) }
    dend_8 { pt3dadd( -23.567, -37.2558, -23.2923, 0.83 ) }
    dend_8 { pt3dadd( -23.7335, -39.8975, -26.2818, 1.11 ) }
    dend_8 { pt3dadd( -25.1346, -47.0682, -33.8712, 0.83 ) }
    dend_8 { pt3dadd( -25.5811, -48.94, -35.6315, 1.11 ) }
    dend_8 { pt3dadd( -26.4474, -51.9479, -38.0524, 0.55 ) }
    dend_8 { pt3dadd( -27.2059, -54.052, -39.4668, 0.55 ) }
    dend_8 { pt3dadd( -28.3399, -57.11, -41.4458, 0.55 ) }
    dend_8 { pt3dadd( -28.9636, -59.1906, -42.7409, 0.55 ) }
    dend_8 { pt3dadd( -30.3559, -64.962, -45.8335, 0.55 ) }
    dend_8 { pt3dadd( -30.6304, -67.1956, -46.9824, 0.55 ) }
    dend_8 { pt3dadd( -30.6638, -68.2237, -47.4897, 0.55 ) }
    dend_8 { pt3dadd( -30.5503, -74.1408, -50.1877, 0.55 ) }
    dend_8 { pt3dadd( -30.3819, -77.6878, -51.7559, 0.83 ) }
    dend_8 { pt3dadd( -29.9951, -84.0151, -54.3671, 0.55 ) }
    dend_8 { pt3dadd( -29.8947, -87.0586, -55.6111, 0.55 ) }
    dend_8 { pt3dadd( -29.7888, -91.3222, -57.4604, 0.83 ) }
    dend_8 { pt3dadd( -29.6889, -93.0643, -58.2038, 0.55 ) }
    dend_8 { pt3dadd( -29.6493, -94.1262, -58.6232, 0.83 ) }
    dend_8 { pt3dadd( -29.7107, -96.6876, -59.6935, 0.55 ) }
    dend_8 { pt3dadd( -29.9037, -99.9633, -61.0604, 0.83 ) }
    dend_8 { pt3dadd( -30.1776, -103.708, -62.3936, 0.83 ) }
    dend_8 { pt3dadd( -30.8538, -110.28, -64.7199, 0.83 ) }
    dend_8 { pt3dadd( -31.1512, -112.665, -65.6843, 0.55 ) }
    dend_8 { pt3dadd( -31.382, -114.316, -66.3926, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_8 { pt3dadd( -32.043, -117.941, -67.963, 0.55 ) }
    dend_8 { pt3dadd( -32.4341, -119.622, -68.6161, 0.83 ) }
    dend_8 { pt3dadd( -33.8552, -124.348, -70.2349, 0.55 ) }
    dend_8 { pt3dadd( -34.9121, -126.965, -71.1386, 0.55 ) }
    dend_8 { pt3dadd( -35.5805, -128.7, -71.8313, 0.28 ) }
    dend_8 { pt3dadd( -36.3386, -130.626, -72.6667, 0.55 ) }
    dend_8 { pt3dadd( -36.9456, -132.13, -73.4577, 0.28 ) }
    dend_8 { pt3dadd( -37.819, -134.633, -75.174, 0.55 ) }
    dend_8 { pt3dadd( -38.321, -136.235, -76.4518, 0.28 ) }
    dend_8 { pt3dadd( -38.9562, -138.537, -78.5934, 0.55 ) }
    dend_8 { pt3dadd( -39.7038, -141.005, -81.1374, 0.55 ) }
    dend_8 { pt3dadd( -40.5611, -143.488, -83.9601, 0.55 ) }
    dend_8 { pt3dadd( -41.9182, -146.925, -88.0277, 0.28 ) }
    dend_8 { pt3dadd( -42.4851, -148.038, -89.4095, 0.28 ) }
    dend_8 { pt3dadd( -44.298, -151.055, -93.2458, 0.55 ) }
    dend_8 { pt3dadd( -45.5457, -152.618, -95.359, 0.55 ) }
    dend_8 { pt3dadd( -46.8027, -153.929, -97.1348, 0.55 ) }
    dend_8 { pt3dadd( -48.0424, -155.062, -98.4713, 0.28 ) }
    dend_8 { pt3dadd( -49.9231, -156.589, -100.076, 0.55 ) }
    dend_8 { pt3dadd( -51.6173, -157.91, -101.389, 0.55 ) }
    dend_8 { pt3dadd( -53.38, -159.389, -102.634, 0.55 ) }
    dend_8 { pt3dadd( -56.1991, -162.112, -104.736, 0.55 ) }
    dend_8 { pt3dadd( -57.8486, -164.246, -106.305, 0.55 ) }
    dend_8 { pt3dadd( -58.4317, -165.244, -107.018, 0.28 ) }
    dend_8 { pt3dadd( -59.1047, -166.779, -107.952, 0.55 ) }
    dend_8 { pt3dadd( -60.1302, -169.561, -109.421, 0.28 ) }
    dend_8 { pt3dadd( -60.2527, -170.009, -109.628, 0.83 ) }
    dend_8 { pt3dadd( -61.8205, -176.011, -112.093, 0.55 ) }
    dend_8 { pt3dadd( -62.3081, -178.063, -112.835, 0.55 ) }
    dend_8 { pt3dadd( -62.7597, -180.101, -113.498, 0.28 ) }
    dend_8 { pt3dadd( -63.7535, -183.982, -114.561, 0.55 ) }
    dend_8 { pt3dadd( -64.5217, -186.53, -115.221, 0.83 ) }
    dend_8 { pt3dadd( -65.6717, -189.691, -116.015, 0.28 ) }
    dend_8 { pt3dadd( -66.6226, -191.667, -116.506, 0.83 ) }
    dend_8 { pt3dadd( -69.3446, -196.38, -117.976, 0.55 ) }
    dend_8 { pt3dadd( -71.1153, -199.009, -118.999, 0.55 ) }
    dend_8 { pt3dadd( -71.9128, -200.029, -119.469, 0.83 ) }
    dend_8 { pt3dadd( -74.5539, -202.619, -120.87, 0.55 ) }
    dend_8 { pt3dadd( -76.8705, -204.671, -122.119, 0.55 ) }
    dend_8 { pt3dadd( -80.1953, -207.166, -123.837, 0.28 ) }
    dend_8 { pt3dadd( -81.6603, -208.006, -124.538, 0.55 ) }
    dend_8 { pt3dadd( -83.46, -208.969, -125.432, 0.28 ) }
    dend_8 { pt3dadd( -88.6187, -211.45, -127.656, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 43/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.8236, -10.1028, -5.93526, 0.83 ) }
    dend_6 { pt3dadd( -22.0008, -7.32273, -7.52001, 0.83 ) }
    dend_6 { pt3dadd( -26.3724, -4.7452, -8.91696, 0.83 ) }
    dend_6 { pt3dadd( -28.0908, -3.74716, -9.33952, 0.83 ) }
    dend_6 { pt3dadd( -31.1909, -2.09551, -9.73844, 0.83 ) }
    dend_6 { pt3dadd( -33.2918, -1.06386, -9.8648, 0.83 ) }
    dend_6 { pt3dadd( -36.1561, 0.305804, -9.92578, 0.83 ) }
    dend_6 { pt3dadd( -38.9145, 1.63379, -9.83468, 0.83 ) }
    dend_6 { pt3dadd( -41.0262, 2.62297, -9.52793, 0.83 ) }
    dend_6 { pt3dadd( -44.5328, 4.18635, -8.92351, 0.83 ) }
    dend_6 { pt3dadd( -46.8865, 5.17902, -8.50759, 0.83 ) }
    dend_6 { pt3dadd( -48.8601, 5.94542, -8.19609, 0.83 ) }
    dend_6 { pt3dadd( -50.5563, 6.68158, -8.0889, 0.83 ) }
    dend_6 { pt3dadd( -51.1614, 6.93705, -8.19203, 0.83 ) }
    dend_6 { pt3dadd( -52.4573, 7.56218, -8.64076, 0.83 ) }
    dend_6 { pt3dadd( -53.5643, 8.22305, -9.15772, 0.83 ) }
    dend_6 { pt3dadd( -56.1837, 9.95401, -10.4378, 0.83 ) }
    dend_6 { pt3dadd( -59.8289, 12.5233, -12.1744, 0.83 ) }
    dend_6 { pt3dadd( -63.128, 15.0983, -13.6284, 0.55 ) }
    dend_6 { pt3dadd( -64.8956, 16.633, -14.3403, 0.83 ) }
    dend_6 { pt3dadd( -66.27, 17.8242, -14.7853, 0.55 ) }
    dend_6 { pt3dadd( -68.2236, 19.5052, -15.2613, 0.55 ) }
    dend_6 { pt3dadd( -69.6667, 20.5019, -15.5633, 0.55 ) }
    dend_6 { pt3dadd( -72.2968, 21.6158, -15.8472, 0.55 ) }
    dend_6 { pt3dadd( -73.6151, 21.8673, -15.9688, 0.55 ) }
    dend_6 { pt3dadd( -77.7006, 21.9653, -16.3462, 0.55 ) }
    dend_6 { pt3dadd( -81.1175, 21.6729, -16.6539, 0.55 ) }
    dend_6 { pt3dadd( -86.9997, 20.8014, -17.0722, 0.55 ) }
    dend_6 { pt3dadd( -91.3995, 20.0401, -17.2925, 0.55 ) }
    dend_6 { pt3dadd( -94.2092, 19.4989, -17.335, 0.55 ) }
    dend_6 { pt3dadd( -96.6176, 19.0609, -17.252, 0.55 ) }
    dend_6 { pt3dadd( -99.292, 18.6238, -16.919, 0.55 ) }
    dend_6 { pt3dadd( -102.001, 18.241, -16.2464, 0.55 ) }
    dend_6 { pt3dadd( -103.846, 18.3127, -15.438, 0.55 ) }
    dend_6 { pt3dadd( -105.873, 18.7008, -14.1129, 0.83 ) }
    dend_6 { pt3dadd( -107.27, 19.1359, -12.9859, 0.55 ) }
    dend_6 { pt3dadd( -108.975, 19.8399, -11.4795, 0.83 ) }
    dend_6 { pt3dadd( -109.854, 20.2817, -10.6812, 0.55 ) }
    dend_6 { pt3dadd( -112.308, 21.7, -8.59566, 0.83 ) }
    dend_6 { pt3dadd( -115.866, 23.8891, -6.17878, 0.28 ) }
    dend_6 { pt3dadd( -116.652, 24.4193, -5.73449, 0.55 ) }
    dend_6 { pt3dadd( -118.495, 25.7343, -5.07322, 0.55 ) }
    dend_6 { pt3dadd( -120.445, 27.1301, -4.59206, 0.55 ) }
    dend_6 { pt3dadd( -121.993, 28.1349, -4.32037, 0.55 ) }
    dend_6 { pt3dadd( -124.855, 29.9299, -4.04042, 0.55 ) }
    dend_6 { pt3dadd( -126.251, 30.8308, -4.03178, 0.55 ) }
    dend_6 { pt3dadd( -129.922, 33.0542, -4.02189, 0.55 ) }
    dend_6 { pt3dadd( -133.616, 35.112, -4.18039, 0.55 ) }
    dend_6 { pt3dadd( -135.78, 36.2116, -4.33687, 0.55 ) }
    dend_6 { pt3dadd( -137.369, 36.9605, -4.58941, 0.83 ) }
    dend_6 { pt3dadd( -139.687, 38.1016, -5.17873, 0.55 ) }
    dend_6 { pt3dadd( -141.484, 39.0438, -5.87926, 0.55 ) }
    dend_6 { pt3dadd( -143.455, 40.1944, -6.97391, 0.55 ) }
    dend_6 { pt3dadd( -145.904, 42.0069, -9.11464, 0.55 ) }
    dend_6 { pt3dadd( -147.943, 43.8387, -11.4836, 0.28 ) }
    dend_6 { pt3dadd( -148.728, 44.6476, -12.5645, 0.28 ) }
    dend_6 { pt3dadd( -149.907, 46.0766, -14.4449, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( -151.692, 48.7167, -17.8484, 0.28 ) }
    dend_6 { pt3dadd( -153.512, 51.8408, -21.7426, 0.28 ) }
    dend_6 { pt3dadd( -154.38, 53.5324, -23.8821, 0.55 ) }
    dend_6 { pt3dadd( -154.743, 54.2679, -24.7564, 0.28 ) }
    dend_6 { pt3dadd( -155.128, 54.9978, -25.6571, 0.55 ) }
    dend_6 { pt3dadd( -156.224, 57.0632, -28.1027, 0.28 ) }
    dend_6 { pt3dadd( -156.514, 57.7336, -28.9195, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 7/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -17.8236, -10.1028, -5.93526, 0.83 ) }
    dend_3 { pt3dadd( -18.6443, -8.73068, -7.74358, 0.83 ) }
    dend_3 { pt3dadd( -19.5905, -7.14868, -9.82855, 0.83 ) }
    dend_3 { pt3dadd( -20.404, -5.78857, -11.6211, 0.83 ) }
    dend_3 { pt3dadd( -21.9136, -3.26478, -14.9472, 0.83 ) }
    dend_3 { pt3dadd( -22.8691, -1.66732, -17.0526, 0.83 ) }
    dend_3 { pt3dadd( -24.2154, 0.583505, -20.019, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 14/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 13.0635, -24.4368, -3.64288, 0.83 ) }
    dend_30 { pt3dadd( 14.9445, -27.3942, -3.47939, 0.83 ) }
    dend_30 { pt3dadd( 16.3588, -29.4643, -3.41194, 0.83 ) }
    dend_30 { pt3dadd( 17.7002, -31.4983, -3.53689, 0.83 ) }
    dend_30 { pt3dadd( 18.3099, -32.4597, -3.65357, 0.83 ) }
    dend_30 { pt3dadd( 19.5352, -34.5288, -3.94732, 0.83 ) }
    dend_30 { pt3dadd( 20.0265, -35.484, -4.0975, 0.83 ) }
    dend_30 { pt3dadd( 21.046, -37.9418, -4.65622, 0.83 ) }
    dend_30 { pt3dadd( 21.9041, -40.5088, -4.98855, 0.83 ) }
    dend_30 { pt3dadd( 22.7227, -43.2428, -5.12359, 0.83 ) }
    dend_30 { pt3dadd( 23.398, -45.8521, -5.0415, 0.83 ) }
    dend_30 { pt3dadd( 24.2187, -49.4702, -4.71288, 0.83 ) }
    dend_30 { pt3dadd( 24.9599, -52.9609, -4.25977, 0.83 ) }
    dend_30 { pt3dadd( 26.3142, -59.6633, -3.11647, 0.83 ) }
    dend_30 { pt3dadd( 26.9871, -62.5572, -2.47954, 0.83 ) }
    dend_30 { pt3dadd( 27.4136, -64.2665, -2.07381, 0.55 ) }
    dend_30 { pt3dadd( 28.2901, -67.1737, -1.48192, 0.55 ) }
    dend_30 { pt3dadd( 28.9639, -68.9682, -1.1871, 0.83 ) }
    dend_30 { pt3dadd( 29.8596, -70.8609, -1.11364, 0.55 ) }
    dend_30 { pt3dadd( 31.4194, -73.6148, -1.65809, 0.55 ) }
    dend_30 { pt3dadd( 32.5601, -75.3048, -2.24603, 0.55 ) }
    dend_30 { pt3dadd( 34.7706, -78.0807, -3.65499, 0.55 ) }
    dend_30 { pt3dadd( 35.9809, -79.3849, -4.48075, 0.55 ) }
    dend_30 { pt3dadd( 38.4008, -81.7016, -6.09784, 0.55 ) }
    dend_30 { pt3dadd( 40.4027, -83.4575, -7.32755, 0.55 ) }
    dend_30 { pt3dadd( 42.7589, -85.3559, -8.5913, 0.55 ) }
    dend_30 { pt3dadd( 45.31, -87.2827, -9.64874, 0.28 ) }
    dend_30 { pt3dadd( 47.2139, -88.6672, -10.1997, 0.55 ) }
    dend_30 { pt3dadd( 49.1608, -90.0489, -10.6121, 0.55 ) }
    dend_30 { pt3dadd( 51.5756, -91.786, -10.8366, 0.55 ) }
    dend_30 { pt3dadd( 53.7188, -93.417, -10.844, 0.55 ) }
    dend_30 { pt3dadd( 56.0121, -95.2683, -10.654, 0.55 ) }
    dend_30 { pt3dadd( 57.9341, -96.8034, -10.4126, 0.55 ) }
    dend_30 { pt3dadd( 59.245, -97.8611, -10.292, 0.55 ) }
    dend_30 { pt3dadd( 61.4439, -99.5683, -9.9665, 0.55 ) }
    dend_30 { pt3dadd( 62.8919, -100.636, -9.59316, 0.55 ) }
    dend_30 { pt3dadd( 64.8403, -102.011, -8.85835, 0.55 ) }
    dend_30 { pt3dadd( 66.4537, -103.052, -8.06578, 0.55 ) }
    dend_30 { pt3dadd( 68.2354, -104.089, -7.05285, 0.28 ) }
    dend_30 { pt3dadd( 71.9832, -106.066, -4.7513, 0.55 ) }
    dend_30 { pt3dadd( 74.6307, -107.39, -3.02418, 0.55 ) }
    dend_30 { pt3dadd( 77.0378, -108.516, -1.40108, 0.55 ) }
    dend_30 { pt3dadd( 78.2834, -109.104, -0.528828, 0.55 ) }
    dend_30 { pt3dadd( 80.6974, -110.236, 1.16711, 0.55 ) }
    dend_30 { pt3dadd( 82.5682, -111.034, 2.40914, 0.28 ) }
    dend_30 { pt3dadd( 83.2445, -111.291, 2.73738, 0.55 ) }
    dend_30 { pt3dadd( 84.9573, -111.8, 3.42101, 0.28 ) }
    dend_30 { pt3dadd( 85.4977, -111.942, 3.6114, 0.55 ) }
    dend_30 { pt3dadd( 87.393, -112.383, 4.18266, 0.55 ) }
    dend_30 { pt3dadd( 88.8097, -112.653, 4.51835, 0.55 ) }
    dend_30 { pt3dadd( 90.6397, -112.965, 4.8614, 0.28 ) }
    dend_30 { pt3dadd( 91.7042, -113.097, 5.0689, 0.55 ) }
    dend_30 { pt3dadd( 93.5051, -113.318, 5.40447, 0.28 ) }
    dend_30 { pt3dadd( 94.8073, -113.476, 5.6594, 0.55 ) }
    dend_30 { pt3dadd( 97.1643, -113.723, 6.14198, 0.28 ) }
    dend_30 { pt3dadd( 99.3424, -114.008, 6.69348, 0.55 ) }
    dend_30 { pt3dadd( 102.517, -114.419, 7.62284, 0.28 ) }
    dend_30 { pt3dadd( 103.649, -114.546, 7.96255, 0.28 ) }
    dend_30 { pt3dadd( 105.003, -114.637, 8.38843, 0.28 ) }
    dend_30 { pt3dadd( 105.902, -114.714, 8.68473, 0.28 ) }
    dend_30 { pt3dadd( 108.182, -114.926, 9.53279, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.0635, -24.4368, -3.64288, 0.83 ) }
    dend_27 { pt3dadd( 12.6566, -27.0191, -4.24969, 0.83 ) }
    dend_27 { pt3dadd( 12.3397, -29.0561, -4.74011, 0.83 ) }
    dend_27 { pt3dadd( 12.0101, -31.7161, -5.35805, 0.83 ) }
    dend_27 { pt3dadd( 11.7183, -34.1887, -5.93171, 0.83 ) }
    dend_27 { pt3dadd( 11.1384, -39.0901, -7.11943, 0.83 ) }
    dend_27 { pt3dadd( 10.7739, -42.1899, -7.87097, 0.83 ) }
    dend_27 { pt3dadd( 10.5695, -44.2294, -8.36673, 0.83 ) }
    dend_27 { pt3dadd( 10.3095, -47.3828, -9.12132, 0.83 ) }
    dend_27 { pt3dadd( 9.96128, -51.8318, -10.1763, 0.83 ) }
    dend_27 { pt3dadd( 9.73848, -55.6993, -11.0611, 0.83 ) }
    dend_27 { pt3dadd( 9.58778, -58.0094, -11.5714, 0.83 ) }
    dend_27 { pt3dadd( 9.36285, -61.1869, -12.2545, 0.83 ) }
    dend_27 { pt3dadd( 9.14211, -63.7357, -12.7969, 0.83 ) }
    dend_27 { pt3dadd( 8.8818, -66.5242, -13.3603, 0.83 ) }
    dend_27 { pt3dadd( 8.70772, -69.1678, -13.836, 0.83 ) }
    dend_27 { pt3dadd( 8.57477, -71.8946, -14.2699, 0.83 ) }
    dend_27 { pt3dadd( 8.45768, -75.3267, -14.7882, 0.83 ) }
    dend_27 { pt3dadd( 8.29278, -78.2928, -15.2211, 0.83 ) }
    dend_27 { pt3dadd( 8.05709, -81.8076, -15.6002, 0.83 ) }
    dend_27 { pt3dadd( 7.72795, -86.4665, -15.9164, 0.83 ) }
    dend_27 { pt3dadd( 7.48362, -89.3837, -16.0387, 0.83 ) }
    dend_27 { pt3dadd( 7.25528, -91.7179, -16.0812, 0.83 ) }
    dend_27 { pt3dadd( 6.57129, -97.9655, -15.991, 0.83 ) }
    dend_27 { pt3dadd( 5.98747, -102.677, -15.7804, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_27 { pt3dadd( 5.70866, -104.516, -15.65, 0.83 ) }
    dend_27 { pt3dadd( 5.1311, -108.036, -15.3335, 0.83 ) }
    dend_27 { pt3dadd( 4.74238, -110.46, -15.108, 0.83 ) }
    dend_27 { pt3dadd( 4.32341, -113.237, -14.8211, 0.83 ) }
    dend_27 { pt3dadd( 3.97688, -115.841, -14.5772, 0.83 ) }
    dend_27 { pt3dadd( 3.45444, -119.167, -14.4335, 0.83 ) }
    dend_27 { pt3dadd( 2.78867, -122.911, -14.3878, 0.83 ) }
    dend_27 { pt3dadd( 2.52333, -124.449, -14.3936, 0.83 ) }
    dend_27 { pt3dadd( 2.02688, -127.494, -14.5277, 0.55 ) }
    dend_27 { pt3dadd( 1.65997, -130.2, -14.7442, 0.55 ) }
    dend_27 { pt3dadd( 1.50808, -132.046, -14.9272, 0.55 ) }
    dend_27 { pt3dadd( 1.39008, -134.355, -15.2055, 0.55 ) }
    dend_27 { pt3dadd( 1.29173, -137.086, -15.5206, 0.55 ) }
    dend_27 { pt3dadd( 1.28421, -139.985, -15.833, 0.55 ) }
    dend_27 { pt3dadd( 1.40006, -142.733, -16.1177, 0.55 ) }
    dend_27 { pt3dadd( 1.57729, -146.227, -16.2667, 0.55 ) }
    dend_27 { pt3dadd( 1.70003, -149.246, -16.3025, 0.55 ) }
    dend_27 { pt3dadd( 1.7807, -151.978, -16.2746, 0.55 ) }
    dend_27 { pt3dadd( 1.75539, -154.185, -16.1421, 0.55 ) }
    dend_27 { pt3dadd( 1.67863, -156.654, -15.8658, 0.55 ) }
    dend_27 { pt3dadd( 1.40697, -161.149, -15.2384, 0.55 ) }
    dend_27 { pt3dadd( 1.19182, -163.24, -14.9295, 0.55 ) }
    dend_27 { pt3dadd( 0.793349, -166.312, -14.4846, 0.55 ) }
    dend_27 { pt3dadd( 0.297758, -170.27, -13.9301, 0.55 ) }
    dend_27 { pt3dadd( -0.038362, -172.966, -13.536, 0.55 ) }
    dend_27 { pt3dadd( -0.601583, -177.111, -12.9737, 0.55 ) }
    dend_27 { pt3dadd( -1.2741, -182.111, -12.4258, 0.55 ) }
    dend_27 { pt3dadd( -1.53532, -183.92, -12.2226, 0.55 ) }
    dend_27 { pt3dadd( -1.92482, -186.807, -11.9187, 0.55 ) }
    dend_27 { pt3dadd( -2.22209, -189.885, -11.6662, 0.55 ) }
    dend_27 { pt3dadd( -2.44211, -193.039, -11.3906, 0.55 ) }
    dend_27 { pt3dadd( -2.53356, -196.405, -11.0649, 0.55 ) }
    dend_27 { pt3dadd( -2.54816, -198.323, -10.9235, 0.55 ) }
    dend_27 { pt3dadd( -2.59077, -201.407, -10.7844, 0.55 ) }
    dend_27 { pt3dadd( -2.65581, -204.362, -10.7179, 0.55 ) }
    dend_27 { pt3dadd( -2.68744, -207.586, -10.6896, 0.55 ) }
    dend_27 { pt3dadd( -2.65852, -209.158, -10.6763, 0.55 ) }
    dend_27 { pt3dadd( -2.6103, -213.211, -10.6759, 0.55 ) }
    dend_27 { pt3dadd( -2.65207, -218.338, -10.7618, 0.55 ) }
    dend_27 { pt3dadd( -2.76297, -221.649, -10.8563, 0.55 ) }
    dend_27 { pt3dadd( -2.81346, -223.265, -10.8996, 0.55 ) }
    dend_27 { pt3dadd( -2.87103, -225.02, -10.9406, 0.55 ) }
    dend_27 { pt3dadd( -2.9564, -226.786, -10.9969, 0.55 ) }
    dend_27 { pt3dadd( -3.05977, -228.558, -11.0403, 0.55 ) }
    dend_27 { pt3dadd( -3.32318, -232.087, -11.1887, 0.55 ) }
    dend_27 { pt3dadd( -3.73549, -237.338, -11.4442, 0.55 ) }
    dend_27 { pt3dadd( -3.82366, -238.564, -11.5005, 0.55 ) }
    dend_27 { pt3dadd( -4.06862, -241.805, -11.6357, 0.55 ) }
    dend_27 { pt3dadd( -4.17071, -243.523, -11.7004, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 49/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 52.2786, -11.7041, -69.5222, 0.55 ) }
    dend_25 { pt3dadd( 53.7146, -13.4074, -72.4447, 0.55 ) }
    dend_25 { pt3dadd( 55.0874, -14.8326, -74.9206, 0.55 ) }
    dend_25 { pt3dadd( 55.8689, -15.6335, -76.3973, 0.55 ) }
    dend_25 { pt3dadd( 58.3455, -18.0467, -80.9733, 0.55 ) }
    dend_25 { pt3dadd( 59.2803, -18.983, -82.7369, 0.55 ) }
    dend_25 { pt3dadd( 59.805, -19.4728, -83.684, 0.28 ) }
    dend_25 { pt3dadd( 62.1232, -21.3717, -87.6136, 0.83 ) }
    dend_25 { pt3dadd( 64.2184, -22.7183, -91.1537, 0.28 ) }
    dend_25 { pt3dadd( 64.6352, -22.907, -91.8436, 0.55 ) }
    dend_25 { pt3dadd( 66.4518, -23.4487, -94.6722, 0.28 ) }
    dend_25 { pt3dadd( 67.5222, -23.6464, -96.3303, 0.28 ) }
    dend_25 { pt3dadd( 68.6013, -23.7503, -97.9379, 0.83 ) }
    dend_25 { pt3dadd( 71.8049, -23.8656, -102.385, 0.28 ) }
    dend_25 { pt3dadd( 72.719, -23.8595, -103.555, 0.28 ) }
    dend_25 { pt3dadd( 75.4793, -23.8127, -107.119, 0.28 ) }
    dend_25 { pt3dadd( 75.7264, -23.8022, -107.43, 0.55 ) }
    dend_25 { pt3dadd( 77.7548, -23.8537, -110.083, 0.28 ) }
    dend_25 { pt3dadd( 79.3178, -24.01, -112.013, 0.28 ) }
    dend_25 { pt3dadd( 80.719, -24.2863, -113.542, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 52.2786, -11.7041, -69.5222, 0.28 ) }
    dend_24 { pt3dadd( 52.6022, -11.2433, -70.3399, 0.28 ) }
    dend_24 { pt3dadd( 52.854, -10.905, -71.2622, 0.55 ) }
    dend_24 { pt3dadd( 53.2515, -10.4756, -72.5614, 0.28 ) }
    dend_24 { pt3dadd( 53.3696, -10.3613, -72.9217, 0.55 ) }
    dend_24 { pt3dadd( 54.3938, -9.26082, -76.0631, 0.55 ) }
    dend_24 { pt3dadd( 55.5969, -7.86942, -79.8325, 0.28 ) }
    dend_24 { pt3dadd( 56.7891, -6.5297, -83.6336, 0.55 ) }
    dend_24 { pt3dadd( 57.2613, -6.0269, -85.132, 0.28 ) }
    dend_24 { pt3dadd( 57.9863, -5.29292, -87.3603, 0.28 ) }
    dend_24 { pt3dadd( 59.1827, -4.24552, -90.9273, 0.28 ) }
    dend_24 { pt3dadd( 59.5101, -3.97179, -91.8784, 0.28 ) }
    dend_24 { pt3dadd( 59.9181, -3.66101, -92.9705, 0.55 ) }
    dend_24 { pt3dadd( 60.7828, -3.00831, -95.2731, 0.28 ) }
    dend_24 { pt3dadd( 61.4087, -2.50446, -97.015, 0.55 ) }
    dend_24 { pt3dadd( 63.5876, -0.791166, -102.949, 0.28 ) }
    dend_24 { pt3dadd( 64.3364, -0.226923, -104.989, 0.28 ) }
    dend_24 { pt3dadd( 64.8836, 0.247224, -106.506, 0.55 ) }
    dend_24 { pt3dadd( 66.4212, 1.81306, -110.982, 0.28 ) }
    dend_24 { pt3dadd( 67.0467, 2.54526, -112.783, 0.28 ) }
    dend_24 { pt3dadd( 67.3958, 2.99404, -113.749, 0.55 ) }
    dend_24 { pt3dadd( 68.4354, 4.56248, -116.218, 0.28 ) }
    dend_24 { pt3dadd( 69.0993, 5.53022, -117.607, 0.28 ) }
    dend_24 { pt3dadd( 69.7319, 6.40796, -118.763, 0.55 ) }
    dend_24 { pt3dadd( 70.336, 7.22763, -119.548, 0.28 ) }
    dend_24 { pt3dadd( 70.4764, 7.40517, -119.714, 0.55 ) }
    dend_24 { pt3dadd( 71.9954, 9.31141, -121.208, 0.28 ) }
    dend_24 { pt3dadd( 72.6657, 10.1325, -121.682, 0.55 ) }
    dend_24 { pt3dadd( 74.0992, 11.7749, -122.537, 0.28 ) }
    dend_24 { pt3dadd( 75.1002, 12.9108, -123.032, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -23.3405, -13.4794, 20.8262, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_15 { pt3dadd( -26.5658, -12.8831, 26.6852, 0.28 ) }
    dend_15 { pt3dadd( -27.1202, -12.7806, 27.6924, 0.28 ) }
    dend_15 { pt3dadd( -27.5755, -12.6964, 28.5194, 0.55 ) }
    dend_15 { pt3dadd( -28.5204, -12.5217, 30.236, 0.28 ) }
    dend_15 { pt3dadd( -29.3097, -12.3758, 31.6698, 0.28 ) }
    dend_15 { pt3dadd( -29.9751, -12.2527, 32.8786, 0.55 ) }
    dend_15 { pt3dadd( -37.4979, -10.2884, 40.6802, 0.55 ) }
    dend_15 { pt3dadd( -43.9066, -6.75392, 48.9112, 0.55 ) }
    dend_15 { pt3dadd( -50.018, -2.34518, 56.9442, 0.55 ) }
    dend_15 { pt3dadd( -57.1656, 0.477014, 64.8349, 0.55 ) }
    dend_15 { pt3dadd( -63.2069, 4.43115, 73.1525, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 11/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -23.3405, -13.4794, 20.8262, 0.28 ) }
    dend_14 { pt3dadd( -23.6842, -13.3183, 21.8179, 0.28 ) }
    dend_14 { pt3dadd( -24.1672, -13.006, 23.0535, 0.28 ) }
    dend_14 { pt3dadd( -24.6917, -12.524, 24.3936, 0.83 ) }
    dend_14 { pt3dadd( -26.0703, -11.2571, 27.9158, 0.28 ) }
    dend_14 { pt3dadd( -26.4811, -10.8796, 28.9653, 0.28 ) }
    dend_14 { pt3dadd( -27.1697, -10.2467, 30.7249, 0.28 ) }
    dend_14 { pt3dadd( -27.6768, -9.85302, 31.8435, 0.28 ) }
    dend_14 { pt3dadd( -28.2444, -9.43226, 32.796, 0.55 ) }
    dend_14 { pt3dadd( -31.81, -6.64984, 39.9728, 0.55 ) }
    dend_14 { pt3dadd( -34.3398, -3.51889, 47.4401, 0.55 ) }
    dend_14 { pt3dadd( -36.6181, -1.62178, 55.3882, 0.55 ) }
    dend_14 { pt3dadd( -39.7186, -1.04235, 63.2631, 0.55 ) }
    dend_14 { pt3dadd( -44.105, -1.23859, 70.5214, 0.55 ) }
    dend_14 { pt3dadd( -48.5426, -1.44286, 77.7483, 0.55 ) }
    dend_14 { pt3dadd( -53.221, -1.06403, 84.8145, 0.55 ) }
    dend_14 { pt3dadd( -56.5887, -1.91579, 92.5537, 0.55 ) }
    dend_14 { pt3dadd( -58.8964, -3.48698, 100.564, 0.55 ) }
    dend_14 { pt3dadd( -60.9623, -4.19915, 108.761, 0.55 ) }
    dend_14 { pt3dadd( -61.7345, -5.0147, 117.17, 0.55 ) }
    dend_14 { pt3dadd( -61.6335, -4.59341, 125.642, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -24.2154, 0.583505, -20.019, 0.55 ) }
    dend_5 { pt3dadd( -28.9153, 3.55479, -22.4238, 0.55 ) }
    dend_5 { pt3dadd( -30.6714, 4.56811, -23.3737, 0.55 ) }
    dend_5 { pt3dadd( -32.3377, 5.33632, -24.4635, 0.55 ) }
    dend_5 { pt3dadd( -34.2133, 6.16964, -25.7465, 0.55 ) }
    dend_5 { pt3dadd( -37.4415, 7.52271, -28.3566, 0.55 ) }
    dend_5 { pt3dadd( -42.2425, 9.22998, -32.4349, 0.55 ) }
    dend_5 { pt3dadd( -42.9274, 9.39603, -33.1019, 0.55 ) }
    dend_5 { pt3dadd( -45.9703, 10.0122, -36.2494, 0.55 ) }
    dend_5 { pt3dadd( -48.5525, 10.456, -39.0711, 0.55 ) }
    dend_5 { pt3dadd( -52.4628, 10.9966, -43.5192, 0.55 ) }
    dend_5 { pt3dadd( -55.6207, 11.3033, -47.0246, 0.55 ) }
    dend_5 { pt3dadd( -58.324, 11.4579, -49.8684, 0.55 ) }
    dend_5 { pt3dadd( -60.389, 11.6376, -51.9168, 0.55 ) }
    dend_5 { pt3dadd( -66.2254, 12.205, -57.3238, 0.55 ) }
    dend_5 { pt3dadd( -67.3758, 12.2742, -58.345, 0.55 ) }
    dend_5 { pt3dadd( -69.2844, 12.4282, -59.8225, 0.55 ) }
    dend_5 { pt3dadd( -72.7856, 12.7468, -62.4024, 0.55 ) }
    dend_5 { pt3dadd( -75.1016, 13.0467, -64.1937, 0.28 ) }
    dend_5 { pt3dadd( -76.176, 13.2062, -65.1173, 0.55 ) }
    dend_5 { pt3dadd( -76.8581, 13.2954, -65.7232, 0.55 ) }
    dend_5 { pt3dadd( -78.6639, 13.576, -67.4308, 0.55 ) }
    dend_5 { pt3dadd( -81.5976, 14.0624, -70.4542, 0.55 ) }
    dend_5 { pt3dadd( -86.1679, 14.9943, -75.6813, 0.83 ) }
    dend_5 { pt3dadd( -88.7654, 15.5226, -78.5794, 0.55 ) }
    dend_5 { pt3dadd( -90.5375, 15.9657, -80.5018, 0.55 ) }
    dend_5 { pt3dadd( -92.8515, 16.576, -82.9765, 0.28 ) }
    dend_5 { pt3dadd( -96.2029, 17.3409, -86.3708, 0.55 ) }
    dend_5 { pt3dadd( -100.29, 18.1049, -90.0231, 0.83 ) }
    dend_5 { pt3dadd( -102.941, 18.3757, -91.8821, 0.55 ) }
    dend_5 { pt3dadd( -107.769, 18.7387, -94.6211, 0.28 ) }
    dend_5 { pt3dadd( -108.957, 18.7932, -95.0816, 0.55 ) }
    dend_5 { pt3dadd( -115.613, 18.6823, -95.9912, 0.28 ) }
    dend_5 { pt3dadd( -117.481, 18.6423, -95.7686, 0.28 ) }
    dend_5 { pt3dadd( -119.475, 18.6825, -95.2097, 0.83 ) }
    dend_5 { pt3dadd( -122.862, 19.2332, -94.1056, 0.28 ) }
    dend_5 { pt3dadd( -124.92, 19.8014, -93.3116, 0.55 ) }
    dend_5 { pt3dadd( -129.137, 21.6756, -91.7963, 0.28 ) }
    dend_5 { pt3dadd( -131.429, 22.9948, -91.0379, 0.28 ) }
    dend_5 { pt3dadd( -132.914, 23.937, -90.4754, 0.28 ) }
    dend_5 { pt3dadd( -135.535, 25.8104, -89.6341, 0.55 ) }
    dend_5 { pt3dadd( -137.439, 27.2677, -89.0237, 0.55 ) }
    dend_5 { pt3dadd( -139.934, 29.3287, -88.5528, 0.28 ) }
    dend_5 { pt3dadd( -142.038, 31.0854, -88.3825, 0.28 ) }
    dend_5 { pt3dadd( -143.578, 32.3176, -88.3288, 0.83 ) }
    dend_5 { pt3dadd( -149.469, 36.7124, -88.1701, 0.28 ) }
    dend_5 { pt3dadd( -151.407, 38.0692, -88.0956, 0.55 ) }
    dend_5 { pt3dadd( -156.157, 41.3496, -87.8575, 0.28 ) }
    dend_5 { pt3dadd( -158.551, 42.9685, -87.6542, 0.28 ) }
    dend_5 { pt3dadd( -161.362, 44.9936, -87.1318, 0.28 ) }
    dend_5 { pt3dadd( -162.305, 45.7113, -86.788, 0.28 ) }
    dend_5 { pt3dadd( -163.343, 46.5239, -86.0113, 0.55 ) }
    dend_5 { pt3dadd( -164.289, 47.3635, -85.068, 0.28 ) }
    dend_5 { pt3dadd( -164.642, 47.7028, -84.5854, 0.55 ) }
    dend_5 { pt3dadd( -166.502, 49.7567, -81.8761, 0.28 ) }
    dend_5 { pt3dadd( -166.853, 50.12, -81.401, 0.55 ) }
    dend_5 { pt3dadd( -168.213, 51.3278, -79.9546, 0.28 ) }
    dend_5 { pt3dadd( -168.408, 51.4795, -79.7814, 0.55 ) }
    dend_5 { pt3dadd( -171.342, 53.4956, -77.6573, 0.28 ) }
    dend_5 { pt3dadd( -173.68, 54.9258, -76.2435, 0.28 ) }
    dend_5 { pt3dadd( -175.353, 55.8072, -75.4274, 0.55 ) }
    dend_5 { pt3dadd( -178.369, 57.3002, -74.1547, 0.28 ) }
    dend_5 { pt3dadd( -178.912, 57.5475, -73.9644, 0.55 ) }
    dend_5 { pt3dadd( -181.573, 58.6875, -73.1259, 0.28 ) }
    dend_5 { pt3dadd( -182.746, 59.1424, -72.8143, 0.28 ) }
    dend_5 { pt3dadd( -183.767, 59.5139, -72.5759, 0.55 ) }
    dend_5 { pt3dadd( -185.297, 60.097, -72.1626, 0.28 ) }
    dend_5 { pt3dadd( -186.183, 60.3646, -71.8453, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -186.772, 60.5204, -71.643, 0.55 ) }
    dend_5 { pt3dadd( -187.68, 60.6999, -71.3365, 0.28 ) }
    dend_5 { pt3dadd( -188.38, 60.8358, -71.091, 0.55 ) }
    dend_5 { pt3dadd( -189.811, 61.0487, -70.5358, 0.28 ) }
    dend_5 { pt3dadd( -191.204, 61.1028, -69.8223, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -24.2154, 0.583505, -20.019, 0.83 ) }
    dend_4 { pt3dadd( -24.233, 0.790411, -21.9916, 0.83 ) }
    dend_4 { pt3dadd( -24.3689, 0.923974, -23.6046, 0.83 ) }
    dend_4 { pt3dadd( -24.506, 1.38805, -28.2137, 0.83 ) }
    dend_4 { pt3dadd( -24.4964, 1.43459, -29.2176, 0.83 ) }
    dend_4 { pt3dadd( -24.4871, 1.43215, -30.0273, 0.83 ) }
    dend_4 { pt3dadd( -24.4762, 1.34988, -32.7589, 0.83 ) }
    dend_4 { pt3dadd( -24.4419, 1.14638, -35.5886, 0.83 ) }
    dend_4 { pt3dadd( -24.2656, 0.469041, -40.2876, 0.83 ) }
    dend_4 { pt3dadd( -24.1246, 0.0217931, -42.0441, 0.83 ) }
    dend_4 { pt3dadd( -24.0066, -0.32146, -43.1826, 0.83 ) }
    dend_4 { pt3dadd( -23.7516, -1.03694, -45.3619, 0.83 ) }
    dend_4 { pt3dadd( -23.3965, -1.72865, -47.6035, 0.83 ) }
    dend_4 { pt3dadd( -23.1409, -2.3153, -49.3164, 0.83 ) }
    dend_4 { pt3dadd( -22.7777, -3.4339, -52.3119, 0.55 ) }
    dend_4 { pt3dadd( -22.7125, -3.60553, -52.9238, 0.55 ) }
    dend_4 { pt3dadd( -22.4617, -4.11962, -54.9325, 0.55 ) }
    dend_4 { pt3dadd( -22.1489, -4.69156, -57.3055, 0.55 ) }
    dend_4 { pt3dadd( -22.0792, -4.79139, -57.8913, 0.55 ) }
    dend_4 { pt3dadd( -21.9077, -4.9447, -59.1774, 0.83 ) }
    dend_4 { pt3dadd( -21.1951, -5.44551, -63.2928, 0.55 ) }
    dend_4 { pt3dadd( -20.9378, -5.58295, -64.5029, 0.83 ) }
    dend_4 { pt3dadd( -20.4672, -5.7709, -66.5141, 0.55 ) }
    dend_4 { pt3dadd( -19.8044, -5.98065, -69.262, 0.83 ) }
    dend_4 { pt3dadd( -19.0894, -6.02866, -72.0505, 0.55 ) }
    dend_4 { pt3dadd( -18.6326, -6.0036, -73.6449, 0.55 ) }
    dend_4 { pt3dadd( -18.0203, -5.91228, -75.6393, 0.83 ) }
    dend_4 { pt3dadd( -16.6562, -5.38714, -80.4143, 0.55 ) }
    dend_4 { pt3dadd( -16.3885, -5.23635, -81.3462, 0.83 ) }
    dend_4 { pt3dadd( -15.6185, -4.6676, -83.9462, 0.28 ) }
    dend_4 { pt3dadd( -15.3862, -4.391, -84.8737, 0.28 ) }
    dend_4 { pt3dadd( -15.1592, -3.89572, -86.1, 0.55 ) }
    dend_4 { pt3dadd( -14.6506, -1.41379, -90.9774, 0.28 ) }
    dend_4 { pt3dadd( -14.6301, -1.18005, -91.362, 0.28 ) }
    dend_4 { pt3dadd( -14.6423, -0.359907, -92.6445, 0.83 ) }
    dend_4 { pt3dadd( -14.8696, 1.2994, -94.9897, 0.55 ) }
    dend_4 { pt3dadd( -15.1501, 2.47932, -96.4995, 0.55 ) }
    dend_4 { pt3dadd( -15.4765, 3.31843, -97.4164, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 43/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.17071, -243.523, -11.7004, 0.55 ) }
    dend_29 { pt3dadd( -3.17044, -245.354, -11.2939, 0.55 ) }
    dend_29 { pt3dadd( -2.31266, -246.925, -10.9453, 0.55 ) }
    dend_29 { pt3dadd( 2.57606, -254.45, -9.9515, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.17071, -243.523, -11.7004, 0.55 ) }
    dend_28 { pt3dadd( -4.17995, -244.701, -11.6765, 0.55 ) }
    dend_28 { pt3dadd( -4.17952, -246.447, -11.6148, 0.55 ) }
    dend_28 { pt3dadd( -4.16594, -248.431, -11.4873, 0.55 ) }
    dend_28 { pt3dadd( -4.1558, -251.776, -11.2113, 0.55 ) }
    dend_28 { pt3dadd( -4.16404, -253.347, -11.08, 0.55 ) }
    dend_28 { pt3dadd( -4.26015, -257.063, -10.7612, 0.55 ) }
    dend_28 { pt3dadd( -4.51014, -261.338, -10.3537, 0.55 ) }
    dend_28 { pt3dadd( -4.86087, -264.181, -10.0802, 0.55 ) }
    dend_28 { pt3dadd( -5.34651, -266.845, -9.82456, 0.55 ) }
    dend_28 { pt3dadd( -5.65374, -268.258, -9.66812, 0.55 ) }
    dend_28 { pt3dadd( -5.96098, -269.464, -9.54438, 0.55 ) }
    dend_28 { pt3dadd( -6.56162, -271.172, -9.34676, 0.55 ) }
    dend_28 { pt3dadd( -7.74587, -273.455, -9.1042, 0.55 ) }
    dend_28 { pt3dadd( -8.50477, -274.593, -9.02035, 0.28 ) }
    dend_28 { pt3dadd( -9.84719, -276.285, -8.88798, 0.55 ) }
    dend_28 { pt3dadd( -10.2949, -284.433, -7.2564, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 64/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -63.2069, 4.43115, 73.1525, 0.55 ) }
    dend_19 { pt3dadd( -68.2639, 6.28921, 81.587, 0.55 ) }
    dend_19 { pt3dadd( -73.1745, 7.42853, 90.233, 0.55 ) }
    dend_19 { pt3dadd( -78.0735, 7.63578, 98.9578, 0.55 ) }
    dend_19 { pt3dadd( -84.0679, 7.81423, 106.971, 0.55 ) }
    dend_19 { pt3dadd( -89.6702, 10.7705, 114.719, 0.55 ) }
    dend_19 { pt3dadd( -94.3002, 12.8744, 123.339, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -63.2069, 4.43115, 73.1525, 0.55 ) }
    dend_16 { pt3dadd( -68.4064, 6.84021, 80.1085, 0.55 ) }
    dend_16 { pt3dadd( -73.7781, 8.55713, 87.1385, 0.55 ) }
    dend_16 { pt3dadd( -79.3814, 8.99599, 94.1838, 0.55 ) }
    dend_16 { pt3dadd( -83.699, 10.2992, 101.987, 0.55 ) }
    dend_16 { pt3dadd( -86.8469, 10.334, 110.432, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -86.8469, 10.334, 110.432, 0.55 ) }
    dend_18 { pt3dadd( -92.5838, 12.0542, 118.963, 0.55 ) }
    dend_18 { pt3dadd( -97.6414, 14.8206, 127.649, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -86.8469, 10.334, 110.432, 0.55 ) }
    dend_17 { pt3dadd( -91.437, 11.4237, 117.768, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_44, dend_43, dend_42, dend_37, dend_34, dend_21, dend_10, dend_1, dend_0, axon_0, dend_46, dend_45, dend_39, dend_38, dend_36, dend_35, dend_31, dend_22, dend_20, dend_11, dend_7, dend_2, axon_1, dend_48, dend_47, dend_41, dend_40, dend_33, dend_32, dend_26, dend_23, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_30, dend_27, dend_25, dend_24, dend_15, dend_14, dend_5, dend_4, dend_29, dend_28, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_43 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_42 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_39 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_48 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_47 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_41 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_33 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_32 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_9 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_6 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_25 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_28 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_37 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_10 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_45 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_22 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_38 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_35 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_17 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_18 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_29 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_21, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 13
    dend_43 nseg = 7
    dend_42 nseg = 11
    dend_34 nseg = 5
    dend_0 nseg = 11
    dend_46 nseg = 3
    dend_39 nseg = 5
    dend_20 nseg = 7
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_33 nseg = 9
    dend_32 nseg = 7
    dend_23 nseg = 5
    dend_12 nseg = 9
    dend_9 nseg = 7
    dend_8 nseg = 13
    dend_6 nseg = 9
    dend_30 nseg = 7
    dend_27 nseg = 11
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 5
    dend_5 nseg = 11
    dend_4 nseg = 5
    dend_28 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L23_NBC_84b7be2a4c_0_0


