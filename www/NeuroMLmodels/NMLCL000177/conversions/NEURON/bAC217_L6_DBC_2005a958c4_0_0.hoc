// Cell: bAC217_L6_DBC_2005a958c4_0_0
/*
{
  "id" : "bAC217_L6_DBC_2005a958c4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.20498, -9.63696, 0.0, 2.93949", "1.97921, -8.62937, 0.0, 5.10114", "1.75343, -7.62179, 0.0, 6.34149", "1.52766, -6.61421, 0.0, 7.24948", "1.30189, -5.60662, 0.0, 8.32859", "1.07612, -4.59904, 0.0, 9.63098", "0.850343, -3.59146, 0.0, 10.5761", "0.624571, -2.58388, 0.0, 11.2008", "0.398798, -1.57629, 0.0, 11.5851", "0.173026, -0.56871, 0.0, 11.8715", "-0.0527468, 0.438873, 0.0, 11.942", "-0.278519, 1.44646, 0.0, 11.923", "-0.504292, 2.45404, 0.0, 11.4797", "-0.730064, 3.46162, 0.0, 10.9001", "-0.955837, 4.4692, 0.0, 10.1322", "-1.18161, 5.47679, 0.0, 9.32117", "-1.40738, 6.48437, 0.0, 8.43955", "-1.63315, 7.49195, 0.0, 7.43264", "-1.85893, 8.49954, 0.0, 6.41765", "-2.0847, 9.50712, 0.0, 5.2256", "-2.31047, 10.5147, 0.0, 2.87927" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67666, -9.21573, 7.1, 4.35", "1.67666, -9.21573, 7.1, 4.35", "2.16082, -10.2121, 7.79499, 3.32", "3.03806, -11.765, 9.1702, 2.36", "3.97513, -13.4239, 10.6392, 2.88", "4.06405, -13.5813, 10.7786, 2.65", "4.74122, -14.7801, 11.8402, 1.62", "5.66252, -16.2905, 13.3395, 1.84", "6.58441, -17.5553, 14.9525, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.96334, 9.77477, 0.0, 4.28", "-1.96334, 9.77477, 0.0, 4.28", "-2.80418, 11.3079, -0.165946, 3.32", "-3.40047, 12.3901, -0.363115, 2.88", "-3.83248, 13.1763, -0.525144, 2.88", "-4.47767, 14.3505, -0.767129, 3.47", "-5.32115, 15.8855, -1.08348, 2.51", "-6.32402, 17.6818, -1.49305, 2.8", "-7.21289, 19.2206, -1.91816, 4.13", "-7.63237, 19.9342, -2.14798, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.31047, 10.5147, 0.0, 0.488856", "-5.59024, 25.1517, 0.0, 0.488856", "-8.87001, 39.7888, 0.0, 0.488856" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.58441, -17.5553, 14.9525, 1.4", "7.50439, -18.2814, 14.0582, 1.4", "8.72862, -19.2775, 12.9087, 1.4", "9.56007, -19.9535, 12.1759, 1.4", "10.6032, -20.8148, 11.3466, 1.4", "11.5152, -21.5758, 10.6592, 1.18", "12.6773, -22.536, 9.8471, 1.4", "13.2053, -22.9878, 9.51006, 1.55", "13.7261, -23.4358, 9.22925, 1.7", "14.8651, -24.4037, 8.67813, 1.18", "15.7604, -25.1398, 8.3191, 1.18", "16.5675, -25.7885, 8.04647, 1.84", "17.0401, -26.1681, 7.93209, 1.84" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.58441, -17.5553, 14.9525, 1.18", "6.3261, -18.1563, 15.8984, 1.18", "5.74414, -19.6377, 18.1555, 1.03", "5.4172, -20.7274, 19.8092, 1.03", "5.30231, -21.3435, 20.7833, 0.96", "5.29054, -21.8559, 21.6577, 0.96", "5.34308, -22.5042, 22.867, 1.11", "5.47979, -23.1237, 24.1773, 1.03", "5.67666, -23.8022, 25.7547, 1.18", "5.92383, -24.6352, 27.8762, 1.84", "6.17737, -25.5862, 30.5392, 1.18", "6.27893, -26.3068, 32.6654, 1.18", "6.2065, -26.8236, 34.28, 1.18", "5.82852, -27.3689, 36.0388, 1.33", "5.17651, -27.8096, 37.4907, 1.33", "4.63188, -28.0476, 38.2831, 1.33", "3.64368, -28.3867, 39.4946, 1.4", "2.67832, -28.6905, 40.7497, 1.47", "1.3945, -29.0994, 42.7778, 1.33", "0.486005, -29.4267, 44.7204, 1.33", "-0.124422, -29.7006, 46.407, 1.4", "-0.859434, -30.107, 49.1308, 1.4", "-1.44447, -30.519, 52.017, 1.4", "-1.83328, -30.9022, 54.3565, 1.4", "-2.27493, -31.432, 57.103, 1.4", "-2.52416, -31.7255, 58.2586, 1.11", "-3.32579, -32.5654, 60.8452, 1.11", "-4.34357, -33.4904, 63.1879, 1.25", "-4.96281, -34.0113, 64.3379, 1.55", "-6.12385, -34.9153, 66.1251, 1.55", "-7.55395, -35.9848, 68.0407, 1.25", "-9.19884, -37.1676, 70.1019, 1.25", "-11.1908, -38.612, 72.2647, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.63237, 19.9342, -2.14798, 2.88", "-8.96769, 21.5271, -3.73904, 2.88", "-9.93486, 22.6809, -4.89144, 2.88", "-10.9053, 23.8386, -6.04773, 3.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.63237, 19.9342, -2.14798, 2.06", "-6.96196, 22.2442, -0.681685, 2.06", "-6.34662, 24.3534, 0.45713, 0.96", "-6.05448, 25.3016, 0.913574, 0.96", "-5.62473, 26.6658, 1.48571, 0.81", "-5.26319, 27.7562, 1.88463, 0.81", "-4.762, 29.2081, 2.36013, 1.03", "-4.43303, 30.1421, 2.53426, 1.11", "-4.04697, 31.1833, 2.63055, 1.55", "-3.55335, 32.5525, 2.71063, 1.18", "-3.11559, 33.8627, 2.75369, 0.88", "-2.89505, 34.6201, 2.76971, 0.74", "-2.59131, 35.9149, 2.77962, 1.18", "-2.30845, 37.3636, 2.82214, 0.81", "-2.01385, 39.0934, 2.89853, 0.96", "-1.76157, 40.6126, 2.95855, 1.25", "-1.53788, 41.9416, 3.0055, 1.25", "-1.28775, 43.182, 3.04274, 0.66", "-0.945216, 44.4716, 3.07508, 0.88", "-0.512262, 45.6213, 3.0529, 0.52", "2.98431E-4, 46.7003, 2.98058, 0.96", "0.366012, 47.3802, 2.90632, 0.96", "1.12434, 48.6645, 2.75695, 0.74", "1.76827, 49.6772, 2.63252, 0.88", "2.57393, 50.9159, 2.47352, 0.88", "3.47061, 52.3371, 2.38607, 0.96", "3.74505, 52.7803, 2.3909, 0.96", "4.47637, 54.0019, 2.49861, 0.96", "4.79966, 54.5621, 2.60728, 1.11", "5.19226, 55.2666, 2.79967, 0.96", "5.92832, 56.5095, 3.26695, 0.81", "6.57624, 57.5438, 3.73495, 0.66", "7.42574, 58.8968, 4.37727, 0.59", "8.15244, 60.0497, 5.0191, 0.88", "8.84288, 61.1409, 5.66096, 1.4", "9.86969, 62.7204, 6.65544, 0.88", "10.7503, 64.0111, 7.53056, 0.74", "11.2361, 64.7194, 8.04692, 0.74", "12.4728, 66.3969, 9.31995, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.87001, 39.7888, 0.0, 0.158825", "-12.1498, 54.4258, 0.0, 0.158825", "-15.4296, 69.0629, 0.0, 0.158825" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "17.0401, -26.1681, 7.93209, 1.7", "18.3843, -26.1861, 9.99047, 1.7", "19.5145, -26.3197, 11.7957, 1.25", "20.379, -26.5048, 13.2219, 1.25", "21.2436, -26.7649, 14.6342, 1.55", "22.3331, -27.1668, 16.375, 1.4", "23.3594, -27.5884, 17.9734, 1.62", "24.3745, -28.0917, 19.4591, 1.55", "25.5589, -28.7298, 21.1382, 1.4", "26.5709, -29.2907, 22.5025, 1.47", "28.0402, -30.1162, 24.3761, 1.18", "29.4475, -30.8762, 26.0335, 1.18", "31.0063, -31.6711, 27.7159, 1.03", "32.3269, -32.2894, 29.0089, 1.03", "32.8926, -32.5233, 29.509, 1.25", "34.3279, -33.0381, 30.69, 1.11", "35.572, -33.4198, 31.747, 1.33", "36.3568, -33.6272, 32.4181, 1.62", "38.1586, -34.0685, 33.9593, 1.33", "39.9311, -34.4613, 35.4917, 1.25", "41.4483, -34.7474, 36.8435, 1.18", "44.0379, -35.1313, 39.222, 1.47", "44.7751, -35.224, 39.9395, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.0401, -26.1681, 7.93209, 0.88", "17.1072, -27.1777, 8.58074, 0.88", "17.0637, -28.6778, 9.61445, 0.74", "16.9225, -30.2204, 10.7558, 0.74", "16.772, -31.4258, 11.6303, 0.74", "16.5734, -32.7187, 12.5317, 0.96", "16.3456, -34.0084, 13.3864, 1.7", "15.8784, -35.9388, 14.64, 0.66", "15.4724, -37.2825, 15.4157, 0.74", "15.1401, -38.3001, 15.8436, 0.88", "14.8268, -39.237, 16.0658, 1.11", "14.4661, -40.3747, 16.1351, 1.33", "14.0288, -41.9165, 16.0214, 0.74", "13.698, -43.3575, 15.7703, 0.74", "13.5147, -44.3714, 15.5162, 0.59", "13.2651, -46.1526, 15.0294, 0.88", "13.1108, -47.6995, 14.5984, 0.59", "13.0507, -48.5157, 14.3622, 0.59", "12.9878, -50.0016, 13.9442, 0.81", "12.9413, -51.9029, 13.4846, 0.74", "12.9298, -52.8572, 13.2573, 0.59", "12.943, -54.1006, 13.0081, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-11.1908, -38.612, 72.2647, 0.52", "-12.073, -38.083, 76.1131, 0.52", "-12.4383, -37.7921, 78.0177, 0.52", "-12.7027, -37.5457, 79.5168, 0.52", "-12.9012, -37.3514, 80.7486, 0.52", "-13.2175, -37.0351, 82.6076, 0.52", "-13.4564, -36.7984, 83.9229, 0.52", "-13.7039, -36.5349, 85.1244, 0.52", "-14.114, -36.1023, 86.9503, 0.52", "-14.7032, -35.5072, 89.2027, 0.52", "-15.1755, -35.0613, 90.7222, 0.81", "-15.6783, -34.5851, 92.0834, 0.81", "-16.1049, -34.1396, 93.1479, 0.59", "-16.9871, -33.1085, 95.3197, 0.59", "-17.5997, -32.2363, 96.9275, 0.52", "-18.093, -31.3866, 98.285, 0.37", "-18.6673, -30.1585, 100.136, 0.44", "-19.1509, -28.8568, 101.926, 0.29", "-19.4708, -27.741, 103.403, 0.29", "-19.7959, -26.3137, 105.096, 0.29", "-20.0234, -25.142, 106.439, 0.29", "-20.3304, -23.3883, 108.38, 0.29", "-20.4817, -22.4679, 109.39, 0.29", "-20.8137, -20.5154, 111.527, 0.29", "-21.0369, -19.2321, 112.906, 0.22", "-21.422, -17.1567, 115.159, 0.22", "-21.5962, -16.2254, 116.202, 0.22", "-21.9278, -14.6227, 117.977, 0.22", "-22.3419, -12.8034, 120.105, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.1908, -38.612, 72.2647, 1.03", "-11.3067, -39.4481, 72.2647, 1.03", "-11.4745, -40.619, 72.4112, 0.74", "-11.6537, -42.0022, 72.651, 0.74", "-11.782, -43.1071, 72.8577, 0.88", "-11.929, -44.5982, 73.0828, 0.96", "-11.9916, -45.3638, 73.1778, 0.96", "-12.1063, -47.4432, 73.4033, 1.03", "-12.1562, -48.835, 73.5337, 0.66", "-12.1685, -49.9521, 73.6313, 0.52", "-12.1287, -51.3767, 73.7352, 0.66", "-12.038, -52.5717, 73.7935, 0.96", "-11.9381, -53.8394, 73.8125, 1.11", "-11.893, -54.3313, 73.7975, 1.11", "-11.7514, -55.5998, 73.7899, 0.66", "-11.6575, -56.3677, 73.8042, 0.66", "-11.5185, -57.4488, 73.8495, 0.66", "-11.3557, -58.7467, 73.9616, 0.88", "-11.1887, -60.1862, 74.1602, 0.81", "-11.0231, -61.833, 74.5034, 0.74", "-10.905, -63.3246, 74.8928, 0.66", "-10.8216, -64.7464, 75.3445, 0.52", "-10.7364, -66.6323, 76.0168, 0.52", "-10.6946, -67.7224, 76.465, 0.52", "-10.6981, -69.2088, 77.1156, 0.52", "-10.726, -70.1915, 77.5485, 0.66", "-10.7622, -71.2738, 78.0054, 0.96", "-10.8024, -72.8134, 78.5987, 1.03", "-10.8152, -74.4408, 79.0887, 0.74", "-10.7989, -75.9553, 79.451, 0.44", "-10.7684, -76.921, 79.6327, 0.22", "-10.7464, -77.3566, 79.7057, 0.22", "-10.6618, -78.4455, 79.8518, 0.52", "-10.5084, -79.7655, 79.9279, 0.52", "-10.2464, -81.3622, 79.8897, 0.22", "-10.0763, -82.1947, 79.8835, 0.22", "-9.83483, -83.3108, 79.9301, 0.66", "-9.47009, -84.8857, 80.0502, 0.66", "-9.07983, -86.4166, 80.2069, 0.37", "-8.75208, -87.5887, 80.4115, 0.22", "-8.2109, -89.5169, 80.8581, 0.29", "-7.87877, -90.7808, 81.0625, 0.29", "-7.72112, -91.4224, 81.1266, 0.66", "-7.47974, -92.436, 81.159, 0.96", "-7.10632, -94.0675, 81.1121, 0.96", "-6.77597, -95.4974, 80.9307, 0.37", "-6.12337, -98.3973, 80.3329, 0.44", "-5.95242, -99.2442, 80.1469, 0.44", "-5.66187, -100.898, 79.8496, 0.52", "-5.4163, -102.486, 79.6263, 0.44", "-5.25734, -103.626, 79.5213, 0.44", "-5.04091, -105.301, 79.5025, 0.44", "-4.82017, -107.171, 79.7063, 0.44", "-4.66865, -108.674, 79.924, 0.44", "-4.58414, -109.78, 80.1175, 0.44", "-4.51151, -110.832, 80.3197, 0.44", "-4.47585, -111.966, 80.5565, 0.52", "-4.48694, -113.353, 80.8508, 0.52", "-4.51804, -114.186, 81.0157, 0.52", "-4.6495, -116.052, 81.3185, 0.22", "-4.76237, -117.576, 81.5205, 0.22", "-4.86442, -118.947, 81.6609, 0.22", "-4.9705, -120.375, 81.7639, 0.29", "-5.04207, -121.707, 81.7783, 0.29", "-5.08233, -123.257, 81.8743, 0.29", "-5.07254, -125.219, 82.0802, 0.22", "-5.04563, -125.993, 82.186, 0.29", "-4.94425, -127.448, 82.4141, 0.37", "-4.79065, -129.156, 82.7175, 0.37", "-4.52412, -131.999, 83.1776, 0.22", "-4.43186, -132.901, 83.3071, 0.22", "-4.33276, -133.946, 83.4297, 0.37", "-4.22808, -135.126, 83.5245, 0.37", "-4.05405, -137.152, 83.6445, 0.29", "-3.95264, -138.505, 83.6938, 0.22", "-3.87575, -139.593, 83.6698, 0.22", "-3.80432, -140.779, 83.7213, 0.29", "-3.73876, -142.323, 83.885, 0.29", "-3.71501, -143.634, 84.178, 0.29", "-3.72016, -144.602, 84.4538, 0.29", "-3.74469, -146.398, 85.0856, 0.15", "-3.79293, -148.144, 85.7799, 0.15", "-3.81765, -148.95, 86.1472, 0.37", "-3.87362, -151.091, 87.2717, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.9053, 23.8386, -6.04773, 2.8", "-12.2353, 24.0476, -6.96773, 2.8" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.9053, 23.8386, -6.04773, 1.77", "-10.6935, 25.1108, -7.22189, 1.77", "-10.4755, 26.8396, -8.89846, 1.4", "-10.3389, 28.1927, -10.2229, 1.4", "-10.265, 29.0604, -11.0947, 1.7", "-10.1942, 30.1951, -12.2721, 1.84", "-10.1294, 31.5249, -13.6645, 1.84", "-10.1156, 32.7531, -15.013, 1.4", "-10.1184, 34.0564, -16.4154, 1.84", "-10.1352, 35.5948, -17.9662, 1.62", "-10.1742, 37.4537, -19.697, 1.77", "-10.2311, 38.4978, -20.5463, 1.77", "-10.3927, 40.1671, -21.7611, 1.62", "-10.5415, 41.2225, -22.45, 1.62", "-10.8699, 42.9521, -23.4874, 1.47", "-11.1466, 44.1268, -24.1271, 1.47", "-11.7135, 46.2926, -25.2569, 1.4", "-12.1578, 47.9441, -26.1376, 1.47", "-12.5449, 49.475, -27.004, 1.55", "-12.7268, 50.3692, -27.5725, 1.55", "-12.9331, 51.9926, -28.6907, 1.25", "-12.9859, 53.5893, -29.8244, 1.25", "-12.8904, 54.8808, -30.7254, 1.4", "-12.6814, 56.2439, -31.6121, 1.25", "-12.342, 57.8581, -32.537, 1.25", "-12.093, 59.0117, -33.0828, 1.25", "-11.8012, 60.3878, -33.6797, 1.47", "-11.6755, 61.1849, -33.9825, 1.62", "-11.6101, 62.1898, -34.3088, 1.33", "-11.6952, 64.3691, -34.8915, 1.11", "-11.8879, 65.6903, -35.2457, 1.11", "-12.1955, 67.249, -35.6962, 1.25", "-12.4132, 68.1209, -35.9766, 1.47", "-12.8119, 69.4824, -36.4502, 1.4", "-13.2495, 70.7355, -36.9216, 1.25", "-14.0378, 72.4365, -37.5874, 1.47" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.4728, 66.3969, 9.31995, 0.15", "11.9471, 66.5551, 12.6076, 0.15", "11.709, 66.6813, 14.1627, 0.15", "11.5698, 66.8132, 15.1144, 0.29", "11.2554, 67.3245, 17.5934, 0.22", "11.0338, 67.8626, 19.6639, 0.22", "10.878, 68.4067, 21.3464, 0.37", "10.8598, 68.5316, 21.6686, 0.81", "10.8371, 69.0347, 22.5601, 0.15", "10.8551, 69.8507, 23.6386, 0.22", "10.8812, 70.1959, 24.0104, 0.59", "10.941, 70.8382, 24.7057, 1.03", "10.9888, 71.9868, 26.0722, 0.15", "10.9726, 72.3955, 26.6739, 0.29", "10.8464, 73.219, 28.2665, 0.22", "10.6084, 74.0241, 30.1674, 0.37", "10.4266, 74.4421, 31.3595, 0.37", "10.259, 74.7149, 32.3867, 0.44", "9.92137, 75.0932, 34.239, 0.37", "9.55886, 75.4344, 36.139, 0.37", "9.29531, 75.6275, 37.3542, 0.37", "8.93233, 75.8505, 38.9037, 0.37", "8.40765, 76.1811, 41.2978, 0.37", "7.92609, 76.5464, 43.9178, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.4728, 66.3969, 9.31995, 0.96", "13.6665, 68.029, 8.45481, 0.96", "14.0773, 68.5866, 8.21147, 0.88", "14.8245, 69.5771, 7.84148, 0.74", "15.6692, 70.6958, 7.49195, 0.96", "16.4335, 71.7224, 7.16491, 0.81", "17.1083, 72.6485, 6.86347, 0.44", "17.7455, 73.5981, 6.6106, 0.44", "18.1995, 74.3423, 6.38354, 0.66", "18.9008, 75.6034, 5.96607, 0.52", "19.4437, 76.6664, 5.58046, 0.74", "19.8804, 77.5795, 5.19751, 1.11", "20.261, 78.4721, 4.81017, 0.66", "20.7905, 79.7994, 4.24515, 0.66", "21.1373, 80.6881, 3.88563, 0.66", "21.5977, 81.8225, 3.48724, 0.81", "21.9516, 82.6312, 3.2735, 0.59", "22.5194, 83.8407, 2.97888, 0.52", "22.9406, 84.7228, 2.77702, 0.52", "23.2022, 85.2584, 2.67129, 0.52", "23.7125, 86.3214, 2.50645, 0.66", "24.1591, 87.2308, 2.41543, 0.88", "24.7628, 88.3664, 2.32638, 1.03", "25.4313, 89.5192, 2.26202, 0.52", "26.0063, 90.4869, 2.23514, 0.29", "26.5612, 91.3828, 2.23826, 0.29", "27.2146, 92.4255, 2.34356, 0.52", "27.9001, 93.4837, 2.5602, 0.22", "28.2702, 94.0467, 2.72819, 0.15", "28.7096, 94.7426, 2.95121, 0.66", "29.1961, 95.6664, 3.27028, 0.29", "29.6843, 96.887, 3.7564, 0.52", "29.8737, 97.5069, 4.0393, 1.03", "30.128, 98.4444, 4.50404, 0.37", "30.3658, 99.2608, 4.86669, 0.44", "30.8247, 100.679, 5.35457, 0.59", "31.2972, 102.112, 5.67041, 0.88", "31.5798, 102.956, 5.74559, 0.88", "31.8323, 103.711, 5.75712, 0.66", "32.4185, 105.343, 5.58339, 0.29", "32.891, 106.551, 5.29424, 0.66", "33.277, 107.485, 4.95369, 0.44", "33.5206, 108.106, 4.69618, 0.44", "33.87, 109.117, 4.31117, 0.22", "34.1922, 110.168, 3.98469, 0.22", "34.4247, 110.96, 3.87169, 0.66", "34.6223, 111.594, 3.85659, 0.88", "34.9834, 112.669, 3.92408, 0.52", "35.2846, 113.523, 4.09396, 0.52", "35.6887, 114.66, 4.49294, 0.52", "36.2548, 116.266, 5.24307, 0.52", "36.5539, 117.079, 5.68768, 0.96", "36.9714, 118.112, 6.31831, 0.66", "37.539, 119.34, 7.11488, 0.22", "37.8556, 119.969, 7.52296, 0.22", "38.2193, 120.653, 7.92338, 0.29", "38.7437, 121.585, 8.3433, 0.37", "39.4442, 122.7, 8.69677, 0.52", "40.0087, 123.476, 8.83154, 0.81", "40.5155, 124.105, 8.81456, 0.81", "41.4456, 125.194, 8.61889, 0.22", "42.0919, 125.926, 8.47777, 0.59", "43.0406, 126.989, 8.24813, 0.59", "43.8221, 127.865, 8.06195, 0.22", "44.8103, 129.023, 7.87583, 0.15", "45.5077, 129.928, 7.79088, 0.15", "46.6406, 131.61, 7.92636, 0.59", "47.011, 132.245, 8.08052, 0.59", "47.4455, 133.106, 8.38764, 0.59", "47.8094, 133.906, 8.70484, 0.29", "48.2121, 134.818, 9.09065, 0.22", "48.9829, 136.491, 9.71171, 0.22", "49.2258, 136.989, 9.82897, 0.22", "49.6779, 137.859, 9.99187, 0.52", "50.2182, 138.852, 10.1238, 0.59", "50.5612, 139.468, 10.1651, 0.59", "51.2168, 140.605, 10.2128, 0.29", "51.6575, 141.403, 10.2131, 0.29", "52.1915, 142.483, 10.2487, 0.37", "52.4929, 143.198, 10.2975, 0.29", "52.7765, 144.06, 10.4489, 0.44", "53.1647, 145.494, 10.797, 0.44", "53.4119, 146.515, 11.0768, 0.66", "53.642, 147.465, 11.3549, 0.88", "53.9446, 148.721, 11.7112, 0.66", "54.5999, 151.066, 12.3301, 0.37", "54.9892, 152.225, 12.6468, 0.22", "55.3838, 153.272, 12.8832, 0.52", "55.6874, 153.951, 13.0087, 0.59", "56.1747, 154.886, 13.1016, 0.29", "56.7028, 155.806, 13.1652, 0.22", "57.6776, 157.459, 13.2407, 0.15", "58.4141, 158.765, 13.3865, 0.37", "58.8499, 159.6, 13.5254, 0.37", "59.2893, 160.541, 13.6999, 0.37", "60.1795, 162.552, 14.0834, 0.81", "60.6202, 163.61, 14.2937, 0.96", "60.9574, 164.448, 14.4495, 0.52", "61.3415, 165.451, 14.6968, 0.22", "61.7936, 166.75, 15.0277, 0.29", "62.2356, 168.07, 15.3306, 0.22", "62.5964, 169.153, 15.5142, 0.74", "63.1235, 170.733, 15.7817, 0.29", "63.7013, 172.468, 16.1398, 0.52", "64.0194, 173.4, 16.3651, 0.59", "64.3823, 174.478, 16.6527, 0.29", "64.6191, 175.266, 16.8388, 0.29", "64.8875, 176.232, 17.0787, 0.29", "65.1533, 177.193, 17.3885, 0.66", "65.3619, 177.892, 17.6518, 0.96", "65.6067, 178.682, 18.0649, 0.37", "65.9547, 179.842, 18.7822, 0.29", "66.3084, 181.259, 19.7013, 0.37", "66.5719, 182.551, 20.5518, 0.66", "66.7093, 183.323, 21.0435, 0.44", "66.9556, 184.74, 21.9109, 0.88", "67.1092, 185.613, 22.4137, 1.11", "67.3771, 187.264, 23.2822, 0.22", "67.49, 188.08, 23.5847, 0.22", "67.5835, 188.91, 23.8071, 0.15", "67.6487, 189.869, 23.999, 0.15", "67.6774, 190.569, 24.0959, 0.15", "67.7071, 191.692, 24.2637, 0.37", "67.7501, 192.82, 24.4385, 0.37", "67.7732, 193.513, 24.5574, 0.22", "67.8124, 194.538, 24.7398, 0.44", "67.8398, 195.091, 24.8341, 0.44", "67.9008, 195.88, 24.9545, 0.44", "67.988, 196.573, 25.0201, 0.66", "68.1374, 197.339, 25.1025, 0.37", "68.3708, 198.205, 25.1955, 0.37", "68.702, 199.13, 25.2876, 0.22", "68.8658, 199.533, 25.3196, 0.22", "69.3033, 200.571, 25.3874, 0.22", "69.8834, 201.924, 25.4064, 0.52", "70.2191, 202.713, 25.3852, 0.96", "70.4556, 203.294, 25.349, 0.96", "70.9013, 204.454, 25.2418, 0.22", "71.2209, 205.389, 25.1225, 0.29", "71.5603, 206.562, 24.9013, 0.29", "71.7259, 207.25, 24.7211, 0.81", "71.8585, 207.857, 24.5517, 0.52", "72.0501, 208.844, 24.2469, 0.37", "72.1607, 209.528, 23.9557, 0.37", "72.278, 210.403, 23.5331, 0.74", "72.3569, 211.067, 23.2074, 0.74", "72.4563, 211.891, 22.7715, 0.29", "72.5506, 212.704, 22.3341, 0.37", "72.7559, 214.505, 21.3954, 0.37", "72.866, 215.378, 20.9418, 0.52", "72.9775, 216.057, 20.6167, 0.52", "73.1207, 216.59, 20.36, 0.52", "73.4213, 217.351, 20.0746, 0.59", "73.7922, 218.101, 19.8814, 0.22", "74.5015, 219.307, 19.7574, 0.44", "75.171, 220.279, 19.7185, 0.52", "76.3449, 221.788, 19.8281, 0.29", "77.5104, 223.083, 20.1551, 0.44", "78.2466, 223.809, 20.5228, 0.44", "79.2126, 224.702, 21.2774, 0.44", "79.851, 225.299, 21.9311, 0.44", "80.5689, 226.024, 22.8613, 0.44", "81.3525, 226.899, 24.0851, 0.22", "82.0039, 227.698, 25.2064, 0.74", "82.6668, 228.651, 26.4905, 0.74", "83.0395, 229.351, 27.3195, 0.59", "83.4424, 230.369, 28.3878, 0.22", "83.5723, 230.804, 28.7677, 0.15", "83.74, 231.665, 29.3649, 0.29", "83.8693, 232.688, 29.9249, 0.29", "83.9401, 233.714, 30.3722, 0.29", "83.9557, 234.312, 30.62, 0.52", "83.955, 234.983, 30.8556, 0.88", "83.9176, 236.144, 31.2281, 0.52", "83.8714, 236.933, 31.3677, 0.52", "83.795, 237.775, 31.4083, 0.22", "83.6719, 238.705, 31.4184, 0.22", "83.5798, 239.326, 31.4188, 0.52", "83.5015, 239.82, 31.4112, 0.81", "83.1825, 241.788, 31.3369, 0.22", "83.0036, 242.75, 31.2914, 0.22", "82.6503, 244.471, 31.2044, 0.22", "82.5774, 244.814, 31.1681, 0.37", "82.449, 245.461, 31.1004, 0.96", "82.4046, 245.717, 31.0786, 0.96", "82.2525, 246.787, 31.0301, 0.22", "82.2238, 247.078, 31.0095, 0.22", "82.1631, 248.163, 30.8982, 0.37", "82.153, 248.857, 30.8889, 0.88", "82.1965, 250.266, 30.9634, 0.22", "82.2496, 250.9, 31.0298, 0.37", "82.4205, 252.224, 31.2542, 0.66", "82.5663, 253.249, 31.525, 0.22", "82.741, 254.407, 31.9365, 0.66", "82.8339, 255.015, 32.193, 0.66", "82.9788, 255.932, 32.6829, 0.44", "83.0412, 256.397, 32.9913, 0.59", "83.1627, 257.431, 33.8007, 0.15", "83.2016, 257.848, 34.2068, 0.37", "83.2279, 258.21, 34.6013, 0.37", "83.2622, 258.991, 35.5312, 0.15", "83.2786, 259.573, 36.2556, 0.15", "83.3047, 259.899, 36.6099, 0.29", "83.4062, 260.581, 37.2713, 0.29", "83.5808, 261.539, 38.0651, 0.22", "83.7352, 262.373, 38.6073, 0.66", "83.7671, 262.572, 38.7084, 0.66", "83.8827, 263.81, 39.3391, 0.15", "83.897, 264.768, 39.8335, 0.15", "83.8321, 265.509, 40.2571, 0.37", "83.7588, 265.999, 40.6102, 0.37", "83.6064, 266.809, 41.2027, 0.22", "83.3221, 268.091, 42.1158, 0.22", "83.1761, 268.739, 42.5543, 0.37", "82.8127, 270.486, 43.5751, 0.15", "82.5039, 272.113, 44.3451, 0.15", "82.192, 274.124, 45.0829, 0.15", "82.0653, 275.242, 45.3717, 0.15", "81.9793, 276.874, 45.6313, 0.15", "82.0552, 278.205, 45.7475, 0.15", "82.457, 280.173, 45.7276, 0.15", "82.8215, 281.148, 45.6243, 0.15", "83.2699, 281.905, 45.5086, 0.15", "83.9235, 282.694, 45.3559, 0.37", "85.6101, 284.205, 45.0002, 0.15", "86.6222, 284.912, 44.8264, 0.15", "87.8599, 285.618, 44.7077, 0.15", "88.3202, 285.862, 44.6772, 0.59", "89.2485, 286.335, 44.6848, 0.29", "89.9702, 286.71, 44.7706, 0.15", "90.3512, 286.942, 44.8762, 0.29", "91.2505, 287.6, 45.2454, 0.88", "91.7975, 288.099, 45.6121, 0.22", "92.5227, 288.985, 46.3583, 0.22", "92.797, 289.448, 46.8277, 0.22", "93.2097, 290.307, 47.8212, 0.29", "93.4432, 290.901, 48.5698, 0.15", "93.8241, 292.098, 50.1632, 0.66", "94.1103, 293.24, 51.7339, 0.37", "94.3356, 294.506, 53.5445, 0.15", "94.4249, 295.353, 54.7242, 0.15", "94.4367, 296.095, 55.6946, 0.15", "94.4156, 296.432, 56.0597, 0.15", "94.3301, 297.125, 56.5891, 0.52", "94.1754, 298.165, 57.0478, 0.52", "93.8725, 300.062, 57.4285, 0.15", "93.6262, 301.662, 57.5557, 0.15", "93.4663, 303.077, 57.5391, 0.15", "93.312, 305.12, 57.4044, 0.15", "93.2209, 307.712, 57.1134, 0.15", "93.2505, 309.517, 56.8292, 0.15", "93.3151, 310.415, 56.66, 0.22", "93.5253, 312.191, 56.282, 0.07", "93.6108, 312.771, 56.15, 0.07", "93.8033, 313.928, 55.8569, 0.22", "94.1033, 315.638, 55.4707, 0.07", "94.217, 316.247, 55.2959, 0.07", "94.3033, 316.706, 55.137, 0.22", "94.4348, 317.332, 54.8838, 0.59", "94.8602, 318.905, 54.1106, 0.07", "95.223, 319.937, 53.5257, 0.07", "95.4005, 320.354, 53.2724, 0.29", "95.6367, 320.852, 52.9589, 0.29", "96.1388, 321.907, 52.313, 0.07", "96.6805, 323.125, 51.6553, 0.07", "96.8927, 323.693, 51.4065, 0.07", "96.9927, 324.093, 51.2367, 0.29", "97.0601, 324.626, 51.0586, 0.29", "97.1504, 326.11, 50.6303, 0.15", "97.0949, 327.451, 50.3033, 0.15", "96.977, 328.383, 50.1305, 0.29", "96.6949, 329.97, 49.8382, 0.22", "96.3445, 331.638, 49.5533, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "44.7751, -35.224, 39.9395, 0.88", "45.1135, -33.9651, 39.8854, 0.88", "45.2982, -33.0964, 39.918, 0.74", "45.5152, -31.8517, 40.0029, 0.81", "45.7207, -30.4657, 40.1154, 0.88", "45.8893, -29.1828, 40.2258, 1.4", "46.0225, -27.9415, 40.3804, 0.96", "46.071, -26.3931, 40.6431, 0.88", "46.0537, -25.495, 40.8236, 0.81", "46.0109, -24.9347, 40.893, 0.81", "45.8842, -24.104, 40.9072, 0.81", "45.5485, -22.5821, 40.7646, 1.18", "45.2279, -21.4155, 40.5747, 1.18", "44.8372, -20.0847, 40.2917, 1.18", "44.0024, -17.0751, 39.7437, 0.96", "43.4903, -14.9551, 39.4219, 0.59", "43.2169, -13.517, 39.294, 0.59", "43.0607, -12.2875, 39.2911, 0.74", "42.9831, -11.0178, 39.4488, 1.11", "42.964, -9.01097, 40.0322, 1.4", "43.0439, -7.42234, 40.7156, 1.4", "43.1925, -5.59449, 41.5787, 1.18", "43.2975, -4.24231, 42.1861, 1.47", "43.3435, -3.23407, 42.5412, 1.11", "43.308, -1.3974, 42.8773, 0.74", "43.2137, -0.257203, 42.844, 1.03", "43.0796, 0.754991, 42.6328, 1.11", "42.8044, 2.25999, 42.0372, 0.88", "42.4658, 3.71701, 41.2475, 0.88", "42.0903, 4.99223, 40.4364, 0.74", "41.8016, 5.82873, 39.8214, 0.66", "41.419, 6.83073, 39.0815, 0.59", "41.0011, 7.96795, 38.262, 0.81", "40.5815, 9.14995, 37.526, 0.88", "40.0811, 10.7142, 36.7199, 0.81", "39.7084, 12.0381, 36.136, 0.81", "39.4092, 13.4467, 35.5966, 0.81", "39.2169, 15.0108, 35.0926, 0.66", "39.1606, 16.4003, 34.7345, 0.88", "39.1876, 17.6334, 34.4456, 1.18", "39.2384, 18.4408, 34.2668, 1.18", "39.3835, 20.0726, 33.9283, 0.81", "39.5917, 21.8219, 33.5659, 0.96", "39.764, 23.2531, 33.2347, 0.96", "39.9279, 24.4949, 32.8787, 1.11", "40.0735, 25.4933, 32.58, 1.11", "40.2405, 26.5545, 32.2718, 0.88", "40.476, 27.9426, 31.9492, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "44.7751, -35.224, 39.9395, 0.88", "46.2187, -37.3864, 42.8538, 0.88", "46.7528, -38.0961, 43.7107, 0.66", "47.5835, -39.2501, 45.0772, 0.74", "47.876, -39.7287, 45.6233, 1.03", "48.1262, -40.2318, 46.1381, 0.74", "48.4434, -41.0164, 46.8845, 0.96", "48.8758, -42.5142, 48.013, 1.03", "49.1992, -44.2117, 49.2865, 0.74", "49.4069, -45.7781, 50.4388, 1.03", "49.5262, -47.0921, 51.4451, 0.88", "49.6062, -48.4222, 52.5225, 0.81", "49.6249, -49.4449, 53.3554, 0.66", "49.6174, -50.7479, 54.3763, 0.66", "49.644, -52.2899, 55.5054, 0.88", "49.7457, -53.9494, 56.7253, 1.11", "49.9389, -55.6953, 58.0423, 0.96", "50.202, -57.3781, 59.2637, 0.96", "50.4366, -58.5187, 60.0419, 0.96", "50.8731, -60.2824, 61.178, 1.03", "51.3252, -62.0051, 62.2208, 0.81", "51.6383, -63.0456, 62.8054, 0.81", "51.9578, -63.9366, 63.2638, 0.66", "52.4744, -65.0292, 63.8559, 0.88", "53.2949, -66.4853, 64.7247, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.943, -54.1006, 13.0081, 0.29", "12.7062, -55.0744, 13.441, 0.29", "12.4821, -56.2064, 13.9121, 0.29", "12.3657, -56.9538, 14.2401, 0.81", "12.2203, -58.1665, 14.7704, 0.59", "12.1115, -59.4263, 15.3658, 0.44", "12.0625, -60.4686, 15.9081, 0.22", "12.0854, -61.2385, 16.3362, 0.22", "12.1903, -62.2104, 16.9223, 0.22", "12.2686, -62.8094, 17.3361, 0.74", "12.4123, -63.9038, 18.1598, 0.74", "12.5393, -64.8998, 18.9462, 0.96", "12.5957, -65.4711, 19.3773, 1.11", "12.6804, -66.7679, 20.2948, 0.37", "12.7456, -67.9052, 20.9827, 0.22", "12.7914, -68.6055, 21.3272, 0.66", "12.8479, -69.4131, 21.5967, 0.66", "12.9107, -70.1672, 21.7608, 0.66", "12.989, -70.9371, 21.8861, 0.29", "13.1288, -71.9027, 21.9852, 0.22", "13.3575, -73.0481, 22.1125, 0.66", "13.6097, -74.1916, 22.336, 0.88", "13.7874, -75.0203, 22.5649, 0.37", "14.01, -76.1809, 22.9544, 0.22", "14.1192, -76.8844, 23.2445, 0.59", "14.2226, -77.7656, 23.6588, 0.74", "14.3783, -79.3276, 24.4583, 0.15", "14.4309, -79.9203, 24.7666, 0.15", "14.4877, -80.6998, 25.1381, 0.37", "14.5847, -82.1489, 25.7171, 0.22", "14.6232, -82.6102, 25.8683, 0.66", "14.686, -83.1676, 26.0179, 1.11", "14.8087, -83.9888, 26.1909, 0.37", "15.0318, -85.1446, 26.4253, 0.15", "15.1996, -85.8897, 26.6052, 0.44", "15.5231, -87.2202, 26.9896, 0.15", "15.7893, -88.3144, 27.3644, 0.15", "15.9389, -88.9613, 27.6277, 0.81", "16.054, -89.4859, 27.8565, 1.18", "16.372, -91.2112, 28.6716, 0.15", "16.5136, -92.1846, 29.1375, 0.15", "16.5561, -92.6918, 29.385, 0.81", "16.5831, -93.5045, 29.8387, 0.81", "16.5832, -94.3018, 30.3329, 0.22", "16.555, -95.4386, 31.1114, 0.15", "16.5388, -95.83, 31.3852, 0.22", "16.4991, -96.8296, 32.1157, 0.15", "16.4512, -98.2937, 33.3224, 0.15", "16.4395, -98.7658, 33.7327, 0.59", "16.411, -99.9557, 34.8052, 0.15", "16.4022, -100.503, 35.276, 0.15", "16.3998, -101.215, 35.8354, 0.81", "16.4467, -102.818, 36.8801, 0.15", "16.4886, -103.587, 37.2782, 0.15", "16.5232, -104.107, 37.5086, 0.52", "16.5827, -104.838, 37.7568, 0.66", "16.6473, -105.734, 37.9933, 0.29", "16.7011, -106.813, 38.1616, 0.15", "16.71, -107.343, 38.1895, 0.15", "16.7003, -107.908, 38.2131, 0.59", "16.6643, -108.614, 38.202, 0.88", "16.5833, -109.484, 38.1447, 0.29", "16.477, -110.232, 38.0596, 0.22", "16.3092, -111.275, 37.906, 0.07", "16.2195, -111.961, 37.7619, 0.07", "16.1007, -113.146, 37.4695, 0.07", "16.0876, -113.42, 37.3964, 0.29", "16.1027, -114.191, 37.2065, 0.66", "16.1655, -115.17, 36.9946, 0.15", "16.2539, -116.289, 36.8045, 0.15", "16.3155, -117.061, 36.6808, 0.29", "16.3764, -117.988, 36.5637, 0.15", "16.4151, -118.797, 36.455, 0.37", "16.4295, -119.35, 36.3592, 0.37", "16.4211, -120.398, 36.1539, 0.22", "16.389, -121.284, 35.982, 0.44", "16.3477, -122.177, 35.7281, 0.96", "16.32, -122.777, 35.5039, 0.22", "16.2799, -124.004, 34.9655, 0.15", "16.2776, -124.257, 34.8511, 0.15", "16.3053, -125.273, 34.3487, 0.29", "16.3655, -126.43, 33.7277, 0.15", "16.4164, -127.039, 33.3646, 0.15", "16.4387, -127.292, 33.2109, 0.37", "16.4953, -127.964, 32.8221, 0.88", "16.6278, -129.389, 32.0547, 0.15", "16.6922, -130.128, 31.7, 0.15", "16.7409, -130.864, 31.4246, 0.15", "16.7589, -131.544, 31.2202, 0.66", "16.7534, -132.31, 31.0525, 0.22", "16.7233, -133.049, 30.9489, 0.22", "16.6708, -133.716, 30.918, 0.15", "16.624, -134.203, 30.9113, 0.15", "16.5219, -135.121, 30.8958, 0.66", "16.3269, -136.589, 30.8679, 0.15", "16.2498, -137.104, 30.8578, 0.15", "16.1812, -137.541, 30.8495, 0.22", "16.0932, -138.166, 30.8382, 0.15", "16.01, -138.801, 30.8281, 0.96", "15.8795, -139.787, 30.8157, 0.44", "15.7419, -140.834, 30.8078, 0.15", "15.6684, -141.46, 30.7814, 0.15", "15.6078, -142.013, 30.7082, 0.15", "15.5383, -142.638, 30.5789, 0.15", "15.4466, -143.361, 30.391, 0.44", "15.316, -144.234, 30.1368, 0.44", "15.1094, -145.394, 29.8435, 0.15", "14.8375, -146.882, 29.535, 0.15", "14.7103, -147.59, 29.4146, 0.44", "14.5373, -148.606, 29.2818, 0.22", "14.3821, -149.707, 29.2445, 0.22", "14.1751, -151.348, 29.3402, 0.07", "14.0514, -152.452, 29.5168, 0.07", "14.0118, -152.859, 29.6096, 0.29", "13.9469, -153.606, 29.7932, 0.96", "13.7948, -155.613, 30.3621, 0.15", "13.7315, -156.364, 30.5907, 0.15", "13.6511, -157.036, 30.752, 0.15", "13.5083, -157.954, 30.9776, 0.37", "13.4147, -158.469, 31.1063, 0.37", "13.1527, -159.666, 31.3893, 0.15", "12.9676, -160.345, 31.5482, 0.74", "12.4856, -161.872, 32.086, 0.15", "12.097, -162.887, 32.546, 0.15", "11.8369, -163.436, 32.8925, 0.59", "11.5373, -163.973, 33.3248, 0.22", "10.9675, -164.861, 34.1497, 0.15", "10.2422, -165.858, 35.2412, 0.15", "9.86285, -166.313, 35.819, 0.52", "9.03049, -167.162, 36.9652, 0.15", "8.45861, -167.663, 37.7707, 0.15", "8.21809, -167.856, 38.1199, 0.44", "7.76718, -168.192, 38.7627, 0.81", "7.35346, -168.508, 39.329, 0.81", "6.38859, -169.313, 40.7099, 0.15", "5.4256, -170.187, 42.0787, 0.15", "5.13876, -170.492, 42.5033, 0.15", "4.91538, -170.779, 42.8807, 0.66", "4.47485, -171.501, 43.7036, 0.22", "4.00724, -172.497, 44.8035, 0.15", "3.90078, -172.784, 45.1409, 0.22", "3.62129, -173.594, 46.1607, 0.15", "3.38641, -174.258, 47.0597, 0.44", "3.20547, -174.771, 47.7788, 0.88", "2.5619, -176.339, 50.0489, 0.15", "1.93871, -177.573, 51.826, 0.15", "1.55162, -178.238, 52.7777, 0.15", "1.21926, -178.726, 53.4605, 0.37", "0.902753, -179.139, 54.0065, 0.37", "0.0774399, -180.098, 55.2594, 0.07", "-0.563002, -180.787, 56.0059, 0.07", "-0.91214, -181.157, 56.3562, 0.15", "-1.70451, -181.981, 57.1242, 0.07", "-2.15264, -182.44, 57.5604, 0.29", "-2.76592, -183.068, 58.1632, 0.29", "-3.4924, -183.886, 58.911, 0.15", "-3.83626, -184.302, 59.2845, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.943, -54.1006, 13.0081, 0.22", "14.3705, -54.9391, 8.33856, 0.22", "14.7812, -55.2047, 7.16446, 0.22", "15.1346, -55.4685, 6.16202, 0.52", "15.4206, -55.7131, 5.31962, 0.88", "15.8589, -56.1581, 3.93215, 0.96", "16.2649, -56.6687, 2.47424, 0.74", "16.6121, -57.4098, 0.854361, 0.29", "16.7634, -57.9839, -0.250534, 0.37", "16.8229, -58.4512, -1.04035, 0.37", "16.8398, -58.8901, -1.73527, 0.74", "16.8447, -59.4753, -2.65178, 0.44", "16.8944, -60.4891, -4.35498, 0.44", "16.9754, -60.8283, -5.04519, 0.44", "17.1938, -61.2337, -6.00265, 0.22", "17.5931, -61.7586, -7.3136, 0.22", "17.9542, -62.182, -8.39042, 0.44", "18.2829, -62.6043, -9.40407, 0.59", "18.7492, -63.4576, -11.2859, 0.29", "18.8723, -63.9087, -12.2363, 0.22", "18.8551, -64.3564, -13.0737, 0.29", "18.7022, -64.9519, -14.0234, 0.44", "18.3723, -65.7496, -15.175, 0.74", "17.8688, -66.6724, -16.4059, 0.96", "17.6118, -67.075, -16.9176, 0.96", "17.0775, -67.8841, -17.9644, 0.37", "16.5647, -68.7098, -19.1034, 0.44", "16.2772, -69.2883, -19.962, 0.37", "16.1461, -69.7175, -20.6313, 0.22", "16.1331, -70.1587, -21.3761, 0.22", "16.2205, -70.4122, -21.9114, 0.29", "16.5007, -70.7241, -22.8335, 0.44", "16.8534, -70.969, -23.8227, 0.44", "17.1296, -71.1337, -24.5802, 0.66", "17.6092, -71.429, -25.9649, 0.81", "18.1336, -71.8248, -27.6926, 0.96", "18.5135, -72.2311, -29.2239, 0.96", "18.7623, -72.5828, -30.3932, 0.96", "18.8972, -72.8011, -31.1032, 0.66", "19.1063, -73.1544, -32.2287, 0.74", "19.3219, -73.5197, -33.3004, 0.74", "19.8018, -74.2345, -35.2984, 0.59", "20.3441, -74.9441, -37.3009, 0.29", "20.7595, -75.4311, -38.8276, 0.29", "21.0755, -75.7502, -39.9118, 0.29", "21.3783, -76.0183, -40.9011, 0.37", "21.8666, -76.4016, -42.4467, 0.52", "22.3053, -76.7314, -43.8456, 0.44", "22.9701, -77.3135, -46.1516, 0.44", "26.0316, -81.8147, -54.4085, 0.44", "28.5868, -87.442, -62.0495, 0.44", "31.4514, -92.0567, -70.3077, 0.44", "33.9932, -96.6202, -78.702, 0.44", "34.6615, -100.093, -87.9858, 0.44", "36.6863, -101.727, -97.6263, 0.44", "38.7426, -103.63, -107.205, 0.44", "42.0884, -106.434, -116.155, 0.44", "45.3555, -107.957, -125.469, 0.44", "47.4959, -107.84, -135.237, 0.44", "50.586, -106.716, -144.673, 0.44", "52.6372, -106.818, -154.46, 0.44", "54.8246, -107.971, -164.142, 0.44", "58.0574, -110.492, -173.226, 0.44", "61.7574, -112.844, -182.18, 0.44", "65.4951, -116.454, -190.641, 0.44", "68.6248, -120.395, -199.185, 0.44", "71.3828, -124.561, -207.739, 0.44", "75.2003, -127.569, -216.422, 0.44", "77.0731, -130.362, -225.795, 0.44", "80.0511, -134.219, -234.435, 0.44", "82.4468, -139.878, -242.101, 0.44", "86.1473, -145.622, -249.154, 0.44", "90.8081, -152.097, -254.795, 0.44", "94.8368, -158.673, -260.784, 0.44", "97.7055, -166.22, -266.136, 0.44", "102.021, -171.836, -272.951, 0.44", "106.084, -178.17, -279.199, 0.44", "110.73, -184.953, -284.436, 0.44", "115.803, -191.858, -289.065, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.87362, -151.091, 87.2717, 0.15", "-3.78695, -152.229, 87.8288, 0.15", "-3.74581, -153.05, 88.2994, 0.22", "-3.72428, -153.639, 88.6491, 0.22", "-3.69497, -154.528, 89.1932, 0.37", "-3.62935, -155.69, 90.0163, 0.15", "-3.44934, -157.601, 91.4996, 0.15", "-3.37816, -158.171, 92.0673, 0.15", "-3.29911, -158.715, 92.6876, 0.29", "-3.00542, -160.431, 94.8756, 0.15", "-2.75222, -161.565, 96.5603, 0.15", "-2.59809, -162.06, 97.4161, 0.15", "-2.05305, -163.292, 99.827, 0.15", "-1.80404, -163.732, 100.926, 0.15", "-1.51612, -164.163, 102.241, 0.22", "-1.10944, -164.701, 104.113, 0.44", "-0.841648, -165.047, 105.33, 0.44", "-0.327322, -165.699, 107.55, 0.15", "0.82196, -167.027, 111.962, 0.22", "1.55152, -167.825, 114.601, 0.22", "1.80627, -168.093, 115.42, 0.22", "2.27863, -168.596, 116.747, 0.22", "2.78699, -169.113, 117.879, 0.22", "3.60111, -169.885, 119.195, 0.22", "4.19876, -170.431, 119.893, 0.22", "5.03658, -171.243, 120.757, 0.07", "6.28164, -172.509, 122.099, 0.07", "7.73765, -174.026, 123.649, 0.07", "8.85464, -175.207, 124.862, 0.07", "10.436, -176.986, 126.587, 0.07", "11.7556, -178.564, 128.143, 0.07", "12.9219, -180.129, 129.864, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.87362, -151.091, 87.2717, 0.22", "-4.27334, -153.282, 86.142, 0.22", "-4.60174, -155.162, 85.7112, 0.15", "-4.8441, -156.592, 85.6692, 0.15", "-5.0771, -157.973, 85.7764, 0.15", "-5.31666, -159.332, 85.9466, 0.15", "-5.8205, -162.339, 86.365, 0.15", "-6.02643, -163.718, 86.7185, 0.15", "-6.16153, -164.594, 86.9906, 0.37", "-6.3664, -165.751, 87.2892, 0.59", "-6.73864, -167.716, 87.6497, 0.22", "-7.08205, -169.359, 87.8086, 0.22", "-7.38666, -170.664, 87.7455, 0.15", "-7.68992, -171.802, 87.6259, 0.15", "-8.23127, -173.569, 87.4167, 0.15", "-8.50589, -174.361, 87.2707, 0.15", "-8.80803, -175.126, 87.0385, 0.29", "-9.07361, -175.742, 86.8045, 0.29", "-9.52464, -176.83, 86.3294, 0.44", "-9.8517, -177.712, 86.0307, 0.44", "-10.4038, -179.409, 85.7104, 0.22", "-10.8602, -181.002, 85.565, 0.29", "-11.2523, -182.649, 85.5658, 0.07", "-11.5076, -183.985, 85.683, 0.07", "-11.9008, -186.82, 86.0382, 0.22", "-12.0305, -188.098, 86.354, 0.22", "-12.0906, -188.917, 86.6757, 0.22", "-12.1091, -189.556, 87.0035, 0.44", "-12.1114, -190.238, 87.3839, 0.66", "-12.1077, -191.99, 88.3682, 0.22", "-12.0806, -193.99, 89.3851, 0.22", "-12.0599, -194.946, 89.867, 0.07", "-11.9993, -196.166, 90.4071, 0.07", "-11.9082, -197.195, 90.7934, 0.15", "-11.8015, -198.006, 91.0402, 0.15", "-11.5846, -199.276, 91.3298, 0.37", "-11.3068, -200.594, 91.4092, 0.66", "-10.8545, -202.537, 91.348, 0.15", "-10.5292, -203.884, 91.2062, 0.22", "-10.2217, -205.136, 91.0282, 0.22", "-9.96458, -206.234, 90.8322, 0.15", "-9.8033, -207.008, 90.6754, 0.15", "-9.69169, -207.764, 90.5466, 0.59", "-9.64909, -208.607, 90.4548, 0.59", "-9.73281, -210.282, 90.3215, 0.22", "-9.79809, -210.783, 90.2717, 0.22", "-9.93878, -211.607, 90.185, 0.44", "-10.1119, -212.785, 90.0704, 0.66", "-10.2578, -214.093, 89.9338, 0.29", "-10.3278, -215.162, 89.8205, 0.66", "-10.3205, -216.515, 89.676, 0.52", "-10.1947, -218.458, 89.4543, 0.29", "-9.98608, -220.186, 89.1738, 0.22", "-9.76484, -221.446, 88.9037, 0.29", "-9.49697, -222.633, 88.6041, 0.37", "-9.13026, -224.032, 88.2691, 0.22", "-8.93066, -224.754, 88.1174, 0.22", "-8.43382, -226.55, 87.7293, 0.29", "-8.14066, -227.755, 87.4808, 0.52", "-7.98323, -228.492, 87.3514, 0.81", "-7.70446, -229.993, 87.151, 0.29", "-7.48995, -231.239, 87.1527, 0.22", "-7.39936, -231.741, 87.2232, 0.22", "-7.29138, -232.343, 87.3878, 0.44", "-7.15391, -233.218, 87.6612, 0.74", "-7.00264, -234.133, 87.92, 0.29", "-6.66054, -235.9, 88.3279, 0.15", "-6.56557, -236.329, 88.4179, 0.15", "-6.37294, -237.071, 88.5462, 0.15", "-6.04979, -238.143, 88.6929, 0.44", "-5.51383, -239.78, 88.9182, 0.22", "-5.15588, -240.896, 89.0554, 0.22", "-4.70931, -242.33, 89.1831, 0.52", "-4.20805, -243.981, 89.2717, 0.15", "-3.88746, -245.136, 89.2534, 0.29", "-3.56134, -246.531, 89.0838, 0.59", "-3.37437, -247.689, 88.7848, 0.74", "-3.33148, -248.126, 88.6196, 0.74", "-3.30106, -249.817, 87.804, 0.22", "-3.45101, -251.576, 86.819, 0.15", "-3.63994, -252.804, 86.0293, 0.15", "-3.85376, -253.858, 85.3117, 0.29", "-4.05418, -254.692, 84.7645, 0.74", "-4.27456, -255.584, 84.253, 0.66", "-4.65679, -257.239, 83.4737, 0.15", "-4.96075, -258.739, 82.8008, 0.15", "-5.13511, -259.84, 82.3284, 0.22", "-5.27248, -261.1, 81.7762, 0.52", "-5.33672, -262.618, 81.0924, 0.29", "-5.25964, -264.377, 80.3474, 0.15", "-5.06714, -265.745, 79.7882, 0.15", "-4.96799, -266.204, 79.6014, 0.15", "-4.77953, -266.918, 79.2895, 0.81", "-4.55356, -267.868, 78.879, 0.29", "-4.26504, -269.514, 78.1653, 0.15", "-4.14173, -270.753, 77.6138, 0.59", "-4.12376, -271.639, 77.2213, 0.59", "-4.1751, -272.392, 76.8262, 0.59", "-4.39018, -273.692, 75.984, 1.18", "-4.66379, -274.708, 75.0909, 0.74", "-5.1694, -276.209, 73.4887, 0.22", "-5.32889, -276.66, 72.9369, 0.29", "-5.65136, -277.61, 71.6023, 0.37", "-5.94721, -278.55, 70.009, 0.37", "-6.29659, -279.715, 67.5832, 0.37", "-6.4237, -280.072, 66.7222, 0.37", "-6.57974, -280.492, 65.5941, 0.37", "-6.61294, -280.618, 65.2411, 0.37", "-6.6313, -280.851, 64.5847, 0.37", "-6.59832, -281.173, 63.7854, 0.37", "-6.53368, -281.664, 62.7611, 0.44", "-6.50718, -282.158, 61.8436, 0.52", "-6.50486, -283.136, 60.4163, 0.52", "-6.54016, -284.045, 59.258, 0.37", "-6.55469, -284.512, 58.7449, 0.22", "-6.5723, -285.035, 58.242, 0.22", "-6.63247, -285.788, 57.6314, 0.29", "-6.80628, -286.871, 56.964, 0.81", "-7.13036, -288.464, 56.3085, 0.15", "-7.3034, -289.199, 56.0942, 0.15", "-7.45626, -289.867, 55.9074, 0.22", "-7.62641, -290.743, 55.6841, 0.29", "-7.73606, -291.379, 55.5272, 0.81", "-8.00588, -292.908, 55.0982, 0.22", "-8.21955, -294.123, 54.711, 0.22", "-8.39926, -295.152, 54.2603, 0.22", "-8.51306, -296.0, 53.7582, 0.52", "-8.53209, -296.236, 53.5732, 0.52", "-8.57932, -297.447, 52.356, 0.22", "-8.59538, -298.225, 51.421, 0.37", "-8.58487, -298.921, 50.48, 0.66", "-8.55069, -299.806, 49.23, 0.22", "-8.50967, -300.64, 48.0129, 0.22", "-8.44583, -301.403, 46.9512, 0.22", "-8.39211, -301.782, 46.4608, 0.37", "-8.19824, -302.893, 45.1622, 1.11", "-7.96462, -304.141, 43.8871, 0.44", "-7.73466, -305.274, 42.8295, 0.66", "-7.53736, -306.06, 42.1385, 0.59", "-7.33956, -306.679, 41.5834, 0.52", "-7.08146, -307.333, 40.9475, 0.29", "-6.63087, -308.351, 39.857, 0.15", "-6.13948, -309.457, 38.6189, 0.15", "-5.94701, -309.936, 38.0583, 0.52", "-5.62584, -311.02, 36.7771, 0.74", "-5.50495, -311.586, 36.1341, 0.74", "-5.27241, -312.99, 34.6451, 0.37", "-5.14827, -314.229, 33.5387, 0.37", "-5.09028, -315.446, 32.6834, 0.59", "-5.09238, -316.691, 31.9978, 0.88", "-5.11412, -317.348, 31.7341, 0.88", "-5.17683, -318.703, 31.3093, 0.37", "-5.21724, -320.084, 30.9948, 0.66", "-5.18145, -321.323, 30.6965, 0.66", "-5.06011, -322.667, 30.3813, 1.18", "-4.89958, -323.684, 30.1334, 0.81", "-4.50281, -325.587, 29.6449, 0.44", "-4.09877, -327.111, 29.247, 0.37", "-3.36328, -329.208, 28.6413, 0.29", "-3.21055, -329.565, 28.5181, 0.52", "-2.88574, -330.204, 28.2709, 0.96", "-2.31335, -331.218, 27.7889, 0.29", "-1.95615, -331.786, 27.4932, 0.29", "-1.56201, -332.402, 27.1468, 0.59", "-0.879247, -333.534, 26.6751, 0.59", "-0.504781, -334.172, 26.4553, 0.59", "0.530859, -335.985, 25.9452, 0.29", "1.20538, -337.202, 25.7057, 0.22", "1.54644, -337.873, 25.6584, 0.88", "2.48799, -340.0, 25.8859, 0.37", "2.73418, -340.664, 26.0657, 0.66", "2.8914, -341.178, 26.3016, 0.66", "3.21407, -342.398, 27.0967, 0.44", "3.40506, -343.232, 27.7994, 0.44", "3.61773, -344.187, 28.8649, 0.44", "3.77712, -344.927, 29.8455, 0.81", "4.1418, -346.237, 31.7895, 0.22", "4.3535, -346.834, 32.7627, 0.37", "4.80335, -347.824, 34.5118, 0.37", "5.42584, -348.9, 36.4427, 0.37", "5.75429, -349.348, 37.2342, 0.66", "6.36123, -350.025, 38.5059, 0.22", "6.74733, -350.386, 39.1858, 0.22", "7.10254, -350.67, 39.8222, 0.74", "7.47765, -350.908, 40.4961, 0.74", "8.27412, -351.272, 42.1793, 0.22", "8.95793, -351.466, 43.9946, 0.22", "9.26664, -351.52, 45.0719, 0.37", "9.98128, -351.607, 48.1192, 0.37", "10.1551, -351.622, 49.1304, 0.74", "10.4704, -351.614, 51.7407, 0.74", "10.6394, -351.592, 53.8056, 0.52", "10.7811, -351.616, 56.2146, 0.52", "10.8165, -351.65, 57.0587, 0.52", "10.9044, -351.795, 59.5652, 0.52", "10.9405, -351.894, 60.8642, 0.52", "11.0062, -352.1, 63.1423, 0.52", "11.0261, -352.17, 63.8905, 0.52", "11.2323, -352.623, 69.3613, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.2353, 24.0476, -6.96773, 0.96", "-14.627, 25.3903, -7.13842, 0.96", "-15.7778, 26.067, -7.19559, 0.96", "-17.0931, 26.9217, -7.18819, 0.88", "-18.3155, 27.7802, -7.13253, 0.88", "-19.5251, 28.6855, -6.99137, 0.81", "-20.7674, 29.6838, -6.73487, 0.66", "-21.6075, 30.4389, -6.37079, 1.03", "-22.572, 31.3515, -5.74003, 1.18", "-22.9164, 31.6745, -5.43817, 1.33", "-23.8671, 32.5227, -4.48389, 1.03", "-24.9291, 33.4085, -3.4308, 0.96", "-26.0574, 34.2049, -2.36098, 0.96", "-27.6383, 35.0737, -1.01645, 1.33", "-28.9586, 35.6174, -0.0106866, 1.03", "-29.616, 35.8048, 0.472409, 1.03", "-31.3452, 36.0777, 1.70812, 0.74", "-32.3444, 36.1405, 2.44412, 0.96", "-33.1195, 36.1583, 3.0425, 1.55", "-34.4541, 36.1926, 4.19128, 1.25", "-35.8994, 36.2615, 5.71163, 1.03", "-36.8597, 36.3325, 6.96224, 0.74", "-37.4571, 36.412, 7.86771, 0.74", "-38.0844, 36.5175, 8.89602, 1.11", "-38.7096, 36.6328, 9.95095, 1.11", "-39.9909, 36.8834, 12.0477, 0.96", "-41.2214, 37.1746, 13.9754, 1.18", "-42.1105, 37.4369, 15.3136, 1.55", "-42.744, 37.6638, 16.2014, 1.55", "-43.4372, 37.9656, 17.0586, 1.18", "-44.1192, 38.3457, 17.7186, 0.88", "-45.0396, 38.9974, 18.4416, 0.66", "-46.0001, 39.7745, 19.1894, 0.96", "-46.6752, 40.3819, 19.7877, 1.18", "-47.3758, 41.1063, 20.5199, 1.18", "-48.1861, 42.0868, 21.5761, 1.11", "-49.1595, 43.3994, 23.0709, 1.18", "-50.0205, 44.6524, 24.5562, 1.03", "-50.6693, 45.6121, 25.7979, 1.03", "-51.3202, 46.5902, 27.1998, 0.88", "-51.9494, 47.5997, 28.7024, 1.03", "-52.4436, 48.4427, 29.9818, 0.74", "-52.9243, 49.3209, 31.2686, 0.66", "-53.4777, 50.4035, 32.8152, 0.59", "-54.1209, 51.6141, 34.6248, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.2353, 24.0476, -6.96773, 1.03", "-13.4822, 24.4532, -9.41931, 1.03", "-14.8256, 24.8351, -11.7498, 1.03", "-16.0488, 25.1406, -13.6463, 1.18", "-17.5204, 25.464, -15.7642, 1.18", "-18.5499, 25.6792, -17.1762, 1.18", "-19.7167, 25.9247, -18.763, 1.03", "-20.8301, 26.1623, -20.1241, 0.96", "-21.6344, 26.3489, -21.0348, 1.18", "-22.531, 26.5726, -22.0252, 1.03", "-23.3672, 26.7888, -22.9395, 1.03", "-24.4376, 27.0825, -24.0952, 1.03", "-25.2702, 27.3198, -24.9672, 1.18", "-26.5855, 27.711, -26.2046, 1.18", "-27.5086, 28.007, -26.9894, 1.18", "-28.5997, 28.381, -27.865, 1.11", "-29.7509, 28.783, -28.7131, 1.18", "-30.4682, 29.0508, -29.1837, 0.96", "-31.4948, 29.4979, -29.7978, 0.81", "-32.7736, 30.1756, -30.5122, 1.03", "-34.6502, 31.3348, -31.501, 1.25", "-35.2441, 31.7429, -31.8043, 1.25", "-36.1376, 32.379, -32.2328, 0.88", "-37.3815, 33.2417, -32.7974, 0.88", "-38.8037, 34.1528, -33.3915, 1.11", "-40.0005, 34.8333, -33.8058, 1.11", "-41.5079, 35.6068, -34.2445, 0.96", "-42.7645, 36.1922, -34.6072, 1.03", "-43.9759, 36.7057, -34.9658, 1.03", "-45.2335, 37.1798, -35.3383, 0.96", "-46.4021, 37.5901, -35.6616, 0.96", "-47.656, 38.011, -36.0291, 0.96", "-49.231, 38.5064, -36.4744, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.0378, 72.4365, -37.5874, 1.18", "-14.2145, 74.4576, -37.4214, 1.18", "-14.2515, 75.837, -37.3358, 0.96", "-14.2193, 76.7516, -37.3353, 0.96", "-14.1617, 77.5838, -37.396, 0.96", "-14.0463, 79.1066, -37.6002, 0.96", "-13.9712, 80.5981, -37.8692, 1.03", "-13.9061, 81.6856, -38.1478, 1.11", "-13.8295, 82.9854, -38.595, 0.88", "-13.8264, 83.9854, -38.9975, 0.88", "-13.9066, 85.0112, -39.416, 0.88", "-14.078, 86.2804, -39.9283, 1.03", "-14.2251, 87.1386, -40.2535, 1.03", "-14.5683, 88.8839, -40.8095, 1.18", "-14.918, 90.6994, -41.2908, 0.88", "-15.3017, 92.9287, -41.7874, 0.81", "-15.4153, 93.7489, -41.9406, 0.96", "-15.5137, 94.5898, -42.0866, 0.96", "-15.7195, 96.2724, -42.3787, 0.88", "-15.8674, 97.4654, -42.5711, 0.88", "-16.0331, 98.786, -42.8222, 1.11", "-16.3051, 100.824, -43.2807, 1.25", "-16.4992, 102.127, -43.5983, 1.03", "-16.7202, 103.546, -43.9757, 1.03", "-16.8909, 104.65, -44.2892, 1.18", "-17.1906, 106.588, -44.9163, 0.96", "-17.4025, 108.148, -45.4756, 1.11", "-17.5169, 109.456, -45.9714, 1.11", "-17.5358, 110.9, -46.496, 1.18", "-17.4298, 112.286, -46.9764, 0.74", "-17.1978, 113.649, -47.4246, 0.88", "-16.927, 114.618, -47.7044, 1.25", "-16.4077, 115.929, -48.0319, 1.33", "-15.7204, 117.274, -48.2764, 0.96", "-15.0239, 118.395, -48.387, 0.74", "-14.3427, 119.366, -48.4126, 0.81", "-13.7312, 120.167, -48.3336, 0.81", "-12.9422, 121.175, -48.1575, 0.74", "-12.2917, 122.042, -47.9309, 1.25", "-11.4399, 123.223, -47.5373, 1.4", "-10.8378, 124.156, -47.1614, 1.4", "-9.72884, 126.067, -46.3215, 0.88", "-9.49404, 126.511, -46.1105, 0.88", "-8.92477, 127.696, -45.5298, 0.88", "-8.55202, 128.548, -45.1366, 0.88", "-7.99732, 129.989, -44.5722, 0.96", "-7.69914, 130.879, -44.3121, 0.96", "-7.31797, 132.213, -44.0655, 1.55", "-7.20505, 132.663, -43.9935, 1.55", "-6.78146, 134.458, -43.8289, 1.18", "-6.40816, 136.288, -43.7813, 1.25", "-6.17975, 137.757, -43.8719, 1.62", "-6.10934, 138.516, -43.9846, 1.62", "-6.03419, 140.59, -44.4441, 0.96", "-6.054, 142.196, -44.9175, 0.96", "-6.12069, 143.253, -45.3166, 1.33", "-6.28511, 144.797, -46.0417, 1.11", "-6.46964, 146.281, -46.9108, 1.33", "-6.60587, 147.337, -47.6257, 1.33", "-6.78447, 148.649, -48.6744, 1.47", "-6.89741, 149.462, -49.3456, 1.62", "-7.0865, 150.952, -50.6171, 1.03", "-7.22651, 152.227, -51.6962, 0.96", "-7.29402, 153.088, -52.3978, 0.88", "-7.35414, 154.445, -53.5088, 0.81", "-7.37599, 155.114, -54.0022, 1.18", "-7.451, 157.082, -55.2862, 0.96", "-7.56029, 158.905, -56.3051, 0.96", "-7.69273, 160.433, -56.9614, 0.74", "-7.86379, 162.058, -57.4904, 0.59", "-8.11793, 164.172, -57.9554, 0.59", "-8.34181, 165.778, -58.223, 0.52", "-8.50955, 166.832, -58.3272, 0.74", "-8.9167, 168.897, -58.4535, 1.03", "-9.16786, 169.945, -58.4778, 1.11", "-9.48047, 171.182, -58.4707, 0.74", "-9.91158, 172.917, -58.4799, 0.66", "-10.1386, 173.845, -58.5021, 0.52", "-10.3845, 174.91, -58.5756, 0.22", "-10.7918, 176.62, -58.8478, 0.15", "-10.9276, 177.164, -58.9353, 0.22", "-12.4906, 186.199, -61.603, 0.22", "-12.8502, 194.621, -66.2159, 0.22", "-13.3448, 203.499, -69.7396, 0.22", "-15.2817, 212.353, -72.8037, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-14.0378, 72.4365, -37.5874, 0.66", "-13.2839, 73.0262, -39.8719, 0.66", "-12.7751, 73.4242, -41.4137, 0.59", "-12.2639, 73.824, -42.9627, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "40.476, 27.9426, 31.9492, 0.88", "41.4971, 29.006, 31.321, 0.88", "42.3646, 29.9489, 30.7012, 0.59", "43.3764, 31.0265, 29.9767, 0.59", "44.1251, 31.7435, 29.4884, 0.59", "44.8064, 32.3276, 29.046, 0.59", "45.5411, 32.8997, 28.55, 0.81", "46.372, 33.4485, 27.9315, 0.81", "47.0305, 33.786, 27.4486, 0.81", "48.0656, 34.1794, 26.7419, 0.52", "49.3241, 34.5409, 25.895, 0.52", "50.2935, 34.7538, 25.2304, 0.52", "51.1864, 34.9231, 24.6262, 0.52", "51.8206, 35.0597, 24.2102, 0.52", "52.7699, 35.2993, 23.5435, 0.44", "53.9513, 35.6403, 22.6684, 0.59", "54.9544, 35.9253, 21.9731, 0.44", "55.5657, 36.0828, 21.5435, 0.66", "56.4528, 36.2745, 20.9303, 0.37", "57.6058, 36.4502, 20.1197, 0.37", "58.7312, 36.5161, 19.3762, 0.59", "59.5759, 36.5024, 18.8305, 1.11", "61.0575, 36.444, 17.8207, 1.11", "62.2062, 36.4038, 17.0063, 0.66", "63.4526, 36.4172, 16.1101, 0.52", "64.3526, 36.5084, 15.4348, 0.29", "65.3114, 36.7495, 14.6374, 0.29", "66.2023, 37.17, 13.7077, 0.59", "66.6559, 37.5117, 13.1352, 0.59", "67.3196, 38.1923, 12.1566, 0.37", "67.9185, 38.9145, 11.1923, 0.37", "68.3235, 39.4211, 10.509, 0.59", "69.1896, 40.4354, 9.10438, 1.03", "69.8174, 41.0826, 8.15263, 0.88", "70.371, 41.5923, 7.37403, 0.44", "71.2332, 42.3002, 6.18594, 0.44", "71.6997, 42.6417, 5.60511, 0.44", "72.1183, 42.8938, 5.12548, 0.66", "72.4939, 43.0696, 4.75837, 0.66", "73.1109, 43.2925, 4.1671, 0.44", "74.6372, 43.7176, 2.75529, 0.44", "75.0801, 43.8072, 2.37065, 0.81", "75.7857, 43.9033, 1.7293, 1.03", "76.7478, 43.9564, 0.709132, 0.66", "77.4601, 43.9405, -0.210716, 0.66", "78.2679, 43.8578, -1.58173, 0.52", "78.8991, 43.7244, -3.03706, 0.37", "79.3564, 43.5592, -4.54317, 0.44", "79.8649, 43.2625, -6.94133, 0.52", "80.1578, 43.0025, -8.80427, 0.52", "80.5003, 42.6444, -11.1255, 0.52", "80.7859, 42.3391, -13.0711, 0.81", "81.053, 42.1184, -14.6234, 1.03", "81.4033, 41.969, -16.0369, 1.03", "81.8032, 41.925, -17.0351, 0.81", "82.5862, 41.9694, -18.3772, 0.59", "83.3275, 42.098, -19.3094, 0.59", "83.8982, 42.2525, -19.9071, 0.44", "85.0787, 42.617, -21.0384, 0.44", "85.9542, 42.8851, -21.8164, 0.37", "86.6057, 43.0673, -22.349, 0.37", "87.3647, 43.239, -22.8922, 0.96", "88.8244, 43.4717, -23.7885, 0.66", "89.7924, 43.5903, -24.3389, 0.66", "90.782, 43.6968, -24.9135, 0.88", "92.0436, 43.858, -25.8014, 0.74", "93.118, 44.0574, -26.785, 0.74", "94.259, 44.3891, -28.1027, 0.74", "95.0279, 44.7514, -29.2089, 0.59", "96.0581, 45.4785, -31.0039, 0.81", "96.9291, 46.3562, -32.8674, 0.96", "97.6013, 47.3017, -34.6358, 0.96", "97.9038, 47.8722, -35.5222, 0.66", "98.2087, 48.5345, -36.3704, 0.59", "98.4562, 49.0187, -36.9331, 0.44", "98.921, 49.8474, -37.7465, 0.88", "99.1706, 50.2213, -38.1382, 0.88", "99.7398, 50.8633, -39.1609, 0.29", "100.472, 51.3924, -40.9413, 0.29", "101.219, 51.6622, -43.27, 0.29", "101.422, 51.6943, -43.9996, 0.88", "101.903, 51.7134, -45.9344, 0.88", "102.25, 51.7407, -47.5119, 0.88", "102.475, 51.7973, -48.8148, 0.88", "102.667, 52.0292, -50.4617, 0.88", "102.703, 52.2288, -51.0273, 0.88", "102.716, 52.6391, -51.6198, 0.88", "102.598, 53.5676, -52.2854, 0.52", "102.408, 54.4057, -52.763, 0.52", "102.192, 55.1366, -53.1871, 1.03", "101.978, 55.8507, -53.6471, 1.03", "101.765, 56.634, -54.231, 0.81", "101.511, 57.8094, -55.2313, 0.44", "101.386, 58.8112, -56.176, 0.52", "101.349, 59.6649, -57.0519, 0.52", "101.341, 60.585, -58.1156, 0.66", "101.318, 61.0126, -58.7234, 0.52", "101.239, 61.609, -59.7002, 0.66", "101.1, 62.2531, -60.794, 0.88", "100.785, 63.2427, -62.4275, 0.59", "100.514, 63.9364, -63.5307, 0.59", "99.9315, 65.2866, -65.7258, 0.52", "99.7132, 65.8143, -66.5913, 0.52", "99.5925, 66.2557, -67.2816, 0.52", "99.5717, 66.9574, -68.2018, 0.52", "99.8287, 67.7245, -68.8447, 0.44", "100.277, 68.5905, -69.2839, 0.74", "100.56, 69.0799, -69.4419, 0.81", "101.398, 70.4161, -69.8346, 0.59", "101.985, 71.2845, -70.1351, 0.66", "102.738, 72.3996, -70.5235, 0.59", "103.484, 73.5888, -70.9122, 0.59", "104.01, 74.5169, -71.1749, 0.66", "104.554, 75.5677, -71.4601, 0.52", "105.313, 77.1626, -71.8415, 0.81", "110.858, 80.6648, -79.3019, 0.81", "115.469, 83.8603, -87.513, 0.81", "119.189, 86.5036, -96.3687, 0.81", "121.259, 90.0651, -105.405, 0.81", "123.608, 95.2733, -113.432, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "40.476, 27.9426, 31.9492, 0.81", "40.1027, 28.7264, 31.8265, 0.81", "39.6675, 29.6911, 31.7168, 0.74", "39.2656, 30.5928, 31.7133, 0.59", "38.6901, 31.942, 31.776, 0.37", "38.2831, 32.9932, 31.892, 0.44", "37.9282, 34.0084, 32.0372, 0.44", "37.6096, 35.0517, 32.2355, 0.74", "37.1684, 36.717, 32.6193, 0.44", "37.0116, 37.5186, 32.8258, 0.52", "36.8658, 38.7621, 33.1693, 0.66", "36.8292, 39.4507, 33.3383, 0.44", "36.8157, 40.3581, 33.5162, 0.44", "36.8329, 41.2207, 33.6414, 0.37", "36.904, 42.4219, 33.7265, 0.37", "36.977, 43.3961, 33.7653, 0.44", "37.045, 44.1266, 33.7719, 0.22", "37.1217, 44.7841, 33.7828, 0.22", "37.2312, 45.6256, 33.8023, 0.29", "37.3498, 46.5343, 33.8025, 0.74", "37.4571, 47.4114, 33.7827, 0.59", "37.5553, 48.2447, 33.7472, 0.44", "37.6661, 49.0032, 33.6417, 0.22", "37.7847, 49.6052, 33.5129, 0.22", "37.9666, 50.3835, 33.3447, 0.22", "38.1568, 51.1025, 33.1943, 0.37", "38.295, 51.572, 33.0779, 0.37", "38.8042, 53.249, 32.6322, 0.74", "39.1382, 54.3527, 32.3144, 0.22", "39.493, 55.5735, 31.966, 0.22", "39.7307, 56.488, 31.7015, 0.44", "39.9507, 57.6063, 31.2996, 0.29", "40.0455, 58.2673, 30.9788, 0.66", "40.1076, 59.0112, 30.5588, 0.66", "40.1168, 59.7353, 30.0995, 0.88", "40.0927, 60.5586, 29.5664, 0.88", "40.0574, 62.125, 28.6323, 0.59", "40.1017, 63.6315, 27.8607, 0.44", "40.1743, 64.5318, 27.4309, 0.44", "40.3213, 65.8446, 26.884, 0.52", "40.4542, 66.8159, 26.4925, 0.59", "40.6668, 68.1584, 25.9653, 0.44", "40.8877, 69.3921, 25.5129, 0.22", "41.0674, 70.3769, 25.1261, 0.44", "41.2316, 71.2761, 24.7216, 0.74", "41.4802, 72.6746, 24.0562, 1.11", "41.6668, 74.0107, 23.4173, 0.96", "41.737, 74.7746, 23.0667, 0.96", "41.836, 76.4612, 22.3528, 0.59", "41.8756, 77.5237, 21.9786, 0.37", "41.9114, 78.7463, 21.6788, 0.22", "41.9069, 79.5299, 21.5956, 0.66", "41.8855, 80.2222, 21.5586, 0.74", "41.8602, 80.9905, 21.5199, 0.52", "41.8254, 82.0797, 21.4412, 0.59", "41.8004, 83.5358, 21.2544, 0.66", "41.7993, 84.8061, 21.0423, 0.29", "41.8058, 86.3008, 20.7612, 0.29", "41.8229, 87.3815, 20.5092, 0.37", "41.8769, 88.8353, 20.1214, 0.44", "41.9444, 89.9768, 19.7517, 0.52", "42.0095, 91.0927, 19.3237, 0.66", "42.0784, 92.1164, 18.9361, 0.66", "42.1322, 93.1538, 18.5499, 0.66", "42.1687, 94.1102, 18.1808, 0.96", "42.2606, 95.8732, 17.4612, 0.44", "42.3362, 96.8993, 16.9919, 0.44", "42.4428, 97.8358, 16.5157, 0.59", "42.6657, 99.2118, 15.7529, 0.22", "42.7898, 99.8471, 15.3965, 0.22", "42.9054, 100.369, 15.0963, 0.22", "42.9967, 100.704, 14.9105, 0.22", "43.1745, 101.303, 14.5967, 0.22", "43.3104, 101.78, 14.3466, 0.22", "43.476, 102.409, 14.0259, 0.66", "43.6827, 103.305, 13.5623, 0.66", "43.8574, 104.277, 13.0874, 0.66", "43.9474, 104.922, 12.7968, 0.37", "44.0498, 105.962, 12.346, 0.22", "44.1367, 107.093, 11.9648, 0.44", "44.1861, 107.888, 11.7929, 0.44", "44.2551, 108.804, 11.7539, 0.44", "44.3479, 109.981, 12.0345, 0.22", "44.4399, 111.094, 12.4238, 0.29", "44.5892, 113.038, 13.162, 0.44", "44.6808, 114.323, 13.5958, 0.66", "44.7809, 115.599, 13.8606, 0.66", "44.98, 117.646, 13.898, 0.29", "45.1889, 119.443, 13.4805, 0.37", "45.3439, 120.912, 12.7624, 0.52", "45.4142, 122.138, 11.8571, 0.74", "45.4468, 123.441, 10.6843, 0.74", "45.4599, 124.295, 9.83819, 0.74", "45.4861, 125.604, 8.46463, 0.52", "45.5176, 126.745, 7.36928, 0.59", "45.5536, 128.567, 5.77328, 0.22", "45.5659, 129.327, 5.14849, 0.22", "45.5713, 130.217, 4.46239, 0.59", "45.5619, 131.506, 3.45862, 0.96", "45.5533, 132.835, 2.49903, 0.37", "45.5798, 133.828, 1.83234, 0.44", "45.6605, 135.153, 0.982871, 0.44", "45.752, 136.279, 0.267507, 0.44", "45.8548, 137.176, -0.310697, 0.44", "46.0844, 138.518, -1.16997, 0.22", "46.3971, 139.965, -2.11166, 0.22", "46.5232, 140.439, -2.41007, 0.22", "46.7675, 141.276, -2.88624, 0.59", "47.2287, 142.777, -3.64889, 0.29", "47.5199, 143.823, -4.13647, 0.29", "47.767, 144.971, -4.64773, 0.52", "47.9104, 146.012, -5.06458, 0.88", "47.972, 146.789, -5.36483, 0.88", "48.0222, 147.852, -5.74226, 0.59", "48.1011, 149.234, -6.16551, 0.22", "48.1789, 149.948, -6.38407, 0.29", "48.2904, 150.552, -6.58449, 0.29", "48.4706, 151.254, -6.82063, 0.81", "48.7798, 152.193, -7.13973, 0.88", "49.1143, 153.028, -7.40555, 0.59", "49.5918, 154.103, -7.7448, 0.59", "50.1458, 155.361, -8.13947, 0.29", "50.8283, 157.012, -8.67422, 0.52", "51.2097, 158.047, -9.06599, 0.59", "51.5262, 159.134, -9.53841, 0.59", "51.7058, 159.941, -9.93396, 0.74", "51.8014, 160.515, -10.2658, 0.74", "51.9288, 161.583, -10.9911, 0.66", "52.0025, 162.575, -11.7479, 0.66", "52.0463, 163.486, -12.4452, 0.74", "52.1062, 164.728, -13.2645, 0.52", "52.1716, 165.594, -13.6618, 0.59", "52.2848, 166.548, -13.8622, 0.44", "52.4298, 167.515, -13.9315, 0.59", "52.5536, 168.275, -13.9537, 0.37", "52.7667, 170.027, -14.0832, 0.74", "52.7775, 171.165, -14.3167, 1.03", "52.6521, 172.457, -14.8396, 0.44", "52.2594, 174.372, -16.2369, 0.59", "52.027, 175.338, -17.1545, 1.18", "51.7108, 176.532, -18.439, 0.37", "51.3513, 177.672, -19.8115, 0.37", "51.0308, 178.536, -20.9375, 0.81", "50.5078, 179.931, -22.7643, 0.81", "50.2052, 180.827, -23.8198, 0.66", "49.9539, 181.831, -24.8877, 0.37", "49.7891, 183.024, -25.9943, 0.37", "49.6899, 184.503, -27.1572, 0.37", "49.6776, 185.369, -27.6964, 0.52", "49.6813, 186.339, -28.1374, 0.44", "49.694, 187.388, -28.593, 0.66", "49.7524, 188.336, -29.0307, 0.81", "49.8128, 188.985, -29.3241, 0.81", "49.8796, 189.699, -29.6543, 0.74", "49.9783, 191.288, -30.4249, 0.66", "50.052, 192.974, -31.2631, 0.44", "50.081, 194.355, -31.9381, 0.44", "50.0986, 195.442, -32.4412, 1.03", "50.1107, 196.249, -32.7172, 0.66", "50.1125, 197.304, -32.8865, 0.52", "50.1195, 197.868, -32.9027, 0.74", "50.1091, 198.638, -32.9197, 0.96", "50.1038, 199.075, -32.9571, 0.96", "50.0891, 201.008, -33.4184, 0.66", "50.0687, 202.638, -34.0872, 0.66", "50.0106, 204.08, -34.9199, 0.44", "49.8578, 205.743, -36.1399, 0.96", "49.6753, 206.817, -37.1127, 0.52", "49.3639, 207.856, -38.2597, 0.52", "49.0312, 208.806, -39.5092, 0.52", "48.71, 209.488, -40.5319, 0.44", "48.3066, 210.103, -41.5002, 0.44", "47.862, 210.581, -42.3248, 0.96", "46.9013, 211.277, -43.7516, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "53.2949, -66.4853, 64.7247, 0.37", "53.4605, -67.7656, 66.4266, 0.37", "53.8152, -69.1959, 68.0652, 0.37", "54.0365, -69.9197, 68.8811, 0.59", "54.4217, -71.0733, 70.1345, 0.44", "54.6287, -71.6356, 70.8145, 0.66", "54.9122, -72.3596, 71.8404, 0.44", "55.3499, -73.3577, 73.2946, 0.44", "55.7144, -74.0884, 74.3816, 0.44", "55.976, -74.5559, 75.1002, 0.81", "56.8353, -76.0018, 77.3013, 0.81", "57.6452, -77.3595, 79.3534, 0.81", "57.9102, -77.8066, 80.0084, 0.81", "58.2998, -78.4589, 80.8617, 0.44", "58.6824, -79.1172, 81.5784, 0.44", "59.3103, -80.2931, 82.6884, 0.44", "59.6242, -80.949, 83.2047, 0.66", "59.8439, -81.4708, 83.5912, 0.66", "60.2941, -82.7189, 84.6388, 0.52", "60.6339, -83.9358, 85.7512, 0.66", "60.975, -85.5824, 87.2623, 0.29", "61.0745, -86.2648, 87.8938, 0.29", "61.1858, -87.3695, 88.8995, 0.22", "61.2905, -89.0838, 90.3858, 0.22", "61.3256, -90.2555, 91.3658, 0.22", "61.3335, -91.3218, 92.2158, 0.37", "61.328, -92.8704, 93.3761, 0.74", "61.3333, -93.7571, 93.979, 0.88", "61.3493, -94.7371, 94.5828, 0.22", "61.3599, -96.4232, 95.4086, 0.22", "61.3642, -97.0765, 95.6905, 0.22", "61.3744, -98.0917, 95.999, 0.22", "61.4124, -99.701, 96.2664, 0.15", "61.4815, -100.905, 96.3727, 0.15", "61.6722, -103.141, 96.5101, 0.22", "61.8317, -104.677, 96.5709, 0.22", "62.1237, -107.44, 96.7594, 0.15", "62.3182, -109.76, 96.9588, 0.15", "62.4432, -111.985, 97.2483, 0.22", "62.5154, -113.938, 97.6112, 0.22", "62.5532, -115.56, 98.012, 0.22", "62.5568, -117.453, 98.5705, 0.22", "62.5276, -119.925, 99.5033, 0.22", "62.4893, -122.44, 100.51, 0.22", "62.4691, -123.961, 101.141, 0.22", "62.4766, -125.021, 101.553, 0.52", "62.5303, -126.313, 102.039, 0.59", "62.6843, -127.834, 102.586, 0.22", "62.8486, -128.863, 102.948, 0.15", "63.0711, -130.187, 103.449, 0.15", "63.2192, -131.608, 103.854, 0.22", "63.2155, -132.631, 104.091, 0.37", "63.1423, -134.057, 104.395, 0.37", "62.9756, -135.585, 104.649, 0.15", "62.5877, -137.977, 104.992, 0.15", "61.8052, -141.672, 105.298, 0.15", "61.3224, -143.381, 105.382, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "53.2949, -66.4853, 64.7247, 0.29", "53.6684, -67.1895, 64.0351, 0.29", "54.3298, -68.3267, 62.8402, 0.37", "54.7358, -69.0062, 62.1235, 0.37", "55.2971, -69.8892, 61.2101, 0.22", "55.9587, -70.8375, 60.235, 0.22", "56.3438, -71.3602, 59.7203, 0.52", "57.1296, -72.4686, 58.6827, 0.29", "57.4956, -72.9901, 58.2278, 0.44", "57.856, -73.5325, 57.7768, 0.66", "58.3231, -74.3126, 57.1635, 0.37", "58.7012, -75.1035, 56.6128, 0.29", "59.0429, -76.0729, 55.9638, 0.29", "59.2762, -76.961, 55.4043, 0.29", "59.5079, -77.9437, 54.8053, 0.66", "59.7031, -78.9422, 54.2174, 0.66", "59.8708, -79.9422, 53.6605, 0.52", "60.1233, -81.4147, 52.8742, 0.37", "60.3475, -82.4288, 52.3683, 0.66", "60.6443, -83.4757, 51.8438, 0.22", "60.8829, -84.1177, 51.4805, 0.22", "61.177, -84.7502, 51.0804, 0.59", "61.5717, -85.4491, 50.6025, 0.81", "62.2093, -86.3961, 49.9019, 0.52", "63.04, -87.4993, 49.0232, 0.66", "63.847, -88.5054, 48.1965, 0.44", "64.7258, -89.5642, 47.3793, 0.37", "65.1469, -90.0874, 46.994, 0.37", "65.5989, -90.677, 46.5913, 0.37", "66.3672, -91.7546, 45.9519, 0.66", "66.8299, -92.4404, 45.6137, 1.11", "67.4947, -93.4903, 45.1212, 0.66", "68.1498, -94.576, 44.5482, 0.44", "68.681, -95.5224, 43.9419, 0.44", "69.1348, -96.3502, 43.3428, 0.59", "69.5205, -97.0334, 42.7945, 0.52", "70.14, -98.058, 41.8596, 0.29", "70.7252, -98.9453, 40.9293, 0.81", "71.4134, -99.8974, 39.8359, 0.22", "71.6604, -100.218, 39.4384, 0.22", "71.8537, -100.448, 39.1383, 0.29", "72.4575, -101.025, 38.3754, 0.52", "73.1591, -101.548, 37.7121, 0.22", "73.9021, -101.997, 37.19, 0.52", "74.4532, -102.273, 36.8905, 0.52", "75.0772, -102.55, 36.6434, 0.29", "76.4734, -103.077, 36.3075, 0.22", "77.3285, -103.355, 36.2354, 0.29", "78.0318, -103.577, 36.249, 0.52", "78.7277, -103.808, 36.3155, 0.66", "80.1838, -104.3, 36.5118, 0.44", "81.3029, -104.713, 36.7024, 0.44", "82.3461, -105.135, 36.8902, 0.44", "83.2998, -105.53, 37.0407, 0.52", "84.1434, -105.886, 37.1078, 0.66", "84.8849, -106.202, 37.1008, 0.66", "85.8897, -106.604, 36.9772, 0.37", "86.6367, -106.87, 36.8544, 0.37", "87.2652, -107.059, 36.6987, 0.74", "88.0734, -107.265, 36.4587, 1.03", "89.0305, -107.498, 36.1479, 0.29", "90.0809, -107.752, 35.7945, 0.22", "91.1945, -108.003, 35.4292, 0.22", "92.4142, -108.294, 35.056, 0.22", "93.4045, -108.552, 34.8218, 0.29", "94.2062, -108.79, 34.7043, 0.44", "94.9748, -109.039, 34.6578, 0.44", "95.7333, -109.316, 34.7024, 0.81", "96.1601, -109.488, 34.7807, 0.88", "97.3566, -110.028, 35.1522, 0.22", "98.0842, -110.417, 35.5003, 0.15", "98.8615, -110.87, 36.0024, 0.15", "99.7212, -111.401, 36.6459, 0.15", "100.154, -111.685, 36.9872, 0.37", "100.723, -112.077, 37.4259, 0.81", "102.035, -113.064, 38.3876, 0.52", "102.87, -113.811, 38.9969, 0.66", "103.276, -114.255, 39.2701, 0.52", "103.752, -114.867, 39.5243, 0.22", "104.319, -115.705, 39.8237, 0.22", "104.7, -116.348, 40.0101, 0.44", "105.338, -117.589, 40.3228, 0.44", "105.767, -118.607, 40.5898, 0.44", "106.099, -119.56, 40.8762, 0.44", "106.551, -120.928, 41.4377, 0.29", "106.711, -121.393, 41.6676, 0.66", "107.096, -122.392, 42.2285, 0.66", "107.54, -123.41, 42.8581, 0.66", "107.869, -124.097, 43.3024, 1.03", "108.66, -125.568, 44.2356, 0.29", "109.17, -126.423, 44.7298, 0.15", "109.37, -126.721, 44.918, 0.15", "109.682, -127.112, 45.2143, 0.15", "110.087, -127.513, 45.6241, 0.59", "110.339, -127.728, 45.8888, 0.81", "111.194, -128.42, 46.7811, 0.29", "112.005, -129.06, 47.6833, 0.44", "113.066, -129.896, 48.8636, 0.22", "114.066, -130.67, 49.9492, 0.22", "114.821, -131.287, 50.8047, 0.22", "115.585, -131.954, 51.6724, 0.29", "116.247, -132.564, 52.3892, 0.59", "116.702, -133.049, 52.8815, 1.03", "116.965, -133.388, 53.1655, 1.03", "118.087, -135.058, 54.4766, 0.15", "118.532, -135.767, 55.0153, 0.15", "118.868, -136.324, 55.4165, 0.22", "119.518, -137.387, 56.0974, 0.74", "119.985, -138.108, 56.5213, 0.96", "120.872, -139.376, 57.1297, 0.22", "121.451, -140.124, 57.3478, 0.22", "122.243, -141.072, 57.5169, 0.37", "123.073, -141.97, 57.5635, 0.15", "123.665, -142.559, 57.4819, 0.29", "124.43, -143.302, 57.2836, 0.15", "125.246, -144.106, 56.9695, 0.66", "126.164, -144.985, 56.5879, 0.22", "126.953, -145.72, 56.2583, 0.22", "127.792, -146.541, 55.9572, 0.29", "128.293, -147.072, 55.8229, 0.15", "128.705, -147.532, 55.767, 0.52", "129.137, -148.048, 55.8182, 0.59", "129.883, -149.016, 56.161, 0.22", "130.518, -149.843, 56.6698, 0.88", "130.973, -150.377, 57.1816, 0.88", "131.365, -150.794, 57.722, 0.59", "132.273, -151.69, 59.1595, 0.15", "132.968, -152.326, 60.4288, 0.22", "133.374, -152.649, 61.2585, 0.22", "134.045, -153.096, 62.7594, 0.15", "134.491, -153.356, 63.8, 0.15", "134.756, -153.49, 64.4392, 0.44", "135.354, -153.738, 65.8592, 0.74", "135.854, -153.941, 67.0562, 0.74", "136.416, -154.211, 68.5565, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-54.1209, 51.6141, 34.6248, 1.18", "-56.3819, 53.3544, 35.3835, 1.18", "-57.6547, 54.2524, 35.6922, 1.03", "-58.764, 54.9771, 35.8428, 1.4", "-60.2076, 55.876, 36.0469, 1.03", "-61.1527, 56.4405, 36.2168, 0.88", "-62.6422, 57.3024, 36.5222, 0.59", "-64.176, 58.1229, 36.7705, 0.29", "-65.5272, 58.7684, 37.034, 0.37", "-67.0369, 59.4307, 37.3937, 0.74", "-68.421, 60.0049, 37.7957, 1.4", "-70.2427, 60.7599, 38.4175, 0.88", "-71.3039, 61.2145, 38.8879, 0.88", "-72.0144, 61.5475, 39.2709, 0.88", "-72.9276, 61.9886, 39.8225, 0.59", "-74.0415, 62.5137, 40.5128, 0.44", "-74.9597, 62.9166, 41.1424, 0.29", "-76.5759, 63.593, 42.4015, 0.52", "-77.6399, 64.0257, 43.3096, 0.74", "-78.678, 64.421, 44.2677, 1.03", "-79.9481, 64.8558, 45.4638, 0.59", "-81.198, 65.251, 46.6344, 0.22", "-82.2808, 65.5553, 47.617, 0.22", "-83.5515, 65.8794, 48.7615, 0.22", "-84.7422, 66.1886, 49.9112, 0.37", "-85.3286, 66.3451, 50.4886, 0.52", "-86.4733, 66.6664, 51.5738, 1.33", "-87.8395, 67.0694, 52.8047, 0.29", "-89.5186, 67.5395, 54.184, 0.37", "-91.0267, 67.9429, 55.2914, 0.37", "-91.9453, 68.1681, 55.8831, 0.37", "-93.0785, 68.3962, 56.5144, 0.66", "-93.7441, 68.5037, 56.8242, 0.66", "-95.0466, 68.7028, 57.3029, 0.44", "-95.8331, 68.8272, 57.5603, 0.44", "-96.8879, 68.9954, 57.9824, 0.22", "-97.8073, 69.1608, 58.5073, 0.22", "-98.9188, 69.3608, 59.3547, 0.22", "-99.8732, 69.537, 60.1994, 0.15", "-101.124, 69.7594, 61.4906, 0.66", "-102.329, 69.966, 62.763, 0.29", "-103.596, 70.1549, 64.079, 0.66", "-104.845, 70.2974, 65.2707, 1.03", "-105.855, 70.3603, 66.1064, 1.25", "-108.244, 70.3755, 67.8077, 0.22", "-109.593, 70.3236, 68.5802, 0.22", "-110.583, 70.253, 69.0041, 0.29", "-112.061, 70.1094, 69.4175, 0.29", "-113.091, 70.0013, 69.5328, 0.22", "-114.202, 69.8675, 69.4941, 0.29", "-114.948, 69.7774, 69.3562, 0.44", "-115.823, 69.6743, 69.1027, 0.66", "-116.743, 69.5945, 68.7683, 0.66", "-118.053, 69.5423, 68.2282, 0.22", "-119.053, 69.5503, 67.8148, 0.22", "-120.387, 69.6073, 67.3872, 0.29", "-122.275, 69.7279, 66.9756, 0.29", "-123.107, 69.7899, 66.8832, 0.59", "-124.467, 69.8806, 66.9222, 0.59", "-126.145, 69.978, 67.1628, 0.22", "-128.389, 70.0984, 67.66, 0.44", "-129.313, 70.1336, 67.9338, 0.44", "-130.354, 70.1593, 68.2936, 0.22", "-131.905, 70.1846, 68.7983, 0.37", "-132.562, 70.2026, 68.9603, 0.59", "-133.297, 70.2508, 69.0606, 0.96", "-134.472, 70.3717, 69.0933, 0.29", "-136.309, 70.618, 69.0591, 0.22", "-137.431, 70.8059, 69.1095, 0.22", "-139.358, 71.1814, 69.2653, 0.22", "-141.036, 71.5488, 69.497, 0.29", "-141.933, 71.7668, 69.6637, 0.29", "-143.08, 72.08, 69.9351, 0.59", "-146.126, 73.023, 71.0463, 0.07", "-146.772, 73.2455, 71.3761, 0.15", "-147.54, 73.5472, 71.9277, 0.29", "-148.93, 74.1722, 73.1348, 0.15", "-149.388, 74.397, 73.6043, 0.22", "-150.932, 75.1707, 75.4035, 0.44", "-151.572, 75.4893, 76.1792, 0.81", "-152.856, 76.0964, 77.8226, 0.22", "-153.537, 76.3987, 78.6935, 0.29", "-154.784, 76.9072, 80.2802, 0.22", "-155.807, 77.2834, 81.3793, 0.22", "-156.434, 77.4874, 81.8518, 0.66", "-156.895, 77.6243, 82.0669, 0.66", "-158.212, 77.9978, 82.2815, 0.22", "-159.566, 78.3949, 82.1652, 0.29", "-161.003, 78.8841, 81.7428, 0.74", "-163.051, 79.6581, 80.8201, 0.22", "-164.262, 80.1111, 80.1788, 0.15", "-164.889, 80.3359, 79.808, 0.29", "-165.696, 80.6114, 79.2855, 0.74", "-166.761, 80.9557, 78.5894, 0.22", "-168.099, 81.3214, 77.8555, 0.22", "-168.735, 81.4763, 77.6222, 0.52", "-169.153, 81.5685, 77.489, 0.88", "-169.964, 81.7393, 77.2655, 0.29", "-171.063, 81.9561, 77.263, 0.22", "-172.502, 82.2711, 77.6125, 0.22", "-173.334, 82.4809, 77.9646, 0.22", "-174.566, 82.8303, 78.6059, 0.22", "-175.856, 83.2042, 79.4022, 0.15", "-179.74, 84.2812, 82.6, 0.15", "-180.768, 84.5262, 83.6523, 0.15", "-181.423, 84.6656, 84.4355, 0.15", "-182.008, 84.7695, 85.2479, 0.15", "-182.777, 84.8856, 86.4056, 0.37", "-184.689, 85.1083, 89.4509, 0.15", "-185.984, 85.1954, 91.4559, 0.15", "-186.915, 85.2085, 93.0125, 0.15", "-188.164, 85.1977, 95.2806, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-54.1209, 51.6141, 34.6248, 0.29", "-54.0103, 51.8438, 36.4347, 0.29", "-53.8562, 52.1553, 39.4148, 0.29", "-53.7758, 52.4041, 41.9824, 0.29", "-53.7501, 52.6686, 44.5841, 0.29", "-53.791, 52.9177, 46.6334, 0.29", "-53.8194, 52.9891, 47.1492, 0.29", "-53.9521, 53.1808, 48.3816, 0.29", "-54.082, 53.2888, 49.0294, 0.37", "-54.5807, 53.5332, 50.4778, 0.37", "-55.1272, 53.6986, 51.5435, 0.22", "-55.8569, 53.8767, 52.7548, 0.22", "-56.1382, 53.9343, 53.2298, 0.22", "-56.3656, 53.9658, 53.6732, 0.22", "-56.7274, 53.9844, 54.5494, 0.22", "-56.993, 53.9676, 55.2772, 0.22", "-57.1212, 53.9413, 55.6723, 0.22", "-57.2741, 53.9064, 56.2154, 0.29", "-57.6462, 53.7905, 57.6029, 0.29", "-58.087, 53.6371, 59.1587, 0.29", "-58.4381, 53.5002, 60.2933, 0.29", "-58.6677, 53.4082, 61.0295, 0.15", "-59.5, 53.038, 63.7403, 0.15", "-60.36, 52.5884, 66.574, 0.15", "-61.1265, 52.1122, 69.0586, 0.15", "-61.5516, 51.8123, 70.4291, 0.52" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-49.231, 38.5064, -36.4744, 1.18", "-50.711, 38.7819, -35.9244, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-49.231, 38.5064, -36.4744, 0.29", "-50.0295, 39.6766, -36.3064, 0.29", "-50.7446, 40.7044, -36.3137, 0.29", "-51.3726, 41.5863, -36.3939, 0.88", "-52.121, 42.6176, -36.5328, 0.44", "-52.8585, 43.6061, -36.7225, 0.44", "-53.3227, 44.206, -36.8549, 0.29", "-54.2798, 45.3722, -37.2785, 0.29", "-54.7571, 45.9152, -37.5122, 0.74", "-55.1367, 46.2923, -37.6821, 0.96", "-55.9222, 47.0027, -37.946, 0.96", "-56.9204, 47.8465, -38.1429, 0.66", "-58.3727, 49.0228, -38.181, 0.37", "-59.1897, 49.6992, -38.0486, 0.22", "-60.2985, 50.6493, -37.7157, 0.29", "-61.5184, 51.7443, -37.1455, 0.29", "-62.1731, 52.3585, -36.7046, 0.81", "-63.2149, 53.3798, -35.8049, 1.03", "-64.0976, 54.3115, -34.8996, 0.22", "-64.6067, 54.9153, -34.3398, 0.29", "-65.0631, 55.5561, -33.815, 0.44", "-65.4358, 56.1537, -33.4331, 0.44", "-65.875, 56.9993, -32.9691, 0.44", "-66.2922, 58.003, -32.5957, 0.52", "-66.5669, 58.7313, -32.4716, 0.52", "-66.9169, 59.7437, -32.4542, 0.29", "-67.1339, 60.4171, -32.5081, 0.37", "-67.4406, 61.3439, -32.6277, 0.37", "-68.0668, 62.9892, -32.9199, 0.81", "-68.577, 64.1519, -33.1839, 1.03", "-69.0544, 65.1187, -33.4323, 0.74", "-69.6575, 66.2331, -33.7376, 0.66", "-70.2546, 67.3035, -34.0336, 0.37", "-71.0298, 68.6798, -34.4116, 0.29", "-71.511, 69.5526, -34.5961, 0.29", "-71.7674, 70.0585, -34.7315, 0.66", "-72.0325, 70.6453, -34.911, 1.18", "-72.2261, 71.1695, -35.0801, 1.18", "-72.5053, 72.0405, -35.3469, 0.74", "-72.77, 72.8505, -35.5556, 0.44", "-73.1957, 74.0248, -35.8516, 0.29", "-73.4202, 74.6079, -35.9994, 0.29", "-73.6614, 75.2148, -36.1483, 0.29", "-74.0972, 76.2655, -36.4366, 0.29", "-74.4894, 77.1619, -36.6893, 0.22", "-74.9871, 78.2263, -36.9886, 0.37", "-75.4553, 79.1947, -37.2292, 0.22", "-75.6624, 79.6314, -37.34, 0.22", "-76.0595, 80.5238, -37.5585, 0.44", "-76.3314, 81.1887, -37.7066, 0.96", "-76.574, 81.7607, -37.811, 1.18", "-77.0412, 82.7416, -37.9352, 1.18", "-77.3857, 83.3847, -38.0298, 1.25", "-77.8091, 84.1115, -38.1753, 0.37", "-78.1919, 84.7363, -38.3177, 0.22", "-78.6529, 85.4704, -38.5387, 0.29", "-78.9426, 85.9705, -38.726, 0.29", "-79.4338, 86.9206, -39.1707, 0.22", "-79.8186, 87.7991, -39.6333, 0.22", "-79.9427, 88.1138, -39.805, 0.44", "-80.2569, 88.9708, -40.3107, 0.81", "-80.6991, 90.2675, -41.1384, 0.29", "-81.0355, 91.2321, -41.8116, 0.52", "-81.3329, 91.9801, -42.3647, 1.03", "-81.6553, 92.6539, -42.9024, 1.03", "-82.2831, 93.7381, -43.8303, 0.66", "-82.9168, 94.6778, -44.6871, 0.59", "-83.6139, 95.6039, -45.5586, 0.88", "-84.4564, 96.7032, -46.559, 0.22", "-85.123, 97.581, -47.3214, 0.59", "-85.9117, 98.6651, -48.2214, 0.22", "-86.3088, 99.2545, -48.6673, 0.44", "-86.7454, 100.009, -49.2203, 0.74", "-87.0093, 100.604, -49.6666, 0.88", "-87.2723, 101.394, -50.294, 0.37", "-87.4826, 102.121, -50.9216, 0.37", "-87.7196, 102.983, -51.6865, 0.37", "-88.0391, 104.039, -52.6044, 0.29", "-88.3059, 104.9, -53.379, 0.52", "-88.4317, 105.292, -53.7508, 0.52", "-88.7418, 106.258, -54.6722, 0.52", "-89.0321, 107.047, -55.3649, 0.37", "-89.2699, 107.522, -55.7276, 0.37", "-93.0451, 116.26, -56.8032, 0.37", "-95.1595, 125.511, -55.964, 0.37", "-96.2974, 134.895, -54.9047, 0.37", "-97.3398, 144.316, -54.1407, 0.37", "-96.9207, 153.789, -54.7591, 0.37", "-95.5482, 163.145, -53.6978, 0.37", "-93.5303, 172.447, -53.4875, 0.37", "-91.3326, 181.692, -52.7956, 0.37", "-90.3403, 191.144, -52.6427, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.2639, 73.824, -42.9627, 0.52", "-13.4126, 73.6621, -44.4355, 0.52", "-14.4903, 73.4055, -45.9132, 0.52", "-15.0648, 73.1837, -46.9796, 0.66", "-15.4301, 72.9179, -48.0008, 0.44", "-15.6612, 72.6433, -49.0253, 0.37", "-15.9586, 72.1812, -50.8914, 0.37", "-16.0018, 72.0662, -51.3802, 0.37", "-16.0477, 71.5446, -53.5414, 0.37", "-16.0314, 71.1, -55.2886, 0.52", "-16.0322, 70.7741, -56.544, 0.52", "-16.0652, 70.6031, -57.1625, 0.52", "-16.3109, 70.2194, -58.2926, 0.52", "-16.8221, 69.7962, -59.2774, 0.66", "-17.5669, 69.3646, -59.6773, 0.52", "-18.6251, 68.8079, -60.0234, 0.44", "-19.418, 68.3825, -60.1924, 0.44", "-20.0489, 68.0202, -60.2763, 0.81", "-21.1022, 67.3923, -60.2713, 0.96", "-22.6217, 66.5278, -60.1107, 0.22", "-28.2899, 61.5875, -66.5005, 0.22", "-35.6535, 56.5067, -70.6444, 0.22", "-42.1167, 50.457, -74.8487, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-12.2639, 73.824, -42.9627, 0.59", "-12.027, 74.9993, -42.4305, 0.59", "-11.8254, 76.3521, -41.9101, 0.59", "-11.6914, 77.4735, -41.6473, 0.66", "-11.6321, 78.3369, -41.542, 0.81", "-11.6072, 79.6072, -41.5407, 0.52", "-11.648, 81.152, -41.713, 0.52", "-11.7361, 82.1186, -42.044, 0.66", "-11.9038, 83.5887, -42.9374, 1.03", "-12.0627, 84.999, -44.2015, 0.37", "-12.1351, 86.0359, -45.465, 0.37", "-12.1387, 86.8063, -46.649, 0.59", "-12.0679, 87.8141, -48.4182, 0.74", "-11.9157, 88.6493, -50.016, 0.74", "-11.6339, 89.5566, -51.8611, 0.37", "-11.3339, 90.1994, -53.2341, 0.37", "-11.0879, 90.5961, -54.0392, 0.37", "-10.7998, 90.9623, -54.8008, 0.44", "-10.2987, 91.5755, -55.9779, 0.44", "-10.0062, 91.9352, -56.623, 0.74", "-9.46973, 92.6097, -57.7919, 0.74", "-8.80756, 93.3938, -59.1787, 0.15", "-8.14838, 94.0662, -60.5572, 0.15", "-6.26436, 102.265, -65.2439, 0.15", "-4.84367, 110.819, -69.3564, 0.15", "-4.81555, 118.446, -75.3176, 0.15", "-5.34569, 125.435, -82.0704, 0.15", "-6.08264, 133.195, -87.7921, 0.15", "-6.1764, 141.243, -93.1041, 0.15", "-4.8058, 149.372, -98.0947, 0.15", "-3.06413, 157.91, -102.12, 0.15", "-2.25773, 166.753, -105.682, 0.15", "0.6989, 175.592, -107.85, 0.15", "3.99334, 184.434, -109.436, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "46.9013, 211.277, -43.7516, 0.29", "46.6726, 211.936, -45.204, 0.29", "46.3525, 212.663, -47.2001, 0.29", "46.0982, 213.082, -48.4964, 0.29", "45.8528, 213.409, -49.5041, 0.29", "45.673, 213.636, -50.1834, 0.59", "45.178, 214.312, -52.0651, 0.22", "44.8647, 214.839, -53.3305, 0.22", "44.722, 215.157, -53.9749, 0.22", "44.5937, 215.596, -54.7757, 0.15", "44.7595, 216.029, -55.214, 0.15", "45.2, 216.593, -55.4624, 0.66", "46.0636, 217.531, -55.6569, 0.22", "46.5105, 217.99, -55.7237, 0.22", "46.9456, 218.373, -55.7762, 0.44", "48.2177, 219.281, -55.8824, 0.29", "50.6957, 224.778, -63.6526, 0.29", "52.1722, 230.466, -71.5248, 0.29", "52.7535, 236.294, -79.4012, 0.29", "52.8001, 243.078, -86.401, 0.29", "53.3032, 249.575, -93.6795, 0.29", "51.9409, 254.819, -101.906, 0.29", "49.5233, 259.112, -110.493, 0.29", "46.3486, 264.119, -118.376, 0.29", "44.6258, 269.255, -126.61, 0.29", "42.7087, 275.283, -134.097, 0.29", "41.7984, 281.991, -141.12, 0.29", "42.467, 287.991, -148.844, 0.29", "45.4228, 293.443, -156.482, 0.29", "48.4396, 297.262, -165.127, 0.29", "52.2869, 299.961, -173.909, 0.29", "55.7858, 300.96, -183.218, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "46.9013, 211.277, -43.7516, 0.74", "46.5293, 211.732, -43.5274, 0.74", "44.739, 213.759, -42.6327, 0.29", "44.0933, 214.425, -42.3588, 0.29", "43.0471, 215.42, -41.9793, 0.52", "42.3117, 216.072, -41.761, 0.29", "41.345, 216.892, -41.58, 0.37", "40.5068, 217.555, -41.5402, 0.59", "39.8608, 218.025, -41.5648, 0.44", "39.1314, 218.574, -41.5643, 0.88", "37.7919, 219.691, -41.4478, 0.37", "36.4879, 220.93, -41.172, 0.66", "35.7519, 221.756, -40.9205, 0.29", "34.9745, 222.814, -40.5545, 0.22", "34.1753, 224.123, -40.0711, 0.74", "33.4072, 225.638, -39.4827, 0.29", "33.0221, 226.579, -39.1077, 0.22", "32.7482, 227.356, -38.802, 0.88", "32.4315, 228.357, -38.5023, 0.88", "32.1989, 229.165, -38.3635, 0.22", "31.9753, 229.999, -38.3102, 0.22", "31.7437, 230.973, -38.3102, 0.15", "31.6267, 231.56, -38.3102, 0.66", "31.5304, 232.183, -38.3102, 0.22", "31.4124, 233.111, -38.3135, 0.15", "31.3774, 233.595, -38.3241, 0.15", "31.3753, 234.364, -38.3992, 0.44", "31.447, 235.408, -38.6003, 0.44", "31.5686, 236.559, -38.9929, 0.22", "31.6537, 237.186, -39.3236, 0.22", "31.7839, 237.985, -39.9065, 0.52", "31.9573, 238.954, -40.8105, 0.52", "32.0845, 239.56, -41.4996, 0.22", "32.343, 240.623, -42.8249, 0.22", "32.5506, 241.434, -43.8923, 0.22", "32.7027, 242.054, -44.7358, 0.22", "32.8563, 242.777, -45.7242, 0.22", "33.0787, 243.848, -47.1226, 0.22", "33.2677, 244.638, -48.1528, 0.66", "33.4304, 245.142, -48.7699, 0.37", "31.7117, 254.285, -50.8726, 0.37", "31.0203, 263.659, -52.3385, 0.37", "28.4715, 272.842, -52.0674, 0.37", "26.631, 282.104, -50.8206, 0.37", "24.3838, 291.359, -51.0097, 0.37", "23.7285, 300.805, -51.8564, 0.37", "24.7065, 310.258, -52.0086, 0.37", "25.9455, 319.606, -50.7272, 0.37", "28.8267, 328.391, -48.2394, 0.37", "33.2159, 336.844, -46.987, 0.37", "38.2085, 345.066, -47.3922, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-50.711, 38.7819, -35.9244, 0.52", "-52.2517, 39.3448, -36.2109, 0.52", "-52.8691, 39.5765, -36.343, 0.66", "-53.8463, 39.9339, -36.5498, 0.88", "-55.3133, 40.4486, -36.8493, 0.74", "-56.6266, 40.8717, -37.0892, 0.52", "-57.729, 41.2005, -37.2734, 0.52", "-59.3884, 41.648, -37.5783, 0.74", "-60.3176, 41.8722, -37.7364, 0.74", "-61.6367, 42.138, -37.9112, 0.66", "-63.098, 42.3493, -38.0611, 0.37", "-63.7562, 42.4092, -38.1222, 0.37", "-64.4245, 42.4359, -38.2021, 0.88", "-65.4767, 42.4329, -38.3772, 0.88", "-66.3009, 42.4218, -38.5646, 0.59", "-67.1305, 42.3936, -38.8042, 0.59", "-67.9884, 42.36, -39.1383, 0.59", "-68.7139, 42.3166, -39.5262, 0.59", "-69.4991, 42.2591, -40.0148, 0.59", "-70.0733, 42.2043, -40.3867, 0.81", "-70.8131, 42.1228, -40.8494, 1.03", "-72.1402, 41.9176, -41.607, 0.52", "-73.917, 41.572, -42.4961, 0.59", "-75.0674, 41.2734, -43.0087, 0.59", "-76.0266, 40.947, -43.3659, 0.59", "-77.327, 40.3741, -43.759, 0.59", "-78.2182, 39.8676, -43.9307, 0.59", "-79.2454, 39.1345, -43.9732, 0.52", "-79.9173, 38.5666, -43.9185, 0.59", "-80.6405, 37.8644, -43.84, 0.52", "-81.3132, 37.1737, -43.7729, 0.37", "-82.2071, 36.2446, -43.7162, 0.66", "-82.7852, 35.6826, -43.7017, 0.66", "-83.3667, 35.1889, -43.7203, 0.88", "-84.1052, 34.6594, -43.7712, 0.88", "-85.4421, 33.8082, -43.9542, 0.52", "-86.227, 33.3606, -44.1426, 0.52", "-86.759, 33.0998, -44.3369, 0.66", "-88.1123, 32.5446, -45.0016, 0.44", "-88.7607, 32.3431, -45.3974, 0.59", "-89.6381, 32.1655, -46.0088, 0.66", "-91.0946, 32.05, -47.1249, 0.66", "-92.0748, 32.0596, -47.9244, 0.88", "-92.8392, 32.1254, -48.5651, 0.88", "-93.6158, 32.2339, -49.215, 0.81", "-94.335, 32.3564, -49.7617, 1.11", "-95.3527, 32.5444, -50.3888, 0.52", "-96.6929, 32.8006, -51.0761, 0.52", "-98.1855, 33.0876, -51.7223, 0.29", "-98.6559, 33.1762, -51.8961, 0.29", "-99.6968, 33.3494, -52.2674, 0.59", "-101.055, 33.5184, -52.8444, 0.29", "-102.827, 33.6864, -53.8095, 0.37", "-103.965, 33.7562, -54.5255, 0.37", "-104.821, 33.7855, -55.127, 0.37", "-106.296, 33.8167, -56.2706, 0.44", "-108.147, 33.8105, -57.9085, 0.96", "-109.863, 33.7426, -59.6664, 0.44", "-110.548, 33.6826, -60.4644, 0.52", "-111.346, 33.6048, -61.5461, 0.52", "-120.11, 32.3197, -66.1669, 0.52", "-129.213, 31.5804, -70.234, 0.52", "-138.561, 29.7402, -73.2106, 0.52", "-147.989, 26.6634, -74.0027, 0.52", "-157.069, 22.7188, -73.451, 0.52", "-166.735, 20.2831, -73.5224, 0.52", "-175.713, 16.2167, -74.5583, 0.52", "-184.971, 13.1067, -76.4486, 0.52", "-194.142, 10.7982, -79.6086, 0.52", "-202.858, 9.10738, -84.1759, 0.52", "-211.431, 6.83455, -88.7343, 0.52", "-219.589, 4.8983, -94.1459, 0.52", "-227.996, 2.8457, -99.1112, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-50.711, 38.7819, -35.9244, 0.29", "-51.99, 38.9147, -36.9774, 0.29", "-53.4885, 39.0263, -38.1356, 0.44", "-54.1159, 39.0698, -38.5715, 0.44", "-55.124, 39.1502, -39.1933, 0.29", "-56.1728, 39.2508, -39.771, 0.29", "-57.2249, 39.3656, -40.295, 0.59", "-57.9749, 39.4808, -40.5406, 0.81", "-58.9224, 39.6275, -40.7608, 0.59", "-59.8271, 39.7483, -40.9786, 0.44", "-60.578, 39.8313, -41.1918, 0.74", "-61.149, 39.8999, -41.3904, 1.03", "-62.2705, 40.0427, -41.8857, 0.29", "-63.5105, 40.1574, -42.5846, 0.29", "-64.7932, 40.1666, -43.4717, 0.96", "-66.0883, 40.0263, -44.5184, 0.66", "-67.002, 39.8007, -45.346, 0.74", "-67.8454, 39.5458, -46.1762, 0.81", "-68.6119, 39.2523, -47.0111, 0.52", "-69.582, 38.7729, -48.1035, 0.52", "-70.3471, 38.2392, -49.0079, 0.44", "-70.9403, 37.6519, -49.7139, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-227.996, 2.8457, -99.1112, 0.66", "-235.131, -3.59823, -100.868, 0.66", "-241.25, -10.9198, -102.647, 0.66", "-247.17, -18.3914, -104.407, 0.66", "-253.806, -25.4865, -104.831, 0.66", "-259.645, -33.1985, -104.76, 0.66", "-265.224, -41.04, -105.622, 0.66", "-270.349, -48.9347, -107.784, 0.66", "-274.933, -57.1536, -109.82, 0.66", "-279.348, -65.5434, -111.405, 0.66", "-283.17, -74.2592, -112.509, 0.66", "-286.317, -83.2749, -112.321, 0.66", "-289.009, -92.4233, -112.198, 0.66", "-293.775, -100.769, -112.529, 0.66", "-298.13, -109.299, -113.166, 0.66", "-302.948, -117.293, -115.613, 0.66", "-308.115, -125.083, -118.075, 0.66", "-313.924, -131.602, -122.453, 0.66", "-319.197, -137.794, -127.904, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-227.996, 2.8457, -99.1112, 0.15", "-236.453, 6.36827, -102.949, 0.66", "-244.463, 11.3101, -105.913, 0.66", "-252.622, 16.1386, -108.67, 0.66", "-260.24, 21.9482, -110.807, 0.66", "-267.909, 27.4723, -113.524, 0.66", "-274.375, 33.6168, -117.567, 0.66", "-281.057, 39.2598, -122.047, 0.66", "-287.223, 45.5993, -126.224, 0.66", "-294.449, 50.4811, -130.848, 0.66", "-301.093, 54.8243, -136.76, 0.66", "-306.319, 59.7883, -143.497, 0.66", "-312.758, 63.3339, -150.176, 0.66", "-317.91, 67.8381, -157.316, 0.66", "-322.137, 73.5512, -164.096, 0.66", "-324.978, 79.889, -170.982, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-70.9403, 37.6519, -49.7139, 0.66", "-71.2102, 36.5282, -50.4628, 0.66", "-71.4319, 35.6707, -51.1899, 0.59", "-71.6506, 35.0823, -51.8088, 0.29", "-72.0799, 34.2697, -52.7587, 0.29", "-72.2904, 33.9573, -53.1911, 0.44", "-72.929, 33.2181, -54.4579, 0.59", "-73.4546, 32.7397, -55.4303, 0.59", "-74.0743, 32.2897, -56.5784, 0.59", "-74.5452, 32.0102, -57.4533, 0.66", "-75.3117, 31.638, -58.8464, 0.66", "-76.2962, 31.2668, -60.6063, 0.22", "-79.7052, 27.3784, -69.0696, 0.22", "-83.3438, 23.4825, -77.4327, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-70.9403, 37.6519, -49.7139, 0.15", "-71.8286, 37.887, -49.5531, 0.15", "-72.7182, 38.051, -49.3845, 0.22", "-73.6589, 38.0964, -49.2139, 0.37", "-74.5732, 38.0573, -49.0695, 0.52", "-75.8156, 37.8957, -48.8624, 0.22", "-76.5476, 37.7662, -48.7276, 0.22", "-77.0879, 37.6417, -48.5815, 0.22", "-78.2736, 37.2937, -48.1867, 0.29", "-78.9541, 37.0609, -47.9339, 0.22", "-79.9702, 36.7266, -47.621, 0.29", "-81.0186, 36.4419, -47.381, 0.15", "-82.3494, 36.1778, -47.1329, 0.15", "-82.8711, 36.1146, -47.0613, 0.44", "-83.5253, 36.0785, -47.0084, 0.44", "-85.3766, 36.0585, -46.9718, 0.22", "-86.2655, 36.092, -46.9714, 0.22", "-86.9494, 36.1493, -46.9665, 0.52", "-87.7643, 36.2623, -46.9861, 0.52", "-88.712, 36.4263, -46.9757, 0.22", "-89.432, 36.5867, -46.9147, 0.44", "-90.7418, 36.949, -46.602, 0.44", "-91.6337, 37.2689, -46.3477, 0.74", "-92.6368, 37.7254, -45.9907, 0.88", "-102.24, 37.327, -43.2327, 0.88", "-111.72, 35.9664, -40.3902, 0.88", "-121.657, 35.636, -39.3313, 0.88", "-131.605, 36.2755, -40.1018, 0.88", "-141.398, 36.8897, -42.0185, 0.88", "-151.138, 38.4697, -43.5553, 0.88", "-160.276, 40.9708, -46.6506, 0.88", "-169.093, 41.857, -51.2753, 0.88", "-177.885, 43.9321, -55.5102, 0.88", "-187.704, 44.457, -57.321, 0.88", "-197.665, 43.6355, -57.467, 0.88", "-207.094, 41.1815, -59.5688, 0.88", "-216.027, 38.6953, -63.225, 0.88", "-225.68, 37.8133, -65.6632, 0.88", "-235.296, 37.2163, -68.3347, 0.88", "-245.201, 36.8086, -69.6447, 0.88", "-255.197, 36.5917, -69.7642, 0.88", "-264.947, 34.6469, -68.8995, 0.88", "-274.623, 33.7325, -66.565, 0.88", "-283.665, 34.2254, -62.3253, 0.88", "-292.159, 33.4886, -57.105, 0.88", "-299.625, 31.1878, -50.9092, 0.88", "-306.275, 28.0383, -44.2168, 0.88", "-313.725, 23.7543, -39.3011, 0.88", "-320.337, 18.6952, -34.0163, 0.88", "-325.335, 12.5606, -28.2442, 0.88", "-329.23, 5.43126, -22.9043, 0.88", "-331.515, -2.45484, -17.8184, 0.88", "-332.493, -11.344, -14.4287, 0.88", "-334.055, -19.6596, -9.85253, 0.88", "-336.796, -27.6266, -5.1452, 0.88", "-339.327, -35.4646, -0.0933785, 0.88", "-341.14, -43.9435, 4.0365, 0.88", "-342.221, -52.172, 8.91587, 0.88", "-343.704, -60.4374, 13.6174, 0.88", "-344.806, -68.8029, 18.2263, 0.88", "-347.321, -76.1885, 23.9913, 0.88", "-349.097, -83.9337, 29.5027, 0.88", "-351.989, -90.5753, 36.042, 0.88", "-355.955, -97.7804, 41.2137, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-83.3438, 23.4825, -77.4327, 0.22", "-87.6243, 18.9663, -85.1189, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-83.3438, 23.4825, -77.4327, 0.22", "-86.3813, 19.6464, -86.0622, 0.22", "-91.1222, 15.1231, -93.4685, 0.22", "-94.6814, 11.4478, -101.975, 0.22", "-97.7989, 6.90217, -110.184, 0.22", "-99.2538, 3.67317, -119.476, 0.22", "-100.688, -0.868438, -128.141, 0.22", "-100.625, -5.58822, -136.819, 0.22", "-102.001, -11.5709, -144.464, 0.22", "-103.652, -16.619, -152.773, 0.22", "-106.845, -21.3361, -160.845, 0.22", "-109.992, -26.7085, -168.468, 0.22", "-113.968, -32.5177, -175.309, 0.22", "-118.681, -38.058, -181.925, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_DBC_2005a958c4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000015763654744)
    connect dend_0(0), soma_0(0.45000015763654744)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.20498, -9.63696, 0.0, 2.93949 ) }
    soma_0 { pt3dadd( 1.97921, -8.62937, 0.0, 5.10114 ) }
    soma_0 { pt3dadd( 1.75343, -7.62179, 0.0, 6.34149 ) }
    soma_0 { pt3dadd( 1.52766, -6.61421, 0.0, 7.24948 ) }
    soma_0 { pt3dadd( 1.30189, -5.60662, 0.0, 8.32859 ) }
    soma_0 { pt3dadd( 1.07612, -4.59904, 0.0, 9.63098 ) }
    soma_0 { pt3dadd( 0.850343, -3.59146, 0.0, 10.5761 ) }
    soma_0 { pt3dadd( 0.624571, -2.58388, 0.0, 11.2008 ) }
    soma_0 { pt3dadd( 0.398798, -1.57629, 0.0, 11.5851 ) }
    soma_0 { pt3dadd( 0.173026, -0.56871, 0.0, 11.8715 ) }
    soma_0 { pt3dadd( -0.0527468, 0.438873, 0.0, 11.942 ) }
    soma_0 { pt3dadd( -0.278519, 1.44646, 0.0, 11.923 ) }
    soma_0 { pt3dadd( -0.504292, 2.45404, 0.0, 11.4797 ) }
    soma_0 { pt3dadd( -0.730064, 3.46162, 0.0, 10.9001 ) }
    soma_0 { pt3dadd( -0.955837, 4.4692, 0.0, 10.1322 ) }
    soma_0 { pt3dadd( -1.18161, 5.47679, 0.0, 9.32117 ) }
    soma_0 { pt3dadd( -1.40738, 6.48437, 0.0, 8.43955 ) }
    soma_0 { pt3dadd( -1.63315, 7.49195, 0.0, 7.43264 ) }
    soma_0 { pt3dadd( -1.85893, 8.49954, 0.0, 6.41765 ) }
    soma_0 { pt3dadd( -2.0847, 9.50712, 0.0, 5.2256 ) }
    soma_0 { pt3dadd( -2.31047, 10.5147, 0.0, 2.87927 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67666, -9.21573, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 1.67666, -9.21573, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 2.16082, -10.2121, 7.79499, 3.32 ) }
    dend_25 { pt3dadd( 3.03806, -11.765, 9.1702, 2.36 ) }
    dend_25 { pt3dadd( 3.97513, -13.4239, 10.6392, 2.88 ) }
    dend_25 { pt3dadd( 4.06405, -13.5813, 10.7786, 2.65 ) }
    dend_25 { pt3dadd( 4.74122, -14.7801, 11.8402, 1.62 ) }
    dend_25 { pt3dadd( 5.66252, -16.2905, 13.3395, 1.84 ) }
    dend_25 { pt3dadd( 6.58441, -17.5553, 14.9525, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.96334, 9.77477, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -1.96334, 9.77477, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -2.80418, 11.3079, -0.165946, 3.32 ) }
    dend_0 { pt3dadd( -3.40047, 12.3901, -0.363115, 2.88 ) }
    dend_0 { pt3dadd( -3.83248, 13.1763, -0.525144, 2.88 ) }
    dend_0 { pt3dadd( -4.47767, 14.3505, -0.767129, 3.47 ) }
    dend_0 { pt3dadd( -5.32115, 15.8855, -1.08348, 2.51 ) }
    dend_0 { pt3dadd( -6.32402, 17.6818, -1.49305, 2.8 ) }
    dend_0 { pt3dadd( -7.21289, 19.2206, -1.91816, 4.13 ) }
    dend_0 { pt3dadd( -7.63237, 19.9342, -2.14798, 4.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.31047, 10.5147, 0.0, 0.488856 ) }
    axon_0 { pt3dadd( -5.59024, 25.1517, 0.0, 0.488856 ) }
    axon_0 { pt3dadd( -8.87001, 39.7888, 0.0, 0.488856 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.58441, -17.5553, 14.9525, 1.4 ) }
    dend_31 { pt3dadd( 7.50439, -18.2814, 14.0582, 1.4 ) }
    dend_31 { pt3dadd( 8.72862, -19.2775, 12.9087, 1.4 ) }
    dend_31 { pt3dadd( 9.56007, -19.9535, 12.1759, 1.4 ) }
    dend_31 { pt3dadd( 10.6032, -20.8148, 11.3466, 1.4 ) }
    dend_31 { pt3dadd( 11.5152, -21.5758, 10.6592, 1.18 ) }
    dend_31 { pt3dadd( 12.6773, -22.536, 9.8471, 1.4 ) }
    dend_31 { pt3dadd( 13.2053, -22.9878, 9.51006, 1.55 ) }
    dend_31 { pt3dadd( 13.7261, -23.4358, 9.22925, 1.7 ) }
    dend_31 { pt3dadd( 14.8651, -24.4037, 8.67813, 1.18 ) }
    dend_31 { pt3dadd( 15.7604, -25.1398, 8.3191, 1.18 ) }
    dend_31 { pt3dadd( 16.5675, -25.7885, 8.04647, 1.84 ) }
    dend_31 { pt3dadd( 17.0401, -26.1681, 7.93209, 1.84 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.58441, -17.5553, 14.9525, 1.18 ) }
    dend_26 { pt3dadd( 6.3261, -18.1563, 15.8984, 1.18 ) }
    dend_26 { pt3dadd( 5.74414, -19.6377, 18.1555, 1.03 ) }
    dend_26 { pt3dadd( 5.4172, -20.7274, 19.8092, 1.03 ) }
    dend_26 { pt3dadd( 5.30231, -21.3435, 20.7833, 0.96 ) }
    dend_26 { pt3dadd( 5.29054, -21.8559, 21.6577, 0.96 ) }
    dend_26 { pt3dadd( 5.34308, -22.5042, 22.867, 1.11 ) }
    dend_26 { pt3dadd( 5.47979, -23.1237, 24.1773, 1.03 ) }
    dend_26 { pt3dadd( 5.67666, -23.8022, 25.7547, 1.18 ) }
    dend_26 { pt3dadd( 5.92383, -24.6352, 27.8762, 1.84 ) }
    dend_26 { pt3dadd( 6.17737, -25.5862, 30.5392, 1.18 ) }
    dend_26 { pt3dadd( 6.27893, -26.3068, 32.6654, 1.18 ) }
    dend_26 { pt3dadd( 6.2065, -26.8236, 34.28, 1.18 ) }
    dend_26 { pt3dadd( 5.82852, -27.3689, 36.0388, 1.33 ) }
    dend_26 { pt3dadd( 5.17651, -27.8096, 37.4907, 1.33 ) }
    dend_26 { pt3dadd( 4.63188, -28.0476, 38.2831, 1.33 ) }
    dend_26 { pt3dadd( 3.64368, -28.3867, 39.4946, 1.4 ) }
    dend_26 { pt3dadd( 2.67832, -28.6905, 40.7497, 1.47 ) }
    dend_26 { pt3dadd( 1.3945, -29.0994, 42.7778, 1.33 ) }
    dend_26 { pt3dadd( 0.486005, -29.4267, 44.7204, 1.33 ) }
    dend_26 { pt3dadd( -0.124422, -29.7006, 46.407, 1.4 ) }
    dend_26 { pt3dadd( -0.859434, -30.107, 49.1308, 1.4 ) }
    dend_26 { pt3dadd( -1.44447, -30.519, 52.017, 1.4 ) }
    dend_26 { pt3dadd( -1.83328, -30.9022, 54.3565, 1.4 ) }
    dend_26 { pt3dadd( -2.27493, -31.432, 57.103, 1.4 ) }
    dend_26 { pt3dadd( -2.52416, -31.7255, 58.2586, 1.11 ) }
    dend_26 { pt3dadd( -3.32579, -32.5654, 60.8452, 1.11 ) }
    dend_26 { pt3dadd( -4.34357, -33.4904, 63.1879, 1.25 ) }
    dend_26 { pt3dadd( -4.96281, -34.0113, 64.3379, 1.55 ) }
    dend_26 { pt3dadd( -6.12385, -34.9153, 66.1251, 1.55 ) }
    dend_26 { pt3dadd( -7.55395, -35.9848, 68.0407, 1.25 ) }
    dend_26 { pt3dadd( -9.19884, -37.1676, 70.1019, 1.25 ) }
    dend_26 { pt3dadd( -11.1908, -38.612, 72.2647, 1.62 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.63237, 19.9342, -2.14798, 2.88 ) }
    dend_4 { pt3dadd( -8.96769, 21.5271, -3.73904, 2.88 ) }
    dend_4 { pt3dadd( -9.93486, 22.6809, -4.89144, 2.88 ) }
    dend_4 { pt3dadd( -10.9053, 23.8386, -6.04773, 3.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.63237, 19.9342, -2.14798, 2.06 ) }
    dend_1 { pt3dadd( -6.96196, 22.2442, -0.681685, 2.06 ) }
    dend_1 { pt3dadd( -6.34662, 24.3534, 0.45713, 0.96 ) }
    dend_1 { pt3dadd( -6.05448, 25.3016, 0.913574, 0.96 ) }
    dend_1 { pt3dadd( -5.62473, 26.6658, 1.48571, 0.81 ) }
    dend_1 { pt3dadd( -5.26319, 27.7562, 1.88463, 0.81 ) }
    dend_1 { pt3dadd( -4.762, 29.2081, 2.36013, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -4.43303, 30.1421, 2.53426, 1.11 ) }
    dend_1 { pt3dadd( -4.04697, 31.1833, 2.63055, 1.55 ) }
    dend_1 { pt3dadd( -3.55335, 32.5525, 2.71063, 1.18 ) }
    dend_1 { pt3dadd( -3.11559, 33.8627, 2.75369, 0.88 ) }
    dend_1 { pt3dadd( -2.89505, 34.6201, 2.76971, 0.74 ) }
    dend_1 { pt3dadd( -2.59131, 35.9149, 2.77962, 1.18 ) }
    dend_1 { pt3dadd( -2.30845, 37.3636, 2.82214, 0.81 ) }
    dend_1 { pt3dadd( -2.01385, 39.0934, 2.89853, 0.96 ) }
    dend_1 { pt3dadd( -1.76157, 40.6126, 2.95855, 1.25 ) }
    dend_1 { pt3dadd( -1.53788, 41.9416, 3.0055, 1.25 ) }
    dend_1 { pt3dadd( -1.28775, 43.182, 3.04274, 0.66 ) }
    dend_1 { pt3dadd( -0.945216, 44.4716, 3.07508, 0.88 ) }
    dend_1 { pt3dadd( -0.512262, 45.6213, 3.0529, 0.52 ) }
    dend_1 { pt3dadd( 2.98431E-4, 46.7003, 2.98058, 0.96 ) }
    dend_1 { pt3dadd( 0.366012, 47.3802, 2.90632, 0.96 ) }
    dend_1 { pt3dadd( 1.12434, 48.6645, 2.75695, 0.74 ) }
    dend_1 { pt3dadd( 1.76827, 49.6772, 2.63252, 0.88 ) }
    dend_1 { pt3dadd( 2.57393, 50.9159, 2.47352, 0.88 ) }
    dend_1 { pt3dadd( 3.47061, 52.3371, 2.38607, 0.96 ) }
    dend_1 { pt3dadd( 3.74505, 52.7803, 2.3909, 0.96 ) }
    dend_1 { pt3dadd( 4.47637, 54.0019, 2.49861, 0.96 ) }
    dend_1 { pt3dadd( 4.79966, 54.5621, 2.60728, 1.11 ) }
    dend_1 { pt3dadd( 5.19226, 55.2666, 2.79967, 0.96 ) }
    dend_1 { pt3dadd( 5.92832, 56.5095, 3.26695, 0.81 ) }
    dend_1 { pt3dadd( 6.57624, 57.5438, 3.73495, 0.66 ) }
    dend_1 { pt3dadd( 7.42574, 58.8968, 4.37727, 0.59 ) }
    dend_1 { pt3dadd( 8.15244, 60.0497, 5.0191, 0.88 ) }
    dend_1 { pt3dadd( 8.84288, 61.1409, 5.66096, 1.4 ) }
    dend_1 { pt3dadd( 9.86969, 62.7204, 6.65544, 0.88 ) }
    dend_1 { pt3dadd( 10.7503, 64.0111, 7.53056, 0.74 ) }
    dend_1 { pt3dadd( 11.2361, 64.7194, 8.04692, 0.74 ) }
    dend_1 { pt3dadd( 12.4728, 66.3969, 9.31995, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.87001, 39.7888, 0.0, 0.158825 ) }
    axon_1 { pt3dadd( -12.1498, 54.4258, 0.0, 0.158825 ) }
    axon_1 { pt3dadd( -15.4296, 69.0629, 0.0, 0.158825 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 35/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 17.0401, -26.1681, 7.93209, 1.7 ) }
    dend_35 { pt3dadd( 18.3843, -26.1861, 9.99047, 1.7 ) }
    dend_35 { pt3dadd( 19.5145, -26.3197, 11.7957, 1.25 ) }
    dend_35 { pt3dadd( 20.379, -26.5048, 13.2219, 1.25 ) }
    dend_35 { pt3dadd( 21.2436, -26.7649, 14.6342, 1.55 ) }
    dend_35 { pt3dadd( 22.3331, -27.1668, 16.375, 1.4 ) }
    dend_35 { pt3dadd( 23.3594, -27.5884, 17.9734, 1.62 ) }
    dend_35 { pt3dadd( 24.3745, -28.0917, 19.4591, 1.55 ) }
    dend_35 { pt3dadd( 25.5589, -28.7298, 21.1382, 1.4 ) }
    dend_35 { pt3dadd( 26.5709, -29.2907, 22.5025, 1.47 ) }
    dend_35 { pt3dadd( 28.0402, -30.1162, 24.3761, 1.18 ) }
    dend_35 { pt3dadd( 29.4475, -30.8762, 26.0335, 1.18 ) }
    dend_35 { pt3dadd( 31.0063, -31.6711, 27.7159, 1.03 ) }
    dend_35 { pt3dadd( 32.3269, -32.2894, 29.0089, 1.03 ) }
    dend_35 { pt3dadd( 32.8926, -32.5233, 29.509, 1.25 ) }
    dend_35 { pt3dadd( 34.3279, -33.0381, 30.69, 1.11 ) }
    dend_35 { pt3dadd( 35.572, -33.4198, 31.747, 1.33 ) }
    dend_35 { pt3dadd( 36.3568, -33.6272, 32.4181, 1.62 ) }
    dend_35 { pt3dadd( 38.1586, -34.0685, 33.9593, 1.33 ) }
    dend_35 { pt3dadd( 39.9311, -34.4613, 35.4917, 1.25 ) }
    dend_35 { pt3dadd( 41.4483, -34.7474, 36.8435, 1.18 ) }
    dend_35 { pt3dadd( 44.0379, -35.1313, 39.222, 1.47 ) }
    dend_35 { pt3dadd( 44.7751, -35.224, 39.9395, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.0401, -26.1681, 7.93209, 0.88 ) }
    dend_32 { pt3dadd( 17.1072, -27.1777, 8.58074, 0.88 ) }
    dend_32 { pt3dadd( 17.0637, -28.6778, 9.61445, 0.74 ) }
    dend_32 { pt3dadd( 16.9225, -30.2204, 10.7558, 0.74 ) }
    dend_32 { pt3dadd( 16.772, -31.4258, 11.6303, 0.74 ) }
    dend_32 { pt3dadd( 16.5734, -32.7187, 12.5317, 0.96 ) }
    dend_32 { pt3dadd( 16.3456, -34.0084, 13.3864, 1.7 ) }
    dend_32 { pt3dadd( 15.8784, -35.9388, 14.64, 0.66 ) }
    dend_32 { pt3dadd( 15.4724, -37.2825, 15.4157, 0.74 ) }
    dend_32 { pt3dadd( 15.1401, -38.3001, 15.8436, 0.88 ) }
    dend_32 { pt3dadd( 14.8268, -39.237, 16.0658, 1.11 ) }
    dend_32 { pt3dadd( 14.4661, -40.3747, 16.1351, 1.33 ) }
    dend_32 { pt3dadd( 14.0288, -41.9165, 16.0214, 0.74 ) }
    dend_32 { pt3dadd( 13.698, -43.3575, 15.7703, 0.74 ) }
    dend_32 { pt3dadd( 13.5147, -44.3714, 15.5162, 0.59 ) }
    dend_32 { pt3dadd( 13.2651, -46.1526, 15.0294, 0.88 ) }
    dend_32 { pt3dadd( 13.1108, -47.6995, 14.5984, 0.59 ) }
    dend_32 { pt3dadd( 13.0507, -48.5157, 14.3622, 0.59 ) }
    dend_32 { pt3dadd( 12.9878, -50.0016, 13.9442, 0.81 ) }
    dend_32 { pt3dadd( 12.9413, -51.9029, 13.4846, 0.74 ) }
    dend_32 { pt3dadd( 12.9298, -52.8572, 13.2573, 0.59 ) }
    dend_32 { pt3dadd( 12.943, -54.1006, 13.0081, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -11.1908, -38.612, 72.2647, 0.52 ) }
    dend_30 { pt3dadd( -12.073, -38.083, 76.1131, 0.52 ) }
    dend_30 { pt3dadd( -12.4383, -37.7921, 78.0177, 0.52 ) }
    dend_30 { pt3dadd( -12.7027, -37.5457, 79.5168, 0.52 ) }
    dend_30 { pt3dadd( -12.9012, -37.3514, 80.7486, 0.52 ) }
    dend_30 { pt3dadd( -13.2175, -37.0351, 82.6076, 0.52 ) }
    dend_30 { pt3dadd( -13.4564, -36.7984, 83.9229, 0.52 ) }
    dend_30 { pt3dadd( -13.7039, -36.5349, 85.1244, 0.52 ) }
    dend_30 { pt3dadd( -14.114, -36.1023, 86.9503, 0.52 ) }
    dend_30 { pt3dadd( -14.7032, -35.5072, 89.2027, 0.52 ) }
    dend_30 { pt3dadd( -15.1755, -35.0613, 90.7222, 0.81 ) }
    dend_30 { pt3dadd( -15.6783, -34.5851, 92.0834, 0.81 ) }
    dend_30 { pt3dadd( -16.1049, -34.1396, 93.1479, 0.59 ) }
    dend_30 { pt3dadd( -16.9871, -33.1085, 95.3197, 0.59 ) }
    dend_30 { pt3dadd( -17.5997, -32.2363, 96.9275, 0.52 ) }
    dend_30 { pt3dadd( -18.093, -31.3866, 98.285, 0.37 ) }
    dend_30 { pt3dadd( -18.6673, -30.1585, 100.136, 0.44 ) }
    dend_30 { pt3dadd( -19.1509, -28.8568, 101.926, 0.29 ) }
    dend_30 { pt3dadd( -19.4708, -27.741, 103.403, 0.29 ) }
    dend_30 { pt3dadd( -19.7959, -26.3137, 105.096, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -20.0234, -25.142, 106.439, 0.29 ) }
    dend_30 { pt3dadd( -20.3304, -23.3883, 108.38, 0.29 ) }
    dend_30 { pt3dadd( -20.4817, -22.4679, 109.39, 0.29 ) }
    dend_30 { pt3dadd( -20.8137, -20.5154, 111.527, 0.29 ) }
    dend_30 { pt3dadd( -21.0369, -19.2321, 112.906, 0.22 ) }
    dend_30 { pt3dadd( -21.422, -17.1567, 115.159, 0.22 ) }
    dend_30 { pt3dadd( -21.5962, -16.2254, 116.202, 0.22 ) }
    dend_30 { pt3dadd( -21.9278, -14.6227, 117.977, 0.22 ) }
    dend_30 { pt3dadd( -22.3419, -12.8034, 120.105, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.1908, -38.612, 72.2647, 1.03 ) }
    dend_27 { pt3dadd( -11.3067, -39.4481, 72.2647, 1.03 ) }
    dend_27 { pt3dadd( -11.4745, -40.619, 72.4112, 0.74 ) }
    dend_27 { pt3dadd( -11.6537, -42.0022, 72.651, 0.74 ) }
    dend_27 { pt3dadd( -11.782, -43.1071, 72.8577, 0.88 ) }
    dend_27 { pt3dadd( -11.929, -44.5982, 73.0828, 0.96 ) }
    dend_27 { pt3dadd( -11.9916, -45.3638, 73.1778, 0.96 ) }
    dend_27 { pt3dadd( -12.1063, -47.4432, 73.4033, 1.03 ) }
    dend_27 { pt3dadd( -12.1562, -48.835, 73.5337, 0.66 ) }
    dend_27 { pt3dadd( -12.1685, -49.9521, 73.6313, 0.52 ) }
    dend_27 { pt3dadd( -12.1287, -51.3767, 73.7352, 0.66 ) }
    dend_27 { pt3dadd( -12.038, -52.5717, 73.7935, 0.96 ) }
    dend_27 { pt3dadd( -11.9381, -53.8394, 73.8125, 1.11 ) }
    dend_27 { pt3dadd( -11.893, -54.3313, 73.7975, 1.11 ) }
    dend_27 { pt3dadd( -11.7514, -55.5998, 73.7899, 0.66 ) }
    dend_27 { pt3dadd( -11.6575, -56.3677, 73.8042, 0.66 ) }
    dend_27 { pt3dadd( -11.5185, -57.4488, 73.8495, 0.66 ) }
    dend_27 { pt3dadd( -11.3557, -58.7467, 73.9616, 0.88 ) }
    dend_27 { pt3dadd( -11.1887, -60.1862, 74.1602, 0.81 ) }
    dend_27 { pt3dadd( -11.0231, -61.833, 74.5034, 0.74 ) }
    dend_27 { pt3dadd( -10.905, -63.3246, 74.8928, 0.66 ) }
    dend_27 { pt3dadd( -10.8216, -64.7464, 75.3445, 0.52 ) }
    dend_27 { pt3dadd( -10.7364, -66.6323, 76.0168, 0.52 ) }
    dend_27 { pt3dadd( -10.6946, -67.7224, 76.465, 0.52 ) }
    dend_27 { pt3dadd( -10.6981, -69.2088, 77.1156, 0.52 ) }
    dend_27 { pt3dadd( -10.726, -70.1915, 77.5485, 0.66 ) }
    dend_27 { pt3dadd( -10.7622, -71.2738, 78.0054, 0.96 ) }
    dend_27 { pt3dadd( -10.8024, -72.8134, 78.5987, 1.03 ) }
    dend_27 { pt3dadd( -10.8152, -74.4408, 79.0887, 0.74 ) }
    dend_27 { pt3dadd( -10.7989, -75.9553, 79.451, 0.44 ) }
    dend_27 { pt3dadd( -10.7684, -76.921, 79.6327, 0.22 ) }
    dend_27 { pt3dadd( -10.7464, -77.3566, 79.7057, 0.22 ) }
    dend_27 { pt3dadd( -10.6618, -78.4455, 79.8518, 0.52 ) }
    dend_27 { pt3dadd( -10.5084, -79.7655, 79.9279, 0.52 ) }
    dend_27 { pt3dadd( -10.2464, -81.3622, 79.8897, 0.22 ) }
    dend_27 { pt3dadd( -10.0763, -82.1947, 79.8835, 0.22 ) }
    dend_27 { pt3dadd( -9.83483, -83.3108, 79.9301, 0.66 ) }
    dend_27 { pt3dadd( -9.47009, -84.8857, 80.0502, 0.66 ) }
    dend_27 { pt3dadd( -9.07983, -86.4166, 80.2069, 0.37 ) }
    dend_27 { pt3dadd( -8.75208, -87.5887, 80.4115, 0.22 ) }
    dend_27 { pt3dadd( -8.2109, -89.5169, 80.8581, 0.29 ) }
    dend_27 { pt3dadd( -7.87877, -90.7808, 81.0625, 0.29 ) }
    dend_27 { pt3dadd( -7.72112, -91.4224, 81.1266, 0.66 ) }
    dend_27 { pt3dadd( -7.47974, -92.436, 81.159, 0.96 ) }
    dend_27 { pt3dadd( -7.10632, -94.0675, 81.1121, 0.96 ) }
    dend_27 { pt3dadd( -6.77597, -95.4974, 80.9307, 0.37 ) }
    dend_27 { pt3dadd( -6.12337, -98.3973, 80.3329, 0.44 ) }
    dend_27 { pt3dadd( -5.95242, -99.2442, 80.1469, 0.44 ) }
    dend_27 { pt3dadd( -5.66187, -100.898, 79.8496, 0.52 ) }
    dend_27 { pt3dadd( -5.4163, -102.486, 79.6263, 0.44 ) }
    dend_27 { pt3dadd( -5.25734, -103.626, 79.5213, 0.44 ) }
    dend_27 { pt3dadd( -5.04091, -105.301, 79.5025, 0.44 ) }
    dend_27 { pt3dadd( -4.82017, -107.171, 79.7063, 0.44 ) }
    dend_27 { pt3dadd( -4.66865, -108.674, 79.924, 0.44 ) }
    dend_27 { pt3dadd( -4.58414, -109.78, 80.1175, 0.44 ) }
    dend_27 { pt3dadd( -4.51151, -110.832, 80.3197, 0.44 ) }
    dend_27 { pt3dadd( -4.47585, -111.966, 80.5565, 0.52 ) }
    dend_27 { pt3dadd( -4.48694, -113.353, 80.8508, 0.52 ) }
    dend_27 { pt3dadd( -4.51804, -114.186, 81.0157, 0.52 ) }
    dend_27 { pt3dadd( -4.6495, -116.052, 81.3185, 0.22 ) }
    dend_27 { pt3dadd( -4.76237, -117.576, 81.5205, 0.22 ) }
    dend_27 { pt3dadd( -4.86442, -118.947, 81.6609, 0.22 ) }
    dend_27 { pt3dadd( -4.9705, -120.375, 81.7639, 0.29 ) }
    dend_27 { pt3dadd( -5.04207, -121.707, 81.7783, 0.29 ) }
    dend_27 { pt3dadd( -5.08233, -123.257, 81.8743, 0.29 ) }
    dend_27 { pt3dadd( -5.07254, -125.219, 82.0802, 0.22 ) }
    dend_27 { pt3dadd( -5.04563, -125.993, 82.186, 0.29 ) }
    dend_27 { pt3dadd( -4.94425, -127.448, 82.4141, 0.37 ) }
    dend_27 { pt3dadd( -4.79065, -129.156, 82.7175, 0.37 ) }
    dend_27 { pt3dadd( -4.52412, -131.999, 83.1776, 0.22 ) }
    dend_27 { pt3dadd( -4.43186, -132.901, 83.3071, 0.22 ) }
    dend_27 { pt3dadd( -4.33276, -133.946, 83.4297, 0.37 ) }
    dend_27 { pt3dadd( -4.22808, -135.126, 83.5245, 0.37 ) }
    dend_27 { pt3dadd( -4.05405, -137.152, 83.6445, 0.29 ) }
    dend_27 { pt3dadd( -3.95264, -138.505, 83.6938, 0.22 ) }
    dend_27 { pt3dadd( -3.87575, -139.593, 83.6698, 0.22 ) }
    dend_27 { pt3dadd( -3.80432, -140.779, 83.7213, 0.29 ) }
    dend_27 { pt3dadd( -3.73876, -142.323, 83.885, 0.29 ) }
    dend_27 { pt3dadd( -3.71501, -143.634, 84.178, 0.29 ) }
    dend_27 { pt3dadd( -3.72016, -144.602, 84.4538, 0.29 ) }
    dend_27 { pt3dadd( -3.74469, -146.398, 85.0856, 0.15 ) }
    dend_27 { pt3dadd( -3.79293, -148.144, 85.7799, 0.15 ) }
    dend_27 { pt3dadd( -3.81765, -148.95, 86.1472, 0.37 ) }
    dend_27 { pt3dadd( -3.87362, -151.091, 87.2717, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.9053, 23.8386, -6.04773, 2.8 ) }
    dend_10 { pt3dadd( -12.2353, 24.0476, -6.96773, 2.8 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.9053, 23.8386, -6.04773, 1.77 ) }
    dend_5 { pt3dadd( -10.6935, 25.1108, -7.22189, 1.77 ) }
    dend_5 { pt3dadd( -10.4755, 26.8396, -8.89846, 1.4 ) }
    dend_5 { pt3dadd( -10.3389, 28.1927, -10.2229, 1.4 ) }
    dend_5 { pt3dadd( -10.265, 29.0604, -11.0947, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -10.1942, 30.1951, -12.2721, 1.84 ) }
    dend_5 { pt3dadd( -10.1294, 31.5249, -13.6645, 1.84 ) }
    dend_5 { pt3dadd( -10.1156, 32.7531, -15.013, 1.4 ) }
    dend_5 { pt3dadd( -10.1184, 34.0564, -16.4154, 1.84 ) }
    dend_5 { pt3dadd( -10.1352, 35.5948, -17.9662, 1.62 ) }
    dend_5 { pt3dadd( -10.1742, 37.4537, -19.697, 1.77 ) }
    dend_5 { pt3dadd( -10.2311, 38.4978, -20.5463, 1.77 ) }
    dend_5 { pt3dadd( -10.3927, 40.1671, -21.7611, 1.62 ) }
    dend_5 { pt3dadd( -10.5415, 41.2225, -22.45, 1.62 ) }
    dend_5 { pt3dadd( -10.8699, 42.9521, -23.4874, 1.47 ) }
    dend_5 { pt3dadd( -11.1466, 44.1268, -24.1271, 1.47 ) }
    dend_5 { pt3dadd( -11.7135, 46.2926, -25.2569, 1.4 ) }
    dend_5 { pt3dadd( -12.1578, 47.9441, -26.1376, 1.47 ) }
    dend_5 { pt3dadd( -12.5449, 49.475, -27.004, 1.55 ) }
    dend_5 { pt3dadd( -12.7268, 50.3692, -27.5725, 1.55 ) }
    dend_5 { pt3dadd( -12.9331, 51.9926, -28.6907, 1.25 ) }
    dend_5 { pt3dadd( -12.9859, 53.5893, -29.8244, 1.25 ) }
    dend_5 { pt3dadd( -12.8904, 54.8808, -30.7254, 1.4 ) }
    dend_5 { pt3dadd( -12.6814, 56.2439, -31.6121, 1.25 ) }
    dend_5 { pt3dadd( -12.342, 57.8581, -32.537, 1.25 ) }
    dend_5 { pt3dadd( -12.093, 59.0117, -33.0828, 1.25 ) }
    dend_5 { pt3dadd( -11.8012, 60.3878, -33.6797, 1.47 ) }
    dend_5 { pt3dadd( -11.6755, 61.1849, -33.9825, 1.62 ) }
    dend_5 { pt3dadd( -11.6101, 62.1898, -34.3088, 1.33 ) }
    dend_5 { pt3dadd( -11.6952, 64.3691, -34.8915, 1.11 ) }
    dend_5 { pt3dadd( -11.8879, 65.6903, -35.2457, 1.11 ) }
    dend_5 { pt3dadd( -12.1955, 67.249, -35.6962, 1.25 ) }
    dend_5 { pt3dadd( -12.4132, 68.1209, -35.9766, 1.47 ) }
    dend_5 { pt3dadd( -12.8119, 69.4824, -36.4502, 1.4 ) }
    dend_5 { pt3dadd( -13.2495, 70.7355, -36.9216, 1.25 ) }
    dend_5 { pt3dadd( -14.0378, 72.4365, -37.5874, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.4728, 66.3969, 9.31995, 0.15 ) }
    dend_3 { pt3dadd( 11.9471, 66.5551, 12.6076, 0.15 ) }
    dend_3 { pt3dadd( 11.709, 66.6813, 14.1627, 0.15 ) }
    dend_3 { pt3dadd( 11.5698, 66.8132, 15.1144, 0.29 ) }
    dend_3 { pt3dadd( 11.2554, 67.3245, 17.5934, 0.22 ) }
    dend_3 { pt3dadd( 11.0338, 67.8626, 19.6639, 0.22 ) }
    dend_3 { pt3dadd( 10.878, 68.4067, 21.3464, 0.37 ) }
    dend_3 { pt3dadd( 10.8598, 68.5316, 21.6686, 0.81 ) }
    dend_3 { pt3dadd( 10.8371, 69.0347, 22.5601, 0.15 ) }
    dend_3 { pt3dadd( 10.8551, 69.8507, 23.6386, 0.22 ) }
    dend_3 { pt3dadd( 10.8812, 70.1959, 24.0104, 0.59 ) }
    dend_3 { pt3dadd( 10.941, 70.8382, 24.7057, 1.03 ) }
    dend_3 { pt3dadd( 10.9888, 71.9868, 26.0722, 0.15 ) }
    dend_3 { pt3dadd( 10.9726, 72.3955, 26.6739, 0.29 ) }
    dend_3 { pt3dadd( 10.8464, 73.219, 28.2665, 0.22 ) }
    dend_3 { pt3dadd( 10.6084, 74.0241, 30.1674, 0.37 ) }
    dend_3 { pt3dadd( 10.4266, 74.4421, 31.3595, 0.37 ) }
    dend_3 { pt3dadd( 10.259, 74.7149, 32.3867, 0.44 ) }
    dend_3 { pt3dadd( 9.92137, 75.0932, 34.239, 0.37 ) }
    dend_3 { pt3dadd( 9.55886, 75.4344, 36.139, 0.37 ) }
    dend_3 { pt3dadd( 9.29531, 75.6275, 37.3542, 0.37 ) }
    dend_3 { pt3dadd( 8.93233, 75.8505, 38.9037, 0.37 ) }
    dend_3 { pt3dadd( 8.40765, 76.1811, 41.2978, 0.37 ) }
    dend_3 { pt3dadd( 7.92609, 76.5464, 43.9178, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.4728, 66.3969, 9.31995, 0.96 ) }
    dend_2 { pt3dadd( 13.6665, 68.029, 8.45481, 0.96 ) }
    dend_2 { pt3dadd( 14.0773, 68.5866, 8.21147, 0.88 ) }
    dend_2 { pt3dadd( 14.8245, 69.5771, 7.84148, 0.74 ) }
    dend_2 { pt3dadd( 15.6692, 70.6958, 7.49195, 0.96 ) }
    dend_2 { pt3dadd( 16.4335, 71.7224, 7.16491, 0.81 ) }
    dend_2 { pt3dadd( 17.1083, 72.6485, 6.86347, 0.44 ) }
    dend_2 { pt3dadd( 17.7455, 73.5981, 6.6106, 0.44 ) }
    dend_2 { pt3dadd( 18.1995, 74.3423, 6.38354, 0.66 ) }
    dend_2 { pt3dadd( 18.9008, 75.6034, 5.96607, 0.52 ) }
    dend_2 { pt3dadd( 19.4437, 76.6664, 5.58046, 0.74 ) }
    dend_2 { pt3dadd( 19.8804, 77.5795, 5.19751, 1.11 ) }
    dend_2 { pt3dadd( 20.261, 78.4721, 4.81017, 0.66 ) }
    dend_2 { pt3dadd( 20.7905, 79.7994, 4.24515, 0.66 ) }
    dend_2 { pt3dadd( 21.1373, 80.6881, 3.88563, 0.66 ) }
    dend_2 { pt3dadd( 21.5977, 81.8225, 3.48724, 0.81 ) }
    dend_2 { pt3dadd( 21.9516, 82.6312, 3.2735, 0.59 ) }
    dend_2 { pt3dadd( 22.5194, 83.8407, 2.97888, 0.52 ) }
    dend_2 { pt3dadd( 22.9406, 84.7228, 2.77702, 0.52 ) }
    dend_2 { pt3dadd( 23.2022, 85.2584, 2.67129, 0.52 ) }
    dend_2 { pt3dadd( 23.7125, 86.3214, 2.50645, 0.66 ) }
    dend_2 { pt3dadd( 24.1591, 87.2308, 2.41543, 0.88 ) }
    dend_2 { pt3dadd( 24.7628, 88.3664, 2.32638, 1.03 ) }
    dend_2 { pt3dadd( 25.4313, 89.5192, 2.26202, 0.52 ) }
    dend_2 { pt3dadd( 26.0063, 90.4869, 2.23514, 0.29 ) }
    dend_2 { pt3dadd( 26.5612, 91.3828, 2.23826, 0.29 ) }
    dend_2 { pt3dadd( 27.2146, 92.4255, 2.34356, 0.52 ) }
    dend_2 { pt3dadd( 27.9001, 93.4837, 2.5602, 0.22 ) }
    dend_2 { pt3dadd( 28.2702, 94.0467, 2.72819, 0.15 ) }
    dend_2 { pt3dadd( 28.7096, 94.7426, 2.95121, 0.66 ) }
    dend_2 { pt3dadd( 29.1961, 95.6664, 3.27028, 0.29 ) }
    dend_2 { pt3dadd( 29.6843, 96.887, 3.7564, 0.52 ) }
    dend_2 { pt3dadd( 29.8737, 97.5069, 4.0393, 1.03 ) }
    dend_2 { pt3dadd( 30.128, 98.4444, 4.50404, 0.37 ) }
    dend_2 { pt3dadd( 30.3658, 99.2608, 4.86669, 0.44 ) }
    dend_2 { pt3dadd( 30.8247, 100.679, 5.35457, 0.59 ) }
    dend_2 { pt3dadd( 31.2972, 102.112, 5.67041, 0.88 ) }
    dend_2 { pt3dadd( 31.5798, 102.956, 5.74559, 0.88 ) }
    dend_2 { pt3dadd( 31.8323, 103.711, 5.75712, 0.66 ) }
    dend_2 { pt3dadd( 32.4185, 105.343, 5.58339, 0.29 ) }
    dend_2 { pt3dadd( 32.891, 106.551, 5.29424, 0.66 ) }
    dend_2 { pt3dadd( 33.277, 107.485, 4.95369, 0.44 ) }
    dend_2 { pt3dadd( 33.5206, 108.106, 4.69618, 0.44 ) }
    dend_2 { pt3dadd( 33.87, 109.117, 4.31117, 0.22 ) }
    dend_2 { pt3dadd( 34.1922, 110.168, 3.98469, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 34.4247, 110.96, 3.87169, 0.66 ) }
    dend_2 { pt3dadd( 34.6223, 111.594, 3.85659, 0.88 ) }
    dend_2 { pt3dadd( 34.9834, 112.669, 3.92408, 0.52 ) }
    dend_2 { pt3dadd( 35.2846, 113.523, 4.09396, 0.52 ) }
    dend_2 { pt3dadd( 35.6887, 114.66, 4.49294, 0.52 ) }
    dend_2 { pt3dadd( 36.2548, 116.266, 5.24307, 0.52 ) }
    dend_2 { pt3dadd( 36.5539, 117.079, 5.68768, 0.96 ) }
    dend_2 { pt3dadd( 36.9714, 118.112, 6.31831, 0.66 ) }
    dend_2 { pt3dadd( 37.539, 119.34, 7.11488, 0.22 ) }
    dend_2 { pt3dadd( 37.8556, 119.969, 7.52296, 0.22 ) }
    dend_2 { pt3dadd( 38.2193, 120.653, 7.92338, 0.29 ) }
    dend_2 { pt3dadd( 38.7437, 121.585, 8.3433, 0.37 ) }
    dend_2 { pt3dadd( 39.4442, 122.7, 8.69677, 0.52 ) }
    dend_2 { pt3dadd( 40.0087, 123.476, 8.83154, 0.81 ) }
    dend_2 { pt3dadd( 40.5155, 124.105, 8.81456, 0.81 ) }
    dend_2 { pt3dadd( 41.4456, 125.194, 8.61889, 0.22 ) }
    dend_2 { pt3dadd( 42.0919, 125.926, 8.47777, 0.59 ) }
    dend_2 { pt3dadd( 43.0406, 126.989, 8.24813, 0.59 ) }
    dend_2 { pt3dadd( 43.8221, 127.865, 8.06195, 0.22 ) }
    dend_2 { pt3dadd( 44.8103, 129.023, 7.87583, 0.15 ) }
    dend_2 { pt3dadd( 45.5077, 129.928, 7.79088, 0.15 ) }
    dend_2 { pt3dadd( 46.6406, 131.61, 7.92636, 0.59 ) }
    dend_2 { pt3dadd( 47.011, 132.245, 8.08052, 0.59 ) }
    dend_2 { pt3dadd( 47.4455, 133.106, 8.38764, 0.59 ) }
    dend_2 { pt3dadd( 47.8094, 133.906, 8.70484, 0.29 ) }
    dend_2 { pt3dadd( 48.2121, 134.818, 9.09065, 0.22 ) }
    dend_2 { pt3dadd( 48.9829, 136.491, 9.71171, 0.22 ) }
    dend_2 { pt3dadd( 49.2258, 136.989, 9.82897, 0.22 ) }
    dend_2 { pt3dadd( 49.6779, 137.859, 9.99187, 0.52 ) }
    dend_2 { pt3dadd( 50.2182, 138.852, 10.1238, 0.59 ) }
    dend_2 { pt3dadd( 50.5612, 139.468, 10.1651, 0.59 ) }
    dend_2 { pt3dadd( 51.2168, 140.605, 10.2128, 0.29 ) }
    dend_2 { pt3dadd( 51.6575, 141.403, 10.2131, 0.29 ) }
    dend_2 { pt3dadd( 52.1915, 142.483, 10.2487, 0.37 ) }
    dend_2 { pt3dadd( 52.4929, 143.198, 10.2975, 0.29 ) }
    dend_2 { pt3dadd( 52.7765, 144.06, 10.4489, 0.44 ) }
    dend_2 { pt3dadd( 53.1647, 145.494, 10.797, 0.44 ) }
    dend_2 { pt3dadd( 53.4119, 146.515, 11.0768, 0.66 ) }
    dend_2 { pt3dadd( 53.642, 147.465, 11.3549, 0.88 ) }
    dend_2 { pt3dadd( 53.9446, 148.721, 11.7112, 0.66 ) }
    dend_2 { pt3dadd( 54.5999, 151.066, 12.3301, 0.37 ) }
    dend_2 { pt3dadd( 54.9892, 152.225, 12.6468, 0.22 ) }
    dend_2 { pt3dadd( 55.3838, 153.272, 12.8832, 0.52 ) }
    dend_2 { pt3dadd( 55.6874, 153.951, 13.0087, 0.59 ) }
    dend_2 { pt3dadd( 56.1747, 154.886, 13.1016, 0.29 ) }
    dend_2 { pt3dadd( 56.7028, 155.806, 13.1652, 0.22 ) }
    dend_2 { pt3dadd( 57.6776, 157.459, 13.2407, 0.15 ) }
    dend_2 { pt3dadd( 58.4141, 158.765, 13.3865, 0.37 ) }
    dend_2 { pt3dadd( 58.8499, 159.6, 13.5254, 0.37 ) }
    dend_2 { pt3dadd( 59.2893, 160.541, 13.6999, 0.37 ) }
    dend_2 { pt3dadd( 60.1795, 162.552, 14.0834, 0.81 ) }
    dend_2 { pt3dadd( 60.6202, 163.61, 14.2937, 0.96 ) }
    dend_2 { pt3dadd( 60.9574, 164.448, 14.4495, 0.52 ) }
    dend_2 { pt3dadd( 61.3415, 165.451, 14.6968, 0.22 ) }
    dend_2 { pt3dadd( 61.7936, 166.75, 15.0277, 0.29 ) }
    dend_2 { pt3dadd( 62.2356, 168.07, 15.3306, 0.22 ) }
    dend_2 { pt3dadd( 62.5964, 169.153, 15.5142, 0.74 ) }
    dend_2 { pt3dadd( 63.1235, 170.733, 15.7817, 0.29 ) }
    dend_2 { pt3dadd( 63.7013, 172.468, 16.1398, 0.52 ) }
    dend_2 { pt3dadd( 64.0194, 173.4, 16.3651, 0.59 ) }
    dend_2 { pt3dadd( 64.3823, 174.478, 16.6527, 0.29 ) }
    dend_2 { pt3dadd( 64.6191, 175.266, 16.8388, 0.29 ) }
    dend_2 { pt3dadd( 64.8875, 176.232, 17.0787, 0.29 ) }
    dend_2 { pt3dadd( 65.1533, 177.193, 17.3885, 0.66 ) }
    dend_2 { pt3dadd( 65.3619, 177.892, 17.6518, 0.96 ) }
    dend_2 { pt3dadd( 65.6067, 178.682, 18.0649, 0.37 ) }
    dend_2 { pt3dadd( 65.9547, 179.842, 18.7822, 0.29 ) }
    dend_2 { pt3dadd( 66.3084, 181.259, 19.7013, 0.37 ) }
    dend_2 { pt3dadd( 66.5719, 182.551, 20.5518, 0.66 ) }
    dend_2 { pt3dadd( 66.7093, 183.323, 21.0435, 0.44 ) }
    dend_2 { pt3dadd( 66.9556, 184.74, 21.9109, 0.88 ) }
    dend_2 { pt3dadd( 67.1092, 185.613, 22.4137, 1.11 ) }
    dend_2 { pt3dadd( 67.3771, 187.264, 23.2822, 0.22 ) }
    dend_2 { pt3dadd( 67.49, 188.08, 23.5847, 0.22 ) }
    dend_2 { pt3dadd( 67.5835, 188.91, 23.8071, 0.15 ) }
    dend_2 { pt3dadd( 67.6487, 189.869, 23.999, 0.15 ) }
    dend_2 { pt3dadd( 67.6774, 190.569, 24.0959, 0.15 ) }
    dend_2 { pt3dadd( 67.7071, 191.692, 24.2637, 0.37 ) }
    dend_2 { pt3dadd( 67.7501, 192.82, 24.4385, 0.37 ) }
    dend_2 { pt3dadd( 67.7732, 193.513, 24.5574, 0.22 ) }
    dend_2 { pt3dadd( 67.8124, 194.538, 24.7398, 0.44 ) }
    dend_2 { pt3dadd( 67.8398, 195.091, 24.8341, 0.44 ) }
    dend_2 { pt3dadd( 67.9008, 195.88, 24.9545, 0.44 ) }
    dend_2 { pt3dadd( 67.988, 196.573, 25.0201, 0.66 ) }
    dend_2 { pt3dadd( 68.1374, 197.339, 25.1025, 0.37 ) }
    dend_2 { pt3dadd( 68.3708, 198.205, 25.1955, 0.37 ) }
    dend_2 { pt3dadd( 68.702, 199.13, 25.2876, 0.22 ) }
    dend_2 { pt3dadd( 68.8658, 199.533, 25.3196, 0.22 ) }
    dend_2 { pt3dadd( 69.3033, 200.571, 25.3874, 0.22 ) }
    dend_2 { pt3dadd( 69.8834, 201.924, 25.4064, 0.52 ) }
    dend_2 { pt3dadd( 70.2191, 202.713, 25.3852, 0.96 ) }
    dend_2 { pt3dadd( 70.4556, 203.294, 25.349, 0.96 ) }
    dend_2 { pt3dadd( 70.9013, 204.454, 25.2418, 0.22 ) }
    dend_2 { pt3dadd( 71.2209, 205.389, 25.1225, 0.29 ) }
    dend_2 { pt3dadd( 71.5603, 206.562, 24.9013, 0.29 ) }
    dend_2 { pt3dadd( 71.7259, 207.25, 24.7211, 0.81 ) }
    dend_2 { pt3dadd( 71.8585, 207.857, 24.5517, 0.52 ) }
    dend_2 { pt3dadd( 72.0501, 208.844, 24.2469, 0.37 ) }
    dend_2 { pt3dadd( 72.1607, 209.528, 23.9557, 0.37 ) }
    dend_2 { pt3dadd( 72.278, 210.403, 23.5331, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 72.3569, 211.067, 23.2074, 0.74 ) }
    dend_2 { pt3dadd( 72.4563, 211.891, 22.7715, 0.29 ) }
    dend_2 { pt3dadd( 72.5506, 212.704, 22.3341, 0.37 ) }
    dend_2 { pt3dadd( 72.7559, 214.505, 21.3954, 0.37 ) }
    dend_2 { pt3dadd( 72.866, 215.378, 20.9418, 0.52 ) }
    dend_2 { pt3dadd( 72.9775, 216.057, 20.6167, 0.52 ) }
    dend_2 { pt3dadd( 73.1207, 216.59, 20.36, 0.52 ) }
    dend_2 { pt3dadd( 73.4213, 217.351, 20.0746, 0.59 ) }
    dend_2 { pt3dadd( 73.7922, 218.101, 19.8814, 0.22 ) }
    dend_2 { pt3dadd( 74.5015, 219.307, 19.7574, 0.44 ) }
    dend_2 { pt3dadd( 75.171, 220.279, 19.7185, 0.52 ) }
    dend_2 { pt3dadd( 76.3449, 221.788, 19.8281, 0.29 ) }
    dend_2 { pt3dadd( 77.5104, 223.083, 20.1551, 0.44 ) }
    dend_2 { pt3dadd( 78.2466, 223.809, 20.5228, 0.44 ) }
    dend_2 { pt3dadd( 79.2126, 224.702, 21.2774, 0.44 ) }
    dend_2 { pt3dadd( 79.851, 225.299, 21.9311, 0.44 ) }
    dend_2 { pt3dadd( 80.5689, 226.024, 22.8613, 0.44 ) }
    dend_2 { pt3dadd( 81.3525, 226.899, 24.0851, 0.22 ) }
    dend_2 { pt3dadd( 82.0039, 227.698, 25.2064, 0.74 ) }
    dend_2 { pt3dadd( 82.6668, 228.651, 26.4905, 0.74 ) }
    dend_2 { pt3dadd( 83.0395, 229.351, 27.3195, 0.59 ) }
    dend_2 { pt3dadd( 83.4424, 230.369, 28.3878, 0.22 ) }
    dend_2 { pt3dadd( 83.5723, 230.804, 28.7677, 0.15 ) }
    dend_2 { pt3dadd( 83.74, 231.665, 29.3649, 0.29 ) }
    dend_2 { pt3dadd( 83.8693, 232.688, 29.9249, 0.29 ) }
    dend_2 { pt3dadd( 83.9401, 233.714, 30.3722, 0.29 ) }
    dend_2 { pt3dadd( 83.9557, 234.312, 30.62, 0.52 ) }
    dend_2 { pt3dadd( 83.955, 234.983, 30.8556, 0.88 ) }
    dend_2 { pt3dadd( 83.9176, 236.144, 31.2281, 0.52 ) }
    dend_2 { pt3dadd( 83.8714, 236.933, 31.3677, 0.52 ) }
    dend_2 { pt3dadd( 83.795, 237.775, 31.4083, 0.22 ) }
    dend_2 { pt3dadd( 83.6719, 238.705, 31.4184, 0.22 ) }
    dend_2 { pt3dadd( 83.5798, 239.326, 31.4188, 0.52 ) }
    dend_2 { pt3dadd( 83.5015, 239.82, 31.4112, 0.81 ) }
    dend_2 { pt3dadd( 83.1825, 241.788, 31.3369, 0.22 ) }
    dend_2 { pt3dadd( 83.0036, 242.75, 31.2914, 0.22 ) }
    dend_2 { pt3dadd( 82.6503, 244.471, 31.2044, 0.22 ) }
    dend_2 { pt3dadd( 82.5774, 244.814, 31.1681, 0.37 ) }
    dend_2 { pt3dadd( 82.449, 245.461, 31.1004, 0.96 ) }
    dend_2 { pt3dadd( 82.4046, 245.717, 31.0786, 0.96 ) }
    dend_2 { pt3dadd( 82.2525, 246.787, 31.0301, 0.22 ) }
    dend_2 { pt3dadd( 82.2238, 247.078, 31.0095, 0.22 ) }
    dend_2 { pt3dadd( 82.1631, 248.163, 30.8982, 0.37 ) }
    dend_2 { pt3dadd( 82.153, 248.857, 30.8889, 0.88 ) }
    dend_2 { pt3dadd( 82.1965, 250.266, 30.9634, 0.22 ) }
    dend_2 { pt3dadd( 82.2496, 250.9, 31.0298, 0.37 ) }
    dend_2 { pt3dadd( 82.4205, 252.224, 31.2542, 0.66 ) }
    dend_2 { pt3dadd( 82.5663, 253.249, 31.525, 0.22 ) }
    dend_2 { pt3dadd( 82.741, 254.407, 31.9365, 0.66 ) }
    dend_2 { pt3dadd( 82.8339, 255.015, 32.193, 0.66 ) }
    dend_2 { pt3dadd( 82.9788, 255.932, 32.6829, 0.44 ) }
    dend_2 { pt3dadd( 83.0412, 256.397, 32.9913, 0.59 ) }
    dend_2 { pt3dadd( 83.1627, 257.431, 33.8007, 0.15 ) }
    dend_2 { pt3dadd( 83.2016, 257.848, 34.2068, 0.37 ) }
    dend_2 { pt3dadd( 83.2279, 258.21, 34.6013, 0.37 ) }
    dend_2 { pt3dadd( 83.2622, 258.991, 35.5312, 0.15 ) }
    dend_2 { pt3dadd( 83.2786, 259.573, 36.2556, 0.15 ) }
    dend_2 { pt3dadd( 83.3047, 259.899, 36.6099, 0.29 ) }
    dend_2 { pt3dadd( 83.4062, 260.581, 37.2713, 0.29 ) }
    dend_2 { pt3dadd( 83.5808, 261.539, 38.0651, 0.22 ) }
    dend_2 { pt3dadd( 83.7352, 262.373, 38.6073, 0.66 ) }
    dend_2 { pt3dadd( 83.7671, 262.572, 38.7084, 0.66 ) }
    dend_2 { pt3dadd( 83.8827, 263.81, 39.3391, 0.15 ) }
    dend_2 { pt3dadd( 83.897, 264.768, 39.8335, 0.15 ) }
    dend_2 { pt3dadd( 83.8321, 265.509, 40.2571, 0.37 ) }
    dend_2 { pt3dadd( 83.7588, 265.999, 40.6102, 0.37 ) }
    dend_2 { pt3dadd( 83.6064, 266.809, 41.2027, 0.22 ) }
    dend_2 { pt3dadd( 83.3221, 268.091, 42.1158, 0.22 ) }
    dend_2 { pt3dadd( 83.1761, 268.739, 42.5543, 0.37 ) }
    dend_2 { pt3dadd( 82.8127, 270.486, 43.5751, 0.15 ) }
    dend_2 { pt3dadd( 82.5039, 272.113, 44.3451, 0.15 ) }
    dend_2 { pt3dadd( 82.192, 274.124, 45.0829, 0.15 ) }
    dend_2 { pt3dadd( 82.0653, 275.242, 45.3717, 0.15 ) }
    dend_2 { pt3dadd( 81.9793, 276.874, 45.6313, 0.15 ) }
    dend_2 { pt3dadd( 82.0552, 278.205, 45.7475, 0.15 ) }
    dend_2 { pt3dadd( 82.457, 280.173, 45.7276, 0.15 ) }
    dend_2 { pt3dadd( 82.8215, 281.148, 45.6243, 0.15 ) }
    dend_2 { pt3dadd( 83.2699, 281.905, 45.5086, 0.15 ) }
    dend_2 { pt3dadd( 83.9235, 282.694, 45.3559, 0.37 ) }
    dend_2 { pt3dadd( 85.6101, 284.205, 45.0002, 0.15 ) }
    dend_2 { pt3dadd( 86.6222, 284.912, 44.8264, 0.15 ) }
    dend_2 { pt3dadd( 87.8599, 285.618, 44.7077, 0.15 ) }
    dend_2 { pt3dadd( 88.3202, 285.862, 44.6772, 0.59 ) }
    dend_2 { pt3dadd( 89.2485, 286.335, 44.6848, 0.29 ) }
    dend_2 { pt3dadd( 89.9702, 286.71, 44.7706, 0.15 ) }
    dend_2 { pt3dadd( 90.3512, 286.942, 44.8762, 0.29 ) }
    dend_2 { pt3dadd( 91.2505, 287.6, 45.2454, 0.88 ) }
    dend_2 { pt3dadd( 91.7975, 288.099, 45.6121, 0.22 ) }
    dend_2 { pt3dadd( 92.5227, 288.985, 46.3583, 0.22 ) }
    dend_2 { pt3dadd( 92.797, 289.448, 46.8277, 0.22 ) }
    dend_2 { pt3dadd( 93.2097, 290.307, 47.8212, 0.29 ) }
    dend_2 { pt3dadd( 93.4432, 290.901, 48.5698, 0.15 ) }
    dend_2 { pt3dadd( 93.8241, 292.098, 50.1632, 0.66 ) }
    dend_2 { pt3dadd( 94.1103, 293.24, 51.7339, 0.37 ) }
    dend_2 { pt3dadd( 94.3356, 294.506, 53.5445, 0.15 ) }
    dend_2 { pt3dadd( 94.4249, 295.353, 54.7242, 0.15 ) }
    dend_2 { pt3dadd( 94.4367, 296.095, 55.6946, 0.15 ) }
    dend_2 { pt3dadd( 94.4156, 296.432, 56.0597, 0.15 ) }
    dend_2 { pt3dadd( 94.3301, 297.125, 56.5891, 0.52 ) }
    dend_2 { pt3dadd( 94.1754, 298.165, 57.0478, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 93.8725, 300.062, 57.4285, 0.15 ) }
    dend_2 { pt3dadd( 93.6262, 301.662, 57.5557, 0.15 ) }
    dend_2 { pt3dadd( 93.4663, 303.077, 57.5391, 0.15 ) }
    dend_2 { pt3dadd( 93.312, 305.12, 57.4044, 0.15 ) }
    dend_2 { pt3dadd( 93.2209, 307.712, 57.1134, 0.15 ) }
    dend_2 { pt3dadd( 93.2505, 309.517, 56.8292, 0.15 ) }
    dend_2 { pt3dadd( 93.3151, 310.415, 56.66, 0.22 ) }
    dend_2 { pt3dadd( 93.5253, 312.191, 56.282, 0.07 ) }
    dend_2 { pt3dadd( 93.6108, 312.771, 56.15, 0.07 ) }
    dend_2 { pt3dadd( 93.8033, 313.928, 55.8569, 0.22 ) }
    dend_2 { pt3dadd( 94.1033, 315.638, 55.4707, 0.07 ) }
    dend_2 { pt3dadd( 94.217, 316.247, 55.2959, 0.07 ) }
    dend_2 { pt3dadd( 94.3033, 316.706, 55.137, 0.22 ) }
    dend_2 { pt3dadd( 94.4348, 317.332, 54.8838, 0.59 ) }
    dend_2 { pt3dadd( 94.8602, 318.905, 54.1106, 0.07 ) }
    dend_2 { pt3dadd( 95.223, 319.937, 53.5257, 0.07 ) }
    dend_2 { pt3dadd( 95.4005, 320.354, 53.2724, 0.29 ) }
    dend_2 { pt3dadd( 95.6367, 320.852, 52.9589, 0.29 ) }
    dend_2 { pt3dadd( 96.1388, 321.907, 52.313, 0.07 ) }
    dend_2 { pt3dadd( 96.6805, 323.125, 51.6553, 0.07 ) }
    dend_2 { pt3dadd( 96.8927, 323.693, 51.4065, 0.07 ) }
    dend_2 { pt3dadd( 96.9927, 324.093, 51.2367, 0.29 ) }
    dend_2 { pt3dadd( 97.0601, 324.626, 51.0586, 0.29 ) }
    dend_2 { pt3dadd( 97.1504, 326.11, 50.6303, 0.15 ) }
    dend_2 { pt3dadd( 97.0949, 327.451, 50.3033, 0.15 ) }
    dend_2 { pt3dadd( 96.977, 328.383, 50.1305, 0.29 ) }
    dend_2 { pt3dadd( 96.6949, 329.97, 49.8382, 0.22 ) }
    dend_2 { pt3dadd( 96.3445, 331.638, 49.5533, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 44.7751, -35.224, 39.9395, 0.88 ) }
    dend_39 { pt3dadd( 45.1135, -33.9651, 39.8854, 0.88 ) }
    dend_39 { pt3dadd( 45.2982, -33.0964, 39.918, 0.74 ) }
    dend_39 { pt3dadd( 45.5152, -31.8517, 40.0029, 0.81 ) }
    dend_39 { pt3dadd( 45.7207, -30.4657, 40.1154, 0.88 ) }
    dend_39 { pt3dadd( 45.8893, -29.1828, 40.2258, 1.4 ) }
    dend_39 { pt3dadd( 46.0225, -27.9415, 40.3804, 0.96 ) }
    dend_39 { pt3dadd( 46.071, -26.3931, 40.6431, 0.88 ) }
    dend_39 { pt3dadd( 46.0537, -25.495, 40.8236, 0.81 ) }
    dend_39 { pt3dadd( 46.0109, -24.9347, 40.893, 0.81 ) }
    dend_39 { pt3dadd( 45.8842, -24.104, 40.9072, 0.81 ) }
    dend_39 { pt3dadd( 45.5485, -22.5821, 40.7646, 1.18 ) }
    dend_39 { pt3dadd( 45.2279, -21.4155, 40.5747, 1.18 ) }
    dend_39 { pt3dadd( 44.8372, -20.0847, 40.2917, 1.18 ) }
    dend_39 { pt3dadd( 44.0024, -17.0751, 39.7437, 0.96 ) }
    dend_39 { pt3dadd( 43.4903, -14.9551, 39.4219, 0.59 ) }
    dend_39 { pt3dadd( 43.2169, -13.517, 39.294, 0.59 ) }
    dend_39 { pt3dadd( 43.0607, -12.2875, 39.2911, 0.74 ) }
    dend_39 { pt3dadd( 42.9831, -11.0178, 39.4488, 1.11 ) }
    dend_39 { pt3dadd( 42.964, -9.01097, 40.0322, 1.4 ) }
    dend_39 { pt3dadd( 43.0439, -7.42234, 40.7156, 1.4 ) }
    dend_39 { pt3dadd( 43.1925, -5.59449, 41.5787, 1.18 ) }
    dend_39 { pt3dadd( 43.2975, -4.24231, 42.1861, 1.47 ) }
    dend_39 { pt3dadd( 43.3435, -3.23407, 42.5412, 1.11 ) }
    dend_39 { pt3dadd( 43.308, -1.3974, 42.8773, 0.74 ) }
    dend_39 { pt3dadd( 43.2137, -0.257203, 42.844, 1.03 ) }
    dend_39 { pt3dadd( 43.0796, 0.754991, 42.6328, 1.11 ) }
    dend_39 { pt3dadd( 42.8044, 2.25999, 42.0372, 0.88 ) }
    dend_39 { pt3dadd( 42.4658, 3.71701, 41.2475, 0.88 ) }
    dend_39 { pt3dadd( 42.0903, 4.99223, 40.4364, 0.74 ) }
    dend_39 { pt3dadd( 41.8016, 5.82873, 39.8214, 0.66 ) }
    dend_39 { pt3dadd( 41.419, 6.83073, 39.0815, 0.59 ) }
    dend_39 { pt3dadd( 41.0011, 7.96795, 38.262, 0.81 ) }
    dend_39 { pt3dadd( 40.5815, 9.14995, 37.526, 0.88 ) }
    dend_39 { pt3dadd( 40.0811, 10.7142, 36.7199, 0.81 ) }
    dend_39 { pt3dadd( 39.7084, 12.0381, 36.136, 0.81 ) }
    dend_39 { pt3dadd( 39.4092, 13.4467, 35.5966, 0.81 ) }
    dend_39 { pt3dadd( 39.2169, 15.0108, 35.0926, 0.66 ) }
    dend_39 { pt3dadd( 39.1606, 16.4003, 34.7345, 0.88 ) }
    dend_39 { pt3dadd( 39.1876, 17.6334, 34.4456, 1.18 ) }
    dend_39 { pt3dadd( 39.2384, 18.4408, 34.2668, 1.18 ) }
    dend_39 { pt3dadd( 39.3835, 20.0726, 33.9283, 0.81 ) }
    dend_39 { pt3dadd( 39.5917, 21.8219, 33.5659, 0.96 ) }
    dend_39 { pt3dadd( 39.764, 23.2531, 33.2347, 0.96 ) }
    dend_39 { pt3dadd( 39.9279, 24.4949, 32.8787, 1.11 ) }
    dend_39 { pt3dadd( 40.0735, 25.4933, 32.58, 1.11 ) }
    dend_39 { pt3dadd( 40.2405, 26.5545, 32.2718, 0.88 ) }
    dend_39 { pt3dadd( 40.476, 27.9426, 31.9492, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 44.7751, -35.224, 39.9395, 0.88 ) }
    dend_36 { pt3dadd( 46.2187, -37.3864, 42.8538, 0.88 ) }
    dend_36 { pt3dadd( 46.7528, -38.0961, 43.7107, 0.66 ) }
    dend_36 { pt3dadd( 47.5835, -39.2501, 45.0772, 0.74 ) }
    dend_36 { pt3dadd( 47.876, -39.7287, 45.6233, 1.03 ) }
    dend_36 { pt3dadd( 48.1262, -40.2318, 46.1381, 0.74 ) }
    dend_36 { pt3dadd( 48.4434, -41.0164, 46.8845, 0.96 ) }
    dend_36 { pt3dadd( 48.8758, -42.5142, 48.013, 1.03 ) }
    dend_36 { pt3dadd( 49.1992, -44.2117, 49.2865, 0.74 ) }
    dend_36 { pt3dadd( 49.4069, -45.7781, 50.4388, 1.03 ) }
    dend_36 { pt3dadd( 49.5262, -47.0921, 51.4451, 0.88 ) }
    dend_36 { pt3dadd( 49.6062, -48.4222, 52.5225, 0.81 ) }
    dend_36 { pt3dadd( 49.6249, -49.4449, 53.3554, 0.66 ) }
    dend_36 { pt3dadd( 49.6174, -50.7479, 54.3763, 0.66 ) }
    dend_36 { pt3dadd( 49.644, -52.2899, 55.5054, 0.88 ) }
    dend_36 { pt3dadd( 49.7457, -53.9494, 56.7253, 1.11 ) }
    dend_36 { pt3dadd( 49.9389, -55.6953, 58.0423, 0.96 ) }
    dend_36 { pt3dadd( 50.202, -57.3781, 59.2637, 0.96 ) }
    dend_36 { pt3dadd( 50.4366, -58.5187, 60.0419, 0.96 ) }
    dend_36 { pt3dadd( 50.8731, -60.2824, 61.178, 1.03 ) }
    dend_36 { pt3dadd( 51.3252, -62.0051, 62.2208, 0.81 ) }
    dend_36 { pt3dadd( 51.6383, -63.0456, 62.8054, 0.81 ) }
    dend_36 { pt3dadd( 51.9578, -63.9366, 63.2638, 0.66 ) }
    dend_36 { pt3dadd( 52.4744, -65.0292, 63.8559, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 53.2949, -66.4853, 64.7247, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 1/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.943, -54.1006, 13.0081, 0.29 ) }
    dend_34 { pt3dadd( 12.7062, -55.0744, 13.441, 0.29 ) }
    dend_34 { pt3dadd( 12.4821, -56.2064, 13.9121, 0.29 ) }
    dend_34 { pt3dadd( 12.3657, -56.9538, 14.2401, 0.81 ) }
    dend_34 { pt3dadd( 12.2203, -58.1665, 14.7704, 0.59 ) }
    dend_34 { pt3dadd( 12.1115, -59.4263, 15.3658, 0.44 ) }
    dend_34 { pt3dadd( 12.0625, -60.4686, 15.9081, 0.22 ) }
    dend_34 { pt3dadd( 12.0854, -61.2385, 16.3362, 0.22 ) }
    dend_34 { pt3dadd( 12.1903, -62.2104, 16.9223, 0.22 ) }
    dend_34 { pt3dadd( 12.2686, -62.8094, 17.3361, 0.74 ) }
    dend_34 { pt3dadd( 12.4123, -63.9038, 18.1598, 0.74 ) }
    dend_34 { pt3dadd( 12.5393, -64.8998, 18.9462, 0.96 ) }
    dend_34 { pt3dadd( 12.5957, -65.4711, 19.3773, 1.11 ) }
    dend_34 { pt3dadd( 12.6804, -66.7679, 20.2948, 0.37 ) }
    dend_34 { pt3dadd( 12.7456, -67.9052, 20.9827, 0.22 ) }
    dend_34 { pt3dadd( 12.7914, -68.6055, 21.3272, 0.66 ) }
    dend_34 { pt3dadd( 12.8479, -69.4131, 21.5967, 0.66 ) }
    dend_34 { pt3dadd( 12.9107, -70.1672, 21.7608, 0.66 ) }
    dend_34 { pt3dadd( 12.989, -70.9371, 21.8861, 0.29 ) }
    dend_34 { pt3dadd( 13.1288, -71.9027, 21.9852, 0.22 ) }
    dend_34 { pt3dadd( 13.3575, -73.0481, 22.1125, 0.66 ) }
    dend_34 { pt3dadd( 13.6097, -74.1916, 22.336, 0.88 ) }
    dend_34 { pt3dadd( 13.7874, -75.0203, 22.5649, 0.37 ) }
    dend_34 { pt3dadd( 14.01, -76.1809, 22.9544, 0.22 ) }
    dend_34 { pt3dadd( 14.1192, -76.8844, 23.2445, 0.59 ) }
    dend_34 { pt3dadd( 14.2226, -77.7656, 23.6588, 0.74 ) }
    dend_34 { pt3dadd( 14.3783, -79.3276, 24.4583, 0.15 ) }
    dend_34 { pt3dadd( 14.4309, -79.9203, 24.7666, 0.15 ) }
    dend_34 { pt3dadd( 14.4877, -80.6998, 25.1381, 0.37 ) }
    dend_34 { pt3dadd( 14.5847, -82.1489, 25.7171, 0.22 ) }
    dend_34 { pt3dadd( 14.6232, -82.6102, 25.8683, 0.66 ) }
    dend_34 { pt3dadd( 14.686, -83.1676, 26.0179, 1.11 ) }
    dend_34 { pt3dadd( 14.8087, -83.9888, 26.1909, 0.37 ) }
    dend_34 { pt3dadd( 15.0318, -85.1446, 26.4253, 0.15 ) }
    dend_34 { pt3dadd( 15.1996, -85.8897, 26.6052, 0.44 ) }
    dend_34 { pt3dadd( 15.5231, -87.2202, 26.9896, 0.15 ) }
    dend_34 { pt3dadd( 15.7893, -88.3144, 27.3644, 0.15 ) }
    dend_34 { pt3dadd( 15.9389, -88.9613, 27.6277, 0.81 ) }
    dend_34 { pt3dadd( 16.054, -89.4859, 27.8565, 1.18 ) }
    dend_34 { pt3dadd( 16.372, -91.2112, 28.6716, 0.15 ) }
    dend_34 { pt3dadd( 16.5136, -92.1846, 29.1375, 0.15 ) }
    dend_34 { pt3dadd( 16.5561, -92.6918, 29.385, 0.81 ) }
    dend_34 { pt3dadd( 16.5831, -93.5045, 29.8387, 0.81 ) }
    dend_34 { pt3dadd( 16.5832, -94.3018, 30.3329, 0.22 ) }
    dend_34 { pt3dadd( 16.555, -95.4386, 31.1114, 0.15 ) }
    dend_34 { pt3dadd( 16.5388, -95.83, 31.3852, 0.22 ) }
    dend_34 { pt3dadd( 16.4991, -96.8296, 32.1157, 0.15 ) }
    dend_34 { pt3dadd( 16.4512, -98.2937, 33.3224, 0.15 ) }
    dend_34 { pt3dadd( 16.4395, -98.7658, 33.7327, 0.59 ) }
    dend_34 { pt3dadd( 16.411, -99.9557, 34.8052, 0.15 ) }
    dend_34 { pt3dadd( 16.4022, -100.503, 35.276, 0.15 ) }
    dend_34 { pt3dadd( 16.3998, -101.215, 35.8354, 0.81 ) }
    dend_34 { pt3dadd( 16.4467, -102.818, 36.8801, 0.15 ) }
    dend_34 { pt3dadd( 16.4886, -103.587, 37.2782, 0.15 ) }
    dend_34 { pt3dadd( 16.5232, -104.107, 37.5086, 0.52 ) }
    dend_34 { pt3dadd( 16.5827, -104.838, 37.7568, 0.66 ) }
    dend_34 { pt3dadd( 16.6473, -105.734, 37.9933, 0.29 ) }
    dend_34 { pt3dadd( 16.7011, -106.813, 38.1616, 0.15 ) }
    dend_34 { pt3dadd( 16.71, -107.343, 38.1895, 0.15 ) }
    dend_34 { pt3dadd( 16.7003, -107.908, 38.2131, 0.59 ) }
    dend_34 { pt3dadd( 16.6643, -108.614, 38.202, 0.88 ) }
    dend_34 { pt3dadd( 16.5833, -109.484, 38.1447, 0.29 ) }
    dend_34 { pt3dadd( 16.477, -110.232, 38.0596, 0.22 ) }
    dend_34 { pt3dadd( 16.3092, -111.275, 37.906, 0.07 ) }
    dend_34 { pt3dadd( 16.2195, -111.961, 37.7619, 0.07 ) }
    dend_34 { pt3dadd( 16.1007, -113.146, 37.4695, 0.07 ) }
    dend_34 { pt3dadd( 16.0876, -113.42, 37.3964, 0.29 ) }
    dend_34 { pt3dadd( 16.1027, -114.191, 37.2065, 0.66 ) }
    dend_34 { pt3dadd( 16.1655, -115.17, 36.9946, 0.15 ) }
    dend_34 { pt3dadd( 16.2539, -116.289, 36.8045, 0.15 ) }
    dend_34 { pt3dadd( 16.3155, -117.061, 36.6808, 0.29 ) }
    dend_34 { pt3dadd( 16.3764, -117.988, 36.5637, 0.15 ) }
    dend_34 { pt3dadd( 16.4151, -118.797, 36.455, 0.37 ) }
    dend_34 { pt3dadd( 16.4295, -119.35, 36.3592, 0.37 ) }
    dend_34 { pt3dadd( 16.4211, -120.398, 36.1539, 0.22 ) }
    dend_34 { pt3dadd( 16.389, -121.284, 35.982, 0.44 ) }
    dend_34 { pt3dadd( 16.3477, -122.177, 35.7281, 0.96 ) }
    dend_34 { pt3dadd( 16.32, -122.777, 35.5039, 0.22 ) }
    dend_34 { pt3dadd( 16.2799, -124.004, 34.9655, 0.15 ) }
    dend_34 { pt3dadd( 16.2776, -124.257, 34.8511, 0.15 ) }
    dend_34 { pt3dadd( 16.3053, -125.273, 34.3487, 0.29 ) }
    dend_34 { pt3dadd( 16.3655, -126.43, 33.7277, 0.15 ) }
    dend_34 { pt3dadd( 16.4164, -127.039, 33.3646, 0.15 ) }
    dend_34 { pt3dadd( 16.4387, -127.292, 33.2109, 0.37 ) }
    dend_34 { pt3dadd( 16.4953, -127.964, 32.8221, 0.88 ) }
    dend_34 { pt3dadd( 16.6278, -129.389, 32.0547, 0.15 ) }
    dend_34 { pt3dadd( 16.6922, -130.128, 31.7, 0.15 ) }
    dend_34 { pt3dadd( 16.7409, -130.864, 31.4246, 0.15 ) }
    dend_34 { pt3dadd( 16.7589, -131.544, 31.2202, 0.66 ) }
    dend_34 { pt3dadd( 16.7534, -132.31, 31.0525, 0.22 ) }
    dend_34 { pt3dadd( 16.7233, -133.049, 30.9489, 0.22 ) }
    dend_34 { pt3dadd( 16.6708, -133.716, 30.918, 0.15 ) }
    dend_34 { pt3dadd( 16.624, -134.203, 30.9113, 0.15 ) }
    dend_34 { pt3dadd( 16.5219, -135.121, 30.8958, 0.66 ) }
    dend_34 { pt3dadd( 16.3269, -136.589, 30.8679, 0.15 ) }
    dend_34 { pt3dadd( 16.2498, -137.104, 30.8578, 0.15 ) }
    dend_34 { pt3dadd( 16.1812, -137.541, 30.8495, 0.22 ) }
    dend_34 { pt3dadd( 16.0932, -138.166, 30.8382, 0.15 ) }
    dend_34 { pt3dadd( 16.01, -138.801, 30.8281, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 15.8795, -139.787, 30.8157, 0.44 ) }
    dend_34 { pt3dadd( 15.7419, -140.834, 30.8078, 0.15 ) }
    dend_34 { pt3dadd( 15.6684, -141.46, 30.7814, 0.15 ) }
    dend_34 { pt3dadd( 15.6078, -142.013, 30.7082, 0.15 ) }
    dend_34 { pt3dadd( 15.5383, -142.638, 30.5789, 0.15 ) }
    dend_34 { pt3dadd( 15.4466, -143.361, 30.391, 0.44 ) }
    dend_34 { pt3dadd( 15.316, -144.234, 30.1368, 0.44 ) }
    dend_34 { pt3dadd( 15.1094, -145.394, 29.8435, 0.15 ) }
    dend_34 { pt3dadd( 14.8375, -146.882, 29.535, 0.15 ) }
    dend_34 { pt3dadd( 14.7103, -147.59, 29.4146, 0.44 ) }
    dend_34 { pt3dadd( 14.5373, -148.606, 29.2818, 0.22 ) }
    dend_34 { pt3dadd( 14.3821, -149.707, 29.2445, 0.22 ) }
    dend_34 { pt3dadd( 14.1751, -151.348, 29.3402, 0.07 ) }
    dend_34 { pt3dadd( 14.0514, -152.452, 29.5168, 0.07 ) }
    dend_34 { pt3dadd( 14.0118, -152.859, 29.6096, 0.29 ) }
    dend_34 { pt3dadd( 13.9469, -153.606, 29.7932, 0.96 ) }
    dend_34 { pt3dadd( 13.7948, -155.613, 30.3621, 0.15 ) }
    dend_34 { pt3dadd( 13.7315, -156.364, 30.5907, 0.15 ) }
    dend_34 { pt3dadd( 13.6511, -157.036, 30.752, 0.15 ) }
    dend_34 { pt3dadd( 13.5083, -157.954, 30.9776, 0.37 ) }
    dend_34 { pt3dadd( 13.4147, -158.469, 31.1063, 0.37 ) }
    dend_34 { pt3dadd( 13.1527, -159.666, 31.3893, 0.15 ) }
    dend_34 { pt3dadd( 12.9676, -160.345, 31.5482, 0.74 ) }
    dend_34 { pt3dadd( 12.4856, -161.872, 32.086, 0.15 ) }
    dend_34 { pt3dadd( 12.097, -162.887, 32.546, 0.15 ) }
    dend_34 { pt3dadd( 11.8369, -163.436, 32.8925, 0.59 ) }
    dend_34 { pt3dadd( 11.5373, -163.973, 33.3248, 0.22 ) }
    dend_34 { pt3dadd( 10.9675, -164.861, 34.1497, 0.15 ) }
    dend_34 { pt3dadd( 10.2422, -165.858, 35.2412, 0.15 ) }
    dend_34 { pt3dadd( 9.86285, -166.313, 35.819, 0.52 ) }
    dend_34 { pt3dadd( 9.03049, -167.162, 36.9652, 0.15 ) }
    dend_34 { pt3dadd( 8.45861, -167.663, 37.7707, 0.15 ) }
    dend_34 { pt3dadd( 8.21809, -167.856, 38.1199, 0.44 ) }
    dend_34 { pt3dadd( 7.76718, -168.192, 38.7627, 0.81 ) }
    dend_34 { pt3dadd( 7.35346, -168.508, 39.329, 0.81 ) }
    dend_34 { pt3dadd( 6.38859, -169.313, 40.7099, 0.15 ) }
    dend_34 { pt3dadd( 5.4256, -170.187, 42.0787, 0.15 ) }
    dend_34 { pt3dadd( 5.13876, -170.492, 42.5033, 0.15 ) }
    dend_34 { pt3dadd( 4.91538, -170.779, 42.8807, 0.66 ) }
    dend_34 { pt3dadd( 4.47485, -171.501, 43.7036, 0.22 ) }
    dend_34 { pt3dadd( 4.00724, -172.497, 44.8035, 0.15 ) }
    dend_34 { pt3dadd( 3.90078, -172.784, 45.1409, 0.22 ) }
    dend_34 { pt3dadd( 3.62129, -173.594, 46.1607, 0.15 ) }
    dend_34 { pt3dadd( 3.38641, -174.258, 47.0597, 0.44 ) }
    dend_34 { pt3dadd( 3.20547, -174.771, 47.7788, 0.88 ) }
    dend_34 { pt3dadd( 2.5619, -176.339, 50.0489, 0.15 ) }
    dend_34 { pt3dadd( 1.93871, -177.573, 51.826, 0.15 ) }
    dend_34 { pt3dadd( 1.55162, -178.238, 52.7777, 0.15 ) }
    dend_34 { pt3dadd( 1.21926, -178.726, 53.4605, 0.37 ) }
    dend_34 { pt3dadd( 0.902753, -179.139, 54.0065, 0.37 ) }
    dend_34 { pt3dadd( 0.0774399, -180.098, 55.2594, 0.07 ) }
    dend_34 { pt3dadd( -0.563002, -180.787, 56.0059, 0.07 ) }
    dend_34 { pt3dadd( -0.91214, -181.157, 56.3562, 0.15 ) }
    dend_34 { pt3dadd( -1.70451, -181.981, 57.1242, 0.07 ) }
    dend_34 { pt3dadd( -2.15264, -182.44, 57.5604, 0.29 ) }
    dend_34 { pt3dadd( -2.76592, -183.068, 58.1632, 0.29 ) }
    dend_34 { pt3dadd( -3.4924, -183.886, 58.911, 0.15 ) }
    dend_34 { pt3dadd( -3.83626, -184.302, 59.2845, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.943, -54.1006, 13.0081, 0.22 ) }
    dend_33 { pt3dadd( 14.3705, -54.9391, 8.33856, 0.22 ) }
    dend_33 { pt3dadd( 14.7812, -55.2047, 7.16446, 0.22 ) }
    dend_33 { pt3dadd( 15.1346, -55.4685, 6.16202, 0.52 ) }
    dend_33 { pt3dadd( 15.4206, -55.7131, 5.31962, 0.88 ) }
    dend_33 { pt3dadd( 15.8589, -56.1581, 3.93215, 0.96 ) }
    dend_33 { pt3dadd( 16.2649, -56.6687, 2.47424, 0.74 ) }
    dend_33 { pt3dadd( 16.6121, -57.4098, 0.854361, 0.29 ) }
    dend_33 { pt3dadd( 16.7634, -57.9839, -0.250534, 0.37 ) }
    dend_33 { pt3dadd( 16.8229, -58.4512, -1.04035, 0.37 ) }
    dend_33 { pt3dadd( 16.8398, -58.8901, -1.73527, 0.74 ) }
    dend_33 { pt3dadd( 16.8447, -59.4753, -2.65178, 0.44 ) }
    dend_33 { pt3dadd( 16.8944, -60.4891, -4.35498, 0.44 ) }
    dend_33 { pt3dadd( 16.9754, -60.8283, -5.04519, 0.44 ) }
    dend_33 { pt3dadd( 17.1938, -61.2337, -6.00265, 0.22 ) }
    dend_33 { pt3dadd( 17.5931, -61.7586, -7.3136, 0.22 ) }
    dend_33 { pt3dadd( 17.9542, -62.182, -8.39042, 0.44 ) }
    dend_33 { pt3dadd( 18.2829, -62.6043, -9.40407, 0.59 ) }
    dend_33 { pt3dadd( 18.7492, -63.4576, -11.2859, 0.29 ) }
    dend_33 { pt3dadd( 18.8723, -63.9087, -12.2363, 0.22 ) }
    dend_33 { pt3dadd( 18.8551, -64.3564, -13.0737, 0.29 ) }
    dend_33 { pt3dadd( 18.7022, -64.9519, -14.0234, 0.44 ) }
    dend_33 { pt3dadd( 18.3723, -65.7496, -15.175, 0.74 ) }
    dend_33 { pt3dadd( 17.8688, -66.6724, -16.4059, 0.96 ) }
    dend_33 { pt3dadd( 17.6118, -67.075, -16.9176, 0.96 ) }
    dend_33 { pt3dadd( 17.0775, -67.8841, -17.9644, 0.37 ) }
    dend_33 { pt3dadd( 16.5647, -68.7098, -19.1034, 0.44 ) }
    dend_33 { pt3dadd( 16.2772, -69.2883, -19.962, 0.37 ) }
    dend_33 { pt3dadd( 16.1461, -69.7175, -20.6313, 0.22 ) }
    dend_33 { pt3dadd( 16.1331, -70.1587, -21.3761, 0.22 ) }
    dend_33 { pt3dadd( 16.2205, -70.4122, -21.9114, 0.29 ) }
    dend_33 { pt3dadd( 16.5007, -70.7241, -22.8335, 0.44 ) }
    dend_33 { pt3dadd( 16.8534, -70.969, -23.8227, 0.44 ) }
    dend_33 { pt3dadd( 17.1296, -71.1337, -24.5802, 0.66 ) }
    dend_33 { pt3dadd( 17.6092, -71.429, -25.9649, 0.81 ) }
    dend_33 { pt3dadd( 18.1336, -71.8248, -27.6926, 0.96 ) }
    dend_33 { pt3dadd( 18.5135, -72.2311, -29.2239, 0.96 ) }
    dend_33 { pt3dadd( 18.7623, -72.5828, -30.3932, 0.96 ) }
    dend_33 { pt3dadd( 18.8972, -72.8011, -31.1032, 0.66 ) }
    dend_33 { pt3dadd( 19.1063, -73.1544, -32.2287, 0.74 ) }
    dend_33 { pt3dadd( 19.3219, -73.5197, -33.3004, 0.74 ) }
    dend_33 { pt3dadd( 19.8018, -74.2345, -35.2984, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( 20.3441, -74.9441, -37.3009, 0.29 ) }
    dend_33 { pt3dadd( 20.7595, -75.4311, -38.8276, 0.29 ) }
    dend_33 { pt3dadd( 21.0755, -75.7502, -39.9118, 0.29 ) }
    dend_33 { pt3dadd( 21.3783, -76.0183, -40.9011, 0.37 ) }
    dend_33 { pt3dadd( 21.8666, -76.4016, -42.4467, 0.52 ) }
    dend_33 { pt3dadd( 22.3053, -76.7314, -43.8456, 0.44 ) }
    dend_33 { pt3dadd( 22.9701, -77.3135, -46.1516, 0.44 ) }
    dend_33 { pt3dadd( 26.0316, -81.8147, -54.4085, 0.44 ) }
    dend_33 { pt3dadd( 28.5868, -87.442, -62.0495, 0.44 ) }
    dend_33 { pt3dadd( 31.4514, -92.0567, -70.3077, 0.44 ) }
    dend_33 { pt3dadd( 33.9932, -96.6202, -78.702, 0.44 ) }
    dend_33 { pt3dadd( 34.6615, -100.093, -87.9858, 0.44 ) }
    dend_33 { pt3dadd( 36.6863, -101.727, -97.6263, 0.44 ) }
    dend_33 { pt3dadd( 38.7426, -103.63, -107.205, 0.44 ) }
    dend_33 { pt3dadd( 42.0884, -106.434, -116.155, 0.44 ) }
    dend_33 { pt3dadd( 45.3555, -107.957, -125.469, 0.44 ) }
    dend_33 { pt3dadd( 47.4959, -107.84, -135.237, 0.44 ) }
    dend_33 { pt3dadd( 50.586, -106.716, -144.673, 0.44 ) }
    dend_33 { pt3dadd( 52.6372, -106.818, -154.46, 0.44 ) }
    dend_33 { pt3dadd( 54.8246, -107.971, -164.142, 0.44 ) }
    dend_33 { pt3dadd( 58.0574, -110.492, -173.226, 0.44 ) }
    dend_33 { pt3dadd( 61.7574, -112.844, -182.18, 0.44 ) }
    dend_33 { pt3dadd( 65.4951, -116.454, -190.641, 0.44 ) }
    dend_33 { pt3dadd( 68.6248, -120.395, -199.185, 0.44 ) }
    dend_33 { pt3dadd( 71.3828, -124.561, -207.739, 0.44 ) }
    dend_33 { pt3dadd( 75.2003, -127.569, -216.422, 0.44 ) }
    dend_33 { pt3dadd( 77.0731, -130.362, -225.795, 0.44 ) }
    dend_33 { pt3dadd( 80.0511, -134.219, -234.435, 0.44 ) }
    dend_33 { pt3dadd( 82.4468, -139.878, -242.101, 0.44 ) }
    dend_33 { pt3dadd( 86.1473, -145.622, -249.154, 0.44 ) }
    dend_33 { pt3dadd( 90.8081, -152.097, -254.795, 0.44 ) }
    dend_33 { pt3dadd( 94.8368, -158.673, -260.784, 0.44 ) }
    dend_33 { pt3dadd( 97.7055, -166.22, -266.136, 0.44 ) }
    dend_33 { pt3dadd( 102.021, -171.836, -272.951, 0.44 ) }
    dend_33 { pt3dadd( 106.084, -178.17, -279.199, 0.44 ) }
    dend_33 { pt3dadd( 110.73, -184.953, -284.436, 0.44 ) }
    dend_33 { pt3dadd( 115.803, -191.858, -289.065, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.87362, -151.091, 87.2717, 0.15 ) }
    dend_29 { pt3dadd( -3.78695, -152.229, 87.8288, 0.15 ) }
    dend_29 { pt3dadd( -3.74581, -153.05, 88.2994, 0.22 ) }
    dend_29 { pt3dadd( -3.72428, -153.639, 88.6491, 0.22 ) }
    dend_29 { pt3dadd( -3.69497, -154.528, 89.1932, 0.37 ) }
    dend_29 { pt3dadd( -3.62935, -155.69, 90.0163, 0.15 ) }
    dend_29 { pt3dadd( -3.44934, -157.601, 91.4996, 0.15 ) }
    dend_29 { pt3dadd( -3.37816, -158.171, 92.0673, 0.15 ) }
    dend_29 { pt3dadd( -3.29911, -158.715, 92.6876, 0.29 ) }
    dend_29 { pt3dadd( -3.00542, -160.431, 94.8756, 0.15 ) }
    dend_29 { pt3dadd( -2.75222, -161.565, 96.5603, 0.15 ) }
    dend_29 { pt3dadd( -2.59809, -162.06, 97.4161, 0.15 ) }
    dend_29 { pt3dadd( -2.05305, -163.292, 99.827, 0.15 ) }
    dend_29 { pt3dadd( -1.80404, -163.732, 100.926, 0.15 ) }
    dend_29 { pt3dadd( -1.51612, -164.163, 102.241, 0.22 ) }
    dend_29 { pt3dadd( -1.10944, -164.701, 104.113, 0.44 ) }
    dend_29 { pt3dadd( -0.841648, -165.047, 105.33, 0.44 ) }
    dend_29 { pt3dadd( -0.327322, -165.699, 107.55, 0.15 ) }
    dend_29 { pt3dadd( 0.82196, -167.027, 111.962, 0.22 ) }
    dend_29 { pt3dadd( 1.55152, -167.825, 114.601, 0.22 ) }
    dend_29 { pt3dadd( 1.80627, -168.093, 115.42, 0.22 ) }
    dend_29 { pt3dadd( 2.27863, -168.596, 116.747, 0.22 ) }
    dend_29 { pt3dadd( 2.78699, -169.113, 117.879, 0.22 ) }
    dend_29 { pt3dadd( 3.60111, -169.885, 119.195, 0.22 ) }
    dend_29 { pt3dadd( 4.19876, -170.431, 119.893, 0.22 ) }
    dend_29 { pt3dadd( 5.03658, -171.243, 120.757, 0.07 ) }
    dend_29 { pt3dadd( 6.28164, -172.509, 122.099, 0.07 ) }
    dend_29 { pt3dadd( 7.73765, -174.026, 123.649, 0.07 ) }
    dend_29 { pt3dadd( 8.85464, -175.207, 124.862, 0.07 ) }
    dend_29 { pt3dadd( 10.436, -176.986, 126.587, 0.07 ) }
    dend_29 { pt3dadd( 11.7556, -178.564, 128.143, 0.07 ) }
    dend_29 { pt3dadd( 12.9219, -180.129, 129.864, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 69/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.87362, -151.091, 87.2717, 0.22 ) }
    dend_28 { pt3dadd( -4.27334, -153.282, 86.142, 0.22 ) }
    dend_28 { pt3dadd( -4.60174, -155.162, 85.7112, 0.15 ) }
    dend_28 { pt3dadd( -4.8441, -156.592, 85.6692, 0.15 ) }
    dend_28 { pt3dadd( -5.0771, -157.973, 85.7764, 0.15 ) }
    dend_28 { pt3dadd( -5.31666, -159.332, 85.9466, 0.15 ) }
    dend_28 { pt3dadd( -5.8205, -162.339, 86.365, 0.15 ) }
    dend_28 { pt3dadd( -6.02643, -163.718, 86.7185, 0.15 ) }
    dend_28 { pt3dadd( -6.16153, -164.594, 86.9906, 0.37 ) }
    dend_28 { pt3dadd( -6.3664, -165.751, 87.2892, 0.59 ) }
    dend_28 { pt3dadd( -6.73864, -167.716, 87.6497, 0.22 ) }
    dend_28 { pt3dadd( -7.08205, -169.359, 87.8086, 0.22 ) }
    dend_28 { pt3dadd( -7.38666, -170.664, 87.7455, 0.15 ) }
    dend_28 { pt3dadd( -7.68992, -171.802, 87.6259, 0.15 ) }
    dend_28 { pt3dadd( -8.23127, -173.569, 87.4167, 0.15 ) }
    dend_28 { pt3dadd( -8.50589, -174.361, 87.2707, 0.15 ) }
    dend_28 { pt3dadd( -8.80803, -175.126, 87.0385, 0.29 ) }
    dend_28 { pt3dadd( -9.07361, -175.742, 86.8045, 0.29 ) }
    dend_28 { pt3dadd( -9.52464, -176.83, 86.3294, 0.44 ) }
    dend_28 { pt3dadd( -9.8517, -177.712, 86.0307, 0.44 ) }
    dend_28 { pt3dadd( -10.4038, -179.409, 85.7104, 0.22 ) }
    dend_28 { pt3dadd( -10.8602, -181.002, 85.565, 0.29 ) }
    dend_28 { pt3dadd( -11.2523, -182.649, 85.5658, 0.07 ) }
    dend_28 { pt3dadd( -11.5076, -183.985, 85.683, 0.07 ) }
    dend_28 { pt3dadd( -11.9008, -186.82, 86.0382, 0.22 ) }
    dend_28 { pt3dadd( -12.0305, -188.098, 86.354, 0.22 ) }
    dend_28 { pt3dadd( -12.0906, -188.917, 86.6757, 0.22 ) }
    dend_28 { pt3dadd( -12.1091, -189.556, 87.0035, 0.44 ) }
    dend_28 { pt3dadd( -12.1114, -190.238, 87.3839, 0.66 ) }
    dend_28 { pt3dadd( -12.1077, -191.99, 88.3682, 0.22 ) }
    dend_28 { pt3dadd( -12.0806, -193.99, 89.3851, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -12.0599, -194.946, 89.867, 0.07 ) }
    dend_28 { pt3dadd( -11.9993, -196.166, 90.4071, 0.07 ) }
    dend_28 { pt3dadd( -11.9082, -197.195, 90.7934, 0.15 ) }
    dend_28 { pt3dadd( -11.8015, -198.006, 91.0402, 0.15 ) }
    dend_28 { pt3dadd( -11.5846, -199.276, 91.3298, 0.37 ) }
    dend_28 { pt3dadd( -11.3068, -200.594, 91.4092, 0.66 ) }
    dend_28 { pt3dadd( -10.8545, -202.537, 91.348, 0.15 ) }
    dend_28 { pt3dadd( -10.5292, -203.884, 91.2062, 0.22 ) }
    dend_28 { pt3dadd( -10.2217, -205.136, 91.0282, 0.22 ) }
    dend_28 { pt3dadd( -9.96458, -206.234, 90.8322, 0.15 ) }
    dend_28 { pt3dadd( -9.8033, -207.008, 90.6754, 0.15 ) }
    dend_28 { pt3dadd( -9.69169, -207.764, 90.5466, 0.59 ) }
    dend_28 { pt3dadd( -9.64909, -208.607, 90.4548, 0.59 ) }
    dend_28 { pt3dadd( -9.73281, -210.282, 90.3215, 0.22 ) }
    dend_28 { pt3dadd( -9.79809, -210.783, 90.2717, 0.22 ) }
    dend_28 { pt3dadd( -9.93878, -211.607, 90.185, 0.44 ) }
    dend_28 { pt3dadd( -10.1119, -212.785, 90.0704, 0.66 ) }
    dend_28 { pt3dadd( -10.2578, -214.093, 89.9338, 0.29 ) }
    dend_28 { pt3dadd( -10.3278, -215.162, 89.8205, 0.66 ) }
    dend_28 { pt3dadd( -10.3205, -216.515, 89.676, 0.52 ) }
    dend_28 { pt3dadd( -10.1947, -218.458, 89.4543, 0.29 ) }
    dend_28 { pt3dadd( -9.98608, -220.186, 89.1738, 0.22 ) }
    dend_28 { pt3dadd( -9.76484, -221.446, 88.9037, 0.29 ) }
    dend_28 { pt3dadd( -9.49697, -222.633, 88.6041, 0.37 ) }
    dend_28 { pt3dadd( -9.13026, -224.032, 88.2691, 0.22 ) }
    dend_28 { pt3dadd( -8.93066, -224.754, 88.1174, 0.22 ) }
    dend_28 { pt3dadd( -8.43382, -226.55, 87.7293, 0.29 ) }
    dend_28 { pt3dadd( -8.14066, -227.755, 87.4808, 0.52 ) }
    dend_28 { pt3dadd( -7.98323, -228.492, 87.3514, 0.81 ) }
    dend_28 { pt3dadd( -7.70446, -229.993, 87.151, 0.29 ) }
    dend_28 { pt3dadd( -7.48995, -231.239, 87.1527, 0.22 ) }
    dend_28 { pt3dadd( -7.39936, -231.741, 87.2232, 0.22 ) }
    dend_28 { pt3dadd( -7.29138, -232.343, 87.3878, 0.44 ) }
    dend_28 { pt3dadd( -7.15391, -233.218, 87.6612, 0.74 ) }
    dend_28 { pt3dadd( -7.00264, -234.133, 87.92, 0.29 ) }
    dend_28 { pt3dadd( -6.66054, -235.9, 88.3279, 0.15 ) }
    dend_28 { pt3dadd( -6.56557, -236.329, 88.4179, 0.15 ) }
    dend_28 { pt3dadd( -6.37294, -237.071, 88.5462, 0.15 ) }
    dend_28 { pt3dadd( -6.04979, -238.143, 88.6929, 0.44 ) }
    dend_28 { pt3dadd( -5.51383, -239.78, 88.9182, 0.22 ) }
    dend_28 { pt3dadd( -5.15588, -240.896, 89.0554, 0.22 ) }
    dend_28 { pt3dadd( -4.70931, -242.33, 89.1831, 0.52 ) }
    dend_28 { pt3dadd( -4.20805, -243.981, 89.2717, 0.15 ) }
    dend_28 { pt3dadd( -3.88746, -245.136, 89.2534, 0.29 ) }
    dend_28 { pt3dadd( -3.56134, -246.531, 89.0838, 0.59 ) }
    dend_28 { pt3dadd( -3.37437, -247.689, 88.7848, 0.74 ) }
    dend_28 { pt3dadd( -3.33148, -248.126, 88.6196, 0.74 ) }
    dend_28 { pt3dadd( -3.30106, -249.817, 87.804, 0.22 ) }
    dend_28 { pt3dadd( -3.45101, -251.576, 86.819, 0.15 ) }
    dend_28 { pt3dadd( -3.63994, -252.804, 86.0293, 0.15 ) }
    dend_28 { pt3dadd( -3.85376, -253.858, 85.3117, 0.29 ) }
    dend_28 { pt3dadd( -4.05418, -254.692, 84.7645, 0.74 ) }
    dend_28 { pt3dadd( -4.27456, -255.584, 84.253, 0.66 ) }
    dend_28 { pt3dadd( -4.65679, -257.239, 83.4737, 0.15 ) }
    dend_28 { pt3dadd( -4.96075, -258.739, 82.8008, 0.15 ) }
    dend_28 { pt3dadd( -5.13511, -259.84, 82.3284, 0.22 ) }
    dend_28 { pt3dadd( -5.27248, -261.1, 81.7762, 0.52 ) }
    dend_28 { pt3dadd( -5.33672, -262.618, 81.0924, 0.29 ) }
    dend_28 { pt3dadd( -5.25964, -264.377, 80.3474, 0.15 ) }
    dend_28 { pt3dadd( -5.06714, -265.745, 79.7882, 0.15 ) }
    dend_28 { pt3dadd( -4.96799, -266.204, 79.6014, 0.15 ) }
    dend_28 { pt3dadd( -4.77953, -266.918, 79.2895, 0.81 ) }
    dend_28 { pt3dadd( -4.55356, -267.868, 78.879, 0.29 ) }
    dend_28 { pt3dadd( -4.26504, -269.514, 78.1653, 0.15 ) }
    dend_28 { pt3dadd( -4.14173, -270.753, 77.6138, 0.59 ) }
    dend_28 { pt3dadd( -4.12376, -271.639, 77.2213, 0.59 ) }
    dend_28 { pt3dadd( -4.1751, -272.392, 76.8262, 0.59 ) }
    dend_28 { pt3dadd( -4.39018, -273.692, 75.984, 1.18 ) }
    dend_28 { pt3dadd( -4.66379, -274.708, 75.0909, 0.74 ) }
    dend_28 { pt3dadd( -5.1694, -276.209, 73.4887, 0.22 ) }
    dend_28 { pt3dadd( -5.32889, -276.66, 72.9369, 0.29 ) }
    dend_28 { pt3dadd( -5.65136, -277.61, 71.6023, 0.37 ) }
    dend_28 { pt3dadd( -5.94721, -278.55, 70.009, 0.37 ) }
    dend_28 { pt3dadd( -6.29659, -279.715, 67.5832, 0.37 ) }
    dend_28 { pt3dadd( -6.4237, -280.072, 66.7222, 0.37 ) }
    dend_28 { pt3dadd( -6.57974, -280.492, 65.5941, 0.37 ) }
    dend_28 { pt3dadd( -6.61294, -280.618, 65.2411, 0.37 ) }
    dend_28 { pt3dadd( -6.6313, -280.851, 64.5847, 0.37 ) }
    dend_28 { pt3dadd( -6.59832, -281.173, 63.7854, 0.37 ) }
    dend_28 { pt3dadd( -6.53368, -281.664, 62.7611, 0.44 ) }
    dend_28 { pt3dadd( -6.50718, -282.158, 61.8436, 0.52 ) }
    dend_28 { pt3dadd( -6.50486, -283.136, 60.4163, 0.52 ) }
    dend_28 { pt3dadd( -6.54016, -284.045, 59.258, 0.37 ) }
    dend_28 { pt3dadd( -6.55469, -284.512, 58.7449, 0.22 ) }
    dend_28 { pt3dadd( -6.5723, -285.035, 58.242, 0.22 ) }
    dend_28 { pt3dadd( -6.63247, -285.788, 57.6314, 0.29 ) }
    dend_28 { pt3dadd( -6.80628, -286.871, 56.964, 0.81 ) }
    dend_28 { pt3dadd( -7.13036, -288.464, 56.3085, 0.15 ) }
    dend_28 { pt3dadd( -7.3034, -289.199, 56.0942, 0.15 ) }
    dend_28 { pt3dadd( -7.45626, -289.867, 55.9074, 0.22 ) }
    dend_28 { pt3dadd( -7.62641, -290.743, 55.6841, 0.29 ) }
    dend_28 { pt3dadd( -7.73606, -291.379, 55.5272, 0.81 ) }
    dend_28 { pt3dadd( -8.00588, -292.908, 55.0982, 0.22 ) }
    dend_28 { pt3dadd( -8.21955, -294.123, 54.711, 0.22 ) }
    dend_28 { pt3dadd( -8.39926, -295.152, 54.2603, 0.22 ) }
    dend_28 { pt3dadd( -8.51306, -296.0, 53.7582, 0.52 ) }
    dend_28 { pt3dadd( -8.53209, -296.236, 53.5732, 0.52 ) }
    dend_28 { pt3dadd( -8.57932, -297.447, 52.356, 0.22 ) }
    dend_28 { pt3dadd( -8.59538, -298.225, 51.421, 0.37 ) }
    dend_28 { pt3dadd( -8.58487, -298.921, 50.48, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -8.55069, -299.806, 49.23, 0.22 ) }
    dend_28 { pt3dadd( -8.50967, -300.64, 48.0129, 0.22 ) }
    dend_28 { pt3dadd( -8.44583, -301.403, 46.9512, 0.22 ) }
    dend_28 { pt3dadd( -8.39211, -301.782, 46.4608, 0.37 ) }
    dend_28 { pt3dadd( -8.19824, -302.893, 45.1622, 1.11 ) }
    dend_28 { pt3dadd( -7.96462, -304.141, 43.8871, 0.44 ) }
    dend_28 { pt3dadd( -7.73466, -305.274, 42.8295, 0.66 ) }
    dend_28 { pt3dadd( -7.53736, -306.06, 42.1385, 0.59 ) }
    dend_28 { pt3dadd( -7.33956, -306.679, 41.5834, 0.52 ) }
    dend_28 { pt3dadd( -7.08146, -307.333, 40.9475, 0.29 ) }
    dend_28 { pt3dadd( -6.63087, -308.351, 39.857, 0.15 ) }
    dend_28 { pt3dadd( -6.13948, -309.457, 38.6189, 0.15 ) }
    dend_28 { pt3dadd( -5.94701, -309.936, 38.0583, 0.52 ) }
    dend_28 { pt3dadd( -5.62584, -311.02, 36.7771, 0.74 ) }
    dend_28 { pt3dadd( -5.50495, -311.586, 36.1341, 0.74 ) }
    dend_28 { pt3dadd( -5.27241, -312.99, 34.6451, 0.37 ) }
    dend_28 { pt3dadd( -5.14827, -314.229, 33.5387, 0.37 ) }
    dend_28 { pt3dadd( -5.09028, -315.446, 32.6834, 0.59 ) }
    dend_28 { pt3dadd( -5.09238, -316.691, 31.9978, 0.88 ) }
    dend_28 { pt3dadd( -5.11412, -317.348, 31.7341, 0.88 ) }
    dend_28 { pt3dadd( -5.17683, -318.703, 31.3093, 0.37 ) }
    dend_28 { pt3dadd( -5.21724, -320.084, 30.9948, 0.66 ) }
    dend_28 { pt3dadd( -5.18145, -321.323, 30.6965, 0.66 ) }
    dend_28 { pt3dadd( -5.06011, -322.667, 30.3813, 1.18 ) }
    dend_28 { pt3dadd( -4.89958, -323.684, 30.1334, 0.81 ) }
    dend_28 { pt3dadd( -4.50281, -325.587, 29.6449, 0.44 ) }
    dend_28 { pt3dadd( -4.09877, -327.111, 29.247, 0.37 ) }
    dend_28 { pt3dadd( -3.36328, -329.208, 28.6413, 0.29 ) }
    dend_28 { pt3dadd( -3.21055, -329.565, 28.5181, 0.52 ) }
    dend_28 { pt3dadd( -2.88574, -330.204, 28.2709, 0.96 ) }
    dend_28 { pt3dadd( -2.31335, -331.218, 27.7889, 0.29 ) }
    dend_28 { pt3dadd( -1.95615, -331.786, 27.4932, 0.29 ) }
    dend_28 { pt3dadd( -1.56201, -332.402, 27.1468, 0.59 ) }
    dend_28 { pt3dadd( -0.879247, -333.534, 26.6751, 0.59 ) }
    dend_28 { pt3dadd( -0.504781, -334.172, 26.4553, 0.59 ) }
    dend_28 { pt3dadd( 0.530859, -335.985, 25.9452, 0.29 ) }
    dend_28 { pt3dadd( 1.20538, -337.202, 25.7057, 0.22 ) }
    dend_28 { pt3dadd( 1.54644, -337.873, 25.6584, 0.88 ) }
    dend_28 { pt3dadd( 2.48799, -340.0, 25.8859, 0.37 ) }
    dend_28 { pt3dadd( 2.73418, -340.664, 26.0657, 0.66 ) }
    dend_28 { pt3dadd( 2.8914, -341.178, 26.3016, 0.66 ) }
    dend_28 { pt3dadd( 3.21407, -342.398, 27.0967, 0.44 ) }
    dend_28 { pt3dadd( 3.40506, -343.232, 27.7994, 0.44 ) }
    dend_28 { pt3dadd( 3.61773, -344.187, 28.8649, 0.44 ) }
    dend_28 { pt3dadd( 3.77712, -344.927, 29.8455, 0.81 ) }
    dend_28 { pt3dadd( 4.1418, -346.237, 31.7895, 0.22 ) }
    dend_28 { pt3dadd( 4.3535, -346.834, 32.7627, 0.37 ) }
    dend_28 { pt3dadd( 4.80335, -347.824, 34.5118, 0.37 ) }
    dend_28 { pt3dadd( 5.42584, -348.9, 36.4427, 0.37 ) }
    dend_28 { pt3dadd( 5.75429, -349.348, 37.2342, 0.66 ) }
    dend_28 { pt3dadd( 6.36123, -350.025, 38.5059, 0.22 ) }
    dend_28 { pt3dadd( 6.74733, -350.386, 39.1858, 0.22 ) }
    dend_28 { pt3dadd( 7.10254, -350.67, 39.8222, 0.74 ) }
    dend_28 { pt3dadd( 7.47765, -350.908, 40.4961, 0.74 ) }
    dend_28 { pt3dadd( 8.27412, -351.272, 42.1793, 0.22 ) }
    dend_28 { pt3dadd( 8.95793, -351.466, 43.9946, 0.22 ) }
    dend_28 { pt3dadd( 9.26664, -351.52, 45.0719, 0.37 ) }
    dend_28 { pt3dadd( 9.98128, -351.607, 48.1192, 0.37 ) }
    dend_28 { pt3dadd( 10.1551, -351.622, 49.1304, 0.74 ) }
    dend_28 { pt3dadd( 10.4704, -351.614, 51.7407, 0.74 ) }
    dend_28 { pt3dadd( 10.6394, -351.592, 53.8056, 0.52 ) }
    dend_28 { pt3dadd( 10.7811, -351.616, 56.2146, 0.52 ) }
    dend_28 { pt3dadd( 10.8165, -351.65, 57.0587, 0.52 ) }
    dend_28 { pt3dadd( 10.9044, -351.795, 59.5652, 0.52 ) }
    dend_28 { pt3dadd( 10.9405, -351.894, 60.8642, 0.52 ) }
    dend_28 { pt3dadd( 11.0062, -352.1, 63.1423, 0.52 ) }
    dend_28 { pt3dadd( 11.0261, -352.17, 63.8905, 0.52 ) }
    dend_28 { pt3dadd( 11.2323, -352.623, 69.3613, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 68/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.2353, 24.0476, -6.96773, 0.96 ) }
    dend_22 { pt3dadd( -14.627, 25.3903, -7.13842, 0.96 ) }
    dend_22 { pt3dadd( -15.7778, 26.067, -7.19559, 0.96 ) }
    dend_22 { pt3dadd( -17.0931, 26.9217, -7.18819, 0.88 ) }
    dend_22 { pt3dadd( -18.3155, 27.7802, -7.13253, 0.88 ) }
    dend_22 { pt3dadd( -19.5251, 28.6855, -6.99137, 0.81 ) }
    dend_22 { pt3dadd( -20.7674, 29.6838, -6.73487, 0.66 ) }
    dend_22 { pt3dadd( -21.6075, 30.4389, -6.37079, 1.03 ) }
    dend_22 { pt3dadd( -22.572, 31.3515, -5.74003, 1.18 ) }
    dend_22 { pt3dadd( -22.9164, 31.6745, -5.43817, 1.33 ) }
    dend_22 { pt3dadd( -23.8671, 32.5227, -4.48389, 1.03 ) }
    dend_22 { pt3dadd( -24.9291, 33.4085, -3.4308, 0.96 ) }
    dend_22 { pt3dadd( -26.0574, 34.2049, -2.36098, 0.96 ) }
    dend_22 { pt3dadd( -27.6383, 35.0737, -1.01645, 1.33 ) }
    dend_22 { pt3dadd( -28.9586, 35.6174, -0.0106866, 1.03 ) }
    dend_22 { pt3dadd( -29.616, 35.8048, 0.472409, 1.03 ) }
    dend_22 { pt3dadd( -31.3452, 36.0777, 1.70812, 0.74 ) }
    dend_22 { pt3dadd( -32.3444, 36.1405, 2.44412, 0.96 ) }
    dend_22 { pt3dadd( -33.1195, 36.1583, 3.0425, 1.55 ) }
    dend_22 { pt3dadd( -34.4541, 36.1926, 4.19128, 1.25 ) }
    dend_22 { pt3dadd( -35.8994, 36.2615, 5.71163, 1.03 ) }
    dend_22 { pt3dadd( -36.8597, 36.3325, 6.96224, 0.74 ) }
    dend_22 { pt3dadd( -37.4571, 36.412, 7.86771, 0.74 ) }
    dend_22 { pt3dadd( -38.0844, 36.5175, 8.89602, 1.11 ) }
    dend_22 { pt3dadd( -38.7096, 36.6328, 9.95095, 1.11 ) }
    dend_22 { pt3dadd( -39.9909, 36.8834, 12.0477, 0.96 ) }
    dend_22 { pt3dadd( -41.2214, 37.1746, 13.9754, 1.18 ) }
    dend_22 { pt3dadd( -42.1105, 37.4369, 15.3136, 1.55 ) }
    dend_22 { pt3dadd( -42.744, 37.6638, 16.2014, 1.55 ) }
    dend_22 { pt3dadd( -43.4372, 37.9656, 17.0586, 1.18 ) }
    dend_22 { pt3dadd( -44.1192, 38.3457, 17.7186, 0.88 ) }
    dend_22 { pt3dadd( -45.0396, 38.9974, 18.4416, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -46.0001, 39.7745, 19.1894, 0.96 ) }
    dend_22 { pt3dadd( -46.6752, 40.3819, 19.7877, 1.18 ) }
    dend_22 { pt3dadd( -47.3758, 41.1063, 20.5199, 1.18 ) }
    dend_22 { pt3dadd( -48.1861, 42.0868, 21.5761, 1.11 ) }
    dend_22 { pt3dadd( -49.1595, 43.3994, 23.0709, 1.18 ) }
    dend_22 { pt3dadd( -50.0205, 44.6524, 24.5562, 1.03 ) }
    dend_22 { pt3dadd( -50.6693, 45.6121, 25.7979, 1.03 ) }
    dend_22 { pt3dadd( -51.3202, 46.5902, 27.1998, 0.88 ) }
    dend_22 { pt3dadd( -51.9494, 47.5997, 28.7024, 1.03 ) }
    dend_22 { pt3dadd( -52.4436, 48.4427, 29.9818, 0.74 ) }
    dend_22 { pt3dadd( -52.9243, 49.3209, 31.2686, 0.66 ) }
    dend_22 { pt3dadd( -53.4777, 50.4035, 32.8152, 0.59 ) }
    dend_22 { pt3dadd( -54.1209, 51.6141, 34.6248, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.2353, 24.0476, -6.96773, 1.03 ) }
    dend_11 { pt3dadd( -13.4822, 24.4532, -9.41931, 1.03 ) }
    dend_11 { pt3dadd( -14.8256, 24.8351, -11.7498, 1.03 ) }
    dend_11 { pt3dadd( -16.0488, 25.1406, -13.6463, 1.18 ) }
    dend_11 { pt3dadd( -17.5204, 25.464, -15.7642, 1.18 ) }
    dend_11 { pt3dadd( -18.5499, 25.6792, -17.1762, 1.18 ) }
    dend_11 { pt3dadd( -19.7167, 25.9247, -18.763, 1.03 ) }
    dend_11 { pt3dadd( -20.8301, 26.1623, -20.1241, 0.96 ) }
    dend_11 { pt3dadd( -21.6344, 26.3489, -21.0348, 1.18 ) }
    dend_11 { pt3dadd( -22.531, 26.5726, -22.0252, 1.03 ) }
    dend_11 { pt3dadd( -23.3672, 26.7888, -22.9395, 1.03 ) }
    dend_11 { pt3dadd( -24.4376, 27.0825, -24.0952, 1.03 ) }
    dend_11 { pt3dadd( -25.2702, 27.3198, -24.9672, 1.18 ) }
    dend_11 { pt3dadd( -26.5855, 27.711, -26.2046, 1.18 ) }
    dend_11 { pt3dadd( -27.5086, 28.007, -26.9894, 1.18 ) }
    dend_11 { pt3dadd( -28.5997, 28.381, -27.865, 1.11 ) }
    dend_11 { pt3dadd( -29.7509, 28.783, -28.7131, 1.18 ) }
    dend_11 { pt3dadd( -30.4682, 29.0508, -29.1837, 0.96 ) }
    dend_11 { pt3dadd( -31.4948, 29.4979, -29.7978, 0.81 ) }
    dend_11 { pt3dadd( -32.7736, 30.1756, -30.5122, 1.03 ) }
    dend_11 { pt3dadd( -34.6502, 31.3348, -31.501, 1.25 ) }
    dend_11 { pt3dadd( -35.2441, 31.7429, -31.8043, 1.25 ) }
    dend_11 { pt3dadd( -36.1376, 32.379, -32.2328, 0.88 ) }
    dend_11 { pt3dadd( -37.3815, 33.2417, -32.7974, 0.88 ) }
    dend_11 { pt3dadd( -38.8037, 34.1528, -33.3915, 1.11 ) }
    dend_11 { pt3dadd( -40.0005, 34.8333, -33.8058, 1.11 ) }
    dend_11 { pt3dadd( -41.5079, 35.6068, -34.2445, 0.96 ) }
    dend_11 { pt3dadd( -42.7645, 36.1922, -34.6072, 1.03 ) }
    dend_11 { pt3dadd( -43.9759, 36.7057, -34.9658, 1.03 ) }
    dend_11 { pt3dadd( -45.2335, 37.1798, -35.3383, 0.96 ) }
    dend_11 { pt3dadd( -46.4021, 37.5901, -35.6616, 0.96 ) }
    dend_11 { pt3dadd( -47.656, 38.011, -36.0291, 0.96 ) }
    dend_11 { pt3dadd( -49.231, 38.5064, -36.4744, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.0378, 72.4365, -37.5874, 1.18 ) }
    dend_9 { pt3dadd( -14.2145, 74.4576, -37.4214, 1.18 ) }
    dend_9 { pt3dadd( -14.2515, 75.837, -37.3358, 0.96 ) }
    dend_9 { pt3dadd( -14.2193, 76.7516, -37.3353, 0.96 ) }
    dend_9 { pt3dadd( -14.1617, 77.5838, -37.396, 0.96 ) }
    dend_9 { pt3dadd( -14.0463, 79.1066, -37.6002, 0.96 ) }
    dend_9 { pt3dadd( -13.9712, 80.5981, -37.8692, 1.03 ) }
    dend_9 { pt3dadd( -13.9061, 81.6856, -38.1478, 1.11 ) }
    dend_9 { pt3dadd( -13.8295, 82.9854, -38.595, 0.88 ) }
    dend_9 { pt3dadd( -13.8264, 83.9854, -38.9975, 0.88 ) }
    dend_9 { pt3dadd( -13.9066, 85.0112, -39.416, 0.88 ) }
    dend_9 { pt3dadd( -14.078, 86.2804, -39.9283, 1.03 ) }
    dend_9 { pt3dadd( -14.2251, 87.1386, -40.2535, 1.03 ) }
    dend_9 { pt3dadd( -14.5683, 88.8839, -40.8095, 1.18 ) }
    dend_9 { pt3dadd( -14.918, 90.6994, -41.2908, 0.88 ) }
    dend_9 { pt3dadd( -15.3017, 92.9287, -41.7874, 0.81 ) }
    dend_9 { pt3dadd( -15.4153, 93.7489, -41.9406, 0.96 ) }
    dend_9 { pt3dadd( -15.5137, 94.5898, -42.0866, 0.96 ) }
    dend_9 { pt3dadd( -15.7195, 96.2724, -42.3787, 0.88 ) }
    dend_9 { pt3dadd( -15.8674, 97.4654, -42.5711, 0.88 ) }
    dend_9 { pt3dadd( -16.0331, 98.786, -42.8222, 1.11 ) }
    dend_9 { pt3dadd( -16.3051, 100.824, -43.2807, 1.25 ) }
    dend_9 { pt3dadd( -16.4992, 102.127, -43.5983, 1.03 ) }
    dend_9 { pt3dadd( -16.7202, 103.546, -43.9757, 1.03 ) }
    dend_9 { pt3dadd( -16.8909, 104.65, -44.2892, 1.18 ) }
    dend_9 { pt3dadd( -17.1906, 106.588, -44.9163, 0.96 ) }
    dend_9 { pt3dadd( -17.4025, 108.148, -45.4756, 1.11 ) }
    dend_9 { pt3dadd( -17.5169, 109.456, -45.9714, 1.11 ) }
    dend_9 { pt3dadd( -17.5358, 110.9, -46.496, 1.18 ) }
    dend_9 { pt3dadd( -17.4298, 112.286, -46.9764, 0.74 ) }
    dend_9 { pt3dadd( -17.1978, 113.649, -47.4246, 0.88 ) }
    dend_9 { pt3dadd( -16.927, 114.618, -47.7044, 1.25 ) }
    dend_9 { pt3dadd( -16.4077, 115.929, -48.0319, 1.33 ) }
    dend_9 { pt3dadd( -15.7204, 117.274, -48.2764, 0.96 ) }
    dend_9 { pt3dadd( -15.0239, 118.395, -48.387, 0.74 ) }
    dend_9 { pt3dadd( -14.3427, 119.366, -48.4126, 0.81 ) }
    dend_9 { pt3dadd( -13.7312, 120.167, -48.3336, 0.81 ) }
    dend_9 { pt3dadd( -12.9422, 121.175, -48.1575, 0.74 ) }
    dend_9 { pt3dadd( -12.2917, 122.042, -47.9309, 1.25 ) }
    dend_9 { pt3dadd( -11.4399, 123.223, -47.5373, 1.4 ) }
    dend_9 { pt3dadd( -10.8378, 124.156, -47.1614, 1.4 ) }
    dend_9 { pt3dadd( -9.72884, 126.067, -46.3215, 0.88 ) }
    dend_9 { pt3dadd( -9.49404, 126.511, -46.1105, 0.88 ) }
    dend_9 { pt3dadd( -8.92477, 127.696, -45.5298, 0.88 ) }
    dend_9 { pt3dadd( -8.55202, 128.548, -45.1366, 0.88 ) }
    dend_9 { pt3dadd( -7.99732, 129.989, -44.5722, 0.96 ) }
    dend_9 { pt3dadd( -7.69914, 130.879, -44.3121, 0.96 ) }
    dend_9 { pt3dadd( -7.31797, 132.213, -44.0655, 1.55 ) }
    dend_9 { pt3dadd( -7.20505, 132.663, -43.9935, 1.55 ) }
    dend_9 { pt3dadd( -6.78146, 134.458, -43.8289, 1.18 ) }
    dend_9 { pt3dadd( -6.40816, 136.288, -43.7813, 1.25 ) }
    dend_9 { pt3dadd( -6.17975, 137.757, -43.8719, 1.62 ) }
    dend_9 { pt3dadd( -6.10934, 138.516, -43.9846, 1.62 ) }
    dend_9 { pt3dadd( -6.03419, 140.59, -44.4441, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -6.054, 142.196, -44.9175, 0.96 ) }
    dend_9 { pt3dadd( -6.12069, 143.253, -45.3166, 1.33 ) }
    dend_9 { pt3dadd( -6.28511, 144.797, -46.0417, 1.11 ) }
    dend_9 { pt3dadd( -6.46964, 146.281, -46.9108, 1.33 ) }
    dend_9 { pt3dadd( -6.60587, 147.337, -47.6257, 1.33 ) }
    dend_9 { pt3dadd( -6.78447, 148.649, -48.6744, 1.47 ) }
    dend_9 { pt3dadd( -6.89741, 149.462, -49.3456, 1.62 ) }
    dend_9 { pt3dadd( -7.0865, 150.952, -50.6171, 1.03 ) }
    dend_9 { pt3dadd( -7.22651, 152.227, -51.6962, 0.96 ) }
    dend_9 { pt3dadd( -7.29402, 153.088, -52.3978, 0.88 ) }
    dend_9 { pt3dadd( -7.35414, 154.445, -53.5088, 0.81 ) }
    dend_9 { pt3dadd( -7.37599, 155.114, -54.0022, 1.18 ) }
    dend_9 { pt3dadd( -7.451, 157.082, -55.2862, 0.96 ) }
    dend_9 { pt3dadd( -7.56029, 158.905, -56.3051, 0.96 ) }
    dend_9 { pt3dadd( -7.69273, 160.433, -56.9614, 0.74 ) }
    dend_9 { pt3dadd( -7.86379, 162.058, -57.4904, 0.59 ) }
    dend_9 { pt3dadd( -8.11793, 164.172, -57.9554, 0.59 ) }
    dend_9 { pt3dadd( -8.34181, 165.778, -58.223, 0.52 ) }
    dend_9 { pt3dadd( -8.50955, 166.832, -58.3272, 0.74 ) }
    dend_9 { pt3dadd( -8.9167, 168.897, -58.4535, 1.03 ) }
    dend_9 { pt3dadd( -9.16786, 169.945, -58.4778, 1.11 ) }
    dend_9 { pt3dadd( -9.48047, 171.182, -58.4707, 0.74 ) }
    dend_9 { pt3dadd( -9.91158, 172.917, -58.4799, 0.66 ) }
    dend_9 { pt3dadd( -10.1386, 173.845, -58.5021, 0.52 ) }
    dend_9 { pt3dadd( -10.3845, 174.91, -58.5756, 0.22 ) }
    dend_9 { pt3dadd( -10.7918, 176.62, -58.8478, 0.15 ) }
    dend_9 { pt3dadd( -10.9276, 177.164, -58.9353, 0.22 ) }
    dend_9 { pt3dadd( -12.4906, 186.199, -61.603, 0.22 ) }
    dend_9 { pt3dadd( -12.8502, 194.621, -66.2159, 0.22 ) }
    dend_9 { pt3dadd( -13.3448, 203.499, -69.7396, 0.22 ) }
    dend_9 { pt3dadd( -15.2817, 212.353, -72.8037, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -14.0378, 72.4365, -37.5874, 0.66 ) }
    dend_6 { pt3dadd( -13.2839, 73.0262, -39.8719, 0.66 ) }
    dend_6 { pt3dadd( -12.7751, 73.4242, -41.4137, 0.59 ) }
    dend_6 { pt3dadd( -12.2639, 73.824, -42.9627, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 40.476, 27.9426, 31.9492, 0.88 ) }
    dend_43 { pt3dadd( 41.4971, 29.006, 31.321, 0.88 ) }
    dend_43 { pt3dadd( 42.3646, 29.9489, 30.7012, 0.59 ) }
    dend_43 { pt3dadd( 43.3764, 31.0265, 29.9767, 0.59 ) }
    dend_43 { pt3dadd( 44.1251, 31.7435, 29.4884, 0.59 ) }
    dend_43 { pt3dadd( 44.8064, 32.3276, 29.046, 0.59 ) }
    dend_43 { pt3dadd( 45.5411, 32.8997, 28.55, 0.81 ) }
    dend_43 { pt3dadd( 46.372, 33.4485, 27.9315, 0.81 ) }
    dend_43 { pt3dadd( 47.0305, 33.786, 27.4486, 0.81 ) }
    dend_43 { pt3dadd( 48.0656, 34.1794, 26.7419, 0.52 ) }
    dend_43 { pt3dadd( 49.3241, 34.5409, 25.895, 0.52 ) }
    dend_43 { pt3dadd( 50.2935, 34.7538, 25.2304, 0.52 ) }
    dend_43 { pt3dadd( 51.1864, 34.9231, 24.6262, 0.52 ) }
    dend_43 { pt3dadd( 51.8206, 35.0597, 24.2102, 0.52 ) }
    dend_43 { pt3dadd( 52.7699, 35.2993, 23.5435, 0.44 ) }
    dend_43 { pt3dadd( 53.9513, 35.6403, 22.6684, 0.59 ) }
    dend_43 { pt3dadd( 54.9544, 35.9253, 21.9731, 0.44 ) }
    dend_43 { pt3dadd( 55.5657, 36.0828, 21.5435, 0.66 ) }
    dend_43 { pt3dadd( 56.4528, 36.2745, 20.9303, 0.37 ) }
    dend_43 { pt3dadd( 57.6058, 36.4502, 20.1197, 0.37 ) }
    dend_43 { pt3dadd( 58.7312, 36.5161, 19.3762, 0.59 ) }
    dend_43 { pt3dadd( 59.5759, 36.5024, 18.8305, 1.11 ) }
    dend_43 { pt3dadd( 61.0575, 36.444, 17.8207, 1.11 ) }
    dend_43 { pt3dadd( 62.2062, 36.4038, 17.0063, 0.66 ) }
    dend_43 { pt3dadd( 63.4526, 36.4172, 16.1101, 0.52 ) }
    dend_43 { pt3dadd( 64.3526, 36.5084, 15.4348, 0.29 ) }
    dend_43 { pt3dadd( 65.3114, 36.7495, 14.6374, 0.29 ) }
    dend_43 { pt3dadd( 66.2023, 37.17, 13.7077, 0.59 ) }
    dend_43 { pt3dadd( 66.6559, 37.5117, 13.1352, 0.59 ) }
    dend_43 { pt3dadd( 67.3196, 38.1923, 12.1566, 0.37 ) }
    dend_43 { pt3dadd( 67.9185, 38.9145, 11.1923, 0.37 ) }
    dend_43 { pt3dadd( 68.3235, 39.4211, 10.509, 0.59 ) }
    dend_43 { pt3dadd( 69.1896, 40.4354, 9.10438, 1.03 ) }
    dend_43 { pt3dadd( 69.8174, 41.0826, 8.15263, 0.88 ) }
    dend_43 { pt3dadd( 70.371, 41.5923, 7.37403, 0.44 ) }
    dend_43 { pt3dadd( 71.2332, 42.3002, 6.18594, 0.44 ) }
    dend_43 { pt3dadd( 71.6997, 42.6417, 5.60511, 0.44 ) }
    dend_43 { pt3dadd( 72.1183, 42.8938, 5.12548, 0.66 ) }
    dend_43 { pt3dadd( 72.4939, 43.0696, 4.75837, 0.66 ) }
    dend_43 { pt3dadd( 73.1109, 43.2925, 4.1671, 0.44 ) }
    dend_43 { pt3dadd( 74.6372, 43.7176, 2.75529, 0.44 ) }
    dend_43 { pt3dadd( 75.0801, 43.8072, 2.37065, 0.81 ) }
    dend_43 { pt3dadd( 75.7857, 43.9033, 1.7293, 1.03 ) }
    dend_43 { pt3dadd( 76.7478, 43.9564, 0.709132, 0.66 ) }
    dend_43 { pt3dadd( 77.4601, 43.9405, -0.210716, 0.66 ) }
    dend_43 { pt3dadd( 78.2679, 43.8578, -1.58173, 0.52 ) }
    dend_43 { pt3dadd( 78.8991, 43.7244, -3.03706, 0.37 ) }
    dend_43 { pt3dadd( 79.3564, 43.5592, -4.54317, 0.44 ) }
    dend_43 { pt3dadd( 79.8649, 43.2625, -6.94133, 0.52 ) }
    dend_43 { pt3dadd( 80.1578, 43.0025, -8.80427, 0.52 ) }
    dend_43 { pt3dadd( 80.5003, 42.6444, -11.1255, 0.52 ) }
    dend_43 { pt3dadd( 80.7859, 42.3391, -13.0711, 0.81 ) }
    dend_43 { pt3dadd( 81.053, 42.1184, -14.6234, 1.03 ) }
    dend_43 { pt3dadd( 81.4033, 41.969, -16.0369, 1.03 ) }
    dend_43 { pt3dadd( 81.8032, 41.925, -17.0351, 0.81 ) }
    dend_43 { pt3dadd( 82.5862, 41.9694, -18.3772, 0.59 ) }
    dend_43 { pt3dadd( 83.3275, 42.098, -19.3094, 0.59 ) }
    dend_43 { pt3dadd( 83.8982, 42.2525, -19.9071, 0.44 ) }
    dend_43 { pt3dadd( 85.0787, 42.617, -21.0384, 0.44 ) }
    dend_43 { pt3dadd( 85.9542, 42.8851, -21.8164, 0.37 ) }
    dend_43 { pt3dadd( 86.6057, 43.0673, -22.349, 0.37 ) }
    dend_43 { pt3dadd( 87.3647, 43.239, -22.8922, 0.96 ) }
    dend_43 { pt3dadd( 88.8244, 43.4717, -23.7885, 0.66 ) }
    dend_43 { pt3dadd( 89.7924, 43.5903, -24.3389, 0.66 ) }
    dend_43 { pt3dadd( 90.782, 43.6968, -24.9135, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 92.0436, 43.858, -25.8014, 0.74 ) }
    dend_43 { pt3dadd( 93.118, 44.0574, -26.785, 0.74 ) }
    dend_43 { pt3dadd( 94.259, 44.3891, -28.1027, 0.74 ) }
    dend_43 { pt3dadd( 95.0279, 44.7514, -29.2089, 0.59 ) }
    dend_43 { pt3dadd( 96.0581, 45.4785, -31.0039, 0.81 ) }
    dend_43 { pt3dadd( 96.9291, 46.3562, -32.8674, 0.96 ) }
    dend_43 { pt3dadd( 97.6013, 47.3017, -34.6358, 0.96 ) }
    dend_43 { pt3dadd( 97.9038, 47.8722, -35.5222, 0.66 ) }
    dend_43 { pt3dadd( 98.2087, 48.5345, -36.3704, 0.59 ) }
    dend_43 { pt3dadd( 98.4562, 49.0187, -36.9331, 0.44 ) }
    dend_43 { pt3dadd( 98.921, 49.8474, -37.7465, 0.88 ) }
    dend_43 { pt3dadd( 99.1706, 50.2213, -38.1382, 0.88 ) }
    dend_43 { pt3dadd( 99.7398, 50.8633, -39.1609, 0.29 ) }
    dend_43 { pt3dadd( 100.472, 51.3924, -40.9413, 0.29 ) }
    dend_43 { pt3dadd( 101.219, 51.6622, -43.27, 0.29 ) }
    dend_43 { pt3dadd( 101.422, 51.6943, -43.9996, 0.88 ) }
    dend_43 { pt3dadd( 101.903, 51.7134, -45.9344, 0.88 ) }
    dend_43 { pt3dadd( 102.25, 51.7407, -47.5119, 0.88 ) }
    dend_43 { pt3dadd( 102.475, 51.7973, -48.8148, 0.88 ) }
    dend_43 { pt3dadd( 102.667, 52.0292, -50.4617, 0.88 ) }
    dend_43 { pt3dadd( 102.703, 52.2288, -51.0273, 0.88 ) }
    dend_43 { pt3dadd( 102.716, 52.6391, -51.6198, 0.88 ) }
    dend_43 { pt3dadd( 102.598, 53.5676, -52.2854, 0.52 ) }
    dend_43 { pt3dadd( 102.408, 54.4057, -52.763, 0.52 ) }
    dend_43 { pt3dadd( 102.192, 55.1366, -53.1871, 1.03 ) }
    dend_43 { pt3dadd( 101.978, 55.8507, -53.6471, 1.03 ) }
    dend_43 { pt3dadd( 101.765, 56.634, -54.231, 0.81 ) }
    dend_43 { pt3dadd( 101.511, 57.8094, -55.2313, 0.44 ) }
    dend_43 { pt3dadd( 101.386, 58.8112, -56.176, 0.52 ) }
    dend_43 { pt3dadd( 101.349, 59.6649, -57.0519, 0.52 ) }
    dend_43 { pt3dadd( 101.341, 60.585, -58.1156, 0.66 ) }
    dend_43 { pt3dadd( 101.318, 61.0126, -58.7234, 0.52 ) }
    dend_43 { pt3dadd( 101.239, 61.609, -59.7002, 0.66 ) }
    dend_43 { pt3dadd( 101.1, 62.2531, -60.794, 0.88 ) }
    dend_43 { pt3dadd( 100.785, 63.2427, -62.4275, 0.59 ) }
    dend_43 { pt3dadd( 100.514, 63.9364, -63.5307, 0.59 ) }
    dend_43 { pt3dadd( 99.9315, 65.2866, -65.7258, 0.52 ) }
    dend_43 { pt3dadd( 99.7132, 65.8143, -66.5913, 0.52 ) }
    dend_43 { pt3dadd( 99.5925, 66.2557, -67.2816, 0.52 ) }
    dend_43 { pt3dadd( 99.5717, 66.9574, -68.2018, 0.52 ) }
    dend_43 { pt3dadd( 99.8287, 67.7245, -68.8447, 0.44 ) }
    dend_43 { pt3dadd( 100.277, 68.5905, -69.2839, 0.74 ) }
    dend_43 { pt3dadd( 100.56, 69.0799, -69.4419, 0.81 ) }
    dend_43 { pt3dadd( 101.398, 70.4161, -69.8346, 0.59 ) }
    dend_43 { pt3dadd( 101.985, 71.2845, -70.1351, 0.66 ) }
    dend_43 { pt3dadd( 102.738, 72.3996, -70.5235, 0.59 ) }
    dend_43 { pt3dadd( 103.484, 73.5888, -70.9122, 0.59 ) }
    dend_43 { pt3dadd( 104.01, 74.5169, -71.1749, 0.66 ) }
    dend_43 { pt3dadd( 104.554, 75.5677, -71.4601, 0.52 ) }
    dend_43 { pt3dadd( 105.313, 77.1626, -71.8415, 0.81 ) }
    dend_43 { pt3dadd( 110.858, 80.6648, -79.3019, 0.81 ) }
    dend_43 { pt3dadd( 115.469, 83.8603, -87.513, 0.81 ) }
    dend_43 { pt3dadd( 119.189, 86.5036, -96.3687, 0.81 ) }
    dend_43 { pt3dadd( 121.259, 90.0651, -105.405, 0.81 ) }
    dend_43 { pt3dadd( 123.608, 95.2733, -113.432, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 40.476, 27.9426, 31.9492, 0.81 ) }
    dend_40 { pt3dadd( 40.1027, 28.7264, 31.8265, 0.81 ) }
    dend_40 { pt3dadd( 39.6675, 29.6911, 31.7168, 0.74 ) }
    dend_40 { pt3dadd( 39.2656, 30.5928, 31.7133, 0.59 ) }
    dend_40 { pt3dadd( 38.6901, 31.942, 31.776, 0.37 ) }
    dend_40 { pt3dadd( 38.2831, 32.9932, 31.892, 0.44 ) }
    dend_40 { pt3dadd( 37.9282, 34.0084, 32.0372, 0.44 ) }
    dend_40 { pt3dadd( 37.6096, 35.0517, 32.2355, 0.74 ) }
    dend_40 { pt3dadd( 37.1684, 36.717, 32.6193, 0.44 ) }
    dend_40 { pt3dadd( 37.0116, 37.5186, 32.8258, 0.52 ) }
    dend_40 { pt3dadd( 36.8658, 38.7621, 33.1693, 0.66 ) }
    dend_40 { pt3dadd( 36.8292, 39.4507, 33.3383, 0.44 ) }
    dend_40 { pt3dadd( 36.8157, 40.3581, 33.5162, 0.44 ) }
    dend_40 { pt3dadd( 36.8329, 41.2207, 33.6414, 0.37 ) }
    dend_40 { pt3dadd( 36.904, 42.4219, 33.7265, 0.37 ) }
    dend_40 { pt3dadd( 36.977, 43.3961, 33.7653, 0.44 ) }
    dend_40 { pt3dadd( 37.045, 44.1266, 33.7719, 0.22 ) }
    dend_40 { pt3dadd( 37.1217, 44.7841, 33.7828, 0.22 ) }
    dend_40 { pt3dadd( 37.2312, 45.6256, 33.8023, 0.29 ) }
    dend_40 { pt3dadd( 37.3498, 46.5343, 33.8025, 0.74 ) }
    dend_40 { pt3dadd( 37.4571, 47.4114, 33.7827, 0.59 ) }
    dend_40 { pt3dadd( 37.5553, 48.2447, 33.7472, 0.44 ) }
    dend_40 { pt3dadd( 37.6661, 49.0032, 33.6417, 0.22 ) }
    dend_40 { pt3dadd( 37.7847, 49.6052, 33.5129, 0.22 ) }
    dend_40 { pt3dadd( 37.9666, 50.3835, 33.3447, 0.22 ) }
    dend_40 { pt3dadd( 38.1568, 51.1025, 33.1943, 0.37 ) }
    dend_40 { pt3dadd( 38.295, 51.572, 33.0779, 0.37 ) }
    dend_40 { pt3dadd( 38.8042, 53.249, 32.6322, 0.74 ) }
    dend_40 { pt3dadd( 39.1382, 54.3527, 32.3144, 0.22 ) }
    dend_40 { pt3dadd( 39.493, 55.5735, 31.966, 0.22 ) }
    dend_40 { pt3dadd( 39.7307, 56.488, 31.7015, 0.44 ) }
    dend_40 { pt3dadd( 39.9507, 57.6063, 31.2996, 0.29 ) }
    dend_40 { pt3dadd( 40.0455, 58.2673, 30.9788, 0.66 ) }
    dend_40 { pt3dadd( 40.1076, 59.0112, 30.5588, 0.66 ) }
    dend_40 { pt3dadd( 40.1168, 59.7353, 30.0995, 0.88 ) }
    dend_40 { pt3dadd( 40.0927, 60.5586, 29.5664, 0.88 ) }
    dend_40 { pt3dadd( 40.0574, 62.125, 28.6323, 0.59 ) }
    dend_40 { pt3dadd( 40.1017, 63.6315, 27.8607, 0.44 ) }
    dend_40 { pt3dadd( 40.1743, 64.5318, 27.4309, 0.44 ) }
    dend_40 { pt3dadd( 40.3213, 65.8446, 26.884, 0.52 ) }
    dend_40 { pt3dadd( 40.4542, 66.8159, 26.4925, 0.59 ) }
    dend_40 { pt3dadd( 40.6668, 68.1584, 25.9653, 0.44 ) }
    dend_40 { pt3dadd( 40.8877, 69.3921, 25.5129, 0.22 ) }
    dend_40 { pt3dadd( 41.0674, 70.3769, 25.1261, 0.44 ) }
    dend_40 { pt3dadd( 41.2316, 71.2761, 24.7216, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 41.4802, 72.6746, 24.0562, 1.11 ) }
    dend_40 { pt3dadd( 41.6668, 74.0107, 23.4173, 0.96 ) }
    dend_40 { pt3dadd( 41.737, 74.7746, 23.0667, 0.96 ) }
    dend_40 { pt3dadd( 41.836, 76.4612, 22.3528, 0.59 ) }
    dend_40 { pt3dadd( 41.8756, 77.5237, 21.9786, 0.37 ) }
    dend_40 { pt3dadd( 41.9114, 78.7463, 21.6788, 0.22 ) }
    dend_40 { pt3dadd( 41.9069, 79.5299, 21.5956, 0.66 ) }
    dend_40 { pt3dadd( 41.8855, 80.2222, 21.5586, 0.74 ) }
    dend_40 { pt3dadd( 41.8602, 80.9905, 21.5199, 0.52 ) }
    dend_40 { pt3dadd( 41.8254, 82.0797, 21.4412, 0.59 ) }
    dend_40 { pt3dadd( 41.8004, 83.5358, 21.2544, 0.66 ) }
    dend_40 { pt3dadd( 41.7993, 84.8061, 21.0423, 0.29 ) }
    dend_40 { pt3dadd( 41.8058, 86.3008, 20.7612, 0.29 ) }
    dend_40 { pt3dadd( 41.8229, 87.3815, 20.5092, 0.37 ) }
    dend_40 { pt3dadd( 41.8769, 88.8353, 20.1214, 0.44 ) }
    dend_40 { pt3dadd( 41.9444, 89.9768, 19.7517, 0.52 ) }
    dend_40 { pt3dadd( 42.0095, 91.0927, 19.3237, 0.66 ) }
    dend_40 { pt3dadd( 42.0784, 92.1164, 18.9361, 0.66 ) }
    dend_40 { pt3dadd( 42.1322, 93.1538, 18.5499, 0.66 ) }
    dend_40 { pt3dadd( 42.1687, 94.1102, 18.1808, 0.96 ) }
    dend_40 { pt3dadd( 42.2606, 95.8732, 17.4612, 0.44 ) }
    dend_40 { pt3dadd( 42.3362, 96.8993, 16.9919, 0.44 ) }
    dend_40 { pt3dadd( 42.4428, 97.8358, 16.5157, 0.59 ) }
    dend_40 { pt3dadd( 42.6657, 99.2118, 15.7529, 0.22 ) }
    dend_40 { pt3dadd( 42.7898, 99.8471, 15.3965, 0.22 ) }
    dend_40 { pt3dadd( 42.9054, 100.369, 15.0963, 0.22 ) }
    dend_40 { pt3dadd( 42.9967, 100.704, 14.9105, 0.22 ) }
    dend_40 { pt3dadd( 43.1745, 101.303, 14.5967, 0.22 ) }
    dend_40 { pt3dadd( 43.3104, 101.78, 14.3466, 0.22 ) }
    dend_40 { pt3dadd( 43.476, 102.409, 14.0259, 0.66 ) }
    dend_40 { pt3dadd( 43.6827, 103.305, 13.5623, 0.66 ) }
    dend_40 { pt3dadd( 43.8574, 104.277, 13.0874, 0.66 ) }
    dend_40 { pt3dadd( 43.9474, 104.922, 12.7968, 0.37 ) }
    dend_40 { pt3dadd( 44.0498, 105.962, 12.346, 0.22 ) }
    dend_40 { pt3dadd( 44.1367, 107.093, 11.9648, 0.44 ) }
    dend_40 { pt3dadd( 44.1861, 107.888, 11.7929, 0.44 ) }
    dend_40 { pt3dadd( 44.2551, 108.804, 11.7539, 0.44 ) }
    dend_40 { pt3dadd( 44.3479, 109.981, 12.0345, 0.22 ) }
    dend_40 { pt3dadd( 44.4399, 111.094, 12.4238, 0.29 ) }
    dend_40 { pt3dadd( 44.5892, 113.038, 13.162, 0.44 ) }
    dend_40 { pt3dadd( 44.6808, 114.323, 13.5958, 0.66 ) }
    dend_40 { pt3dadd( 44.7809, 115.599, 13.8606, 0.66 ) }
    dend_40 { pt3dadd( 44.98, 117.646, 13.898, 0.29 ) }
    dend_40 { pt3dadd( 45.1889, 119.443, 13.4805, 0.37 ) }
    dend_40 { pt3dadd( 45.3439, 120.912, 12.7624, 0.52 ) }
    dend_40 { pt3dadd( 45.4142, 122.138, 11.8571, 0.74 ) }
    dend_40 { pt3dadd( 45.4468, 123.441, 10.6843, 0.74 ) }
    dend_40 { pt3dadd( 45.4599, 124.295, 9.83819, 0.74 ) }
    dend_40 { pt3dadd( 45.4861, 125.604, 8.46463, 0.52 ) }
    dend_40 { pt3dadd( 45.5176, 126.745, 7.36928, 0.59 ) }
    dend_40 { pt3dadd( 45.5536, 128.567, 5.77328, 0.22 ) }
    dend_40 { pt3dadd( 45.5659, 129.327, 5.14849, 0.22 ) }
    dend_40 { pt3dadd( 45.5713, 130.217, 4.46239, 0.59 ) }
    dend_40 { pt3dadd( 45.5619, 131.506, 3.45862, 0.96 ) }
    dend_40 { pt3dadd( 45.5533, 132.835, 2.49903, 0.37 ) }
    dend_40 { pt3dadd( 45.5798, 133.828, 1.83234, 0.44 ) }
    dend_40 { pt3dadd( 45.6605, 135.153, 0.982871, 0.44 ) }
    dend_40 { pt3dadd( 45.752, 136.279, 0.267507, 0.44 ) }
    dend_40 { pt3dadd( 45.8548, 137.176, -0.310697, 0.44 ) }
    dend_40 { pt3dadd( 46.0844, 138.518, -1.16997, 0.22 ) }
    dend_40 { pt3dadd( 46.3971, 139.965, -2.11166, 0.22 ) }
    dend_40 { pt3dadd( 46.5232, 140.439, -2.41007, 0.22 ) }
    dend_40 { pt3dadd( 46.7675, 141.276, -2.88624, 0.59 ) }
    dend_40 { pt3dadd( 47.2287, 142.777, -3.64889, 0.29 ) }
    dend_40 { pt3dadd( 47.5199, 143.823, -4.13647, 0.29 ) }
    dend_40 { pt3dadd( 47.767, 144.971, -4.64773, 0.52 ) }
    dend_40 { pt3dadd( 47.9104, 146.012, -5.06458, 0.88 ) }
    dend_40 { pt3dadd( 47.972, 146.789, -5.36483, 0.88 ) }
    dend_40 { pt3dadd( 48.0222, 147.852, -5.74226, 0.59 ) }
    dend_40 { pt3dadd( 48.1011, 149.234, -6.16551, 0.22 ) }
    dend_40 { pt3dadd( 48.1789, 149.948, -6.38407, 0.29 ) }
    dend_40 { pt3dadd( 48.2904, 150.552, -6.58449, 0.29 ) }
    dend_40 { pt3dadd( 48.4706, 151.254, -6.82063, 0.81 ) }
    dend_40 { pt3dadd( 48.7798, 152.193, -7.13973, 0.88 ) }
    dend_40 { pt3dadd( 49.1143, 153.028, -7.40555, 0.59 ) }
    dend_40 { pt3dadd( 49.5918, 154.103, -7.7448, 0.59 ) }
    dend_40 { pt3dadd( 50.1458, 155.361, -8.13947, 0.29 ) }
    dend_40 { pt3dadd( 50.8283, 157.012, -8.67422, 0.52 ) }
    dend_40 { pt3dadd( 51.2097, 158.047, -9.06599, 0.59 ) }
    dend_40 { pt3dadd( 51.5262, 159.134, -9.53841, 0.59 ) }
    dend_40 { pt3dadd( 51.7058, 159.941, -9.93396, 0.74 ) }
    dend_40 { pt3dadd( 51.8014, 160.515, -10.2658, 0.74 ) }
    dend_40 { pt3dadd( 51.9288, 161.583, -10.9911, 0.66 ) }
    dend_40 { pt3dadd( 52.0025, 162.575, -11.7479, 0.66 ) }
    dend_40 { pt3dadd( 52.0463, 163.486, -12.4452, 0.74 ) }
    dend_40 { pt3dadd( 52.1062, 164.728, -13.2645, 0.52 ) }
    dend_40 { pt3dadd( 52.1716, 165.594, -13.6618, 0.59 ) }
    dend_40 { pt3dadd( 52.2848, 166.548, -13.8622, 0.44 ) }
    dend_40 { pt3dadd( 52.4298, 167.515, -13.9315, 0.59 ) }
    dend_40 { pt3dadd( 52.5536, 168.275, -13.9537, 0.37 ) }
    dend_40 { pt3dadd( 52.7667, 170.027, -14.0832, 0.74 ) }
    dend_40 { pt3dadd( 52.7775, 171.165, -14.3167, 1.03 ) }
    dend_40 { pt3dadd( 52.6521, 172.457, -14.8396, 0.44 ) }
    dend_40 { pt3dadd( 52.2594, 174.372, -16.2369, 0.59 ) }
    dend_40 { pt3dadd( 52.027, 175.338, -17.1545, 1.18 ) }
    dend_40 { pt3dadd( 51.7108, 176.532, -18.439, 0.37 ) }
    dend_40 { pt3dadd( 51.3513, 177.672, -19.8115, 0.37 ) }
    dend_40 { pt3dadd( 51.0308, 178.536, -20.9375, 0.81 ) }
    dend_40 { pt3dadd( 50.5078, 179.931, -22.7643, 0.81 ) }
    dend_40 { pt3dadd( 50.2052, 180.827, -23.8198, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 49.9539, 181.831, -24.8877, 0.37 ) }
    dend_40 { pt3dadd( 49.7891, 183.024, -25.9943, 0.37 ) }
    dend_40 { pt3dadd( 49.6899, 184.503, -27.1572, 0.37 ) }
    dend_40 { pt3dadd( 49.6776, 185.369, -27.6964, 0.52 ) }
    dend_40 { pt3dadd( 49.6813, 186.339, -28.1374, 0.44 ) }
    dend_40 { pt3dadd( 49.694, 187.388, -28.593, 0.66 ) }
    dend_40 { pt3dadd( 49.7524, 188.336, -29.0307, 0.81 ) }
    dend_40 { pt3dadd( 49.8128, 188.985, -29.3241, 0.81 ) }
    dend_40 { pt3dadd( 49.8796, 189.699, -29.6543, 0.74 ) }
    dend_40 { pt3dadd( 49.9783, 191.288, -30.4249, 0.66 ) }
    dend_40 { pt3dadd( 50.052, 192.974, -31.2631, 0.44 ) }
    dend_40 { pt3dadd( 50.081, 194.355, -31.9381, 0.44 ) }
    dend_40 { pt3dadd( 50.0986, 195.442, -32.4412, 1.03 ) }
    dend_40 { pt3dadd( 50.1107, 196.249, -32.7172, 0.66 ) }
    dend_40 { pt3dadd( 50.1125, 197.304, -32.8865, 0.52 ) }
    dend_40 { pt3dadd( 50.1195, 197.868, -32.9027, 0.74 ) }
    dend_40 { pt3dadd( 50.1091, 198.638, -32.9197, 0.96 ) }
    dend_40 { pt3dadd( 50.1038, 199.075, -32.9571, 0.96 ) }
    dend_40 { pt3dadd( 50.0891, 201.008, -33.4184, 0.66 ) }
    dend_40 { pt3dadd( 50.0687, 202.638, -34.0872, 0.66 ) }
    dend_40 { pt3dadd( 50.0106, 204.08, -34.9199, 0.44 ) }
    dend_40 { pt3dadd( 49.8578, 205.743, -36.1399, 0.96 ) }
    dend_40 { pt3dadd( 49.6753, 206.817, -37.1127, 0.52 ) }
    dend_40 { pt3dadd( 49.3639, 207.856, -38.2597, 0.52 ) }
    dend_40 { pt3dadd( 49.0312, 208.806, -39.5092, 0.52 ) }
    dend_40 { pt3dadd( 48.71, 209.488, -40.5319, 0.44 ) }
    dend_40 { pt3dadd( 48.3066, 210.103, -41.5002, 0.44 ) }
    dend_40 { pt3dadd( 47.862, 210.581, -42.3248, 0.96 ) }
    dend_40 { pt3dadd( 46.9013, 211.277, -43.7516, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 53.2949, -66.4853, 64.7247, 0.37 ) }
    dend_38 { pt3dadd( 53.4605, -67.7656, 66.4266, 0.37 ) }
    dend_38 { pt3dadd( 53.8152, -69.1959, 68.0652, 0.37 ) }
    dend_38 { pt3dadd( 54.0365, -69.9197, 68.8811, 0.59 ) }
    dend_38 { pt3dadd( 54.4217, -71.0733, 70.1345, 0.44 ) }
    dend_38 { pt3dadd( 54.6287, -71.6356, 70.8145, 0.66 ) }
    dend_38 { pt3dadd( 54.9122, -72.3596, 71.8404, 0.44 ) }
    dend_38 { pt3dadd( 55.3499, -73.3577, 73.2946, 0.44 ) }
    dend_38 { pt3dadd( 55.7144, -74.0884, 74.3816, 0.44 ) }
    dend_38 { pt3dadd( 55.976, -74.5559, 75.1002, 0.81 ) }
    dend_38 { pt3dadd( 56.8353, -76.0018, 77.3013, 0.81 ) }
    dend_38 { pt3dadd( 57.6452, -77.3595, 79.3534, 0.81 ) }
    dend_38 { pt3dadd( 57.9102, -77.8066, 80.0084, 0.81 ) }
    dend_38 { pt3dadd( 58.2998, -78.4589, 80.8617, 0.44 ) }
    dend_38 { pt3dadd( 58.6824, -79.1172, 81.5784, 0.44 ) }
    dend_38 { pt3dadd( 59.3103, -80.2931, 82.6884, 0.44 ) }
    dend_38 { pt3dadd( 59.6242, -80.949, 83.2047, 0.66 ) }
    dend_38 { pt3dadd( 59.8439, -81.4708, 83.5912, 0.66 ) }
    dend_38 { pt3dadd( 60.2941, -82.7189, 84.6388, 0.52 ) }
    dend_38 { pt3dadd( 60.6339, -83.9358, 85.7512, 0.66 ) }
    dend_38 { pt3dadd( 60.975, -85.5824, 87.2623, 0.29 ) }
    dend_38 { pt3dadd( 61.0745, -86.2648, 87.8938, 0.29 ) }
    dend_38 { pt3dadd( 61.1858, -87.3695, 88.8995, 0.22 ) }
    dend_38 { pt3dadd( 61.2905, -89.0838, 90.3858, 0.22 ) }
    dend_38 { pt3dadd( 61.3256, -90.2555, 91.3658, 0.22 ) }
    dend_38 { pt3dadd( 61.3335, -91.3218, 92.2158, 0.37 ) }
    dend_38 { pt3dadd( 61.328, -92.8704, 93.3761, 0.74 ) }
    dend_38 { pt3dadd( 61.3333, -93.7571, 93.979, 0.88 ) }
    dend_38 { pt3dadd( 61.3493, -94.7371, 94.5828, 0.22 ) }
    dend_38 { pt3dadd( 61.3599, -96.4232, 95.4086, 0.22 ) }
    dend_38 { pt3dadd( 61.3642, -97.0765, 95.6905, 0.22 ) }
    dend_38 { pt3dadd( 61.3744, -98.0917, 95.999, 0.22 ) }
    dend_38 { pt3dadd( 61.4124, -99.701, 96.2664, 0.15 ) }
    dend_38 { pt3dadd( 61.4815, -100.905, 96.3727, 0.15 ) }
    dend_38 { pt3dadd( 61.6722, -103.141, 96.5101, 0.22 ) }
    dend_38 { pt3dadd( 61.8317, -104.677, 96.5709, 0.22 ) }
    dend_38 { pt3dadd( 62.1237, -107.44, 96.7594, 0.15 ) }
    dend_38 { pt3dadd( 62.3182, -109.76, 96.9588, 0.15 ) }
    dend_38 { pt3dadd( 62.4432, -111.985, 97.2483, 0.22 ) }
    dend_38 { pt3dadd( 62.5154, -113.938, 97.6112, 0.22 ) }
    dend_38 { pt3dadd( 62.5532, -115.56, 98.012, 0.22 ) }
    dend_38 { pt3dadd( 62.5568, -117.453, 98.5705, 0.22 ) }
    dend_38 { pt3dadd( 62.5276, -119.925, 99.5033, 0.22 ) }
    dend_38 { pt3dadd( 62.4893, -122.44, 100.51, 0.22 ) }
    dend_38 { pt3dadd( 62.4691, -123.961, 101.141, 0.22 ) }
    dend_38 { pt3dadd( 62.4766, -125.021, 101.553, 0.52 ) }
    dend_38 { pt3dadd( 62.5303, -126.313, 102.039, 0.59 ) }
    dend_38 { pt3dadd( 62.6843, -127.834, 102.586, 0.22 ) }
    dend_38 { pt3dadd( 62.8486, -128.863, 102.948, 0.15 ) }
    dend_38 { pt3dadd( 63.0711, -130.187, 103.449, 0.15 ) }
    dend_38 { pt3dadd( 63.2192, -131.608, 103.854, 0.22 ) }
    dend_38 { pt3dadd( 63.2155, -132.631, 104.091, 0.37 ) }
    dend_38 { pt3dadd( 63.1423, -134.057, 104.395, 0.37 ) }
    dend_38 { pt3dadd( 62.9756, -135.585, 104.649, 0.15 ) }
    dend_38 { pt3dadd( 62.5877, -137.977, 104.992, 0.15 ) }
    dend_38 { pt3dadd( 61.8052, -141.672, 105.298, 0.15 ) }
    dend_38 { pt3dadd( 61.3224, -143.381, 105.382, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 53.2949, -66.4853, 64.7247, 0.29 ) }
    dend_37 { pt3dadd( 53.6684, -67.1895, 64.0351, 0.29 ) }
    dend_37 { pt3dadd( 54.3298, -68.3267, 62.8402, 0.37 ) }
    dend_37 { pt3dadd( 54.7358, -69.0062, 62.1235, 0.37 ) }
    dend_37 { pt3dadd( 55.2971, -69.8892, 61.2101, 0.22 ) }
    dend_37 { pt3dadd( 55.9587, -70.8375, 60.235, 0.22 ) }
    dend_37 { pt3dadd( 56.3438, -71.3602, 59.7203, 0.52 ) }
    dend_37 { pt3dadd( 57.1296, -72.4686, 58.6827, 0.29 ) }
    dend_37 { pt3dadd( 57.4956, -72.9901, 58.2278, 0.44 ) }
    dend_37 { pt3dadd( 57.856, -73.5325, 57.7768, 0.66 ) }
    dend_37 { pt3dadd( 58.3231, -74.3126, 57.1635, 0.37 ) }
    dend_37 { pt3dadd( 58.7012, -75.1035, 56.6128, 0.29 ) }
    dend_37 { pt3dadd( 59.0429, -76.0729, 55.9638, 0.29 ) }
    dend_37 { pt3dadd( 59.2762, -76.961, 55.4043, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 59.5079, -77.9437, 54.8053, 0.66 ) }
    dend_37 { pt3dadd( 59.7031, -78.9422, 54.2174, 0.66 ) }
    dend_37 { pt3dadd( 59.8708, -79.9422, 53.6605, 0.52 ) }
    dend_37 { pt3dadd( 60.1233, -81.4147, 52.8742, 0.37 ) }
    dend_37 { pt3dadd( 60.3475, -82.4288, 52.3683, 0.66 ) }
    dend_37 { pt3dadd( 60.6443, -83.4757, 51.8438, 0.22 ) }
    dend_37 { pt3dadd( 60.8829, -84.1177, 51.4805, 0.22 ) }
    dend_37 { pt3dadd( 61.177, -84.7502, 51.0804, 0.59 ) }
    dend_37 { pt3dadd( 61.5717, -85.4491, 50.6025, 0.81 ) }
    dend_37 { pt3dadd( 62.2093, -86.3961, 49.9019, 0.52 ) }
    dend_37 { pt3dadd( 63.04, -87.4993, 49.0232, 0.66 ) }
    dend_37 { pt3dadd( 63.847, -88.5054, 48.1965, 0.44 ) }
    dend_37 { pt3dadd( 64.7258, -89.5642, 47.3793, 0.37 ) }
    dend_37 { pt3dadd( 65.1469, -90.0874, 46.994, 0.37 ) }
    dend_37 { pt3dadd( 65.5989, -90.677, 46.5913, 0.37 ) }
    dend_37 { pt3dadd( 66.3672, -91.7546, 45.9519, 0.66 ) }
    dend_37 { pt3dadd( 66.8299, -92.4404, 45.6137, 1.11 ) }
    dend_37 { pt3dadd( 67.4947, -93.4903, 45.1212, 0.66 ) }
    dend_37 { pt3dadd( 68.1498, -94.576, 44.5482, 0.44 ) }
    dend_37 { pt3dadd( 68.681, -95.5224, 43.9419, 0.44 ) }
    dend_37 { pt3dadd( 69.1348, -96.3502, 43.3428, 0.59 ) }
    dend_37 { pt3dadd( 69.5205, -97.0334, 42.7945, 0.52 ) }
    dend_37 { pt3dadd( 70.14, -98.058, 41.8596, 0.29 ) }
    dend_37 { pt3dadd( 70.7252, -98.9453, 40.9293, 0.81 ) }
    dend_37 { pt3dadd( 71.4134, -99.8974, 39.8359, 0.22 ) }
    dend_37 { pt3dadd( 71.6604, -100.218, 39.4384, 0.22 ) }
    dend_37 { pt3dadd( 71.8537, -100.448, 39.1383, 0.29 ) }
    dend_37 { pt3dadd( 72.4575, -101.025, 38.3754, 0.52 ) }
    dend_37 { pt3dadd( 73.1591, -101.548, 37.7121, 0.22 ) }
    dend_37 { pt3dadd( 73.9021, -101.997, 37.19, 0.52 ) }
    dend_37 { pt3dadd( 74.4532, -102.273, 36.8905, 0.52 ) }
    dend_37 { pt3dadd( 75.0772, -102.55, 36.6434, 0.29 ) }
    dend_37 { pt3dadd( 76.4734, -103.077, 36.3075, 0.22 ) }
    dend_37 { pt3dadd( 77.3285, -103.355, 36.2354, 0.29 ) }
    dend_37 { pt3dadd( 78.0318, -103.577, 36.249, 0.52 ) }
    dend_37 { pt3dadd( 78.7277, -103.808, 36.3155, 0.66 ) }
    dend_37 { pt3dadd( 80.1838, -104.3, 36.5118, 0.44 ) }
    dend_37 { pt3dadd( 81.3029, -104.713, 36.7024, 0.44 ) }
    dend_37 { pt3dadd( 82.3461, -105.135, 36.8902, 0.44 ) }
    dend_37 { pt3dadd( 83.2998, -105.53, 37.0407, 0.52 ) }
    dend_37 { pt3dadd( 84.1434, -105.886, 37.1078, 0.66 ) }
    dend_37 { pt3dadd( 84.8849, -106.202, 37.1008, 0.66 ) }
    dend_37 { pt3dadd( 85.8897, -106.604, 36.9772, 0.37 ) }
    dend_37 { pt3dadd( 86.6367, -106.87, 36.8544, 0.37 ) }
    dend_37 { pt3dadd( 87.2652, -107.059, 36.6987, 0.74 ) }
    dend_37 { pt3dadd( 88.0734, -107.265, 36.4587, 1.03 ) }
    dend_37 { pt3dadd( 89.0305, -107.498, 36.1479, 0.29 ) }
    dend_37 { pt3dadd( 90.0809, -107.752, 35.7945, 0.22 ) }
    dend_37 { pt3dadd( 91.1945, -108.003, 35.4292, 0.22 ) }
    dend_37 { pt3dadd( 92.4142, -108.294, 35.056, 0.22 ) }
    dend_37 { pt3dadd( 93.4045, -108.552, 34.8218, 0.29 ) }
    dend_37 { pt3dadd( 94.2062, -108.79, 34.7043, 0.44 ) }
    dend_37 { pt3dadd( 94.9748, -109.039, 34.6578, 0.44 ) }
    dend_37 { pt3dadd( 95.7333, -109.316, 34.7024, 0.81 ) }
    dend_37 { pt3dadd( 96.1601, -109.488, 34.7807, 0.88 ) }
    dend_37 { pt3dadd( 97.3566, -110.028, 35.1522, 0.22 ) }
    dend_37 { pt3dadd( 98.0842, -110.417, 35.5003, 0.15 ) }
    dend_37 { pt3dadd( 98.8615, -110.87, 36.0024, 0.15 ) }
    dend_37 { pt3dadd( 99.7212, -111.401, 36.6459, 0.15 ) }
    dend_37 { pt3dadd( 100.154, -111.685, 36.9872, 0.37 ) }
    dend_37 { pt3dadd( 100.723, -112.077, 37.4259, 0.81 ) }
    dend_37 { pt3dadd( 102.035, -113.064, 38.3876, 0.52 ) }
    dend_37 { pt3dadd( 102.87, -113.811, 38.9969, 0.66 ) }
    dend_37 { pt3dadd( 103.276, -114.255, 39.2701, 0.52 ) }
    dend_37 { pt3dadd( 103.752, -114.867, 39.5243, 0.22 ) }
    dend_37 { pt3dadd( 104.319, -115.705, 39.8237, 0.22 ) }
    dend_37 { pt3dadd( 104.7, -116.348, 40.0101, 0.44 ) }
    dend_37 { pt3dadd( 105.338, -117.589, 40.3228, 0.44 ) }
    dend_37 { pt3dadd( 105.767, -118.607, 40.5898, 0.44 ) }
    dend_37 { pt3dadd( 106.099, -119.56, 40.8762, 0.44 ) }
    dend_37 { pt3dadd( 106.551, -120.928, 41.4377, 0.29 ) }
    dend_37 { pt3dadd( 106.711, -121.393, 41.6676, 0.66 ) }
    dend_37 { pt3dadd( 107.096, -122.392, 42.2285, 0.66 ) }
    dend_37 { pt3dadd( 107.54, -123.41, 42.8581, 0.66 ) }
    dend_37 { pt3dadd( 107.869, -124.097, 43.3024, 1.03 ) }
    dend_37 { pt3dadd( 108.66, -125.568, 44.2356, 0.29 ) }
    dend_37 { pt3dadd( 109.17, -126.423, 44.7298, 0.15 ) }
    dend_37 { pt3dadd( 109.37, -126.721, 44.918, 0.15 ) }
    dend_37 { pt3dadd( 109.682, -127.112, 45.2143, 0.15 ) }
    dend_37 { pt3dadd( 110.087, -127.513, 45.6241, 0.59 ) }
    dend_37 { pt3dadd( 110.339, -127.728, 45.8888, 0.81 ) }
    dend_37 { pt3dadd( 111.194, -128.42, 46.7811, 0.29 ) }
    dend_37 { pt3dadd( 112.005, -129.06, 47.6833, 0.44 ) }
    dend_37 { pt3dadd( 113.066, -129.896, 48.8636, 0.22 ) }
    dend_37 { pt3dadd( 114.066, -130.67, 49.9492, 0.22 ) }
    dend_37 { pt3dadd( 114.821, -131.287, 50.8047, 0.22 ) }
    dend_37 { pt3dadd( 115.585, -131.954, 51.6724, 0.29 ) }
    dend_37 { pt3dadd( 116.247, -132.564, 52.3892, 0.59 ) }
    dend_37 { pt3dadd( 116.702, -133.049, 52.8815, 1.03 ) }
    dend_37 { pt3dadd( 116.965, -133.388, 53.1655, 1.03 ) }
    dend_37 { pt3dadd( 118.087, -135.058, 54.4766, 0.15 ) }
    dend_37 { pt3dadd( 118.532, -135.767, 55.0153, 0.15 ) }
    dend_37 { pt3dadd( 118.868, -136.324, 55.4165, 0.22 ) }
    dend_37 { pt3dadd( 119.518, -137.387, 56.0974, 0.74 ) }
    dend_37 { pt3dadd( 119.985, -138.108, 56.5213, 0.96 ) }
    dend_37 { pt3dadd( 120.872, -139.376, 57.1297, 0.22 ) }
    dend_37 { pt3dadd( 121.451, -140.124, 57.3478, 0.22 ) }
    dend_37 { pt3dadd( 122.243, -141.072, 57.5169, 0.37 ) }
    dend_37 { pt3dadd( 123.073, -141.97, 57.5635, 0.15 ) }
    dend_37 { pt3dadd( 123.665, -142.559, 57.4819, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 124.43, -143.302, 57.2836, 0.15 ) }
    dend_37 { pt3dadd( 125.246, -144.106, 56.9695, 0.66 ) }
    dend_37 { pt3dadd( 126.164, -144.985, 56.5879, 0.22 ) }
    dend_37 { pt3dadd( 126.953, -145.72, 56.2583, 0.22 ) }
    dend_37 { pt3dadd( 127.792, -146.541, 55.9572, 0.29 ) }
    dend_37 { pt3dadd( 128.293, -147.072, 55.8229, 0.15 ) }
    dend_37 { pt3dadd( 128.705, -147.532, 55.767, 0.52 ) }
    dend_37 { pt3dadd( 129.137, -148.048, 55.8182, 0.59 ) }
    dend_37 { pt3dadd( 129.883, -149.016, 56.161, 0.22 ) }
    dend_37 { pt3dadd( 130.518, -149.843, 56.6698, 0.88 ) }
    dend_37 { pt3dadd( 130.973, -150.377, 57.1816, 0.88 ) }
    dend_37 { pt3dadd( 131.365, -150.794, 57.722, 0.59 ) }
    dend_37 { pt3dadd( 132.273, -151.69, 59.1595, 0.15 ) }
    dend_37 { pt3dadd( 132.968, -152.326, 60.4288, 0.22 ) }
    dend_37 { pt3dadd( 133.374, -152.649, 61.2585, 0.22 ) }
    dend_37 { pt3dadd( 134.045, -153.096, 62.7594, 0.15 ) }
    dend_37 { pt3dadd( 134.491, -153.356, 63.8, 0.15 ) }
    dend_37 { pt3dadd( 134.756, -153.49, 64.4392, 0.44 ) }
    dend_37 { pt3dadd( 135.354, -153.738, 65.8592, 0.74 ) }
    dend_37 { pt3dadd( 135.854, -153.941, 67.0562, 0.74 ) }
    dend_37 { pt3dadd( 136.416, -154.211, 68.5565, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -54.1209, 51.6141, 34.6248, 1.18 ) }
    dend_24 { pt3dadd( -56.3819, 53.3544, 35.3835, 1.18 ) }
    dend_24 { pt3dadd( -57.6547, 54.2524, 35.6922, 1.03 ) }
    dend_24 { pt3dadd( -58.764, 54.9771, 35.8428, 1.4 ) }
    dend_24 { pt3dadd( -60.2076, 55.876, 36.0469, 1.03 ) }
    dend_24 { pt3dadd( -61.1527, 56.4405, 36.2168, 0.88 ) }
    dend_24 { pt3dadd( -62.6422, 57.3024, 36.5222, 0.59 ) }
    dend_24 { pt3dadd( -64.176, 58.1229, 36.7705, 0.29 ) }
    dend_24 { pt3dadd( -65.5272, 58.7684, 37.034, 0.37 ) }
    dend_24 { pt3dadd( -67.0369, 59.4307, 37.3937, 0.74 ) }
    dend_24 { pt3dadd( -68.421, 60.0049, 37.7957, 1.4 ) }
    dend_24 { pt3dadd( -70.2427, 60.7599, 38.4175, 0.88 ) }
    dend_24 { pt3dadd( -71.3039, 61.2145, 38.8879, 0.88 ) }
    dend_24 { pt3dadd( -72.0144, 61.5475, 39.2709, 0.88 ) }
    dend_24 { pt3dadd( -72.9276, 61.9886, 39.8225, 0.59 ) }
    dend_24 { pt3dadd( -74.0415, 62.5137, 40.5128, 0.44 ) }
    dend_24 { pt3dadd( -74.9597, 62.9166, 41.1424, 0.29 ) }
    dend_24 { pt3dadd( -76.5759, 63.593, 42.4015, 0.52 ) }
    dend_24 { pt3dadd( -77.6399, 64.0257, 43.3096, 0.74 ) }
    dend_24 { pt3dadd( -78.678, 64.421, 44.2677, 1.03 ) }
    dend_24 { pt3dadd( -79.9481, 64.8558, 45.4638, 0.59 ) }
    dend_24 { pt3dadd( -81.198, 65.251, 46.6344, 0.22 ) }
    dend_24 { pt3dadd( -82.2808, 65.5553, 47.617, 0.22 ) }
    dend_24 { pt3dadd( -83.5515, 65.8794, 48.7615, 0.22 ) }
    dend_24 { pt3dadd( -84.7422, 66.1886, 49.9112, 0.37 ) }
    dend_24 { pt3dadd( -85.3286, 66.3451, 50.4886, 0.52 ) }
    dend_24 { pt3dadd( -86.4733, 66.6664, 51.5738, 1.33 ) }
    dend_24 { pt3dadd( -87.8395, 67.0694, 52.8047, 0.29 ) }
    dend_24 { pt3dadd( -89.5186, 67.5395, 54.184, 0.37 ) }
    dend_24 { pt3dadd( -91.0267, 67.9429, 55.2914, 0.37 ) }
    dend_24 { pt3dadd( -91.9453, 68.1681, 55.8831, 0.37 ) }
    dend_24 { pt3dadd( -93.0785, 68.3962, 56.5144, 0.66 ) }
    dend_24 { pt3dadd( -93.7441, 68.5037, 56.8242, 0.66 ) }
    dend_24 { pt3dadd( -95.0466, 68.7028, 57.3029, 0.44 ) }
    dend_24 { pt3dadd( -95.8331, 68.8272, 57.5603, 0.44 ) }
    dend_24 { pt3dadd( -96.8879, 68.9954, 57.9824, 0.22 ) }
    dend_24 { pt3dadd( -97.8073, 69.1608, 58.5073, 0.22 ) }
    dend_24 { pt3dadd( -98.9188, 69.3608, 59.3547, 0.22 ) }
    dend_24 { pt3dadd( -99.8732, 69.537, 60.1994, 0.15 ) }
    dend_24 { pt3dadd( -101.124, 69.7594, 61.4906, 0.66 ) }
    dend_24 { pt3dadd( -102.329, 69.966, 62.763, 0.29 ) }
    dend_24 { pt3dadd( -103.596, 70.1549, 64.079, 0.66 ) }
    dend_24 { pt3dadd( -104.845, 70.2974, 65.2707, 1.03 ) }
    dend_24 { pt3dadd( -105.855, 70.3603, 66.1064, 1.25 ) }
    dend_24 { pt3dadd( -108.244, 70.3755, 67.8077, 0.22 ) }
    dend_24 { pt3dadd( -109.593, 70.3236, 68.5802, 0.22 ) }
    dend_24 { pt3dadd( -110.583, 70.253, 69.0041, 0.29 ) }
    dend_24 { pt3dadd( -112.061, 70.1094, 69.4175, 0.29 ) }
    dend_24 { pt3dadd( -113.091, 70.0013, 69.5328, 0.22 ) }
    dend_24 { pt3dadd( -114.202, 69.8675, 69.4941, 0.29 ) }
    dend_24 { pt3dadd( -114.948, 69.7774, 69.3562, 0.44 ) }
    dend_24 { pt3dadd( -115.823, 69.6743, 69.1027, 0.66 ) }
    dend_24 { pt3dadd( -116.743, 69.5945, 68.7683, 0.66 ) }
    dend_24 { pt3dadd( -118.053, 69.5423, 68.2282, 0.22 ) }
    dend_24 { pt3dadd( -119.053, 69.5503, 67.8148, 0.22 ) }
    dend_24 { pt3dadd( -120.387, 69.6073, 67.3872, 0.29 ) }
    dend_24 { pt3dadd( -122.275, 69.7279, 66.9756, 0.29 ) }
    dend_24 { pt3dadd( -123.107, 69.7899, 66.8832, 0.59 ) }
    dend_24 { pt3dadd( -124.467, 69.8806, 66.9222, 0.59 ) }
    dend_24 { pt3dadd( -126.145, 69.978, 67.1628, 0.22 ) }
    dend_24 { pt3dadd( -128.389, 70.0984, 67.66, 0.44 ) }
    dend_24 { pt3dadd( -129.313, 70.1336, 67.9338, 0.44 ) }
    dend_24 { pt3dadd( -130.354, 70.1593, 68.2936, 0.22 ) }
    dend_24 { pt3dadd( -131.905, 70.1846, 68.7983, 0.37 ) }
    dend_24 { pt3dadd( -132.562, 70.2026, 68.9603, 0.59 ) }
    dend_24 { pt3dadd( -133.297, 70.2508, 69.0606, 0.96 ) }
    dend_24 { pt3dadd( -134.472, 70.3717, 69.0933, 0.29 ) }
    dend_24 { pt3dadd( -136.309, 70.618, 69.0591, 0.22 ) }
    dend_24 { pt3dadd( -137.431, 70.8059, 69.1095, 0.22 ) }
    dend_24 { pt3dadd( -139.358, 71.1814, 69.2653, 0.22 ) }
    dend_24 { pt3dadd( -141.036, 71.5488, 69.497, 0.29 ) }
    dend_24 { pt3dadd( -141.933, 71.7668, 69.6637, 0.29 ) }
    dend_24 { pt3dadd( -143.08, 72.08, 69.9351, 0.59 ) }
    dend_24 { pt3dadd( -146.126, 73.023, 71.0463, 0.07 ) }
    dend_24 { pt3dadd( -146.772, 73.2455, 71.3761, 0.15 ) }
    dend_24 { pt3dadd( -147.54, 73.5472, 71.9277, 0.29 ) }
    dend_24 { pt3dadd( -148.93, 74.1722, 73.1348, 0.15 ) }
    dend_24 { pt3dadd( -149.388, 74.397, 73.6043, 0.22 ) }
    dend_24 { pt3dadd( -150.932, 75.1707, 75.4035, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -151.572, 75.4893, 76.1792, 0.81 ) }
    dend_24 { pt3dadd( -152.856, 76.0964, 77.8226, 0.22 ) }
    dend_24 { pt3dadd( -153.537, 76.3987, 78.6935, 0.29 ) }
    dend_24 { pt3dadd( -154.784, 76.9072, 80.2802, 0.22 ) }
    dend_24 { pt3dadd( -155.807, 77.2834, 81.3793, 0.22 ) }
    dend_24 { pt3dadd( -156.434, 77.4874, 81.8518, 0.66 ) }
    dend_24 { pt3dadd( -156.895, 77.6243, 82.0669, 0.66 ) }
    dend_24 { pt3dadd( -158.212, 77.9978, 82.2815, 0.22 ) }
    dend_24 { pt3dadd( -159.566, 78.3949, 82.1652, 0.29 ) }
    dend_24 { pt3dadd( -161.003, 78.8841, 81.7428, 0.74 ) }
    dend_24 { pt3dadd( -163.051, 79.6581, 80.8201, 0.22 ) }
    dend_24 { pt3dadd( -164.262, 80.1111, 80.1788, 0.15 ) }
    dend_24 { pt3dadd( -164.889, 80.3359, 79.808, 0.29 ) }
    dend_24 { pt3dadd( -165.696, 80.6114, 79.2855, 0.74 ) }
    dend_24 { pt3dadd( -166.761, 80.9557, 78.5894, 0.22 ) }
    dend_24 { pt3dadd( -168.099, 81.3214, 77.8555, 0.22 ) }
    dend_24 { pt3dadd( -168.735, 81.4763, 77.6222, 0.52 ) }
    dend_24 { pt3dadd( -169.153, 81.5685, 77.489, 0.88 ) }
    dend_24 { pt3dadd( -169.964, 81.7393, 77.2655, 0.29 ) }
    dend_24 { pt3dadd( -171.063, 81.9561, 77.263, 0.22 ) }
    dend_24 { pt3dadd( -172.502, 82.2711, 77.6125, 0.22 ) }
    dend_24 { pt3dadd( -173.334, 82.4809, 77.9646, 0.22 ) }
    dend_24 { pt3dadd( -174.566, 82.8303, 78.6059, 0.22 ) }
    dend_24 { pt3dadd( -175.856, 83.2042, 79.4022, 0.15 ) }
    dend_24 { pt3dadd( -179.74, 84.2812, 82.6, 0.15 ) }
    dend_24 { pt3dadd( -180.768, 84.5262, 83.6523, 0.15 ) }
    dend_24 { pt3dadd( -181.423, 84.6656, 84.4355, 0.15 ) }
    dend_24 { pt3dadd( -182.008, 84.7695, 85.2479, 0.15 ) }
    dend_24 { pt3dadd( -182.777, 84.8856, 86.4056, 0.37 ) }
    dend_24 { pt3dadd( -184.689, 85.1083, 89.4509, 0.15 ) }
    dend_24 { pt3dadd( -185.984, 85.1954, 91.4559, 0.15 ) }
    dend_24 { pt3dadd( -186.915, 85.2085, 93.0125, 0.15 ) }
    dend_24 { pt3dadd( -188.164, 85.1977, 95.2806, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -54.1209, 51.6141, 34.6248, 0.29 ) }
    dend_23 { pt3dadd( -54.0103, 51.8438, 36.4347, 0.29 ) }
    dend_23 { pt3dadd( -53.8562, 52.1553, 39.4148, 0.29 ) }
    dend_23 { pt3dadd( -53.7758, 52.4041, 41.9824, 0.29 ) }
    dend_23 { pt3dadd( -53.7501, 52.6686, 44.5841, 0.29 ) }
    dend_23 { pt3dadd( -53.791, 52.9177, 46.6334, 0.29 ) }
    dend_23 { pt3dadd( -53.8194, 52.9891, 47.1492, 0.29 ) }
    dend_23 { pt3dadd( -53.9521, 53.1808, 48.3816, 0.29 ) }
    dend_23 { pt3dadd( -54.082, 53.2888, 49.0294, 0.37 ) }
    dend_23 { pt3dadd( -54.5807, 53.5332, 50.4778, 0.37 ) }
    dend_23 { pt3dadd( -55.1272, 53.6986, 51.5435, 0.22 ) }
    dend_23 { pt3dadd( -55.8569, 53.8767, 52.7548, 0.22 ) }
    dend_23 { pt3dadd( -56.1382, 53.9343, 53.2298, 0.22 ) }
    dend_23 { pt3dadd( -56.3656, 53.9658, 53.6732, 0.22 ) }
    dend_23 { pt3dadd( -56.7274, 53.9844, 54.5494, 0.22 ) }
    dend_23 { pt3dadd( -56.993, 53.9676, 55.2772, 0.22 ) }
    dend_23 { pt3dadd( -57.1212, 53.9413, 55.6723, 0.22 ) }
    dend_23 { pt3dadd( -57.2741, 53.9064, 56.2154, 0.29 ) }
    dend_23 { pt3dadd( -57.6462, 53.7905, 57.6029, 0.29 ) }
    dend_23 { pt3dadd( -58.087, 53.6371, 59.1587, 0.29 ) }
    dend_23 { pt3dadd( -58.4381, 53.5002, 60.2933, 0.29 ) }
    dend_23 { pt3dadd( -58.6677, 53.4082, 61.0295, 0.15 ) }
    dend_23 { pt3dadd( -59.5, 53.038, 63.7403, 0.15 ) }
    dend_23 { pt3dadd( -60.36, 52.5884, 66.574, 0.15 ) }
    dend_23 { pt3dadd( -61.1265, 52.1122, 69.0586, 0.15 ) }
    dend_23 { pt3dadd( -61.5516, 51.8123, 70.4291, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -49.231, 38.5064, -36.4744, 1.18 ) }
    dend_13 { pt3dadd( -50.711, 38.7819, -35.9244, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -49.231, 38.5064, -36.4744, 0.29 ) }
    dend_12 { pt3dadd( -50.0295, 39.6766, -36.3064, 0.29 ) }
    dend_12 { pt3dadd( -50.7446, 40.7044, -36.3137, 0.29 ) }
    dend_12 { pt3dadd( -51.3726, 41.5863, -36.3939, 0.88 ) }
    dend_12 { pt3dadd( -52.121, 42.6176, -36.5328, 0.44 ) }
    dend_12 { pt3dadd( -52.8585, 43.6061, -36.7225, 0.44 ) }
    dend_12 { pt3dadd( -53.3227, 44.206, -36.8549, 0.29 ) }
    dend_12 { pt3dadd( -54.2798, 45.3722, -37.2785, 0.29 ) }
    dend_12 { pt3dadd( -54.7571, 45.9152, -37.5122, 0.74 ) }
    dend_12 { pt3dadd( -55.1367, 46.2923, -37.6821, 0.96 ) }
    dend_12 { pt3dadd( -55.9222, 47.0027, -37.946, 0.96 ) }
    dend_12 { pt3dadd( -56.9204, 47.8465, -38.1429, 0.66 ) }
    dend_12 { pt3dadd( -58.3727, 49.0228, -38.181, 0.37 ) }
    dend_12 { pt3dadd( -59.1897, 49.6992, -38.0486, 0.22 ) }
    dend_12 { pt3dadd( -60.2985, 50.6493, -37.7157, 0.29 ) }
    dend_12 { pt3dadd( -61.5184, 51.7443, -37.1455, 0.29 ) }
    dend_12 { pt3dadd( -62.1731, 52.3585, -36.7046, 0.81 ) }
    dend_12 { pt3dadd( -63.2149, 53.3798, -35.8049, 1.03 ) }
    dend_12 { pt3dadd( -64.0976, 54.3115, -34.8996, 0.22 ) }
    dend_12 { pt3dadd( -64.6067, 54.9153, -34.3398, 0.29 ) }
    dend_12 { pt3dadd( -65.0631, 55.5561, -33.815, 0.44 ) }
    dend_12 { pt3dadd( -65.4358, 56.1537, -33.4331, 0.44 ) }
    dend_12 { pt3dadd( -65.875, 56.9993, -32.9691, 0.44 ) }
    dend_12 { pt3dadd( -66.2922, 58.003, -32.5957, 0.52 ) }
    dend_12 { pt3dadd( -66.5669, 58.7313, -32.4716, 0.52 ) }
    dend_12 { pt3dadd( -66.9169, 59.7437, -32.4542, 0.29 ) }
    dend_12 { pt3dadd( -67.1339, 60.4171, -32.5081, 0.37 ) }
    dend_12 { pt3dadd( -67.4406, 61.3439, -32.6277, 0.37 ) }
    dend_12 { pt3dadd( -68.0668, 62.9892, -32.9199, 0.81 ) }
    dend_12 { pt3dadd( -68.577, 64.1519, -33.1839, 1.03 ) }
    dend_12 { pt3dadd( -69.0544, 65.1187, -33.4323, 0.74 ) }
    dend_12 { pt3dadd( -69.6575, 66.2331, -33.7376, 0.66 ) }
    dend_12 { pt3dadd( -70.2546, 67.3035, -34.0336, 0.37 ) }
    dend_12 { pt3dadd( -71.0298, 68.6798, -34.4116, 0.29 ) }
    dend_12 { pt3dadd( -71.511, 69.5526, -34.5961, 0.29 ) }
    dend_12 { pt3dadd( -71.7674, 70.0585, -34.7315, 0.66 ) }
    dend_12 { pt3dadd( -72.0325, 70.6453, -34.911, 1.18 ) }
    dend_12 { pt3dadd( -72.2261, 71.1695, -35.0801, 1.18 ) }
    dend_12 { pt3dadd( -72.5053, 72.0405, -35.3469, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -72.77, 72.8505, -35.5556, 0.44 ) }
    dend_12 { pt3dadd( -73.1957, 74.0248, -35.8516, 0.29 ) }
    dend_12 { pt3dadd( -73.4202, 74.6079, -35.9994, 0.29 ) }
    dend_12 { pt3dadd( -73.6614, 75.2148, -36.1483, 0.29 ) }
    dend_12 { pt3dadd( -74.0972, 76.2655, -36.4366, 0.29 ) }
    dend_12 { pt3dadd( -74.4894, 77.1619, -36.6893, 0.22 ) }
    dend_12 { pt3dadd( -74.9871, 78.2263, -36.9886, 0.37 ) }
    dend_12 { pt3dadd( -75.4553, 79.1947, -37.2292, 0.22 ) }
    dend_12 { pt3dadd( -75.6624, 79.6314, -37.34, 0.22 ) }
    dend_12 { pt3dadd( -76.0595, 80.5238, -37.5585, 0.44 ) }
    dend_12 { pt3dadd( -76.3314, 81.1887, -37.7066, 0.96 ) }
    dend_12 { pt3dadd( -76.574, 81.7607, -37.811, 1.18 ) }
    dend_12 { pt3dadd( -77.0412, 82.7416, -37.9352, 1.18 ) }
    dend_12 { pt3dadd( -77.3857, 83.3847, -38.0298, 1.25 ) }
    dend_12 { pt3dadd( -77.8091, 84.1115, -38.1753, 0.37 ) }
    dend_12 { pt3dadd( -78.1919, 84.7363, -38.3177, 0.22 ) }
    dend_12 { pt3dadd( -78.6529, 85.4704, -38.5387, 0.29 ) }
    dend_12 { pt3dadd( -78.9426, 85.9705, -38.726, 0.29 ) }
    dend_12 { pt3dadd( -79.4338, 86.9206, -39.1707, 0.22 ) }
    dend_12 { pt3dadd( -79.8186, 87.7991, -39.6333, 0.22 ) }
    dend_12 { pt3dadd( -79.9427, 88.1138, -39.805, 0.44 ) }
    dend_12 { pt3dadd( -80.2569, 88.9708, -40.3107, 0.81 ) }
    dend_12 { pt3dadd( -80.6991, 90.2675, -41.1384, 0.29 ) }
    dend_12 { pt3dadd( -81.0355, 91.2321, -41.8116, 0.52 ) }
    dend_12 { pt3dadd( -81.3329, 91.9801, -42.3647, 1.03 ) }
    dend_12 { pt3dadd( -81.6553, 92.6539, -42.9024, 1.03 ) }
    dend_12 { pt3dadd( -82.2831, 93.7381, -43.8303, 0.66 ) }
    dend_12 { pt3dadd( -82.9168, 94.6778, -44.6871, 0.59 ) }
    dend_12 { pt3dadd( -83.6139, 95.6039, -45.5586, 0.88 ) }
    dend_12 { pt3dadd( -84.4564, 96.7032, -46.559, 0.22 ) }
    dend_12 { pt3dadd( -85.123, 97.581, -47.3214, 0.59 ) }
    dend_12 { pt3dadd( -85.9117, 98.6651, -48.2214, 0.22 ) }
    dend_12 { pt3dadd( -86.3088, 99.2545, -48.6673, 0.44 ) }
    dend_12 { pt3dadd( -86.7454, 100.009, -49.2203, 0.74 ) }
    dend_12 { pt3dadd( -87.0093, 100.604, -49.6666, 0.88 ) }
    dend_12 { pt3dadd( -87.2723, 101.394, -50.294, 0.37 ) }
    dend_12 { pt3dadd( -87.4826, 102.121, -50.9216, 0.37 ) }
    dend_12 { pt3dadd( -87.7196, 102.983, -51.6865, 0.37 ) }
    dend_12 { pt3dadd( -88.0391, 104.039, -52.6044, 0.29 ) }
    dend_12 { pt3dadd( -88.3059, 104.9, -53.379, 0.52 ) }
    dend_12 { pt3dadd( -88.4317, 105.292, -53.7508, 0.52 ) }
    dend_12 { pt3dadd( -88.7418, 106.258, -54.6722, 0.52 ) }
    dend_12 { pt3dadd( -89.0321, 107.047, -55.3649, 0.37 ) }
    dend_12 { pt3dadd( -89.2699, 107.522, -55.7276, 0.37 ) }
    dend_12 { pt3dadd( -93.0451, 116.26, -56.8032, 0.37 ) }
    dend_12 { pt3dadd( -95.1595, 125.511, -55.964, 0.37 ) }
    dend_12 { pt3dadd( -96.2974, 134.895, -54.9047, 0.37 ) }
    dend_12 { pt3dadd( -97.3398, 144.316, -54.1407, 0.37 ) }
    dend_12 { pt3dadd( -96.9207, 153.789, -54.7591, 0.37 ) }
    dend_12 { pt3dadd( -95.5482, 163.145, -53.6978, 0.37 ) }
    dend_12 { pt3dadd( -93.5303, 172.447, -53.4875, 0.37 ) }
    dend_12 { pt3dadd( -91.3326, 181.692, -52.7956, 0.37 ) }
    dend_12 { pt3dadd( -90.3403, 191.144, -52.6427, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.2639, 73.824, -42.9627, 0.52 ) }
    dend_8 { pt3dadd( -13.4126, 73.6621, -44.4355, 0.52 ) }
    dend_8 { pt3dadd( -14.4903, 73.4055, -45.9132, 0.52 ) }
    dend_8 { pt3dadd( -15.0648, 73.1837, -46.9796, 0.66 ) }
    dend_8 { pt3dadd( -15.4301, 72.9179, -48.0008, 0.44 ) }
    dend_8 { pt3dadd( -15.6612, 72.6433, -49.0253, 0.37 ) }
    dend_8 { pt3dadd( -15.9586, 72.1812, -50.8914, 0.37 ) }
    dend_8 { pt3dadd( -16.0018, 72.0662, -51.3802, 0.37 ) }
    dend_8 { pt3dadd( -16.0477, 71.5446, -53.5414, 0.37 ) }
    dend_8 { pt3dadd( -16.0314, 71.1, -55.2886, 0.52 ) }
    dend_8 { pt3dadd( -16.0322, 70.7741, -56.544, 0.52 ) }
    dend_8 { pt3dadd( -16.0652, 70.6031, -57.1625, 0.52 ) }
    dend_8 { pt3dadd( -16.3109, 70.2194, -58.2926, 0.52 ) }
    dend_8 { pt3dadd( -16.8221, 69.7962, -59.2774, 0.66 ) }
    dend_8 { pt3dadd( -17.5669, 69.3646, -59.6773, 0.52 ) }
    dend_8 { pt3dadd( -18.6251, 68.8079, -60.0234, 0.44 ) }
    dend_8 { pt3dadd( -19.418, 68.3825, -60.1924, 0.44 ) }
    dend_8 { pt3dadd( -20.0489, 68.0202, -60.2763, 0.81 ) }
    dend_8 { pt3dadd( -21.1022, 67.3923, -60.2713, 0.96 ) }
    dend_8 { pt3dadd( -22.6217, 66.5278, -60.1107, 0.22 ) }
    dend_8 { pt3dadd( -28.2899, 61.5875, -66.5005, 0.22 ) }
    dend_8 { pt3dadd( -35.6535, 56.5067, -70.6444, 0.22 ) }
    dend_8 { pt3dadd( -42.1167, 50.457, -74.8487, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -12.2639, 73.824, -42.9627, 0.59 ) }
    dend_7 { pt3dadd( -12.027, 74.9993, -42.4305, 0.59 ) }
    dend_7 { pt3dadd( -11.8254, 76.3521, -41.9101, 0.59 ) }
    dend_7 { pt3dadd( -11.6914, 77.4735, -41.6473, 0.66 ) }
    dend_7 { pt3dadd( -11.6321, 78.3369, -41.542, 0.81 ) }
    dend_7 { pt3dadd( -11.6072, 79.6072, -41.5407, 0.52 ) }
    dend_7 { pt3dadd( -11.648, 81.152, -41.713, 0.52 ) }
    dend_7 { pt3dadd( -11.7361, 82.1186, -42.044, 0.66 ) }
    dend_7 { pt3dadd( -11.9038, 83.5887, -42.9374, 1.03 ) }
    dend_7 { pt3dadd( -12.0627, 84.999, -44.2015, 0.37 ) }
    dend_7 { pt3dadd( -12.1351, 86.0359, -45.465, 0.37 ) }
    dend_7 { pt3dadd( -12.1387, 86.8063, -46.649, 0.59 ) }
    dend_7 { pt3dadd( -12.0679, 87.8141, -48.4182, 0.74 ) }
    dend_7 { pt3dadd( -11.9157, 88.6493, -50.016, 0.74 ) }
    dend_7 { pt3dadd( -11.6339, 89.5566, -51.8611, 0.37 ) }
    dend_7 { pt3dadd( -11.3339, 90.1994, -53.2341, 0.37 ) }
    dend_7 { pt3dadd( -11.0879, 90.5961, -54.0392, 0.37 ) }
    dend_7 { pt3dadd( -10.7998, 90.9623, -54.8008, 0.44 ) }
    dend_7 { pt3dadd( -10.2987, 91.5755, -55.9779, 0.44 ) }
    dend_7 { pt3dadd( -10.0062, 91.9352, -56.623, 0.74 ) }
    dend_7 { pt3dadd( -9.46973, 92.6097, -57.7919, 0.74 ) }
    dend_7 { pt3dadd( -8.80756, 93.3938, -59.1787, 0.15 ) }
    dend_7 { pt3dadd( -8.14838, 94.0662, -60.5572, 0.15 ) }
    dend_7 { pt3dadd( -6.26436, 102.265, -65.2439, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -4.84367, 110.819, -69.3564, 0.15 ) }
    dend_7 { pt3dadd( -4.81555, 118.446, -75.3176, 0.15 ) }
    dend_7 { pt3dadd( -5.34569, 125.435, -82.0704, 0.15 ) }
    dend_7 { pt3dadd( -6.08264, 133.195, -87.7921, 0.15 ) }
    dend_7 { pt3dadd( -6.1764, 141.243, -93.1041, 0.15 ) }
    dend_7 { pt3dadd( -4.8058, 149.372, -98.0947, 0.15 ) }
    dend_7 { pt3dadd( -3.06413, 157.91, -102.12, 0.15 ) }
    dend_7 { pt3dadd( -2.25773, 166.753, -105.682, 0.15 ) }
    dend_7 { pt3dadd( 0.6989, 175.592, -107.85, 0.15 ) }
    dend_7 { pt3dadd( 3.99334, 184.434, -109.436, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 46.9013, 211.277, -43.7516, 0.29 ) }
    dend_42 { pt3dadd( 46.6726, 211.936, -45.204, 0.29 ) }
    dend_42 { pt3dadd( 46.3525, 212.663, -47.2001, 0.29 ) }
    dend_42 { pt3dadd( 46.0982, 213.082, -48.4964, 0.29 ) }
    dend_42 { pt3dadd( 45.8528, 213.409, -49.5041, 0.29 ) }
    dend_42 { pt3dadd( 45.673, 213.636, -50.1834, 0.59 ) }
    dend_42 { pt3dadd( 45.178, 214.312, -52.0651, 0.22 ) }
    dend_42 { pt3dadd( 44.8647, 214.839, -53.3305, 0.22 ) }
    dend_42 { pt3dadd( 44.722, 215.157, -53.9749, 0.22 ) }
    dend_42 { pt3dadd( 44.5937, 215.596, -54.7757, 0.15 ) }
    dend_42 { pt3dadd( 44.7595, 216.029, -55.214, 0.15 ) }
    dend_42 { pt3dadd( 45.2, 216.593, -55.4624, 0.66 ) }
    dend_42 { pt3dadd( 46.0636, 217.531, -55.6569, 0.22 ) }
    dend_42 { pt3dadd( 46.5105, 217.99, -55.7237, 0.22 ) }
    dend_42 { pt3dadd( 46.9456, 218.373, -55.7762, 0.44 ) }
    dend_42 { pt3dadd( 48.2177, 219.281, -55.8824, 0.29 ) }
    dend_42 { pt3dadd( 50.6957, 224.778, -63.6526, 0.29 ) }
    dend_42 { pt3dadd( 52.1722, 230.466, -71.5248, 0.29 ) }
    dend_42 { pt3dadd( 52.7535, 236.294, -79.4012, 0.29 ) }
    dend_42 { pt3dadd( 52.8001, 243.078, -86.401, 0.29 ) }
    dend_42 { pt3dadd( 53.3032, 249.575, -93.6795, 0.29 ) }
    dend_42 { pt3dadd( 51.9409, 254.819, -101.906, 0.29 ) }
    dend_42 { pt3dadd( 49.5233, 259.112, -110.493, 0.29 ) }
    dend_42 { pt3dadd( 46.3486, 264.119, -118.376, 0.29 ) }
    dend_42 { pt3dadd( 44.6258, 269.255, -126.61, 0.29 ) }
    dend_42 { pt3dadd( 42.7087, 275.283, -134.097, 0.29 ) }
    dend_42 { pt3dadd( 41.7984, 281.991, -141.12, 0.29 ) }
    dend_42 { pt3dadd( 42.467, 287.991, -148.844, 0.29 ) }
    dend_42 { pt3dadd( 45.4228, 293.443, -156.482, 0.29 ) }
    dend_42 { pt3dadd( 48.4396, 297.262, -165.127, 0.29 ) }
    dend_42 { pt3dadd( 52.2869, 299.961, -173.909, 0.29 ) }
    dend_42 { pt3dadd( 55.7858, 300.96, -183.218, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 46.9013, 211.277, -43.7516, 0.74 ) }
    dend_41 { pt3dadd( 46.5293, 211.732, -43.5274, 0.74 ) }
    dend_41 { pt3dadd( 44.739, 213.759, -42.6327, 0.29 ) }
    dend_41 { pt3dadd( 44.0933, 214.425, -42.3588, 0.29 ) }
    dend_41 { pt3dadd( 43.0471, 215.42, -41.9793, 0.52 ) }
    dend_41 { pt3dadd( 42.3117, 216.072, -41.761, 0.29 ) }
    dend_41 { pt3dadd( 41.345, 216.892, -41.58, 0.37 ) }
    dend_41 { pt3dadd( 40.5068, 217.555, -41.5402, 0.59 ) }
    dend_41 { pt3dadd( 39.8608, 218.025, -41.5648, 0.44 ) }
    dend_41 { pt3dadd( 39.1314, 218.574, -41.5643, 0.88 ) }
    dend_41 { pt3dadd( 37.7919, 219.691, -41.4478, 0.37 ) }
    dend_41 { pt3dadd( 36.4879, 220.93, -41.172, 0.66 ) }
    dend_41 { pt3dadd( 35.7519, 221.756, -40.9205, 0.29 ) }
    dend_41 { pt3dadd( 34.9745, 222.814, -40.5545, 0.22 ) }
    dend_41 { pt3dadd( 34.1753, 224.123, -40.0711, 0.74 ) }
    dend_41 { pt3dadd( 33.4072, 225.638, -39.4827, 0.29 ) }
    dend_41 { pt3dadd( 33.0221, 226.579, -39.1077, 0.22 ) }
    dend_41 { pt3dadd( 32.7482, 227.356, -38.802, 0.88 ) }
    dend_41 { pt3dadd( 32.4315, 228.357, -38.5023, 0.88 ) }
    dend_41 { pt3dadd( 32.1989, 229.165, -38.3635, 0.22 ) }
    dend_41 { pt3dadd( 31.9753, 229.999, -38.3102, 0.22 ) }
    dend_41 { pt3dadd( 31.7437, 230.973, -38.3102, 0.15 ) }
    dend_41 { pt3dadd( 31.6267, 231.56, -38.3102, 0.66 ) }
    dend_41 { pt3dadd( 31.5304, 232.183, -38.3102, 0.22 ) }
    dend_41 { pt3dadd( 31.4124, 233.111, -38.3135, 0.15 ) }
    dend_41 { pt3dadd( 31.3774, 233.595, -38.3241, 0.15 ) }
    dend_41 { pt3dadd( 31.3753, 234.364, -38.3992, 0.44 ) }
    dend_41 { pt3dadd( 31.447, 235.408, -38.6003, 0.44 ) }
    dend_41 { pt3dadd( 31.5686, 236.559, -38.9929, 0.22 ) }
    dend_41 { pt3dadd( 31.6537, 237.186, -39.3236, 0.22 ) }
    dend_41 { pt3dadd( 31.7839, 237.985, -39.9065, 0.52 ) }
    dend_41 { pt3dadd( 31.9573, 238.954, -40.8105, 0.52 ) }
    dend_41 { pt3dadd( 32.0845, 239.56, -41.4996, 0.22 ) }
    dend_41 { pt3dadd( 32.343, 240.623, -42.8249, 0.22 ) }
    dend_41 { pt3dadd( 32.5506, 241.434, -43.8923, 0.22 ) }
    dend_41 { pt3dadd( 32.7027, 242.054, -44.7358, 0.22 ) }
    dend_41 { pt3dadd( 32.8563, 242.777, -45.7242, 0.22 ) }
    dend_41 { pt3dadd( 33.0787, 243.848, -47.1226, 0.22 ) }
    dend_41 { pt3dadd( 33.2677, 244.638, -48.1528, 0.66 ) }
    dend_41 { pt3dadd( 33.4304, 245.142, -48.7699, 0.37 ) }
    dend_41 { pt3dadd( 31.7117, 254.285, -50.8726, 0.37 ) }
    dend_41 { pt3dadd( 31.0203, 263.659, -52.3385, 0.37 ) }
    dend_41 { pt3dadd( 28.4715, 272.842, -52.0674, 0.37 ) }
    dend_41 { pt3dadd( 26.631, 282.104, -50.8206, 0.37 ) }
    dend_41 { pt3dadd( 24.3838, 291.359, -51.0097, 0.37 ) }
    dend_41 { pt3dadd( 23.7285, 300.805, -51.8564, 0.37 ) }
    dend_41 { pt3dadd( 24.7065, 310.258, -52.0086, 0.37 ) }
    dend_41 { pt3dadd( 25.9455, 319.606, -50.7272, 0.37 ) }
    dend_41 { pt3dadd( 28.8267, 328.391, -48.2394, 0.37 ) }
    dend_41 { pt3dadd( 33.2159, 336.844, -46.987, 0.37 ) }
    dend_41 { pt3dadd( 38.2085, 345.066, -47.3922, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -50.711, 38.7819, -35.9244, 0.52 ) }
    dend_19 { pt3dadd( -52.2517, 39.3448, -36.2109, 0.52 ) }
    dend_19 { pt3dadd( -52.8691, 39.5765, -36.343, 0.66 ) }
    dend_19 { pt3dadd( -53.8463, 39.9339, -36.5498, 0.88 ) }
    dend_19 { pt3dadd( -55.3133, 40.4486, -36.8493, 0.74 ) }
    dend_19 { pt3dadd( -56.6266, 40.8717, -37.0892, 0.52 ) }
    dend_19 { pt3dadd( -57.729, 41.2005, -37.2734, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -59.3884, 41.648, -37.5783, 0.74 ) }
    dend_19 { pt3dadd( -60.3176, 41.8722, -37.7364, 0.74 ) }
    dend_19 { pt3dadd( -61.6367, 42.138, -37.9112, 0.66 ) }
    dend_19 { pt3dadd( -63.098, 42.3493, -38.0611, 0.37 ) }
    dend_19 { pt3dadd( -63.7562, 42.4092, -38.1222, 0.37 ) }
    dend_19 { pt3dadd( -64.4245, 42.4359, -38.2021, 0.88 ) }
    dend_19 { pt3dadd( -65.4767, 42.4329, -38.3772, 0.88 ) }
    dend_19 { pt3dadd( -66.3009, 42.4218, -38.5646, 0.59 ) }
    dend_19 { pt3dadd( -67.1305, 42.3936, -38.8042, 0.59 ) }
    dend_19 { pt3dadd( -67.9884, 42.36, -39.1383, 0.59 ) }
    dend_19 { pt3dadd( -68.7139, 42.3166, -39.5262, 0.59 ) }
    dend_19 { pt3dadd( -69.4991, 42.2591, -40.0148, 0.59 ) }
    dend_19 { pt3dadd( -70.0733, 42.2043, -40.3867, 0.81 ) }
    dend_19 { pt3dadd( -70.8131, 42.1228, -40.8494, 1.03 ) }
    dend_19 { pt3dadd( -72.1402, 41.9176, -41.607, 0.52 ) }
    dend_19 { pt3dadd( -73.917, 41.572, -42.4961, 0.59 ) }
    dend_19 { pt3dadd( -75.0674, 41.2734, -43.0087, 0.59 ) }
    dend_19 { pt3dadd( -76.0266, 40.947, -43.3659, 0.59 ) }
    dend_19 { pt3dadd( -77.327, 40.3741, -43.759, 0.59 ) }
    dend_19 { pt3dadd( -78.2182, 39.8676, -43.9307, 0.59 ) }
    dend_19 { pt3dadd( -79.2454, 39.1345, -43.9732, 0.52 ) }
    dend_19 { pt3dadd( -79.9173, 38.5666, -43.9185, 0.59 ) }
    dend_19 { pt3dadd( -80.6405, 37.8644, -43.84, 0.52 ) }
    dend_19 { pt3dadd( -81.3132, 37.1737, -43.7729, 0.37 ) }
    dend_19 { pt3dadd( -82.2071, 36.2446, -43.7162, 0.66 ) }
    dend_19 { pt3dadd( -82.7852, 35.6826, -43.7017, 0.66 ) }
    dend_19 { pt3dadd( -83.3667, 35.1889, -43.7203, 0.88 ) }
    dend_19 { pt3dadd( -84.1052, 34.6594, -43.7712, 0.88 ) }
    dend_19 { pt3dadd( -85.4421, 33.8082, -43.9542, 0.52 ) }
    dend_19 { pt3dadd( -86.227, 33.3606, -44.1426, 0.52 ) }
    dend_19 { pt3dadd( -86.759, 33.0998, -44.3369, 0.66 ) }
    dend_19 { pt3dadd( -88.1123, 32.5446, -45.0016, 0.44 ) }
    dend_19 { pt3dadd( -88.7607, 32.3431, -45.3974, 0.59 ) }
    dend_19 { pt3dadd( -89.6381, 32.1655, -46.0088, 0.66 ) }
    dend_19 { pt3dadd( -91.0946, 32.05, -47.1249, 0.66 ) }
    dend_19 { pt3dadd( -92.0748, 32.0596, -47.9244, 0.88 ) }
    dend_19 { pt3dadd( -92.8392, 32.1254, -48.5651, 0.88 ) }
    dend_19 { pt3dadd( -93.6158, 32.2339, -49.215, 0.81 ) }
    dend_19 { pt3dadd( -94.335, 32.3564, -49.7617, 1.11 ) }
    dend_19 { pt3dadd( -95.3527, 32.5444, -50.3888, 0.52 ) }
    dend_19 { pt3dadd( -96.6929, 32.8006, -51.0761, 0.52 ) }
    dend_19 { pt3dadd( -98.1855, 33.0876, -51.7223, 0.29 ) }
    dend_19 { pt3dadd( -98.6559, 33.1762, -51.8961, 0.29 ) }
    dend_19 { pt3dadd( -99.6968, 33.3494, -52.2674, 0.59 ) }
    dend_19 { pt3dadd( -101.055, 33.5184, -52.8444, 0.29 ) }
    dend_19 { pt3dadd( -102.827, 33.6864, -53.8095, 0.37 ) }
    dend_19 { pt3dadd( -103.965, 33.7562, -54.5255, 0.37 ) }
    dend_19 { pt3dadd( -104.821, 33.7855, -55.127, 0.37 ) }
    dend_19 { pt3dadd( -106.296, 33.8167, -56.2706, 0.44 ) }
    dend_19 { pt3dadd( -108.147, 33.8105, -57.9085, 0.96 ) }
    dend_19 { pt3dadd( -109.863, 33.7426, -59.6664, 0.44 ) }
    dend_19 { pt3dadd( -110.548, 33.6826, -60.4644, 0.52 ) }
    dend_19 { pt3dadd( -111.346, 33.6048, -61.5461, 0.52 ) }
    dend_19 { pt3dadd( -120.11, 32.3197, -66.1669, 0.52 ) }
    dend_19 { pt3dadd( -129.213, 31.5804, -70.234, 0.52 ) }
    dend_19 { pt3dadd( -138.561, 29.7402, -73.2106, 0.52 ) }
    dend_19 { pt3dadd( -147.989, 26.6634, -74.0027, 0.52 ) }
    dend_19 { pt3dadd( -157.069, 22.7188, -73.451, 0.52 ) }
    dend_19 { pt3dadd( -166.735, 20.2831, -73.5224, 0.52 ) }
    dend_19 { pt3dadd( -175.713, 16.2167, -74.5583, 0.52 ) }
    dend_19 { pt3dadd( -184.971, 13.1067, -76.4486, 0.52 ) }
    dend_19 { pt3dadd( -194.142, 10.7982, -79.6086, 0.52 ) }
    dend_19 { pt3dadd( -202.858, 9.10738, -84.1759, 0.52 ) }
    dend_19 { pt3dadd( -211.431, 6.83455, -88.7343, 0.52 ) }
    dend_19 { pt3dadd( -219.589, 4.8983, -94.1459, 0.52 ) }
    dend_19 { pt3dadd( -227.996, 2.8457, -99.1112, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -50.711, 38.7819, -35.9244, 0.29 ) }
    dend_14 { pt3dadd( -51.99, 38.9147, -36.9774, 0.29 ) }
    dend_14 { pt3dadd( -53.4885, 39.0263, -38.1356, 0.44 ) }
    dend_14 { pt3dadd( -54.1159, 39.0698, -38.5715, 0.44 ) }
    dend_14 { pt3dadd( -55.124, 39.1502, -39.1933, 0.29 ) }
    dend_14 { pt3dadd( -56.1728, 39.2508, -39.771, 0.29 ) }
    dend_14 { pt3dadd( -57.2249, 39.3656, -40.295, 0.59 ) }
    dend_14 { pt3dadd( -57.9749, 39.4808, -40.5406, 0.81 ) }
    dend_14 { pt3dadd( -58.9224, 39.6275, -40.7608, 0.59 ) }
    dend_14 { pt3dadd( -59.8271, 39.7483, -40.9786, 0.44 ) }
    dend_14 { pt3dadd( -60.578, 39.8313, -41.1918, 0.74 ) }
    dend_14 { pt3dadd( -61.149, 39.8999, -41.3904, 1.03 ) }
    dend_14 { pt3dadd( -62.2705, 40.0427, -41.8857, 0.29 ) }
    dend_14 { pt3dadd( -63.5105, 40.1574, -42.5846, 0.29 ) }
    dend_14 { pt3dadd( -64.7932, 40.1666, -43.4717, 0.96 ) }
    dend_14 { pt3dadd( -66.0883, 40.0263, -44.5184, 0.66 ) }
    dend_14 { pt3dadd( -67.002, 39.8007, -45.346, 0.74 ) }
    dend_14 { pt3dadd( -67.8454, 39.5458, -46.1762, 0.81 ) }
    dend_14 { pt3dadd( -68.6119, 39.2523, -47.0111, 0.52 ) }
    dend_14 { pt3dadd( -69.582, 38.7729, -48.1035, 0.52 ) }
    dend_14 { pt3dadd( -70.3471, 38.2392, -49.0079, 0.44 ) }
    dend_14 { pt3dadd( -70.9403, 37.6519, -49.7139, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -227.996, 2.8457, -99.1112, 0.66 ) }
    dend_21 { pt3dadd( -235.131, -3.59823, -100.868, 0.66 ) }
    dend_21 { pt3dadd( -241.25, -10.9198, -102.647, 0.66 ) }
    dend_21 { pt3dadd( -247.17, -18.3914, -104.407, 0.66 ) }
    dend_21 { pt3dadd( -253.806, -25.4865, -104.831, 0.66 ) }
    dend_21 { pt3dadd( -259.645, -33.1985, -104.76, 0.66 ) }
    dend_21 { pt3dadd( -265.224, -41.04, -105.622, 0.66 ) }
    dend_21 { pt3dadd( -270.349, -48.9347, -107.784, 0.66 ) }
    dend_21 { pt3dadd( -274.933, -57.1536, -109.82, 0.66 ) }
    dend_21 { pt3dadd( -279.348, -65.5434, -111.405, 0.66 ) }
    dend_21 { pt3dadd( -283.17, -74.2592, -112.509, 0.66 ) }
    dend_21 { pt3dadd( -286.317, -83.2749, -112.321, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -289.009, -92.4233, -112.198, 0.66 ) }
    dend_21 { pt3dadd( -293.775, -100.769, -112.529, 0.66 ) }
    dend_21 { pt3dadd( -298.13, -109.299, -113.166, 0.66 ) }
    dend_21 { pt3dadd( -302.948, -117.293, -115.613, 0.66 ) }
    dend_21 { pt3dadd( -308.115, -125.083, -118.075, 0.66 ) }
    dend_21 { pt3dadd( -313.924, -131.602, -122.453, 0.66 ) }
    dend_21 { pt3dadd( -319.197, -137.794, -127.904, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -227.996, 2.8457, -99.1112, 0.15 ) }
    dend_20 { pt3dadd( -236.453, 6.36827, -102.949, 0.66 ) }
    dend_20 { pt3dadd( -244.463, 11.3101, -105.913, 0.66 ) }
    dend_20 { pt3dadd( -252.622, 16.1386, -108.67, 0.66 ) }
    dend_20 { pt3dadd( -260.24, 21.9482, -110.807, 0.66 ) }
    dend_20 { pt3dadd( -267.909, 27.4723, -113.524, 0.66 ) }
    dend_20 { pt3dadd( -274.375, 33.6168, -117.567, 0.66 ) }
    dend_20 { pt3dadd( -281.057, 39.2598, -122.047, 0.66 ) }
    dend_20 { pt3dadd( -287.223, 45.5993, -126.224, 0.66 ) }
    dend_20 { pt3dadd( -294.449, 50.4811, -130.848, 0.66 ) }
    dend_20 { pt3dadd( -301.093, 54.8243, -136.76, 0.66 ) }
    dend_20 { pt3dadd( -306.319, 59.7883, -143.497, 0.66 ) }
    dend_20 { pt3dadd( -312.758, 63.3339, -150.176, 0.66 ) }
    dend_20 { pt3dadd( -317.91, 67.8381, -157.316, 0.66 ) }
    dend_20 { pt3dadd( -322.137, 73.5512, -164.096, 0.66 ) }
    dend_20 { pt3dadd( -324.978, 79.889, -170.982, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -70.9403, 37.6519, -49.7139, 0.66 ) }
    dend_16 { pt3dadd( -71.2102, 36.5282, -50.4628, 0.66 ) }
    dend_16 { pt3dadd( -71.4319, 35.6707, -51.1899, 0.59 ) }
    dend_16 { pt3dadd( -71.6506, 35.0823, -51.8088, 0.29 ) }
    dend_16 { pt3dadd( -72.0799, 34.2697, -52.7587, 0.29 ) }
    dend_16 { pt3dadd( -72.2904, 33.9573, -53.1911, 0.44 ) }
    dend_16 { pt3dadd( -72.929, 33.2181, -54.4579, 0.59 ) }
    dend_16 { pt3dadd( -73.4546, 32.7397, -55.4303, 0.59 ) }
    dend_16 { pt3dadd( -74.0743, 32.2897, -56.5784, 0.59 ) }
    dend_16 { pt3dadd( -74.5452, 32.0102, -57.4533, 0.66 ) }
    dend_16 { pt3dadd( -75.3117, 31.638, -58.8464, 0.66 ) }
    dend_16 { pt3dadd( -76.2962, 31.2668, -60.6063, 0.22 ) }
    dend_16 { pt3dadd( -79.7052, 27.3784, -69.0696, 0.22 ) }
    dend_16 { pt3dadd( -83.3438, 23.4825, -77.4327, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -70.9403, 37.6519, -49.7139, 0.15 ) }
    dend_15 { pt3dadd( -71.8286, 37.887, -49.5531, 0.15 ) }
    dend_15 { pt3dadd( -72.7182, 38.051, -49.3845, 0.22 ) }
    dend_15 { pt3dadd( -73.6589, 38.0964, -49.2139, 0.37 ) }
    dend_15 { pt3dadd( -74.5732, 38.0573, -49.0695, 0.52 ) }
    dend_15 { pt3dadd( -75.8156, 37.8957, -48.8624, 0.22 ) }
    dend_15 { pt3dadd( -76.5476, 37.7662, -48.7276, 0.22 ) }
    dend_15 { pt3dadd( -77.0879, 37.6417, -48.5815, 0.22 ) }
    dend_15 { pt3dadd( -78.2736, 37.2937, -48.1867, 0.29 ) }
    dend_15 { pt3dadd( -78.9541, 37.0609, -47.9339, 0.22 ) }
    dend_15 { pt3dadd( -79.9702, 36.7266, -47.621, 0.29 ) }
    dend_15 { pt3dadd( -81.0186, 36.4419, -47.381, 0.15 ) }
    dend_15 { pt3dadd( -82.3494, 36.1778, -47.1329, 0.15 ) }
    dend_15 { pt3dadd( -82.8711, 36.1146, -47.0613, 0.44 ) }
    dend_15 { pt3dadd( -83.5253, 36.0785, -47.0084, 0.44 ) }
    dend_15 { pt3dadd( -85.3766, 36.0585, -46.9718, 0.22 ) }
    dend_15 { pt3dadd( -86.2655, 36.092, -46.9714, 0.22 ) }
    dend_15 { pt3dadd( -86.9494, 36.1493, -46.9665, 0.52 ) }
    dend_15 { pt3dadd( -87.7643, 36.2623, -46.9861, 0.52 ) }
    dend_15 { pt3dadd( -88.712, 36.4263, -46.9757, 0.22 ) }
    dend_15 { pt3dadd( -89.432, 36.5867, -46.9147, 0.44 ) }
    dend_15 { pt3dadd( -90.7418, 36.949, -46.602, 0.44 ) }
    dend_15 { pt3dadd( -91.6337, 37.2689, -46.3477, 0.74 ) }
    dend_15 { pt3dadd( -92.6368, 37.7254, -45.9907, 0.88 ) }
    dend_15 { pt3dadd( -102.24, 37.327, -43.2327, 0.88 ) }
    dend_15 { pt3dadd( -111.72, 35.9664, -40.3902, 0.88 ) }
    dend_15 { pt3dadd( -121.657, 35.636, -39.3313, 0.88 ) }
    dend_15 { pt3dadd( -131.605, 36.2755, -40.1018, 0.88 ) }
    dend_15 { pt3dadd( -141.398, 36.8897, -42.0185, 0.88 ) }
    dend_15 { pt3dadd( -151.138, 38.4697, -43.5553, 0.88 ) }
    dend_15 { pt3dadd( -160.276, 40.9708, -46.6506, 0.88 ) }
    dend_15 { pt3dadd( -169.093, 41.857, -51.2753, 0.88 ) }
    dend_15 { pt3dadd( -177.885, 43.9321, -55.5102, 0.88 ) }
    dend_15 { pt3dadd( -187.704, 44.457, -57.321, 0.88 ) }
    dend_15 { pt3dadd( -197.665, 43.6355, -57.467, 0.88 ) }
    dend_15 { pt3dadd( -207.094, 41.1815, -59.5688, 0.88 ) }
    dend_15 { pt3dadd( -216.027, 38.6953, -63.225, 0.88 ) }
    dend_15 { pt3dadd( -225.68, 37.8133, -65.6632, 0.88 ) }
    dend_15 { pt3dadd( -235.296, 37.2163, -68.3347, 0.88 ) }
    dend_15 { pt3dadd( -245.201, 36.8086, -69.6447, 0.88 ) }
    dend_15 { pt3dadd( -255.197, 36.5917, -69.7642, 0.88 ) }
    dend_15 { pt3dadd( -264.947, 34.6469, -68.8995, 0.88 ) }
    dend_15 { pt3dadd( -274.623, 33.7325, -66.565, 0.88 ) }
    dend_15 { pt3dadd( -283.665, 34.2254, -62.3253, 0.88 ) }
    dend_15 { pt3dadd( -292.159, 33.4886, -57.105, 0.88 ) }
    dend_15 { pt3dadd( -299.625, 31.1878, -50.9092, 0.88 ) }
    dend_15 { pt3dadd( -306.275, 28.0383, -44.2168, 0.88 ) }
    dend_15 { pt3dadd( -313.725, 23.7543, -39.3011, 0.88 ) }
    dend_15 { pt3dadd( -320.337, 18.6952, -34.0163, 0.88 ) }
    dend_15 { pt3dadd( -325.335, 12.5606, -28.2442, 0.88 ) }
    dend_15 { pt3dadd( -329.23, 5.43126, -22.9043, 0.88 ) }
    dend_15 { pt3dadd( -331.515, -2.45484, -17.8184, 0.88 ) }
    dend_15 { pt3dadd( -332.493, -11.344, -14.4287, 0.88 ) }
    dend_15 { pt3dadd( -334.055, -19.6596, -9.85253, 0.88 ) }
    dend_15 { pt3dadd( -336.796, -27.6266, -5.1452, 0.88 ) }
    dend_15 { pt3dadd( -339.327, -35.4646, -0.0933785, 0.88 ) }
    dend_15 { pt3dadd( -341.14, -43.9435, 4.0365, 0.88 ) }
    dend_15 { pt3dadd( -342.221, -52.172, 8.91587, 0.88 ) }
    dend_15 { pt3dadd( -343.704, -60.4374, 13.6174, 0.88 ) }
    dend_15 { pt3dadd( -344.806, -68.8029, 18.2263, 0.88 ) }
    dend_15 { pt3dadd( -347.321, -76.1885, 23.9913, 0.88 ) }
    dend_15 { pt3dadd( -349.097, -83.9337, 29.5027, 0.88 ) }
    dend_15 { pt3dadd( -351.989, -90.5753, 36.042, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -355.955, -97.7804, 41.2137, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -83.3438, 23.4825, -77.4327, 0.22 ) }
    dend_18 { pt3dadd( -87.6243, 18.9663, -85.1189, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -83.3438, 23.4825, -77.4327, 0.22 ) }
    dend_17 { pt3dadd( -86.3813, 19.6464, -86.0622, 0.22 ) }
    dend_17 { pt3dadd( -91.1222, 15.1231, -93.4685, 0.22 ) }
    dend_17 { pt3dadd( -94.6814, 11.4478, -101.975, 0.22 ) }
    dend_17 { pt3dadd( -97.7989, 6.90217, -110.184, 0.22 ) }
    dend_17 { pt3dadd( -99.2538, 3.67317, -119.476, 0.22 ) }
    dend_17 { pt3dadd( -100.688, -0.868438, -128.141, 0.22 ) }
    dend_17 { pt3dadd( -100.625, -5.58822, -136.819, 0.22 ) }
    dend_17 { pt3dadd( -102.001, -11.5709, -144.464, 0.22 ) }
    dend_17 { pt3dadd( -103.652, -16.619, -152.773, 0.22 ) }
    dend_17 { pt3dadd( -106.845, -21.3361, -160.845, 0.22 ) }
    dend_17 { pt3dadd( -109.992, -26.7085, -168.468, 0.22 ) }
    dend_17 { pt3dadd( -113.968, -32.5177, -175.309, 0.22 ) }
    dend_17 { pt3dadd( -118.681, -38.058, -181.925, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_1 nseg = 3
    dend_35 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 5
    dend_5 nseg = 3
    dend_2 nseg = 15
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 7
    dend_33 nseg = 19
    dend_29 nseg = 3
    dend_28 nseg = 13
    dend_22 nseg = 3
    dend_11 nseg = 3
    dend_9 nseg = 7
    dend_43 nseg = 11
    dend_40 nseg = 11
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_24 nseg = 9
    dend_12 nseg = 9
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_42 nseg = 9
    dend_41 nseg = 7
    dend_19 nseg = 11
    dend_21 nseg = 9
    dend_20 nseg = 7
    dend_15 nseg = 21
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_DBC_2005a958c4_0_0


