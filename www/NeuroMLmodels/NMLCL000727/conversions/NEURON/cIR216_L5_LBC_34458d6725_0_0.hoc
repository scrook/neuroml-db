// Cell: cIR216_L5_LBC_34458d6725_0_0
/*
{
  "id" : "cIR216_L5_LBC_34458d6725_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.93122, -0.108136, -2.1881, 2.35771", "-7.89726, -0.148004, -1.96095, 3.51454", "-6.8633, -0.187872, -1.73381, 7.55356", "-5.82934, -0.22774, -1.50666, 11.3774", "-4.79538, -0.267609, -1.27951, 15.1564", "-3.76142, -0.307477, -1.05237, 15.6784", "-2.72746, -0.347345, -0.825221, 15.4329", "-1.69349, -0.387213, -0.598075, 14.6203", "-0.659532, -0.427081, -0.370928, 13.8866", "0.37443, -0.466949, -0.143782, 13.4876", "1.40839, -0.506817, 0.083365, 13.5864", "2.44235, -0.546685, 0.310511, 13.7525", "3.47631, -0.586553, 0.537658, 14.0168", "4.51028, -0.626421, 0.764805, 14.3455", "5.54424, -0.666289, 0.991951, 14.6782", "6.5782, -0.706157, 1.2191, 14.6165", "7.61216, -0.746025, 1.44624, 14.0887", "8.64612, -0.785894, 1.67339, 12.6993", "9.68008, -0.825762, 1.90054, 11.5417", "10.714, -0.86563, 2.12768, 8.06658", "11.748, -0.905498, 2.35483, 4.43739" ]
  }, {
    "name" : "dend_138",
    "id" : "dend_138",
    "points3d" : [ "-4.28724, -7.58485, -3.86671, 3.24", "-4.28724, -7.58485, -3.86671, 3.24", "-4.9768, -9.27906, -3.86671, 3.09", "-5.57601, -10.7513, -3.86671, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "6.47276, -8.15185, 0.203286, 1.25", "6.47276, -8.15185, 0.203286, 1.25", "6.77902, -9.41213, 0.264367, 1.25", "6.7952, -9.48671, 0.26755, 1.25", "7.01242, -10.5326, 0.309986, 0.96", "7.18941, -11.5797, 0.410775, 0.96", "7.25946, -12.1278, 0.480667, 1.33", "7.31471, -13.08, 0.679026, 0.81", "7.2733, -14.0007, 0.953285, 0.81", "7.26595, -14.0724, 0.977842, 0.81", "7.07883, -15.3129, 1.47495, 1.18", "6.94257, -16.1137, 1.81947, 1.18", "6.72354, -17.5671, 2.45661, 0.81", "6.54, -19.1949, 3.16285, 0.81", "6.52974, -19.428, 3.2549, 0.81", "6.59773, -20.5365, 3.70873, 0.81", "6.68713, -21.044, 3.91044, 1.4", "6.905, -21.8515, 4.26713, 1.4", "7.21378, -22.7413, 4.73052, 0.66", "7.48612, -23.6108, 5.21275, 0.59", "7.93257, -25.3331, 6.20152, 0.59", "8.0469, -26.0708, 6.64297, 0.81", "8.08722, -27.1726, 7.33043, 0.88", "7.95915, -28.9474, 8.46605, 0.88", "7.66945, -30.5179, 9.44834, 0.88", "7.65069, -30.5816, 9.48426, 0.88", "6.95487, -32.3777, 10.3211, 0.88", "6.58807, -33.2223, 10.6905, 1.18", "6.56364, -33.2785, 10.7117, 1.18", "6.22592, -34.091, 10.9937, 1.18", "5.58001, -35.8344, 11.62, 0.74", "4.96016, -37.8162, 12.2826, 0.74", "4.92156, -37.9676, 12.3289, 0.74", "4.48478, -40.2498, 13.0582, 0.74", "4.35138, -41.2251, 13.3847, 1.11", "4.34453, -41.2967, 13.4096, 1.11", "4.29937, -42.5157, 13.8436, 1.11", "4.30212, -42.5977, 13.8726, 1.11", "4.40974, -44.5389, 14.5773, 1.11", "4.52756, -45.4728, 14.9339, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "10.5927, -6.78685, 2.26329, 0.88", "10.9216, -7.04423, 2.21352, 0.88", "10.9791, -7.09667, 2.22933, 0.88", "11.9028, -7.99166, 2.65913, 0.88", "12.2947, -8.47052, 3.00867, 0.88", "12.8482, -9.37842, 3.9841, 0.88", "13.5974, -10.8269, 5.76664, 0.88", "14.3485, -12.7414, 8.72401, 0.88", "14.3582, -12.7743, 8.78204, 0.88", "14.5519, -14.0682, 11.1962, 0.88", "14.598, -15.4999, 13.8062, 0.88", "14.5962, -15.5348, 13.8639, 0.88", "14.3744, -17.4645, 16.7391, 1.55", "14.3689, -17.5235, 16.8077, 1.55", "14.2875, -18.6566, 17.9474, 1.03", "14.2684, -21.1589, 20.0514, 0.81", "14.3978, -22.9428, 21.4422, 0.81", "14.4114, -23.0505, 21.5263, 0.81", "14.9516, -25.413, 23.339, 1.03", "14.9749, -25.4718, 23.3877, 1.03", "16.2933, -27.3699, 25.1499, 0.88", "17.735, -28.6596, 26.4489, 0.88", "17.7998, -28.6996, 26.4963, 0.88", "19.2321, -29.436, 27.3894, 1.47", "20.4455, -30.0023, 28.0147, 0.81", "21.4205, -30.5176, 28.4849, 0.74", "21.5185, -30.5691, 28.5287, 0.74", "23.9374, -31.9467, 29.6337, 0.74", "24.0325, -32.0024, 29.6793, 0.74", "26.7849, -33.7313, 31.1169, 0.74", "28.8211, -35.0128, 32.2334, 0.74", "30.3324, -35.9737, 33.0767, 0.74", "30.4307, -36.0347, 33.129, 0.74", "30.9347, -36.3296, 33.3606, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "8.06276, 6.24365, 1.63329, 1.47", "8.19656, 6.51674, 1.68421, 1.47", "8.52147, 7.16543, 1.77414, 1.47", "8.88331, 7.87985, 1.86046, 1.47", "9.35028, 8.8738, 1.94706, 1.47", "9.81441, 9.89581, 2.02047, 1.47", "10.3621, 11.134, 2.09018, 1.47", "10.832, 12.189, 2.13073, 1.47", "10.8674, 12.2687, 2.12956, 1.47", "11.5958, 13.9543, 2.06289, 1.47", "11.6463, 14.0764, 2.0538, 1.47", "12.0743, 15.1729, 1.90981, 1.69", "12.5109, 16.362, 1.7427, 1.69", "12.8275, 17.2203, 1.62336, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.74724, -0.927858, 0.133286, 3.02", "-8.74724, -0.927858, 0.133286, 3.02", "-10.7433, -0.797275, 0.321635, 2.43", "-10.8263, -0.791842, 0.329472, 2.43", "-12.5406, -0.679687, 0.491241, 2.28", "-12.6029, -0.675612, 0.497119, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.27724, 7.86065, -0.796714, 2.5", "-3.27724, 7.86065, -0.796714, 2.5", "-3.30966, 9.27896, -0.307335, 2.06", "-3.34494, 11.066, 0.495826, 1.84", "-3.34692, 11.1667, 0.541086, 1.84", "-3.38232, 12.9598, 1.34694, 1.84", "-3.42118, 14.9285, 2.23172, 2.06", "-3.4661, 18.5862, 4.11233, 1.55", "-3.46189, 19.6005, 4.78362, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.0527, -0.518358, 2.38329, 1.84", "11.0527, -0.518358, 2.38329, 1.84", "11.9209, -0.698452, 3.22731, 1.62", "12.9452, -0.947627, 4.23017, 1.84", "12.9893, -0.963, 4.26987, 1.84", "14.3419, -1.61889, 5.37083, 1.69", "16.2017, -2.84682, 6.66779, 1.33", "16.8971, -3.41144, 7.13936, 1.33", "16.9366, -3.45226, 7.16496, 1.33", "18.0783, -4.88827, 7.84766, 1.33", "19.1094, -6.37551, 8.46241, 1.33", "20.6229, -8.77736, 9.25019, 1.33", "21.1601, -9.69103, 9.49226, 1.55", "22.0073, -11.1964, 9.91708, 1.4", "23.0312, -13.0799, 10.4827, 1.4", "23.4309, -13.8963, 10.7646, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.50276, 4.86815, 1.32329, 1.47", "9.56853, 4.90963, 1.30273, 1.47", "10.7388, 5.6995, 0.975975, 1.47", "12.0317, 6.6777, 0.697307, 1.25", "13.6713, 7.98277, 0.38806, 1.4", "15.0143, 9.16749, 0.174026, 1.4", "15.1927, 9.34914, 0.150525, 1.4", "16.3686, 10.737, 0.0976091, 1.4", "17.7588, 12.6072, 0.140273, 1.4", "17.8104, 12.6852, 0.147333, 1.4", "19.0726, 14.7691, 0.462398, 1.92", "20.4804, 17.3835, 0.947834, 1.92", "21.6529, 19.6307, 1.39003, 1.92", "21.6881, 19.7036, 1.40576, 1.92", "22.4565, 21.3864, 1.80113, 1.92", "22.4847, 21.4491, 1.81738, 1.92", "23.3361, 23.4626, 2.49329, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.84724, 6.42215, -2.17671, 1.11", "-4.91588, 6.45533, -2.21112, 1.11", "-6.03138, 6.9685, -2.63497, 1.11", "-6.10505, 7.00167, -2.65664, 1.11", "-7.88763, 7.79377, -3.12273, 0.96", "-8.1097, 7.88453, -3.17229, 0.96", "-9.49314, 8.41019, -3.43152, 0.96", "-10.7082, 8.84772, -3.62028, 0.96", "-11.9571, 9.30014, -3.76071, 0.96", "-12.0353, 9.32855, -3.76768, 0.96", "-13.2785, 9.77873, -3.83371, 0.96", "-14.5504, 10.2386, -3.94028, 0.96", "-14.7303, 10.3056, -3.95235, 0.96", "-16.2528, 10.8842, -4.0187, 0.96", "-17.8281, 11.4697, -4.05144, 0.96", "-17.9583, 11.5155, -4.05357, 0.96", "-19.2109, 11.9058, -4.06595, 0.96", "-20.5954, 12.2298, -4.04488, 1.25", "-22.1352, 12.4759, -4.06938, 1.25", "-23.3464, 12.5402, -4.23937, 1.03", "-24.2007, 12.5442, -4.46322, 0.88", "-25.1942, 12.546, -4.95898, 0.88", "-25.9153, 12.5628, -5.65056, 0.88", "-26.4167, 12.7165, -7.21436, 0.81", "-26.7771, 13.0872, -9.75368, 0.81", "-26.8192, 13.2195, -10.4818, 0.81", "-26.8202, 13.625, -12.3454, 0.81", "-26.7855, 13.9288, -13.4871, 0.81", "-26.6299, 15.5257, -18.406, 0.81", "-26.615, 15.7957, -19.0888, 0.81", "-26.6159, 15.8361, -19.1755, 0.81", "-26.7429, 16.5743, -20.7091, 0.66", "-26.9819, 17.072, -21.5696, 0.66", "-27.6757, 17.7974, -22.3295, 0.66", "-27.9854, 17.9823, -22.426, 0.66", "-29.037, 18.4514, -22.7572, 0.66", "-29.1137, 18.4752, -22.7797, 0.66", "-30.0673, 18.6208, -23.0137, 0.66", "-31.0594, 18.5687, -23.3452, 0.66", "-32.9014, 17.8557, -24.5046, 0.66", "-32.9509, 17.8232, -24.5637, 0.66", "-33.1844, 17.61, -24.9922, 0.66", "-33.2826, 17.514, -25.216, 0.66", "-33.5506, 17.2308, -25.9873, 0.66", "-33.9177, 16.9338, -27.9101, 0.66", "-34.1805, 16.8503, -29.6883, 0.66", "-34.2007, 16.8536, -29.8241, 0.66", "-34.2587, 16.8917, -30.2865, 0.66", "-34.2942, 16.9304, -30.5997, 0.66", "-34.8596, 17.7567, -35.4886, 0.66", "-34.877, 17.7918, -35.6653, 0.66", "-34.9285, 17.8885, -36.1649, 0.66", "-35.257, 18.374, -38.7135, 0.66", "-35.2779, 18.397, -38.8359, 0.66", "-35.5234, 18.5775, -39.6677, 0.66", "-35.5758, 18.5997, -39.711, 0.66", "-37.3903, 19.2619, -40.8086, 0.66", "-38.6395, 19.6481, -41.1226, 1.03", "-39.5215, 19.9108, -41.0559, 1.4", "-40.451, 20.1839, -40.9514, 1.77", "-41.834, 20.5951, -40.6781, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.748, -0.905498, 2.35483, 0.81", "26.7369, -1.48345, 2.35483, 0.81", "41.7257, -2.0614, 2.35483, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_139",
    "id" : "dend_139",
    "points3d" : [ "-5.57601, -10.7513, -3.86671, 1.62", "-5.81367, -10.8961, -3.96683, 1.62", "-6.77671, -11.5102, -4.37413, 1.62", "-6.82767, -11.5451, -4.39476, 1.62", "-8.17427, -12.6857, -4.91904, 1.4", "-8.20996, -12.7252, -4.94085, 1.4", "-8.61511, -13.252, -5.26533, 1.84", "-8.64235, -13.2943, -5.29362, 1.84", "-8.94659, -13.8542, -5.67708, 2.14", "-9.41282, -14.8105, -6.33045, 2.14", "-10.0771, -16.5457, -7.5026, 2.14", "-10.3686, -17.3339, -8.06214, 2.14", "-10.3963, -17.4158, -8.12582, 2.14" ],
    "parent" : "dend_138",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_135",
    "id" : "dend_135",
    "points3d" : [ "4.52756, -45.4728, 14.9339, 1.11", "4.07557, -45.6436, 14.3119, 1.11", "4.04054, -45.6568, 14.2706, 1.11", "3.56908, -45.8349, 13.7515, 1.11", "3.5319, -45.8494, 13.7126, 1.11", "2.3357, -46.4207, 12.4677, 0.37", "2.28689, -46.444, 12.4169, 0.37", "1.73057, -46.703, 11.8814, 0.22", "1.63444, -46.7407, 11.7725, 0.29", "1.58153, -46.7509, 11.6833, 0.29", "1.28778, -46.7504, 11.0867, 0.29", "-2.89303, -48.5657, 5.81581, 0.29", "-8.04333, -49.445, 1.23122, 0.29", "-13.232, -51.0537, -3.12788, 0.29", "-17.5831, -52.0996, -8.44892, 0.29" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "4.52756, -45.4728, 14.9339, 1.47", "4.72994, -46.2553, 15.2743, 1.47", "4.94033, -47.5654, 15.7438, 0.81", "4.9468, -47.6277, 15.7647, 0.81", "5.04824, -49.1019, 16.2828, 0.81", "5.05423, -49.2022, 16.3188, 0.81", "5.21237, -51.1457, 17.0564, 0.74", "5.30562, -52.7205, 17.6808, 0.74", "5.41534, -54.4234, 18.4035, 0.74", "5.50356, -55.3726, 18.8381, 0.52", "5.52251, -55.4975, 18.9004, 0.52", "5.77312, -56.6212, 19.4932, 0.52", "5.79262, -56.684, 19.5289, 0.52", "6.05445, -57.4563, 20.0081, 0.88", "6.07191, -57.5114, 20.039, 0.88", "6.29316, -58.2873, 20.3928, 0.88", "6.51919, -59.2087, 20.7597, 0.59", "6.82894, -60.5466, 21.1987, 0.59", "7.14006, -61.8677, 21.5909, 0.59", "7.26723, -62.5161, 21.7512, 0.59", "7.43251, -63.4732, 21.9681, 0.52", "7.43964, -63.5379, 21.9804, 0.52", "7.51927, -64.6206, 22.0843, 0.52", "7.51828, -64.8117, 22.1035, 0.37", "7.39361, -65.6763, 22.2357, 0.37", "7.36694, -65.7453, 22.2493, 0.37", "7.01565, -66.3327, 22.4045, 0.37", "6.5349, -67.0308, 22.6044, 0.37", "5.75102, -68.108, 22.9595, 0.22", "5.71539, -68.1594, 22.9776, 0.22", "5.13166, -69.0075, 23.2965, 0.22", "4.58308, -69.78, 23.6361, 0.22", "4.54327, -69.8363, 23.6636, 0.22", "3.99461, -70.6723, 24.0785, 0.22", "3.96636, -70.7287, 24.0963, 0.22", "3.67075, -71.386, 24.3068, 0.22", "3.28859, -72.4701, 24.6644, 0.22", "3.2145, -72.7224, 24.7375, 0.22", "2.96687, -73.6052, 24.9626, 0.22", "2.63602, -75.0365, 25.1791, 0.22", "2.60816, -83.8869, 28.4353, 0.22", "2.19096, -92.6996, 31.754, 0.22", "3.29734, -101.717, 34.3506, 0.22", "4.2413, -110.276, 38.1388, 0.22", "3.92475, -119.148, 41.3232, 0.22", "2.67496, -128.339, 43.1769, 0.22", "1.44506, -137.49, 45.2089, 0.22", "0.25344, -146.469, 47.8653, 0.22", "-0.502588, -154.775, 52.1614, 0.22" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "30.9347, -36.3296, 33.3606, 0.37", "31.0652, -35.7293, 33.2987, 0.37", "31.2707, -35.2092, 33.2469, 0.37", "31.2982, -35.1502, 33.2411, 0.37", "31.5486, -34.7275, 33.1846, 0.37", "31.6659, -34.5501, 33.1576, 0.37", "32.0927, -33.9045, 33.0594, 0.37", "32.5423, -33.3465, 32.9681, 0.37", "32.5864, -33.3002, 32.9597, 0.37", "33.0748, -32.8233, 32.8661, 0.37", "33.1301, -32.7764, 32.8554, 0.37", "38.7511, -25.6169, 31.2146, 0.37", "43.8429, -18.0979, 29.3238, 0.37", "48.2393, -9.91004, 28.6319, 0.37", "52.5275, -1.93758, 26.4595, 0.37", "56.0569, 6.69529, 25.7672, 0.37" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "30.9347, -36.3296, 33.3606, 0.74", "30.9465, -37.0081, 33.6113, 0.74", "30.9466, -37.0798, 33.6355, 0.74", "30.951, -39.2655, 34.3735, 0.74", "30.9554, -41.4363, 35.1064, 0.74", "30.9557, -41.5527, 35.1457, 0.74", "30.9598, -43.5895, 35.8333, 0.74", "30.9582, -43.6622, 35.8542, 0.74" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "12.8275, 17.2203, 1.62336, 1.18", "12.9273, 17.8876, 1.81476, 1.18", "13.0803, 18.8269, 2.19337, 0.96", "13.0877, 18.9064, 2.22614, 0.96", "13.0908, 19.563, 2.51777, 0.96", "12.944, 20.8622, 3.07264, 0.96", "12.9317, 20.9311, 3.10075, 0.96", "12.6749, 22.0504, 3.53308, 0.96", "12.3458, 23.2183, 3.93611, 0.96", "11.914, 24.6076, 4.33458, 0.96", "11.2962, 26.4609, 4.76443, 0.96", "11.0061, 27.2801, 4.93228, 1.25", "10.5128, 28.7861, 5.20716, 1.25", "10.0239, 30.38, 5.45088, 1.25", "9.72671, 31.5037, 5.63727, 1.25", "9.52836, 32.4279, 5.79256, 1.03", "9.3278, 33.6502, 6.02891, 0.81", "9.09189, 35.3329, 6.40144, 0.81", "9.08172, 35.4149, 6.42697, 0.81", "8.95771, 36.5546, 6.88272, 1.03", "8.84592, 37.4651, 7.35641, 1.03", "8.72828, 38.2877, 7.85112, 1.03", "8.71704, 38.3591, 7.89714, 1.03", "8.48258, 39.5155, 8.77123, 0.81", "8.3607, 40.0724, 9.20962, 0.81", "8.11758, 41.0251, 10.0223, 0.74", "8.10388, 41.0747, 10.0756, 0.74", "8.03722, 41.3112, 10.3718, 0.74" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "12.8275, 17.2203, 1.62336, 0.74", "13.5799, 16.9745, 3.13989, 0.74", "13.6175, 16.9569, 3.1989, 0.74", "13.9134, 16.8037, 3.61225, 0.74", "15.9974, 15.5014, 5.93291, 1.4", "16.6118, 15.0504, 6.6228, 1.03", "16.6552, 15.0156, 6.66957, 1.03", "17.8038, 13.9943, 7.77677, 0.74", "17.846, 13.9551, 7.82149, 0.74", "19.089, 12.8144, 9.18998, 0.74", "20.3675, 11.6889, 10.5329, 0.52", "20.8879, 11.3329, 11.2732, 0.52", "20.9228, 11.3153, 11.3338, 0.52", "21.9507, 11.1235, 13.3443, 1.11", "22.4207, 11.1351, 14.28, 1.11", "22.4947, 11.1626, 14.436, 1.11", "23.7436, 11.8065, 16.8619, 0.74", "23.7748, 11.8254, 16.9241, 0.74", "24.5446, 12.2073, 18.4402, 0.74", "24.6074, 12.2205, 18.5455, 0.74", "25.686, 12.0629, 20.1089, 0.74", "25.732, 12.0457, 20.1617, 0.74", "27.0834, 11.4225, 21.4919, 0.74", "28.1574, 10.885, 22.5147, 1.03", "29.7347, 10.0908, 23.9228, 0.81", "31.6866, 9.24848, 25.5107, 0.81", "33.2994, 8.60832, 26.6843, 0.81", "34.7098, 8.21628, 27.6807, 0.81", "34.7694, 8.2077, 27.72, 0.81", "35.8723, 8.34187, 28.4548, 0.59", "37.1296, 8.93066, 29.4101, 0.59", "37.1784, 8.96992, 29.4473, 0.59", "38.3474, 10.1142, 30.3054, 0.59", "38.4574, 10.2056, 30.369, 0.59", "38.7689, 10.4023, 30.528, 0.96", "38.8952, 10.4684, 30.5895, 0.96", "39.9108, 10.8855, 30.9769, 0.96", "40.0516, 10.9317, 31.0213, 0.96", "41.5582, 11.2062, 31.3059, 0.66", "42.5541, 11.351, 31.5059, 0.96" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-12.6029, -0.675612, 0.497119, 2.28", "-12.7217, -0.692968, 0.483849, 2.28", "-12.7605, -0.699689, 0.480653, 2.28", "-13.4601, -0.820747, 0.423076, 2.06", "-14.8236, -1.05666, 0.310872, 2.06", "-16.0111, -1.26212, 0.213155, 2.06", "-16.9823, -1.43016, 0.133232, 2.06", "-18.1234, -1.62524, 0.0448244, 2.28" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-12.6029, -0.675612, 0.497119, 0.37", "-13.0083, -0.22598, 1.29122, 0.37", "-13.2939, 0.0187568, 1.82369, 0.37", "-13.3379, 0.0492199, 1.89238, 0.37", "-13.7399, 0.383862, 2.36989, 0.37", "-13.775, 0.413086, 2.4116, 0.37", "-14.2886, 0.840557, 3.02158, 0.37", "-14.3765, 0.908279, 3.09396, 0.37", "-14.6867, 1.08685, 3.33649, 0.37", "-15.3913, 1.50678, 3.90031, 0.22", "-20.23, 4.88523, 10.4313, 0.22", "-25.3497, 7.64726, 16.9972, 0.22", "-29.788, 9.70057, 24.2537, 0.22", "-35.1158, 10.0929, 31.1077, 0.22", "-39.2731, 11.1449, 38.6963, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.46189, 19.6005, 4.78362, 1.84", "-3.16017, 22.1574, 3.98821, 1.84", "-3.03074, 23.2364, 3.72292, 1.84", "-2.98905, 23.4821, 3.65893, 1.84", "-2.69906, 24.9989, 3.25729, 1.84", "-2.67843, 25.0869, 3.23383, 1.84", "-2.21583, 26.7028, 2.79903, 1.84", "-2.19079, 26.7914, 2.78306, 1.84", "-1.64324, 28.3963, 2.45202, 1.55", "-1.6134, 28.4701, 2.43485, 1.55", "-0.98567, 29.6921, 2.08994, 1.55", "-0.473385, 30.6466, 1.78064, 1.92" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.46189, 19.6005, 4.78362, 1.25", "-3.59138, 20.5187, 5.67694, 1.25", "-3.60552, 20.5746, 5.74929, 1.25", "-3.82332, 21.2919, 6.75733, 0.81", "-4.16875, 21.9709, 7.79218, 0.81", "-4.51764, 22.3856, 8.48994, 1.18", "-4.76249, 22.5877, 8.85706, 1.18", "-6.02523, 23.3185, 10.5405, 1.03", "-6.07448, 23.3378, 10.5921, 1.03", "-7.03828, 23.59, 11.4131, 1.03", "-8.07419, 23.8016, 12.1555, 1.25", "-8.80532, 23.9431, 12.6337, 1.25", "-10.2689, 24.2446, 13.4814, 0.81", "-11.3408, 24.5069, 13.9861, 0.81", "-11.4031, 24.5296, 14.019, 0.81", "-12.3467, 25.1145, 14.5942, 0.81", "-12.7103, 25.4887, 14.8728, 0.81", "-12.7457, 25.5469, 14.906, 0.81", "-12.8635, 25.9166, 15.0795, 0.81", "-13.0172, 27.3221, 15.8511, 0.81", "-13.0179, 28.2107, 16.3902, 0.81", "-12.9478, 28.8921, 16.9118, 0.81", "-12.88, 29.3522, 17.3342, 0.81", "-12.7614, 30.1708, 18.2361, 0.81", "-12.6691, 30.8671, 19.2413, 0.81", "-12.6702, 30.8888, 19.3022, 0.81", "-12.8726, 31.0713, 20.7409, 0.81", "-12.9171, 31.0718, 20.8716, 0.81", "-13.3046, 31.0098, 21.6237, 0.81", "-13.4919, 30.9857, 21.896, 0.81", "-14.2056, 31.0059, 22.7539, 0.81", "-14.3113, 31.0375, 22.9672, 0.81", "-14.6422, 31.2034, 23.7816, 0.81", "-14.6834, 31.232, 23.9005, 0.81", "-15.0716, 31.639, 25.2793, 0.81", "-15.2032, 31.8383, 25.8565, 0.81", "-15.8032, 33.3052, 29.3117, 0.66", "-15.8497, 33.5843, 29.8687, 0.66", "-15.844, 33.8931, 30.4037, 0.66", "-15.7997, 34.2795, 30.915, 0.66", "-15.6582, 34.8246, 31.4047, 0.59", "-15.3922, 35.5658, 31.8848, 0.59", "-14.9407, 36.7043, 32.2654, 0.88", "-14.9146, 36.7606, 32.2891, 0.88", "-14.6058, 37.3815, 32.6151, 0.88", "-14.0866, 38.443, 33.2496, 0.44", "-14.0542, 38.5193, 33.3059, 0.44", "-13.9137, 38.9489, 33.6754, 0.44", "-13.7802, 39.8037, 34.4679, 0.44", "-13.7844, 39.8993, 34.5712, 0.44", "-13.8527, 40.1996, 35.0155, 0.44", "-14.1634, 40.8554, 36.1815, 0.44", "-14.2883, 41.1193, 36.7231, 0.44", "-14.3707, 41.2673, 37.0997, 0.88", "-14.4937, 41.471, 37.6613, 0.88", "-14.6478, 41.9817, 39.1467, 0.74", "-14.6409, 42.0037, 39.2071, 0.74", "-14.4069, 42.3506, 39.8459, 0.74", "-14.3862, 42.3844, 39.8975, 0.74", "-14.3252, 42.6711, 40.2728, 0.74", "-14.3292, 42.7134, 40.3227, 0.74", "-14.6531, 43.4463, 41.0901, 0.52", "-14.8359, 43.8081, 41.4741, 0.52", "-14.8569, 43.8498, 41.5202, 0.52", "-15.1755, 44.5644, 42.3284, 0.52", "-15.1922, 44.6119, 42.384, 0.52", "-15.2057, 44.787, 42.5911, 0.52", "-15.1864, 44.8319, 42.6475, 0.52", "-14.7944, 44.9924, 43.4318, 0.52", "-14.7333, 45.0051, 43.5549, 0.52", "-14.5647, 45.0179, 43.9228, 0.52", "-14.2323, 45.0227, 44.741, 0.52", "-14.0833, 45.01, 45.2069, 0.52", "-13.2674, 44.8296, 48.6718, 0.52", "-13.2484, 44.818, 48.8082, 0.52", "-13.2235, 44.7692, 49.4226, 0.52", "-13.2297, 44.766, 49.4867, 0.52", "-13.5122, 44.804, 50.3928, 0.52", "-13.6271, 44.8508, 50.5534, 0.52", "-13.8657, 44.9777, 50.6238, 0.52", "-14.0167, 45.0879, 50.6685, 0.52", "-14.4104, 45.4801, 50.813, 0.52", "-14.8799, 46.0425, 51.0045, 0.52", "-15.048, 46.2824, 51.0796, 0.52", "-15.5171, 47.0346, 51.292, 0.52", "-15.5934, 47.1684, 51.3266, 0.52", "-15.9406, 47.8372, 51.4791, 0.52", "-16.2618, 48.5161, 51.5944, 0.52", "-16.2877, 48.5775, 51.6025, 0.52", "-16.5753, 49.3717, 51.6565, 0.52", "-16.6339, 49.5754, 51.655, 0.52", "-16.8207, 50.1815, 51.6091, 0.52", "-16.9865, 50.6986, 51.5168, 0.52", "-17.0285, 50.8238, 51.4902, 0.52", "-17.1986, 51.2563, 51.3968, 0.52", "-17.2305, 51.3137, 51.3841, 0.52", "-17.6186, 51.8904, 51.2909, 0.52", "-17.6607, 51.9407, 51.2804, 0.52", "-17.9982, 52.2762, 51.2045, 0.52", "-18.268, 52.4997, 51.1279, 0.52", "-18.5829, 52.7719, 51.0436, 0.52", "-19.0379, 53.122, 50.9011, 0.52", "-19.5249, 53.4064, 50.7002, 0.52", "-19.8596, 53.5468, 50.5541, 0.52", "-20.2679, 53.6084, 50.3557, 0.52", "-24.1421, 59.2667, 56.7243, 0.52", "-28.6168, 63.1708, 63.8505, 0.52", "-33.5833, 66.6169, 70.8663, 0.52", "-39.0505, 68.0977, 78.1317, 0.52", "-44.0503, 69.9553, 85.65, 0.52", "-48.9164, 72.9052, 92.9355, 0.52", "-53.9254, 73.9654, 100.587, 0.52", "-58.4963, 74.5099, 108.555, 0.52", "-61.3305, 74.8138, 117.303, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "23.4309, -13.8963, 10.7646, 0.59", "23.4953, -15.3063, 12.4547, 0.59", "23.5037, -15.3751, 12.5153, 0.59", "23.5875, -15.9019, 12.9197, 0.59", "23.607, -15.9722, 12.9759, 0.59", "24.0196, -16.8762, 13.7081, 0.59", "24.1656, -17.0812, 13.8783, 0.59", "24.8335, -17.5043, 14.1679, 0.59", "24.9023, -17.5227, 14.1999, 0.59", "25.805, -17.6406, 14.6396, 0.59", "26.6274, -17.6985, 15.0364, 0.52", "27.4092, -17.6941, 15.399, 0.52", "28.4638, -17.6714, 15.9987, 0.52", "30.103, -17.5607, 16.9836, 0.52", "30.5964, -17.5355, 17.3036, 0.52", "31.0384, -17.5344, 17.6433, 0.52", "31.09, -17.5402, 17.7015, 0.52", "31.7062, -17.7748, 18.7405, 0.81", "40.63, -19.9366, 25.0767, 0.81", "50.2114, -23.7759, 29.3953, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "23.4309, -13.8963, 10.7646, 1.4", "24.3147, -14.902, 11.5446, 1.4", "24.3891, -14.9824, 11.6078, 1.4", "26.2113, -16.8347, 13.0778, 1.4", "26.2736, -16.8981, 13.128, 1.4", "28.3993, -19.0591, 14.843, 0.88", "28.4539, -19.1145, 14.887, 0.88", "29.4198, -20.1086, 15.8396, 0.88", "29.6365, -20.3273, 16.0819, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "23.3361, 23.4626, 2.49329, 1.25", "21.9521, 25.0041, 1.44094, 1.25", "21.625, 25.4485, 1.22924, 1.25", "21.2411, 26.0817, 0.96452, 0.66", "20.8362, 26.8041, 0.701727, 0.52", "20.6092, 27.1947, 0.546778, 0.81", "20.5353, 27.3207, 0.495239, 0.81", "20.1635, 27.9561, 0.309097, 0.81", "19.7301, 28.6667, 0.134682, 0.81", "19.0469, 29.6884, 0.00543069, 0.81", "18.4735, 30.4731, 0.00878429, 0.81", "18.4304, 30.5307, 0.0113854, 0.81", "17.9051, 31.1991, 0.107443, 0.81", "16.9487, 32.3682, 0.358405, 0.66", "16.0631, 33.4524, 0.631029, 0.52", "15.317, 34.3927, 0.883245, 0.52", "14.8022, 35.1087, 1.05643, 0.52", "14.0826, 36.2079, 1.2967, 0.52", "13.4655, 37.2606, 1.48891, 0.52", "12.7713, 38.5455, 1.62272, 0.52", "12.7343, 38.6197, 1.62386, 0.52", "12.2119, 39.7152, 1.6075, 0.52", "11.661, 40.8401, 1.52055, 0.52", "11.5591, 41.0402, 1.48053, 0.52", "11.0313, 42.0033, 1.22253, 0.52", "10.261, 43.2023, 0.796576, 0.52", "10.2015, 43.2846, 0.756177, 0.52", "9.49467, 44.1337, 0.21349, 0.74", "8.9366, 44.7842, -0.259113, 0.74", "8.90159, 44.8253, -0.288354, 0.74", "8.24377, 45.6549, -0.813613, 0.74", "7.55047, 46.5798, -1.30059, 0.74", "7.27084, 46.9877, -1.49495, 0.52", "6.84247, 47.698, -1.78859, 0.52", "6.77521, 47.8304, -1.83402, 0.52", "6.27645, 48.9049, -2.14761, 0.52", "6.23734, 49.0056, -2.17111, 0.52", "5.7918, 50.267, -2.39927, 0.52", "5.45453, 51.3969, -2.60139, 0.52", "5.12972, 52.6453, -2.82471, 0.52", "5.11431, 52.7149, -2.84128, 0.52", "4.93334, 53.7278, -3.13908, 0.96", "4.92272, 53.7967, -3.16131, 0.96", "4.82392, 54.5855, -3.43047, 1.25", "4.80484, 54.6958, -3.46855, 1.25", "4.39849, 56.2581, -3.99332, 1.25", "4.05909, 57.3625, -4.35008, 0.74", "3.67253, 58.4324, -4.67781, 0.74", "3.38711, 59.1279, -4.87487, 0.74", "2.85941, 60.2665, -5.19746, 0.74", "2.23705, 61.4947, -5.52798, 0.74", "2.16696, 61.6181, -5.55719, 0.74", "1.74953, 62.3037, -5.73796, 0.88", "1.16012, 63.2228, -6.00827, 0.88", "0.758972, 63.8824, -6.21551, 0.88", "0.51151, 64.3443, -6.36705, 0.44", "0.217014, 65.0374, -6.59179, 0.44", "0.164289, 65.1943, -6.63991, 0.44", "0.108726, 65.5253, -6.72834, 0.81", "0.121957, 66.314, -6.85748, 0.81", "0.130748, 66.3971, -6.86465, 0.81", "0.252774, 67.1038, -6.90933, 0.81", "0.26926, 67.1857, -6.9133, 0.81", "0.429313, 68.1684, -6.95986, 0.81", "0.538396, 69.114, -6.97038, 0.44", "0.540931, 69.1873, -6.96982, 0.44", "0.492091, 70.0383, -6.96396, 0.44", "0.456533, 70.2772, -6.96447, 0.44", "0.304021, 71.0194, -6.97162, 0.44", "0.0848868, 71.7675, -6.97244, 0.44", "-0.148094, 72.4109, -6.9797, 0.96", "-0.521981, 73.3686, -6.98753, 0.96", "-0.83668, 74.1688, -6.92685, 0.96", "-0.86094, 74.2368, -6.91818, 0.96", "-1.15128, 75.1491, -6.76316, 0.59", "-1.2729, 75.6381, -6.67326, 0.59", "-1.29328, 75.7796, -6.64452, 0.59", "-1.43767, 77.6207, -6.07074, 0.59", "-1.45233, 78.1191, -5.89323, 0.96", "-1.45141, 78.2164, -5.85996, 0.96", "-1.41961, 79.1133, -5.57177, 0.96", "-1.37609, 80.1924, -5.24533, 0.96", "-1.34359, 81.9882, -4.77984, 0.96", "-1.35765, 82.6708, -4.65551, 0.59", "-1.41241, 83.3017, -4.56444, 0.44", "-1.50704, 83.951, -4.51108, 0.44", "-1.54075, 84.1041, -4.51039, 0.44", "-1.70466, 84.681, -4.51815, 0.44", "-1.87757, 85.2674, -4.54908, 0.44", "-2.14422, 86.1006, -4.55482, 1.11", "-2.43279, 86.9592, -4.53536, 1.77", "-2.64038, 87.5814, -4.5281, 1.77", "-3.10459, 88.9949, -4.54935, 0.81", "-3.34418, 89.7628, -4.58266, 0.66", "-3.54518, 90.482, -4.60725, 0.59", "-3.75417, 91.283, -4.63371, 0.52", "-3.9106, 92.0039, -4.66419, 0.52", "-4.03567, 92.7237, -4.71538, 0.52", "-4.18934, 93.8138, -4.77827, 0.52", "-4.3507, 95.1064, -4.78732, 0.52", "-4.35978, 95.1791, -4.79, 0.52", "-4.47176, 96.0654, -4.83854, 1.62", "-4.85386, 98.2337, -5.02353, 0.66", "-5.09585, 99.193, -5.12518, 0.44", "-5.29992, 99.8627, -5.21774, 0.44", "-5.95658, 101.656, -5.47353, 0.44", "-6.01102, 101.79, -5.49113, 0.44", "-6.91288, 103.794, -5.74387, 0.44", "-7.62584, 105.298, -5.92867, 0.44", "-8.51522, 107.101, -6.15295, 0.44", "-9.18766, 108.436, -6.2771, 0.44", "-9.58108, 109.205, -6.29327, 0.44", "-9.93608, 109.946, -6.25606, 0.96", "-10.2441, 110.663, -6.16991, 0.96", "-10.3266, 110.886, -6.13881, 0.96", "-10.5818, 111.683, -6.01286, 0.81", "-10.8369, 112.691, -5.86766, 0.29", "-11.424, 115.493, -5.49137, 0.29", "-11.5796, 116.406, -5.38931, 0.37", "-11.7036, 117.362, -5.31149, 0.96", "-11.7724, 118.138, -5.27894, 1.4", "-11.8013, 118.756, -5.28409, 0.88", "-11.7971, 119.445, -5.35132, 0.52", "-11.6875, 120.409, -5.5741, 0.52", "-11.5522, 121.175, -5.76284, 0.74", "-11.3817, 121.862, -5.92998, 0.74", "-11.2875, 122.174, -6.01157, 0.37", "-11.2641, 122.241, -6.02889, 0.37", "-10.4836, 124.244, -6.5104, 0.37", "-10.3758, 124.52, -6.57257, 0.37", "-10.0269, 125.428, -6.81474, 0.37", "-10.0024, 125.494, -6.83372, 0.37", "-9.44673, 126.98, -7.25343, 0.37", "-8.99935, 128.19, -7.57489, 0.81", "-8.69289, 129.033, -7.78135, 0.81", "-8.20482, 130.361, -8.11173, 0.29", "-8.09848, 130.639, -8.16533, 0.29", "-7.55904, 131.965, -8.35296, 0.29", "-7.16185, 132.896, -8.42613, 0.29", "-7.12737, 132.972, -8.42617, 0.29", "-6.81561, 133.611, -8.37247, 0.29", "-6.0675, 135.283, -8.00183, 0.37", "-6.0288, 135.375, -7.97759, 0.37", "-5.78175, 135.989, -7.79472, 0.37", "-5.58464, 136.481, -7.64194, 0.37", "-5.55742, 136.545, -7.62282, 0.37", "-4.52788, 138.831, -6.65876, 0.37", "-4.49428, 138.897, -6.62353, 0.37", "-4.21419, 139.372, -6.21681, 0.37", "-4.17634, 139.426, -6.13278, 0.37", "-3.91244, 139.745, -5.3081, 0.37", "-3.37264, 140.126, -2.98363, 0.44", "-3.2965, 140.101, -2.46292, 0.44", "-3.12977, 139.812, -0.617223, 0.66", "-3.099, 139.469, 0.63115, 0.29", "-3.10337, 139.425, 0.736354, 0.29", "-3.21682, 138.939, 1.47197, 0.29", "-3.241, 138.849, 1.54304, 0.29", "-3.46947, 138.007, 2.01028, 0.29", "-3.51846, 137.787, 2.05713, 0.29", "-3.66301, 137.126, 2.12258, 0.29", "-3.70641, 136.958, 2.13085, 0.29", "-3.85687, 136.485, 2.12797, 0.44", "-3.8833, 136.417, 2.12397, 0.44", "-4.13843, 135.906, 2.05604, 0.44", "-4.21685, 135.774, 2.03349, 0.44", "-4.62869, 135.16, 1.91815, 0.59", "-4.66771, 135.1, 1.90939, 0.59", "-4.9443, 134.637, 1.86667, 0.59", "-4.98048, 134.574, 1.86158, 0.59", "-5.2563, 134.047, 1.83297, 0.59", "-5.49632, 133.522, 1.82272, 0.29", "-5.81253, 132.764, 1.83539, 0.29", "-6.08214, 132.016, 1.85339, 0.29", "-6.2059, 131.619, 1.86615, 0.44", "-6.39792, 130.958, 1.9039, 0.59", "-6.53174, 130.443, 1.94511, 0.59", "-6.65667, 129.946, 1.99413, 0.81", "-6.858, 129.14, 2.08798, 1.33", "-7.01046, 128.505, 2.17455, 1.03", "-7.20155, 127.67, 2.30641, 0.37", "-7.3498, 126.917, 2.43017, 0.37", "-7.42232, 126.372, 2.52107, 0.37", "-7.42889, 126.27, 2.53828, 0.37", "-7.4287, 125.961, 2.5891, 0.15", "-7.40945, 125.506, 2.65824, 0.15", "-7.35737, 124.657, 2.76921, 0.15", "-7.31626, 123.74, 2.88735, 0.15", "-7.31634, 123.594, 2.90619, 0.15", "-7.33826, 123.137, 2.96472, 0.15", "-7.39785, 122.542, 3.03928, 0.15", "-7.4764, 122.013, 3.10462, 0.37", "-7.60787, 121.414, 3.17587, 0.37", "-7.71287, 120.982, 3.2274, 0.44", "-7.80119, 120.533, 3.28253, 0.44", "-7.81224, 120.461, 3.29164, 0.44", "-7.853, 120.072, 3.34181, 0.44", "-7.8769, 119.733, 3.38512, 0.22", "-7.88018, 119.63, 3.39736, 0.22", "-7.86415, 118.471, 3.49251, 0.22", "-7.86034, 118.397, 3.49674, 0.22", "-7.81167, 117.762, 3.52475, 0.29", "-7.76488, 117.278, 3.537, 0.29", "-7.69755, 116.738, 3.5465, 0.66", "-7.60337, 116.051, 3.5563, 0.88", "-7.52986, 115.462, 3.55332, 0.96", "-7.4793, 115.015, 3.54904, 0.66", "-7.42829, 114.456, 3.54248, 0.29", "-7.37687, 113.712, 3.54056, 0.29", "-7.34879, 113.162, 3.54861, 0.29", "-7.31232, 112.57, 3.57557, 0.37", "-7.28778, 112.341, 3.57275, 0.37", "-7.21074, 111.862, 3.54407, 0.37", "-7.09242, 111.321, 3.49312, 0.37", "-7.07375, 111.252, 3.48377, 0.37", "-6.85338, 110.594, 3.38993, 0.37", "-6.45674, 109.539, 3.25979, 0.52", "-6.43106, 109.472, 3.25291, 0.52", "-6.25387, 109.044, 3.12486, 0.52", "-6.22354, 108.973, 3.09509, 0.52", "-6.05395, 108.576, 2.91459, 0.52", "-5.86836, 108.129, 2.68744, 0.52", "-5.63211, 107.581, 2.39362, 0.52", "-4.87729, 105.91, 1.38575, 1.11", "-4.50773, 105.146, 0.838877, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.3361, 23.4626, 2.49329, 1.62", "23.5319, 23.8495, 2.35687, 1.62", "23.5577, 23.9036, 2.34167, 1.62", "24.1052, 25.0647, 2.10766, 1.33", "24.5143, 25.8246, 1.97479, 1.33", "24.5819, 25.9363, 1.95359, 1.33", "25.2627, 27.0073, 1.73941, 1.18", "25.2973, 27.0573, 1.72972, 1.18", "25.869, 27.8451, 1.59182, 1.03", "26.6542, 28.8421, 1.45959, 1.03", "27.2284, 29.4839, 1.34444, 1.33", "27.2661, 29.5192, 1.33639, 1.33", "27.7543, 29.8924, 1.19277, 0.96", "27.7968, 29.9184, 1.1787, 0.96", "28.2282, 30.1177, 0.989611, 0.66", "28.8131, 30.3357, 0.704451, 0.88", "29.5174, 30.5955, 0.318845, 1.18", "30.4427, 30.9608, -0.213593, 1.18", "31.2815, 31.3279, -0.732071, 0.96", "32.3799, 31.8523, -1.43924, 0.88", "32.9175, 32.1404, -1.79845, 1.18", "33.6339, 32.5714, -2.29151, 1.18", "34.1122, 32.9095, -2.60782, 1.4", "34.8857, 33.5651, -3.0431, 1.4", "34.9256, 33.6063, -3.06366, 1.4", "35.3385, 34.0653, -3.24038, 1.69", "35.3777, 34.1109, -3.25197, 1.69", "35.9891, 34.8401, -3.34694, 1.33", "36.7821, 35.8628, -3.39892, 1.11", "36.8167, 35.914, -3.39687, 1.11", "37.4943, 37.0473, -3.30749, 0.96", "38.0796, 38.2218, -3.14956, 0.81", "38.2252, 38.6517, -3.07772, 0.59", "38.2921, 39.2394, -2.95036, 0.37", "38.2553, 39.8732, -2.78799, 0.37", "38.2251, 40.0579, -2.7265, 0.37", "38.1092, 40.4602, -2.56657, 1.4", "37.7399, 41.5385, -2.16537, 1.4", "37.4807, 42.2682, -1.86211, 1.4", "37.4519, 42.3506, -1.82544, 1.4", "37.0888, 43.5296, -1.27865, 0.74", "37.0765, 43.5853, -1.25304, 0.74", "36.9916, 44.3176, -0.915687, 0.59", "36.9962, 44.4408, -0.862539, 0.59", "37.0921, 44.991, -0.698508, 0.59", "37.1204, 45.1208, -0.678906, 0.59", "37.2655, 46.086, -0.642832, 0.59", "37.2712, 46.2113, -0.636418, 0.59", "37.264, 46.802, -0.597417, 1.18", "37.2619, 46.8735, -0.591273, 1.18", "37.2235, 47.7836, -0.502947, 1.55", "37.1665, 49.1554, -0.3578, 1.55", "37.1223, 50.0388, -0.255038, 0.81", "37.0959, 51.0163, -0.118151, 0.66", "37.0861, 52.4186, 0.114338, 0.66", "37.0903, 52.5423, 0.136132, 0.66", "37.1498, 53.353, 0.290544, 0.66", "37.167, 53.4837, 0.317114, 0.66", "37.2596, 54.1471, 0.46343, 0.66", "37.2675, 54.2067, 0.481238, 0.66", "37.3624, 55.0599, 0.775917, 1.47", "37.49, 56.2567, 1.19257, 1.47", "37.4995, 56.3526, 1.22427, 1.47", "37.5795, 57.1645, 1.47551, 1.47", "37.6892, 58.2995, 1.78997, 0.66", "37.8326, 59.8169, 2.17075, 0.52", "37.9192, 60.7229, 2.37879, 0.52", "37.9846, 61.3565, 2.48572, 1.4", "37.9895, 61.4098, 2.49184, 1.33", "38.0559, 62.2056, 2.54102, 1.55", "38.1479, 63.5121, 2.57753, 1.55", "38.1521, 63.5747, 2.58002, 1.55", "38.2301, 65.095, 2.68154, 0.74", "38.2672, 66.2195, 2.7666, 0.52", "38.2772, 67.2033, 2.84746, 0.52", "38.2753, 67.8289, 2.90154, 0.81", "38.2667, 68.3642, 2.94946, 1.25", "38.2668, 69.3051, 3.03869, 1.47", "38.2803, 70.2907, 3.1455, 0.96", "38.3391, 71.4631, 3.23586, 0.52", "38.4175, 72.1435, 3.26085, 0.52", "38.4311, 72.2137, 3.26011, 0.52", "38.6623, 72.9424, 3.20403, 0.52", "38.7381, 73.113, 3.18073, 0.52", "38.9357, 73.495, 3.14092, 0.81", "39.1624, 73.89, 3.08347, 0.81", "39.1877, 73.9361, 3.07644, 0.81", "39.755, 75.0765, 2.91057, 0.37", "39.8995, 75.4365, 2.86403, 1.25", "40.4104, 76.8294, 2.70605, 2.21" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-41.834, 20.5951, -40.6781, 0.07", "-41.6085, 19.9132, -46.2029, 0.07", "-41.6048, 19.8982, -46.3095, 0.44", "-41.6026, 19.875, -46.4596, 0.44", "-41.6518, 19.7803, -47.2136, 0.44", "-41.6601, 19.7732, -47.2836, 0.44", "-41.7617, 19.7516, -47.8069, 0.37", "-41.8105, 19.7754, -47.8531, 0.37", "-42.2369, 20.0206, -48.3117, 0.37", "-43.3405, 20.7153, -49.5415, 0.37", "-43.3899, 20.7509, -49.596, 0.37", "-43.982, 21.2215, -50.2633, 0.37", "-44.0739, 21.3067, -50.4303, 0.37", "-44.6994, 22.0155, -51.8825, 0.37", "-44.7214, 22.0474, -51.9427, 0.37", "-44.7935, 22.1917, -52.5042, 0.37", "-44.8032, 22.2125, -52.6096, 0.37", "-45.1246, 22.8713, -56.6359, 0.37", "-45.1996, 22.9995, -57.5194, 0.37", "-45.4131, 23.3134, -60.0062, 0.37", "-46.3999, 24.5141, -70.6018, 0.37", "-46.4307, 24.5431, -70.9141, 0.37", "-46.4913, 24.5839, -71.4358, 0.37", "-46.5746, 24.6092, -72.0211, 0.37", "-46.5983, 24.6119, -72.1711, 0.37", "-46.7856, 24.6363, -73.1774, 0.37", "-46.8614, 24.715, -73.2857, 0.37", "-47.0739, 24.9759, -73.8272, 0.37", "-47.1071, 25.0161, -73.9301, 0.37", "-47.5217, 25.5169, -75.3113, 0.37", "-47.7248, 25.757, -76.0546, 0.37", "-48.3945, 26.545, -78.6693, 0.37", "-49.1583, 27.5423, -81.7985, 0.37", "-49.6825, 28.3242, -84.2773, 0.37", "-49.6957, 28.3452, -84.344, 0.37", "-50.1831, 29.1873, -87.0445, 0.37", "-50.1954, 29.2104, -87.1216, 0.37", "-50.402, 29.6462, -88.5284, 0.37", "-51.1395, 31.0002, -93.4182, 0.37", "-51.153, 31.0154, -93.4863, 0.37", "-51.8979, 31.2883, -95.8811, 0.37", "-52.5784, 31.3034, -97.8523, 0.37", "-52.6296, 31.2971, -97.9952, 0.37", "-53.7017, 31.0908, -100.797, 0.37", "-54.5574, 30.9379, -102.913, 0.37", "-56.2371, 30.6947, -107.047, 0.37", "-59.2425, 30.5118, -114.246, 0.37", "-59.2662, 30.5137, -114.302, 0.37", "-60.2148, 30.7227, -116.547, 0.37", "-61.0636, 31.1165, -118.541, 0.37", "-61.1732, 31.1972, -118.803, 0.37", "-62.3134, 32.3947, -121.301, 0.37", "-63.6256, 33.7793, -123.39, 0.37", "-63.6701, 33.8275, -123.458, 0.37", "-64.8983, 35.1813, -125.239, 0.37", "-64.9286, 35.2151, -125.281, 0.37", "-65.7198, 36.1268, -126.354, 0.37", "-65.7507, 36.163, -126.393, 0.37", "-67.8074, 38.6151, -128.846, 0.37", "-67.8985, 38.7202, -128.945, 0.37", "-68.1277, 38.9708, -129.164, 1.03", "-68.5779, 39.4411, -129.524, 1.03", "-68.9217, 39.7819, -129.743, 0.59", "-69.08, 39.937, -129.831, 0.59", "-69.6954, 40.5421, -130.269, 0.52", "-69.7438, 40.592, -130.313, 0.52", "-70.9194, 41.8826, -131.492, 0.52", "-70.9521, 41.921, -131.528, 0.52", "-71.7073, 42.9071, -132.297, 0.52", "-73.3915, 45.2506, -133.935, 0.52", "-73.4411, 45.3229, -133.974, 0.52", "-74.3301, 46.6736, -134.493, 0.52", "-74.3878, 46.7643, -134.521, 0.52", "-75.9761, 49.2837, -135.077, 0.52", "-76.0147, 49.3458, -135.081, 0.52", "-77.4233, 51.6611, -134.806, 0.52", "-78.0623, 52.7052, -134.663, 0.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-41.834, 20.5951, -40.6781, 1.18", "-42.2432, 20.5301, -40.7004, 1.18", "-43.6682, 20.2985, -40.724, 0.59", "-45.5335, 19.9858, -40.7259, 0.52", "-46.961, 19.7251, -40.7352, 0.52", "-48.8779, 19.3589, -40.7571, 0.52", "-48.9715, 19.339, -40.7573, 0.52", "-50.7851, 18.9057, -40.6999, 0.52", "-50.8592, 18.8843, -40.6928, 0.52", "-51.9611, 18.5352, -40.593, 0.52", "-52.0161, 18.517, -40.5884, 0.52", "-53.3503, 17.9782, -40.4935, 0.37", "-53.4129, 17.9517, -40.4885, 0.37", "-55.3423, 17.0151, -40.2885, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "41.7257, -2.0614, 2.35483, 1.55", "56.7146, -2.63935, 2.35483, 1.55", "71.7034, -3.2173, 2.35483, 1.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_148",
    "id" : "dend_148",
    "points3d" : [ "-10.3963, -17.4158, -8.12582, 0.66", "-10.9849, -18.0862, -7.69697, 0.66", "-11.0544, -18.1795, -7.67458, 0.44", "-11.0869, -18.2261, -7.66625, 0.88", "-11.3319, -18.6037, -7.60479, 0.88", "-11.3627, -18.6517, -7.5972, 0.88", "-11.7254, -19.2626, -7.51296, 0.88", "-11.9761, -19.7434, -7.57621, 0.81", "-12.0223, -19.8388, -7.59789, 0.74", "-12.4122, -20.6611, -7.8195, 0.74", "-12.4322, -20.7057, -7.83229, 0.74", "-12.8483, -21.6523, -8.11529, 0.74", "-13.5347, -23.1182, -8.701, 1.11", "-13.8554, -23.6868, -8.96819, 1.11", "-14.3434, -24.3921, -9.42848, 0.74", "-14.8008, -24.9561, -9.89758, 0.74", "-14.8251, -24.9809, -9.92174, 0.74", "-15.94, -25.9173, -11.0705, 0.74", "-16.6237, -26.3613, -11.7139, 0.74", "-17.8248, -26.9285, -12.8357, 0.96", "-17.8644, -26.9425, -12.8724, 0.96", "-18.5078, -27.1023, -13.4031, 0.81", "-19.2063, -27.2301, -13.9227, 1.25", "-19.9793, -27.3235, -14.4327, 1.25", "-21.1864, -27.46, -15.2366, 1.25", "-21.2276, -27.4645, -15.2622, 1.25", "-22.7687, -27.6191, -16.2516, 1.25", "-23.7578, -27.7363, -16.8966, 1.25", "-23.7985, -27.7423, -16.9225, 1.25", "-24.8753, -27.9521, -17.6518, 1.11", "-25.6889, -28.1442, -18.5204, 0.88", "-25.7305, -28.1557, -18.5741, 0.88", "-26.3579, -28.3831, -19.6093, 0.88", "-26.8808, -28.6145, -20.5555, 0.88", "-26.9084, -28.6293, -20.6115, 0.88", "-28.888, -29.8653, -25.1283, 0.59", "-29.245, -30.1262, -26.038, 0.59", "-29.8509, -30.6603, -27.7964, 1.18", "-30.0222, -30.8417, -28.3273, 1.18", "-30.4846, -31.4083, -29.7848, 1.18", "-30.5062, -31.4354, -29.8456, 1.18", "-30.6606, -31.6297, -30.2028, 1.18", "-31.9854, -33.2007, -33.2233, 0.88", "-32.6407, -33.8544, -34.5028, 0.74", "-32.6594, -33.8698, -34.5371, 0.74", "-33.3535, -34.3364, -35.6693, 0.74", "-33.7618, -34.5622, -36.2985, 0.74", "-33.8164, -34.5846, -36.3762, 0.74", "-34.2533, -34.6875, -36.8739, 0.74", "-35.2008, -34.8379, -37.9906, 0.74", "-35.2379, -34.8441, -38.0316, 0.74", "-36.2742, -35.0289, -39.1247, 0.74", "-36.3031, -35.0358, -39.154, 0.74", "-36.8598, -35.1924, -39.6918, 0.59", "-36.8967, -35.2058, -39.7314, 0.59", "-37.4657, -35.446, -40.325, 0.59", "-37.5694, -35.5001, -40.447, 0.59", "-38.119, -35.9001, -41.2154, 0.59", "-38.1389, -35.9191, -41.2473, 0.59", "-38.8196, -36.7612, -42.5481, 0.59", "-38.8412, -36.7916, -42.5904, 0.59", "-38.9972, -37.0817, -42.9736, 0.59", "-39.1192, -37.3417, -43.2983, 0.44", "-39.2263, -37.7106, -43.6968, 0.29", "-39.2762, -37.8699, -43.8309, 0.29", "-39.4171, -38.2309, -43.8802, 0.29" ],
    "parent" : "dend_139",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_140",
    "id" : "dend_140",
    "points3d" : [ "-10.3963, -17.4158, -8.12582, 1.55", "-10.4182, -17.5525, -8.08991, 1.55", "-10.4292, -17.6212, -8.07346, 1.55", "-10.6507, -18.9976, -7.74398, 1.55", "-11.0511, -21.4863, -7.14826, 1.33", "-11.2522, -22.7362, -6.84905, 1.25", "-11.4768, -24.132, -6.51495, 1.25", "-11.5317, -24.4547, -6.43475, 0.07" ],
    "parent" : "dend_139",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_137",
    "id" : "dend_137",
    "points3d" : [ "-17.5831, -52.0996, -8.44892, 0.44", "-21.0254, -55.7697, -20.0749, 0.44", "-24.2308, -60.1883, -31.5254, 0.44", "-26.1653, -62.4324, -43.8166, 0.44", "-26.3068, -62.7714, -56.4532, 0.44", "-27.5161, -62.5583, -69.0386, 0.44", "-30.0067, -61.1334, -81.368, 0.44", "-30.5487, -59.1509, -93.8763, 0.44", "-30.3489, -55.4207, -106.046, 0.44", "-31.887, -53.1683, -118.428, 0.44", "-34.9954, -51.5586, -130.594, 0.44", "-37.5405, -52.1764, -142.959, 0.44", "-40.2112, -55.0903, -154.978, 0.44" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_136",
    "id" : "dend_136",
    "points3d" : [ "-17.5831, -52.0996, -8.44892, 0.29", "-25.1976, -53.6043, -12.9574, 0.44" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "-0.502588, -154.775, 52.1614, 0.44", "-0.87152, -163.914, 56.0173, 0.44", "-1.24031, -173.636, 58.2246, 0.44", "-2.55302, -182.755, 61.8942, 0.44", "-2.87159, -191.431, 66.6272, 0.44" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "-0.502588, -154.775, 52.1614, 0.29", "-0.91948, -168.443, 56.1873, 0.44", "1.02431, -181.813, 60.8204, 0.44", "3.24006, -194.757, 66.374, 0.44", "4.92695, -206.374, 74.286, 0.44" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "56.0569, 6.69529, 25.7672, 0.44", "62.2834, 12.1605, 21.7106, 0.44" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "56.0569, 6.69529, 25.7672, 0.29", "61.1705, 15.9317, 24.4634, 0.44" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "30.9582, -43.6622, 35.8542, 0.22", "30.5795, -44.2836, 36.2758, 0.22", "30.5558, -44.3153, 36.3063, 0.44", "30.5215, -44.3445, 36.3426, 0.44", "29.8228, -44.8223, 37.0193, 0.44", "29.782, -44.8482, 37.0507, 0.44", "28.8797, -45.5674, 37.7515, 0.44", "28.7136, -45.6974, 37.8823, 0.44", "28.1156, -46.1224, 38.3132, 0.44", "28.0736, -46.1502, 38.3414, 0.44", "26.6975, -46.9472, 39.2675, 0.44", "25.2499, -47.6906, 40.2315, 0.44", "24.8106, -47.8787, 40.5075, 0.44", "24.0887, -48.1303, 40.9831, 0.44", "23.9769, -48.1561, 41.0605, 0.44", "23.0526, -48.1631, 41.7062, 0.44", "22.5246, -47.9322, 42.0612, 0.22", "21.9607, -47.5684, 42.3393, 0.22", "21.8183, -47.4647, 42.4104, 0.22", "21.6027, -47.2886, 42.5112, 0.22", "21.537, -47.2366, 42.5327, 0.22", "20.8667, -46.8198, 42.506, 0.22", "19.9087, -46.4864, 42.3051, 0.22", "13.3029, -48.8336, 46.5032, 0.22", "7.281, -51.1231, 51.5299, 0.22", "1.63545, -53.0268, 57.1003, 0.22", "-4.00049, -55.182, 62.6035, 0.22", "-10.5924, -55.4552, 67.3057, 0.22", "-17.4677, -56.1738, 71.5518, 0.22", "-24.35, -56.6261, 75.8094, 0.22", "-31.4713, -57.9554, 79.4996, 0.22", "-39.284, -58.6862, 81.5315, 0.22", "-47.0526, -58.5757, 83.7791, 0.22", "-54.4299, -58.3242, 87.0846, 0.22", "-61.7673, -59.3035, 90.4157, 0.22", "-68.6248, -60.1241, 94.6779, 0.22" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "30.9582, -43.6622, 35.8542, 0.74", "31.0985, -45.3265, 36.6255, 0.74", "31.2878, -47.527, 37.5532, 0.74", "31.2978, -47.592, 37.5788, 0.74", "31.5104, -49.1085, 38.2289, 0.52", "31.662, -50.9818, 39.113, 0.52", "31.668, -51.056, 39.148, 0.52", "31.6936, -52.8243, 40.0057, 0.52", "31.6506, -54.2755, 40.6743, 0.52", "31.6522, -55.9045, 41.4509, 0.44", "31.8263, -58.091, 42.5966, 0.44" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "8.03722, 41.3112, 10.3718, 0.74", "8.14594, 42.147, 10.3351, 0.74", "8.15986, 42.2799, 10.3189, 0.74", "8.21835, 43.6567, 10.1172, 0.74", "8.21671, 43.8637, 10.0847, 0.74", "8.0716, 45.616, 9.80113, 0.74", "7.72601, 47.7643, 9.52821, 0.74", "7.44863, 48.6562, 9.4966, 1.55", "6.94272, 49.8349, 9.54607, 1.55", "6.68893, 50.2908, 9.62148, 1.55", "5.99983, 51.3433, 9.91773, 1.11", "5.21946, 52.3597, 10.3543, 0.88", "3.91738, 53.9487, 11.3476, 0.66", "3.86483, 54.016, 11.397, 0.66", "3.32113, 54.815, 12.0537, 0.66", "3.27351, 54.9111, 12.1299, 0.66", "3.13772, 55.5107, 12.5326, 0.66", "3.13601, 55.6698, 12.6072, 0.66", "3.24227, 56.6622, 13.1156, 0.66", "3.25459, 56.7683, 13.1783, 0.66", "3.37391, 57.5295, 13.6653, 0.96", "3.54715, 58.4472, 14.3022, 0.96", "3.56459, 58.5135, 14.3556, 0.96", "4.29159, 60.474, 16.0242, 0.88", "4.35972, 60.6174, 16.1534, 0.88", "4.57523, 60.9605, 16.471, 0.88", "4.69497, 61.105, 16.6388, 0.88", "5.3688, 61.8517, 17.5325, 0.74", "5.86541, 62.4203, 18.1476, 0.74", "5.91159, 62.4732, 18.1975, 0.74", "6.46495, 63.2343, 18.8747, 0.74", "7.35422, 64.7352, 20.1618, 0.59", "7.6347, 65.4262, 20.6772, 0.59", "7.72882, 66.021, 21.0119, 0.66", "7.72299, 66.1109, 21.0562, 0.66", "7.54824, 66.876, 21.3495, 0.66", "7.42999, 67.2066, 21.4455, 0.66", "7.06411, 68.1762, 21.6557, 0.66", "6.75119, 69.0858, 21.8767, 0.66", "6.3985, 70.4081, 22.2791, 0.66", "6.21185, 71.588, 22.7517, 0.66", "6.20608, 71.6783, 22.7952, 0.66", "6.22489, 72.818, 23.4673, 0.66", "6.29399, 73.5341, 24.0115, 0.59", "6.46877, 74.6549, 24.9786, 0.52", "6.64584, 75.662, 25.8478, 0.52", "6.65465, 75.7323, 25.9169, 0.52", "6.70922, 76.8443, 27.0667, 0.52", "6.66619, 77.7383, 28.0422, 0.88", "6.60927, 78.1097, 28.4739, 1.11", "6.39841, 78.9651, 29.4423, 1.11", "5.87549, 80.5201, 31.127, 1.11", "5.85178, 80.589, 31.1936, 1.11", "5.48603, 81.81, 32.1565, 0.88", "5.21903, 83.0107, 32.9286, 0.74", "5.08086, 83.8346, 33.39, 0.74", "4.91333, 85.2664, 34.034, 0.74", "4.78483, 86.8219, 34.5769, 0.66", "4.59086, 89.3342, 35.3233, 0.66", "4.41065, 91.5289, 35.8327, 0.66", "4.35091, 92.3546, 35.9717, 0.88", "4.23608, 94.2748, 36.218, 0.88", "4.2318, 94.3631, 36.2244, 0.88", "4.1434, 95.4803, 36.2575, 0.66", "4.04391, 96.3051, 36.2118, 0.66", "3.91953, 97.1549, 36.1233, 0.74", "3.85076, 97.9019, 36.038, 0.74", "3.81097, 99.2839, 35.8704, 0.74", "3.81643, 99.3719, 35.8607, 0.74", "4.05914, 100.916, 35.7161, 0.74", "4.07955, 101.014, 35.7093, 0.74", "4.27671, 101.93, 35.6751, 0.74", "4.30069, 102.015, 35.6719, 0.74", "4.65241, 102.954, 35.6386, 0.74", "4.6964, 103.045, 35.6371, 0.74", "5.16088, 103.726, 35.6495, 1.18", "5.24102, 103.831, 35.6542, 1.18", "5.85906, 104.5, 35.7136, 1.18", "5.99725, 104.635, 35.7277, 1.18", "6.80431, 105.367, 35.8138, 0.81", "7.58458, 106.047, 35.8972, 0.66", "7.67862, 106.125, 35.9026, 0.66", "9.23328, 107.404, 35.9451, 0.66", "9.76586, 107.872, 35.9459, 0.66", "11.2262, 109.214, 35.9139, 0.66", "11.2959, 109.284, 35.9062, 0.66", "12.5486, 110.695, 35.7519, 0.66", "12.6107, 110.772, 35.7435, 0.66", "13.5386, 112.085, 35.5992, 0.66", "13.5795, 112.148, 35.5935, 0.66", "14.4182, 113.45, 35.5269, 0.66", "15.3593, 114.825, 35.5487, 0.66", "15.4101, 114.895, 35.5561, 0.66", "16.0368, 115.664, 35.6547, 0.66", "16.1658, 115.806, 35.6839, 0.66", "16.9776, 116.693, 35.9023, 0.88", "17.4846, 117.267, 36.0538, 0.88", "17.5306, 117.323, 36.0698, 0.88", "17.9747, 117.963, 36.2838, 0.96", "18.7503, 119.298, 36.771, 0.66", "18.7896, 119.371, 36.7991, 0.66", "19.3951, 120.661, 37.3328, 0.52", "20.0141, 122.063, 37.9501, 0.96", "20.4141, 122.995, 38.3817, 1.25", "20.5541, 123.344, 38.5588, 1.25" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "8.03722, 41.3112, 10.3718, 0.59", "8.65732, 42.3548, 12.9933, 0.59", "8.9061, 42.7452, 13.9115, 0.59", "8.99207, 42.8618, 14.1758, 0.59", "9.24319, 43.1902, 14.9193, 0.59", "10.1613, 44.1947, 17.3181, 0.37", "10.6827, 44.7665, 18.7548, 0.37", "10.7461, 44.832, 18.9023, 0.37", "10.9872, 45.0962, 19.5081, 0.37", "11.4764, 45.6175, 20.6547, 0.29", "11.8827, 46.0309, 21.5292, 0.29", "12.8706, 46.8631, 23.2154, 0.29", "13.2867, 47.2115, 23.936, 0.29", "13.3273, 47.2452, 24.0119, 0.29", "13.7148, 47.6866, 25.1612, 0.29", "13.7315, 47.7125, 25.2358, 0.29", "13.955, 48.2624, 26.8356, 0.29", "13.9633, 48.2906, 26.923, 0.29", "13.9989, 48.6528, 28.0505, 0.29", "13.9374, 49.6012, 30.6921, 0.29", "13.9316, 49.626, 30.7565, 0.29", "13.8277, 50.0472, 31.5607, 0.29", "13.5965, 50.9269, 32.6735, 0.29", "13.5392, 51.1371, 32.9066, 0.29", "13.3778, 51.7393, 33.489, 0.29", "13.3421, 51.8775, 33.6205, 0.29", "13.1168, 52.6414, 34.3965, 0.29", "12.7646, 53.8381, 35.6946, 0.29", "12.3425, 55.5755, 37.7099, 0.29", "12.3331, 55.6259, 37.7734, 0.29", "12.2455, 56.6249, 39.2552, 0.29", "12.2452, 56.6731, 39.3346, 0.29", "12.3152, 57.0958, 40.1373, 0.29", "12.5883, 57.6826, 41.3583, 0.29", "12.624, 57.7242, 41.4681, 0.29", "13.3201, 58.3242, 43.615, 0.29", "13.3476, 58.3326, 43.7336, 0.29", "13.4353, 58.3315, 44.5786, 0.29", "13.4274, 58.3141, 44.9319, 0.29", "13.2443, 58.1587, 46.5065, 0.29", "13.2297, 58.1531, 46.5854, 0.29", "12.5786, 58.0208, 48.7952, 0.29", "12.2654, 58.0335, 49.8805, 0.29", "12.0668, 58.1046, 50.5121, 0.29", "12.0444, 58.188, 50.7505, 0.29", "12.5958, 58.8215, 51.3571, 0.29", "13.0703, 59.2434, 51.6307, 0.29", "13.3295, 59.4479, 51.7503, 0.29", "13.3897, 59.4931, 51.7823, 0.29", "13.8592, 59.961, 52.0834, 0.29", "13.8846, 60.0342, 52.1375, 0.29", "13.9061, 60.5837, 52.5545, 0.29", "13.8716, 61.2838, 53.0511, 0.29", "13.8183, 61.9807, 53.5399, 0.29", "13.7453, 62.8075, 54.146, 0.29", "13.5327, 64.6483, 55.55, 0.29", "13.5264, 64.7702, 55.6766, 0.29", "13.5638, 65.1296, 56.2677, 0.29", "13.6412, 65.1611, 56.5309, 0.29", "13.9315, 64.9918, 57.1658, 0.59", "13.9752, 64.95, 57.2361, 0.59", "15.1174, 63.7264, 58.6792, 0.59", "15.1804, 63.6606, 58.7497, 0.59", "15.7969, 63.0596, 59.3396, 0.81", "15.9993, 62.8672, 59.529, 0.81", "16.741, 62.2051, 60.183, 1.11", "16.8165, 62.1407, 60.2413, 1.11", "17.9497, 61.2895, 60.8409, 1.11", "18.6863, 60.7635, 61.2125, 0.96", "18.768, 66.3939, 71.3441, 0.96", "21.0817, 73.6908, 80.1741, 0.96", "23.307, 80.6648, 89.2593, 0.96", "27.4522, 89.1491, 96.2934, 0.96", "31.3584, 99.2762, 101.171, 0.96", "37.1016, 108.76, 105.396, 0.96", "43.1203, 116.282, 112.08, 0.96", "48.5807, 124.691, 118.264, 0.96" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "42.5541, 11.351, 31.5059, 0.66", "43.4636, 11.3671, 31.5081, 0.66", "43.5318, 11.3672, 31.5094, 0.66", "44.2185, 11.3653, 31.5222, 0.66", "45.0982, 11.3652, 31.5398, 0.66", "45.1712, 11.3668, 31.5443, 0.66", "46.6723, 11.4156, 31.6675, 0.66", "47.081, 11.4474, 31.6944, 0.96", "48.1803, 11.5696, 31.796, 0.81", "48.2307, 11.5788, 31.8028, 0.81", "49.412, 11.8799, 32.008, 0.44", "49.4595, 11.897, 32.0192, 0.44", "50.1874, 12.2729, 32.2561, 0.44", "50.2298, 12.2981, 32.2725, 0.44", "50.9044, 12.6822, 32.547, 0.44", "51.0393, 12.7482, 32.598, 0.44", "51.9563, 13.0272, 32.9453, 0.44", "52.0041, 13.0335, 32.9639, 0.44", "52.4503, 12.989, 33.1283, 0.44", "53.4603, 12.7459, 33.463, 0.44", "53.5076, 12.7283, 33.476, 0.44", "54.4764, 12.311, 33.6874, 0.52", "54.5223, 12.2867, 33.6948, 0.52", "54.9981, 12.0339, 33.7661, 0.88", "55.1435, 11.9579, 33.7833, 0.88", "55.6283, 11.7082, 33.8811, 0.88", "55.6756, 11.6866, 33.8874, 0.88" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "42.5541, 11.351, 31.5059, 0.44", "42.6284, 11.2656, 31.4672, 0.44", "43.5979, 10.1524, 30.9618, 0.15", "45.051, 8.48391, 30.2043, 0.15", "45.2928, 8.2063, 30.0783, 0.15", "45.3377, 8.15469, 30.0549, 0.15", "52.388, 0.907679, 28.0227, 0.15", "58.8943, -6.92414, 26.1675, 0.15" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-18.1234, -1.62524, 0.0448244, 1.11", "-19.8814, -1.25776, 0.995686, 1.11", "-21.2182, -1.016, 1.79146, 1.11", "-23.2426, -0.649916, 2.99648, 1.11", "-24.0419, -0.505349, 3.47233, 0.88", "-24.2458, -0.468488, 3.59367, 1.11", "-24.2994, -0.458797, 3.62557, 1.11", "-25.6484, -0.287674, 4.35263, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-18.1234, -1.62524, 0.0448244, 1.4", "-21.2356, -5.37444, -4.33299, 1.4", "-24.2634, -9.01731, -6.61365, 1.25", "-25.157, -10.0555, -7.08954, 1.03", "-25.9641, -10.9271, -7.36315, 1.03", "-26.8435, -11.8769, -7.66127, 1.03", "-27.9744, -13.0982, -8.04464, 0.96", "-29.8108, -14.9507, -8.84915, 0.96", "-31.1713, -16.3514, -9.06825, 0.96", "-32.873, -18.0189, -9.26878, 1.11" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-39.2731, 11.1449, 38.6963, 0.44", "-44.3353, 13.9959, 45.5294, 0.44", "-48.4619, 14.9873, 53.3571, 0.44", "-53.3076, 14.0678, 60.7167, 0.44", "-58.3575, 13.9776, 68.0121, 0.44", "-62.7071, 12.7226, 75.6239, 0.44", "-66.4755, 11.6476, 83.5689, 0.44", "-70.58, 9.20895, 91.0227, 0.44", "-74.1358, 7.67582, 98.9854, 0.44", "-77.8894, 7.86628, 107.034, 0.44", "-81.0958, 8.49584, 115.307, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-39.2731, 11.1449, 38.6963, 0.29", "-42.7784, 12.3344, 43.9747, 0.44", "-45.444, 13.3067, 49.7594, 0.44", "-47.4173, 15.0381, 55.678, 0.44", "-50.0513, 15.9257, 61.4876, 0.44", "-52.6286, 17.1996, 67.2662, 0.44", "-55.2219, 18.0601, 73.0973, 0.44", "-57.9178, 19.3514, 78.818, 0.44", "-60.7076, 20.2633, 84.5509, 0.44", "-64.5165, 21.847, 89.5219, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.473385, 30.6466, 1.78064, 1.47", "2.19495, 31.3468, 0.711725, 1.47", "2.19495, 31.3468, 0.711725, 1.47", "4.11285, 32.0762, 0.189551, 0.74", "4.63758, 32.2914, 0.054042, 0.74", "6.11715, 32.9341, -0.261257, 0.66", "7.83604, 33.7017, -0.586005, 0.66", "9.086, 34.2607, -0.71883, 0.66", "10.7852, 35.021, -0.869266, 0.66", "10.8611, 35.0548, -0.872759, 0.66", "13.0441, 35.9915, -0.940304, 0.66", "13.1102, 36.018, -0.94077, 0.66", "14.5187, 36.4976, -0.91482, 0.96", "15.104, 36.6366, -0.879344, 1.25", "16.388, 36.9007, -0.620371, 1.47", "17.3621, 37.1766, -0.321037, 1.11", "17.4241, 37.1992, -0.294369, 1.11", "18.4191, 37.6958, 0.22926, 0.52", "19.9363, 38.468, 1.13064, 0.52", "21.7412, 39.3149, 2.33525, 0.52", "23.0887, 39.9077, 3.30998, 0.52", "23.1909, 39.9481, 3.3867, 0.52", "24.2658, 40.3532, 4.2003, 0.52", "26.3251, 41.0674, 5.75891, 0.52", "28.1015, 41.5964, 6.99101, 0.52", "28.1795, 41.6139, 7.04137, 0.52", "28.8362, 41.7252, 7.50383, 0.74", "29.2944, 41.8168, 7.84842, 0.74", "30.131, 41.9854, 8.51338, 0.74", "30.2201, 42.0106, 8.58488, 0.74", "31.8186, 42.3367, 9.55955, 0.74", "32.0454, 42.3678, 9.68166, 0.74", "32.9362, 42.4498, 10.0968, 0.37", "34.0967, 42.5616, 10.6396, 0.29", "34.8911, 42.6485, 10.9988, 0.29", "35.9247, 42.8006, 11.4301, 0.74", "36.1752, 42.8434, 11.5184, 0.74", "37.0106, 43.0387, 11.9191, 0.74", "38.2319, 43.4123, 12.6687, 1.03", "38.3049, 43.4381, 12.7233, 1.03", "38.8872, 43.6359, 13.2297, 1.47", "39.6977, 43.8295, 13.9978, 0.96", "40.8113, 43.9522, 15.0176, 0.52", "40.8744, 43.9498, 15.0705, 0.52", "41.4271, 43.8989, 15.458, 0.37", "41.5239, 43.8932, 15.5228, 0.37", "42.3357, 43.9586, 15.9852, 0.37", "42.4089, 43.9801, 16.0174, 0.37", "43.1371, 44.2898, 16.2577, 0.37", "43.7704, 44.62, 16.4471, 0.37", "43.9263, 44.713, 16.4915, 0.37", "45.2115, 45.4962, 16.8301, 0.37", "45.6059, 45.7456, 16.9302, 0.59", "46.4028, 46.2383, 17.1905, 0.59", "47.4566, 46.8896, 17.5901, 0.37", "48.5378, 47.5496, 18.0429, 0.37", "49.5417, 48.173, 18.5243, 1.18", "50.5012, 48.7747, 19.0461, 1.47", "51.8398, 49.6115, 19.8456, 0.81", "52.4375, 49.9773, 20.2375, 0.29", "53.0914, 50.3644, 20.7109, 0.22", "53.6012, 50.6557, 21.0927, 0.81", "53.8008, 50.7515, 21.2313, 0.81", "54.4687, 51.0396, 21.6809, 0.96", "55.419, 51.4038, 22.2544, 0.96", "55.5218, 51.4393, 22.3177, 0.96", "55.9722, 51.5754, 22.6021, 0.44", "57.2894, 51.8838, 23.4005, 0.44", "58.7157, 52.0882, 24.4576, 0.37", "59.1846, 52.1157, 24.8594, 0.88", "59.7959, 52.1124, 25.4049, 1.18", "60.7084, 52.0514, 26.2113, 0.74", "61.7534, 51.9576, 27.1583, 0.44", "63.8065, 51.8369, 29.0214, 0.44", "64.6936, 51.8226, 29.8326, 0.44", "65.4181, 51.8932, 30.5168, 1.03", "66.2418, 52.0439, 31.3128, 1.69", "67.3254, 52.3818, 32.4053, 0.52", "68.363, 52.8268, 33.4791, 0.52", "69.7048, 53.5016, 34.7878, 0.44", "71.1858, 54.2712, 36.3128, 0.44", "71.231, 54.2951, 36.3624, 0.44", "72.5624, 54.933, 37.8089, 1.25", "72.6197, 54.9526, 37.8654, 1.25", "73.461, 55.1325, 38.6025, 1.84", "74.7752, 55.3367, 39.4745, 0.44", "74.8459, 55.3425, 39.5166, 0.44", "76.0046, 55.364, 40.1468, 0.29", "76.7439, 55.2809, 40.529, 0.52", "77.3992, 55.1198, 40.9706, 0.52", "78.2699, 54.8772, 41.6516, 0.44", "79.3901, 54.5413, 42.5924, 0.44", "79.977, 54.4054, 43.1711, 0.88", "80.8912, 54.2302, 44.2291, 0.81", "82.0776, 54.0719, 45.8125, 0.44", "83.0689, 53.986, 47.2568, 0.44", "83.1229, 53.9848, 47.334, 0.44", "84.2458, 54.1072, 48.7755, 0.44", "84.3047, 54.1186, 48.8482, 0.44", "85.5315, 54.4267, 50.2916, 0.44", "85.5941, 54.444, 50.3602, 0.44", "86.4719, 54.6213, 51.3297, 0.44", "86.5298, 54.6309, 51.3877, 0.44", "87.9836, 54.7461, 52.6984, 0.44", "88.0468, 54.7464, 52.7512, 0.44", "88.8477, 54.7145, 53.3451, 0.44", "88.9007, 54.711, 53.3917, 0.44", "89.0818, 54.696, 53.5763, 0.66", "90.0586, 54.6205, 54.5143, 0.29", "90.9388, 54.5111, 55.3668, 0.29", "91.0046, 54.5004, 55.4334, 0.29", "92.2572, 54.2286, 56.7909, 0.29", "92.3362, 54.2133, 56.8753, 0.29", "93.366, 54.0627, 57.9641, 0.29", "103.54, 57.4512, 62.985, 0.29", "112.734, 61.5018, 69.2937, 0.29", "121.24, 63.3416, 77.2644, 0.29", "129.118, 62.8276, 86.0007, 0.29", "136.792, 61.925, 94.8859, 0.29", "144.531, 62.0761, 103.763, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.473385, 30.6466, 1.78064, 1.84", "-0.362521, 31.1917, 1.81307, 1.84", "-0.189026, 32.1922, 1.91166, 1.03", "-0.178736, 32.2548, 1.91874, 1.03", "-0.0862318, 32.8523, 1.98877, 1.03", "0.0124382, 33.778, 2.08693, 1.03", "0.0662052, 34.7987, 2.20339, 1.03", "0.0386972, 36.3626, 2.40171, 1.03", "0.0355692, 36.4099, 2.40822, 1.03", "-0.0635698, 37.3913, 2.51065, 1.18", "-0.236205, 38.6891, 2.60717, 1.18", "-0.422559, 39.8314, 2.65867, 1.18", "-0.654406, 41.1066, 2.62995, 1.18", "-0.664461, 41.1613, 2.6254, 1.18", "-0.82985, 42.143, 2.50215, 1.18", "-0.96311, 42.9913, 2.33306, 1.18", "-0.97066, 43.0521, 2.31642, 1.18", "-1.07106, 43.9774, 1.99992, 0.96", "-1.21006, 44.9547, 1.66464, 0.96", "-1.21976, 45.0068, 1.64854, 0.96", "-1.43733, 45.8327, 1.44153, 1.18", "-1.64859, 46.4892, 1.2856, 1.18", "-1.6651, 46.5401, 1.27154, 1.18", "-2.0459, 47.5806, 1.16638, 1.18", "-2.07397, 47.6539, 1.16637, 1.18", "-2.46686, 48.6439, 1.24695, 1.18", "-2.49087, 48.702, 1.25476, 1.18", "-3.18303, 50.3028, 1.56403, 1.18", "-4.22206, 52.6441, 2.11562, 1.18", "-4.28589, 52.7873, 2.15657, 1.18", "-5.05342, 54.4801, 2.72656, 1.18", "-5.20282, 54.801, 2.85429, 1.18", "-5.54211, 55.5068, 3.16502, 1.18", "-5.57618, 55.5748, 3.19949, 1.18", "-5.88184, 56.263, 3.45156, 1.18", "-6.20993, 57.0441, 3.79013, 1.18", "-6.22455, 57.0834, 3.8119, 1.18", "-6.40257, 57.6637, 4.12818, 0.88", "-6.42057, 57.7314, 4.16294, 0.88", "-6.57776, 58.5511, 4.48652, 0.88", "-6.58759, 58.6447, 4.51067, 0.88", "-6.62848, 59.6797, 4.63191, 1.11", "-6.63487, 60.4982, 4.66809, 1.11", "-6.63419, 60.5461, 4.66634, 1.11", "-6.60361, 62.1008, 4.52841, 1.33", "-6.58289, 62.7122, 4.45949, 1.4", "-6.56849, 63.3738, 4.40426, 1.18", "-6.56865, 63.4376, 4.40053, 1.18", "-6.60916, 64.5734, 4.38577, 1.03", "-6.6134, 64.6291, 4.3878, 1.03", "-6.78608, 66.1586, 4.5245, 1.03", "-6.9541, 67.5083, 4.6551, 1.03", "-7.10092, 68.6316, 4.76663, 1.03", "-7.20307, 69.3386, 4.83743, 1.47", "-7.32876, 70.248, 4.91743, 1.47", "-7.43812, 71.1161, 4.97434, 1.47", "-7.44363, 71.1636, 4.9761, 1.47", "-7.52727, 72.0449, 5.03913, 1.47", "-7.57562, 72.7379, 5.11366, 0.88", "-7.63296, 74.1628, 5.31919, 0.66", "-7.63944, 75.1384, 5.49511, 0.66", "-7.63842, 75.2166, 5.51104, 0.66", "-7.60687, 76.7155, 5.94898, 0.66", "-7.60498, 76.7749, 5.97159, 0.66", "-7.58957, 77.2641, 6.19351, 1.33", "-7.58199, 77.9297, 6.55205, 1.69", "-7.57925, 78.6431, 6.93413, 1.69", "-7.56, 80.174, 7.62437, 1.33", "-7.55888, 80.2272, 7.64105, 1.33", "-7.55756, 80.6974, 7.76139, 1.18", "-7.55708, 80.8078, 7.77926, 1.18", "-7.54418, 81.6878, 7.83562, 1.18", "-7.50863, 82.4525, 7.79176, 1.18", "-7.42103, 83.5853, 7.60172, 0.96", "-7.40805, 83.7063, 7.57503, 0.96", "-7.28915, 84.5422, 7.35975, 0.96", "-7.28136, 84.5952, 7.34484, 0.96", "-7.11424, 85.6541, 7.02013, 0.96", "-7.1085, 85.6996, 7.00684, 0.96", "-6.99546, 86.7455, 6.68471, 0.74", "-6.9772, 87.1532, 6.5746, 1.03", "-7.02508, 87.8875, 6.44735, 1.03", "-7.03191, 87.9347, 6.44428, 1.03", "-7.16629, 88.6497, 6.45115, 1.03", "-7.17688, 88.7043, 6.45442, 1.03", "-7.36228, 89.6436, 6.55096, 0.81", "-7.55851, 90.7178, 6.67576, 0.81", "-7.90524, 92.8065, 6.95568, 0.81", "-8.0079, 93.5594, 7.05406, 0.81", "-8.06734, 94.1439, 7.12455, 1.18", "-8.12175, 94.8437, 7.18695, 1.55", "-8.16291, 95.68, 7.23559, 1.55", "-8.16632, 95.8317, 7.23341, 1.55", "-8.1718, 96.5483, 7.17899, 1.4", "-8.20515, 97.3309, 7.06788, 1.25", "-8.28327, 98.4268, 6.85573, 1.11", "-8.28768, 98.4731, 6.84508, 1.11", "-8.40271, 99.4236, 6.60832, 0.96", "-8.40889, 99.4695, 6.59702, 0.96", "-8.61742, 100.812, 6.27187, 0.96", "-8.62483, 100.865, 6.25945, 0.96", "-8.81278, 102.501, 5.90842, 0.96", "-8.89739, 103.418, 5.73981, 1.11", "-8.90189, 103.481, 5.72994, 1.11", "-8.93219, 104.034, 5.67426, 1.4", "-8.96052, 104.914, 5.63683, 1.4", "-8.9878, 105.687, 5.64064, 1.03", "-9.02246, 106.919, 5.7184, 0.74", "-9.02354, 106.967, 5.72288, 0.74", "-9.05041, 108.098, 5.84582, 0.74", "-9.05843, 108.503, 5.91607, 1.18", "-9.06044, 109.316, 6.10044, 1.18", "-9.04458, 110.111, 6.31363, 1.18", "-9.04275, 110.166, 6.3267, 1.18", "-9.01449, 111.201, 6.52128, 0.88", "-8.97901, 112.473, 6.6936, 0.74", "-8.97417, 113.47, 6.77618, 0.74", "-8.97647, 113.518, 6.77591, 0.74", "-9.08538, 114.648, 6.63469, 0.74", "-9.19646, 115.543, 6.43524, 0.74", "-9.20227, 115.588, 6.42101, 0.74", "-9.32348, 116.49, 6.06672, 1.18", "-9.4695, 117.589, 5.62193, 1.69", "-9.56445, 118.356, 5.31934, 1.69", "-9.63404, 119.014, 5.07764, 1.69", "-9.69579, 119.871, 4.75645, 1.69", "-9.6981, 119.931, 4.73566, 1.69", "-9.67879, 120.23, 4.65293, 1.69" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-61.3305, 74.8138, 117.303, 0.37", "-65.0815, 77.617, 122.322, 0.37", "-68.307, 80.4538, 127.68, 0.37", "-70.9822, 83.1601, 133.395, 0.37", "-74.9279, 86.3729, 138.022, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-61.3305, 74.8138, 117.303, 0.52", "-62.6698, 80.2565, 129.204, 0.37", "-66.6604, 82.9026, 141.384, 0.37", "-73.9377, 83.8977, 152.196, 0.37", "-80.1085, 84.8723, 163.677, 0.37", "-87.6102, 85.3345, 174.368, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "50.2114, -23.7759, 29.3953, 0.37", "60.1706, -24.8524, 32.6163, 0.37", "69.5204, -25.7786, 37.3624, 0.37", "77.4178, -27.2888, 44.195, 0.37", "85.2877, -30.3684, 50.575, 0.37", "94.6275, -32.6143, 54.918, 0.37", "104.384, -35.7473, 57.403, 0.37", "114.387, -36.5578, 60.5615, 0.37", "124.149, -38.7359, 63.8642, 0.37", "133.546, -41.5049, 67.7771, 0.37", "143.376, -42.149, 71.4737, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "50.2114, -23.7759, 29.3953, 0.52", "54.5323, -29.0581, 36.1618, 0.37", "60.5834, -33.0831, 42.3292, 0.37", "65.5506, -38.666, 48.3809, 0.37", "71.8343, -43.8101, 53.451, 0.37", "77.9419, -49.2522, 58.4552, 0.37", "82.9652, -54.5497, 64.691, 0.37", "88.186, -58.9346, 71.3884, 0.37", "94.2132, -62.5764, 77.791, 0.37", "99.3239, -67.2066, 84.4254, 0.37", "103.394, -73.7187, 90.3147, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "29.6365, -20.3273, 16.0819, 0.74", "29.2363, -24.1742, 10.1559, 0.74", "29.1214, -25.2014, 8.83834, 0.74", "29.0945, -25.4154, 8.63122, 0.74", "28.9543, -26.461, 7.81712, 0.74", "28.9476, -26.5623, 7.77313, 0.74", "28.9251, -27.4956, 7.51893, 0.96", "28.98, -27.98, 7.64411, 0.96", "29.1971, -29.1485, 8.01684, 0.96", "29.2194, -29.2379, 8.0485, 0.96", "30.0199, -31.7562, 9.03549, 0.81", "30.0575, -31.8513, 9.07811, 0.81", "31.1644, -34.3033, 10.2466, 0.81", "31.5911, -35.262, 10.6921, 1.11", "31.6275, -35.3434, 10.7298, 1.11", "31.7578, -35.669, 10.871, 1.11", "32.4808, -37.6915, 11.7041, 0.66", "32.9641, -39.1526, 12.307, 0.66", "33.6621, -41.2576, 13.1, 0.66", "33.6878, -41.3321, 13.127, 0.66", "34.346, -43.2027, 13.7689, 0.66", "34.3883, -43.318, 13.8053, 0.66", "35.369, -45.9135, 14.5569, 0.66", "36.3259, -48.3216, 15.2479, 0.52", "36.3613, -48.409, 15.271, 0.52", "36.7932, -49.4829, 15.5298, 0.52", "37.7691, -51.949, 16.1071, 0.52", "38.1244, -52.9314, 16.3253, 0.81", "38.4938, -54.0674, 16.5524, 0.81", "39.1098, -56.1758, 17.0146, 0.81", "39.1736, -56.3985, 17.0638, 0.81", "39.8224, -58.7135, 17.5872, 0.59", "40.03, -59.4086, 17.7354, 1.11", "40.2612, -60.0985, 17.8755, 1.11", "40.5747, -60.8943, 18.0083, 0.59", "41.2625, -62.5128, 18.2158, 0.59", "41.3068, -62.614, 18.2258, 0.59", "42.4552, -64.9631, 18.2936, 0.59", "42.5008, -65.0483, 18.2948, 0.59", "43.0888, -66.1035, 18.2895, 0.81", "43.1391, -66.1856, 18.286, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "29.6365, -20.3273, 16.0819, 0.74", "31.2833, -19.4777, 15.1293, 0.74", "31.3552, -19.4456, 15.1151, 0.74", "32.1392, -19.2568, 15.4147, 0.74", "32.287, -19.2475, 15.5127, 0.74", "33.0308, -19.3071, 16.143, 0.74", "33.125, -19.356, 16.2768, 0.74", "33.6963, -19.916, 17.4529, 0.74", "34.2863, -20.9648, 19.0558, 0.74", "34.5935, -21.6164, 19.9523, 0.74", "34.6406, -21.7224, 20.0907, 0.74", "35.2207, -22.8834, 21.4803, 0.74", "35.2487, -22.9333, 21.5375, 0.74", "35.9881, -24.0517, 22.6058, 0.66", "37.2706, -25.6117, 23.9045, 0.66", "37.3761, -25.7209, 23.9882, 0.66", "38.9322, -27.1529, 24.9366, 0.66", "39.0171, -27.2228, 24.9715, 0.66", "40.5977, -28.5015, 25.4732, 0.66", "40.6578, -28.5537, 25.4882, 0.66", "41.8312, -29.7119, 25.7227, 0.66", "42.5264, -30.4888, 25.8891, 1.03", "43.3443, -31.5966, 26.1345, 1.03", "43.3894, -31.6614, 26.156, 1.03", "44.75, -33.7193, 26.9909, 0.74", "45.7125, -35.212, 27.6233, 0.74", "46.9218, -37.0881, 28.4074, 0.74", "48.6183, -39.7472, 29.5333, 0.74", "50.0527, -41.9601, 30.5083, 0.74", "51.3365, -43.8829, 31.3711, 0.74", "51.3809, -43.9452, 31.3998, 0.74", "53.0713, -46.1332, 32.4794, 0.74", "53.1219, -46.1883, 32.5107, 0.74", "54.2042, -47.0916, 33.2069, 0.74", "54.2619, -47.1336, 33.2441, 0.74", "54.7375, -47.459, 33.5837, 0.52", "55.6177, -48.1403, 34.1939, 0.52", "56.821, -49.2738, 35.0628, 0.52", "58.4624, -51.0399, 36.1895, 0.52", "58.5095, -51.0973, 36.2226, 0.52", "60.0473, -53.12, 37.316, 0.52", "61.0063, -54.5576, 38.0124, 0.52", "61.962, -56.2637, 38.6603, 0.52", "61.9965, -56.3374, 38.674, 0.52", "62.426, -57.409, 38.7023, 0.74", "69.9588, -64.8086, 43.4231, 0.74", "78.5139, -70.7987, 48.2133, 0.74", "86.9354, -76.0501, 53.9368, 0.74", "93.5596, -82.2878, 60.9763, 0.74", "99.6229, -88.3681, 68.6208, 0.74", "107.765, -93.2522, 75.0068, 0.74", "115.929, -98.5042, 81.0916, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.50773, 105.146, 0.838877, 0.96", "-4.27173, 104.349, 0.705726, 0.96", "-4.1769, 103.987, 0.664622, 0.44", "-3.85856, 102.681, 0.559041, 0.44", "-3.63625, 101.769, 0.485311, 0.44", "-3.42269, 100.893, 0.41448, 0.66", "-3.17541, 99.8781, 0.332463, 1.55", "-2.9261, 98.9064, 0.256462, 1.11", "-2.78409, 98.3174, 0.229515, 0.37", "-0.96413, 86.9244, 0.907129, 0.37", "-1.44527, 75.428, -0.0297152, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.50773, 105.146, 0.838877, 0.52", "-3.22106, 105.625, -0.356148, 0.52", "-3.0905, 105.673, -0.50081, 0.29", "-2.80429, 105.772, -0.830944, 0.29", "-2.22782, 105.973, -1.4959, 0.29", "-2.14559, 106.002, -1.59075, 0.29", "-1.48627, 106.231, -2.35126, 0.29", "-0.335003, 106.629, -3.27759, 0.29", "-0.234071, 106.664, -3.36371, 0.29", "9.05613, 110.418, -10.2069, 0.29", "19.2853, 112.257, -16.367, 0.29", "28.3023, 112.964, -24.3578, 0.29", "37.5437, 111.817, -32.0213, 0.29", "45.1637, 112.738, -41.3428, 0.29", "52.8638, 115.421, -50.2984, 0.29", "60.8069, 118.092, -59.0409, 0.29", "70.4827, 119.614, -66.1087, 0.29", "81.3722, 120.806, -71.1749, 0.29", "92.5703, 123.884, -74.5676, 0.29", "102.847, 129.48, -77.9692, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "40.4104, 76.8294, 2.70605, 1.33", "40.509, 78.0255, 3.0936, 1.33", "40.6042, 78.8142, 3.31642, 1.33", "40.6891, 79.4254, 3.43083, 1.03", "40.7678, 79.9778, 3.50466, 1.03", "40.9504, 81.2131, 3.63514, 0.59", "41.0799, 81.954, 3.69612, 0.59", "41.1868, 82.4409, 3.69077, 0.88", "41.4489, 83.2938, 3.64892, 0.59", "41.6823, 83.8547, 3.54263, 0.44", "41.711, 83.9101, 3.52426, 0.44", "42.2093, 84.7294, 3.14028, 0.44", "42.329, 84.913, 3.04184, 0.44", "42.7091, 85.5016, 2.74791, 0.44", "43.4504, 86.7471, 2.10416, 0.44", "43.4808, 86.8066, 2.07263, 0.44", "43.6835, 87.3836, 1.72312, 0.44", "43.711, 87.5092, 1.64744, 0.44", "43.8345, 88.3995, 1.14843, 0.44", "43.9117, 89.3903, 0.651577, 0.74", "43.9427, 89.8935, 0.425961, 0.96", "44.0951, 91.7352, -0.436796, 1.03", "44.1728, 92.469, -0.790667, 1.03", "44.2617, 93.127, -1.11247, 0.37", "44.3345, 93.5591, -1.32615, 0.37", "44.3593, 93.6864, -1.37814, 0.37", "44.4553, 94.1981, -1.55853, 0.37", "44.5569, 94.7613, -1.66736, 0.37", "44.6506, 95.6492, -1.8328, 0.37", "44.6519, 95.7484, -1.84655, 0.37", "44.597, 96.1967, -1.961, 0.88", "44.4608, 96.8291, -2.1581, 0.88", "44.4444, 96.8892, -2.17781, 0.88", "44.2948, 97.3998, -2.35685, 0.88", "44.2778, 97.4672, -2.38365, 0.88", "44.0287, 98.7656, -2.99696, 0.66", "44.0147, 98.9453, -3.093, 0.44", "44.0274, 99.4867, -3.40945, 0.44", "44.0379, 99.5945, -3.49504, 0.44", "44.1444, 100.087, -3.93324, 1.18", "44.1656, 100.157, -3.99743, 1.18", "44.3456, 100.607, -4.38089, 1.18", "44.3648, 100.655, -4.41855, 1.18", "44.8965, 102.28, -5.36695, 0.59", "44.9929, 102.868, -5.68614, 0.59", "44.9953, 102.926, -5.7144, 0.59", "44.9475, 103.524, -5.97369, 0.59", "44.827, 104.227, -6.24591, 1.25", "44.569, 105.387, -6.58963, 1.55", "43.9578, 107.641, -7.057, 0.74", "43.7985, 108.152, -7.16029, 0.59", "43.5539, 108.897, -7.30751, 0.59", "43.5063, 109.03, -7.34623, 0.59", "43.1992, 109.88, -7.66436, 0.59", "42.8741, 110.815, -8.04961, 0.96", "42.6901, 111.445, -8.31679, 0.96", "42.6755, 111.501, -8.34604, 0.96", "42.3267, 113.052, -9.34896, 0.81", "42.1909, 113.816, -9.89636, 0.59", "42.1821, 113.882, -9.94933, 0.59", "42.0833, 114.912, -10.8339, 0.44", "42.0792, 114.969, -10.8801, 0.44", "42.0379, 115.845, -11.4737, 0.37", "42.0459, 116.684, -11.8734, 0.37", "42.0488, 116.744, -11.8985, 0.37", "42.1392, 117.605, -12.1689, 0.96", "42.2849, 118.511, -12.3399, 1.18", "42.4017, 118.977, -12.3983, 1.18", "42.5933, 119.538, -12.4149, 0.59", "42.6854, 119.721, -12.433, 0.59", "43.096, 120.374, -12.5205, 0.59", "43.14, 120.433, -12.5304, 0.59", "43.7603, 121.235, -12.7411, 0.59", "43.8786, 121.393, -12.7893, 0.59", "44.8381, 122.811, -13.3927, 0.59", "44.9043, 122.92, -13.4463, 0.59", "45.2001, 123.455, -13.7344, 0.96", "45.5517, 124.137, -14.1202, 1.18", "45.7782, 124.595, -14.3835, 1.18", "46.3609, 125.715, -15.0189, 0.44", "46.3883, 125.767, -15.0459, 0.44", "46.693, 126.357, -15.3422, 0.44", "46.7197, 126.411, -15.3652, 0.44", "47.1648, 127.333, -15.6767, 0.44", "47.2684, 127.579, -15.7244, 1.33", "47.4384, 128.044, -15.758, 1.33", "47.7291, 129.0, -15.8584, 0.52", "47.926, 129.847, -15.9505, 0.52", "47.9518, 129.992, -15.9649, 0.52", "48.1679, 131.764, -16.1264, 0.52", "48.2562, 132.789, -16.2073, 0.52", "48.3328, 133.934, -16.2742, 1.25", "48.3818, 134.839, -16.3004, 1.62", "48.4148, 135.413, -16.2903, 1.62", "48.4763, 136.338, -16.2344, 0.59", "48.5249, 136.97, -16.1571, 0.44", "48.6301, 137.809, -15.984, 0.44", "48.6817, 138.098, -15.9029, 0.44", "49.0244, 139.752, -15.4254, 0.44", "49.0444, 139.839, -15.3994, 0.44", "49.283, 140.884, -15.1317, 1.03", "49.4632, 141.702, -14.9593, 1.62", "49.5841, 142.439, -14.8498, 1.62", "49.6777, 143.189, -14.7865, 0.88", "49.6823, 143.255, -14.7874, 0.88", "49.7529, 144.645, -14.832, 0.66", "49.7534, 144.719, -14.842, 0.66", "49.7099, 146.062, -15.1204, 0.59", "49.7007, 146.199, -15.153, 0.59", "49.6228, 147.19, -15.3871, 0.96", "49.5512, 147.997, -15.5694, 0.96", "49.438, 149.414, -15.8889, 0.59", "49.4355, 149.478, -15.9041, 0.59", "49.4506, 150.071, -16.0528, 0.52", "49.5313, 150.806, -16.2278, 0.52", "49.5808, 151.088, -16.2849, 0.52", "49.793, 152.057, -16.4445, 0.81", "49.9699, 152.805, -16.5142, 1.33", "50.1271, 153.492, -16.5781, 1.33", "50.3433, 154.513, -16.6693, 0.44", "50.4281, 155.07, -16.7087, 0.44", "50.4323, 155.136, -16.7094, 0.44", "50.4249, 155.762, -16.701, 0.44", "50.4201, 155.894, -16.699, 0.44", "50.3946, 156.483, -16.6864, 0.44", "50.4091, 156.86, -16.6747, 0.44", "50.554, 157.822, -16.6787, 0.44", "50.7413, 158.562, -16.7438, 0.74", "50.9236, 159.077, -16.8316, 0.96", "50.9513, 159.145, -16.8466, 0.96", "51.2614, 159.786, -17.0212, 0.96", "51.3212, 159.908, -17.0546, 0.96", "51.7164, 160.751, -17.2619, 0.44", "51.7417, 160.81, -17.2714, 0.44", "52.0185, 161.541, -17.3515, 0.37", "52.176, 161.956, -17.3765, 0.96", "52.5085, 162.839, -17.3935, 1.03", "52.8562, 163.638, -17.3814, 0.74", "53.0964, 164.132, -17.3523, 0.52", "53.4814, 164.814, -17.3125, 0.44", "53.9655, 165.541, -17.2712, 0.44", "54.0867, 165.688, -17.272, 0.44", "54.7762, 166.324, -17.3363, 0.44", "54.8283, 166.371, -17.3573, 0.44", "55.219, 166.784, -17.6449, 0.44", "55.2503, 166.829, -17.6782, 0.44", "55.5797, 167.685, -18.2558, 0.44", "55.589, 167.741, -18.287, 0.44", "55.6732, 169.523, -19.249, 1.11", "55.6935, 170.152, -19.5727, 1.55", "55.6972, 170.95, -19.9541, 1.55", "55.7091, 172.073, -20.4521, 0.66", "55.716, 173.414, -20.9951, 0.66", "55.7666, 174.56, -21.4298, 0.44", "55.8776, 175.561, -21.759, 0.44", "55.936, 175.902, -21.8968, 0.44", "56.1613, 176.566, -22.2085, 0.44", "56.1908, 176.618, -22.2343, 0.44", "56.3932, 176.88, -22.3917, 0.88", "56.6651, 177.22, -22.5943, 0.88", "57.2618, 178.021, -23.1894, 0.37", "57.8646, 178.886, -23.8546, 0.37", "57.8974, 178.939, -23.8933, 0.37", "58.4023, 179.822, -24.4894, 1.18", "58.7035, 180.391, -24.8472, 1.55", "59.1425, 181.297, -25.3427, 0.52", "59.4413, 181.971, -25.63, 0.52", "59.6941, 182.613, -25.8688, 0.52", "59.7514, 182.757, -25.9042, 1.03", "59.8345, 182.955, -25.9289, 1.03", "60.0606, 183.476, -25.922, 0.52", "60.2252, 183.858, -25.8679, 0.37", "60.4801, 184.453, -25.7609, 0.29", "60.9389, 185.511, -25.5426, 0.29", "61.1243, 185.965, -25.4418, 0.88", "61.5209, 187.015, -25.2388, 0.88", "61.7058, 187.55, -25.1465, 0.52", "61.8577, 188.084, -25.1014, 0.37", "61.8794, 188.175, -25.1033, 0.37", "62.1308, 189.322, -25.2543, 0.37", "62.32, 190.221, -25.4469, 1.11", "62.4539, 190.861, -25.6422, 1.11", "62.7171, 192.053, -26.0492, 0.37", "62.8525, 192.594, -26.2503, 0.15", "63.0447, 193.217, -26.4927, 0.15", "63.0679, 193.273, -26.5172, 0.15", "63.3581, 193.739, -26.7029, 0.15", "63.4174, 193.804, -26.726, 0.15", "63.7745, 194.081, -26.7701, 0.15", "64.1435, 194.31, -26.7921, 0.74", "64.3068, 194.4, -26.7959, 0.74", "65.0017, 194.768, -26.8014, 0.74", "65.3481, 194.941, -26.7991, 0.74", "65.8437, 195.219, -26.786, 0.22", "66.1336, 195.401, -26.7734, 0.15", "66.6253, 195.771, -26.8169, 0.15", "66.679, 195.819, -26.8289, 0.15", "66.8358, 195.987, -26.8892, 0.81", "67.3143, 196.484, -27.1215, 1.03", "67.6599, 196.828, -27.3455, 1.03", "68.4649, 197.594, -27.9044, 0.37", "68.7128, 197.837, -28.0895, 0.37", "68.7555, 197.883, -28.1264, 0.37", "69.3682, 198.601, -28.712, 0.37", "70.012, 199.454, -29.4648, 0.37", "70.2826, 199.847, -29.805, 0.74", "70.6238, 200.368, -30.2347, 1.33", "71.1904, 201.232, -30.9726, 0.66", "71.2182, 201.274, -31.0115, 0.66", "71.7962, 202.17, -31.8522, 0.37", "72.0558, 202.547, -32.1927, 0.37", "72.0921, 202.593, -32.2362, 0.37", "72.6221, 203.153, -32.7723, 0.37", "73.2832, 203.788, -33.3078, 0.74", "73.7603, 204.279, -33.6452, 0.74", "74.098, 204.654, -33.8237, 0.07", "74.2392, 204.873, -33.8889, 0.37", "74.2676, 204.931, -33.8982, 0.37", "74.4347, 205.395, -33.9047, 0.37", "74.6176, 205.91, -33.8484, 0.37", "74.6427, 205.971, -33.8419, 0.37", "75.1273, 206.965, -33.7469, 0.37", "75.1598, 207.033, -33.7487, 0.37", "75.3803, 207.468, -33.8078, 1.03", "75.4268, 207.552, -33.8298, 1.03", "75.8566, 208.253, -34.0965, 1.03", "75.8848, 208.296, -34.1171, 1.03", "76.4655, 209.132, -34.6457, 0.44", "76.5086, 209.203, -34.685, 0.44", "76.6962, 209.549, -34.865, 0.44", "76.8274, 209.844, -34.9783, 0.44", "76.9117, 210.071, -35.0384, 0.44", "76.9367, 210.14, -35.0552, 0.44", "77.2066, 210.829, -35.1855, 0.44", "77.2267, 210.89, -35.1977, 0.44", "77.4018, 211.477, -35.3033, 0.44", "77.4207, 211.539, -35.3124, 0.44", "77.7346, 212.516, -35.4367, 0.74", "77.9767, 213.159, -35.5088, 1.25", "78.3078, 213.912, -35.5503, 1.25", "78.4843, 214.317, -35.5444, 0.59", "78.8115, 215.046, -35.5165, 0.59", "78.8386, 215.105, -35.5111, 0.59", "79.1608, 215.803, -35.4049, 0.59", "79.4317, 216.382, -35.3174, 0.29", "79.671, 216.862, -35.2541, 0.29", "80.1438, 217.842, -35.1504, 0.29", "80.6601, 218.949, -35.0509, 0.29", "80.6873, 219.009, -35.0472, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "40.4104, 76.8294, 2.70605, 0.52", "40.7523, 76.9645, 2.77622, 0.52", "40.8731, 76.9958, 2.79274, 0.52", "40.9786, 77.0198, 2.80564, 0.52", "41.1166, 77.0406, 2.83411, 0.52", "41.8869, 77.1354, 3.01172, 0.52", "42.0082, 77.1494, 3.04084, 0.52", "42.8457, 77.2346, 3.2278, 0.52", "42.9105, 77.2429, 3.24261, 0.52", "43.9848, 77.4034, 3.49246, 0.52", "44.1056, 77.4238, 3.52082, 0.52", "44.2382, 77.4511, 3.55092, 0.96", "44.2926, 77.4655, 3.56787, 0.96", "44.771, 77.6165, 3.73672, 0.37", "44.8308, 77.6387, 3.75816, 0.37", "45.5461, 77.9525, 3.99953, 0.37", "46.1045, 78.2044, 4.21902, 0.37", "47.7262, 78.9438, 4.90936, 0.37", "47.917, 79.0279, 4.99207, 0.74", "48.3134, 79.1948, 5.17584, 0.59", "49.3117, 79.6244, 5.6645, 0.44", "50.2569, 80.0646, 6.15152, 0.44", "50.33, 80.1002, 6.18926, 0.44", "50.9208, 80.3957, 6.6455, 0.44", "51.3499, 80.5987, 7.04091, 0.81", "51.4338, 80.6364, 7.12724, 0.81", "51.8793, 80.8295, 7.63304, 0.81", "51.9168, 80.8455, 7.67549, 0.81", "53.7117, 81.7299, 9.81117, 0.37", "54.5024, 82.1749, 10.82, 0.37", "54.5852, 82.2246, 10.9258, 0.37", "54.9404, 82.4459, 11.3837, 0.88", "55.0703, 82.5407, 11.5682, 1.18", "55.5684, 83.0293, 12.3101, 0.44", "55.6033, 83.0898, 12.3685, 0.44", "55.6234, 83.1548, 12.4376, 0.44", "55.6989, 83.5092, 12.8133, 0.44", "55.7514, 84.1684, 13.4967, 0.59", "55.7557, 84.4671, 13.8355, 0.59", "55.7507, 84.7102, 14.1904, 0.59", "62.3372, 88.2455, 18.1136, 0.59", "68.0115, 92.5203, 22.74, 0.59", "72.8404, 98.1723, 26.9725, 0.59", "78.2347, 103.274, 31.1522, 0.59", "83.0436, 109.393, 34.7712, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-78.0623, 52.7052, -134.663, 0.37", "-76.9108, 53.1118, -135.071, 0.37", "-76.8706, 53.1199, -135.087, 0.37", "-76.0547, 53.2682, -135.416, 0.37", "-75.0329, 53.4477, -135.827, 0.37", "-74.9866, 53.4558, -135.846, 0.37", "-72.9709, 53.8097, -136.657, 0.29", "-68.2416, 54.6126, -138.41, 0.29", "-67.7969, 54.6844, -138.578, 1.18", "-67.7562, 54.6904, -138.594, 1.18" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-78.0623, 52.7052, -134.663, 0.52", "-79.176, 53.9188, -136.285, 0.52", "-79.2245, 53.9714, -136.365, 0.52", "-80.9131, 55.7934, -138.967, 0.37", "-81.8901, 56.8468, -140.44, 0.37", "-82.2836, 57.2736, -141.046, 0.37", "-83.7233, 58.8517, -143.286, 0.37", "-85.1308, 60.4366, -145.687, 0.37", "-86.0904, 61.5327, -147.247, 0.37", "-86.1185, 61.565, -147.29, 0.37", "-86.9424, 62.5528, -148.697, 0.59", "-87.2423, 62.9314, -149.264, 0.59", "-88.4005, 64.4367, -151.527, 0.37", "-89.1052, 65.3281, -152.837, 0.37", "-89.1349, 65.3608, -152.892, 0.37", "-90.3819, 66.5404, -154.9, 0.37", "-90.4597, 66.6002, -155.014, 0.37", "-90.9305, 66.8919, -155.674, 0.37", "-91.0377, 66.9416, -155.796, 0.37", "-92.0364, 67.3746, -156.872, 0.37", "-92.1327, 67.4221, -156.976, 0.37", "-93.9364, 68.374, -158.817, 0.37", "-94.0444, 68.4456, -158.941, 0.37", "-94.9534, 69.1709, -160.017, 0.37", "-95.0716, 69.2807, -160.146, 0.37", "-96.3907, 70.6509, -161.521, 0.37", "-96.428, 70.6933, -161.563, 0.37", "-98.0605, 72.6526, -163.496, 0.37", "-98.7081, 73.4738, -164.312, 0.37", "-99.6194, 74.6894, -165.531, 0.37", "-99.6856, 74.7797, -165.618, 0.37", "-101.748, 77.7115, -168.194, 0.15", "-101.78, 77.7583, -168.238, 0.15", "-102.154, 78.4273, -168.955, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_150",
    "id" : "dend_150",
    "points3d" : [ "-39.4171, -38.2309, -43.8802, 0.29", "-39.4252, -39.5885, -45.3227, 0.29", "-39.4369, -39.6343, -45.3955, 0.29", "-39.8151, -40.3927, -46.7397, 0.29", "-39.8377, -40.4332, -46.8128, 0.29", "-40.5159, -41.7156, -48.9774, 0.29", "-40.5456, -41.7728, -49.0717, 0.29", "-41.8351, -44.3006, -52.6985, 0.29", "-43.2669, -47.1621, -56.4534, 0.29", "-43.3439, -47.3169, -56.6388, 0.29", "-44.9429, -50.5836, -60.3164, 0.29", "-44.965, -50.6331, -60.3682, 0.29", "-46.8273, -55.2155, -64.9048, 0.29", "-46.869, -55.3286, -65.0143, 0.29", "-48.1839, -59.0757, -68.7238, 0.29", "-48.2, -59.1247, -68.7782, 0.29", "-49.8061, -64.2628, -75.0545, 0.29", "-49.8335, -64.3505, -75.1722, 0.29", "-50.5229, -66.5661, -78.4626, 0.29", "-50.5421, -66.6226, -78.5421, 0.29", "-52.2429, -71.3529, -84.986, 0.29", "-52.2771, -71.4451, -85.0986, 0.29", "-53.4432, -74.3316, -88.4926, 0.29", "-53.9231, -75.5088, -89.7788, 0.29", "-55.0736, -78.2762, -92.3619, 0.29", "-55.102, -78.3404, -92.4147, 0.29", "-56.3793, -80.7103, -93.4966, 0.29" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_149",
    "id" : "dend_149",
    "points3d" : [ "-39.4171, -38.2309, -43.8802, 0.29", "-39.6141, -37.974, -44.2331, 0.29", "-40.1235, -37.4445, -45.0281, 0.29", "-40.7454, -36.8588, -45.9201, 0.29", "-41.5237, -36.1575, -46.8853, 0.29", "-41.6604, -36.0436, -47.0654, 0.29", "-41.8467, -35.8955, -47.3123, 0.29", "-42.6654, -35.2732, -48.4228, 0.29", "-42.7935, -35.1909, -48.6095, 0.29", "-43.3192, -34.8927, -49.3629, 0.29", "-44.57, -34.2175, -51.2101, 0.29", "-44.6742, -34.1588, -51.3898, 0.29", "-44.8008, -34.0824, -51.6237, 0.29", "-45.6181, -33.5729, -53.5887, 0.29", "-46.1133, -33.2606, -54.9663, 0.44", "-46.133, -33.248, -55.0263, 0.44", "-46.6405, -32.8995, -56.6011, 0.29", "-46.9052, -32.7126, -57.4039, 0.29", "-48.2716, -31.725, -61.4634, 0.29", "-48.293, -31.71, -61.5224, 0.29", "-48.4488, -31.6125, -61.9065, 0.22", "-48.5825, -31.5377, -62.1748, 0.29", "-49.0272, -31.337, -62.8005, 0.29", "-49.1098, -31.3053, -62.8944, 0.29", "-49.5894, -31.1312, -63.1952, 0.29", "-50.0905, -30.9499, -63.485, 0.29", "-51.8077, -30.3998, -64.4223, 0.29", "-52.7027, -30.1392, -64.8843, 0.29", "-53.0052, -30.0619, -65.0489, 0.29", "-53.9287, -29.8285, -65.5106, 0.29", "-54.9523, -29.5535, -66.0466, 0.29", "-55.4535, -29.4083, -66.3014, 0.29", "-55.6433, -29.3542, -66.3787, 0.29", "-56.6691, -29.062, -66.8022, 0.29", "-57.887, -28.7162, -67.233, 0.29", "-59.1888, -28.3521, -67.6626, 0.29", "-60.042, -28.0979, -68.0353, 0.29", "-61.5278, -27.662, -68.7521, 0.29", "-61.6367, -27.6353, -68.8156, 0.29", "-63.6298, -27.2637, -70.0162, 0.29", "-63.7992, -27.2428, -70.1248, 0.29", "-66.2452, -27.0534, -71.7006, 0.29", "-67.1782, -27.005, -72.3237, 0.29", "-69.0763, -26.8991, -73.5113, 0.29", "-70.7392, -26.8079, -74.4143, 0.29", "-71.3634, -26.7767, -74.6995, 0.29", "-71.7537, -26.757, -74.817, 0.29", "-72.9172, -26.6962, -75.0117, 0.29", "-75.2762, -26.5332, -75.2705, 0.29", "-76.8199, -26.4097, -75.3519, 0.29", "-77.7067, -26.3379, -75.447, 0.29", "-80.3433, -26.1252, -75.8341, 0.29", "-80.5416, -26.1104, -75.8708, 0.29", "-82.9277, -25.9315, -76.4004, 0.29", "-83.5765, -25.8602, -76.6085, 0.29", "-85.7212, -25.5234, -77.4748, 0.29", "-86.1418, -25.4276, -77.6741, 0.29", "-86.91, -25.1944, -78.0905, 0.29", "-88.4493, -24.6861, -78.9246, 0.29", "-90.4835, -23.9174, -80.0303, 0.29", "-90.5386, -23.895, -80.0558, 0.29", "-92.0364, -23.2393, -80.5417, 0.29", "-92.3941, -23.0749, -80.6646, 0.29", "-92.6886, -22.9325, -80.7669, 0.29", "-93.0997, -22.7315, -80.9059, 0.29", "-93.7036, -22.4539, -81.0567, 0.29", "-94.6405, -22.027, -81.3257, 0.29", "-96.057, -21.4011, -81.7952, 0.22", "-96.1136, -21.3761, -81.8142, 0.22", "-96.1958, -21.3447, -81.8391, 0.29", "-96.3316, -21.3103, -81.8732, 0.29", "-96.8198, -21.24, -81.9662, 0.29", "-97.6796, -21.2578, -82.0379, 0.29", "-97.7528, -21.2646, -82.038, 0.29", "-98.8273, -21.4145, -82.0637, 0.29", "-99.5469, -21.5333, -82.0875, 0.29", "-99.6101, -21.5459, -82.0901, 0.29", "-101.324, -21.9322, -82.1744, 0.29", "-101.396, -21.9477, -82.1834, 0.29", "-103.142, -22.2787, -82.4901, 0.29", "-103.543, -22.3335, -82.575, 0.29", "-104.064, -22.3621, -82.7269, 0.29", "-104.453, -22.3589, -82.8589, 0.29", "-106.454, -22.2249, -83.5865, 0.29", "-106.539, -22.2169, -83.6177, 0.29", "-108.511, -22.0044, -84.3382, 0.29", "-110.023, -21.8435, -84.8663, 0.29", "-110.754, -21.7342, -85.0885, 0.29", "-112.242, -21.4769, -85.4655, 0.29", "-112.309, -21.4607, -85.4925, 0.29", "-113.055, -21.2345, -85.9546, 0.29", "-113.216, -21.1797, -86.0882, 0.29", "-114.652, -20.6708, -87.4279, 0.29", "-114.697, -20.654, -87.4712, 0.29", "-118.375, -19.1716, -91.2007, 0.29", "-119.464, -18.752, -92.2307, 0.29", "-120.589, -18.331, -93.2647, 0.29", "-120.739, -18.2779, -93.4058, 0.29", "-122.109, -17.8547, -94.731, 0.29", "-122.15, -17.8427, -94.7659, 0.29", "-124.158, -17.4049, -95.4574, 0.29", "-124.306, -17.3768, -95.48, 0.29" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_143",
    "id" : "dend_143",
    "points3d" : [ "-11.5317, -24.4547, -6.43475, 0.66", "-12.4263, -26.118, -4.50781, 0.66", "-12.7703, -26.654, -3.67531, 0.66", "-12.8395, -26.7365, -3.53611, 0.66", "-13.587, -27.5335, -2.13275, 0.59", "-14.0698, -27.9886, -1.27484, 0.59", "-15.063, -28.8685, 0.357738, 0.59", "-16.4573, -30.0014, 2.38088, 0.59", "-17.1738, -30.5338, 3.47388, 0.59", "-17.2066, -30.5558, 3.52354, 0.59", "-17.8381, -30.9442, 4.48787, 0.59", "-18.3738, -31.2597, 5.32137, 0.59", "-18.4218, -31.3044, 5.41296, 0.59", "-18.5952, -32.4232, 6.83875, 0.59", "-18.585, -32.4723, 6.89475, 0.59", "-18.4196, -33.2153, 7.71954, 0.59", "-18.4117, -33.2679, 7.77286, 0.59", "-18.3608, -34.3014, 8.81824, 0.59", "-18.5192, -35.046, 9.49742, 0.59", "-18.6166, -35.225, 9.63882, 0.59", "-19.5515, -36.4374, 10.5042, 0.74", "-20.3975, -37.3753, 11.0658, 0.74", "-20.4527, -37.4351, 11.0939, 0.74", "-20.9429, -37.9815, 11.2631, 0.44", "-20.9893, -38.0398, 11.2769, 0.44", "-21.4776, -38.9774, 11.4657, 0.44", "-21.7277, -39.8104, 11.5937, 0.59", "-21.7551, -40.1104, 11.6972, 0.59", "-21.7514, -40.9767, 12.1171, 0.59", "-21.7283, -41.1147, 12.2291, 0.59", "-21.4031, -42.2534, 13.4097, 0.44", "-21.3669, -42.3556, 13.5285, 0.44", "-20.9499, -43.8808, 15.247, 0.44", "-20.939, -43.9464, 15.3203, 0.44", "-20.7942, -45.5138, 17.0659, 0.88", "-20.7579, -46.0373, 17.6411, 0.88", "-20.7342, -46.8123, 18.4559, 0.59", "-20.8156, -48.3649, 19.9325, 0.59", "-21.0283, -49.4585, 20.7562, 0.96", "-21.0511, -49.5495, 20.817, 0.96" ],
    "parent" : "dend_140",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_141",
    "id" : "dend_141",
    "points3d" : [ "-11.5317, -24.4547, -6.43475, 1.25", "-11.5503, -25.2959, -6.35023, 1.25", "-11.5561, -25.4433, -6.33597, 1.25", "-11.5929, -26.4167, -6.25879, 1.25", "-11.6172, -27.4229, -6.24255, 1.25", "-11.619, -27.4964, -6.24299, 1.25", "-11.5302, -28.5098, -6.33776, 1.11", "-11.5193, -28.5728, -6.34434, 1.11", "-11.2312, -29.8734, -6.49143, 0.96", "-10.769, -31.5333, -6.72277, 0.88", "-10.7459, -31.6019, -6.73293, 0.88", "-9.6019, -34.6127, -7.1875, 0.88", "-8.87619, -36.2231, -7.42573, 0.88", "-8.84817, -36.28, -7.43154, 0.88", "-8.37762, -37.1451, -7.48013, 1.33", "-7.79401, -38.1743, -7.46599, 1.33", "-7.75377, -38.2546, -7.45934, 1.33", "-7.05794, -39.904, -7.16654, 1.33", "-6.65747, -41.1018, -7.00616, 0.96", "-6.58883, -41.3564, -6.97409, 0.96", "-6.35968, -42.5182, -6.83673, 0.96", "-6.15887, -44.1851, -6.69734, 0.96", "-6.15461, -44.2584, -6.69423, 0.96", "-6.20717, -46.4165, -6.72174, 0.96", "-6.21114, -46.4899, -6.7256, 0.96", "-6.26886, -47.2395, -6.76336, 1.69", "-6.34932, -48.0624, -6.79168, 1.69", "-6.46334, -49.2782, -6.80972, 1.4", "-6.53292, -50.3345, -6.83599, 0.88", "-6.56247, -51.5116, -6.86431, 0.66", "-6.55383, -53.0609, -6.91964, 0.96", "-6.52088, -53.9641, -6.95997, 1.03", "-6.43673, -55.1652, -7.02748, 1.11", "-6.26694, -57.0231, -7.15431, 1.11", "-6.14057, -58.2752, -7.24751, 1.11", "-6.13116, -58.3784, -7.25635, 1.11", "-6.068, -59.1762, -7.32153, 1.11", "-6.06357, -59.2494, -7.32674, 1.11", "-6.00554, -61.1344, -7.38819, 1.11", "-5.99233, -62.8172, -7.36513, 0.74", "-5.9861, -63.7653, -7.37196, 1.11", "-5.98459, -63.8846, -7.36465, 1.11", "-5.99307, -64.6509, -7.27668, 1.33", "-6.02819, -65.9117, -7.07861, 1.33", "-6.07839, -66.8622, -6.87688, 0.96", "-6.15223, -67.5927, -6.69837, 0.88", "-6.46936, -70.1677, -6.05024, 0.88", "-6.61405, -71.3317, -5.76468, 0.88", "-6.66048, -71.6632, -5.68097, 0.88", "-6.77922, -72.525, -5.46863, 0.88", "-6.87561, -73.4668, -5.18914, 0.88", "-6.88829, -74.1538, -4.97653, 0.88", "-6.83875, -75.0053, -4.75143, 0.88", "-6.82644, -75.1463, -4.70953, 0.88", "-6.76444, -76.0765, -4.50337, 0.88", "-6.66868, -78.1624, -4.2087, 0.52", "-6.64265, -79.5644, -4.15352, 0.52", "-6.63392, -80.021, -4.17096, 1.25", "-6.6319, -81.0992, -4.24542, 1.55", "-6.63872, -83.1175, -4.46907, 1.55", "-6.65764, -84.2383, -4.67527, 1.18", "-6.71105, -86.0887, -5.20574, 0.74", "-6.76521, -88.8857, -6.05758, 0.74" ],
    "parent" : "dend_140",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "31.8263, -58.091, 42.5966, 0.22", "31.5498, -58.327, 42.6526, 0.22", "31.0992, -58.7117, 42.744, 0.22", "30.8877, -58.8923, 42.7869, 0.22", "29.727, -59.8832, 43.0222, 0.22", "22.0322, -67.4604, 43.8773, 0.22", "14.9701, -75.6339, 45.127, 0.22", "7.99447, -83.9872, 45.3616, 0.22", "2.83252, -93.5826, 44.0155, 0.22", "-3.06583, -102.438, 41.5622, 0.22", "-7.48872, -112.055, 38.6475, 0.22", "-13.1369, -121.043, 36.0483, 0.22", "-20.1279, -129.036, 33.7852, 0.22", "-26.7247, -137.038, 30.5723, 0.22", "-32.4814, -146.07, 28.3775, 0.22", "-37.0019, -155.792, 25.9719, 0.22", "-41.2546, -165.582, 23.3428, 0.22" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "31.8263, -58.091, 42.5966, 0.44", "31.9186, -58.4065, 42.6346, 0.44", "32.2861, -59.6614, 42.7859, 0.44", "32.4557, -60.2407, 42.8558, 0.22", "32.4766, -60.3122, 42.8644, 0.22", "33.8265, -69.591, 42.355, 0.22", "34.5632, -78.8344, 40.9159, 0.22", "36.0141, -88.1158, 40.9064, 0.22", "38.661, -97.0427, 40.0782, 0.22", "39.7318, -106.376, 40.5361, 0.22", "41.2776, -115.64, 40.596, 0.22", "43.9938, -124.582, 41.1157, 0.22", "44.8754, -133.85, 42.4829, 0.22", "46.3609, -142.988, 44.0795, 0.22", "45.9721, -152.365, 44.9394, 0.22" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "20.5541, 123.344, 38.5588, 0.81", "20.3035, 121.878, 38.7258, 0.81", "20.2689, 121.689, 38.746, 0.81", "20.0567, 120.538, 38.9125, 0.81", "19.8531, 119.433, 39.0723, 0.59", "19.2074, 115.931, 39.579, 0.44", "19.1484, 115.611, 39.6252, 0.44", "19.0091, 114.978, 39.7297, 1.11", "18.7546, 113.885, 39.9106, 1.11", "17.2066, 102.643, 39.49, 1.11", "17.4806, 91.3787, 38.0114, 1.11" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "20.5541, 123.344, 38.5588, 1.25", "21.1025, 124.145, 38.5185, 1.25", "21.1937, 124.298, 38.4867, 1.25", "21.7023, 125.196, 38.268, 0.88", "21.7427, 125.268, 38.2484, 0.88", "22.369, 126.415, 37.935, 0.59", "23.1762, 127.948, 37.5295, 0.52", "23.8834, 129.349, 37.155, 0.52", "23.9254, 129.434, 37.1345, 0.52", "24.2344, 130.087, 36.9741, 0.88", "24.5889, 130.907, 36.8362, 0.88", "24.7794, 131.412, 36.7891, 0.88", "25.3801, 133.28, 36.7576, 0.66", "25.7292, 134.524, 36.7704, 0.52", "26.0884, 135.976, 36.7826, 0.66", "26.5206, 137.827, 36.8091, 0.66", "26.8392, 139.13, 36.8322, 0.66", "27.2226, 140.685, 36.8657, 0.66", "27.5264, 141.989, 36.9467, 0.66", "27.719, 142.769, 37.0247, 0.44", "28.0291, 143.859, 37.1869, 0.44", "28.3472, 144.834, 37.3382, 0.44", "28.4074, 145.003, 37.373, 0.44", "28.9862, 146.717, 37.9024, 0.66", "29.009, 146.805, 37.9351, 0.66", "29.1112, 147.559, 38.2048, 1.62", "29.1179, 148.579, 38.5273, 1.92", "29.1114, 148.649, 38.5455, 1.92", "28.9064, 150.118, 38.8384, 0.88", "28.7204, 151.189, 38.9472, 0.44", "28.5513, 152.121, 39.0205, 0.44", "28.5401, 152.205, 39.0245, 0.44", "28.5479, 152.806, 39.0086, 0.44", "28.5573, 152.891, 39.0095, 0.44", "28.7848, 154.059, 39.0399, 0.44", "28.8498, 154.319, 39.0444, 0.44", "29.2977, 156.09, 39.0594, 0.44", "29.743, 157.993, 39.0418, 0.44", "30.1484, 159.97, 38.9905, 0.44", "30.3763, 161.329, 38.9325, 0.44", "30.5029, 162.629, 38.8452, 0.44", "30.5325, 163.638, 38.7138, 0.44", "30.4891, 164.204, 38.5929, 0.44", "30.3625, 164.998, 38.3658, 0.44", "30.3383, 165.182, 38.3035, 0.44", "30.234, 166.403, 37.9406, 0.44", "30.2117, 167.881, 37.6245, 0.44", "30.2179, 168.009, 37.6009, 0.44", "30.3556, 169.507, 37.3755, 1.33", "30.5639, 171.158, 37.1933, 1.62", "30.7832, 172.646, 37.0759, 0.59", "31.0366, 174.096, 37.0664, 0.59", "31.0491, 174.168, 37.0708, 0.59", "31.3317, 175.649, 37.2186, 0.59", "31.6795, 177.386, 37.4719, 0.59", "31.696, 177.468, 37.4888, 0.59", "32.0087, 178.835, 37.7834, 0.59", "32.0307, 178.916, 37.7948, 0.59", "32.56, 180.64, 37.9413, 0.59", "32.5976, 180.746, 37.9449, 0.59", "33.3091, 182.493, 37.9204, 0.59", "33.9036, 183.711, 37.872, 1.25", "34.7208, 185.189, 37.7549, 1.92", "35.0265, 185.673, 37.7026, 1.77", "35.5926, 186.471, 37.5886, 1.11", "36.4214, 187.581, 37.4569, 0.29", "37.4488, 188.786, 37.3139, 0.29", "37.5603, 188.911, 37.3101, 0.29", "38.324, 189.745, 37.3417, 0.74", "38.9226, 190.393, 37.3526, 1.11", "39.6699, 191.187, 37.3343, 0.81" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "55.6756, 11.6866, 33.8874, 0.44", "55.8038, 11.6774, 33.8763, 0.44", "56.1328, 11.6484, 33.914, 0.44", "57.2615, 11.4965, 34.1283, 0.44", "57.4244, 11.4886, 34.1642, 0.44", "58.434, 11.4396, 34.3866, 0.44", "58.51, 11.4359, 34.4033, 0.44", "59.8143, 11.3679, 34.728, 0.52", "60.8598, 11.3181, 35.0495, 0.52", "61.8294, 11.2783, 35.4585, 0.52", "72.4499, 8.95579, 38.0061, 0.52", "83.2032, 7.15331, 40.36, 0.52", "93.3448, 3.22432, 43.097, 0.52", "103.006, -0.426471, 47.413, 0.52", "113.447, -2.96123, 50.4632, 0.52", "124.096, -3.31198, 53.6727, 0.52", "135.211, -3.37205, 54.2449, 0.52", "146.191, -1.63775, 53.8769, 0.52" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "55.6756, 11.6866, 33.8874, 0.52", "56.0226, 11.8842, 33.875, 0.52", "56.5, 12.1559, 33.8581, 0.37", "56.9076, 12.388, 33.8437, 0.37", "57.0954, 12.4949, 33.837, 0.37", "57.936, 12.9735, 33.8072, 0.37", "58.172, 13.1078, 33.7988, 0.37" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "58.8943, -6.92414, 26.1675, 0.29", "67.2986, -13.9891, 22.1458, 0.29", "74.3177, -22.9055, 18.9777, 0.29", "81.7751, -31.9109, 18.0211, 0.29", "88.7979, -41.3021, 17.3988, 0.29", "95.6975, -50.744, 18.0093, 0.29", "100.945, -60.9297, 20.3288, 0.29", "106.65, -70.1699, 24.3837, 0.29", "112.684, -79.0178, 28.7525, 0.29", "119.157, -88.612, 30.3747, 0.29", "124.337, -99.0634, 31.6663, 0.29", "131.925, -107.936, 32.1495, 0.29" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "58.8943, -6.92414, 26.1675, 0.22", "63.8721, -11.1433, 23.7025, 0.29", "68.8378, -15.8193, 22.2346, 0.29", "73.3496, -21.1205, 21.6438, 0.29", "77.3517, -26.8492, 21.163, 0.29", "81.8653, -31.9843, 19.6443, 0.29", "86.1818, -36.7256, 16.8034, 0.29", "89.9042, -42.4013, 14.9297, 0.29", "94.4776, -47.653, 14.4502, 0.29", "98.8321, -53.0885, 14.6765, 0.29", "103.704, -58.0279, 14.0122, 0.29", "108.641, -62.8917, 14.3285, 0.29", "113.802, -67.5235, 14.3235, 0.29" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-25.6484, -0.287674, 4.35263, 1.25", "-28.7191, 3.54659, 13.5797, 1.25", "-29.2026, 4.03279, 14.5321, 1.03", "-29.7951, 4.55826, 15.4105, 1.25", "-30.6512, 5.25452, 16.3573, 1.25", "-30.8059, 5.37438, 16.4963, 1.25", "-31.8906, 6.22976, 17.4308, 1.03", "-33.4492, 7.21821, 17.631, 1.03", "-33.5691, 7.3108, 17.659, 1.03", "-34.3735, 8.07401, 17.9524, 1.03", "-34.4433, 8.16162, 17.9887, 1.03", "-35.7203, 10.4106, 19.1039, 1.4", "-35.7409, 10.4657, 19.1353, 1.4", "-36.1457, 11.8883, 19.975, 1.4", "-36.1861, 12.033, 20.0485, 1.4", "-36.4115, 12.9272, 20.4063, 1.4", "-36.8986, 14.9002, 20.8926, 1.03", "-36.9149, 14.9776, 20.8979, 1.03", "-37.1127, 15.9729, 20.9313, 1.03", "-37.3601, 17.4839, 20.9329, 0.96", "-37.506, 18.634, 20.8709, 1.11", "-37.614, 19.954, 20.7271, 1.11", "-37.6722, 21.7913, 20.4443, 0.81", "-37.6716, 21.8707, 20.4402, 0.81", "-37.5539, 24.328, 20.5165, 0.74", "-37.4165, 26.2123, 20.8157, 0.88", "-37.2825, 27.9031, 21.2727, 0.88", "-37.2149, 28.7876, 21.5991, 0.88", "-36.9789, 32.2576, 23.2168, 0.88", "-36.9747, 32.3263, 23.2535, 0.88", "-36.9062, 34.1288, 24.4127, 1.11", "-36.9047, 34.2653, 24.5078, 1.11", "-36.9374, 35.1007, 25.0683, 1.03", "-36.9425, 35.1607, 25.0978, 1.03", "-37.0858, 36.6142, 25.4416, 0.52", "-37.1805, 37.5573, 25.6031, 0.74", "-37.3292, 38.9683, 25.7276, 0.74", "-37.3414, 39.0875, 25.7384, 0.74", "-37.4533, 40.158, 25.8182, 0.74", "-37.4632, 40.248, 25.8236, 0.74", "-37.5842, 41.2315, 25.8375, 0.74", "-37.5981, 41.3514, 25.8361, 0.74", "-37.7079, 42.0868, 25.7655, 1.18", "-37.8892, 43.3435, 25.66, 1.77" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-25.6484, -0.287674, 4.35263, 0.37", "-25.6073, -0.436736, 8.06136, 0.37", "-25.6071, -0.437537, 8.08127, 0.48" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-25.6484, -0.287674, 4.35263, 1.77", "-27.0488, -2.66313, 3.70052, 1.77", "-27.3788, -3.27033, 3.52995, 1.03", "-28.3731, -4.94518, 2.95585, 0.88", "-28.4059, -4.99616, 2.93645, 0.88", "-29.0384, -5.84672, 2.52578, 0.88", "-29.7924, -6.73055, 2.03892, 0.88", "-30.512, -7.41966, 1.47217, 0.81", "-31.5237, -8.19316, 0.726212, 0.81", "-32.0877, -8.51892, 0.339753, 1.25", "-33.0398, -8.88233, -0.584488, 0.96", "-33.4549, -8.9514, -1.10792, 0.81", "-34.0633, -8.95813, -1.99624, 1.11", "-34.4022, -8.92833, -2.54541, 1.11", "-34.7677, -8.90065, -3.1613, 1.11", "-36.5742, -8.85146, -6.28617, 1.11", "-37.149, -8.91654, -7.28497, 1.11", "-37.7828, -9.05402, -8.39255, 0.74", "-37.8434, -9.07742, -8.49652, 0.74", "-38.6312, -9.52937, -9.74332, 0.66", "-38.6621, -9.55694, -9.77733, 0.66", "-39.2876, -10.5351, -9.96668, 0.66", "-39.3128, -10.5937, -9.97318, 0.66", "-39.6704, -11.7534, -10.0767, 1.03", "-40.056, -13.2828, -10.2555, 1.4", "-40.3068, -14.5428, -10.5294, 1.4", "-40.3201, -14.5938, -10.5458, 1.4", "-40.8991, -16.4795, -11.3345, 1.4", "-40.9167, -16.5242, -11.3607, 1.4", "-41.2547, -17.2181, -11.8736, 1.03", "-41.7554, -18.1477, -12.7306, 0.59", "-42.2884, -19.0559, -13.6178, 0.59", "-42.3111, -19.0914, -13.6516, 0.59", "-42.9404, -19.9918, -14.4633, 0.88", "-43.4197, -20.6142, -15.0455, 1.03", "-44.0481, -21.3541, -15.7794, 0.81", "-44.4694, -21.7877, -16.2504, 0.59", "-45.1166, -22.3081, -16.9814, 0.52", "-45.1495, -22.3248, -17.0195, 0.52", "-45.7212, -22.3426, -17.6915, 0.52", "-45.7593, -22.3295, -17.7382, 0.52", "-46.3866, -21.9981, -18.5023, 0.52", "-46.7301, -21.7672, -18.9655, 0.74", "-47.3806, -21.1698, -19.9763, 0.96", "-47.5395, -20.9939, -20.2856, 0.96", "-47.6772, -20.9912, -21.0144, 0.96", "-47.8116, -21.065, -21.7776, 0.96", "-47.8226, -21.0749, -21.8375, 0.96", "-48.1282, -21.3915, -23.4742, 0.96", "-48.1396, -21.4024, -23.5339, 0.96", "-49.5171, -22.5584, -30.6876, 0.96", "-49.6389, -22.631, -31.2853, 0.74", "-49.7697, -22.6823, -31.8797, 0.59", "-49.7824, -22.6854, -31.9309, 0.59", "-50.2239, -22.7361, -33.5488, 0.59", "-50.2836, -22.7396, -33.7192, 0.59", "-50.9428, -22.7043, -34.0499, 0.59", "-51.1171, -22.6982, -34.0962, 0.59", "-51.9614, -22.7797, -34.1719, 0.59", "-52.0214, -22.7938, -34.1691, 0.59", "-52.6666, -23.059, -34.1047, 0.74", "-53.5934, -23.5902, -34.2941, 0.44", "-53.6618, -23.6381, -34.326, 0.44", "-54.2726, -24.0592, -34.7574, 0.44", "-54.3166, -24.0862, -34.7921, 0.44", "-55.0036, -24.4314, -35.3873, 0.88", "-55.9894, -24.8567, -36.2629, 0.88", "-56.5823, -25.0766, -36.7892, 0.88", "-57.4196, -25.384, -37.5066, 0.52", "-58.2003, -25.6598, -38.1448, 0.52", "-59.0365, -25.9656, -38.7695, 0.52", "-59.7901, -26.2396, -39.2574, 0.52", "-59.834, -26.2577, -39.2812, 0.52", "-60.2474, -26.4565, -39.4771, 0.88", "-60.2968, -26.488, -39.4986, 0.88", "-60.8386, -26.9889, -40.1475, 0.88", "-60.8662, -27.024, -40.2032, 0.88", "-61.0224, -27.2386, -40.5594, 0.66", "-61.2959, -27.6209, -41.1987, 0.66", "-61.6893, -28.1355, -42.0945, 0.44", "-62.7887, -29.5375, -44.6613, 0.44", "-62.9406, -29.6688, -45.0703, 1.03", "-63.4971, -30.0289, -46.457, 1.03", "-63.5211, -30.0416, -46.5125, 1.03", "-63.8396, -30.1878, -47.2174, 1.03", "-63.8663, -30.2012, -47.2716, 1.03", "-65.4249, -31.2154, -50.1762, 1.03", "-65.8327, -31.5357, -50.9639, 0.66", "-66.4319, -32.0486, -52.1187, 0.59", "-66.4551, -32.0699, -52.1618, 0.59", "-67.0983, -32.6792, -53.3082, 0.59", "-67.6902, -33.221, -54.1839, 0.59", "-68.2834, -33.7771, -54.8263, 0.29", "-68.7278, -34.138, -55.2734, 0.29", "-68.8228, -34.2063, -55.3569, 0.29", "-69.9276, -34.9185, -56.2947, 0.96", "-70.3544, -35.147, -56.6208, 0.96", "-70.407, -35.1725, -56.6609, 0.96", "-70.9349, -35.4621, -57.0264, 0.44", "-71.7043, -35.9183, -57.477, 0.22", "-71.9611, -36.0749, -57.5936, 0.59", "-72.5673, -36.4659, -57.8036, 0.59", "-72.9732, -36.742, -58.0073, 0.59", "-73.2783, -36.9684, -58.1839, 0.44", "-74.0498, -37.5363, -58.6348, 0.44", "-74.2002, -37.647, -58.729, 0.44", "-74.955, -38.2234, -59.2302, 0.44", "-75.9817, -39.0977, -60.069, 2.06", "-76.4597, -39.5759, -60.544, 2.06" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-32.873, -18.0189, -9.26878, 0.81", "-33.2967, -17.9547, -8.98199, 0.81", "-33.9395, -17.8572, -8.54683, 0.37", "-34.6372, -17.7513, -8.07457, 0.37", "-35.6858, -17.5923, -7.36478, 0.37", "-36.618, -17.4509, -6.73374, 0.37", "-47.189, -16.3894, -0.6572, 0.37", "-57.1292, -17.9844, 6.23717, 0.37", "-66.3964, -18.8425, 14.1504, 0.37" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-32.873, -18.0189, -9.26878, 1.11", "-33.0237, -18.1542, -9.30804, 1.11", "-34.0594, -19.0206, -9.59682, 1.11", "-34.1512, -19.0904, -9.62596, 1.11", "-35.6263, -20.1744, -10.1587, 1.11", "-36.65, -20.9148, -10.5483, 1.11", "-37.6214, -21.6322, -10.9672, 1.11", "-37.6696, -21.6683, -10.993, 1.11", "-38.4, -22.2464, -11.4958, 1.11", "-39.0825, -22.8219, -12.0774, 1.11", "-39.1155, -22.8505, -12.1131, 1.11", "-39.7716, -23.4869, -12.8197, 0.88", "-40.5503, -24.2829, -13.5621, 0.74", "-41.1352, -24.869, -14.0204, 0.74", "-41.8733, -25.5889, -14.4871, 0.74", "-42.936, -26.6065, -15.0804, 0.74", "-44.1444, -27.7717, -15.6938, 0.74", "-45.1211, -28.6648, -16.1122, 0.74", "-46.4181, -29.8088, -16.6084, 0.74", "-47.4243, -30.6809, -16.9727, 0.74", "-48.6698, -31.738, -17.3982, 0.74", "-50.0539, -32.8994, -17.8959, 0.74", "-51.2764, -33.9015, -18.4166, 0.74", "-51.999, -34.4967, -18.7383, 1.03", "-52.0412, -34.531, -18.7527, 1.03", "-53.2185, -35.4512, -18.9942, 1.03", "-54.0071, -36.0154, -19.0233, 1.33", "-54.7211, -36.4631, -18.9541, 1.33", "-54.7768, -36.4944, -18.9442, 1.33", "-57.1365, -37.5815, -18.4312, 0.81", "-57.9705, -37.8909, -18.2605, 0.81", "-58.6213, -38.0695, -18.1431, 0.81", "-59.8259, -38.3103, -17.961, 0.74", "-60.9071, -38.4541, -17.9095, 0.96", "-61.8461, -38.5429, -17.9741, 0.96", "-62.7893, -38.5199, -18.2375, 0.59", "-63.7978, -38.4284, -18.6181, 0.59", "-63.8472, -38.4214, -18.6412, 0.59", "-65.2551, -38.1729, -19.4326, 0.59", "-66.1696, -38.0084, -20.024, 1.18", "-68.0805, -37.8031, -21.2581, 0.59", "-68.5803, -37.8076, -21.555, 0.59", "-68.6368, -37.818, -21.5844, 0.59", "-69.0927, -37.9983, -21.7766, 0.59", "-70.2022, -38.6907, -22.1141, 0.59", "-71.6725, -39.7003, -22.5453, 0.59", "-72.237, -40.0828, -22.688, 0.59", "-72.8341, -40.4651, -22.8558, 1.4", "-73.878, -41.0722, -23.1431, 1.62", "-74.3753, -41.3477, -23.2817, 1.62", "-75.6567, -42.0721, -23.6695, 0.74", "-77.1753, -42.9158, -24.2842, 0.59", "-77.3397, -43.0176, -24.3528, 0.59", "-78.4321, -43.7745, -24.8137, 0.37", "-79.4193, -44.5637, -25.2163, 0.37", "-80.2829, -45.3079, -25.6046, 0.37", "-81.279, -46.262, -26.0433, 0.59", "-82.0972, -47.0432, -26.3932, 0.96", "-82.8917, -47.7736, -26.7121, 0.96", "-83.9863, -48.779, -27.0571, 0.96", "-84.8477, -49.5451, -27.205, 0.96", "-85.9985, -50.5908, -27.1612, 0.44", "-86.6775, -51.2796, -27.0144, 0.81", "-86.7474, -51.3553, -26.9921, 0.81", "-87.7074, -52.6311, -26.5672, 0.96", "-88.0348, -53.1659, -26.4011, 0.96", "-88.7368, -54.5072, -26.0151, 0.59", "-89.2986, -55.703, -25.7643, 0.59", "-89.3263, -55.7625, -25.7563, 0.59", "-90.1921, -57.4064, -25.641, 0.59", "-90.8429, -58.4667, -25.659, 0.59", "-90.8746, -58.5135, -25.6587, 0.59", "-91.396, -59.1827, -25.6058, 0.59", "-92.1013, -59.9761, -25.4462, 1.33", "-93.0256, -60.8509, -25.1838, 1.33", "-93.7188, -61.3824, -24.9483, 1.33", "-94.6778, -62.0742, -24.5945, 1.33", "-95.7146, -62.8185, -24.2023, 0.66", "-95.7715, -62.8604, -24.1804, 0.66", "-96.6708, -63.5739, -23.8739, 0.66", "-96.8245, -63.7054, -23.844, 0.66", "-97.5899, -64.3996, -23.8369, 0.66", "-97.6318, -64.4362, -23.8446, 0.66", "-98.2158, -64.9595, -24.0087, 0.66", "-98.7843, -65.4857, -24.1455, 1.03", "-99.4257, -66.0663, -24.272, 1.03", "-100.172, -66.6449, -24.3628, 1.03", "-101.22, -67.3337, -24.4319, 0.74", "-101.276, -67.3667, -24.4329, 0.74", "-102.299, -67.8939, -24.4233, 0.52", "-103.052, -68.2219, -24.4519, 0.52", "-104.251, -68.6308, -24.7663, 0.52", "-104.81, -68.7827, -25.0959, 0.96", "-104.86, -68.795, -25.1353, 0.96", "-105.482, -68.9491, -25.7123, 0.96", "-106.584, -69.234, -26.8507, 0.66", "-107.949, -69.6199, -28.3465, 0.52", "-109.379, -70.0646, -29.8815, 0.52", "-109.91, -70.2501, -30.4098, 0.52", "-111.158, -70.7505, -31.5369, 1.62", "-111.999, -71.1082, -32.2391, 1.62", "-112.598, -71.392, -32.6709, 1.25", "-113.794, -72.0074, -33.4136, 0.66", "-114.66, -72.4831, -33.932, 1.25", "-115.308, -72.8588, -34.2893, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.67879, 120.23, 4.65293, 1.25", "-9.33638, 120.995, 5.23457, 1.25", "-9.09215, 121.559, 5.61459, 0.74", "-9.06867, 121.617, 5.64872, 0.74", "-8.86675, 122.134, 5.93634, 0.74", "-8.84548, 122.194, 5.96934, 0.74", "-8.63722, 122.83, 6.30381, 0.74", "-8.35368, 123.745, 6.72009, 0.74", "-8.06929, 124.831, 7.18471, 0.59", "-8.0599, 124.874, 7.20163, 0.59", "-7.97598, 125.405, 7.3777, 1.11", "-7.90556, 126.041, 7.55586, 1.25", "-7.9039, 126.081, 7.566, 1.25", "-7.92521, 126.952, 7.76201, 1.25", "-7.98905, 127.68, 7.93529, 1.25", "-8.09755, 128.695, 8.18503, 1.25", "-8.10776, 128.787, 8.20898, 1.25", "-8.21354, 129.624, 8.44767, 1.03", "-8.29456, 130.285, 8.65998, 0.66", "-8.37679, 130.931, 8.89913, 0.66", "-8.46488, 131.704, 9.23698, 0.88", "-8.52114, 132.377, 9.56524, 1.18", "-8.52368, 132.418, 9.58753, 1.18", "-8.54522, 133.158, 10.0017, 1.18", "-8.54524, 133.193, 10.0234, 1.18", "-8.54161, 133.941, 10.4856, 1.18", "-8.54726, 134.267, 10.69, 0.74", "-8.57144, 134.761, 10.935, 0.74", "-8.59123, 135.174, 11.0902, 0.74", "-8.59994, 135.319, 11.129, 0.74", "-8.68323, 136.352, 11.322, 0.74", "-8.68772, 136.4, 11.3271, 0.74", "-8.82744, 137.504, 11.4196, 0.74", "-8.88243, 137.918, 11.4464, 1.11", "-8.96116, 138.463, 11.489, 1.25", "-9.03751, 138.97, 11.536, 1.25", "-9.04495, 139.017, 11.5426, 1.25", "-9.15934, 139.712, 11.6627, 0.74", "-9.2986, 140.526, 11.8364, 0.59", "-9.36363, 140.961, 11.9398, 0.59", "-9.36834, 141.014, 11.9531, 0.59", "-9.37613, 141.733, 12.1536, 0.59", "-9.35008, 142.204, 12.2903, 0.59", "-9.34353, 142.249, 12.3041, 0.59", "-9.28539, 142.614, 12.4328, 0.59", "-9.24393, 142.908, 12.5353, 0.59", "-9.17128, 143.463, 12.7131, 0.59", "-9.12829, 143.995, 12.9085, 0.66", "-9.12339, 144.062, 12.9349, 0.66", "-9.10701, 144.537, 13.1238, 0.88", "-9.12157, 144.927, 13.2823, 1.18", "-9.1726, 145.395, 13.4798, 1.18", "-9.34294, 146.267, 13.8768, 1.03" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-9.67879, 120.23, 4.65293, 0.59", "-10.3238, 121.427, 3.85343, 0.59", "-10.622, 122.042, 3.4398, 0.59", "-10.8168, 122.6, 3.10006, 0.59", "-10.9184, 123.076, 2.82036, 0.59", "-10.9953, 123.668, 2.48938, 0.37", "-11.0694, 124.53, 2.02196, 0.29", "-11.0701, 124.571, 2.00467, 0.29", "-11.0319, 125.36, 1.67214, 0.29", "-10.9569, 126.227, 1.33872, 0.29", "-10.9231, 126.558, 1.23308, 0.29", "-10.9175, 126.609, 1.22086, 0.29", "-10.8571, 127.213, 1.06429, 0.29", "-10.813, 127.712, 0.916231, 0.29", "-10.7864, 128.181, 0.730142, 0.88", "-10.7694, 128.861, 0.42733, 1.18", "-10.8103, 129.638, -0.0261052, 1.03", "-10.9101, 130.377, -0.512016, 0.52", "-10.9844, 130.762, -0.795682, 0.44", "-11.2091, 131.542, -1.38318, 0.88", "-11.3531, 131.924, -1.66834, 1.11", "-11.8219, 132.985, -2.4332, 0.52", "-12.1107, 133.585, -2.81269, 0.52", "-12.1309, 133.627, -2.83452, 0.52", "-12.4621, 134.345, -3.17514, 0.44", "-12.7061, 134.871, -3.3788, 0.44", "-13.0101, 135.504, -3.62963, 0.44", "-13.1714, 135.831, -3.753, 1.11", "-13.4981, 136.407, -3.99901, 1.11", "-13.9851, 137.105, -4.36393, 0.44", "-14.4137, 137.583, -4.69069, 0.37", "-14.9173, 138.095, -5.10552, 1.11", "-14.9482, 138.126, -5.13257, 1.11", "-15.1959, 138.384, -5.38978, 1.25", "-15.7848, 139.053, -6.13262, 0.44", "-16.2091, 139.617, -6.75857, 0.29", "-16.7172, 140.334, -7.78268, 0.29", "-16.7722, 140.414, -7.91071, 0.66", "-17.1627, 141.0, -8.88249, 0.37", "-17.4429, 141.434, -9.6167, 1.03", "-17.5563, 141.62, -9.92013, 1.18", "-18.5897, 143.327, -12.725, 1.84", "-18.6059, 143.352, -12.7662, 1.84", "-18.81, 143.638, -13.2447, 2.14", "-19.4936, 144.455, -14.5466, 0.29", "-19.7803, 144.763, -15.0388, 0.29", "-20.2409, 145.215, -15.7837, 0.66", "-20.4375, 145.39, -16.0657, 0.66", "-21.5299, 146.253, -17.5793, 0.44", "-22.6106, 147.008, -19.048, 0.22", "-23.4698, 147.467, -20.1529, 0.96", "-24.4854, 147.876, -21.3783, 0.37", "-24.9337, 148.014, -21.898, 0.22", "-25.254, 148.095, -22.2659, 0.29", "-25.2932, 148.1, -22.3075, 0.29", "-26.5868, 148.052, -23.6649, 0.29", "-26.9914, 147.99, -24.0233, 1.03", "-27.9825, 147.687, -24.8792, 0.775" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "43.1391, -66.1856, 18.286, 0.74", "43.2914, -66.7442, 18.3548, 0.74", "43.4293, -67.3151, 18.4266, 0.74", "43.5764, -67.9417, 18.478, 0.52", "43.7978, -68.6462, 18.5177, 0.44", "44.1247, -69.5986, 18.5622, 0.96", "44.3526, -70.2054, 18.5852, 0.96", "44.4828, -70.5463, 18.5959, 0.96", "44.9085, -71.5827, 18.6193, 0.66", "45.6333, -73.1064, 18.6017, 0.52", "45.9374, -73.6113, 18.58, 0.81", "46.4085, -74.2856, 18.5333, 1.11", "46.456, -74.3464, 18.5286, 1.11", "47.1218, -75.1344, 18.4702, 1.11", "48.215, -76.3301, 18.3956, 0.44", "49.38, -77.5188, 18.3263, 0.44", "49.4977, -77.6335, 18.3217, 0.44", "50.1335, -78.2251, 18.3106, 1.03", "50.8952, -78.9051, 18.3128, 1.03", "51.7599, -79.6413, 18.3421, 1.03", "52.2109, -80.0212, 18.3755, 0.44", "53.149, -80.8441, 18.4575, 0.44", "53.7953, -81.4202, 18.5398, 1.11", "54.5086, -82.0972, 18.6633, 1.11", "54.9883, -82.593, 18.7694, 0.52", "55.4361, -83.1089, 18.8898, 0.52", "55.4892, -83.1776, 18.9055, 0.52", "56.0694, -83.995, 19.0991, 0.37", "56.6571, -84.9072, 19.3382, 0.37", "56.9015, -85.3027, 19.444, 0.37", "57.2522, -85.8782, 19.5933, 1.25", "57.8924, -86.8741, 19.8348, 1.25", "58.0537, -87.1158, 19.8851, 1.25", "58.6037, -87.9209, 20.0251, 0.37", "59.1401, -88.6688, 20.1527, 0.37", "59.2808, -88.865, 20.193, 0.37", "59.9326, -89.7954, 20.4063, 0.37", "60.8089, -91.0698, 20.7102, 0.37", "60.8518, -91.1326, 20.725, 0.37", "61.5907, -92.2158, 20.9645, 0.37", "62.1431, -93.0284, 21.1636, 1.03", "62.1855, -93.091, 21.1803, 1.03", "62.7927, -94.0374, 21.4825, 1.03", "62.8394, -94.1074, 21.5098, 1.03", "68.43, -103.668, 22.3457, 1.03", "72.8702, -113.729, 24.2334, 1.03", "78.3562, -122.796, 27.4828, 1.03", "82.6285, -132.216, 31.5674, 1.03", "85.5318, -141.65, 36.7185, 1.03", "86.4798, -150.404, 43.4736, 1.03" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "43.1391, -66.1856, 18.286, 0.81", "43.1764, -66.2084, 17.7843, 0.81", "43.2021, -66.18, 17.7065, 0.81", "43.2021, -66.18, 17.7065, 0.22", "43.5374, -65.4212, 17.3322, 0.59", "43.5662, -65.3561, 17.3001, 0.59", "44.0958, -64.1573, 16.7088, 0.44", "44.3229, -63.6101, 16.4369, 0.44", "44.9956, -61.9869, 15.5915, 0.44", "45.0216, -61.9225, 15.5557, 0.44", "48.2733, -52.0855, 11.34, 0.44", "49.7319, -42.0591, 6.56447, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "80.6873, 219.009, -35.0472, 0.44", "80.7804, 219.644, -35.2595, 0.44", "80.8649, 220.22, -35.4522, 0.44", "80.9505, 220.803, -35.6474, 0.29", "81.0261, 221.319, -35.8198, 0.29", "81.1332, 222.048, -36.0639, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "80.6873, 219.009, -35.0472, 0.29", "81.0853, 219.552, -34.9718, 0.29", "81.1649, 219.662, -34.9617, 0.29", "81.7257, 220.496, -34.9254, 0.29", "82.216, 221.291, -34.9818, 0.29", "82.646, 222.133, -35.0794, 0.29", "82.9841, 222.906, -35.2379, 0.66", "83.0298, 223.041, -35.2742, 0.66", "83.2269, 223.724, -35.5207, 0.52", "83.5188, 224.838, -36.0473, 0.29", "83.8785, 226.193, -36.7483, 0.81", "84.244, 227.413, -37.3923, 1.4", "84.4486, 228.056, -37.727, 1.4", "84.9622, 229.382, -38.4775, 0.44", "85.6175, 230.851, -39.3547, 0.22", "85.8907, 231.38, -39.6819, 0.22", "86.1731, 231.858, -39.9849, 0.59", "86.2696, 231.998, -40.0751, 0.59", "87.2344, 233.219, -40.86, 0.52", "87.8403, 233.888, -41.364, 0.52", "87.8919, 233.946, -41.4075, 0.52", "88.4288, 234.588, -41.8576, 0.52", "89.5507, 235.985, -42.7562, 1.11", "90.1399, 236.733, -43.2094, 1.4", "91.5241, 238.513, -44.1701, 1.25", "92.5816, 239.815, -44.8581, 0.66", "93.1319, 240.481, -45.2097, 0.66", "93.4462, 240.861, -45.3898, 0.52", "94.3092, 242.019, -45.807, 0.52", "94.7526, 242.647, -45.997, 0.52", "94.8756, 242.825, -46.0306, 0.52", "95.8296, 244.146, -46.2899, 1.18", "96.6799, 245.338, -46.4676, 1.47", "97.1214, 245.973, -46.5268, 0.37", "97.5661, 246.64, -46.533, 0.37", "98.2479, 247.694, -46.5138, 0.37", "98.2928, 247.772, -46.513, 0.37", "99.0142, 249.207, -46.4839, 0.37", "99.0943, 249.385, -46.4904, 0.37", "99.465, 250.273, -46.5558, 0.37", "99.4942, 250.36, -46.5652, 0.37", "100.042, 252.714, -46.7444, 0.37", "100.057, 252.791, -46.7472, 0.37", "100.147, 253.463, -46.7517, 0.37", "100.159, 253.554, -46.7491, 0.37", "100.286, 254.314, -46.6919, 0.37", "100.633, 256.065, -46.4298, 0.29", "100.954, 257.228, -46.1623, 0.29", "101.107, 257.71, -46.044, 0.29", "101.138, 257.793, -46.0226, 0.29", "102.359, 260.571, -45.2937, 0.29", "102.897, 261.655, -45.0054, 0.15", "103.869, 263.467, -44.5331, 0.15", "103.911, 263.544, -44.5123, 0.15", "104.683, 264.9, -44.1347, 0.15", "105.902, 266.976, -43.5432, 0.15", "105.97, 267.079, -43.5112, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_152",
    "id" : "dend_152",
    "points3d" : [ "-56.3793, -80.7103, -93.4966, 0.29", "-57.712, -82.3508, -93.8321, 0.29", "-57.7557, -82.4046, -93.8431, 0.29", "-59.3859, -84.4113, -94.2536, 0.29", "-59.4868, -84.5354, -94.279, 0.29", "-61.0943, -86.5142, -94.6837, 0.29", "-62.2329, -87.9158, -94.9704, 0.29" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_151",
    "id" : "dend_151",
    "points3d" : [ "-56.3793, -80.7103, -93.4966, 0.29", "-56.145, -80.7587, -93.5394, 0.29", "-53.1154, -81.5948, -94.1721, 0.29", "-53.0294, -81.6324, -94.19, 0.29", "-50.9402, -82.7195, -94.6244, 0.29", "-50.7766, -82.8047, -94.6584, 0.29", "-48.7934, -83.8366, -95.0707, 0.29", "-48.6402, -83.932, -95.1036, 0.29", "-46.9596, -85.5217, -95.4692, 0.29", "-46.9019, -85.5826, -95.4833, 0.29" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_147",
    "id" : "dend_147",
    "points3d" : [ "-21.0511, -49.5495, 20.817, 0.29", "-22.3639, -49.1041, -9.37553, 0.29", "-22.3907, -49.0967, -9.88206, 0.29", "-22.3966, -49.0958, -9.97158, 0.29", "-22.4818, -49.0902, -11.0457, 0.29", "-22.6136, -49.0943, -12.4355, 0.29", "-22.7438, -49.1128, -13.6102, 0.29", "-22.8318, -49.1527, -13.6466, 0.29", "-24.0892, -49.8739, -14.094, 0.29", "-24.7025, -50.2755, -14.2863, 0.29", "-25.9498, -51.2108, -14.6056, 0.29", "-26.9493, -52.0385, -14.7751, 0.29", "-28.0303, -52.9993, -14.9169, 0.29", "-29.3268, -54.201, -15.0372, 0.29", "-29.3915, -54.2663, -15.04, 0.29", "-30.2267, -55.1717, -15.1268, 0.29", "-31.1562, -56.2372, -15.2482, 0.29", "-32.2646, -57.5397, -15.3869, 0.29", "-32.3921, -57.6991, -15.418, 0.29", "-33.1252, -58.5364, -15.6493, 0.29", "-34.5189, -59.9492, -16.1161, 0.29", "-36.2439, -61.5633, -16.7755, 0.29", "-36.3103, -61.6198, -16.8031, 0.29", "-37.7653, -62.7932, -17.4317, 0.29", "-38.991, -63.7528, -17.9542, 0.29", "-40.1796, -64.6701, -18.4454, 0.29", "-40.6859, -65.0727, -18.6321, 0.29", "-40.7514, -65.1321, -18.6559, 0.29", "-41.2139, -65.661, -18.7742, 0.29", "-41.4242, -65.9825, -18.7914, 0.29", "-41.909, -66.8299, -18.8132, 0.29", "-42.0171, -67.0074, -18.8182, 0.29", "-42.9365, -68.2161, -18.8765, 0.29", "-43.81, -69.2427, -18.947, 0.29", "-44.9813, -70.3658, -19.0466, 0.29", "-46.0422, -71.2514, -19.1402, 0.29", "-47.803, -72.5477, -19.3667, 0.29", "-49.8039, -73.8886, -19.6871, 0.29", "-49.8935, -73.9381, -19.7039, 0.29", "-51.7752, -74.7572, -20.1993, 0.29", "-51.8685, -74.7883, -20.23, 0.29", "-53.4573, -75.184, -20.8279, 0.29", "-53.5509, -75.2006, -20.8668, 0.29", "-54.7449, -75.4333, -21.394, 0.29", "-56.528, -75.8375, -22.175, 0.29", "-56.7007, -75.8835, -22.2475, 0.29", "-58.2558, -76.2837, -22.825, 0.29", "-58.4366, -76.3283, -22.8752, 0.29", "-59.4776, -76.6059, -23.1303, 0.29", "-59.5968, -76.64, -23.1596, 0.29", "-62.2303, -77.2952, -23.6961, 0.29", "-62.3525, -77.3222, -23.7253, 0.29", "-64.544, -77.7607, -24.3098, 0.29", "-64.6293, -77.7738, -24.3346, 0.29", "-66.0988, -77.95, -24.7836, 0.29", "-68.9049, -78.2189, -25.6137, 0.29", "-70.8884, -78.3766, -26.1877, 0.29", "-71.0021, -78.3857, -26.2189, 0.29", "-73.9554, -78.5889, -26.9815, 0.29", "-74.1558, -78.6044, -27.0321, 0.29", "-76.0855, -78.7774, -27.4876, 0.29", "-76.3586, -78.8064, -27.5527, 0.29", "-78.1451, -79.0042, -27.9321, 0.29", "-79.1835, -79.1275, -28.0857, 0.29", "-81.1166, -79.3837, -28.2298, 0.29", "-81.3284, -79.3983, -28.2354, 0.29", "-82.9294, -79.3698, -28.3082, 0.29", "-83.018, -79.3554, -28.3041, 0.29", "-84.8459, -78.7736, -28.018, 0.29", "-85.042, -78.6877, -27.9692, 0.29", "-86.5953, -77.8613, -27.4409, 0.29", "-88.142, -76.9429, -26.9018, 0.29", "-90.1955, -75.508, -26.1665, 0.29", "-90.338, -75.4028, -26.1231, 0.29", "-91.5138, -74.4459, -25.9283, 0.29" ],
    "parent" : "dend_143",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_144",
    "id" : "dend_144",
    "points3d" : [ "-21.0511, -49.5495, 20.817, 0.96", "-21.3081, -50.4385, 21.4422, 0.96", "-21.3352, -50.5427, 21.514, 0.96", "-21.7514, -52.2009, 22.657, 0.88", "-22.0307, -53.2214, 23.5686, 0.66", "-22.0497, -53.2818, 23.6248, 0.66", "-22.2443, -53.9189, 24.2128, 0.52", "-22.5883, -55.0587, 25.269, 0.52", "-22.6071, -55.1204, 25.3239, 0.52", "-23.1875, -57.1087, 26.9922, 0.52", "-23.4864, -58.1118, 27.856, 0.52", "-23.6045, -58.5315, 28.2199, 0.52", "-23.8146, -59.2127, 28.8588, 0.52", "-23.8297, -59.276, 28.9133, 0.52", "-24.0643, -60.5227, 29.9128, 0.52", "-24.0644, -60.5864, 29.9688, 0.52", "-23.8743, -61.6687, 31.2245, 0.52", "-23.1943, -62.9782, 33.2258, 0.52", "-22.4772, -63.7034, 34.6613, 0.52", "-22.4281, -63.7355, 34.736, 0.52", "-20.5965, -64.4248, 36.8702, 0.52", "-20.4443, -64.4605, 37.0141, 0.52", "-18.908, -64.5296, 38.0904, 0.52", "-18.8476, -64.528, 38.1274, 0.52", "-18.3948, -64.5209, 38.4608, 0.52", "-18.3258, -64.5205, 38.5063, 0.52", "-17.6551, -64.5449, 38.759, 0.52", "-16.7049, -64.5372, 39.0626, 0.52", "-11.7284, -70.2983, 48.2562, 0.52", "-6.70202, -75.017, 57.948, 0.52", "-1.02351, -80.2899, 66.9994, 0.52", "3.03065, -84.1319, 77.4669, 0.52", "7.52073, -88.1163, 87.7056, 0.52", "12.4115, -91.3302, 98.0062, 0.52", "16.9935, -96.1708, 107.862, 0.52", "23.5918, -101.277, 116.359, 0.52", "29.2047, -107.484, 124.9, 0.52", "35.8674, -114.346, 132.131, 0.52", "42.2134, -122.818, 137.964, 0.52" ],
    "parent" : "dend_143",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_142",
    "id" : "dend_142",
    "points3d" : [ "-6.76521, -88.8857, -6.05758, 0.74", "-6.20458, -90.0408, -6.51001, 0.74", "-6.17397, -90.1007, -6.53574, 0.74", "-5.66138, -91.0718, -6.96192, 0.74", "-5.6005, -91.1855, -7.00189, 0.74", "-4.96679, -92.427, -7.34729, 0.74", "-4.19043, -94.0046, -7.72121, 1.4", "-3.83974, -94.7898, -7.85988, 1.4", "-3.77485, -94.9618, -7.88843, 1.4", "-3.43972, -96.1682, -8.07296, 0.37", "-3.25758, -97.0713, -8.26017, 0.37", "-3.22213, -97.2539, -8.30355, 0.37", "-3.02662, -98.0208, -8.58335, 0.37", "-2.76359, -98.9084, -9.03471, 1.18", "-2.49813, -99.7396, -9.53463, 1.47", "-2.02757, -101.169, -10.488, 0.52", "-1.59039, -102.417, -11.3412, 0.37", "-0.94246, -104.291, -12.6184, 0.37", "-0.9053, -104.4, -12.6878, 0.37", "-0.722201, -105.04, -13.0041, 1.4", "-0.48246, -106.058, -13.4104, 1.4", "-0.417224, -106.442, -13.5217, 1.4", "-0.205715, -108.201, -13.901, 0.66", "-0.0090078, -109.659, -14.0921, 0.59", "0.379631, -112.052, -14.3712, 0.59", "0.391772, -112.114, -14.3773, 0.59", "0.503217, -112.634, -14.4241, 1.33", "0.697817, -113.509, -14.4868, 0.74", "0.942536, -114.626, -14.489, 0.52", "0.96697, -114.751, -14.4857, 0.52", "1.11562, -115.643, -14.419, 0.52", "1.3712, -117.4, -14.2313, 0.52", "1.38747, -117.535, -14.2132, 0.52", "1.55406, -119.334, -13.9242, 0.52", "1.61278, -120.186, -13.7418, 1.25", "1.71379, -121.44, -13.4385, 1.25", "1.72084, -121.555, -13.4097, 1.25", "1.75291, -122.526, -13.1165, 1.25", "1.75385, -122.587, -13.0982, 1.25", "1.7413, -124.025, -12.6892, 0.52", "1.70927, -125.469, -12.2784, 0.52", "1.64872, -127.354, -11.7561, 0.52", "1.6153, -128.574, -11.4315, 0.81", "1.61345, -128.635, -11.4148, 0.81", "1.59875, -129.279, -11.2474, 0.81", "1.59035, -129.748, -11.1303, 0.37", "1.59063, -130.609, -10.9095, 0.37", "1.64063, -131.34, -10.7493, 0.37", "1.68249, -131.813, -10.7003, 0.74", "1.73844, -132.48, -10.6649, 0.74", "1.74368, -132.544, -10.6641, 0.74", "1.80101, -133.272, -10.6844, 0.74", "1.82921, -133.608, -10.687, 0.74", "1.90451, -134.442, -10.6847, 0.44", "2.03707, -135.869, -10.6706, 0.44", "2.05024, -136.011, -10.6646, 0.44", "2.14283, -137.154, -10.5858, 0.44", "2.19196, -137.846, -10.537, 0.29", "2.19571, -137.909, -10.5331, 0.29", "2.23634, -138.713, -10.4814, 0.29", "2.24408, -139.214, -10.4651, 0.29", "2.24377, -139.663, -10.4646, 0.29", "2.20308, -140.645, -10.4951, 0.29", "2.11302, -142.18, -10.5829, 0.29", "2.10806, -142.244, -10.5871, 0.22", "2.0208, -143.065, -10.6468, 0.29", "1.9173, -143.85, -10.7047, 0.29", "1.76581, -144.885, -10.7708, 0.29", "1.7364, -145.094, -10.7799, 0.29", "1.64273, -145.775, -10.8122, 0.29", "1.55253, -146.598, -10.8471, 0.29", "1.46893, -147.935, -10.9029, 0.29", "1.46684, -147.999, -10.9057, 0.37", "1.46844, -149.567, -11.0127, 0.29", "1.47126, -149.664, -11.0206, 0.29", "1.58327, -151.393, -11.175, 0.29", "1.72229, -152.993, -11.3415, 0.29", "1.73332, -153.101, -11.3539, 0.37", "1.83234, -153.925, -11.4489, 0.29", "1.96595, -154.898, -11.567, 0.29", "2.07315, -155.698, -11.6722, 0.29", "2.07977, -155.761, -11.6807, 0.29", "2.13708, -156.682, -11.8538, 0.29", "2.16934, -157.71, -12.0746, 0.29", "2.16891, -157.915, -12.1223, 0.29", "2.13159, -158.934, -12.3971, 0.29", "2.07373, -159.94, -12.865, 0.29", "1.94392, -161.026, -13.4941, 0.29", "1.92529, -161.129, -13.5647, 0.29", "1.77671, -161.741, -14.0421, 0.29", "1.65406, -162.228, -14.4584, 0.29", "1.1475, -164.26, -16.3062, 0.29", "0.936944, -165.088, -17.0833, 0.29", "0.923239, -165.141, -17.1295, 0.29", "0.741904, -165.9, -17.7531, 0.29", "0.548505, -166.76, -18.4256, 0.29", "0.492598, -167.09, -18.6458, 0.29", "0.43676, -167.421, -18.8255, 0.29", "0.236442, -168.635, -19.5245, 0.29", "0.0566042, -169.349, -19.9746, 0.29", "0.0401082, -169.399, -20.0083, 0.29", "-0.363668, -170.384, -20.7185, 0.29", "-0.99369, -171.681, -21.7268, 0.29", "-1.02237, -171.732, -21.7679, 0.29", "-1.96732, -173.097, -22.933, 0.29", "-2.00805, -173.15, -22.9805, 0.29", "-2.5351, -173.778, -23.5659, 0.29", "-2.79248, -174.054, -23.824, 0.29", "-3.11199, -174.393, -24.1434, 0.29", "-4.20988, -175.51, -25.2001, 0.29", "-4.73942, -176.023, -25.7228, 0.29", "-5.44102, -176.68, -26.4034, 0.29", "-5.90509, -177.098, -26.8485, 0.29", "-6.50165, -177.644, -27.4244, 0.29", "-6.83985, -177.957, -27.7486, 0.29", "-8.08763, -179.23, -28.8399, 0.29", "-8.6965, -179.926, -29.2815, 0.37", "-8.73272, -179.972, -29.3029, 0.37", "-9.14114, -180.55, -29.5034, 0.29", "-9.17379, -180.603, -29.5144, 0.29", "-9.91428, -181.91, -29.6856, 0.29", "-10.4245, -182.924, -29.6681, 0.29", "-10.6257, -183.361, -29.6612, 0.29", "-10.7157, -183.557, -29.6575, 0.29", "-10.974, -184.132, -29.6424, 0.29" ],
    "parent" : "dend_141",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "45.9721, -152.365, 44.9394, 0.44", "47.1575, -162.704, 45.4094, 0.44", "49.6053, -172.786, 45.877, 0.44", "53.1755, -182.272, 47.922, 0.44", "58.0325, -191.117, 49.8795, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "45.9721, -152.365, 44.9394, 0.29", "47.2317, -160.672, 45.0109, 0.44", "49.5726, -168.705, 45.0685, 0.44", "51.9939, -176.608, 43.97, 0.44", "55.9306, -183.897, 43.6376, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "39.6699, 191.187, 37.3343, 0.44", "39.8627, 191.3, 37.3207, 0.44", "40.8735, 192.02, 37.2902, 0.44", "41.0556, 192.158, 37.2873, 0.44", "41.8622, 192.927, 37.2895, 0.44", "41.9175, 192.985, 37.2902, 0.44", "43.4365, 194.878, 37.3252, 0.44", "44.2922, 196.101, 37.3707, 0.44", "44.3422, 196.188, 37.3715, 0.44", "45.1776, 197.857, 37.3458, 0.44", "45.2102, 197.932, 37.3427, 0.44", "45.8862, 199.695, 37.2147, 0.44", "45.9078, 199.773, 37.2059, 0.44", "46.377, 201.489, 36.9732, 0.44", "46.3962, 201.557, 36.9599, 0.44", "46.5787, 202.156, 36.7866, 1.03", "46.6304, 202.348, 36.724, 1.03", "46.8155, 203.161, 36.4004, 1.03", "46.8246, 203.228, 36.3778, 1.03", "46.8518, 204.303, 36.0897, 0.37", "46.8471, 204.374, 36.0792, 0.37", "46.761, 205.115, 36.013, 0.29", "46.7503, 205.196, 36.0045, 0.29", "46.6117, 206.158, 35.9035, 0.29", "46.6019, 206.229, 35.8975, 0.29", "46.2675, 208.442, 35.7892, 0.29", "46.2557, 208.512, 35.7822, 0.29", "45.9808, 210.006, 35.583, 0.29", "45.9655, 210.085, 35.572, 0.29", "45.8019, 210.893, 35.4538, 1.03", "45.6388, 211.644, 35.355, 1.03", "45.431, 212.564, 35.2468, 0.29", "45.1442, 213.746, 35.1657, 0.29", "44.7825, 215.142, 35.1499, 0.29", "44.6935, 215.465, 35.1463, 0.29", "44.4382, 216.33, 35.1489, 0.29", "44.3084, 216.761, 35.166, 1.11", "44.1225, 217.407, 35.2167, 1.11", "44.1028, 217.476, 35.2218, 1.11", "43.9522, 218.114, 35.2528, 0.29", "43.6758, 219.581, 35.3609, 0.29", "43.342, 221.677, 35.5444, 0.29", "43.105, 223.307, 35.7185, 0.29", "43.096, 223.377, 35.7272, 0.29", "42.7676, 226.228, 36.1042, 0.29", "42.6088, 227.955, 36.3654, 0.29", "42.6003, 228.107, 36.3895, 0.59", "42.5972, 228.472, 36.4533, 0.59", "42.597, 228.553, 36.4699, 0.59", "43.8371, 238.729, 37.1379, 0.59" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "39.6699, 191.187, 37.3343, 0.52", "40.0201, 192.495, 36.4936, 0.52", "40.2923, 193.426, 35.8753, 0.52", "40.3153, 193.494, 35.8307, 0.52", "40.865, 194.775, 34.9113, 0.52", "41.3666, 195.842, 34.1141, 0.52", "41.4659, 196.038, 33.9657, 0.81", "41.5123, 196.109, 33.9071, 0.81", "41.8119, 196.512, 33.5667, 0.81", "42.7197, 197.706, 32.6371, 0.66", "42.7735, 197.773, 32.5925, 0.66", "43.1863, 198.297, 32.3353, 1.47", "43.5732, 198.765, 32.1379, 1.77", "44.1208, 199.417, 31.9222, 0.81", "44.1659, 199.474, 31.9097, 0.81", "44.5144, 199.923, 31.8552, 0.52", "45.2125, 200.883, 31.7516, 0.29", "45.5426, 201.381, 31.7089, 1.4", "45.9371, 202.043, 31.6606, 1.47", "46.3708, 202.901, 31.6167, 0.59", "46.5578, 203.318, 31.5964, 0.59", "46.9544, 204.35, 31.5476, 0.59", "47.1695, 205.007, 31.5209, 0.52", "47.3793, 205.668, 31.5076, 0.52", "47.9276, 207.265, 31.5128, 0.52", "47.9608, 207.358, 31.5175, 0.52", "48.0531, 207.618, 31.54, 0.88", "48.3009, 208.305, 31.6128, 0.88", "48.7289, 209.539, 31.7603, 0.44", "49.0868, 210.768, 31.9096, 0.44", "49.2491, 211.483, 31.9949, 1.03", "49.3603, 212.086, 32.0494, 1.03", "49.3687, 212.151, 32.0535, 1.03", "49.3776, 212.781, 32.0659, 0.59", "49.2536, 214.218, 32.0311, 0.29", "49.1803, 214.693, 31.9998, 0.96", "49.0872, 215.198, 31.9503, 0.59", "49.0165, 215.527, 31.9171, 0.29", "48.6693, 217.032, 31.7797, 0.29", "48.6538, 217.095, 31.7745, 0.59", "48.4538, 217.871, 31.7199, 0.29", "48.2385, 218.725, 31.6651, 0.29", "48.2148, 218.821, 31.66, 0.29", "47.8691, 220.382, 31.5664, 0.29", "47.8301, 220.583, 31.5529, 0.29", "47.7217, 221.115, 31.5148, 1.11", "47.6184, 221.582, 31.479, 1.11", "47.6057, 221.637, 31.4748, 1.11", "47.3944, 222.463, 31.4122, 0.37", "47.3372, 222.659, 31.4129, 0.37", "47.0736, 223.512, 31.4625, 0.37", "46.829, 224.26, 31.5386, 0.37", "46.7627, 224.451, 31.5649, 0.37", "46.5692, 225.005, 31.6996, 0.37", "46.1205, 226.288, 32.0882, 0.37", "45.9781, 226.698, 32.2259, 0.66", "45.957, 226.765, 32.2484, 0.66", "45.8623, 227.074, 32.3438, 0.66", "45.202, 229.18, 32.9131, 0.44", "44.884, 230.046, 33.1113, 0.44", "44.8251, 230.189, 33.1369, 0.44", "44.2066, 231.609, 33.3744, 1.33", "43.9125, 232.273, 33.4749, 1.47", "43.6212, 232.904, 33.5504, 0.88", "42.7776, 234.513, 33.6137, 0.59", "42.466, 235.057, 33.6426, 1.03", "42.1693, 235.527, 33.6738, 0.74" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "58.172, 13.1078, 33.7988, 0.22", "58.5564, 12.8297, 33.9494, 0.22", "58.98, 12.5232, 34.1154, 0.22", "59.5044, 12.1438, 34.3209, 0.22", "59.5758, 12.0921, 34.3489, 0.22", "60.2484, 11.6055, 34.6125, 0.44", "70.1365, 7.13393, 38.3308, 0.44", "79.542, 2.17344, 42.6777, 0.44", "89.3114, -2.54957, 46.4291, 0.44", "99.0654, -7.98071, 49.2608, 0.44", "108.646, -13.7676, 52.0521, 0.44", "118.716, -18.9969, 54.0018, 0.44", "128.585, -23.1304, 58.0965, 0.44", "138.175, -27.3372, 62.7433, 0.44", "146.976, -32.8651, 67.6844, 0.44", "155.87, -38.6064, 72.2293, 0.44" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "58.172, 13.1078, 33.7988, 0.37", "58.2172, 13.208, 33.8283, 0.37", "58.3965, 13.6054, 33.9454, 0.37", "58.728, 14.3402, 34.1618, 0.37", "60.552, 24.8458, 35.8144, 0.37", "63.3546, 35.1904, 36.1143, 0.37", "65.3576, 45.5763, 38.2592, 0.37", "67.3831, 55.9852, 40.2489, 0.37", "70.952, 65.9699, 41.8173, 0.37", "73.08, 76.2732, 44.221, 0.37", "75.4663, 86.735, 44.7519, 0.37", "78.4371, 96.7786, 47.2119, 0.37", "82.5234, 105.895, 51.082, 0.37", "86.9246, 115.338, 53.4783, 0.37" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "113.802, -67.5235, 14.3235, 0.44", "122.684, -77.5414, 12.6485, 0.44", "133.008, -85.6268, 9.80226, 0.44", "141.836, -95.3131, 6.48583, 0.44", "149.449, -106.399, 4.85251, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "113.802, -67.5235, 14.3235, 0.29", "123.776, -77.2106, 11.2541, 0.44", "132.387, -87.2686, 5.76858, 0.44", "140.931, -96.2004, -1.47184, 0.44", "150.038, -103.69, -9.51003, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-37.8892, 43.3435, 25.66, 0.29", "-38.9134, 44.5018, 24.9472, 0.29", "-39.3064, 45.0279, 24.6471, 0.29", "-39.3523, 45.0893, 24.612, 0.29", "-39.9371, 45.8722, 24.1654, 0.29", "-40.3183, 46.3825, 23.8743, 0.29", "-40.3584, 46.4363, 23.8436, 0.29", "-40.7533, 47.065, 23.4201, 0.29", "-46.1332, 55.4489, 19.879, 0.29", "-52.0247, 62.652, 14.9953, 0.29", "-57.8482, 70.948, 12.0433, 0.29", "-62.7831, 80.1635, 10.2691, 0.29", "-68.3559, 89.0866, 9.25982, 0.29", "-75.3418, 96.56, 6.93509, 0.29", "-82.1867, 103.828, 3.7134, 0.29", "-90.0206, 110.625, 2.61474, 0.29", "-97.8461, 117.503, 2.56756, 0.29", "-105.471, 124.616, 2.75276, 0.29" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-37.8892, 43.3435, 25.66, 1.11", "-38.9145, 43.4987, 26.2515, 1.11", "-40.0012, 43.6286, 26.8012, 1.11", "-41.4104, 43.7832, 27.6068, 0.52", "-42.0249, 43.86, 27.9609, 0.52", "-42.0836, 43.8678, 27.9951, 0.52", "-43.2096, 44.0368, 28.6119, 0.52", "-43.3091, 44.0547, 28.6567, 0.52", "-44.6066, 44.3658, 29.196, 0.52", "-45.1997, 44.5506, 29.3758, 0.52", "-45.2518, 44.575, 29.389, 0.52", "-46.1146, 45.1503, 29.6105, 0.52", "-46.3526, 45.3397, 29.664, 0.52", "-47.092, 45.937, 29.7934, 0.52", "-47.5702, 46.2992, 29.8438, 0.52", "-48.4394, 46.8592, 29.9541, 0.52", "-49.6079, 47.4331, 30.1399, 0.52", "-50.5634, 47.6906, 30.3466, 0.52", "-50.6508, 47.6683, 30.3988, 0.52", "-51.1646, 47.2832, 31.0619, 0.81", "-51.5986, 46.8435, 31.8048, 0.81", "-51.9369, 46.4547, 32.4442, 0.37", "-52.1633, 46.1725, 32.9084, 0.37", "-53.3284, 44.8239, 35.3261, 0.37", "-53.9812, 44.2037, 36.6092, 0.37", "-54.0131, 44.1823, 36.6665, 0.37", "-54.56, 43.9605, 37.4996, 0.37", "-54.7184, 43.9332, 37.643, 0.37", "-55.5761, 43.8923, 37.9404, 0.37", "-55.8801, 43.8915, 37.94, 0.37", "-56.6812, 43.8876, 37.8631, 0.37", "-56.827, 43.8872, 37.8483, 0.37", "-58.3472, 43.8877, 37.6787, 0.37", "-59.0578, 43.8918, 37.5937, 0.37", "-59.6343, 43.9015, 37.5166, 0.37", "-59.7795, 43.8989, 37.4965, 0.37", "-68.8285, 44.816, 41.0665, 0.37", "-77.7944, 47.3043, 44.1086, 0.37", "-86.2957, 49.093, 48.5928, 0.37", "-94.1971, 51.119, 53.9848, 0.37", "-102.17, 54.4087, 58.643, 0.37", "-109.919, 58.1566, 63.3585, 0.37", "-117.639, 63.0973, 66.9969, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-37.8892, 43.3435, 25.66, 1.33", "-37.8844, 43.4206, 25.6515, 1.33", "-37.87, 44.0818, 25.5768, 1.11", "-37.9219, 45.0811, 25.4599, 0.88", "-38.0424, 46.5411, 25.2867, 0.88", "-38.0504, 46.6179, 25.2775, 0.88", "-38.2797, 48.6781, 25.0944, 0.74", "-38.2949, 48.7948, 25.0861, 0.74", "-38.4981, 50.3023, 25.0002, 0.74", "-38.5076, 50.3793, 24.997, 0.74", "-38.7044, 52.7322, 24.8391, 0.74", "-38.7959, 54.2794, 24.6951, 0.74", "-38.7984, 54.3567, 24.6865, 0.74", "-38.8185, 55.5233, 24.5249, 0.74", "-38.8184, 56.7385, 24.278, 0.74", "-38.8179, 58.6344, 23.7796, 0.74", "-38.8088, 60.2947, 23.2093, 0.74", "-38.8088, 60.367, 23.1816, 0.74", "-38.8062, 60.9771, 22.9147, 1.03", "-38.7536, 62.3598, 22.2547, 0.81", "-38.7453, 62.4277, 22.219, 0.81", "-38.5469, 63.2592, 21.7547, 0.81", "-37.9307, 65.1507, 20.6288, 0.59", "-37.4066, 66.6363, 19.7608, 0.59", "-37.01, 67.6774, 19.1635, 0.59", "-36.4595, 69.0513, 18.4539, 0.59", "-35.8186, 70.672, 17.661, 0.59", "-35.7962, 70.7284, 17.635, 0.59", "-35.1996, 72.2855, 17.1655, 0.59", "-35.1725, 72.3839, 17.1634, 0.59", "-34.9629, 73.8912, 17.5351, 0.59", "-34.9587, 74.385, 17.7526, 0.81", "-35.0101, 74.9612, 18.0391, 0.81", "-35.3593, 77.6189, 19.3826, 0.81", "-35.513, 78.5306, 19.8545, 0.81", "-35.7067, 79.6372, 20.3627, 0.74", "-35.9039, 80.7916, 20.8491, 0.74", "-36.1556, 82.4944, 21.4912, 0.74", "-36.1637, 82.5573, 21.5098, 0.74", "-36.3404, 84.1715, 21.785, 0.74", "-36.4718, 85.6645, 21.9492, 0.74", "-36.5378, 86.7221, 21.9925, 1.03", "-36.5652, 87.3653, 21.9988, 1.03", "-36.6311, 88.5869, 21.9685, 0.52", "-36.7793, 90.1405, 21.8656, 0.52", "-37.0151, 91.6467, 21.6879, 0.52", "-37.1971, 92.4461, 21.6119, 0.52", "-37.2465, 92.622, 21.5994, 0.52", "-37.8172, 94.4059, 21.5581, 0.52", "-38.3244, 95.8622, 21.6052, 0.52", "-38.6389, 96.7219, 21.6885, 0.52", "-39.1976, 98.4024, 22.0266, 0.52", "-39.2869, 98.7087, 22.1034, 0.66", "-39.3022, 98.7811, 22.1245, 0.66", "-39.3535, 99.6239, 22.4195, 0.66", "-39.3298, 99.789, 22.4796, 0.66", "-38.8856, 101.369, 23.0321, 0.52", "-38.8602, 101.438, 23.0537, 0.52", "-38.5706, 102.175, 23.274, 0.88", "-38.2831, 102.884, 23.4765, 0.88", "-38.0056, 103.574, 23.6526, 0.88", "-37.4948, 104.904, 23.9249, 0.29", "-37.469, 104.976, 23.9334, 0.29", "-37.1014, 106.11, 24.0314, 0.29", "-37.0811, 106.184, 24.0342, 0.29", "-36.9207, 106.977, 24.0316, 0.29", "-36.9129, 107.055, 24.0274, 0.29", "-36.8893, 107.881, 23.9858, 1.03", "-36.9169, 108.737, 23.9623, 1.03", "-37.0156, 109.946, 23.9481, 1.03", "-37.1622, 111.323, 23.9462, 0.37", "-37.429, 113.317, 23.9643, 0.29", "-37.6757, 114.627, 24.1638, 0.29", "-37.878, 115.324, 24.3824, 0.52", "-37.9866, 115.599, 24.5177, 0.74", "-38.0194, 115.664, 24.5642, 0.74", "-38.1191, 115.824, 24.7253, 0.74", "-39.6394, 117.864, 27.586, 0.52", "-40.0343, 118.322, 28.3591, 0.52", "-40.0672, 118.359, 28.4287, 0.52", "-40.1474, 118.444, 28.6026, 0.88", "-40.1755, 118.473, 28.6647, 0.88", "-40.5476, 129.565, 28.2934, 0.88", "-40.3924, 140.66, 27.792, 0.88", "-39.5043, 151.672, 26.647, 0.88", "-38.2755, 162.702, 26.4947, 0.88", "-35.9675, 173.359, 28.2671, 0.88" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-25.6071, -0.437537, 8.08127, 0.59", "-27.2829, 0.12234, 7.89635, 0.59", "-28.252, 0.44018, 7.82813, 0.59", "-30.161, 1.08534, 7.74764, 0.59", "-31.3955, 1.50743, 7.71032, 0.52", "-33.1335, 2.0915, 7.66515, 0.52", "-33.3275, 2.15599, 7.66002, 0.52", "-35.0629, 2.78, 7.69256, 0.52", "-36.8127, 3.46818, 7.71744, 0.52", "-37.0746, 3.58329, 7.716, 0.52", "-38.6819, 4.34707, 7.6771, 0.52", "-38.7918, 4.40189, 7.67214, 0.52", "-39.825, 4.96601, 7.6096, 0.52", "-40.0676, 5.12018, 7.59496, 0.52", "-41.8711, 6.36793, 7.50927, 0.52", "-42.0414, 6.48503, 7.50707, 0.52", "-43.2741, 7.34099, 7.53755, 0.52", "-43.5486, 7.51451, 7.55366, 0.52", "-44.309, 7.90473, 7.62051, 0.52", "-44.3884, 7.93802, 7.63078, 0.52", "-45.6097, 8.28423, 7.82675, 0.52", "-45.6914, 8.30967, 7.83921, 0.52", "-46.6215, 8.6194, 7.97501, 0.66", "-47.8101, 9.05292, 8.14738, 0.66", "-48.892, 9.46123, 8.30259, 0.29", "-49.8296, 9.83446, 8.44986, 0.29", "-51.418, 10.48, 8.71182, 0.29", "-51.72, 10.6018, 8.76359, 0.29", "-52.7297, 11.0182, 8.83035, 0.29", "-53.673, 11.4299, 8.77075, 0.29", "-53.7394, 11.4592, 8.75495, 0.29", "-54.6153, 11.849, 8.41408, 0.29", "-54.7166, 11.8849, 8.35599, 0.29", "-56.8353, 12.6309, 6.9164, 0.29", "-57.0368, 12.7207, 6.7748, 0.29", "-57.8408, 13.1778, 6.24245, 0.29", "-57.9056, 13.2171, 6.2001, 0.29", "-58.8895, 13.8842, 5.58535, 0.29", "-59.0228, 13.9758, 5.52038, 0.29", "-60.6992, 15.1778, 5.19902, 0.29", "-61.21, 15.559, 5.09861, 0.29" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-76.4597, -39.5759, -60.544, 0.52", "-76.739, -40.6138, -64.0074, 0.52", "-76.9325, -41.2302, -65.7218, 0.37", "-77.0848, -41.6836, -67.1022, 0.37", "-77.2525, -43.3709, -71.3085, 0.37", "-77.2532, -43.4165, -71.413, 0.37", "-77.2817, -43.9895, -72.7976, 0.37", "-77.302, -44.1002, -73.1011, 0.37", "-77.776, -45.2005, -76.3339, 0.37", "-78.1214, -45.8838, -78.3368, 0.37", "-78.142, -45.9186, -78.4275, 0.37", "-78.8666, -46.861, -81.058, 0.37", "-79.13, -47.0822, -81.8168, 0.37", "-79.4863, -47.2909, -82.6152, 0.66", "-79.7427, -47.4086, -83.0674, 0.66", "-81.1347, -47.938, -85.3777, 0.29", "-81.4117, -48.0935, -85.9507, 0.29", "-82.3175, -48.9271, -88.202, 0.29", "-82.4026, -49.0579, -88.4732, 0.29", "-82.5976, -49.5055, -89.1824, 0.29", "-82.6202, -49.5705, -89.2743, 0.29", "-83.0066, -51.5949, -91.4191, 0.29", "-83.111, -52.5515, -92.327, 1.18", "-83.1726, -53.9397, -93.3392, 1.18", "-83.2416, -54.8492, -93.9982, 0.66" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-76.4597, -39.5759, -60.544, 1.18", "-77.3023, -39.768, -60.5298, 0.59", "-78.592, -40.0904, -60.5288, 0.59", "-79.5035, -40.3377, -60.5983, 0.96", "-80.6503, -40.6378, -60.7386, 0.96", "-81.8124, -40.9021, -60.9109, 0.52", "-83.0404, -41.156, -61.1092, 0.52", "-83.1414, -41.1752, -61.1318, 0.52", "-84.2469, -41.3909, -61.4545, 0.52", "-84.8797, -41.5209, -61.6724, 0.29", "-85.6363, -41.6714, -61.9669, 0.29", "-86.5877, -41.8592, -62.3401, 0.29", "-86.646, -41.8711, -62.3632, 0.29", "-87.6098, -42.0871, -62.7091, 0.88", "-88.7491, -42.3773, -63.0406, 0.88", "-88.8677, -42.4136, -63.0714, 0.88", "-89.4617, -42.6255, -63.2151, 0.88", "-89.5403, -42.6536, -63.2323, 0.88", "-90.2099, -42.8863, -63.3412, 0.52", "-90.8782, -43.1071, -63.41, 0.44", "-92.1819, -43.5155, -63.5848, 0.44", "-92.7887, -43.7001, -63.6815, 1.25", "-92.8888, -43.7298, -63.6959, 1.25", "-93.9591, -44.0464, -63.8284, 1.47", "-94.1111, -44.093, -63.844, 1.47", "-95.1967, -44.4011, -63.9291, 1.11", "-96.0462, -44.6036, -63.9674, 0.81", "-96.8522, -44.7539, -63.9743, 0.37", "-97.5134, -44.8542, -63.975, 0.29", "-98.3167, -44.954, -63.9556, 0.15", "-98.9555, -45.0275, -63.9228, 0.15", "-99.3752, -45.0752, -63.8862, 0.96", "-100.233, -45.1821, -63.8392, 0.96", "-100.845, -45.278, -63.8304, 0.96", "-101.743, -45.4502, -63.8187, 0.37", "-101.815, -45.468, -63.8164, 0.37", "-102.525, -45.6746, -63.7839, 0.37", "-103.463, -45.9814, -63.7651, 0.66", "-104.264, -46.2694, -63.7688, 0.44", "-105.013, -46.557, -63.7995, 0.74", "-105.842, -46.8499, -63.8577, 0.74", "-106.371, -47.0263, -63.8993, 0.59", "-107.378, -47.3674, -63.9897, 0.66", "-108.399, -47.7209, -64.1198, 1.03", "-109.077, -47.9729, -64.2265, 1.03", "-110.314, -48.4614, -64.4951, 0.59", "-111.072, -48.7733, -64.715, 0.44", "-112.01, -49.1744, -65.0206, 0.44", "-112.781, -49.5119, -65.3347, 0.88", "-113.522, -49.8475, -65.7015, 0.88", "-114.702, -50.4068, -66.3481, 0.52", "-115.81, -50.9554, -67.0236, 0.52", "-115.879, -50.9848, -67.0636, 0.52", "-117.205, -51.4588, -67.7643, 0.96", "-117.981, -51.6617, -68.0986, 0.52", "-118.86, -51.7863, -68.4248, 0.37", "-119.14, -51.8018, -68.5064, 0.37", "-120.757, -51.7682, -68.8947, 0.37", "-120.841, -51.7639, -68.9115, 0.37", "-122.263, -51.6409, -69.1377, 0.37", "-123.434, -51.5287, -69.353, 0.37", "-123.507, -51.5221, -69.3679, 0.37", "-125.041, -51.4697, -69.6327, 0.37", "-126.75, -51.5049, -69.8834, 0.37", "-126.835, -51.5121, -69.8917, 0.37", "-128.475, -51.8342, -69.8234, 0.37", "-128.546, -51.853, -69.8091, 0.37", "-129.994, -52.304, -69.347, 1.18", "-130.058, -52.3282, -69.3168, 1.18", "-130.723, -52.6049, -68.9375, 1.18", "-132.184, -53.227, -68.0907, 0.44", "-132.803, -53.4947, -67.7246, 0.22", "-133.836, -53.9413, -67.1205, 0.22", "-134.582, -54.2413, -66.7407, 0.59", "-134.717, -54.2957, -66.6744, 0.59", "-135.252, -54.5156, -66.4402, 0.59", "-135.744, -54.7255, -66.2714, 0.59", "-137.366, -55.5317, -65.5993, 0.44", "-138.462, -56.1523, -65.1029, 0.15", "-138.521, -56.1888, -65.0767, 0.15", "-139.475, -56.8058, -64.6662, 0.15", "-139.998, -57.1568, -64.4536, 0.52", "-141.093, -57.8913, -64.0797, 0.88", "-141.97, -58.4674, -63.8704, 0.52", "-142.651, -58.8855, -63.7638, 0.29", "-142.717, -58.9195, -63.7603, 0.29", "-143.235, -59.1534, -63.7649, 0.29", "-144.122, -59.4729, -63.8712, 0.29", "-144.192, -59.4886, -63.8911, 0.29", "-145.682, -59.5862, -64.3962, 0.29", "-146.092, -59.5766, -64.5621, 1.11" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-66.3964, -18.8425, 14.1504, 0.44", "-74.1559, -19.1423, 19.5802, 0.44", "-81.3959, -18.5024, 25.703, 0.44", "-89.1827, -19.1183, 31.057, 0.44", "-97.1182, -17.3838, 36.0225, 0.44", "-105.192, -14.5438, 40.2529, 0.44", "-112.992, -12.0931, 45.1781, 0.44", "-121.315, -9.64102, 49.116, 0.44", "-128.969, -4.78895, 52.3321, 0.44", "-137.332, -0.542183, 54.1866, 0.44", "-146.219, 2.64225, 55.3497, 0.44", "-154.933, 5.58604, 57.8177, 0.44" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-66.3964, -18.8425, 14.1504, 0.29", "-74.2854, -19.0603, 19.7302, 0.44", "-82.8532, -19.4905, 24.16, 0.44", "-91.8788, -19.5086, 27.588, 0.44", "-101.368, -19.8688, 29.2842, 0.44", "-110.524, -21.4584, 31.8727, 0.44", "-119.904, -23.6956, 32.4693, 0.44", "-128.558, -27.9045, 33.6923, 0.44", "-136.605, -32.9952, 35.6405, 0.44", "-144.357, -37.6241, 39.1464, 0.44", "-153.205, -40.2782, 41.9522, 0.44" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-115.308, -72.8588, -34.2893, 1.11", "-115.243, -73.2118, -34.466, 1.11", "-114.996, -74.6746, -35.2094, 0.52", "-114.891, -75.3918, -35.5727, 0.22", "-114.697, -76.779, -36.2747, 0.22", "-114.688, -76.8456, -36.308, 0.22", "-114.491, -78.2943, -36.9796, 0.22", "-114.48, -78.3849, -37.0176, 0.22", "-114.374, -79.0439, -37.2675, 1.11", "-114.357, -79.1231, -37.2949, 1.11", "-114.07, -80.0635, -37.5952, 1.11", "-113.573, -81.4767, -38.0138, 0.52", "-112.986, -82.8434, -38.3784, 0.29", "-112.413, -84.0307, -38.6848, 0.29", "-112.385, -84.0858, -38.6987, 0.29", "-111.87, -85.0144, -38.9269, 0.29", "-111.83, -85.0752, -38.9411, 0.29", "-111.127, -85.8971, -39.1382, 0.29", "-111.065, -85.9524, -39.1482, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-115.308, -72.8588, -34.2893, 0.74", "-115.377, -72.8804, -34.3056, 0.74", "-115.447, -72.9009, -34.3176, 0.74", "-117.149, -73.3712, -34.5555, 0.59", "-118.512, -73.7461, -34.7072, 0.44", "-120.264, -74.2279, -34.9023, 0.44", "-120.335, -74.2475, -34.9102, 0.44", "-121.418, -74.5332, -35.0259, 0.44", "-121.5, -74.553, -35.0339, 0.44", "-123.054, -74.7987, -35.1345, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-9.34294, 146.267, 13.8768, 0.15", "-9.45268, 146.413, 13.9031, 0.15", "-10.1934, 147.478, 14.059, 0.81", "-10.7192, 148.277, 14.2227, 0.22", "-11.3468, 149.245, 14.4288, 0.22", "-11.9156, 150.128, 14.6158, 0.22", "-11.9469, 150.177, 14.6259, 0.22", "-12.7574, 151.49, 14.8765, 0.22", "-13.53, 152.77, 15.1225, 0.22", "-13.8514, 153.32, 15.2663, 0.22", "-13.997, 153.577, 15.3522, 0.66", "-14.1944, 153.93, 15.4645, 0.81", "-14.2805, 154.081, 15.5133, 0.29", "-14.6838, 154.807, 15.7681, 0.37", "-14.84, 155.095, 15.8503, 0.37", "-15.2825, 155.814, 16.0992, 0.29", "-15.752, 156.408, 16.3398, 0.29", "-15.8013, 156.462, 16.3631, 0.29", "-16.3149, 156.984, 16.5874, 0.29", "-16.9901, 157.601, 16.8535, 0.29", "-18.2183, 158.62, 17.3304, 0.29", "-19.5417, 159.587, 17.8576, 0.29", "-19.7584, 159.73, 17.9476, 0.59", "-19.806, 159.758, 17.965, 0.59", "-20.0677, 159.888, 18.052, 0.59", "-20.1254, 159.913, 18.0705, 0.59", "-21.0271, 160.299, 18.3023, 0.29", "-21.079, 160.321, 18.3141, 0.29", "-22.3006, 160.794, 18.5041, 0.29", "-23.2004, 161.103, 18.5667, 0.29", "-23.5964, 161.213, 18.586, 0.59", "-23.8367, 161.255, 18.5953, 0.88", "-24.3312, 161.288, 18.592, 0.88", "-25.1724, 161.294, 18.5818, 0.44", "-26.0123, 161.235, 18.5957, 0.29", "-27.1365, 161.087, 18.6129, 0.22", "-28.5267, 160.831, 18.6681, 0.22", "-30.0692, 160.492, 18.774, 0.22", "-30.1534, 160.472, 18.7828, 0.22", "-31.2744, 160.157, 18.9408, 0.22", "-32.021, 159.92, 19.0476, 0.37", "-32.9095, 159.599, 19.1438, 0.37", "-33.0179, 159.553, 19.1582, 0.37", "-33.4285, 159.337, 19.2487, 0.37", "-33.486, 159.307, 19.2602, 0.37", "-40.059, 163.738, 21.6527, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.34294, 146.267, 13.8768, 0.66", "-9.25625, 146.637, 13.925, 0.66", "-9.01955, 147.641, 14.0297, 0.52", "-8.64996, 149.07, 14.1747, 0.52", "-8.62912, 149.147, 14.1825, 0.52", "-8.07165, 151.275, 14.3855, 0.52", "-7.54362, 153.314, 14.5712, 0.66", "-7.09107, 155.07, 14.7181, 0.66", "-6.7829, 156.405, 14.8034, 0.66", "-6.63185, 157.162, 14.8299, 1.47", "-6.45086, 158.252, 14.8401, 1.77", "-6.36085, 158.951, 14.8213, 1.77", "-6.35595, 159.032, 14.8191, 1.77", "-6.35146, 160.206, 14.7544, 1.25", "-6.41518, 161.934, 14.6404, 0.52", "-6.44871, 162.951, 14.5857, 0.74", "-6.45057, 163.032, 14.5835, 0.74", "-6.46756, 164.135, 14.5776, 0.96", "-6.46576, 164.297, 14.5814, 0.96", "-6.40707, 165.313, 14.6461, 0.96", "-6.28917, 166.588, 14.7732, 0.52", "-6.10398, 168.136, 14.9516, 0.52", "-6.06684, 168.386, 14.9833, 0.52", "-5.94004, 169.091, 15.0717, 0.96", "-5.75778, 170.141, 15.1906, 1.18", "-5.61558, 171.037, 15.2549, 0.96", "-5.48892, 172.159, 15.2849, 0.66", "-5.40688, 173.233, 15.2679, 0.52", "-5.36304, 174.205, 15.2278, 0.52", "-5.34378, 175.711, 15.1328, 0.52", "-5.36248, 177.301, 15.007, 0.66", "-5.47638, 180.017, 14.7579, 0.66", "-5.55292, 181.196, 14.6437, 1.25", "-5.64996, 182.45, 14.5262, 1.4", "-5.74508, 183.648, 14.4278, 1.03", "-5.80307, 184.572, 14.3657, 0.66", "-5.86833, 185.753, 14.3211, 0.44", "-5.87065, 185.846, 14.3189, 0.44", "-5.86293, 186.54, 14.3261, 0.44", "-5.85475, 186.632, 14.3295, 0.44", "-5.74681, 187.19, 14.3676, 0.66", "-5.72514, 187.268, 14.3721, 0.66", "-5.51855, 187.953, 14.4001, 0.96", "-5.4865, 188.062, 14.4039, 0.96", "-5.17127, 189.169, 14.4324, 0.96", "-5.14676, 189.258, 14.4342, 0.96", "-4.79728, 190.622, 14.4492, 0.66", "-4.43591, 192.104, 14.4605, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-27.9825, 147.687, -24.8792, 0.22", "-28.8312, 147.124, -24.7297, 0.22", "-29.5468, 146.65, -24.6035, 0.22", "-30.3428, 146.122, -24.4633, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-27.9825, 147.687, -24.8792, 0.52", "-28.3664, 147.879, -25.4954, 0.52", "-29.4335, 148.412, -27.2082, 0.52", "-30.2285, 148.809, -28.4842, 0.37", "-30.6688, 149.028, -29.1909, 0.37", "-32.1258, 149.756, -31.5295, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_146",
    "id" : "dend_146",
    "points3d" : [ "42.2134, -122.818, 137.964, 0.37", "47.0092, -128.127, 144.878, 0.37", "52.936, -131.29, 152.1, 0.37", "58.76, -135.446, 158.94, 0.37", "64.8998, -138.933, 165.842, 0.37", "69.7346, -142.533, 173.667, 0.37" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_145",
    "id" : "dend_145",
    "points3d" : [ "42.2134, -122.818, 137.964, 0.52", "46.6746, -128.527, 150.562, 0.37", "50.2131, -133.506, 163.722, 0.37", "51.3046, -137.694, 177.545, 0.37", "50.8349, -143.118, 191.008, 0.37", "51.753, -148.86, 204.329, 0.37" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "42.1693, 235.527, 33.6738, 0.59", "42.1976, 235.846, 33.6527, 0.59", "42.2872, 236.636, 33.618, 0.29", "42.3407, 237.081, 33.603, 0.29", "42.4378, 237.69, 33.5556, 0.29", "42.4504, 237.75, 33.55, 0.29", "42.5991, 238.37, 33.488, 0.96", "42.8096, 239.072, 33.4261, 0.96", "42.9262, 239.388, 33.3923, 0.96", "43.1925, 240.028, 33.3204, 0.52", "43.3666, 240.434, 33.3154, 0.37", "43.3981, 240.509, 33.3213, 0.37", "43.5912, 240.972, 33.3972, 0.37", "43.6105, 241.021, 33.4088, 0.37", "43.791, 241.6, 33.5604, 0.37", "43.9899, 242.724, 33.8362, 0.22", "44.038, 243.19, 33.9332, 0.22", "44.0514, 243.438, 33.9771, 1.11", "44.052, 243.835, 34.0353, 1.11", "44.029, 244.463, 34.101, 0.52", "43.9566, 245.477, 34.1342, 0.37", "43.9527, 245.53, 34.1309, 0.37", "43.9417, 245.708, 34.1209, 0.66", "43.9393, 245.785, 34.1174, 0.66", "43.9395, 245.839, 34.1157, 0.66", "43.9739, 246.666, 34.1013, 0.44", "44.0147, 247.456, 34.0931, 0.44", "44.0156, 247.51, 34.0922, 0.44", "43.9841, 248.199, 34.0714, 0.44", "43.9691, 248.362, 34.0618, 0.44", "43.8494, 249.199, 33.9914, 0.44", "43.8406, 249.244, 33.9865, 0.44", "43.7558, 249.638, 33.9393, 1.4", "43.5863, 250.431, 33.8415, 1.4", "43.4159, 251.216, 33.7398, 0.44", "43.2812, 251.899, 33.6539, 0.44", "43.2605, 252.012, 33.6397, 0.44", "43.163, 252.638, 33.555, 0.44", "43.1585, 252.692, 33.5484, 0.44", "43.1573, 252.891, 33.5167, 0.88", "43.199, 253.433, 33.3623, 0.88", "43.2149, 253.54, 33.3234, 0.88", "43.2856, 253.933, 33.1664, 0.22", "43.5305, 255.094, 32.6591, 0.15", "43.7406, 256.023, 32.2354, 0.15", "44.0591, 257.345, 31.6029, 0.15", "44.3547, 258.494, 31.0331, 0.15", "44.3658, 258.533, 31.0121, 0.15", "44.4204, 258.706, 30.9128, 0.59", "44.5115, 258.99, 30.7516, 0.59", "44.761, 259.812, 30.3499, 0.29", "44.8277, 260.065, 30.2515, 0.74", "45.031, 260.84, 29.9804, 0.29", "45.1126, 261.154, 29.8832, 0.22", "45.4948, 262.582, 29.507, 0.22", "45.5105, 262.632, 29.4968, 0.22", "45.6044, 262.897, 29.4672, 0.88", "45.7098, 263.163, 29.4577, 0.88", "45.7598, 263.266, 29.4676, 0.88", "45.9004, 263.469, 29.498, 0.29", "46.343, 263.833, 29.6234, 0.22", "46.383, 263.865, 29.6363, 0.22", "46.6315, 264.05, 29.7253, 0.81", "46.7926, 264.183, 29.7875, 0.81", "46.8305, 264.216, 29.8029, 0.81", "47.0801, 264.467, 29.9093, 0.22", "47.2908, 264.704, 30.0033, 0.22", "47.3627, 264.798, 30.0336, 0.22", "47.6205, 265.181, 30.1356, 0.22", "47.6869, 265.29, 30.1603, 0.22", "47.8103, 265.503, 30.1998, 0.22", "47.846, 265.57, 30.2071, 0.22", "48.071, 265.976, 30.2533, 0.22", "48.1058, 266.043, 30.2604, 0.22", "50.378, 273.409, 30.4703, 0.22" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "42.1693, 235.527, 33.6738, 0.52", "41.7149, 235.424, 33.7184, 0.52", "41.5238, 235.379, 33.7468, 0.52", "40.9397, 235.24, 33.8335, 0.44", "40.8542, 235.22, 33.8462, 0.44", "39.7638, 234.961, 34.0081, 0.44", "38.5704, 234.677, 34.1853, 0.15", "38.4846, 234.66, 34.2004, 0.15", "26.7446, 229.79, 35.1473, 0.15" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "155.87, -38.6064, 72.2293, 0.37", "160.329, -46.7123, 77.8691, 0.37", "165.366, -55.9318, 81.0041, 0.37", "170.305, -64.6929, 85.2252, 0.37", "176.279, -73.7474, 87.0604, 0.37", "181.852, -83.1676, 88.4457, 0.37" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "155.87, -38.6064, 72.2293, 0.52", "164.644, -38.6001, 71.0968, 0.37", "173.345, -39.8993, 69.8925, 0.37", "182.162, -40.6927, 69.5557, 0.37", "190.969, -40.8486, 70.3173, 0.37" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-35.9675, 173.359, 28.2671, 0.37", "-35.5813, 181.018, 29.6874, 0.37", "-36.5983, 188.411, 31.8377, 0.37", "-36.3694, 195.855, 34.1087, 0.37", "-35.6849, 202.861, 37.3781, 0.37" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-35.9675, 173.359, 28.2671, 0.52", "-35.1825, 186.619, 30.4601, 0.37", "-37.2755, 199.49, 33.557, 0.37", "-41.7773, 211.908, 35.4529, 0.37", "-45.2124, 224.813, 36.4851, 0.37" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-61.21, 15.559, 5.09861, 0.29", "-61.3283, 15.6046, 5.10122, 0.29" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-83.2416, -54.8492, -93.9982, 0.15", "-83.5726, -55.5449, -94.0213, 0.15", "-83.5943, -55.612, -94.0115, 0.15", "-83.7649, -56.1806, -93.894, 0.15", "-83.8179, -56.3285, -93.8694, 0.15", "-84.0618, -56.9694, -93.7753, 0.15", "-84.1125, -57.1096, -93.7448, 0.15", "-84.5901, -58.1495, -93.4897, 0.15", "-84.6384, -58.249, -93.4612, 0.15", "-85.1862, -59.291, -93.1334, 0.15", "-85.2348, -59.3736, -93.1061, 0.15", "-85.748, -60.2345, -92.7728, 0.15", "-86.5382, -61.5712, -92.2042, 0.15", "-86.5682, -61.6199, -92.1851, 0.15", "-87.0364, -62.3766, -91.8792, 0.15", "-87.2255, -62.6709, -91.754, 0.15", "-87.7185, -63.4315, -91.4423, 0.15", "-88.2792, -64.2841, -91.1238, 0.15", "-89.0857, -65.6164, -90.5963, 0.15", "-89.4361, -66.1911, -90.3724, 0.44", "-89.6996, -66.6213, -90.2072, 0.81" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-83.2416, -54.8492, -93.9982, 0.22", "-83.1327, -55.7336, -94.2554, 0.22", "-82.9116, -57.3847, -94.8155, 0.22", "-82.6524, -59.343, -95.5289, 0.22", "-82.505, -60.5174, -95.9765, 0.22", "-82.2214, -62.7691, -96.8778, 0.22", "-82.0902, -63.8166, -97.316, 0.22", "-82.0362, -64.1965, -97.505, 0.59", "-82.001, -64.3752, -97.6074, 0.59", "-81.9226, -64.7807, -97.8658, 0.59", "-81.819, -65.4993, -98.3803, 0.29", "-81.7919, -65.6506, -98.4981, 0.29", "-81.6036, -66.5678, -99.0676, 0.22", "-81.4033, -67.497, -99.6005, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-146.092, -59.5766, -64.5621, 0.59", "-146.431, -59.53, -63.8431, 0.59", "-146.713, -59.5142, -63.218, 0.59", "-147.069, -59.4454, -62.5091, 0.44", "-147.104, -59.4358, -62.4451, 0.44", "-147.723, -59.2805, -61.1286, 0.07", "-147.936, -59.158, -60.46, 0.07", "-147.951, -59.1387, -60.3899, 0.07", "-148.043, -58.8505, -59.6026, 0.07", "-148.071, -58.732, -59.3458, 0.07", "-148.253, -57.9001, -57.8127, 0.07", "-148.493, -56.8479, -56.0872, 0.07", "-148.709, -56.1134, -54.9298, 0.07", "-148.953, -55.5307, -54.0966, 0.07", "-149.302, -54.8347, -53.1715, 0.07", "-149.325, -54.7962, -53.125, 0.07", "-149.873, -54.0403, -52.3304, 0.07", "-150.694, -53.1675, -51.5176, 0.07", "-152.051, -51.9526, -50.4413, 0.07", "-152.134, -51.8825, -50.381, 0.07", "-152.547, -51.5307, -50.0985, 0.07", "-152.59, -51.4932, -50.07, 0.07", "-154.194, -50.1206, -49.1231, 0.07", "-156.638, -48.1027, -47.7454, 0.07", "-156.919, -47.8833, -47.588, 0.74", "-157.084, -47.7548, -47.4981, 0.74" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-146.092, -59.5766, -64.5621, 0.29", "-146.777, -59.9057, -64.906, 0.29", "-147.532, -60.2711, -65.2605, 0.22", "-148.804, -60.9451, -65.8345, 0.29", "-148.863, -60.9775, -65.8596, 0.29", "-149.662, -61.4443, -66.2016, 0.29", "-150.029, -61.6736, -66.3512, 0.52", "-150.086, -61.7116, -66.372, 0.52", "-150.559, -62.0604, -66.5321, 0.22", "-150.784, -62.246, -66.5949, 0.22", "-151.667, -62.9456, -66.9039, 0.07", "-152.502, -63.5674, -67.2394, 0.07", "-152.615, -63.6445, -67.2827, 0.07", "-153.052, -63.9169, -67.4351, 0.88", "-153.419, -64.129, -67.5556, 0.88", "-154.53, -64.7541, -67.916, 0.29", "-155.443, -65.2306, -68.1934, 0.29", "-156.428, -65.7078, -68.5001, 0.59", "-156.989, -65.9711, -68.6717, 0.59", "-157.052, -65.9984, -68.6898, 0.59" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-154.933, 5.58604, 57.8177, 0.37", "-166.135, 7.30172, 65.8072, 0.37", "-176.405, 8.76724, 75.0358, 0.37", "-188.523, 9.16068, 81.652, 0.37", "-201.149, 12.203, 86.4514, 0.37" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-154.933, 5.58604, 57.8177, 0.52", "-167.997, 9.72882, 61.9305, 0.37", "-180.562, 15.4223, 65.9524, 0.37", "-191.83, 21.8512, 72.2756, 0.37", "-201.626, 31.2789, 77.5674, 0.37" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-153.205, -40.2782, 41.9522, 0.37", "-164.67, -43.2907, 45.752, 0.37", "-176.331, -46.176, 49.0072, 0.37", "-187.221, -50.6914, 53.0882, 0.37", "-197.862, -55.8607, 57.1049, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-153.205, -40.2782, 41.9522, 0.52", "-164.413, -42.6511, 45.5727, 0.37", "-175.24, -44.8603, 50.2867, 0.37", "-186.361, -48.6943, 52.8349, 0.37", "-197.708, -52.4816, 54.2798, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-123.054, -74.7987, -35.1345, 0.52", "-122.883, -74.496, -35.0531, 0.52", "-122.463, -73.7525, -34.8533, 0.52", "-122.092, -73.0951, -34.6766, 0.37", "-121.54, -72.1198, -34.4144, 0.29", "-121.183, -71.4877, -34.2445, 0.15", "-121.143, -71.4163, -34.2253, 0.15" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-123.054, -74.7987, -35.1345, 0.44", "-123.308, -75.1578, -34.9435, 0.44", "-123.716, -75.7493, -34.6506, 0.74", "-124.239, -76.4955, -34.3412, 1.03", "-125.052, -77.4959, -33.9587, 1.03", "-126.032, -78.6538, -33.5869, 1.18", "-126.087, -78.7173, -33.5685, 1.18", "-126.428, -79.1233, -33.4609, 1.03", "-127.335, -80.2225, -33.1716, 0.52", "-128.617, -81.8267, -32.746, 0.52", "-129.217, -82.6597, -32.539, 0.52", "-129.27, -82.7396, -32.5177, 0.52", "-129.863, -83.7751, -32.2262, 0.52", "-129.906, -83.8599, -32.1993, 0.52", "-130.453, -85.1611, -31.7629, 0.52", "-131.01, -86.4657, -31.3843, 0.52", "-131.046, -86.5413, -31.3634, 0.52", "-131.56, -87.4892, -31.1407, 0.52", "-132.707, -89.2832, -30.8158, 0.52", "-132.757, -89.3532, -30.8079, 0.52", "-134.262, -91.2163, -30.7526, 0.52", "-134.312, -91.2701, -30.7586, 0.52", "-135.039, -92.0009, -30.9047, 1.03", "-135.815, -92.7361, -31.1358, 1.33", "-136.761, -93.653, -31.5413, 1.33", "-137.457, -94.339, -31.876, 0.88", "-138.954, -95.8272, -32.7398, 0.52", "-139.016, -95.8904, -32.7825, 0.52", "-140.15, -97.0368, -33.6176, 0.52", "-141.414, -98.3535, -34.6177, 0.52", "-141.474, -98.4155, -34.6664, 0.52", "-142.277, -99.2979, -35.3407, 1.11", "-143.347, -100.615, -36.1905, 1.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-4.43591, 192.104, 14.4605, 0.52", "-4.48065, 192.565, 14.5025, 0.52", "-4.54614, 193.401, 14.5763, 0.52", "-4.59679, 194.413, 14.5899, 0.66", "-4.63366, 195.533, 14.5692, 1.11", "-4.63886, 195.654, 14.5627, 1.11", "-4.6919, 196.854, 14.4814, 1.4", "-4.72539, 197.765, 14.3592, 1.4", "-4.76074, 198.806, 14.1341, 1.11", "-4.76491, 198.883, 14.1135, 1.11", "-4.85534, 200.587, 13.6242, 0.81", "-4.85945, 200.663, 13.6017, 0.81", "-4.94337, 202.711, 13.0212, 0.74", "-4.95501, 204.163, 12.7169, 0.66", "-4.9029, 205.757, 12.5094, 0.66", "-4.82356, 207.044, 12.3891, 0.66", "-4.81361, 207.176, 12.3843, 0.66", "-4.72979, 208.462, 12.3889, 0.74", "-4.58497, 211.588, 12.6313, 0.74", "-4.52349, 214.028, 12.9438, 0.74", "-4.52371, 214.198, 12.9695, 0.74", "-4.59453, 215.727, 13.1969, 0.74", "-4.70721, 216.827, 13.3347, 1.25", "-4.96619, 218.282, 13.4714, 1.69", "-5.01322, 218.454, 13.4811, 1.69", "-5.31091, 219.463, 13.5089, 1.69", "-5.55828, 220.42, 13.5011, 1.25", "-5.7904, 221.677, 13.4331, 0.81", "-5.87752, 222.592, 13.3908, 0.81", "-5.87731, 222.782, 13.3868, 0.81", "-5.86038, 223.636, 13.4192, 0.81", "-5.85787, 223.704, 13.4239, 0.81", "-5.82494, 224.964, 13.5278, 0.81", "-5.80916, 226.238, 13.6264, 0.81", "-5.86592, 228.526, 13.7921, 0.74", "-5.97189, 230.367, 13.9165, 0.74", "-6.04529, 231.35, 13.9471, 1.11", "-6.09057, 232.131, 13.9349, 1.4", "-6.1322, 232.926, 13.8822, 1.55", "-6.18727, 234.188, 13.7402, 1.03", "-6.20708, 235.189, 13.5801, 0.81", "-6.1807, 237.096, 13.2507, 0.59", "-6.10696, 238.653, 12.9413, 0.59", "-5.99685, 240.073, 12.6294, 0.59", "-5.98907, 240.162, 12.6095, 0.59", "-5.89292, 241.233, 12.3702, 0.88", "-5.78027, 242.666, 12.0763, 0.88", "-5.65691, 244.932, 11.7184, 0.81", "-5.6541, 245.012, 11.7083, 0.81", "-5.55445, 247.108, 11.4842, 0.66", "-5.5302, 247.857, 11.4503, 0.66", "-5.52772, 247.948, 11.4521, 0.66", "-5.5071, 249.125, 11.5614, 1.11", "-5.50808, 250.106, 11.741, 1.47", "-5.50028, 251.016, 11.9225, 1.47", "-5.49927, 252.367, 12.2759, 1.33", "-5.53988, 253.472, 12.5817, 0.66", "-5.54618, 253.538, 12.5985, 0.66", "-5.63981, 254.073, 12.7424, 0.52", "-5.83742, 254.949, 12.966, 0.52", "-6.06409, 255.846, 13.1786, 0.74", "-6.2363, 256.654, 13.3347, 0.96", "-6.52808, 258.097, 13.6165, 0.96", "-6.81826, 259.942, 13.9118, 0.66", "-6.99103, 261.455, 14.1069, 0.66", "-6.99515, 261.535, 14.1134, 0.66", "-6.96087, 263.04, 14.1543, 0.66", "-6.95344, 263.119, 14.1537, 0.66", "-6.77262, 264.492, 14.0788, 0.66", "-6.74333, 264.794, 14.0345, 0.66", "-6.70388, 265.848, 13.8235, 0.66", "-6.70833, 266.028, 13.7844, 0.66", "-6.80657, 267.137, 13.5246, 0.66", "-6.93089, 268.311, 13.2349, 0.66", "-7.13722, 269.767, 12.9535, 0.66", "-7.26177, 270.803, 12.8369, 0.52", "-7.26791, 270.871, 12.8345, 0.52", "-7.33461, 271.939, 12.91, 0.52", "-7.33689, 272.018, 12.9249, 0.52", "-7.34513, 273.579, 13.3554, 0.52", "-7.36337, 275.006, 13.8664, 0.52", "-7.37142, 275.157, 13.9202, 0.52", "-7.44005, 276.106, 14.1972, 0.81", "-7.50899, 277.103, 14.4371, 1.25", "-7.59076, 278.269, 14.6738, 1.47", "-7.65334, 279.056, 14.7911, 1.47", "-7.76011, 280.136, 14.9297, 0.81", "-7.93735, 281.732, 15.1133, 0.52", "-8.12705, 283.093, 15.2705, 0.52", "-8.41538, 284.831, 15.4993, 0.52", "-8.56397, 285.638, 15.619, 1.18", "-8.84721, 287.049, 15.8444, 1.18", "-9.12419, 288.382, 16.0969, 0.66", "-9.36606, 289.681, 16.3973, 0.52", "-9.37061, 289.758, 16.4166, 0.52", "-9.2845, 290.236, 16.5427, 0.44", "-9.2556, 290.32, 16.5616, 0.44", "-8.94889, 291.097, 16.734, 0.44", "-8.38515, 292.564, 17.0236, 0.44", "-7.72842, 294.401, 17.3402, 0.44", "-7.19962, 296.162, 17.6091, 0.44", "-6.56295, 298.723, 17.9486, 0.44", "-6.22452, 300.397, 18.0927, 0.44", "-6.06419, 301.52, 18.1105, 0.44", "-6.01802, 302.2, 18.0711, 1.4", "-5.97741, 303.406, 17.931, 1.4", "-5.96998, 303.645, 17.889, 1.4", "-5.90143, 305.148, 17.5707, 0.96", "-5.78668, 306.623, 17.2218, 0.66", "-5.66599, 308.014, 16.9139, 0.52", "-5.56781, 309.311, 16.6562, 0.52", "-5.56028, 309.401, 16.6395, 0.52", "-5.42039, 310.892, 16.3843, 0.52", "-5.32223, 311.993, 16.2267, 0.81", "-5.25424, 312.64, 16.1316, 1.25", "-5.16851, 313.289, 16.0272, 1.25", "-5.01125, 314.584, 15.8183, 0.66", "-4.78532, 316.149, 15.577, 0.52", "-4.77422, 316.215, 15.567, 0.52", "-4.61854, 317.288, 15.4273, 0.52", "-4.52022, 318.131, 15.3397, 0.52", "-4.45989, 319.326, 15.258, 0.52", "-4.46288, 319.406, 15.2569, 0.52", "-4.55581, 320.197, 15.2925, 0.66", "-4.69618, 321.278, 15.38, 0.96", "-4.70671, 321.357, 15.3887, 0.96", "-4.77767, 322.189, 15.478, 1.11", "-4.79531, 322.947, 15.5628, 0.59", "-4.72331, 324.262, 15.5928, 0.22", "-4.60574, 325.231, 15.5505, 0.22", "-4.48922, 326.075, 15.4941, 0.52", "-4.33865, 327.219, 15.393, 0.96", "-4.2437, 327.956, 15.3047, 1.18", "-4.0059, 330.06, 14.9906, 0.52", "-3.8968, 331.456, 14.7642, 0.52", "-3.88978, 332.665, 14.597, 0.37", "-3.92902, 333.346, 14.5314, 0.81", "-3.94816, 333.517, 14.5284, 0.81", "-4.06663, 334.408, 14.5773, 0.81", "-4.20994, 335.459, 14.7134, 0.52", "-4.24663, 336.48, 14.8354, 0.52", "-4.24086, 336.571, 14.8452, 0.52", "-4.16039, 337.278, 14.9263, 0.88", "-4.00573, 338.549, 15.055, 0.88", "-3.87099, 339.546, 15.143, 0.52", "-3.6691, 341.159, 15.2193, 0.52", "-3.52765, 342.583, 15.2482, 0.52", "-3.52195, 342.663, 15.246, 0.52", "-3.45832, 344.159, 15.1413, 0.52", "-3.45658, 344.28, 15.1285, 0.52", "-3.47326, 345.635, 14.963, 0.52", "-3.48919, 346.96, 14.7253, 0.52", "-3.46743, 347.946, 14.5368, 0.81", "-3.41585, 348.941, 14.355, 1.25", "-3.40803, 349.031, 14.3394, 1.25", "-3.31838, 350.105, 14.1644, 1.25", "-3.18738, 351.637, 13.9394, 0.66", "-3.08297, 352.726, 13.8134, 0.44", "-2.93952, 353.84, 13.7274, 0.37", "-2.92301, 353.93, 13.723, 0.37", "-2.71639, 354.734, 13.7261, 0.37", "-2.67464, 354.847, 13.736, 0.37", "-2.05335, 355.953, 13.7782, 0.37", "-1.66892, 356.527, 13.7612, 0.59", "-1.22321, 357.142, 13.7224, 0.88", "-0.657651, 357.914, 13.6311, 1.11", "-0.136878, 358.62, 13.5067, 1.11", "1.4381, 360.938, 13.0077, 0.37", "2.12511, 362.046, 12.6766, 0.37", "2.2028, 362.186, 12.6215, 0.37", "2.63617, 363.03, 12.2341, 1.03", "3.06379, 363.925, 11.7796, 1.33", "3.42491, 364.754, 11.3698, 1.33", "3.96008, 366.152, 10.7615, 0.52", "4.42526, 367.346, 10.2479, 0.37", "4.68614, 368.032, 9.98544, 0.29", "4.71109, 368.104, 9.96203, 0.29", "5.01367, 369.19, 9.67478, 0.29", "5.03699, 369.347, 9.65368, 0.29", "5.01059, 370.439, 9.6581, 0.29", "4.99723, 370.529, 9.66173, 0.29", "4.70114, 371.594, 9.70488, 0.66", "4.34482, 372.621, 9.74981, 0.81", "3.76764, 374.025, 9.80088, 0.81", "3.37716, 374.996, 9.862, 1.4", "3.03979, 375.983, 9.95323, 1.4", "2.53625, 377.679, 10.1521, 0.66", "2.51457, 377.767, 10.1676, 0.66", "2.28002, 379.064, 10.4289, 0.59", "2.0948, 380.61, 10.7532, 0.37", "1.91487, 382.912, 11.2971, 0.37", "1.91167, 382.978, 11.3132, 0.37", "1.82982, 384.611, 11.7355, 0.37", "1.73781, 385.738, 12.0387, 0.37", "1.72897, 385.814, 12.0604, 0.37", "1.58623, 386.522, 12.2753, 1.11", "1.29708, 387.513, 12.5834, 1.25", "0.723355, 389.259, 13.0742, 1.25", "0.391994, 390.167, 13.3066, 1.25", "0.366451, 390.239, 13.3263, 1.25", "-0.111424, 391.702, 13.7271, 0.59", "-0.386895, 392.72, 14.0399, 0.29", "-0.55378, 393.586, 14.3285, 0.29", "-0.56884, 393.739, 14.3756, 0.29", "-0.624263, 394.915, 14.7586, 0.29", "-0.623757, 394.991, 14.7828, 0.29", "-0.52814, 396.381, 15.1604, 0.29", "-0.51912, 396.471, 15.1738, 0.29", "-0.479347, 397.096, 15.0674, 0.29", "-0.467908, 397.551, 14.8341, 0.66", "-0.460264, 397.694, 14.7453, 0.66", "-0.385636, 398.581, 14.1612, 0.66", "-0.159118, 400.163, 13.1992, 0.66", "0.113712, 401.596, 12.4436, 0.52", "0.460209, 402.981, 11.7476, 0.52", "0.847529, 404.288, 11.0795, 0.52", "0.88036, 404.392, 11.0289, 0.52", "1.51355, 406.297, 10.1752, 0.52", "1.67154, 406.821, 9.98664, 0.74", "2.11209, 408.386, 9.43431, 0.74", "2.46209, 409.859, 8.86211, 0.59", "2.56489, 410.491, 8.57272, 0.59", "2.60921, 410.875, 8.38604, 0.88", "2.63206, 411.74, 7.96164, 0.88", "2.6645, 413.191, 7.35041, 1.11", "2.70139, 414.157, 7.0654, 0.59", "2.76156, 415.101, 6.8381, 0.52", "2.76877, 415.179, 6.82031, 0.52", "3.0086, 417.028, 6.37791, 0.52", "3.29409, 418.818, 5.90417, 0.52", "3.6172, 420.722, 5.44005, 0.52", "3.91001, 422.212, 5.06918, 0.52", "3.93, 422.298, 5.04655, 0.52", "4.20689, 423.405, 4.73221, 0.52", "4.54891, 424.479, 4.36081, 1.25" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-4.43591, 192.104, 14.4605, 0.59", "-4.45623, 192.134, 14.4476, 0.59", "-4.70879, 192.507, 14.2871, 0.59", "-5.01221, 192.955, 14.0944, 0.37", "-5.19774, 193.229, 13.9765, 0.37", "-5.3991, 193.527, 13.8486, 0.15", "-9.08014, 198.469, 11.5402, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-61.3283, 15.6046, 5.10122, 0.52", "-61.6064, 15.9891, 4.90386, 0.52", "-61.9021, 16.4139, 4.74629, 0.52", "-61.9938, 16.5488, 4.70438, 0.52", "-62.3823, 17.0888, 4.53165, 0.22", "-62.8113, 17.6697, 4.33894, 0.22", "-62.931, 17.8316, 4.28522, 0.22", "-63.3836, 18.4306, 4.12055, 0.22", "-63.4828, 18.5613, 4.08393, 0.22", "-63.9021, 19.1206, 3.94608, 0.22", "-63.9391, 19.1686, 3.93897, 0.59" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-61.3283, 15.6046, 5.10122, 0.66", "-61.4574, 15.4413, 4.99471, 0.66", "-61.9285, 14.8458, 4.60621, 0.66", "-62.4942, 14.1308, 4.13971, 0.15", "-67.6923, 7.20347, -0.867672, 0.15" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-81.4033, -67.497, -99.6005, 0.29", "-80.9486, -67.568, -99.3964, 0.29", "-80.5366, -67.6324, -99.2115, 0.29", "-80.4895, -67.6397, -99.1903, 0.29", "-79.8948, -67.7326, -98.9234, 0.29", "-79.7719, -67.7518, -98.8682, 0.29", "-78.8098, -67.9021, -98.4363, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-81.4033, -67.497, -99.6005, 0.22", "-82.0953, -68.4374, -100.275, 0.22", "-83.1878, -69.8471, -101.233, 0.22", "-83.8119, -70.6524, -101.779, 0.81", "-84.3825, -71.3887, -102.279, 0.37", "-85.5128, -72.8472, -103.27, 0.29", "-85.7907, -73.2059, -103.513, 0.29", "-85.8511, -73.2696, -103.558, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-143.347, -100.615, -36.1905, 0.59", "-143.083, -101.351, -36.6697, 0.59", "-142.96, -102.267, -37.1066, 0.29", "-142.957, -102.36, -37.1445, 0.29", "-142.941, -103.534, -37.6033, 0.29", "-142.939, -103.617, -37.634, 0.29", "-142.884, -105.211, -38.2093, 0.29", "-142.852, -106.529, -38.6371, 0.29", "-142.862, -108.989, -39.4061, 0.29", "-142.862, -109.086, -39.436, 0.29", "-142.881, -110.416, -39.8421, 0.59", "-142.88, -110.5, -39.8673, 0.59", "-142.841, -111.071, -40.0246, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-143.347, -100.615, -36.1905, 0.96", "-143.424, -100.66, -36.203, 0.96", "-144.085, -101.111, -36.3388, 0.96", "-144.713, -101.549, -36.5174, 0.74", "-144.786, -101.598, -36.5395, 0.74", "-145.952, -102.262, -36.8591, 0.59", "-146.007, -102.291, -36.8732, 0.59", "-147.434, -102.937, -37.2185, 0.59", "-148.305, -103.275, -37.4189, 0.59", "-148.998, -103.503, -37.5646, 0.52", "-149.927, -103.758, -37.7598, 0.52", "-149.987, -103.772, -37.7741, 0.52", "-150.441, -103.886, -37.9095, 0.52", "-150.564, -103.922, -37.9555, 0.52", "-151.255, -104.203, -38.2757, 0.52", "-151.759, -104.504, -38.6109, 0.88", "-152.524, -105.076, -39.2354, 1.18", "-153.016, -105.487, -39.7194, 0.88", "-153.458, -105.904, -40.2203, 0.66", "-153.518, -105.956, -40.2964, 0.66", "-154.097, -106.428, -41.1024, 0.66", "-154.131, -106.454, -41.1504, 0.66", "-154.606, -106.781, -41.8376, 0.66", "-155.022, -107.049, -42.4087, 0.66", "-155.993, -107.638, -43.7775, 0.66", "-156.031, -107.661, -43.8232, 0.66", "-156.436, -107.89, -44.1812, 1.11", "-156.491, -107.922, -44.2163, 1.11", "-157.022, -108.204, -44.4841, 1.11", "-158.017, -108.7, -44.919, 0.74", "-159.182, -109.267, -45.3243, 0.52", "-160.419, -109.812, -45.7342, 0.52", "-161.386, -110.174, -46.0184, 0.52", "-162.773, -110.631, -46.3904, 1.25", "-162.832, -110.646, -46.4034, 1.25", "-163.357, -110.78, -46.4932, 1.25", "-163.415, -110.797, -46.5091, 1.25", "-164.333, -111.193, -46.7411, 0.96", "-164.405, -111.233, -46.7571, 0.96", "-165.123, -111.725, -46.8775, 0.59", "-166.313, -112.663, -47.0868, 0.44", "-167.428, -113.645, -47.291, 0.44", "-168.278, -114.535, -47.3977, 0.74", "-168.792, -115.166, -47.4618, 1.11", "-169.283, -115.834, -47.5187, 1.11", "-169.703, -116.47, -47.5605, 0.81", "-169.739, -116.523, -47.5625, 0.81", "-170.924, -117.949, -47.6162, 0.29", "-171.631, -118.62, -47.7086, 0.29", "-171.689, -118.664, -47.7168, 0.29", "-172.251, -119.009, -47.8145, 0.29", "-173.205, -119.502, -48.0138, 0.29", "-174.178, -119.98, -48.2714, 0.29", "-174.295, -120.036, -48.3122, 0.29", "-174.561, -120.213, -48.403, 0.88", "-175.028, -120.597, -48.6071, 0.88", "-175.123, -120.691, -48.6614, 0.88", "-175.508, -121.151, -48.8951, 0.66", "-176.084, -121.906, -49.2437, 0.29", "-176.768, -122.822, -49.6339, 0.15", "-177.273, -123.508, -49.907, 0.88", "-177.793, -124.218, -50.1777, 1.11", "-178.399, -125.054, -50.4821, 0.37", "-178.935, -125.778, -50.7671, 0.37", "-179.507, -126.551, -51.084, 0.37", "-179.836, -127.013, -51.2794, 1.03", "-180.185, -127.514, -51.4935, 1.18", "-180.572, -128.116, -51.7743, 1.18", "-181.267, -129.438, -52.4612, 0.52", "-181.299, -129.515, -52.5009, 0.52", "-181.595, -130.553, -53.0152, 0.52", "-181.61, -130.637, -53.0548, 0.52", "-181.785, -132.149, -53.7268, 0.37", "-181.877, -133.629, -54.3482, 0.37", "-181.905, -134.206, -54.5533, 1.03", "-181.968, -134.993, -54.8133, 1.03", "-182.101, -136.239, -55.1971, 0.59", "-182.251, -137.24, -55.4709, 0.29", "-182.265, -137.312, -55.4878, 0.29", "-182.664, -138.737, -55.7801, 0.29", "-183.106, -140.046, -56.026, 0.29", "-183.379, -140.69, -56.1624, 0.29", "-183.715, -141.34, -56.3276, 0.88", "-183.746, -141.395, -56.3442, 0.88", "-184.122, -142.041, -56.5736, 0.88", "-184.533, -142.701, -56.8612, 0.44", "-185.213, -143.778, -57.3682, 0.29", "-185.829, -144.855, -57.9918, 0.29", "-185.879, -144.954, -58.0604, 0.29", "-186.018, -145.269, -58.2935, 0.81", "-186.037, -145.319, -58.3319, 0.81", "-186.214, -145.87, -58.7835, 0.81", "-186.558, -147.347, -60.0329, 0.52", "-186.684, -147.998, -60.6466, 1.18", "-186.799, -148.538, -61.172, 1.18" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "4.54891, 424.479, 4.36081, 1.69", "4.33133, 425.587, 4.49672, 1.69", "4.1978, 426.152, 4.62915, 1.69", "3.94508, 427.138, 4.91132, 0.52", "3.75585, 427.877, 5.12259, 0.52", "3.58142, 428.557, 5.31735, 0.52", "3.48613, 428.929, 5.42374, 0.52", "3.25124, 429.782, 5.80303, 0.52", "3.23921, 429.829, 5.82558, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "4.54891, 424.479, 4.36081, 0.37", "4.39842, 424.546, 4.19466, 0.37", "3.61788, 424.892, 3.33293, 0.37", "2.66383, 425.316, 2.27964, 0.37", "2.14507, 425.546, 1.70692, 0.37", "1.14358, 425.991, 0.601241, 1.03", "1.01253, 426.049, 0.456558, 1.03" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-63.9391, 19.1686, 3.93897, 0.37", "-64.1313, 19.3121, 3.94035, 0.37", "-64.2835, 19.4233, 3.94256, 0.37", "-65.1402, 20.0509, 3.95733, 0.37", "-65.2769, 20.1535, 3.96007, 0.37", "-66.0381, 20.7348, 3.9768, 0.29", "-66.1092, 20.7923, 3.97865, 0.29", "-66.8092, 21.3661, 3.94737, 0.29", "-66.8722, 21.4144, 3.93984, 0.29", "-67.11, 21.567, 3.89252, 0.29", "-67.2184, 21.6302, 3.86638, 0.29", "-67.9202, 22.0024, 3.65081, 0.29", "-68.7221, 22.4084, 3.37563, 0.29", "-69.6066, 22.9047, 3.26313, 0.22", "-70.6319, 23.5825, 3.20957, 0.22", "-70.6875, 23.6221, 3.20918, 0.22", "-71.4291, 24.1966, 3.16127, 0.22", "-71.482, 24.2396, 3.15444, 0.22", "-74.0271, 26.4566, 2.74968, 0.22", "-75.842, 28.1246, 2.3664, 0.22", "-75.9177, 28.1942, 2.34332, 0.22", "-77.6296, 29.6598, 1.7092, 0.22", "-78.2689, 30.1495, 1.42059, 0.96", "-78.3209, 30.1839, 1.39345, 0.96", "-78.949, 30.5286, 0.99786, 0.96", "-80.2002, 31.1307, 0.332686, 0.22", "-81.0596, 31.5616, -0.0504623, 0.22", "-81.7582, 31.9357, -0.294969, 0.22", "-82.9589, 32.6763, -0.648124, 0.22", "-84.1084, 33.4402, -0.954987, 0.22", "-84.264, 33.5496, -0.989332, 0.22", "-84.9759, 34.0797, -1.1006, 0.22", "-85.6723, 34.6018, -1.19338, 0.22", "-87.1567, 35.6994, -1.34469, 0.22", "-87.5841, 35.9811, -1.41912, 0.22", "-88.4943, 36.4647, -1.61004, 0.22", "-88.6655, 36.5404, -1.65178, 0.22", "-89.9179, 37.0017, -2.03643, 0.22", "-89.9887, 37.025, -2.06165, 0.22", "-91.8164, 37.606, -2.95479, 0.22", "-92.9413, 37.9688, -3.55631, 0.22", "-93.0065, 37.9899, -3.59492, 0.22", "-94.3557, 38.4349, -4.44678, 0.22", "-94.4177, 38.4564, -4.49028, 0.22", "-96.2583, 39.1419, -5.75909, 0.22" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-63.9391, 19.1686, 3.93897, 0.15", "-64.2035, 19.1228, 7.50228, 0.15", "-64.2366, 19.1092, 8.13723, 0.07", "-64.2388, 19.1024, 8.31631, 0.07", "-64.1558, 19.0053, 9.82788, 0.29", "-64.2305, 19.0211, 9.80308, 0.29", "-64.5603, 19.0189, 9.89906, 0.29", "-64.9714, 18.9796, 9.95641, 0.29", "-65.769, 18.8599, 10.1354, 0.29", "-65.9333, 18.8308, 10.1769, 0.29", "-67.4092, 18.551, 10.6002, 0.29", "-69.4158, 18.1025, 11.1958, 0.29", "-70.4654, 17.8335, 11.5181, 0.29", "-70.612, 17.788, 11.566, 0.29", "-71.8518, 17.3544, 11.9903, 0.29", "-72.0064, 17.2987, 12.0427, 0.29", "-72.8996, 16.9676, 12.3351, 0.29", "-72.9817, 16.9379, 12.3642, 0.29", "-73.6935, 16.674, 12.7197, 0.22", "-73.9154, 16.5947, 12.8416, 0.22", "-74.3512, 16.4454, 13.1043, 0.22", "-74.4181, 16.425, 13.144, 0.22", "-76.0107, 16.0411, 14.0534, 0.22", "-76.5207, 15.9317, 14.342, 0.22", "-77.4155, 15.7434, 14.8418, 0.22", "-77.5635, 15.7066, 14.9216, 0.22", "-78.5648, 15.4511, 15.4093, 0.22", "-80.0064, 15.0759, 16.0158, 0.22", "-80.07, 15.0582, 16.0356, 0.22", "-80.6434, 14.8838, 16.1917, 0.22", "-81.3728, 14.6544, 16.3598, 0.22", "-82.3236, 14.3742, 16.5742, 0.22", "-82.4869, 14.3299, 16.6064, 0.22", "-83.399, 14.1456, 16.7646, 0.22", "-84.52, 13.9872, 16.9617, 0.22", "-84.63, 13.9792, 16.9879, 0.22", "-86.2135, 13.9441, 17.4545, 0.22", "-86.3979, 13.9466, 17.517, 0.22", "-88.228, 14.0431, 18.1786, 0.22", "-88.4709, 14.0734, 18.279, 0.22", "-89.6412, 14.2769, 18.8036, 0.22", "-89.8819, 14.3163, 18.9063, 0.22", "-90.5292, 14.422, 19.1578, 0.22", "-90.7004, 14.4433, 19.2367, 0.22", "-91.6274, 14.5423, 19.6659, 0.22", "-91.7004, 14.547, 19.6989, 0.22", "-92.6078, 14.5809, 20.0809, 0.22", "-92.8409, 14.578, 20.1764, 0.22", "-93.8941, 14.5298, 20.5956, 0.22", "-94.8983, 14.4862, 20.9612, 0.22", "-97.1476, 14.3911, 21.7004, 0.22", "-97.2351, 14.3934, 21.7272, 0.22", "-98.4358, 14.5034, 22.0706, 0.22", "-98.6729, 14.5193, 22.1543, 0.22", "-99.5201, 14.5583, 22.4846, 0.22", "-99.6303, 14.5568, 22.5363, 0.22", "-100.77, 14.4963, 23.0422, 0.22", "-100.842, 14.4907, 23.076, 0.22", "-103.1, 14.2176, 24.4509, 0.22", "-103.255, 14.1908, 24.5576, 0.22", "-103.942, 13.9947, 25.0617, 0.22", "-104.585, 13.6954, 25.5327, 0.22", "-104.825, 13.5423, 25.7089, 0.22", "-106.037, 12.7449, 26.6436, 0.22", "-106.096, 12.7069, 26.6833, 0.22", "-106.976, 12.1373, 27.2756, 0.22", "-108.214, 11.2941, 28.0437, 0.22", "-108.274, 11.2514, 28.0777, 0.22", "-109.881, 10.1935, 28.8716, 0.22", "-111.449, 9.28644, 29.5029, 0.22", "-111.545, 9.23798, 29.5404, 0.22", "-113.127, 8.68844, 30.0256, 0.22", "-113.292, 8.65373, 30.0599, 0.22", "-114.627, 8.52234, 30.1671, 0.22", "-115.199, 8.53886, 30.1221, 0.66", "-115.375, 8.56401, 30.102, 0.66", "-117.19, 8.88424, 29.9133, 0.66", "-117.268, 8.90145, 29.9049, 0.66", "-118.896, 9.18383, 29.7416, 0.66", "-119.235, 9.22778, 29.7091, 0.66", "-120.72, 9.33495, 29.6027, 0.66", "-121.441, 9.34885, 29.5781, 0.37", "-121.613, 9.33837, 29.5829, 0.37", "-122.551, 9.26119, 29.5931, 0.29", "-123.382, 9.17205, 29.5979, 0.15", "-123.866, 9.13412, 29.5974, 0.22", "-124.037, 9.12252, 29.5942, 0.22", "-124.896, 9.06328, 29.6417, 0.22", "-125.325, 9.0368, 29.6775, 0.22", "-125.836, 8.99685, 29.7531, 0.22", "-125.991, 8.97772, 29.789, 0.22", "-126.658, 8.90486, 30.0044, 0.22", "-127.844, 8.76536, 30.4649, 0.22", "-138.836, 8.50333, 33.6597, 0.22", "-149.53, 9.52472, 37.6373, 0.22", "-160.257, 10.819, 41.4509, 0.22" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-186.799, -148.538, -61.172, 0.74", "-186.295, -149.25, -61.4893, 0.74", "-186.037, -149.552, -61.6049, 0.59", "-185.419, -150.24, -61.8506, 0.59", "-185.302, -150.366, -61.8928, 0.59", "-184.667, -151.031, -62.1705, 0.52", "-183.71, -152.016, -62.6219, 0.29", "-183.024, -152.714, -62.9086, 0.29", "-182.956, -152.779, -62.9367, 0.29", "-181.663, -153.906, -63.4534, 0.29", "-180.938, -154.546, -63.7638, 0.59", "-180.905, -154.574, -63.7797, 0.59" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-186.799, -148.538, -61.172, 0.81", "-187.14, -149.307, -61.2033, 0.81", "-187.624, -150.491, -61.2398, 0.52", "-188.255, -152.061, -61.2836, 0.44", "-188.681, -153.153, -61.3665, 0.44", "-189.442, -155.11, -61.6497, 0.44", "-189.817, -156.038, -61.8364, 0.88", "-190.179, -156.95, -62.061, 0.88", "-190.241, -157.112, -62.1189, 0.88", "-190.72, -158.213, -62.7017, 0.59", "-191.171, -159.03, -63.2842, 0.66", "-191.696, -159.766, -63.9575, 0.44", "-191.753, -159.841, -64.03, 0.44", "-192.392, -160.615, -64.7827, 0.44", "-192.958, -161.297, -65.3848, 1.18", "-193.608, -162.048, -65.9292, 1.18", "-194.631, -163.234, -66.689, 1.77" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.23921, 429.829, 5.82558, 0.66", "3.06058, 430.031, 5.51363, 0.66", "2.60543, 430.429, 4.81648, 0.37", "2.11784, 430.845, 4.11283, 0.22", "1.39809, 431.508, 3.11667, 0.22", "0.968742, 431.995, 2.49407, 0.22", "0.881996, 432.121, 2.36424, 0.22", "0.532871, 432.778, 1.87199, 0.22", "0.371547, 433.225, 1.67386, 0.22", "0.25963, 433.823, 1.50132, 0.52", "0.154553, 434.847, 1.28231, 0.88", "0.091882, 435.836, 1.11464, 0.88", "0.0322302, 437.19, 0.923272, 0.44", "-0.0138068, 439.029, 0.708192, 0.37", "-0.0328638, 440.479, 0.569341, 0.37", "-0.0424468, 441.161, 0.508793, 0.88", "-0.0698908, 442.371, 0.415282, 0.96", "-0.0833178, 443.379, 0.336459, 0.96", "-0.0819118, 443.475, 0.330758, 0.96", "-0.0214368, 444.92, 0.30419, 0.88" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "3.23921, 429.829, 5.82558, 0.52", "3.01868, 429.944, 5.7699, 0.52", "2.76162, 430.114, 5.70681, 0.52", "2.46208, 430.328, 5.63402, 0.52", "2.40762, 430.366, 5.62079, 0.52", "1.93352, 430.704, 5.50561, 0.52", "1.55539, 430.973, 5.41373, 0.52", "1.27464, 431.202, 5.34692, 0.52", "1.22583, 431.248, 5.33567, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-194.631, -163.234, -66.689, 0.52", "-194.543, -163.834, -66.8689, 0.52", "-194.342, -164.722, -67.0964, 0.52", "-194.316, -164.838, -67.1233, 0.52", "-194.062, -165.605, -67.4189, 0.52", "-193.964, -165.884, -67.5423, 0.52", "-193.671, -166.707, -67.9233, 0.44", "-193.457, -167.284, -68.1863, 0.37", "-193.126, -168.079, -68.5809, 0.37", "-192.38, -169.757, -69.4693, 0.37", "-192.046, -170.446, -69.8778, 0.37", "-191.93, -170.686, -70.0342, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-194.631, -163.234, -66.689, 0.66", "-194.691, -163.239, -66.7185, 0.66", "-195.137, -163.28, -66.948, 0.59", "-196.33, -163.443, -67.523, 0.59", "-197.126, -163.594, -67.9004, 0.59", "-197.171, -163.604, -67.9231, 0.59", "-198.955, -164.045, -68.8599, 0.29", "-199.006, -164.06, -68.8867, 0.29", "-200.362, -164.509, -69.6181, 0.29", "-200.868, -164.694, -69.8873, 1.03", "-201.573, -164.953, -70.2298, 0.88", "-202.168, -165.173, -70.508, 0.88", "-203.055, -165.579, -70.9122, 0.29", "-203.164, -165.634, -70.9626, 0.29", "-203.722, -165.954, -71.2212, 0.29", "-204.433, -166.413, -71.5353, 0.29", "-205.014, -166.849, -71.7738, 0.29", "-206.431, -168.097, -72.3054, 0.29", "-206.806, -168.486, -72.4353, 0.96", "-207.21, -168.96, -72.534, 0.96", "-207.563, -169.442, -72.5677, 0.44", "-208.286, -170.539, -72.5089, 0.37", "-208.832, -171.449, -72.364, 0.74", "-209.131, -171.999, -72.2305, 0.74", "-209.601, -172.949, -72.003, 0.74", "-209.951, -173.688, -71.8225, 0.37", "-210.354, -174.63, -71.5702, 0.22", "-210.62, -175.313, -71.3655, 0.22", "-210.689, -175.486, -71.3168, 0.22", "-211.055, -176.364, -71.0741, 0.22", "-211.105, -176.483, -71.0475, 0.22", "-211.412, -177.233, -70.8701, 0.22", "-211.838, -178.273, -70.5038, 0.22", "-211.863, -178.323, -70.48, 0.22", "-211.963, -178.506, -70.3757, 0.22", "-212.028, -178.604, -70.2968, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.0214368, 444.92, 0.30419, 0.44", "0.760468, 445.945, 0.119713, 0.44", "1.22217, 446.607, 0.0113887, 0.44", "1.27198, 446.691, -2.10751E-4, 0.44", "1.60403, 447.508, -0.100936, 0.96", "1.62164, 447.561, -0.107136, 0.96", "1.99694, 448.828, -0.234483, 1.55", "2.18733, 449.695, -0.295275, 1.55", "2.37739, 450.712, -0.353098, 0.74", "2.63814, 452.676, -0.43295, 0.59", "2.66048, 453.02, -0.444018, 0.81", "2.67129, 453.541, -0.456119, 0.96", "2.64833, 454.163, -0.463461, 0.96", "2.6188, 454.786, -0.474735, 0.44", "2.56125, 456.119, -0.514564, 0.37", "2.52092, 457.288, -0.591615, 0.37", "2.51498, 457.418, -0.607037, 0.37", "2.47647, 458.242, -0.743178, 0.37", "2.47391, 458.306, -0.755321, 0.37", "2.46662, 459.279, -0.931316, 0.37", "2.53181, 460.262, -1.09367, 0.29", "2.61771, 460.946, -1.17602, 0.29", "2.70611, 461.515, -1.21828, 1.03", "2.86731, 462.39, -1.24649, 1.4", "3.07757, 463.461, -1.22419, 1.4", "3.24896, 464.27, -1.15826, 1.4", "3.45495, 465.218, -1.0329, 0.29", "3.62362, 466.027, -0.907358, 0.29", "3.64288, 466.124, -0.893848, 0.29", "3.83773, 467.138, -0.769614, 0.29", "3.85939, 467.276, -0.756375, 0.29", "4.10334, 468.755, -0.693847, 0.29", "4.1346, 468.959, -0.694732, 0.29", "4.24223, 469.757, -0.718311, 0.74", "4.24861, 469.813, -0.720335, 0.74", "4.32066, 470.562, -0.748522, 0.74", "4.45401, 472.13, -0.788306, 0.37", "4.53499, 473.332, -0.796651, 0.96", "4.5675, 474.085, -0.784692, 1.18", "4.5784, 474.911, -0.754901, 1.18", "4.57707, 475.935, -0.713646, 0.37", "4.57484, 476.076, -0.706586, 0.37", "4.52622, 477.172, -0.643824, 0.15", "4.50893, 478.066, -0.61486, 0.15", "4.49487, 478.5, -0.611525, 0.52", "4.46574, 479.134, -0.621296, 1.18", "4.46203, 479.2, -0.623337, 1.18", "4.40461, 480.112, -0.664577, 1.18", "4.33678, 481.074, -0.717371, 0.81", "4.27043, 481.997, -0.766959, 0.22", "4.26574, 482.063, -0.77022, 0.22", "4.21436, 482.745, -0.805142, 0.22", "4.20627, 482.837, -0.812865, 0.22", "4.13438, 483.6, -0.892183, 0.22", "4.12863, 483.665, -0.898681, 0.22", "4.12069, 483.764, -0.907372, 0.88", "4.08221, 484.387, -0.952641, 0.88", "4.02323, 485.744, -1.03065, 0.15", "4.02233, 485.819, -1.03176, 0.15", "4.10745, 486.782, -1.02651, 0.15", "4.11947, 486.856, -1.02445, 0.15", "4.19911, 487.165, -0.993572, 0.74", "4.29821, 487.483, -0.942191, 0.81", "4.44664, 487.945, -0.858966, 0.81", "4.67075, 488.993, -0.745955, 0.37", "4.67924, 489.058, -0.742491, 0.37", "4.76581, 490.129, -0.716586, 0.37", "4.81281, 491.501, -0.728519, 0.37", "4.81162, 491.995, -0.751646, 0.37", "4.71999, 494.089, -0.924037, 0.37", "4.60817, 495.539, -1.06945, 0.37", "4.57131, 495.97, -1.12078, 1.18", "4.5045, 496.64, -1.22251, 1.18", "4.3395, 498.262, -1.4942, 0.37", "4.17222, 500.009, -1.79268, 0.37", "4.16539, 500.082, -1.80726, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-0.0214368, 444.92, 0.30419, 0.81", "0.200434, 445.154, 0.528077, 0.81", "0.410834, 445.39, 0.73101, 0.22", "1.27845, 446.379, 1.55618, 0.22", "2.30625, 447.601, 2.51653, 0.22", "2.34676, 447.651, 2.55411, 0.22", "3.71687, 449.45, 3.82372, 0.22", "4.26486, 450.236, 4.33713, 0.22", "4.30543, 450.301, 4.37569, 0.22", "4.59319, 450.82, 4.62613, 0.96", "4.72888, 451.102, 4.73791, 1.33", "5.06574, 451.879, 5.048, 0.22", "5.36153, 452.854, 5.46231, 0.15", "5.39064, 452.955, 5.50971, 0.15", "5.58188, 453.615, 5.83538, 0.29", "5.60372, 453.689, 5.87579, 0.29", "5.80454, 454.337, 6.27022, 0.29", "5.9791, 454.88, 6.67003, 0.44", "6.09624, 455.26, 7.01488, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-191.93, -170.686, -70.0342, 0.29", "-190.027, -172.016, -70.8387, 0.29", "-188.652, -172.966, -71.365, 0.29", "-186.76, -174.276, -72.0152, 0.29", "-185.619, -175.067, -72.4076, 0.22", "-184.772, -175.653, -72.6985, 0.22", "-183.193, -176.747, -73.2412, 0.22", "-182.284, -177.364, -73.4319, 0.88", "-181.65, -177.786, -73.5815, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-191.93, -170.686, -70.0342, 0.37", "-192.303, -171.406, -70.6768, 0.37", "-192.467, -171.663, -70.9006, 0.37", "-192.848, -172.212, -71.3751, 0.37", "-192.922, -172.299, -71.455, 0.66", "-193.535, -172.913, -72.1047, 0.29", "-193.834, -173.157, -72.3915, 0.15", "-194.334, -173.439, -72.7731, 0.15", "-194.369, -173.45, -72.7994, 0.15", "-194.997, -173.465, -73.2348, 0.15", "-195.481, -173.407, -73.5323, 0.15", "-196.068, -173.207, -73.8153, 0.15", "-196.259, -173.105, -73.9099, 0.15", "-196.597, -172.847, -74.0736, 0.15", "-196.846, -172.623, -74.1865, 0.81" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "4.16539, 500.082, -1.80726, 0.29", "4.19234, 501.308, -3.19052, 0.29", "4.04327, 502.29, -4.38356, 0.29", "3.97605, 502.733, -4.92145, 0.29", "3.92403, 503.076, -5.33777, 0.96", "3.80718, 503.846, -6.27299, 0.96", "3.79832, 503.905, -6.34383, 0.96", "3.43098, 504.531, -7.18978, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.16539, 500.082, -1.80726, 0.37", "4.46104, 500.638, -1.45512, 0.37", "4.50167, 500.729, -1.40676, 0.37", "4.88412, 501.605, -0.949768, 0.37", "4.94178, 501.75, -0.877024, 0.37", "5.24411, 502.544, -0.486378, 0.37", "5.27887, 502.639, -0.440154, 0.37", "6.09183, 505.066, 0.746246, 0.29", "6.11985, 505.157, 0.788231, 0.29", "6.58836, 506.842, 1.51247, 0.29", "6.62589, 507.0, 1.57371, 0.29", "6.83781, 507.962, 1.88442, 0.29", "6.86684, 508.101, 1.92359, 0.29", "7.00578, 508.726, 2.1029, 0.52", "7.18472, 509.439, 2.32097, 0.52", "7.4964, 510.405, 2.69312, 0.37", "8.07488, 511.944, 3.44956, 0.22", "8.23497, 512.298, 3.67211, 0.22", "8.9645, 513.778, 4.68841, 0.22", "9.00574, 513.852, 4.74615, 0.22", "9.76854, 515.047, 5.85747, 0.22", "10.1711, 515.586, 6.49088, 1.25", "10.5912, 516.079, 7.26883, 1.25" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "3.43098, 504.531, -7.18978, 0.22", "4.27556, 506.719, -7.41492, 0.22", "4.60307, 507.812, -7.68286, 0.22", "4.97212, 508.858, -8.04733, 0.22", "5.1971, 509.542, -8.33058, 0.96", "5.22121, 509.616, -8.364, 0.96", "5.46972, 510.409, -8.74383, 0.37", "5.8501, 511.708, -9.49613, 0.22", "6.24615, 512.737, -10.1929, 0.37", "6.74022, 513.814, -10.9809, 0.37", "6.93542, 514.21, -11.2738, 0.88", "7.11479, 514.598, -11.5354, 0.88", "7.65586, 515.92, -12.2955, 0.52", "7.68204, 515.993, -12.3286, 0.52", "8.01784, 517.368, -12.7966, 0.22", "8.03225, 517.438, -12.8141, 0.22", "8.312, 518.907, -13.07, 0.22", "8.46793, 519.884, -13.1948, 0.52", "8.50929, 520.349, -13.2505, 0.22", "8.5951, 521.332, -13.3825, 0.22", "8.60284, 521.43, -13.3928, 0.22", "8.69907, 522.525, -13.5255, 0.81", "8.84063, 523.533, -13.6747, 0.22", "9.064, 524.839, -13.8773, 0.22", "9.08571, 524.933, -13.8936, 0.22", "9.41795, 526.228, -14.1318, 0.22", "9.45995, 526.405, -14.1575, 0.22", "9.68646, 527.19, -14.2475, 0.59", "9.90301, 527.8, -14.2948, 0.59", "10.3613, 528.957, -14.3685, 0.37", "10.6832, 529.589, -14.4302, 0.22", "11.4122, 530.792, -14.5891, 0.22", "12.3879, 532.352, -14.7835, 0.88", "12.7212, 532.882, -14.8417, 0.88", "12.7679, 532.953, -14.8486, 0.88", "14.0907, 534.811, -15.0004, 0.29", "14.1432, 534.877, -15.0066, 0.29", "14.8235, 535.685, -15.1211, 0.29", "15.0284, 535.976, -15.1734, 0.66", "15.2016, 536.238, -15.2384, 0.66", "15.7251, 537.172, -15.4967, 0.22", "15.7909, 537.336, -15.5394, 0.22", "16.1348, 538.069, -15.7092, 0.22", "16.3952, 538.561, -15.8197, 0.22", "17.0001, 539.833, -16.0051, 0.22", "17.0682, 539.989, -16.0174, 0.22", "17.3072, 540.721, -15.9903, 0.22", "17.7065, 542.123, -15.8372, 0.22", "17.7353, 542.215, -15.8208, 0.22", "18.2467, 543.7, -15.4972, 0.29", "18.273, 543.779, -15.4774, 0.29", "18.7392, 545.955, -14.8768, 0.29", "18.7651, 546.13, -14.8262, 0.29", "18.8801, 547.498, -14.4135, 0.59", "18.9475, 548.457, -14.1388, 0.15", "19.1057, 551.277, -13.3636, 0.15", "19.2019, 554.648, -12.6301, 0.15", "19.2036, 554.734, -12.6186, 0.15", "19.3796, 556.368, -12.5658, 0.15", "19.6158, 557.759, -12.7098, 0.15", "19.6418, 557.85, -12.7342, 0.15", "20.4325, 559.474, -13.6088, 0.15", "21.5292, 561.141, -14.7593, 0.15", "23.4533, 563.783, -16.8025, 0.15", "24.1536, 564.586, -17.5596, 0.15", "24.2648, 564.696, -17.678, 0.15", "24.8558, 565.197, -18.2685, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "3.43098, 504.531, -7.18978, 0.52", "3.04275, 504.61, -7.45371, 0.52", "2.01378, 504.819, -8.15325, 0.52", "1.96689, 504.829, -8.18512, 0.52", "0.934407, 505.039, -8.88704, 0.52", "0.675728, 505.091, -9.0629, 0.66", "0.599957, 505.107, -9.1144, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_138", "dend_131", "dend_120", "dend_97", "dend_48", "dend_23", "dend_14", "dend_5", "dend_0", "dend_139", "dend_135", "dend_132", "dend_128", "dend_121", "dend_111", "dend_98", "dend_52", "dend_49", "dend_27", "dend_24", "dend_20", "dend_15", "dend_11", "dend_6", "dend_2", "dend_1", "dend_148", "dend_140", "dend_137", "dend_136", "dend_134", "dend_133", "dend_130", "dend_129", "dend_127", "dend_122", "dend_113", "dend_112", "dend_104", "dend_99", "dend_74", "dend_53", "dend_51", "dend_50", "dend_47", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_4", "dend_3", "dend_150", "dend_149", "dend_143", "dend_141", "dend_126", "dend_123", "dend_119", "dend_114", "dend_110", "dend_105", "dend_103", "dend_100", "dend_91", "dend_84", "dend_75", "dend_67", "dend_54", "dend_32", "dend_29", "dend_19", "dend_18", "dend_10", "dend_9", "dend_152", "dend_151", "dend_147", "dend_144", "dend_142", "dend_125", "dend_124", "dend_118", "dend_115", "dend_107", "dend_106", "dend_102", "dend_101", "dend_96", "dend_95", "dend_92", "dend_85", "dend_79", "dend_76", "dend_71", "dend_68", "dend_66", "dend_55", "dend_46", "dend_33", "dend_31", "dend_30", "dend_146", "dend_145", "dend_117", "dend_116", "dend_109", "dend_108", "dend_94", "dend_93", "dend_86", "dend_83", "dend_80", "dend_78", "dend_77", "dend_73", "dend_72", "dend_70", "dend_69", "dend_65", "dend_56", "dend_35", "dend_34", "dend_88", "dend_87", "dend_82", "dend_81", "dend_64", "dend_57", "dend_37", "dend_36", "dend_90", "dend_89", "dend_63", "dend_58", "dend_39", "dend_38", "dend_60", "dend_59", "dend_41", "dend_40", "dend_62", "dend_61", "dend_43", "dend_42", "dend_45", "dend_44" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_138", "dend_131", "dend_120", "dend_97", "dend_48", "dend_23", "dend_14", "dend_5", "dend_0", "dend_139", "dend_135", "dend_132", "dend_128", "dend_121", "dend_111", "dend_98", "dend_52", "dend_49", "dend_27", "dend_24", "dend_20", "dend_15", "dend_11", "dend_6", "dend_2", "dend_1", "dend_148", "dend_140", "dend_137", "dend_136", "dend_134", "dend_133", "dend_130", "dend_129", "dend_127", "dend_122", "dend_113", "dend_112", "dend_104", "dend_99", "dend_74", "dend_53", "dend_51", "dend_50", "dend_47", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_4", "dend_3", "dend_150", "dend_149", "dend_143", "dend_141", "dend_126", "dend_123", "dend_119", "dend_114", "dend_110", "dend_105", "dend_103", "dend_100", "dend_91", "dend_84", "dend_75", "dend_67", "dend_54", "dend_32", "dend_29", "dend_19", "dend_18", "dend_10", "dend_9", "dend_152", "dend_151", "dend_147", "dend_144", "dend_142", "dend_125", "dend_124", "dend_118", "dend_115", "dend_107", "dend_106", "dend_102", "dend_101", "dend_96", "dend_95", "dend_92", "dend_85", "dend_79", "dend_76", "dend_71", "dend_68", "dend_66", "dend_55", "dend_46", "dend_33", "dend_31", "dend_30", "dend_146", "dend_145", "dend_117", "dend_116", "dend_109", "dend_108", "dend_94", "dend_93", "dend_86", "dend_83", "dend_80", "dend_78", "dend_77", "dend_73", "dend_72", "dend_70", "dend_69", "dend_65", "dend_56", "dend_35", "dend_34", "dend_88", "dend_87", "dend_82", "dend_81", "dend_64", "dend_57", "dend_37", "dend_36", "dend_90", "dend_89", "dend_63", "dend_58", "dend_39", "dend_38", "dend_60", "dend_59", "dend_41", "dend_40", "dend_62", "dend_61", "dend_43", "dend_42", "dend_45", "dend_44" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_138", "dend_131", "dend_120", "dend_97", "dend_48", "dend_23", "dend_14", "dend_5", "dend_0", "axon_0", "dend_139", "dend_135", "dend_132", "dend_128", "dend_121", "dend_111", "dend_98", "dend_52", "dend_49", "dend_27", "dend_24", "dend_20", "dend_15", "dend_11", "dend_6", "dend_2", "dend_1", "axon_1", "dend_148", "dend_140", "dend_137", "dend_136", "dend_134", "dend_133", "dend_130", "dend_129", "dend_127", "dend_122", "dend_113", "dend_112", "dend_104", "dend_99", "dend_74", "dend_53", "dend_51", "dend_50", "dend_47", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_4", "dend_3", "dend_150", "dend_149", "dend_143", "dend_141", "dend_126", "dend_123", "dend_119", "dend_114", "dend_110", "dend_105", "dend_103", "dend_100", "dend_91", "dend_84", "dend_75", "dend_67", "dend_54", "dend_32", "dend_29", "dend_19", "dend_18", "dend_10", "dend_9", "dend_152", "dend_151", "dend_147", "dend_144", "dend_142", "dend_125", "dend_124", "dend_118", "dend_115", "dend_107", "dend_106", "dend_102", "dend_101", "dend_96", "dend_95", "dend_92", "dend_85", "dend_79", "dend_76", "dend_71", "dend_68", "dend_66", "dend_55", "dend_46", "dend_33", "dend_31", "dend_30", "dend_146", "dend_145", "dend_117", "dend_116", "dend_109", "dend_108", "dend_94", "dend_93", "dend_86", "dend_83", "dend_80", "dend_78", "dend_77", "dend_73", "dend_72", "dend_70", "dend_69", "dend_65", "dend_56", "dend_35", "dend_34", "dend_88", "dend_87", "dend_82", "dend_81", "dend_64", "dend_57", "dend_37", "dend_36", "dend_90", "dend_89", "dend_63", "dend_58", "dend_39", "dend_38", "dend_60", "dend_59", "dend_41", "dend_40", "dend_62", "dend_61", "dend_43", "dend_42", "dend_45", "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_148" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_137" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_150" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_149" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_143" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_141" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_147" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_144" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_142" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_146" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_145" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_141",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_142",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_149",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_155",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_138" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_139" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_140" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_135" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_136" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_152" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_151" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_143",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_144",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_147",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_152",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_151",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_148",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_140",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_139",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_146",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_145",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_150",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_153",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_156",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_154",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134", "dend_135", "dend_136", "dend_137", "dend_138", "dend_139", "dend_140", "dend_141", "dend_142", "dend_143", "dend_144", "dend_145", "dend_146", "dend_147", "dend_148", "dend_149", "dend_150", "dend_151", "dend_152" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_138", "dend_138", "dend_138", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_136", "dend_134", "dend_134", "dend_134", "dend_134", "dend_133", "dend_133", "dend_133", "dend_133", "dend_130", "dend_129", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_84", "dend_84", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_125", "dend_125", "dend_125", "dend_125", "dend_124", "dend_124", "dend_124", "dend_124", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_145", "dend_145", "dend_145", "dend_145", "dend_145", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_94", "dend_94", "dend_94", "dend_94", "dend_93", "dend_93", "dend_93", "dend_93", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_87", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_LBC_34458d6725_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_138, id: dend_138, parent: soma_0
create dend_138
public dend_138
// Section: dend_131, id: dend_131, parent: soma_0
create dend_131
public dend_131
// Section: dend_120, id: dend_120, parent: soma_0
create dend_120
public dend_120
// Section: dend_97, id: dend_97, parent: soma_0
create dend_97
public dend_97
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_139, id: dend_139, parent: dend_138
create dend_139
public dend_139
// Section: dend_135, id: dend_135, parent: dend_131
create dend_135
public dend_135
// Section: dend_132, id: dend_132, parent: dend_131
create dend_132
public dend_132
// Section: dend_128, id: dend_128, parent: dend_120
create dend_128
public dend_128
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_111, id: dend_111, parent: dend_97
create dend_111
public dend_111
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_148, id: dend_148, parent: dend_139
create dend_148
public dend_148
// Section: dend_140, id: dend_140, parent: dend_139
create dend_140
public dend_140
// Section: dend_137, id: dend_137, parent: dend_135
create dend_137
public dend_137
// Section: dend_136, id: dend_136, parent: dend_135
create dend_136
public dend_136
// Section: dend_134, id: dend_134, parent: dend_132
create dend_134
public dend_134
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_127, id: dend_127, parent: dend_121
create dend_127
public dend_127
// Section: dend_122, id: dend_122, parent: dend_121
create dend_122
public dend_122
// Section: dend_113, id: dend_113, parent: dend_111
create dend_113
public dend_113
// Section: dend_112, id: dend_112, parent: dend_111
create dend_112
public dend_112
// Section: dend_104, id: dend_104, parent: dend_98
create dend_104
public dend_104
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_74, id: dend_74, parent: dend_52
create dend_74
public dend_74
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_27
create dend_47
public dend_47
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_150, id: dend_150, parent: dend_148
create dend_150
public dend_150
// Section: dend_149, id: dend_149, parent: dend_148
create dend_149
public dend_149
// Section: dend_143, id: dend_143, parent: dend_140
create dend_143
public dend_143
// Section: dend_141, id: dend_141, parent: dend_140
create dend_141
public dend_141
// Section: dend_126, id: dend_126, parent: dend_122
create dend_126
public dend_126
// Section: dend_123, id: dend_123, parent: dend_122
create dend_123
public dend_123
// Section: dend_119, id: dend_119, parent: dend_113
create dend_119
public dend_119
// Section: dend_114, id: dend_114, parent: dend_113
create dend_114
public dend_114
// Section: dend_110, id: dend_110, parent: dend_104
create dend_110
public dend_110
// Section: dend_105, id: dend_105, parent: dend_104
create dend_105
public dend_105
// Section: dend_103, id: dend_103, parent: dend_99
create dend_103
public dend_103
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_91, id: dend_91, parent: dend_74
create dend_91
public dend_91
// Section: dend_84, id: dend_84, parent: dend_74
create dend_84
public dend_84
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_67, id: dend_67, parent: dend_53
create dend_67
public dend_67
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_152, id: dend_152, parent: dend_150
create dend_152
public dend_152
// Section: dend_151, id: dend_151, parent: dend_150
create dend_151
public dend_151
// Section: dend_147, id: dend_147, parent: dend_143
create dend_147
public dend_147
// Section: dend_144, id: dend_144, parent: dend_143
create dend_144
public dend_144
// Section: dend_142, id: dend_142, parent: dend_141
create dend_142
public dend_142
// Section: dend_125, id: dend_125, parent: dend_123
create dend_125
public dend_125
// Section: dend_124, id: dend_124, parent: dend_123
create dend_124
public dend_124
// Section: dend_118, id: dend_118, parent: dend_114
create dend_118
public dend_118
// Section: dend_115, id: dend_115, parent: dend_114
create dend_115
public dend_115
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_96, id: dend_96, parent: dend_91
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_91
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_54
create dend_66
public dend_66
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_32
create dend_46
public dend_46
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_146, id: dend_146, parent: dend_144
create dend_146
public dend_146
// Section: dend_145, id: dend_145, parent: dend_144
create dend_145
public dend_145
// Section: dend_117, id: dend_117, parent: dend_115
create dend_117
public dend_117
// Section: dend_116, id: dend_116, parent: dend_115
create dend_116
public dend_116
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_55
create dend_65
public dend_65
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_64, id: dend_64, parent: dend_56
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, axon_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, axon_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_148]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_137]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_150]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_149]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_143]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_141]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_147]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_144]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_142]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_146]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_145]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_141
// Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_142
// Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_149
// Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_155
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_138]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_139]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_140]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_135]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_136]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_152]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_151]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_143
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_144
// Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_147
// Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_152
// Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_151
// Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_148
// Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_140
// Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_139
// Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_146
// Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_145
// Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_150
// Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_153
// Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_156
// Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_154
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_138, dend_138, dend_138, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_130, dend_129, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_84, dend_84, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_138(0), soma_0(0.45000004118409903)
    connect dend_131(0), soma_0(0.45000004118409903)
    connect dend_120(0), soma_0(0.45000004118409903)
    connect dend_97(0), soma_0(0.45000004118409903)
    connect dend_48(0), soma_0(0.45000004118409903)
    connect dend_23(0), soma_0(0.45000004118409903)
    connect dend_14(0), soma_0(0.45000004118409903)
    connect dend_5(0), soma_0(0.45000004118409903)
    connect dend_0(0), soma_0(0.45000004118409903)
    connect axon_0(0), soma_0(1.0)
    connect dend_139(0), dend_138(1.0)
    connect dend_135(0), dend_131(1.0)
    connect dend_132(0), dend_131(1.0)
    connect dend_128(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_111(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_148(0), dend_139(1.0)
    connect dend_140(0), dend_139(1.0)
    connect dend_137(0), dend_135(1.0)
    connect dend_136(0), dend_135(1.0)
    connect dend_134(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_127(0), dend_121(1.0)
    connect dend_122(0), dend_121(1.0)
    connect dend_113(0), dend_111(1.0)
    connect dend_112(0), dend_111(1.0)
    connect dend_104(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_74(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_47(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_150(0), dend_148(1.0)
    connect dend_149(0), dend_148(1.0)
    connect dend_143(0), dend_140(1.0)
    connect dend_141(0), dend_140(1.0)
    connect dend_126(0), dend_122(1.0)
    connect dend_123(0), dend_122(1.0)
    connect dend_119(0), dend_113(1.0)
    connect dend_114(0), dend_113(1.0)
    connect dend_110(0), dend_104(1.0)
    connect dend_105(0), dend_104(1.0)
    connect dend_103(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_91(0), dend_74(1.0)
    connect dend_84(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_67(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_152(0), dend_150(1.0)
    connect dend_151(0), dend_150(1.0)
    connect dend_147(0), dend_143(1.0)
    connect dend_144(0), dend_143(1.0)
    connect dend_142(0), dend_141(1.0)
    connect dend_125(0), dend_123(1.0)
    connect dend_124(0), dend_123(1.0)
    connect dend_118(0), dend_114(1.0)
    connect dend_115(0), dend_114(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_96(0), dend_91(1.0)
    connect dend_95(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_146(0), dend_144(1.0)
    connect dend_145(0), dend_144(1.0)
    connect dend_117(0), dend_115(1.0)
    connect dend_116(0), dend_115(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_64(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.93122, -0.108136, -2.1881, 2.35771 ) }
    soma_0 { pt3dadd( -7.89726, -0.148004, -1.96095, 3.51454 ) }
    soma_0 { pt3dadd( -6.8633, -0.187872, -1.73381, 7.55356 ) }
    soma_0 { pt3dadd( -5.82934, -0.22774, -1.50666, 11.3774 ) }
    soma_0 { pt3dadd( -4.79538, -0.267609, -1.27951, 15.1564 ) }
    soma_0 { pt3dadd( -3.76142, -0.307477, -1.05237, 15.6784 ) }
    soma_0 { pt3dadd( -2.72746, -0.347345, -0.825221, 15.4329 ) }
    soma_0 { pt3dadd( -1.69349, -0.387213, -0.598075, 14.6203 ) }
    soma_0 { pt3dadd( -0.659532, -0.427081, -0.370928, 13.8866 ) }
    soma_0 { pt3dadd( 0.37443, -0.466949, -0.143782, 13.4876 ) }
    soma_0 { pt3dadd( 1.40839, -0.506817, 0.083365, 13.5864 ) }
    soma_0 { pt3dadd( 2.44235, -0.546685, 0.310511, 13.7525 ) }
    soma_0 { pt3dadd( 3.47631, -0.586553, 0.537658, 14.0168 ) }
    soma_0 { pt3dadd( 4.51028, -0.626421, 0.764805, 14.3455 ) }
    soma_0 { pt3dadd( 5.54424, -0.666289, 0.991951, 14.6782 ) }
    soma_0 { pt3dadd( 6.5782, -0.706157, 1.2191, 14.6165 ) }
    soma_0 { pt3dadd( 7.61216, -0.746025, 1.44624, 14.0887 ) }
    soma_0 { pt3dadd( 8.64612, -0.785894, 1.67339, 12.6993 ) }
    soma_0 { pt3dadd( 9.68008, -0.825762, 1.90054, 11.5417 ) }
    soma_0 { pt3dadd( 10.714, -0.86563, 2.12768, 8.06658 ) }
    soma_0 { pt3dadd( 11.748, -0.905498, 2.35483, 4.43739 ) }
    // Section: dend_138, id: dend_138, parent: soma_0 (entry count 21/100)
    dend_138 { pt3dclear() }
    dend_138 { pt3dadd( -4.28724, -7.58485, -3.86671, 3.24 ) }
    dend_138 { pt3dadd( -4.28724, -7.58485, -3.86671, 3.24 ) }
    dend_138 { pt3dadd( -4.9768, -9.27906, -3.86671, 3.09 ) }
    dend_138 { pt3dadd( -5.57601, -10.7513, -3.86671, 2.87 ) }
    // Section: dend_131, id: dend_131, parent: soma_0 (entry count 25/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 6.47276, -8.15185, 0.203286, 1.25 ) }
    dend_131 { pt3dadd( 6.47276, -8.15185, 0.203286, 1.25 ) }
    dend_131 { pt3dadd( 6.77902, -9.41213, 0.264367, 1.25 ) }
    dend_131 { pt3dadd( 6.7952, -9.48671, 0.26755, 1.25 ) }
    dend_131 { pt3dadd( 7.01242, -10.5326, 0.309986, 0.96 ) }
    dend_131 { pt3dadd( 7.18941, -11.5797, 0.410775, 0.96 ) }
    dend_131 { pt3dadd( 7.25946, -12.1278, 0.480667, 1.33 ) }
    dend_131 { pt3dadd( 7.31471, -13.08, 0.679026, 0.81 ) }
    dend_131 { pt3dadd( 7.2733, -14.0007, 0.953285, 0.81 ) }
    dend_131 { pt3dadd( 7.26595, -14.0724, 0.977842, 0.81 ) }
    dend_131 { pt3dadd( 7.07883, -15.3129, 1.47495, 1.18 ) }
    dend_131 { pt3dadd( 6.94257, -16.1137, 1.81947, 1.18 ) }
    dend_131 { pt3dadd( 6.72354, -17.5671, 2.45661, 0.81 ) }
    dend_131 { pt3dadd( 6.54, -19.1949, 3.16285, 0.81 ) }
    dend_131 { pt3dadd( 6.52974, -19.428, 3.2549, 0.81 ) }
    dend_131 { pt3dadd( 6.59773, -20.5365, 3.70873, 0.81 ) }
    dend_131 { pt3dadd( 6.68713, -21.044, 3.91044, 1.4 ) }
    dend_131 { pt3dadd( 6.905, -21.8515, 4.26713, 1.4 ) }
    dend_131 { pt3dadd( 7.21378, -22.7413, 4.73052, 0.66 ) }
    dend_131 { pt3dadd( 7.48612, -23.6108, 5.21275, 0.59 ) }
    dend_131 { pt3dadd( 7.93257, -25.3331, 6.20152, 0.59 ) }
    dend_131 { pt3dadd( 8.0469, -26.0708, 6.64297, 0.81 ) }
    dend_131 { pt3dadd( 8.08722, -27.1726, 7.33043, 0.88 ) }
    dend_131 { pt3dadd( 7.95915, -28.9474, 8.46605, 0.88 ) }
    dend_131 { pt3dadd( 7.66945, -30.5179, 9.44834, 0.88 ) }
    dend_131 { pt3dadd( 7.65069, -30.5816, 9.48426, 0.88 ) }
    dend_131 { pt3dadd( 6.95487, -32.3777, 10.3211, 0.88 ) }
    dend_131 { pt3dadd( 6.58807, -33.2223, 10.6905, 1.18 ) }
    dend_131 { pt3dadd( 6.56364, -33.2785, 10.7117, 1.18 ) }
    dend_131 { pt3dadd( 6.22592, -34.091, 10.9937, 1.18 ) }
    dend_131 { pt3dadd( 5.58001, -35.8344, 11.62, 0.74 ) }
    dend_131 { pt3dadd( 4.96016, -37.8162, 12.2826, 0.74 ) }
    dend_131 { pt3dadd( 4.92156, -37.9676, 12.3289, 0.74 ) }
    dend_131 { pt3dadd( 4.48478, -40.2498, 13.0582, 0.74 ) }
    dend_131 { pt3dadd( 4.35138, -41.2251, 13.3847, 1.11 ) }
    dend_131 { pt3dadd( 4.34453, -41.2967, 13.4096, 1.11 ) }
    dend_131 { pt3dadd( 4.29937, -42.5157, 13.8436, 1.11 ) }
    dend_131 { pt3dadd( 4.30212, -42.5977, 13.8726, 1.11 ) }
    dend_131 { pt3dadd( 4.40974, -44.5389, 14.5773, 1.11 ) }
    dend_131 { pt3dadd( 4.52756, -45.4728, 14.9339, 1.47 ) }
    // Section: dend_120, id: dend_120, parent: soma_0 (entry count 65/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( 10.5927, -6.78685, 2.26329, 0.88 ) }
    dend_120 { pt3dadd( 10.9216, -7.04423, 2.21352, 0.88 ) }
    dend_120 { pt3dadd( 10.9791, -7.09667, 2.22933, 0.88 ) }
    dend_120 { pt3dadd( 11.9028, -7.99166, 2.65913, 0.88 ) }
    dend_120 { pt3dadd( 12.2947, -8.47052, 3.00867, 0.88 ) }
    dend_120 { pt3dadd( 12.8482, -9.37842, 3.9841, 0.88 ) }
    dend_120 { pt3dadd( 13.5974, -10.8269, 5.76664, 0.88 ) }
    dend_120 { pt3dadd( 14.3485, -12.7414, 8.72401, 0.88 ) }
    dend_120 { pt3dadd( 14.3582, -12.7743, 8.78204, 0.88 ) }
    dend_120 { pt3dadd( 14.5519, -14.0682, 11.1962, 0.88 ) }
    dend_120 { pt3dadd( 14.598, -15.4999, 13.8062, 0.88 ) }
    dend_120 { pt3dadd( 14.5962, -15.5348, 13.8639, 0.88 ) }
    dend_120 { pt3dadd( 14.3744, -17.4645, 16.7391, 1.55 ) }
    dend_120 { pt3dadd( 14.3689, -17.5235, 16.8077, 1.55 ) }
    dend_120 { pt3dadd( 14.2875, -18.6566, 17.9474, 1.03 ) }
    dend_120 { pt3dadd( 14.2684, -21.1589, 20.0514, 0.81 ) }
    dend_120 { pt3dadd( 14.3978, -22.9428, 21.4422, 0.81 ) }
    dend_120 { pt3dadd( 14.4114, -23.0505, 21.5263, 0.81 ) }
    dend_120 { pt3dadd( 14.9516, -25.413, 23.339, 1.03 ) }
    dend_120 { pt3dadd( 14.9749, -25.4718, 23.3877, 1.03 ) }
    dend_120 { pt3dadd( 16.2933, -27.3699, 25.1499, 0.88 ) }
    dend_120 { pt3dadd( 17.735, -28.6596, 26.4489, 0.88 ) }
    dend_120 { pt3dadd( 17.7998, -28.6996, 26.4963, 0.88 ) }
    dend_120 { pt3dadd( 19.2321, -29.436, 27.3894, 1.47 ) }
    dend_120 { pt3dadd( 20.4455, -30.0023, 28.0147, 0.81 ) }
    dend_120 { pt3dadd( 21.4205, -30.5176, 28.4849, 0.74 ) }
    dend_120 { pt3dadd( 21.5185, -30.5691, 28.5287, 0.74 ) }
    dend_120 { pt3dadd( 23.9374, -31.9467, 29.6337, 0.74 ) }
    dend_120 { pt3dadd( 24.0325, -32.0024, 29.6793, 0.74 ) }
    dend_120 { pt3dadd( 26.7849, -33.7313, 31.1169, 0.74 ) }
    dend_120 { pt3dadd( 28.8211, -35.0128, 32.2334, 0.74 ) }
    dend_120 { pt3dadd( 30.3324, -35.9737, 33.0767, 0.74 ) }
    dend_120 { pt3dadd( 30.4307, -36.0347, 33.129, 0.74 ) }
    dend_120 { pt3dadd( 30.9347, -36.3296, 33.3606, 0.74 ) }
    // Section: dend_97, id: dend_97, parent: soma_0 (entry count 99/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 8.06276, 6.24365, 1.63329, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_97 { pt3dadd( 8.19656, 6.51674, 1.68421, 1.47 ) }
    dend_97 { pt3dadd( 8.52147, 7.16543, 1.77414, 1.47 ) }
    dend_97 { pt3dadd( 8.88331, 7.87985, 1.86046, 1.47 ) }
    dend_97 { pt3dadd( 9.35028, 8.8738, 1.94706, 1.47 ) }
    dend_97 { pt3dadd( 9.81441, 9.89581, 2.02047, 1.47 ) }
    dend_97 { pt3dadd( 10.3621, 11.134, 2.09018, 1.47 ) }
    dend_97 { pt3dadd( 10.832, 12.189, 2.13073, 1.47 ) }
    dend_97 { pt3dadd( 10.8674, 12.2687, 2.12956, 1.47 ) }
    dend_97 { pt3dadd( 11.5958, 13.9543, 2.06289, 1.47 ) }
    dend_97 { pt3dadd( 11.6463, 14.0764, 2.0538, 1.47 ) }
    dend_97 { pt3dadd( 12.0743, 15.1729, 1.90981, 1.69 ) }
    dend_97 { pt3dadd( 12.5109, 16.362, 1.7427, 1.69 ) }
    dend_97 { pt3dadd( 12.8275, 17.2203, 1.62336, 1.18 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.74724, -0.927858, 0.133286, 3.02 ) }
    dend_48 { pt3dadd( -8.74724, -0.927858, 0.133286, 3.02 ) }
    dend_48 { pt3dadd( -10.7433, -0.797275, 0.321635, 2.43 ) }
    dend_48 { pt3dadd( -10.8263, -0.791842, 0.329472, 2.43 ) }
    dend_48 { pt3dadd( -12.5406, -0.679687, 0.491241, 2.28 ) }
    dend_48 { pt3dadd( -12.6029, -0.675612, 0.497119, 2.28 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 19/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.27724, 7.86065, -0.796714, 2.5 ) }
    dend_23 { pt3dadd( -3.27724, 7.86065, -0.796714, 2.5 ) }
    dend_23 { pt3dadd( -3.30966, 9.27896, -0.307335, 2.06 ) }
    dend_23 { pt3dadd( -3.34494, 11.066, 0.495826, 1.84 ) }
    dend_23 { pt3dadd( -3.34692, 11.1667, 0.541086, 1.84 ) }
    dend_23 { pt3dadd( -3.38232, 12.9598, 1.34694, 1.84 ) }
    dend_23 { pt3dadd( -3.42118, 14.9285, 2.23172, 2.06 ) }
    dend_23 { pt3dadd( -3.4661, 18.5862, 4.11233, 1.55 ) }
    dend_23 { pt3dadd( -3.46189, 19.6005, 4.78362, 1.55 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.0527, -0.518358, 2.38329, 1.84 ) }
    dend_14 { pt3dadd( 11.0527, -0.518358, 2.38329, 1.84 ) }
    dend_14 { pt3dadd( 11.9209, -0.698452, 3.22731, 1.62 ) }
    dend_14 { pt3dadd( 12.9452, -0.947627, 4.23017, 1.84 ) }
    dend_14 { pt3dadd( 12.9893, -0.963, 4.26987, 1.84 ) }
    dend_14 { pt3dadd( 14.3419, -1.61889, 5.37083, 1.69 ) }
    dend_14 { pt3dadd( 16.2017, -2.84682, 6.66779, 1.33 ) }
    dend_14 { pt3dadd( 16.8971, -3.41144, 7.13936, 1.33 ) }
    dend_14 { pt3dadd( 16.9366, -3.45226, 7.16496, 1.33 ) }
    dend_14 { pt3dadd( 18.0783, -4.88827, 7.84766, 1.33 ) }
    dend_14 { pt3dadd( 19.1094, -6.37551, 8.46241, 1.33 ) }
    dend_14 { pt3dadd( 20.6229, -8.77736, 9.25019, 1.33 ) }
    dend_14 { pt3dadd( 21.1601, -9.69103, 9.49226, 1.55 ) }
    dend_14 { pt3dadd( 22.0073, -11.1964, 9.91708, 1.4 ) }
    dend_14 { pt3dadd( 23.0312, -13.0799, 10.4827, 1.4 ) }
    dend_14 { pt3dadd( 23.4309, -13.8963, 10.7646, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.50276, 4.86815, 1.32329, 1.47 ) }
    dend_5 { pt3dadd( 9.56853, 4.90963, 1.30273, 1.47 ) }
    dend_5 { pt3dadd( 10.7388, 5.6995, 0.975975, 1.47 ) }
    dend_5 { pt3dadd( 12.0317, 6.6777, 0.697307, 1.25 ) }
    dend_5 { pt3dadd( 13.6713, 7.98277, 0.38806, 1.4 ) }
    dend_5 { pt3dadd( 15.0143, 9.16749, 0.174026, 1.4 ) }
    dend_5 { pt3dadd( 15.1927, 9.34914, 0.150525, 1.4 ) }
    dend_5 { pt3dadd( 16.3686, 10.737, 0.0976091, 1.4 ) }
    dend_5 { pt3dadd( 17.7588, 12.6072, 0.140273, 1.4 ) }
    dend_5 { pt3dadd( 17.8104, 12.6852, 0.147333, 1.4 ) }
    dend_5 { pt3dadd( 19.0726, 14.7691, 0.462398, 1.92 ) }
    dend_5 { pt3dadd( 20.4804, 17.3835, 0.947834, 1.92 ) }
    dend_5 { pt3dadd( 21.6529, 19.6307, 1.39003, 1.92 ) }
    dend_5 { pt3dadd( 21.6881, 19.7036, 1.40576, 1.92 ) }
    dend_5 { pt3dadd( 22.4565, 21.3864, 1.80113, 1.92 ) }
    dend_5 { pt3dadd( 22.4847, 21.4491, 1.81738, 1.92 ) }
    dend_5 { pt3dadd( 23.3361, 23.4626, 2.49329, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.84724, 6.42215, -2.17671, 1.11 ) }
    dend_0 { pt3dadd( -4.91588, 6.45533, -2.21112, 1.11 ) }
    dend_0 { pt3dadd( -6.03138, 6.9685, -2.63497, 1.11 ) }
    dend_0 { pt3dadd( -6.10505, 7.00167, -2.65664, 1.11 ) }
    dend_0 { pt3dadd( -7.88763, 7.79377, -3.12273, 0.96 ) }
    dend_0 { pt3dadd( -8.1097, 7.88453, -3.17229, 0.96 ) }
    dend_0 { pt3dadd( -9.49314, 8.41019, -3.43152, 0.96 ) }
    dend_0 { pt3dadd( -10.7082, 8.84772, -3.62028, 0.96 ) }
    dend_0 { pt3dadd( -11.9571, 9.30014, -3.76071, 0.96 ) }
    dend_0 { pt3dadd( -12.0353, 9.32855, -3.76768, 0.96 ) }
    dend_0 { pt3dadd( -13.2785, 9.77873, -3.83371, 0.96 ) }
    dend_0 { pt3dadd( -14.5504, 10.2386, -3.94028, 0.96 ) }
    dend_0 { pt3dadd( -14.7303, 10.3056, -3.95235, 0.96 ) }
    dend_0 { pt3dadd( -16.2528, 10.8842, -4.0187, 0.96 ) }
    dend_0 { pt3dadd( -17.8281, 11.4697, -4.05144, 0.96 ) }
    dend_0 { pt3dadd( -17.9583, 11.5155, -4.05357, 0.96 ) }
    dend_0 { pt3dadd( -19.2109, 11.9058, -4.06595, 0.96 ) }
    dend_0 { pt3dadd( -20.5954, 12.2298, -4.04488, 1.25 ) }
    dend_0 { pt3dadd( -22.1352, 12.4759, -4.06938, 1.25 ) }
    dend_0 { pt3dadd( -23.3464, 12.5402, -4.23937, 1.03 ) }
    dend_0 { pt3dadd( -24.2007, 12.5442, -4.46322, 0.88 ) }
    dend_0 { pt3dadd( -25.1942, 12.546, -4.95898, 0.88 ) }
    dend_0 { pt3dadd( -25.9153, 12.5628, -5.65056, 0.88 ) }
    dend_0 { pt3dadd( -26.4167, 12.7165, -7.21436, 0.81 ) }
    dend_0 { pt3dadd( -26.7771, 13.0872, -9.75368, 0.81 ) }
    dend_0 { pt3dadd( -26.8192, 13.2195, -10.4818, 0.81 ) }
    dend_0 { pt3dadd( -26.8202, 13.625, -12.3454, 0.81 ) }
    dend_0 { pt3dadd( -26.7855, 13.9288, -13.4871, 0.81 ) }
    dend_0 { pt3dadd( -26.6299, 15.5257, -18.406, 0.81 ) }
    dend_0 { pt3dadd( -26.615, 15.7957, -19.0888, 0.81 ) }
    dend_0 { pt3dadd( -26.6159, 15.8361, -19.1755, 0.81 ) }
    dend_0 { pt3dadd( -26.7429, 16.5743, -20.7091, 0.66 ) }
    dend_0 { pt3dadd( -26.9819, 17.072, -21.5696, 0.66 ) }
    dend_0 { pt3dadd( -27.6757, 17.7974, -22.3295, 0.66 ) }
    dend_0 { pt3dadd( -27.9854, 17.9823, -22.426, 0.66 ) }
    dend_0 { pt3dadd( -29.037, 18.4514, -22.7572, 0.66 ) }
    dend_0 { pt3dadd( -29.1137, 18.4752, -22.7797, 0.66 ) }
    dend_0 { pt3dadd( -30.0673, 18.6208, -23.0137, 0.66 ) }
    dend_0 { pt3dadd( -31.0594, 18.5687, -23.3452, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -32.9014, 17.8557, -24.5046, 0.66 ) }
    dend_0 { pt3dadd( -32.9509, 17.8232, -24.5637, 0.66 ) }
    dend_0 { pt3dadd( -33.1844, 17.61, -24.9922, 0.66 ) }
    dend_0 { pt3dadd( -33.2826, 17.514, -25.216, 0.66 ) }
    dend_0 { pt3dadd( -33.5506, 17.2308, -25.9873, 0.66 ) }
    dend_0 { pt3dadd( -33.9177, 16.9338, -27.9101, 0.66 ) }
    dend_0 { pt3dadd( -34.1805, 16.8503, -29.6883, 0.66 ) }
    dend_0 { pt3dadd( -34.2007, 16.8536, -29.8241, 0.66 ) }
    dend_0 { pt3dadd( -34.2587, 16.8917, -30.2865, 0.66 ) }
    dend_0 { pt3dadd( -34.2942, 16.9304, -30.5997, 0.66 ) }
    dend_0 { pt3dadd( -34.8596, 17.7567, -35.4886, 0.66 ) }
    dend_0 { pt3dadd( -34.877, 17.7918, -35.6653, 0.66 ) }
    dend_0 { pt3dadd( -34.9285, 17.8885, -36.1649, 0.66 ) }
    dend_0 { pt3dadd( -35.257, 18.374, -38.7135, 0.66 ) }
    dend_0 { pt3dadd( -35.2779, 18.397, -38.8359, 0.66 ) }
    dend_0 { pt3dadd( -35.5234, 18.5775, -39.6677, 0.66 ) }
    dend_0 { pt3dadd( -35.5758, 18.5997, -39.711, 0.66 ) }
    dend_0 { pt3dadd( -37.3903, 19.2619, -40.8086, 0.66 ) }
    dend_0 { pt3dadd( -38.6395, 19.6481, -41.1226, 1.03 ) }
    dend_0 { pt3dadd( -39.5215, 19.9108, -41.0559, 1.4 ) }
    dend_0 { pt3dadd( -40.451, 20.1839, -40.9514, 1.77 ) }
    dend_0 { pt3dadd( -41.834, 20.5951, -40.6781, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.748, -0.905498, 2.35483, 0.81 ) }
    axon_0 { pt3dadd( 26.7369, -1.48345, 2.35483, 0.81 ) }
    axon_0 { pt3dadd( 41.7257, -2.0614, 2.35483, 0.81 ) }
    // Section: dend_139, id: dend_139, parent: dend_138 (entry count 25/100)
    dend_139 { pt3dclear() }
    dend_139 { pt3dadd( -5.57601, -10.7513, -3.86671, 1.62 ) }
    dend_139 { pt3dadd( -5.81367, -10.8961, -3.96683, 1.62 ) }
    dend_139 { pt3dadd( -6.77671, -11.5102, -4.37413, 1.62 ) }
    dend_139 { pt3dadd( -6.82767, -11.5451, -4.39476, 1.62 ) }
    dend_139 { pt3dadd( -8.17427, -12.6857, -4.91904, 1.4 ) }
    dend_139 { pt3dadd( -8.20996, -12.7252, -4.94085, 1.4 ) }
    dend_139 { pt3dadd( -8.61511, -13.252, -5.26533, 1.84 ) }
    dend_139 { pt3dadd( -8.64235, -13.2943, -5.29362, 1.84 ) }
    dend_139 { pt3dadd( -8.94659, -13.8542, -5.67708, 2.14 ) }
    dend_139 { pt3dadd( -9.41282, -14.8105, -6.33045, 2.14 ) }
    dend_139 { pt3dadd( -10.0771, -16.5457, -7.5026, 2.14 ) }
    dend_139 { pt3dadd( -10.3686, -17.3339, -8.06214, 2.14 ) }
    dend_139 { pt3dadd( -10.3963, -17.4158, -8.12582, 2.14 ) }
    // Section: dend_135, id: dend_135, parent: dend_131 (entry count 38/100)
    dend_135 { pt3dclear() }
    dend_135 { pt3dadd( 4.52756, -45.4728, 14.9339, 1.11 ) }
    dend_135 { pt3dadd( 4.07557, -45.6436, 14.3119, 1.11 ) }
    dend_135 { pt3dadd( 4.04054, -45.6568, 14.2706, 1.11 ) }
    dend_135 { pt3dadd( 3.56908, -45.8349, 13.7515, 1.11 ) }
    dend_135 { pt3dadd( 3.5319, -45.8494, 13.7126, 1.11 ) }
    dend_135 { pt3dadd( 2.3357, -46.4207, 12.4677, 0.37 ) }
    dend_135 { pt3dadd( 2.28689, -46.444, 12.4169, 0.37 ) }
    dend_135 { pt3dadd( 1.73057, -46.703, 11.8814, 0.22 ) }
    dend_135 { pt3dadd( 1.63444, -46.7407, 11.7725, 0.29 ) }
    dend_135 { pt3dadd( 1.58153, -46.7509, 11.6833, 0.29 ) }
    dend_135 { pt3dadd( 1.28778, -46.7504, 11.0867, 0.29 ) }
    dend_135 { pt3dadd( -2.89303, -48.5657, 5.81581, 0.29 ) }
    dend_135 { pt3dadd( -8.04333, -49.445, 1.23122, 0.29 ) }
    dend_135 { pt3dadd( -13.232, -51.0537, -3.12788, 0.29 ) }
    dend_135 { pt3dadd( -17.5831, -52.0996, -8.44892, 0.29 ) }
    // Section: dend_132, id: dend_132, parent: dend_131 (entry count 53/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( 4.52756, -45.4728, 14.9339, 1.47 ) }
    dend_132 { pt3dadd( 4.72994, -46.2553, 15.2743, 1.47 ) }
    dend_132 { pt3dadd( 4.94033, -47.5654, 15.7438, 0.81 ) }
    dend_132 { pt3dadd( 4.9468, -47.6277, 15.7647, 0.81 ) }
    dend_132 { pt3dadd( 5.04824, -49.1019, 16.2828, 0.81 ) }
    dend_132 { pt3dadd( 5.05423, -49.2022, 16.3188, 0.81 ) }
    dend_132 { pt3dadd( 5.21237, -51.1457, 17.0564, 0.74 ) }
    dend_132 { pt3dadd( 5.30562, -52.7205, 17.6808, 0.74 ) }
    dend_132 { pt3dadd( 5.41534, -54.4234, 18.4035, 0.74 ) }
    dend_132 { pt3dadd( 5.50356, -55.3726, 18.8381, 0.52 ) }
    dend_132 { pt3dadd( 5.52251, -55.4975, 18.9004, 0.52 ) }
    dend_132 { pt3dadd( 5.77312, -56.6212, 19.4932, 0.52 ) }
    dend_132 { pt3dadd( 5.79262, -56.684, 19.5289, 0.52 ) }
    dend_132 { pt3dadd( 6.05445, -57.4563, 20.0081, 0.88 ) }
    dend_132 { pt3dadd( 6.07191, -57.5114, 20.039, 0.88 ) }
    dend_132 { pt3dadd( 6.29316, -58.2873, 20.3928, 0.88 ) }
    dend_132 { pt3dadd( 6.51919, -59.2087, 20.7597, 0.59 ) }
    dend_132 { pt3dadd( 6.82894, -60.5466, 21.1987, 0.59 ) }
    dend_132 { pt3dadd( 7.14006, -61.8677, 21.5909, 0.59 ) }
    dend_132 { pt3dadd( 7.26723, -62.5161, 21.7512, 0.59 ) }
    dend_132 { pt3dadd( 7.43251, -63.4732, 21.9681, 0.52 ) }
    dend_132 { pt3dadd( 7.43964, -63.5379, 21.9804, 0.52 ) }
    dend_132 { pt3dadd( 7.51927, -64.6206, 22.0843, 0.52 ) }
    dend_132 { pt3dadd( 7.51828, -64.8117, 22.1035, 0.37 ) }
    dend_132 { pt3dadd( 7.39361, -65.6763, 22.2357, 0.37 ) }
    dend_132 { pt3dadd( 7.36694, -65.7453, 22.2493, 0.37 ) }
    dend_132 { pt3dadd( 7.01565, -66.3327, 22.4045, 0.37 ) }
    dend_132 { pt3dadd( 6.5349, -67.0308, 22.6044, 0.37 ) }
    dend_132 { pt3dadd( 5.75102, -68.108, 22.9595, 0.22 ) }
    dend_132 { pt3dadd( 5.71539, -68.1594, 22.9776, 0.22 ) }
    dend_132 { pt3dadd( 5.13166, -69.0075, 23.2965, 0.22 ) }
    dend_132 { pt3dadd( 4.58308, -69.78, 23.6361, 0.22 ) }
    dend_132 { pt3dadd( 4.54327, -69.8363, 23.6636, 0.22 ) }
    dend_132 { pt3dadd( 3.99461, -70.6723, 24.0785, 0.22 ) }
    dend_132 { pt3dadd( 3.96636, -70.7287, 24.0963, 0.22 ) }
    dend_132 { pt3dadd( 3.67075, -71.386, 24.3068, 0.22 ) }
    dend_132 { pt3dadd( 3.28859, -72.4701, 24.6644, 0.22 ) }
    dend_132 { pt3dadd( 3.2145, -72.7224, 24.7375, 0.22 ) }
    dend_132 { pt3dadd( 2.96687, -73.6052, 24.9626, 0.22 ) }
    dend_132 { pt3dadd( 2.63602, -75.0365, 25.1791, 0.22 ) }
    dend_132 { pt3dadd( 2.60816, -83.8869, 28.4353, 0.22 ) }
    dend_132 { pt3dadd( 2.19096, -92.6996, 31.754, 0.22 ) }
    dend_132 { pt3dadd( 3.29734, -101.717, 34.3506, 0.22 ) }
    dend_132 { pt3dadd( 4.2413, -110.276, 38.1388, 0.22 ) }
    dend_132 { pt3dadd( 3.92475, -119.148, 41.3232, 0.22 ) }
    dend_132 { pt3dadd( 2.67496, -128.339, 43.1769, 0.22 ) }
    dend_132 { pt3dadd( 1.44506, -137.49, 45.2089, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_132 { pt3dadd( 0.25344, -146.469, 47.8653, 0.22 ) }
    dend_132 { pt3dadd( -0.502588, -154.775, 52.1614, 0.22 ) }
    // Section: dend_128, id: dend_128, parent: dend_120 (entry count 2/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 30.9347, -36.3296, 33.3606, 0.37 ) }
    dend_128 { pt3dadd( 31.0652, -35.7293, 33.2987, 0.37 ) }
    dend_128 { pt3dadd( 31.2707, -35.2092, 33.2469, 0.37 ) }
    dend_128 { pt3dadd( 31.2982, -35.1502, 33.2411, 0.37 ) }
    dend_128 { pt3dadd( 31.5486, -34.7275, 33.1846, 0.37 ) }
    dend_128 { pt3dadd( 31.6659, -34.5501, 33.1576, 0.37 ) }
    dend_128 { pt3dadd( 32.0927, -33.9045, 33.0594, 0.37 ) }
    dend_128 { pt3dadd( 32.5423, -33.3465, 32.9681, 0.37 ) }
    dend_128 { pt3dadd( 32.5864, -33.3002, 32.9597, 0.37 ) }
    dend_128 { pt3dadd( 33.0748, -32.8233, 32.8661, 0.37 ) }
    dend_128 { pt3dadd( 33.1301, -32.7764, 32.8554, 0.37 ) }
    dend_128 { pt3dadd( 38.7511, -25.6169, 31.2146, 0.37 ) }
    dend_128 { pt3dadd( 43.8429, -18.0979, 29.3238, 0.37 ) }
    dend_128 { pt3dadd( 48.2393, -9.91004, 28.6319, 0.37 ) }
    dend_128 { pt3dadd( 52.5275, -1.93758, 26.4595, 0.37 ) }
    dend_128 { pt3dadd( 56.0569, 6.69529, 25.7672, 0.37 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 18/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( 30.9347, -36.3296, 33.3606, 0.74 ) }
    dend_121 { pt3dadd( 30.9465, -37.0081, 33.6113, 0.74 ) }
    dend_121 { pt3dadd( 30.9466, -37.0798, 33.6355, 0.74 ) }
    dend_121 { pt3dadd( 30.951, -39.2655, 34.3735, 0.74 ) }
    dend_121 { pt3dadd( 30.9554, -41.4363, 35.1064, 0.74 ) }
    dend_121 { pt3dadd( 30.9557, -41.5527, 35.1457, 0.74 ) }
    dend_121 { pt3dadd( 30.9598, -43.5895, 35.8333, 0.74 ) }
    dend_121 { pt3dadd( 30.9582, -43.6622, 35.8542, 0.74 ) }
    // Section: dend_111, id: dend_111, parent: dend_97 (entry count 26/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 12.8275, 17.2203, 1.62336, 1.18 ) }
    dend_111 { pt3dadd( 12.9273, 17.8876, 1.81476, 1.18 ) }
    dend_111 { pt3dadd( 13.0803, 18.8269, 2.19337, 0.96 ) }
    dend_111 { pt3dadd( 13.0877, 18.9064, 2.22614, 0.96 ) }
    dend_111 { pt3dadd( 13.0908, 19.563, 2.51777, 0.96 ) }
    dend_111 { pt3dadd( 12.944, 20.8622, 3.07264, 0.96 ) }
    dend_111 { pt3dadd( 12.9317, 20.9311, 3.10075, 0.96 ) }
    dend_111 { pt3dadd( 12.6749, 22.0504, 3.53308, 0.96 ) }
    dend_111 { pt3dadd( 12.3458, 23.2183, 3.93611, 0.96 ) }
    dend_111 { pt3dadd( 11.914, 24.6076, 4.33458, 0.96 ) }
    dend_111 { pt3dadd( 11.2962, 26.4609, 4.76443, 0.96 ) }
    dend_111 { pt3dadd( 11.0061, 27.2801, 4.93228, 1.25 ) }
    dend_111 { pt3dadd( 10.5128, 28.7861, 5.20716, 1.25 ) }
    dend_111 { pt3dadd( 10.0239, 30.38, 5.45088, 1.25 ) }
    dend_111 { pt3dadd( 9.72671, 31.5037, 5.63727, 1.25 ) }
    dend_111 { pt3dadd( 9.52836, 32.4279, 5.79256, 1.03 ) }
    dend_111 { pt3dadd( 9.3278, 33.6502, 6.02891, 0.81 ) }
    dend_111 { pt3dadd( 9.09189, 35.3329, 6.40144, 0.81 ) }
    dend_111 { pt3dadd( 9.08172, 35.4149, 6.42697, 0.81 ) }
    dend_111 { pt3dadd( 8.95771, 36.5546, 6.88272, 1.03 ) }
    dend_111 { pt3dadd( 8.84592, 37.4651, 7.35641, 1.03 ) }
    dend_111 { pt3dadd( 8.72828, 38.2877, 7.85112, 1.03 ) }
    dend_111 { pt3dadd( 8.71704, 38.3591, 7.89714, 1.03 ) }
    dend_111 { pt3dadd( 8.48258, 39.5155, 8.77123, 0.81 ) }
    dend_111 { pt3dadd( 8.3607, 40.0724, 9.20962, 0.81 ) }
    dend_111 { pt3dadd( 8.11758, 41.0251, 10.0223, 0.74 ) }
    dend_111 { pt3dadd( 8.10388, 41.0747, 10.0756, 0.74 ) }
    dend_111 { pt3dadd( 8.03722, 41.3112, 10.3718, 0.74 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 54/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 12.8275, 17.2203, 1.62336, 0.74 ) }
    dend_98 { pt3dadd( 13.5799, 16.9745, 3.13989, 0.74 ) }
    dend_98 { pt3dadd( 13.6175, 16.9569, 3.1989, 0.74 ) }
    dend_98 { pt3dadd( 13.9134, 16.8037, 3.61225, 0.74 ) }
    dend_98 { pt3dadd( 15.9974, 15.5014, 5.93291, 1.4 ) }
    dend_98 { pt3dadd( 16.6118, 15.0504, 6.6228, 1.03 ) }
    dend_98 { pt3dadd( 16.6552, 15.0156, 6.66957, 1.03 ) }
    dend_98 { pt3dadd( 17.8038, 13.9943, 7.77677, 0.74 ) }
    dend_98 { pt3dadd( 17.846, 13.9551, 7.82149, 0.74 ) }
    dend_98 { pt3dadd( 19.089, 12.8144, 9.18998, 0.74 ) }
    dend_98 { pt3dadd( 20.3675, 11.6889, 10.5329, 0.52 ) }
    dend_98 { pt3dadd( 20.8879, 11.3329, 11.2732, 0.52 ) }
    dend_98 { pt3dadd( 20.9228, 11.3153, 11.3338, 0.52 ) }
    dend_98 { pt3dadd( 21.9507, 11.1235, 13.3443, 1.11 ) }
    dend_98 { pt3dadd( 22.4207, 11.1351, 14.28, 1.11 ) }
    dend_98 { pt3dadd( 22.4947, 11.1626, 14.436, 1.11 ) }
    dend_98 { pt3dadd( 23.7436, 11.8065, 16.8619, 0.74 ) }
    dend_98 { pt3dadd( 23.7748, 11.8254, 16.9241, 0.74 ) }
    dend_98 { pt3dadd( 24.5446, 12.2073, 18.4402, 0.74 ) }
    dend_98 { pt3dadd( 24.6074, 12.2205, 18.5455, 0.74 ) }
    dend_98 { pt3dadd( 25.686, 12.0629, 20.1089, 0.74 ) }
    dend_98 { pt3dadd( 25.732, 12.0457, 20.1617, 0.74 ) }
    dend_98 { pt3dadd( 27.0834, 11.4225, 21.4919, 0.74 ) }
    dend_98 { pt3dadd( 28.1574, 10.885, 22.5147, 1.03 ) }
    dend_98 { pt3dadd( 29.7347, 10.0908, 23.9228, 0.81 ) }
    dend_98 { pt3dadd( 31.6866, 9.24848, 25.5107, 0.81 ) }
    dend_98 { pt3dadd( 33.2994, 8.60832, 26.6843, 0.81 ) }
    dend_98 { pt3dadd( 34.7098, 8.21628, 27.6807, 0.81 ) }
    dend_98 { pt3dadd( 34.7694, 8.2077, 27.72, 0.81 ) }
    dend_98 { pt3dadd( 35.8723, 8.34187, 28.4548, 0.59 ) }
    dend_98 { pt3dadd( 37.1296, 8.93066, 29.4101, 0.59 ) }
    dend_98 { pt3dadd( 37.1784, 8.96992, 29.4473, 0.59 ) }
    dend_98 { pt3dadd( 38.3474, 10.1142, 30.3054, 0.59 ) }
    dend_98 { pt3dadd( 38.4574, 10.2056, 30.369, 0.59 ) }
    dend_98 { pt3dadd( 38.7689, 10.4023, 30.528, 0.96 ) }
    dend_98 { pt3dadd( 38.8952, 10.4684, 30.5895, 0.96 ) }
    dend_98 { pt3dadd( 39.9108, 10.8855, 30.9769, 0.96 ) }
    dend_98 { pt3dadd( 40.0516, 10.9317, 31.0213, 0.96 ) }
    dend_98 { pt3dadd( 41.5582, 11.2062, 31.3059, 0.66 ) }
    dend_98 { pt3dadd( 42.5541, 11.351, 31.5059, 0.96 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 94/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -12.6029, -0.675612, 0.497119, 2.28 ) }
    dend_52 { pt3dadd( -12.7217, -0.692968, 0.483849, 2.28 ) }
    dend_52 { pt3dadd( -12.7605, -0.699689, 0.480653, 2.28 ) }
    dend_52 { pt3dadd( -13.4601, -0.820747, 0.423076, 2.06 ) }
    dend_52 { pt3dadd( -14.8236, -1.05666, 0.310872, 2.06 ) }
    dend_52 { pt3dadd( -16.0111, -1.26212, 0.213155, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_52 { pt3dadd( -16.9823, -1.43016, 0.133232, 2.06 ) }
    dend_52 { pt3dadd( -18.1234, -1.62524, 0.0448244, 2.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 2/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -12.6029, -0.675612, 0.497119, 0.37 ) }
    dend_49 { pt3dadd( -13.0083, -0.22598, 1.29122, 0.37 ) }
    dend_49 { pt3dadd( -13.2939, 0.0187568, 1.82369, 0.37 ) }
    dend_49 { pt3dadd( -13.3379, 0.0492199, 1.89238, 0.37 ) }
    dend_49 { pt3dadd( -13.7399, 0.383862, 2.36989, 0.37 ) }
    dend_49 { pt3dadd( -13.775, 0.413086, 2.4116, 0.37 ) }
    dend_49 { pt3dadd( -14.2886, 0.840557, 3.02158, 0.37 ) }
    dend_49 { pt3dadd( -14.3765, 0.908279, 3.09396, 0.37 ) }
    dend_49 { pt3dadd( -14.6867, 1.08685, 3.33649, 0.37 ) }
    dend_49 { pt3dadd( -15.3913, 1.50678, 3.90031, 0.22 ) }
    dend_49 { pt3dadd( -20.23, 4.88523, 10.4313, 0.22 ) }
    dend_49 { pt3dadd( -25.3497, 7.64726, 16.9972, 0.22 ) }
    dend_49 { pt3dadd( -29.788, 9.70057, 24.2537, 0.22 ) }
    dend_49 { pt3dadd( -35.1158, 10.0929, 31.1077, 0.22 ) }
    dend_49 { pt3dadd( -39.2731, 11.1449, 38.6963, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.46189, 19.6005, 4.78362, 1.84 ) }
    dend_27 { pt3dadd( -3.16017, 22.1574, 3.98821, 1.84 ) }
    dend_27 { pt3dadd( -3.03074, 23.2364, 3.72292, 1.84 ) }
    dend_27 { pt3dadd( -2.98905, 23.4821, 3.65893, 1.84 ) }
    dend_27 { pt3dadd( -2.69906, 24.9989, 3.25729, 1.84 ) }
    dend_27 { pt3dadd( -2.67843, 25.0869, 3.23383, 1.84 ) }
    dend_27 { pt3dadd( -2.21583, 26.7028, 2.79903, 1.84 ) }
    dend_27 { pt3dadd( -2.19079, 26.7914, 2.78306, 1.84 ) }
    dend_27 { pt3dadd( -1.64324, 28.3963, 2.45202, 1.55 ) }
    dend_27 { pt3dadd( -1.6134, 28.4701, 2.43485, 1.55 ) }
    dend_27 { pt3dadd( -0.98567, 29.6921, 2.08994, 1.55 ) }
    dend_27 { pt3dadd( -0.473385, 30.6466, 1.78064, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.46189, 19.6005, 4.78362, 1.25 ) }
    dend_24 { pt3dadd( -3.59138, 20.5187, 5.67694, 1.25 ) }
    dend_24 { pt3dadd( -3.60552, 20.5746, 5.74929, 1.25 ) }
    dend_24 { pt3dadd( -3.82332, 21.2919, 6.75733, 0.81 ) }
    dend_24 { pt3dadd( -4.16875, 21.9709, 7.79218, 0.81 ) }
    dend_24 { pt3dadd( -4.51764, 22.3856, 8.48994, 1.18 ) }
    dend_24 { pt3dadd( -4.76249, 22.5877, 8.85706, 1.18 ) }
    dend_24 { pt3dadd( -6.02523, 23.3185, 10.5405, 1.03 ) }
    dend_24 { pt3dadd( -6.07448, 23.3378, 10.5921, 1.03 ) }
    dend_24 { pt3dadd( -7.03828, 23.59, 11.4131, 1.03 ) }
    dend_24 { pt3dadd( -8.07419, 23.8016, 12.1555, 1.25 ) }
    dend_24 { pt3dadd( -8.80532, 23.9431, 12.6337, 1.25 ) }
    dend_24 { pt3dadd( -10.2689, 24.2446, 13.4814, 0.81 ) }
    dend_24 { pt3dadd( -11.3408, 24.5069, 13.9861, 0.81 ) }
    dend_24 { pt3dadd( -11.4031, 24.5296, 14.019, 0.81 ) }
    dend_24 { pt3dadd( -12.3467, 25.1145, 14.5942, 0.81 ) }
    dend_24 { pt3dadd( -12.7103, 25.4887, 14.8728, 0.81 ) }
    dend_24 { pt3dadd( -12.7457, 25.5469, 14.906, 0.81 ) }
    dend_24 { pt3dadd( -12.8635, 25.9166, 15.0795, 0.81 ) }
    dend_24 { pt3dadd( -13.0172, 27.3221, 15.8511, 0.81 ) }
    dend_24 { pt3dadd( -13.0179, 28.2107, 16.3902, 0.81 ) }
    dend_24 { pt3dadd( -12.9478, 28.8921, 16.9118, 0.81 ) }
    dend_24 { pt3dadd( -12.88, 29.3522, 17.3342, 0.81 ) }
    dend_24 { pt3dadd( -12.7614, 30.1708, 18.2361, 0.81 ) }
    dend_24 { pt3dadd( -12.6691, 30.8671, 19.2413, 0.81 ) }
    dend_24 { pt3dadd( -12.6702, 30.8888, 19.3022, 0.81 ) }
    dend_24 { pt3dadd( -12.8726, 31.0713, 20.7409, 0.81 ) }
    dend_24 { pt3dadd( -12.9171, 31.0718, 20.8716, 0.81 ) }
    dend_24 { pt3dadd( -13.3046, 31.0098, 21.6237, 0.81 ) }
    dend_24 { pt3dadd( -13.4919, 30.9857, 21.896, 0.81 ) }
    dend_24 { pt3dadd( -14.2056, 31.0059, 22.7539, 0.81 ) }
    dend_24 { pt3dadd( -14.3113, 31.0375, 22.9672, 0.81 ) }
    dend_24 { pt3dadd( -14.6422, 31.2034, 23.7816, 0.81 ) }
    dend_24 { pt3dadd( -14.6834, 31.232, 23.9005, 0.81 ) }
    dend_24 { pt3dadd( -15.0716, 31.639, 25.2793, 0.81 ) }
    dend_24 { pt3dadd( -15.2032, 31.8383, 25.8565, 0.81 ) }
    dend_24 { pt3dadd( -15.8032, 33.3052, 29.3117, 0.66 ) }
    dend_24 { pt3dadd( -15.8497, 33.5843, 29.8687, 0.66 ) }
    dend_24 { pt3dadd( -15.844, 33.8931, 30.4037, 0.66 ) }
    dend_24 { pt3dadd( -15.7997, 34.2795, 30.915, 0.66 ) }
    dend_24 { pt3dadd( -15.6582, 34.8246, 31.4047, 0.59 ) }
    dend_24 { pt3dadd( -15.3922, 35.5658, 31.8848, 0.59 ) }
    dend_24 { pt3dadd( -14.9407, 36.7043, 32.2654, 0.88 ) }
    dend_24 { pt3dadd( -14.9146, 36.7606, 32.2891, 0.88 ) }
    dend_24 { pt3dadd( -14.6058, 37.3815, 32.6151, 0.88 ) }
    dend_24 { pt3dadd( -14.0866, 38.443, 33.2496, 0.44 ) }
    dend_24 { pt3dadd( -14.0542, 38.5193, 33.3059, 0.44 ) }
    dend_24 { pt3dadd( -13.9137, 38.9489, 33.6754, 0.44 ) }
    dend_24 { pt3dadd( -13.7802, 39.8037, 34.4679, 0.44 ) }
    dend_24 { pt3dadd( -13.7844, 39.8993, 34.5712, 0.44 ) }
    dend_24 { pt3dadd( -13.8527, 40.1996, 35.0155, 0.44 ) }
    dend_24 { pt3dadd( -14.1634, 40.8554, 36.1815, 0.44 ) }
    dend_24 { pt3dadd( -14.2883, 41.1193, 36.7231, 0.44 ) }
    dend_24 { pt3dadd( -14.3707, 41.2673, 37.0997, 0.88 ) }
    dend_24 { pt3dadd( -14.4937, 41.471, 37.6613, 0.88 ) }
    dend_24 { pt3dadd( -14.6478, 41.9817, 39.1467, 0.74 ) }
    dend_24 { pt3dadd( -14.6409, 42.0037, 39.2071, 0.74 ) }
    dend_24 { pt3dadd( -14.4069, 42.3506, 39.8459, 0.74 ) }
    dend_24 { pt3dadd( -14.3862, 42.3844, 39.8975, 0.74 ) }
    dend_24 { pt3dadd( -14.3252, 42.6711, 40.2728, 0.74 ) }
    dend_24 { pt3dadd( -14.3292, 42.7134, 40.3227, 0.74 ) }
    dend_24 { pt3dadd( -14.6531, 43.4463, 41.0901, 0.52 ) }
    dend_24 { pt3dadd( -14.8359, 43.8081, 41.4741, 0.52 ) }
    dend_24 { pt3dadd( -14.8569, 43.8498, 41.5202, 0.52 ) }
    dend_24 { pt3dadd( -15.1755, 44.5644, 42.3284, 0.52 ) }
    dend_24 { pt3dadd( -15.1922, 44.6119, 42.384, 0.52 ) }
    dend_24 { pt3dadd( -15.2057, 44.787, 42.5911, 0.52 ) }
    dend_24 { pt3dadd( -15.1864, 44.8319, 42.6475, 0.52 ) }
    dend_24 { pt3dadd( -14.7944, 44.9924, 43.4318, 0.52 ) }
    dend_24 { pt3dadd( -14.7333, 45.0051, 43.5549, 0.52 ) }
    dend_24 { pt3dadd( -14.5647, 45.0179, 43.9228, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( -14.2323, 45.0227, 44.741, 0.52 ) }
    dend_24 { pt3dadd( -14.0833, 45.01, 45.2069, 0.52 ) }
    dend_24 { pt3dadd( -13.2674, 44.8296, 48.6718, 0.52 ) }
    dend_24 { pt3dadd( -13.2484, 44.818, 48.8082, 0.52 ) }
    dend_24 { pt3dadd( -13.2235, 44.7692, 49.4226, 0.52 ) }
    dend_24 { pt3dadd( -13.2297, 44.766, 49.4867, 0.52 ) }
    dend_24 { pt3dadd( -13.5122, 44.804, 50.3928, 0.52 ) }
    dend_24 { pt3dadd( -13.6271, 44.8508, 50.5534, 0.52 ) }
    dend_24 { pt3dadd( -13.8657, 44.9777, 50.6238, 0.52 ) }
    dend_24 { pt3dadd( -14.0167, 45.0879, 50.6685, 0.52 ) }
    dend_24 { pt3dadd( -14.4104, 45.4801, 50.813, 0.52 ) }
    dend_24 { pt3dadd( -14.8799, 46.0425, 51.0045, 0.52 ) }
    dend_24 { pt3dadd( -15.048, 46.2824, 51.0796, 0.52 ) }
    dend_24 { pt3dadd( -15.5171, 47.0346, 51.292, 0.52 ) }
    dend_24 { pt3dadd( -15.5934, 47.1684, 51.3266, 0.52 ) }
    dend_24 { pt3dadd( -15.9406, 47.8372, 51.4791, 0.52 ) }
    dend_24 { pt3dadd( -16.2618, 48.5161, 51.5944, 0.52 ) }
    dend_24 { pt3dadd( -16.2877, 48.5775, 51.6025, 0.52 ) }
    dend_24 { pt3dadd( -16.5753, 49.3717, 51.6565, 0.52 ) }
    dend_24 { pt3dadd( -16.6339, 49.5754, 51.655, 0.52 ) }
    dend_24 { pt3dadd( -16.8207, 50.1815, 51.6091, 0.52 ) }
    dend_24 { pt3dadd( -16.9865, 50.6986, 51.5168, 0.52 ) }
    dend_24 { pt3dadd( -17.0285, 50.8238, 51.4902, 0.52 ) }
    dend_24 { pt3dadd( -17.1986, 51.2563, 51.3968, 0.52 ) }
    dend_24 { pt3dadd( -17.2305, 51.3137, 51.3841, 0.52 ) }
    dend_24 { pt3dadd( -17.6186, 51.8904, 51.2909, 0.52 ) }
    dend_24 { pt3dadd( -17.6607, 51.9407, 51.2804, 0.52 ) }
    dend_24 { pt3dadd( -17.9982, 52.2762, 51.2045, 0.52 ) }
    dend_24 { pt3dadd( -18.268, 52.4997, 51.1279, 0.52 ) }
    dend_24 { pt3dadd( -18.5829, 52.7719, 51.0436, 0.52 ) }
    dend_24 { pt3dadd( -19.0379, 53.122, 50.9011, 0.52 ) }
    dend_24 { pt3dadd( -19.5249, 53.4064, 50.7002, 0.52 ) }
    dend_24 { pt3dadd( -19.8596, 53.5468, 50.5541, 0.52 ) }
    dend_24 { pt3dadd( -20.2679, 53.6084, 50.3557, 0.52 ) }
    dend_24 { pt3dadd( -24.1421, 59.2667, 56.7243, 0.52 ) }
    dend_24 { pt3dadd( -28.6168, 63.1708, 63.8505, 0.52 ) }
    dend_24 { pt3dadd( -33.5833, 66.6169, 70.8663, 0.52 ) }
    dend_24 { pt3dadd( -39.0505, 68.0977, 78.1317, 0.52 ) }
    dend_24 { pt3dadd( -44.0503, 69.9553, 85.65, 0.52 ) }
    dend_24 { pt3dadd( -48.9164, 72.9052, 92.9355, 0.52 ) }
    dend_24 { pt3dadd( -53.9254, 73.9654, 100.587, 0.52 ) }
    dend_24 { pt3dadd( -58.4963, 74.5099, 108.555, 0.52 ) }
    dend_24 { pt3dadd( -61.3305, 74.8138, 117.303, 0.52 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 23.4309, -13.8963, 10.7646, 0.59 ) }
    dend_20 { pt3dadd( 23.4953, -15.3063, 12.4547, 0.59 ) }
    dend_20 { pt3dadd( 23.5037, -15.3751, 12.5153, 0.59 ) }
    dend_20 { pt3dadd( 23.5875, -15.9019, 12.9197, 0.59 ) }
    dend_20 { pt3dadd( 23.607, -15.9722, 12.9759, 0.59 ) }
    dend_20 { pt3dadd( 24.0196, -16.8762, 13.7081, 0.59 ) }
    dend_20 { pt3dadd( 24.1656, -17.0812, 13.8783, 0.59 ) }
    dend_20 { pt3dadd( 24.8335, -17.5043, 14.1679, 0.59 ) }
    dend_20 { pt3dadd( 24.9023, -17.5227, 14.1999, 0.59 ) }
    dend_20 { pt3dadd( 25.805, -17.6406, 14.6396, 0.59 ) }
    dend_20 { pt3dadd( 26.6274, -17.6985, 15.0364, 0.52 ) }
    dend_20 { pt3dadd( 27.4092, -17.6941, 15.399, 0.52 ) }
    dend_20 { pt3dadd( 28.4638, -17.6714, 15.9987, 0.52 ) }
    dend_20 { pt3dadd( 30.103, -17.5607, 16.9836, 0.52 ) }
    dend_20 { pt3dadd( 30.5964, -17.5355, 17.3036, 0.52 ) }
    dend_20 { pt3dadd( 31.0384, -17.5344, 17.6433, 0.52 ) }
    dend_20 { pt3dadd( 31.09, -17.5402, 17.7015, 0.52 ) }
    dend_20 { pt3dadd( 31.7062, -17.7748, 18.7405, 0.81 ) }
    dend_20 { pt3dadd( 40.63, -19.9366, 25.0767, 0.81 ) }
    dend_20 { pt3dadd( 50.2114, -23.7759, 29.3953, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 63/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 23.4309, -13.8963, 10.7646, 1.4 ) }
    dend_15 { pt3dadd( 24.3147, -14.902, 11.5446, 1.4 ) }
    dend_15 { pt3dadd( 24.3891, -14.9824, 11.6078, 1.4 ) }
    dend_15 { pt3dadd( 26.2113, -16.8347, 13.0778, 1.4 ) }
    dend_15 { pt3dadd( 26.2736, -16.8981, 13.128, 1.4 ) }
    dend_15 { pt3dadd( 28.3993, -19.0591, 14.843, 0.88 ) }
    dend_15 { pt3dadd( 28.4539, -19.1145, 14.887, 0.88 ) }
    dend_15 { pt3dadd( 29.4198, -20.1086, 15.8396, 0.88 ) }
    dend_15 { pt3dadd( 29.6365, -20.3273, 16.0819, 0.88 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 72/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 23.3361, 23.4626, 2.49329, 1.25 ) }
    dend_11 { pt3dadd( 21.9521, 25.0041, 1.44094, 1.25 ) }
    dend_11 { pt3dadd( 21.625, 25.4485, 1.22924, 1.25 ) }
    dend_11 { pt3dadd( 21.2411, 26.0817, 0.96452, 0.66 ) }
    dend_11 { pt3dadd( 20.8362, 26.8041, 0.701727, 0.52 ) }
    dend_11 { pt3dadd( 20.6092, 27.1947, 0.546778, 0.81 ) }
    dend_11 { pt3dadd( 20.5353, 27.3207, 0.495239, 0.81 ) }
    dend_11 { pt3dadd( 20.1635, 27.9561, 0.309097, 0.81 ) }
    dend_11 { pt3dadd( 19.7301, 28.6667, 0.134682, 0.81 ) }
    dend_11 { pt3dadd( 19.0469, 29.6884, 0.00543069, 0.81 ) }
    dend_11 { pt3dadd( 18.4735, 30.4731, 0.00878429, 0.81 ) }
    dend_11 { pt3dadd( 18.4304, 30.5307, 0.0113854, 0.81 ) }
    dend_11 { pt3dadd( 17.9051, 31.1991, 0.107443, 0.81 ) }
    dend_11 { pt3dadd( 16.9487, 32.3682, 0.358405, 0.66 ) }
    dend_11 { pt3dadd( 16.0631, 33.4524, 0.631029, 0.52 ) }
    dend_11 { pt3dadd( 15.317, 34.3927, 0.883245, 0.52 ) }
    dend_11 { pt3dadd( 14.8022, 35.1087, 1.05643, 0.52 ) }
    dend_11 { pt3dadd( 14.0826, 36.2079, 1.2967, 0.52 ) }
    dend_11 { pt3dadd( 13.4655, 37.2606, 1.48891, 0.52 ) }
    dend_11 { pt3dadd( 12.7713, 38.5455, 1.62272, 0.52 ) }
    dend_11 { pt3dadd( 12.7343, 38.6197, 1.62386, 0.52 ) }
    dend_11 { pt3dadd( 12.2119, 39.7152, 1.6075, 0.52 ) }
    dend_11 { pt3dadd( 11.661, 40.8401, 1.52055, 0.52 ) }
    dend_11 { pt3dadd( 11.5591, 41.0402, 1.48053, 0.52 ) }
    dend_11 { pt3dadd( 11.0313, 42.0033, 1.22253, 0.52 ) }
    dend_11 { pt3dadd( 10.261, 43.2023, 0.796576, 0.52 ) }
    dend_11 { pt3dadd( 10.2015, 43.2846, 0.756177, 0.52 ) }
    dend_11 { pt3dadd( 9.49467, 44.1337, 0.21349, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( 8.9366, 44.7842, -0.259113, 0.74 ) }
    dend_11 { pt3dadd( 8.90159, 44.8253, -0.288354, 0.74 ) }
    dend_11 { pt3dadd( 8.24377, 45.6549, -0.813613, 0.74 ) }
    dend_11 { pt3dadd( 7.55047, 46.5798, -1.30059, 0.74 ) }
    dend_11 { pt3dadd( 7.27084, 46.9877, -1.49495, 0.52 ) }
    dend_11 { pt3dadd( 6.84247, 47.698, -1.78859, 0.52 ) }
    dend_11 { pt3dadd( 6.77521, 47.8304, -1.83402, 0.52 ) }
    dend_11 { pt3dadd( 6.27645, 48.9049, -2.14761, 0.52 ) }
    dend_11 { pt3dadd( 6.23734, 49.0056, -2.17111, 0.52 ) }
    dend_11 { pt3dadd( 5.7918, 50.267, -2.39927, 0.52 ) }
    dend_11 { pt3dadd( 5.45453, 51.3969, -2.60139, 0.52 ) }
    dend_11 { pt3dadd( 5.12972, 52.6453, -2.82471, 0.52 ) }
    dend_11 { pt3dadd( 5.11431, 52.7149, -2.84128, 0.52 ) }
    dend_11 { pt3dadd( 4.93334, 53.7278, -3.13908, 0.96 ) }
    dend_11 { pt3dadd( 4.92272, 53.7967, -3.16131, 0.96 ) }
    dend_11 { pt3dadd( 4.82392, 54.5855, -3.43047, 1.25 ) }
    dend_11 { pt3dadd( 4.80484, 54.6958, -3.46855, 1.25 ) }
    dend_11 { pt3dadd( 4.39849, 56.2581, -3.99332, 1.25 ) }
    dend_11 { pt3dadd( 4.05909, 57.3625, -4.35008, 0.74 ) }
    dend_11 { pt3dadd( 3.67253, 58.4324, -4.67781, 0.74 ) }
    dend_11 { pt3dadd( 3.38711, 59.1279, -4.87487, 0.74 ) }
    dend_11 { pt3dadd( 2.85941, 60.2665, -5.19746, 0.74 ) }
    dend_11 { pt3dadd( 2.23705, 61.4947, -5.52798, 0.74 ) }
    dend_11 { pt3dadd( 2.16696, 61.6181, -5.55719, 0.74 ) }
    dend_11 { pt3dadd( 1.74953, 62.3037, -5.73796, 0.88 ) }
    dend_11 { pt3dadd( 1.16012, 63.2228, -6.00827, 0.88 ) }
    dend_11 { pt3dadd( 0.758972, 63.8824, -6.21551, 0.88 ) }
    dend_11 { pt3dadd( 0.51151, 64.3443, -6.36705, 0.44 ) }
    dend_11 { pt3dadd( 0.217014, 65.0374, -6.59179, 0.44 ) }
    dend_11 { pt3dadd( 0.164289, 65.1943, -6.63991, 0.44 ) }
    dend_11 { pt3dadd( 0.108726, 65.5253, -6.72834, 0.81 ) }
    dend_11 { pt3dadd( 0.121957, 66.314, -6.85748, 0.81 ) }
    dend_11 { pt3dadd( 0.130748, 66.3971, -6.86465, 0.81 ) }
    dend_11 { pt3dadd( 0.252774, 67.1038, -6.90933, 0.81 ) }
    dend_11 { pt3dadd( 0.26926, 67.1857, -6.9133, 0.81 ) }
    dend_11 { pt3dadd( 0.429313, 68.1684, -6.95986, 0.81 ) }
    dend_11 { pt3dadd( 0.538396, 69.114, -6.97038, 0.44 ) }
    dend_11 { pt3dadd( 0.540931, 69.1873, -6.96982, 0.44 ) }
    dend_11 { pt3dadd( 0.492091, 70.0383, -6.96396, 0.44 ) }
    dend_11 { pt3dadd( 0.456533, 70.2772, -6.96447, 0.44 ) }
    dend_11 { pt3dadd( 0.304021, 71.0194, -6.97162, 0.44 ) }
    dend_11 { pt3dadd( 0.0848868, 71.7675, -6.97244, 0.44 ) }
    dend_11 { pt3dadd( -0.148094, 72.4109, -6.9797, 0.96 ) }
    dend_11 { pt3dadd( -0.521981, 73.3686, -6.98753, 0.96 ) }
    dend_11 { pt3dadd( -0.83668, 74.1688, -6.92685, 0.96 ) }
    dend_11 { pt3dadd( -0.86094, 74.2368, -6.91818, 0.96 ) }
    dend_11 { pt3dadd( -1.15128, 75.1491, -6.76316, 0.59 ) }
    dend_11 { pt3dadd( -1.2729, 75.6381, -6.67326, 0.59 ) }
    dend_11 { pt3dadd( -1.29328, 75.7796, -6.64452, 0.59 ) }
    dend_11 { pt3dadd( -1.43767, 77.6207, -6.07074, 0.59 ) }
    dend_11 { pt3dadd( -1.45233, 78.1191, -5.89323, 0.96 ) }
    dend_11 { pt3dadd( -1.45141, 78.2164, -5.85996, 0.96 ) }
    dend_11 { pt3dadd( -1.41961, 79.1133, -5.57177, 0.96 ) }
    dend_11 { pt3dadd( -1.37609, 80.1924, -5.24533, 0.96 ) }
    dend_11 { pt3dadd( -1.34359, 81.9882, -4.77984, 0.96 ) }
    dend_11 { pt3dadd( -1.35765, 82.6708, -4.65551, 0.59 ) }
    dend_11 { pt3dadd( -1.41241, 83.3017, -4.56444, 0.44 ) }
    dend_11 { pt3dadd( -1.50704, 83.951, -4.51108, 0.44 ) }
    dend_11 { pt3dadd( -1.54075, 84.1041, -4.51039, 0.44 ) }
    dend_11 { pt3dadd( -1.70466, 84.681, -4.51815, 0.44 ) }
    dend_11 { pt3dadd( -1.87757, 85.2674, -4.54908, 0.44 ) }
    dend_11 { pt3dadd( -2.14422, 86.1006, -4.55482, 1.11 ) }
    dend_11 { pt3dadd( -2.43279, 86.9592, -4.53536, 1.77 ) }
    dend_11 { pt3dadd( -2.64038, 87.5814, -4.5281, 1.77 ) }
    dend_11 { pt3dadd( -3.10459, 88.9949, -4.54935, 0.81 ) }
    dend_11 { pt3dadd( -3.34418, 89.7628, -4.58266, 0.66 ) }
    dend_11 { pt3dadd( -3.54518, 90.482, -4.60725, 0.59 ) }
    dend_11 { pt3dadd( -3.75417, 91.283, -4.63371, 0.52 ) }
    dend_11 { pt3dadd( -3.9106, 92.0039, -4.66419, 0.52 ) }
    dend_11 { pt3dadd( -4.03567, 92.7237, -4.71538, 0.52 ) }
    dend_11 { pt3dadd( -4.18934, 93.8138, -4.77827, 0.52 ) }
    dend_11 { pt3dadd( -4.3507, 95.1064, -4.78732, 0.52 ) }
    dend_11 { pt3dadd( -4.35978, 95.1791, -4.79, 0.52 ) }
    dend_11 { pt3dadd( -4.47176, 96.0654, -4.83854, 1.62 ) }
    dend_11 { pt3dadd( -4.85386, 98.2337, -5.02353, 0.66 ) }
    dend_11 { pt3dadd( -5.09585, 99.193, -5.12518, 0.44 ) }
    dend_11 { pt3dadd( -5.29992, 99.8627, -5.21774, 0.44 ) }
    dend_11 { pt3dadd( -5.95658, 101.656, -5.47353, 0.44 ) }
    dend_11 { pt3dadd( -6.01102, 101.79, -5.49113, 0.44 ) }
    dend_11 { pt3dadd( -6.91288, 103.794, -5.74387, 0.44 ) }
    dend_11 { pt3dadd( -7.62584, 105.298, -5.92867, 0.44 ) }
    dend_11 { pt3dadd( -8.51522, 107.101, -6.15295, 0.44 ) }
    dend_11 { pt3dadd( -9.18766, 108.436, -6.2771, 0.44 ) }
    dend_11 { pt3dadd( -9.58108, 109.205, -6.29327, 0.44 ) }
    dend_11 { pt3dadd( -9.93608, 109.946, -6.25606, 0.96 ) }
    dend_11 { pt3dadd( -10.2441, 110.663, -6.16991, 0.96 ) }
    dend_11 { pt3dadd( -10.3266, 110.886, -6.13881, 0.96 ) }
    dend_11 { pt3dadd( -10.5818, 111.683, -6.01286, 0.81 ) }
    dend_11 { pt3dadd( -10.8369, 112.691, -5.86766, 0.29 ) }
    dend_11 { pt3dadd( -11.424, 115.493, -5.49137, 0.29 ) }
    dend_11 { pt3dadd( -11.5796, 116.406, -5.38931, 0.37 ) }
    dend_11 { pt3dadd( -11.7036, 117.362, -5.31149, 0.96 ) }
    dend_11 { pt3dadd( -11.7724, 118.138, -5.27894, 1.4 ) }
    dend_11 { pt3dadd( -11.8013, 118.756, -5.28409, 0.88 ) }
    dend_11 { pt3dadd( -11.7971, 119.445, -5.35132, 0.52 ) }
    dend_11 { pt3dadd( -11.6875, 120.409, -5.5741, 0.52 ) }
    dend_11 { pt3dadd( -11.5522, 121.175, -5.76284, 0.74 ) }
    dend_11 { pt3dadd( -11.3817, 121.862, -5.92998, 0.74 ) }
    dend_11 { pt3dadd( -11.2875, 122.174, -6.01157, 0.37 ) }
    dend_11 { pt3dadd( -11.2641, 122.241, -6.02889, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( -10.4836, 124.244, -6.5104, 0.37 ) }
    dend_11 { pt3dadd( -10.3758, 124.52, -6.57257, 0.37 ) }
    dend_11 { pt3dadd( -10.0269, 125.428, -6.81474, 0.37 ) }
    dend_11 { pt3dadd( -10.0024, 125.494, -6.83372, 0.37 ) }
    dend_11 { pt3dadd( -9.44673, 126.98, -7.25343, 0.37 ) }
    dend_11 { pt3dadd( -8.99935, 128.19, -7.57489, 0.81 ) }
    dend_11 { pt3dadd( -8.69289, 129.033, -7.78135, 0.81 ) }
    dend_11 { pt3dadd( -8.20482, 130.361, -8.11173, 0.29 ) }
    dend_11 { pt3dadd( -8.09848, 130.639, -8.16533, 0.29 ) }
    dend_11 { pt3dadd( -7.55904, 131.965, -8.35296, 0.29 ) }
    dend_11 { pt3dadd( -7.16185, 132.896, -8.42613, 0.29 ) }
    dend_11 { pt3dadd( -7.12737, 132.972, -8.42617, 0.29 ) }
    dend_11 { pt3dadd( -6.81561, 133.611, -8.37247, 0.29 ) }
    dend_11 { pt3dadd( -6.0675, 135.283, -8.00183, 0.37 ) }
    dend_11 { pt3dadd( -6.0288, 135.375, -7.97759, 0.37 ) }
    dend_11 { pt3dadd( -5.78175, 135.989, -7.79472, 0.37 ) }
    dend_11 { pt3dadd( -5.58464, 136.481, -7.64194, 0.37 ) }
    dend_11 { pt3dadd( -5.55742, 136.545, -7.62282, 0.37 ) }
    dend_11 { pt3dadd( -4.52788, 138.831, -6.65876, 0.37 ) }
    dend_11 { pt3dadd( -4.49428, 138.897, -6.62353, 0.37 ) }
    dend_11 { pt3dadd( -4.21419, 139.372, -6.21681, 0.37 ) }
    dend_11 { pt3dadd( -4.17634, 139.426, -6.13278, 0.37 ) }
    dend_11 { pt3dadd( -3.91244, 139.745, -5.3081, 0.37 ) }
    dend_11 { pt3dadd( -3.37264, 140.126, -2.98363, 0.44 ) }
    dend_11 { pt3dadd( -3.2965, 140.101, -2.46292, 0.44 ) }
    dend_11 { pt3dadd( -3.12977, 139.812, -0.617223, 0.66 ) }
    dend_11 { pt3dadd( -3.099, 139.469, 0.63115, 0.29 ) }
    dend_11 { pt3dadd( -3.10337, 139.425, 0.736354, 0.29 ) }
    dend_11 { pt3dadd( -3.21682, 138.939, 1.47197, 0.29 ) }
    dend_11 { pt3dadd( -3.241, 138.849, 1.54304, 0.29 ) }
    dend_11 { pt3dadd( -3.46947, 138.007, 2.01028, 0.29 ) }
    dend_11 { pt3dadd( -3.51846, 137.787, 2.05713, 0.29 ) }
    dend_11 { pt3dadd( -3.66301, 137.126, 2.12258, 0.29 ) }
    dend_11 { pt3dadd( -3.70641, 136.958, 2.13085, 0.29 ) }
    dend_11 { pt3dadd( -3.85687, 136.485, 2.12797, 0.44 ) }
    dend_11 { pt3dadd( -3.8833, 136.417, 2.12397, 0.44 ) }
    dend_11 { pt3dadd( -4.13843, 135.906, 2.05604, 0.44 ) }
    dend_11 { pt3dadd( -4.21685, 135.774, 2.03349, 0.44 ) }
    dend_11 { pt3dadd( -4.62869, 135.16, 1.91815, 0.59 ) }
    dend_11 { pt3dadd( -4.66771, 135.1, 1.90939, 0.59 ) }
    dend_11 { pt3dadd( -4.9443, 134.637, 1.86667, 0.59 ) }
    dend_11 { pt3dadd( -4.98048, 134.574, 1.86158, 0.59 ) }
    dend_11 { pt3dadd( -5.2563, 134.047, 1.83297, 0.59 ) }
    dend_11 { pt3dadd( -5.49632, 133.522, 1.82272, 0.29 ) }
    dend_11 { pt3dadd( -5.81253, 132.764, 1.83539, 0.29 ) }
    dend_11 { pt3dadd( -6.08214, 132.016, 1.85339, 0.29 ) }
    dend_11 { pt3dadd( -6.2059, 131.619, 1.86615, 0.44 ) }
    dend_11 { pt3dadd( -6.39792, 130.958, 1.9039, 0.59 ) }
    dend_11 { pt3dadd( -6.53174, 130.443, 1.94511, 0.59 ) }
    dend_11 { pt3dadd( -6.65667, 129.946, 1.99413, 0.81 ) }
    dend_11 { pt3dadd( -6.858, 129.14, 2.08798, 1.33 ) }
    dend_11 { pt3dadd( -7.01046, 128.505, 2.17455, 1.03 ) }
    dend_11 { pt3dadd( -7.20155, 127.67, 2.30641, 0.37 ) }
    dend_11 { pt3dadd( -7.3498, 126.917, 2.43017, 0.37 ) }
    dend_11 { pt3dadd( -7.42232, 126.372, 2.52107, 0.37 ) }
    dend_11 { pt3dadd( -7.42889, 126.27, 2.53828, 0.37 ) }
    dend_11 { pt3dadd( -7.4287, 125.961, 2.5891, 0.15 ) }
    dend_11 { pt3dadd( -7.40945, 125.506, 2.65824, 0.15 ) }
    dend_11 { pt3dadd( -7.35737, 124.657, 2.76921, 0.15 ) }
    dend_11 { pt3dadd( -7.31626, 123.74, 2.88735, 0.15 ) }
    dend_11 { pt3dadd( -7.31634, 123.594, 2.90619, 0.15 ) }
    dend_11 { pt3dadd( -7.33826, 123.137, 2.96472, 0.15 ) }
    dend_11 { pt3dadd( -7.39785, 122.542, 3.03928, 0.15 ) }
    dend_11 { pt3dadd( -7.4764, 122.013, 3.10462, 0.37 ) }
    dend_11 { pt3dadd( -7.60787, 121.414, 3.17587, 0.37 ) }
    dend_11 { pt3dadd( -7.71287, 120.982, 3.2274, 0.44 ) }
    dend_11 { pt3dadd( -7.80119, 120.533, 3.28253, 0.44 ) }
    dend_11 { pt3dadd( -7.81224, 120.461, 3.29164, 0.44 ) }
    dend_11 { pt3dadd( -7.853, 120.072, 3.34181, 0.44 ) }
    dend_11 { pt3dadd( -7.8769, 119.733, 3.38512, 0.22 ) }
    dend_11 { pt3dadd( -7.88018, 119.63, 3.39736, 0.22 ) }
    dend_11 { pt3dadd( -7.86415, 118.471, 3.49251, 0.22 ) }
    dend_11 { pt3dadd( -7.86034, 118.397, 3.49674, 0.22 ) }
    dend_11 { pt3dadd( -7.81167, 117.762, 3.52475, 0.29 ) }
    dend_11 { pt3dadd( -7.76488, 117.278, 3.537, 0.29 ) }
    dend_11 { pt3dadd( -7.69755, 116.738, 3.5465, 0.66 ) }
    dend_11 { pt3dadd( -7.60337, 116.051, 3.5563, 0.88 ) }
    dend_11 { pt3dadd( -7.52986, 115.462, 3.55332, 0.96 ) }
    dend_11 { pt3dadd( -7.4793, 115.015, 3.54904, 0.66 ) }
    dend_11 { pt3dadd( -7.42829, 114.456, 3.54248, 0.29 ) }
    dend_11 { pt3dadd( -7.37687, 113.712, 3.54056, 0.29 ) }
    dend_11 { pt3dadd( -7.34879, 113.162, 3.54861, 0.29 ) }
    dend_11 { pt3dadd( -7.31232, 112.57, 3.57557, 0.37 ) }
    dend_11 { pt3dadd( -7.28778, 112.341, 3.57275, 0.37 ) }
    dend_11 { pt3dadd( -7.21074, 111.862, 3.54407, 0.37 ) }
    dend_11 { pt3dadd( -7.09242, 111.321, 3.49312, 0.37 ) }
    dend_11 { pt3dadd( -7.07375, 111.252, 3.48377, 0.37 ) }
    dend_11 { pt3dadd( -6.85338, 110.594, 3.38993, 0.37 ) }
    dend_11 { pt3dadd( -6.45674, 109.539, 3.25979, 0.52 ) }
    dend_11 { pt3dadd( -6.43106, 109.472, 3.25291, 0.52 ) }
    dend_11 { pt3dadd( -6.25387, 109.044, 3.12486, 0.52 ) }
    dend_11 { pt3dadd( -6.22354, 108.973, 3.09509, 0.52 ) }
    dend_11 { pt3dadd( -6.05395, 108.576, 2.91459, 0.52 ) }
    dend_11 { pt3dadd( -5.86836, 108.129, 2.68744, 0.52 ) }
    dend_11 { pt3dadd( -5.63211, 107.581, 2.39362, 0.52 ) }
    dend_11 { pt3dadd( -4.87729, 105.91, 1.38575, 1.11 ) }
    dend_11 { pt3dadd( -4.50773, 105.146, 0.838877, 1.4 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.3361, 23.4626, 2.49329, 1.62 ) }
    dend_6 { pt3dadd( 23.5319, 23.8495, 2.35687, 1.62 ) }
    dend_6 { pt3dadd( 23.5577, 23.9036, 2.34167, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_6 { pt3dadd( 24.1052, 25.0647, 2.10766, 1.33 ) }
    dend_6 { pt3dadd( 24.5143, 25.8246, 1.97479, 1.33 ) }
    dend_6 { pt3dadd( 24.5819, 25.9363, 1.95359, 1.33 ) }
    dend_6 { pt3dadd( 25.2627, 27.0073, 1.73941, 1.18 ) }
    dend_6 { pt3dadd( 25.2973, 27.0573, 1.72972, 1.18 ) }
    dend_6 { pt3dadd( 25.869, 27.8451, 1.59182, 1.03 ) }
    dend_6 { pt3dadd( 26.6542, 28.8421, 1.45959, 1.03 ) }
    dend_6 { pt3dadd( 27.2284, 29.4839, 1.34444, 1.33 ) }
    dend_6 { pt3dadd( 27.2661, 29.5192, 1.33639, 1.33 ) }
    dend_6 { pt3dadd( 27.7543, 29.8924, 1.19277, 0.96 ) }
    dend_6 { pt3dadd( 27.7968, 29.9184, 1.1787, 0.96 ) }
    dend_6 { pt3dadd( 28.2282, 30.1177, 0.989611, 0.66 ) }
    dend_6 { pt3dadd( 28.8131, 30.3357, 0.704451, 0.88 ) }
    dend_6 { pt3dadd( 29.5174, 30.5955, 0.318845, 1.18 ) }
    dend_6 { pt3dadd( 30.4427, 30.9608, -0.213593, 1.18 ) }
    dend_6 { pt3dadd( 31.2815, 31.3279, -0.732071, 0.96 ) }
    dend_6 { pt3dadd( 32.3799, 31.8523, -1.43924, 0.88 ) }
    dend_6 { pt3dadd( 32.9175, 32.1404, -1.79845, 1.18 ) }
    dend_6 { pt3dadd( 33.6339, 32.5714, -2.29151, 1.18 ) }
    dend_6 { pt3dadd( 34.1122, 32.9095, -2.60782, 1.4 ) }
    dend_6 { pt3dadd( 34.8857, 33.5651, -3.0431, 1.4 ) }
    dend_6 { pt3dadd( 34.9256, 33.6063, -3.06366, 1.4 ) }
    dend_6 { pt3dadd( 35.3385, 34.0653, -3.24038, 1.69 ) }
    dend_6 { pt3dadd( 35.3777, 34.1109, -3.25197, 1.69 ) }
    dend_6 { pt3dadd( 35.9891, 34.8401, -3.34694, 1.33 ) }
    dend_6 { pt3dadd( 36.7821, 35.8628, -3.39892, 1.11 ) }
    dend_6 { pt3dadd( 36.8167, 35.914, -3.39687, 1.11 ) }
    dend_6 { pt3dadd( 37.4943, 37.0473, -3.30749, 0.96 ) }
    dend_6 { pt3dadd( 38.0796, 38.2218, -3.14956, 0.81 ) }
    dend_6 { pt3dadd( 38.2252, 38.6517, -3.07772, 0.59 ) }
    dend_6 { pt3dadd( 38.2921, 39.2394, -2.95036, 0.37 ) }
    dend_6 { pt3dadd( 38.2553, 39.8732, -2.78799, 0.37 ) }
    dend_6 { pt3dadd( 38.2251, 40.0579, -2.7265, 0.37 ) }
    dend_6 { pt3dadd( 38.1092, 40.4602, -2.56657, 1.4 ) }
    dend_6 { pt3dadd( 37.7399, 41.5385, -2.16537, 1.4 ) }
    dend_6 { pt3dadd( 37.4807, 42.2682, -1.86211, 1.4 ) }
    dend_6 { pt3dadd( 37.4519, 42.3506, -1.82544, 1.4 ) }
    dend_6 { pt3dadd( 37.0888, 43.5296, -1.27865, 0.74 ) }
    dend_6 { pt3dadd( 37.0765, 43.5853, -1.25304, 0.74 ) }
    dend_6 { pt3dadd( 36.9916, 44.3176, -0.915687, 0.59 ) }
    dend_6 { pt3dadd( 36.9962, 44.4408, -0.862539, 0.59 ) }
    dend_6 { pt3dadd( 37.0921, 44.991, -0.698508, 0.59 ) }
    dend_6 { pt3dadd( 37.1204, 45.1208, -0.678906, 0.59 ) }
    dend_6 { pt3dadd( 37.2655, 46.086, -0.642832, 0.59 ) }
    dend_6 { pt3dadd( 37.2712, 46.2113, -0.636418, 0.59 ) }
    dend_6 { pt3dadd( 37.264, 46.802, -0.597417, 1.18 ) }
    dend_6 { pt3dadd( 37.2619, 46.8735, -0.591273, 1.18 ) }
    dend_6 { pt3dadd( 37.2235, 47.7836, -0.502947, 1.55 ) }
    dend_6 { pt3dadd( 37.1665, 49.1554, -0.3578, 1.55 ) }
    dend_6 { pt3dadd( 37.1223, 50.0388, -0.255038, 0.81 ) }
    dend_6 { pt3dadd( 37.0959, 51.0163, -0.118151, 0.66 ) }
    dend_6 { pt3dadd( 37.0861, 52.4186, 0.114338, 0.66 ) }
    dend_6 { pt3dadd( 37.0903, 52.5423, 0.136132, 0.66 ) }
    dend_6 { pt3dadd( 37.1498, 53.353, 0.290544, 0.66 ) }
    dend_6 { pt3dadd( 37.167, 53.4837, 0.317114, 0.66 ) }
    dend_6 { pt3dadd( 37.2596, 54.1471, 0.46343, 0.66 ) }
    dend_6 { pt3dadd( 37.2675, 54.2067, 0.481238, 0.66 ) }
    dend_6 { pt3dadd( 37.3624, 55.0599, 0.775917, 1.47 ) }
    dend_6 { pt3dadd( 37.49, 56.2567, 1.19257, 1.47 ) }
    dend_6 { pt3dadd( 37.4995, 56.3526, 1.22427, 1.47 ) }
    dend_6 { pt3dadd( 37.5795, 57.1645, 1.47551, 1.47 ) }
    dend_6 { pt3dadd( 37.6892, 58.2995, 1.78997, 0.66 ) }
    dend_6 { pt3dadd( 37.8326, 59.8169, 2.17075, 0.52 ) }
    dend_6 { pt3dadd( 37.9192, 60.7229, 2.37879, 0.52 ) }
    dend_6 { pt3dadd( 37.9846, 61.3565, 2.48572, 1.4 ) }
    dend_6 { pt3dadd( 37.9895, 61.4098, 2.49184, 1.33 ) }
    dend_6 { pt3dadd( 38.0559, 62.2056, 2.54102, 1.55 ) }
    dend_6 { pt3dadd( 38.1479, 63.5121, 2.57753, 1.55 ) }
    dend_6 { pt3dadd( 38.1521, 63.5747, 2.58002, 1.55 ) }
    dend_6 { pt3dadd( 38.2301, 65.095, 2.68154, 0.74 ) }
    dend_6 { pt3dadd( 38.2672, 66.2195, 2.7666, 0.52 ) }
    dend_6 { pt3dadd( 38.2772, 67.2033, 2.84746, 0.52 ) }
    dend_6 { pt3dadd( 38.2753, 67.8289, 2.90154, 0.81 ) }
    dend_6 { pt3dadd( 38.2667, 68.3642, 2.94946, 1.25 ) }
    dend_6 { pt3dadd( 38.2668, 69.3051, 3.03869, 1.47 ) }
    dend_6 { pt3dadd( 38.2803, 70.2907, 3.1455, 0.96 ) }
    dend_6 { pt3dadd( 38.3391, 71.4631, 3.23586, 0.52 ) }
    dend_6 { pt3dadd( 38.4175, 72.1435, 3.26085, 0.52 ) }
    dend_6 { pt3dadd( 38.4311, 72.2137, 3.26011, 0.52 ) }
    dend_6 { pt3dadd( 38.6623, 72.9424, 3.20403, 0.52 ) }
    dend_6 { pt3dadd( 38.7381, 73.113, 3.18073, 0.52 ) }
    dend_6 { pt3dadd( 38.9357, 73.495, 3.14092, 0.81 ) }
    dend_6 { pt3dadd( 39.1624, 73.89, 3.08347, 0.81 ) }
    dend_6 { pt3dadd( 39.1877, 73.9361, 3.07644, 0.81 ) }
    dend_6 { pt3dadd( 39.755, 75.0765, 2.91057, 0.37 ) }
    dend_6 { pt3dadd( 39.8995, 75.4365, 2.86403, 1.25 ) }
    dend_6 { pt3dadd( 40.4104, 76.8294, 2.70605, 2.21 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 87/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -41.834, 20.5951, -40.6781, 0.07 ) }
    dend_2 { pt3dadd( -41.6085, 19.9132, -46.2029, 0.07 ) }
    dend_2 { pt3dadd( -41.6048, 19.8982, -46.3095, 0.44 ) }
    dend_2 { pt3dadd( -41.6026, 19.875, -46.4596, 0.44 ) }
    dend_2 { pt3dadd( -41.6518, 19.7803, -47.2136, 0.44 ) }
    dend_2 { pt3dadd( -41.6601, 19.7732, -47.2836, 0.44 ) }
    dend_2 { pt3dadd( -41.7617, 19.7516, -47.8069, 0.37 ) }
    dend_2 { pt3dadd( -41.8105, 19.7754, -47.8531, 0.37 ) }
    dend_2 { pt3dadd( -42.2369, 20.0206, -48.3117, 0.37 ) }
    dend_2 { pt3dadd( -43.3405, 20.7153, -49.5415, 0.37 ) }
    dend_2 { pt3dadd( -43.3899, 20.7509, -49.596, 0.37 ) }
    dend_2 { pt3dadd( -43.982, 21.2215, -50.2633, 0.37 ) }
    dend_2 { pt3dadd( -44.0739, 21.3067, -50.4303, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( -44.6994, 22.0155, -51.8825, 0.37 ) }
    dend_2 { pt3dadd( -44.7214, 22.0474, -51.9427, 0.37 ) }
    dend_2 { pt3dadd( -44.7935, 22.1917, -52.5042, 0.37 ) }
    dend_2 { pt3dadd( -44.8032, 22.2125, -52.6096, 0.37 ) }
    dend_2 { pt3dadd( -45.1246, 22.8713, -56.6359, 0.37 ) }
    dend_2 { pt3dadd( -45.1996, 22.9995, -57.5194, 0.37 ) }
    dend_2 { pt3dadd( -45.4131, 23.3134, -60.0062, 0.37 ) }
    dend_2 { pt3dadd( -46.3999, 24.5141, -70.6018, 0.37 ) }
    dend_2 { pt3dadd( -46.4307, 24.5431, -70.9141, 0.37 ) }
    dend_2 { pt3dadd( -46.4913, 24.5839, -71.4358, 0.37 ) }
    dend_2 { pt3dadd( -46.5746, 24.6092, -72.0211, 0.37 ) }
    dend_2 { pt3dadd( -46.5983, 24.6119, -72.1711, 0.37 ) }
    dend_2 { pt3dadd( -46.7856, 24.6363, -73.1774, 0.37 ) }
    dend_2 { pt3dadd( -46.8614, 24.715, -73.2857, 0.37 ) }
    dend_2 { pt3dadd( -47.0739, 24.9759, -73.8272, 0.37 ) }
    dend_2 { pt3dadd( -47.1071, 25.0161, -73.9301, 0.37 ) }
    dend_2 { pt3dadd( -47.5217, 25.5169, -75.3113, 0.37 ) }
    dend_2 { pt3dadd( -47.7248, 25.757, -76.0546, 0.37 ) }
    dend_2 { pt3dadd( -48.3945, 26.545, -78.6693, 0.37 ) }
    dend_2 { pt3dadd( -49.1583, 27.5423, -81.7985, 0.37 ) }
    dend_2 { pt3dadd( -49.6825, 28.3242, -84.2773, 0.37 ) }
    dend_2 { pt3dadd( -49.6957, 28.3452, -84.344, 0.37 ) }
    dend_2 { pt3dadd( -50.1831, 29.1873, -87.0445, 0.37 ) }
    dend_2 { pt3dadd( -50.1954, 29.2104, -87.1216, 0.37 ) }
    dend_2 { pt3dadd( -50.402, 29.6462, -88.5284, 0.37 ) }
    dend_2 { pt3dadd( -51.1395, 31.0002, -93.4182, 0.37 ) }
    dend_2 { pt3dadd( -51.153, 31.0154, -93.4863, 0.37 ) }
    dend_2 { pt3dadd( -51.8979, 31.2883, -95.8811, 0.37 ) }
    dend_2 { pt3dadd( -52.5784, 31.3034, -97.8523, 0.37 ) }
    dend_2 { pt3dadd( -52.6296, 31.2971, -97.9952, 0.37 ) }
    dend_2 { pt3dadd( -53.7017, 31.0908, -100.797, 0.37 ) }
    dend_2 { pt3dadd( -54.5574, 30.9379, -102.913, 0.37 ) }
    dend_2 { pt3dadd( -56.2371, 30.6947, -107.047, 0.37 ) }
    dend_2 { pt3dadd( -59.2425, 30.5118, -114.246, 0.37 ) }
    dend_2 { pt3dadd( -59.2662, 30.5137, -114.302, 0.37 ) }
    dend_2 { pt3dadd( -60.2148, 30.7227, -116.547, 0.37 ) }
    dend_2 { pt3dadd( -61.0636, 31.1165, -118.541, 0.37 ) }
    dend_2 { pt3dadd( -61.1732, 31.1972, -118.803, 0.37 ) }
    dend_2 { pt3dadd( -62.3134, 32.3947, -121.301, 0.37 ) }
    dend_2 { pt3dadd( -63.6256, 33.7793, -123.39, 0.37 ) }
    dend_2 { pt3dadd( -63.6701, 33.8275, -123.458, 0.37 ) }
    dend_2 { pt3dadd( -64.8983, 35.1813, -125.239, 0.37 ) }
    dend_2 { pt3dadd( -64.9286, 35.2151, -125.281, 0.37 ) }
    dend_2 { pt3dadd( -65.7198, 36.1268, -126.354, 0.37 ) }
    dend_2 { pt3dadd( -65.7507, 36.163, -126.393, 0.37 ) }
    dend_2 { pt3dadd( -67.8074, 38.6151, -128.846, 0.37 ) }
    dend_2 { pt3dadd( -67.8985, 38.7202, -128.945, 0.37 ) }
    dend_2 { pt3dadd( -68.1277, 38.9708, -129.164, 1.03 ) }
    dend_2 { pt3dadd( -68.5779, 39.4411, -129.524, 1.03 ) }
    dend_2 { pt3dadd( -68.9217, 39.7819, -129.743, 0.59 ) }
    dend_2 { pt3dadd( -69.08, 39.937, -129.831, 0.59 ) }
    dend_2 { pt3dadd( -69.6954, 40.5421, -130.269, 0.52 ) }
    dend_2 { pt3dadd( -69.7438, 40.592, -130.313, 0.52 ) }
    dend_2 { pt3dadd( -70.9194, 41.8826, -131.492, 0.52 ) }
    dend_2 { pt3dadd( -70.9521, 41.921, -131.528, 0.52 ) }
    dend_2 { pt3dadd( -71.7073, 42.9071, -132.297, 0.52 ) }
    dend_2 { pt3dadd( -73.3915, 45.2506, -133.935, 0.52 ) }
    dend_2 { pt3dadd( -73.4411, 45.3229, -133.974, 0.52 ) }
    dend_2 { pt3dadd( -74.3301, 46.6736, -134.493, 0.52 ) }
    dend_2 { pt3dadd( -74.3878, 46.7643, -134.521, 0.52 ) }
    dend_2 { pt3dadd( -75.9761, 49.2837, -135.077, 0.52 ) }
    dend_2 { pt3dadd( -76.0147, 49.3458, -135.081, 0.52 ) }
    dend_2 { pt3dadd( -77.4233, 51.6611, -134.806, 0.52 ) }
    dend_2 { pt3dadd( -78.0623, 52.7052, -134.663, 0.52 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 64/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -41.834, 20.5951, -40.6781, 1.18 ) }
    dend_1 { pt3dadd( -42.2432, 20.5301, -40.7004, 1.18 ) }
    dend_1 { pt3dadd( -43.6682, 20.2985, -40.724, 0.59 ) }
    dend_1 { pt3dadd( -45.5335, 19.9858, -40.7259, 0.52 ) }
    dend_1 { pt3dadd( -46.961, 19.7251, -40.7352, 0.52 ) }
    dend_1 { pt3dadd( -48.8779, 19.3589, -40.7571, 0.52 ) }
    dend_1 { pt3dadd( -48.9715, 19.339, -40.7573, 0.52 ) }
    dend_1 { pt3dadd( -50.7851, 18.9057, -40.6999, 0.52 ) }
    dend_1 { pt3dadd( -50.8592, 18.8843, -40.6928, 0.52 ) }
    dend_1 { pt3dadd( -51.9611, 18.5352, -40.593, 0.52 ) }
    dend_1 { pt3dadd( -52.0161, 18.517, -40.5884, 0.52 ) }
    dend_1 { pt3dadd( -53.3503, 17.9782, -40.4935, 0.37 ) }
    dend_1 { pt3dadd( -53.4129, 17.9517, -40.4885, 0.37 ) }
    dend_1 { pt3dadd( -55.3423, 17.0151, -40.2885, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 78/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 41.7257, -2.0614, 2.35483, 1.55 ) }
    axon_1 { pt3dadd( 56.7146, -2.63935, 2.35483, 1.55 ) }
    axon_1 { pt3dadd( 71.7034, -3.2173, 2.35483, 1.55 ) }
    // Section: dend_148, id: dend_148, parent: dend_139 (entry count 81/100)
    dend_148 { pt3dclear() }
    dend_148 { pt3dadd( -10.3963, -17.4158, -8.12582, 0.66 ) }
    dend_148 { pt3dadd( -10.9849, -18.0862, -7.69697, 0.66 ) }
    dend_148 { pt3dadd( -11.0544, -18.1795, -7.67458, 0.44 ) }
    dend_148 { pt3dadd( -11.0869, -18.2261, -7.66625, 0.88 ) }
    dend_148 { pt3dadd( -11.3319, -18.6037, -7.60479, 0.88 ) }
    dend_148 { pt3dadd( -11.3627, -18.6517, -7.5972, 0.88 ) }
    dend_148 { pt3dadd( -11.7254, -19.2626, -7.51296, 0.88 ) }
    dend_148 { pt3dadd( -11.9761, -19.7434, -7.57621, 0.81 ) }
    dend_148 { pt3dadd( -12.0223, -19.8388, -7.59789, 0.74 ) }
    dend_148 { pt3dadd( -12.4122, -20.6611, -7.8195, 0.74 ) }
    dend_148 { pt3dadd( -12.4322, -20.7057, -7.83229, 0.74 ) }
    dend_148 { pt3dadd( -12.8483, -21.6523, -8.11529, 0.74 ) }
    dend_148 { pt3dadd( -13.5347, -23.1182, -8.701, 1.11 ) }
    dend_148 { pt3dadd( -13.8554, -23.6868, -8.96819, 1.11 ) }
    dend_148 { pt3dadd( -14.3434, -24.3921, -9.42848, 0.74 ) }
    dend_148 { pt3dadd( -14.8008, -24.9561, -9.89758, 0.74 ) }
    dend_148 { pt3dadd( -14.8251, -24.9809, -9.92174, 0.74 ) }
    dend_148 { pt3dadd( -15.94, -25.9173, -11.0705, 0.74 ) }
    dend_148 { pt3dadd( -16.6237, -26.3613, -11.7139, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_148 { pt3dadd( -17.8248, -26.9285, -12.8357, 0.96 ) }
    dend_148 { pt3dadd( -17.8644, -26.9425, -12.8724, 0.96 ) }
    dend_148 { pt3dadd( -18.5078, -27.1023, -13.4031, 0.81 ) }
    dend_148 { pt3dadd( -19.2063, -27.2301, -13.9227, 1.25 ) }
    dend_148 { pt3dadd( -19.9793, -27.3235, -14.4327, 1.25 ) }
    dend_148 { pt3dadd( -21.1864, -27.46, -15.2366, 1.25 ) }
    dend_148 { pt3dadd( -21.2276, -27.4645, -15.2622, 1.25 ) }
    dend_148 { pt3dadd( -22.7687, -27.6191, -16.2516, 1.25 ) }
    dend_148 { pt3dadd( -23.7578, -27.7363, -16.8966, 1.25 ) }
    dend_148 { pt3dadd( -23.7985, -27.7423, -16.9225, 1.25 ) }
    dend_148 { pt3dadd( -24.8753, -27.9521, -17.6518, 1.11 ) }
    dend_148 { pt3dadd( -25.6889, -28.1442, -18.5204, 0.88 ) }
    dend_148 { pt3dadd( -25.7305, -28.1557, -18.5741, 0.88 ) }
    dend_148 { pt3dadd( -26.3579, -28.3831, -19.6093, 0.88 ) }
    dend_148 { pt3dadd( -26.8808, -28.6145, -20.5555, 0.88 ) }
    dend_148 { pt3dadd( -26.9084, -28.6293, -20.6115, 0.88 ) }
    dend_148 { pt3dadd( -28.888, -29.8653, -25.1283, 0.59 ) }
    dend_148 { pt3dadd( -29.245, -30.1262, -26.038, 0.59 ) }
    dend_148 { pt3dadd( -29.8509, -30.6603, -27.7964, 1.18 ) }
    dend_148 { pt3dadd( -30.0222, -30.8417, -28.3273, 1.18 ) }
    dend_148 { pt3dadd( -30.4846, -31.4083, -29.7848, 1.18 ) }
    dend_148 { pt3dadd( -30.5062, -31.4354, -29.8456, 1.18 ) }
    dend_148 { pt3dadd( -30.6606, -31.6297, -30.2028, 1.18 ) }
    dend_148 { pt3dadd( -31.9854, -33.2007, -33.2233, 0.88 ) }
    dend_148 { pt3dadd( -32.6407, -33.8544, -34.5028, 0.74 ) }
    dend_148 { pt3dadd( -32.6594, -33.8698, -34.5371, 0.74 ) }
    dend_148 { pt3dadd( -33.3535, -34.3364, -35.6693, 0.74 ) }
    dend_148 { pt3dadd( -33.7618, -34.5622, -36.2985, 0.74 ) }
    dend_148 { pt3dadd( -33.8164, -34.5846, -36.3762, 0.74 ) }
    dend_148 { pt3dadd( -34.2533, -34.6875, -36.8739, 0.74 ) }
    dend_148 { pt3dadd( -35.2008, -34.8379, -37.9906, 0.74 ) }
    dend_148 { pt3dadd( -35.2379, -34.8441, -38.0316, 0.74 ) }
    dend_148 { pt3dadd( -36.2742, -35.0289, -39.1247, 0.74 ) }
    dend_148 { pt3dadd( -36.3031, -35.0358, -39.154, 0.74 ) }
    dend_148 { pt3dadd( -36.8598, -35.1924, -39.6918, 0.59 ) }
    dend_148 { pt3dadd( -36.8967, -35.2058, -39.7314, 0.59 ) }
    dend_148 { pt3dadd( -37.4657, -35.446, -40.325, 0.59 ) }
    dend_148 { pt3dadd( -37.5694, -35.5001, -40.447, 0.59 ) }
    dend_148 { pt3dadd( -38.119, -35.9001, -41.2154, 0.59 ) }
    dend_148 { pt3dadd( -38.1389, -35.9191, -41.2473, 0.59 ) }
    dend_148 { pt3dadd( -38.8196, -36.7612, -42.5481, 0.59 ) }
    dend_148 { pt3dadd( -38.8412, -36.7916, -42.5904, 0.59 ) }
    dend_148 { pt3dadd( -38.9972, -37.0817, -42.9736, 0.59 ) }
    dend_148 { pt3dadd( -39.1192, -37.3417, -43.2983, 0.44 ) }
    dend_148 { pt3dadd( -39.2263, -37.7106, -43.6968, 0.29 ) }
    dend_148 { pt3dadd( -39.2762, -37.8699, -43.8309, 0.29 ) }
    dend_148 { pt3dadd( -39.4171, -38.2309, -43.8802, 0.29 ) }
    // Section: dend_140, id: dend_140, parent: dend_139 (entry count 47/100)
    dend_140 { pt3dclear() }
    dend_140 { pt3dadd( -10.3963, -17.4158, -8.12582, 1.55 ) }
    dend_140 { pt3dadd( -10.4182, -17.5525, -8.08991, 1.55 ) }
    dend_140 { pt3dadd( -10.4292, -17.6212, -8.07346, 1.55 ) }
    dend_140 { pt3dadd( -10.6507, -18.9976, -7.74398, 1.55 ) }
    dend_140 { pt3dadd( -11.0511, -21.4863, -7.14826, 1.33 ) }
    dend_140 { pt3dadd( -11.2522, -22.7362, -6.84905, 1.25 ) }
    dend_140 { pt3dadd( -11.4768, -24.132, -6.51495, 1.25 ) }
    dend_140 { pt3dadd( -11.5317, -24.4547, -6.43475, 0.07 ) }
    // Section: dend_137, id: dend_137, parent: dend_135 (entry count 55/100)
    dend_137 { pt3dclear() }
    dend_137 { pt3dadd( -17.5831, -52.0996, -8.44892, 0.44 ) }
    dend_137 { pt3dadd( -21.0254, -55.7697, -20.0749, 0.44 ) }
    dend_137 { pt3dadd( -24.2308, -60.1883, -31.5254, 0.44 ) }
    dend_137 { pt3dadd( -26.1653, -62.4324, -43.8166, 0.44 ) }
    dend_137 { pt3dadd( -26.3068, -62.7714, -56.4532, 0.44 ) }
    dend_137 { pt3dadd( -27.5161, -62.5583, -69.0386, 0.44 ) }
    dend_137 { pt3dadd( -30.0067, -61.1334, -81.368, 0.44 ) }
    dend_137 { pt3dadd( -30.5487, -59.1509, -93.8763, 0.44 ) }
    dend_137 { pt3dadd( -30.3489, -55.4207, -106.046, 0.44 ) }
    dend_137 { pt3dadd( -31.887, -53.1683, -118.428, 0.44 ) }
    dend_137 { pt3dadd( -34.9954, -51.5586, -130.594, 0.44 ) }
    dend_137 { pt3dadd( -37.5405, -52.1764, -142.959, 0.44 ) }
    dend_137 { pt3dadd( -40.2112, -55.0903, -154.978, 0.44 ) }
    // Section: dend_136, id: dend_136, parent: dend_135 (entry count 68/100)
    dend_136 { pt3dclear() }
    dend_136 { pt3dadd( -17.5831, -52.0996, -8.44892, 0.29 ) }
    dend_136 { pt3dadd( -25.1976, -53.6043, -12.9574, 0.44 ) }
    // Section: dend_134, id: dend_134, parent: dend_132 (entry count 70/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( -0.502588, -154.775, 52.1614, 0.44 ) }
    dend_134 { pt3dadd( -0.87152, -163.914, 56.0173, 0.44 ) }
    dend_134 { pt3dadd( -1.24031, -173.636, 58.2246, 0.44 ) }
    dend_134 { pt3dadd( -2.55302, -182.755, 61.8942, 0.44 ) }
    dend_134 { pt3dadd( -2.87159, -191.431, 66.6272, 0.44 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 75/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( -0.502588, -154.775, 52.1614, 0.29 ) }
    dend_133 { pt3dadd( -0.91948, -168.443, 56.1873, 0.44 ) }
    dend_133 { pt3dadd( 1.02431, -181.813, 60.8204, 0.44 ) }
    dend_133 { pt3dadd( 3.24006, -194.757, 66.374, 0.44 ) }
    dend_133 { pt3dadd( 4.92695, -206.374, 74.286, 0.44 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 80/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 56.0569, 6.69529, 25.7672, 0.44 ) }
    dend_130 { pt3dadd( 62.2834, 12.1605, 21.7106, 0.44 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 82/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 56.0569, 6.69529, 25.7672, 0.29 ) }
    dend_129 { pt3dadd( 61.1705, 15.9317, 24.4634, 0.44 ) }
    // Section: dend_127, id: dend_127, parent: dend_121 (entry count 84/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( 30.9582, -43.6622, 35.8542, 0.22 ) }
    dend_127 { pt3dadd( 30.5795, -44.2836, 36.2758, 0.22 ) }
    dend_127 { pt3dadd( 30.5558, -44.3153, 36.3063, 0.44 ) }
    dend_127 { pt3dadd( 30.5215, -44.3445, 36.3426, 0.44 ) }
    dend_127 { pt3dadd( 29.8228, -44.8223, 37.0193, 0.44 ) }
    dend_127 { pt3dadd( 29.782, -44.8482, 37.0507, 0.44 ) }
    dend_127 { pt3dadd( 28.8797, -45.5674, 37.7515, 0.44 ) }
    dend_127 { pt3dadd( 28.7136, -45.6974, 37.8823, 0.44 ) }
    dend_127 { pt3dadd( 28.1156, -46.1224, 38.3132, 0.44 ) }
    dend_127 { pt3dadd( 28.0736, -46.1502, 38.3414, 0.44 ) }
    dend_127 { pt3dadd( 26.6975, -46.9472, 39.2675, 0.44 ) }
    dend_127 { pt3dadd( 25.2499, -47.6906, 40.2315, 0.44 ) }
    dend_127 { pt3dadd( 24.8106, -47.8787, 40.5075, 0.44 ) }
    dend_127 { pt3dadd( 24.0887, -48.1303, 40.9831, 0.44 ) }
    dend_127 { pt3dadd( 23.9769, -48.1561, 41.0605, 0.44 ) }
    dend_127 { pt3dadd( 23.0526, -48.1631, 41.7062, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_127 { pt3dadd( 22.5246, -47.9322, 42.0612, 0.22 ) }
    dend_127 { pt3dadd( 21.9607, -47.5684, 42.3393, 0.22 ) }
    dend_127 { pt3dadd( 21.8183, -47.4647, 42.4104, 0.22 ) }
    dend_127 { pt3dadd( 21.6027, -47.2886, 42.5112, 0.22 ) }
    dend_127 { pt3dadd( 21.537, -47.2366, 42.5327, 0.22 ) }
    dend_127 { pt3dadd( 20.8667, -46.8198, 42.506, 0.22 ) }
    dend_127 { pt3dadd( 19.9087, -46.4864, 42.3051, 0.22 ) }
    dend_127 { pt3dadd( 13.3029, -48.8336, 46.5032, 0.22 ) }
    dend_127 { pt3dadd( 7.281, -51.1231, 51.5299, 0.22 ) }
    dend_127 { pt3dadd( 1.63545, -53.0268, 57.1003, 0.22 ) }
    dend_127 { pt3dadd( -4.00049, -55.182, 62.6035, 0.22 ) }
    dend_127 { pt3dadd( -10.5924, -55.4552, 67.3057, 0.22 ) }
    dend_127 { pt3dadd( -17.4677, -56.1738, 71.5518, 0.22 ) }
    dend_127 { pt3dadd( -24.35, -56.6261, 75.8094, 0.22 ) }
    dend_127 { pt3dadd( -31.4713, -57.9554, 79.4996, 0.22 ) }
    dend_127 { pt3dadd( -39.284, -58.6862, 81.5315, 0.22 ) }
    dend_127 { pt3dadd( -47.0526, -58.5757, 83.7791, 0.22 ) }
    dend_127 { pt3dadd( -54.4299, -58.3242, 87.0846, 0.22 ) }
    dend_127 { pt3dadd( -61.7673, -59.3035, 90.4157, 0.22 ) }
    dend_127 { pt3dadd( -68.6248, -60.1241, 94.6779, 0.22 ) }
    // Section: dend_122, id: dend_122, parent: dend_121 (entry count 20/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( 30.9582, -43.6622, 35.8542, 0.74 ) }
    dend_122 { pt3dadd( 31.0985, -45.3265, 36.6255, 0.74 ) }
    dend_122 { pt3dadd( 31.2878, -47.527, 37.5532, 0.74 ) }
    dend_122 { pt3dadd( 31.2978, -47.592, 37.5788, 0.74 ) }
    dend_122 { pt3dadd( 31.5104, -49.1085, 38.2289, 0.52 ) }
    dend_122 { pt3dadd( 31.662, -50.9818, 39.113, 0.52 ) }
    dend_122 { pt3dadd( 31.668, -51.056, 39.148, 0.52 ) }
    dend_122 { pt3dadd( 31.6936, -52.8243, 40.0057, 0.52 ) }
    dend_122 { pt3dadd( 31.6506, -54.2755, 40.6743, 0.52 ) }
    dend_122 { pt3dadd( 31.6522, -55.9045, 41.4509, 0.44 ) }
    dend_122 { pt3dadd( 31.8263, -58.091, 42.5966, 0.44 ) }
    // Section: dend_113, id: dend_113, parent: dend_111 (entry count 31/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 8.03722, 41.3112, 10.3718, 0.74 ) }
    dend_113 { pt3dadd( 8.14594, 42.147, 10.3351, 0.74 ) }
    dend_113 { pt3dadd( 8.15986, 42.2799, 10.3189, 0.74 ) }
    dend_113 { pt3dadd( 8.21835, 43.6567, 10.1172, 0.74 ) }
    dend_113 { pt3dadd( 8.21671, 43.8637, 10.0847, 0.74 ) }
    dend_113 { pt3dadd( 8.0716, 45.616, 9.80113, 0.74 ) }
    dend_113 { pt3dadd( 7.72601, 47.7643, 9.52821, 0.74 ) }
    dend_113 { pt3dadd( 7.44863, 48.6562, 9.4966, 1.55 ) }
    dend_113 { pt3dadd( 6.94272, 49.8349, 9.54607, 1.55 ) }
    dend_113 { pt3dadd( 6.68893, 50.2908, 9.62148, 1.55 ) }
    dend_113 { pt3dadd( 5.99983, 51.3433, 9.91773, 1.11 ) }
    dend_113 { pt3dadd( 5.21946, 52.3597, 10.3543, 0.88 ) }
    dend_113 { pt3dadd( 3.91738, 53.9487, 11.3476, 0.66 ) }
    dend_113 { pt3dadd( 3.86483, 54.016, 11.397, 0.66 ) }
    dend_113 { pt3dadd( 3.32113, 54.815, 12.0537, 0.66 ) }
    dend_113 { pt3dadd( 3.27351, 54.9111, 12.1299, 0.66 ) }
    dend_113 { pt3dadd( 3.13772, 55.5107, 12.5326, 0.66 ) }
    dend_113 { pt3dadd( 3.13601, 55.6698, 12.6072, 0.66 ) }
    dend_113 { pt3dadd( 3.24227, 56.6622, 13.1156, 0.66 ) }
    dend_113 { pt3dadd( 3.25459, 56.7683, 13.1783, 0.66 ) }
    dend_113 { pt3dadd( 3.37391, 57.5295, 13.6653, 0.96 ) }
    dend_113 { pt3dadd( 3.54715, 58.4472, 14.3022, 0.96 ) }
    dend_113 { pt3dadd( 3.56459, 58.5135, 14.3556, 0.96 ) }
    dend_113 { pt3dadd( 4.29159, 60.474, 16.0242, 0.88 ) }
    dend_113 { pt3dadd( 4.35972, 60.6174, 16.1534, 0.88 ) }
    dend_113 { pt3dadd( 4.57523, 60.9605, 16.471, 0.88 ) }
    dend_113 { pt3dadd( 4.69497, 61.105, 16.6388, 0.88 ) }
    dend_113 { pt3dadd( 5.3688, 61.8517, 17.5325, 0.74 ) }
    dend_113 { pt3dadd( 5.86541, 62.4203, 18.1476, 0.74 ) }
    dend_113 { pt3dadd( 5.91159, 62.4732, 18.1975, 0.74 ) }
    dend_113 { pt3dadd( 6.46495, 63.2343, 18.8747, 0.74 ) }
    dend_113 { pt3dadd( 7.35422, 64.7352, 20.1618, 0.59 ) }
    dend_113 { pt3dadd( 7.6347, 65.4262, 20.6772, 0.59 ) }
    dend_113 { pt3dadd( 7.72882, 66.021, 21.0119, 0.66 ) }
    dend_113 { pt3dadd( 7.72299, 66.1109, 21.0562, 0.66 ) }
    dend_113 { pt3dadd( 7.54824, 66.876, 21.3495, 0.66 ) }
    dend_113 { pt3dadd( 7.42999, 67.2066, 21.4455, 0.66 ) }
    dend_113 { pt3dadd( 7.06411, 68.1762, 21.6557, 0.66 ) }
    dend_113 { pt3dadd( 6.75119, 69.0858, 21.8767, 0.66 ) }
    dend_113 { pt3dadd( 6.3985, 70.4081, 22.2791, 0.66 ) }
    dend_113 { pt3dadd( 6.21185, 71.588, 22.7517, 0.66 ) }
    dend_113 { pt3dadd( 6.20608, 71.6783, 22.7952, 0.66 ) }
    dend_113 { pt3dadd( 6.22489, 72.818, 23.4673, 0.66 ) }
    dend_113 { pt3dadd( 6.29399, 73.5341, 24.0115, 0.59 ) }
    dend_113 { pt3dadd( 6.46877, 74.6549, 24.9786, 0.52 ) }
    dend_113 { pt3dadd( 6.64584, 75.662, 25.8478, 0.52 ) }
    dend_113 { pt3dadd( 6.65465, 75.7323, 25.9169, 0.52 ) }
    dend_113 { pt3dadd( 6.70922, 76.8443, 27.0667, 0.52 ) }
    dend_113 { pt3dadd( 6.66619, 77.7383, 28.0422, 0.88 ) }
    dend_113 { pt3dadd( 6.60927, 78.1097, 28.4739, 1.11 ) }
    dend_113 { pt3dadd( 6.39841, 78.9651, 29.4423, 1.11 ) }
    dend_113 { pt3dadd( 5.87549, 80.5201, 31.127, 1.11 ) }
    dend_113 { pt3dadd( 5.85178, 80.589, 31.1936, 1.11 ) }
    dend_113 { pt3dadd( 5.48603, 81.81, 32.1565, 0.88 ) }
    dend_113 { pt3dadd( 5.21903, 83.0107, 32.9286, 0.74 ) }
    dend_113 { pt3dadd( 5.08086, 83.8346, 33.39, 0.74 ) }
    dend_113 { pt3dadd( 4.91333, 85.2664, 34.034, 0.74 ) }
    dend_113 { pt3dadd( 4.78483, 86.8219, 34.5769, 0.66 ) }
    dend_113 { pt3dadd( 4.59086, 89.3342, 35.3233, 0.66 ) }
    dend_113 { pt3dadd( 4.41065, 91.5289, 35.8327, 0.66 ) }
    dend_113 { pt3dadd( 4.35091, 92.3546, 35.9717, 0.88 ) }
    dend_113 { pt3dadd( 4.23608, 94.2748, 36.218, 0.88 ) }
    dend_113 { pt3dadd( 4.2318, 94.3631, 36.2244, 0.88 ) }
    dend_113 { pt3dadd( 4.1434, 95.4803, 36.2575, 0.66 ) }
    dend_113 { pt3dadd( 4.04391, 96.3051, 36.2118, 0.66 ) }
    dend_113 { pt3dadd( 3.91953, 97.1549, 36.1233, 0.74 ) }
    dend_113 { pt3dadd( 3.85076, 97.9019, 36.038, 0.74 ) }
    dend_113 { pt3dadd( 3.81097, 99.2839, 35.8704, 0.74 ) }
    dend_113 { pt3dadd( 3.81643, 99.3719, 35.8607, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_113 { pt3dadd( 4.05914, 100.916, 35.7161, 0.74 ) }
    dend_113 { pt3dadd( 4.07955, 101.014, 35.7093, 0.74 ) }
    dend_113 { pt3dadd( 4.27671, 101.93, 35.6751, 0.74 ) }
    dend_113 { pt3dadd( 4.30069, 102.015, 35.6719, 0.74 ) }
    dend_113 { pt3dadd( 4.65241, 102.954, 35.6386, 0.74 ) }
    dend_113 { pt3dadd( 4.6964, 103.045, 35.6371, 0.74 ) }
    dend_113 { pt3dadd( 5.16088, 103.726, 35.6495, 1.18 ) }
    dend_113 { pt3dadd( 5.24102, 103.831, 35.6542, 1.18 ) }
    dend_113 { pt3dadd( 5.85906, 104.5, 35.7136, 1.18 ) }
    dend_113 { pt3dadd( 5.99725, 104.635, 35.7277, 1.18 ) }
    dend_113 { pt3dadd( 6.80431, 105.367, 35.8138, 0.81 ) }
    dend_113 { pt3dadd( 7.58458, 106.047, 35.8972, 0.66 ) }
    dend_113 { pt3dadd( 7.67862, 106.125, 35.9026, 0.66 ) }
    dend_113 { pt3dadd( 9.23328, 107.404, 35.9451, 0.66 ) }
    dend_113 { pt3dadd( 9.76586, 107.872, 35.9459, 0.66 ) }
    dend_113 { pt3dadd( 11.2262, 109.214, 35.9139, 0.66 ) }
    dend_113 { pt3dadd( 11.2959, 109.284, 35.9062, 0.66 ) }
    dend_113 { pt3dadd( 12.5486, 110.695, 35.7519, 0.66 ) }
    dend_113 { pt3dadd( 12.6107, 110.772, 35.7435, 0.66 ) }
    dend_113 { pt3dadd( 13.5386, 112.085, 35.5992, 0.66 ) }
    dend_113 { pt3dadd( 13.5795, 112.148, 35.5935, 0.66 ) }
    dend_113 { pt3dadd( 14.4182, 113.45, 35.5269, 0.66 ) }
    dend_113 { pt3dadd( 15.3593, 114.825, 35.5487, 0.66 ) }
    dend_113 { pt3dadd( 15.4101, 114.895, 35.5561, 0.66 ) }
    dend_113 { pt3dadd( 16.0368, 115.664, 35.6547, 0.66 ) }
    dend_113 { pt3dadd( 16.1658, 115.806, 35.6839, 0.66 ) }
    dend_113 { pt3dadd( 16.9776, 116.693, 35.9023, 0.88 ) }
    dend_113 { pt3dadd( 17.4846, 117.267, 36.0538, 0.88 ) }
    dend_113 { pt3dadd( 17.5306, 117.323, 36.0698, 0.88 ) }
    dend_113 { pt3dadd( 17.9747, 117.963, 36.2838, 0.96 ) }
    dend_113 { pt3dadd( 18.7503, 119.298, 36.771, 0.66 ) }
    dend_113 { pt3dadd( 18.7896, 119.371, 36.7991, 0.66 ) }
    dend_113 { pt3dadd( 19.3951, 120.661, 37.3328, 0.52 ) }
    dend_113 { pt3dadd( 20.0141, 122.063, 37.9501, 0.96 ) }
    dend_113 { pt3dadd( 20.4141, 122.995, 38.3817, 1.25 ) }
    dend_113 { pt3dadd( 20.5541, 123.344, 38.5588, 1.25 ) }
    // Section: dend_112, id: dend_112, parent: dend_111 (entry count 36/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( 8.03722, 41.3112, 10.3718, 0.59 ) }
    dend_112 { pt3dadd( 8.65732, 42.3548, 12.9933, 0.59 ) }
    dend_112 { pt3dadd( 8.9061, 42.7452, 13.9115, 0.59 ) }
    dend_112 { pt3dadd( 8.99207, 42.8618, 14.1758, 0.59 ) }
    dend_112 { pt3dadd( 9.24319, 43.1902, 14.9193, 0.59 ) }
    dend_112 { pt3dadd( 10.1613, 44.1947, 17.3181, 0.37 ) }
    dend_112 { pt3dadd( 10.6827, 44.7665, 18.7548, 0.37 ) }
    dend_112 { pt3dadd( 10.7461, 44.832, 18.9023, 0.37 ) }
    dend_112 { pt3dadd( 10.9872, 45.0962, 19.5081, 0.37 ) }
    dend_112 { pt3dadd( 11.4764, 45.6175, 20.6547, 0.29 ) }
    dend_112 { pt3dadd( 11.8827, 46.0309, 21.5292, 0.29 ) }
    dend_112 { pt3dadd( 12.8706, 46.8631, 23.2154, 0.29 ) }
    dend_112 { pt3dadd( 13.2867, 47.2115, 23.936, 0.29 ) }
    dend_112 { pt3dadd( 13.3273, 47.2452, 24.0119, 0.29 ) }
    dend_112 { pt3dadd( 13.7148, 47.6866, 25.1612, 0.29 ) }
    dend_112 { pt3dadd( 13.7315, 47.7125, 25.2358, 0.29 ) }
    dend_112 { pt3dadd( 13.955, 48.2624, 26.8356, 0.29 ) }
    dend_112 { pt3dadd( 13.9633, 48.2906, 26.923, 0.29 ) }
    dend_112 { pt3dadd( 13.9989, 48.6528, 28.0505, 0.29 ) }
    dend_112 { pt3dadd( 13.9374, 49.6012, 30.6921, 0.29 ) }
    dend_112 { pt3dadd( 13.9316, 49.626, 30.7565, 0.29 ) }
    dend_112 { pt3dadd( 13.8277, 50.0472, 31.5607, 0.29 ) }
    dend_112 { pt3dadd( 13.5965, 50.9269, 32.6735, 0.29 ) }
    dend_112 { pt3dadd( 13.5392, 51.1371, 32.9066, 0.29 ) }
    dend_112 { pt3dadd( 13.3778, 51.7393, 33.489, 0.29 ) }
    dend_112 { pt3dadd( 13.3421, 51.8775, 33.6205, 0.29 ) }
    dend_112 { pt3dadd( 13.1168, 52.6414, 34.3965, 0.29 ) }
    dend_112 { pt3dadd( 12.7646, 53.8381, 35.6946, 0.29 ) }
    dend_112 { pt3dadd( 12.3425, 55.5755, 37.7099, 0.29 ) }
    dend_112 { pt3dadd( 12.3331, 55.6259, 37.7734, 0.29 ) }
    dend_112 { pt3dadd( 12.2455, 56.6249, 39.2552, 0.29 ) }
    dend_112 { pt3dadd( 12.2452, 56.6731, 39.3346, 0.29 ) }
    dend_112 { pt3dadd( 12.3152, 57.0958, 40.1373, 0.29 ) }
    dend_112 { pt3dadd( 12.5883, 57.6826, 41.3583, 0.29 ) }
    dend_112 { pt3dadd( 12.624, 57.7242, 41.4681, 0.29 ) }
    dend_112 { pt3dadd( 13.3201, 58.3242, 43.615, 0.29 ) }
    dend_112 { pt3dadd( 13.3476, 58.3326, 43.7336, 0.29 ) }
    dend_112 { pt3dadd( 13.4353, 58.3315, 44.5786, 0.29 ) }
    dend_112 { pt3dadd( 13.4274, 58.3141, 44.9319, 0.29 ) }
    dend_112 { pt3dadd( 13.2443, 58.1587, 46.5065, 0.29 ) }
    dend_112 { pt3dadd( 13.2297, 58.1531, 46.5854, 0.29 ) }
    dend_112 { pt3dadd( 12.5786, 58.0208, 48.7952, 0.29 ) }
    dend_112 { pt3dadd( 12.2654, 58.0335, 49.8805, 0.29 ) }
    dend_112 { pt3dadd( 12.0668, 58.1046, 50.5121, 0.29 ) }
    dend_112 { pt3dadd( 12.0444, 58.188, 50.7505, 0.29 ) }
    dend_112 { pt3dadd( 12.5958, 58.8215, 51.3571, 0.29 ) }
    dend_112 { pt3dadd( 13.0703, 59.2434, 51.6307, 0.29 ) }
    dend_112 { pt3dadd( 13.3295, 59.4479, 51.7503, 0.29 ) }
    dend_112 { pt3dadd( 13.3897, 59.4931, 51.7823, 0.29 ) }
    dend_112 { pt3dadd( 13.8592, 59.961, 52.0834, 0.29 ) }
    dend_112 { pt3dadd( 13.8846, 60.0342, 52.1375, 0.29 ) }
    dend_112 { pt3dadd( 13.9061, 60.5837, 52.5545, 0.29 ) }
    dend_112 { pt3dadd( 13.8716, 61.2838, 53.0511, 0.29 ) }
    dend_112 { pt3dadd( 13.8183, 61.9807, 53.5399, 0.29 ) }
    dend_112 { pt3dadd( 13.7453, 62.8075, 54.146, 0.29 ) }
    dend_112 { pt3dadd( 13.5327, 64.6483, 55.55, 0.29 ) }
    dend_112 { pt3dadd( 13.5264, 64.7702, 55.6766, 0.29 ) }
    dend_112 { pt3dadd( 13.5638, 65.1296, 56.2677, 0.29 ) }
    dend_112 { pt3dadd( 13.6412, 65.1611, 56.5309, 0.29 ) }
    dend_112 { pt3dadd( 13.9315, 64.9918, 57.1658, 0.59 ) }
    dend_112 { pt3dadd( 13.9752, 64.95, 57.2361, 0.59 ) }
    dend_112 { pt3dadd( 15.1174, 63.7264, 58.6792, 0.59 ) }
    dend_112 { pt3dadd( 15.1804, 63.6606, 58.7497, 0.59 ) }
    dend_112 { pt3dadd( 15.7969, 63.0596, 59.3396, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_112 { pt3dadd( 15.9993, 62.8672, 59.529, 0.81 ) }
    dend_112 { pt3dadd( 16.741, 62.2051, 60.183, 1.11 ) }
    dend_112 { pt3dadd( 16.8165, 62.1407, 60.2413, 1.11 ) }
    dend_112 { pt3dadd( 17.9497, 61.2895, 60.8409, 1.11 ) }
    dend_112 { pt3dadd( 18.6863, 60.7635, 61.2125, 0.96 ) }
    dend_112 { pt3dadd( 18.768, 66.3939, 71.3441, 0.96 ) }
    dend_112 { pt3dadd( 21.0817, 73.6908, 80.1741, 0.96 ) }
    dend_112 { pt3dadd( 23.307, 80.6648, 89.2593, 0.96 ) }
    dend_112 { pt3dadd( 27.4522, 89.1491, 96.2934, 0.96 ) }
    dend_112 { pt3dadd( 31.3584, 99.2762, 101.171, 0.96 ) }
    dend_112 { pt3dadd( 37.1016, 108.76, 105.396, 0.96 ) }
    dend_112 { pt3dadd( 43.1203, 116.282, 112.08, 0.96 ) }
    dend_112 { pt3dadd( 48.5807, 124.691, 118.264, 0.96 ) }
    // Section: dend_104, id: dend_104, parent: dend_98 (entry count 13/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 42.5541, 11.351, 31.5059, 0.66 ) }
    dend_104 { pt3dadd( 43.4636, 11.3671, 31.5081, 0.66 ) }
    dend_104 { pt3dadd( 43.5318, 11.3672, 31.5094, 0.66 ) }
    dend_104 { pt3dadd( 44.2185, 11.3653, 31.5222, 0.66 ) }
    dend_104 { pt3dadd( 45.0982, 11.3652, 31.5398, 0.66 ) }
    dend_104 { pt3dadd( 45.1712, 11.3668, 31.5443, 0.66 ) }
    dend_104 { pt3dadd( 46.6723, 11.4156, 31.6675, 0.66 ) }
    dend_104 { pt3dadd( 47.081, 11.4474, 31.6944, 0.96 ) }
    dend_104 { pt3dadd( 48.1803, 11.5696, 31.796, 0.81 ) }
    dend_104 { pt3dadd( 48.2307, 11.5788, 31.8028, 0.81 ) }
    dend_104 { pt3dadd( 49.412, 11.8799, 32.008, 0.44 ) }
    dend_104 { pt3dadd( 49.4595, 11.897, 32.0192, 0.44 ) }
    dend_104 { pt3dadd( 50.1874, 12.2729, 32.2561, 0.44 ) }
    dend_104 { pt3dadd( 50.2298, 12.2981, 32.2725, 0.44 ) }
    dend_104 { pt3dadd( 50.9044, 12.6822, 32.547, 0.44 ) }
    dend_104 { pt3dadd( 51.0393, 12.7482, 32.598, 0.44 ) }
    dend_104 { pt3dadd( 51.9563, 13.0272, 32.9453, 0.44 ) }
    dend_104 { pt3dadd( 52.0041, 13.0335, 32.9639, 0.44 ) }
    dend_104 { pt3dadd( 52.4503, 12.989, 33.1283, 0.44 ) }
    dend_104 { pt3dadd( 53.4603, 12.7459, 33.463, 0.44 ) }
    dend_104 { pt3dadd( 53.5076, 12.7283, 33.476, 0.44 ) }
    dend_104 { pt3dadd( 54.4764, 12.311, 33.6874, 0.52 ) }
    dend_104 { pt3dadd( 54.5223, 12.2867, 33.6948, 0.52 ) }
    dend_104 { pt3dadd( 54.9981, 12.0339, 33.7661, 0.88 ) }
    dend_104 { pt3dadd( 55.1435, 11.9579, 33.7833, 0.88 ) }
    dend_104 { pt3dadd( 55.6283, 11.7082, 33.8811, 0.88 ) }
    dend_104 { pt3dadd( 55.6756, 11.6866, 33.8874, 0.88 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 40/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 42.5541, 11.351, 31.5059, 0.44 ) }
    dend_99 { pt3dadd( 42.6284, 11.2656, 31.4672, 0.44 ) }
    dend_99 { pt3dadd( 43.5979, 10.1524, 30.9618, 0.15 ) }
    dend_99 { pt3dadd( 45.051, 8.48391, 30.2043, 0.15 ) }
    dend_99 { pt3dadd( 45.2928, 8.2063, 30.0783, 0.15 ) }
    dend_99 { pt3dadd( 45.3377, 8.15469, 30.0549, 0.15 ) }
    dend_99 { pt3dadd( 52.388, 0.907679, 28.0227, 0.15 ) }
    dend_99 { pt3dadd( 58.8943, -6.92414, 26.1675, 0.15 ) }
    // Section: dend_74, id: dend_74, parent: dend_52 (entry count 48/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -18.1234, -1.62524, 0.0448244, 1.11 ) }
    dend_74 { pt3dadd( -19.8814, -1.25776, 0.995686, 1.11 ) }
    dend_74 { pt3dadd( -21.2182, -1.016, 1.79146, 1.11 ) }
    dend_74 { pt3dadd( -23.2426, -0.649916, 2.99648, 1.11 ) }
    dend_74 { pt3dadd( -24.0419, -0.505349, 3.47233, 0.88 ) }
    dend_74 { pt3dadd( -24.2458, -0.468488, 3.59367, 1.11 ) }
    dend_74 { pt3dadd( -24.2994, -0.458797, 3.62557, 1.11 ) }
    dend_74 { pt3dadd( -25.6484, -0.287674, 4.35263, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 56/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -18.1234, -1.62524, 0.0448244, 1.4 ) }
    dend_53 { pt3dadd( -21.2356, -5.37444, -4.33299, 1.4 ) }
    dend_53 { pt3dadd( -24.2634, -9.01731, -6.61365, 1.25 ) }
    dend_53 { pt3dadd( -25.157, -10.0555, -7.08954, 1.03 ) }
    dend_53 { pt3dadd( -25.9641, -10.9271, -7.36315, 1.03 ) }
    dend_53 { pt3dadd( -26.8435, -11.8769, -7.66127, 1.03 ) }
    dend_53 { pt3dadd( -27.9744, -13.0982, -8.04464, 0.96 ) }
    dend_53 { pt3dadd( -29.8108, -14.9507, -8.84915, 0.96 ) }
    dend_53 { pt3dadd( -31.1713, -16.3514, -9.06825, 0.96 ) }
    dend_53 { pt3dadd( -32.873, -18.0189, -9.26878, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -39.2731, 11.1449, 38.6963, 0.44 ) }
    dend_51 { pt3dadd( -44.3353, 13.9959, 45.5294, 0.44 ) }
    dend_51 { pt3dadd( -48.4619, 14.9873, 53.3571, 0.44 ) }
    dend_51 { pt3dadd( -53.3076, 14.0678, 60.7167, 0.44 ) }
    dend_51 { pt3dadd( -58.3575, 13.9776, 68.0121, 0.44 ) }
    dend_51 { pt3dadd( -62.7071, 12.7226, 75.6239, 0.44 ) }
    dend_51 { pt3dadd( -66.4755, 11.6476, 83.5689, 0.44 ) }
    dend_51 { pt3dadd( -70.58, 9.20895, 91.0227, 0.44 ) }
    dend_51 { pt3dadd( -74.1358, 7.67582, 98.9854, 0.44 ) }
    dend_51 { pt3dadd( -77.8894, 7.86628, 107.034, 0.44 ) }
    dend_51 { pt3dadd( -81.0958, 8.49584, 115.307, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 77/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -39.2731, 11.1449, 38.6963, 0.29 ) }
    dend_50 { pt3dadd( -42.7784, 12.3344, 43.9747, 0.44 ) }
    dend_50 { pt3dadd( -45.444, 13.3067, 49.7594, 0.44 ) }
    dend_50 { pt3dadd( -47.4173, 15.0381, 55.678, 0.44 ) }
    dend_50 { pt3dadd( -50.0513, 15.9257, 61.4876, 0.44 ) }
    dend_50 { pt3dadd( -52.6286, 17.1996, 67.2662, 0.44 ) }
    dend_50 { pt3dadd( -55.2219, 18.0601, 73.0973, 0.44 ) }
    dend_50 { pt3dadd( -57.9178, 19.3514, 78.818, 0.44 ) }
    dend_50 { pt3dadd( -60.7076, 20.2633, 84.5509, 0.44 ) }
    dend_50 { pt3dadd( -64.5165, 21.847, 89.5219, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_27 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.473385, 30.6466, 1.78064, 1.47 ) }
    dend_47 { pt3dadd( 2.19495, 31.3468, 0.711725, 1.47 ) }
    dend_47 { pt3dadd( 2.19495, 31.3468, 0.711725, 1.47 ) }
    dend_47 { pt3dadd( 4.11285, 32.0762, 0.189551, 0.74 ) }
    dend_47 { pt3dadd( 4.63758, 32.2914, 0.054042, 0.74 ) }
    dend_47 { pt3dadd( 6.11715, 32.9341, -0.261257, 0.66 ) }
    dend_47 { pt3dadd( 7.83604, 33.7017, -0.586005, 0.66 ) }
    dend_47 { pt3dadd( 9.086, 34.2607, -0.71883, 0.66 ) }
    dend_47 { pt3dadd( 10.7852, 35.021, -0.869266, 0.66 ) }
    dend_47 { pt3dadd( 10.8611, 35.0548, -0.872759, 0.66 ) }
    dend_47 { pt3dadd( 13.0441, 35.9915, -0.940304, 0.66 ) }
    dend_47 { pt3dadd( 13.1102, 36.018, -0.94077, 0.66 ) }
    dend_47 { pt3dadd( 14.5187, 36.4976, -0.91482, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_47 { pt3dadd( 15.104, 36.6366, -0.879344, 1.25 ) }
    dend_47 { pt3dadd( 16.388, 36.9007, -0.620371, 1.47 ) }
    dend_47 { pt3dadd( 17.3621, 37.1766, -0.321037, 1.11 ) }
    dend_47 { pt3dadd( 17.4241, 37.1992, -0.294369, 1.11 ) }
    dend_47 { pt3dadd( 18.4191, 37.6958, 0.22926, 0.52 ) }
    dend_47 { pt3dadd( 19.9363, 38.468, 1.13064, 0.52 ) }
    dend_47 { pt3dadd( 21.7412, 39.3149, 2.33525, 0.52 ) }
    dend_47 { pt3dadd( 23.0887, 39.9077, 3.30998, 0.52 ) }
    dend_47 { pt3dadd( 23.1909, 39.9481, 3.3867, 0.52 ) }
    dend_47 { pt3dadd( 24.2658, 40.3532, 4.2003, 0.52 ) }
    dend_47 { pt3dadd( 26.3251, 41.0674, 5.75891, 0.52 ) }
    dend_47 { pt3dadd( 28.1015, 41.5964, 6.99101, 0.52 ) }
    dend_47 { pt3dadd( 28.1795, 41.6139, 7.04137, 0.52 ) }
    dend_47 { pt3dadd( 28.8362, 41.7252, 7.50383, 0.74 ) }
    dend_47 { pt3dadd( 29.2944, 41.8168, 7.84842, 0.74 ) }
    dend_47 { pt3dadd( 30.131, 41.9854, 8.51338, 0.74 ) }
    dend_47 { pt3dadd( 30.2201, 42.0106, 8.58488, 0.74 ) }
    dend_47 { pt3dadd( 31.8186, 42.3367, 9.55955, 0.74 ) }
    dend_47 { pt3dadd( 32.0454, 42.3678, 9.68166, 0.74 ) }
    dend_47 { pt3dadd( 32.9362, 42.4498, 10.0968, 0.37 ) }
    dend_47 { pt3dadd( 34.0967, 42.5616, 10.6396, 0.29 ) }
    dend_47 { pt3dadd( 34.8911, 42.6485, 10.9988, 0.29 ) }
    dend_47 { pt3dadd( 35.9247, 42.8006, 11.4301, 0.74 ) }
    dend_47 { pt3dadd( 36.1752, 42.8434, 11.5184, 0.74 ) }
    dend_47 { pt3dadd( 37.0106, 43.0387, 11.9191, 0.74 ) }
    dend_47 { pt3dadd( 38.2319, 43.4123, 12.6687, 1.03 ) }
    dend_47 { pt3dadd( 38.3049, 43.4381, 12.7233, 1.03 ) }
    dend_47 { pt3dadd( 38.8872, 43.6359, 13.2297, 1.47 ) }
    dend_47 { pt3dadd( 39.6977, 43.8295, 13.9978, 0.96 ) }
    dend_47 { pt3dadd( 40.8113, 43.9522, 15.0176, 0.52 ) }
    dend_47 { pt3dadd( 40.8744, 43.9498, 15.0705, 0.52 ) }
    dend_47 { pt3dadd( 41.4271, 43.8989, 15.458, 0.37 ) }
    dend_47 { pt3dadd( 41.5239, 43.8932, 15.5228, 0.37 ) }
    dend_47 { pt3dadd( 42.3357, 43.9586, 15.9852, 0.37 ) }
    dend_47 { pt3dadd( 42.4089, 43.9801, 16.0174, 0.37 ) }
    dend_47 { pt3dadd( 43.1371, 44.2898, 16.2577, 0.37 ) }
    dend_47 { pt3dadd( 43.7704, 44.62, 16.4471, 0.37 ) }
    dend_47 { pt3dadd( 43.9263, 44.713, 16.4915, 0.37 ) }
    dend_47 { pt3dadd( 45.2115, 45.4962, 16.8301, 0.37 ) }
    dend_47 { pt3dadd( 45.6059, 45.7456, 16.9302, 0.59 ) }
    dend_47 { pt3dadd( 46.4028, 46.2383, 17.1905, 0.59 ) }
    dend_47 { pt3dadd( 47.4566, 46.8896, 17.5901, 0.37 ) }
    dend_47 { pt3dadd( 48.5378, 47.5496, 18.0429, 0.37 ) }
    dend_47 { pt3dadd( 49.5417, 48.173, 18.5243, 1.18 ) }
    dend_47 { pt3dadd( 50.5012, 48.7747, 19.0461, 1.47 ) }
    dend_47 { pt3dadd( 51.8398, 49.6115, 19.8456, 0.81 ) }
    dend_47 { pt3dadd( 52.4375, 49.9773, 20.2375, 0.29 ) }
    dend_47 { pt3dadd( 53.0914, 50.3644, 20.7109, 0.22 ) }
    dend_47 { pt3dadd( 53.6012, 50.6557, 21.0927, 0.81 ) }
    dend_47 { pt3dadd( 53.8008, 50.7515, 21.2313, 0.81 ) }
    dend_47 { pt3dadd( 54.4687, 51.0396, 21.6809, 0.96 ) }
    dend_47 { pt3dadd( 55.419, 51.4038, 22.2544, 0.96 ) }
    dend_47 { pt3dadd( 55.5218, 51.4393, 22.3177, 0.96 ) }
    dend_47 { pt3dadd( 55.9722, 51.5754, 22.6021, 0.44 ) }
    dend_47 { pt3dadd( 57.2894, 51.8838, 23.4005, 0.44 ) }
    dend_47 { pt3dadd( 58.7157, 52.0882, 24.4576, 0.37 ) }
    dend_47 { pt3dadd( 59.1846, 52.1157, 24.8594, 0.88 ) }
    dend_47 { pt3dadd( 59.7959, 52.1124, 25.4049, 1.18 ) }
    dend_47 { pt3dadd( 60.7084, 52.0514, 26.2113, 0.74 ) }
    dend_47 { pt3dadd( 61.7534, 51.9576, 27.1583, 0.44 ) }
    dend_47 { pt3dadd( 63.8065, 51.8369, 29.0214, 0.44 ) }
    dend_47 { pt3dadd( 64.6936, 51.8226, 29.8326, 0.44 ) }
    dend_47 { pt3dadd( 65.4181, 51.8932, 30.5168, 1.03 ) }
    dend_47 { pt3dadd( 66.2418, 52.0439, 31.3128, 1.69 ) }
    dend_47 { pt3dadd( 67.3254, 52.3818, 32.4053, 0.52 ) }
    dend_47 { pt3dadd( 68.363, 52.8268, 33.4791, 0.52 ) }
    dend_47 { pt3dadd( 69.7048, 53.5016, 34.7878, 0.44 ) }
    dend_47 { pt3dadd( 71.1858, 54.2712, 36.3128, 0.44 ) }
    dend_47 { pt3dadd( 71.231, 54.2951, 36.3624, 0.44 ) }
    dend_47 { pt3dadd( 72.5624, 54.933, 37.8089, 1.25 ) }
    dend_47 { pt3dadd( 72.6197, 54.9526, 37.8654, 1.25 ) }
    dend_47 { pt3dadd( 73.461, 55.1325, 38.6025, 1.84 ) }
    dend_47 { pt3dadd( 74.7752, 55.3367, 39.4745, 0.44 ) }
    dend_47 { pt3dadd( 74.8459, 55.3425, 39.5166, 0.44 ) }
    dend_47 { pt3dadd( 76.0046, 55.364, 40.1468, 0.29 ) }
    dend_47 { pt3dadd( 76.7439, 55.2809, 40.529, 0.52 ) }
    dend_47 { pt3dadd( 77.3992, 55.1198, 40.9706, 0.52 ) }
    dend_47 { pt3dadd( 78.2699, 54.8772, 41.6516, 0.44 ) }
    dend_47 { pt3dadd( 79.3901, 54.5413, 42.5924, 0.44 ) }
    dend_47 { pt3dadd( 79.977, 54.4054, 43.1711, 0.88 ) }
    dend_47 { pt3dadd( 80.8912, 54.2302, 44.2291, 0.81 ) }
    dend_47 { pt3dadd( 82.0776, 54.0719, 45.8125, 0.44 ) }
    dend_47 { pt3dadd( 83.0689, 53.986, 47.2568, 0.44 ) }
    dend_47 { pt3dadd( 83.1229, 53.9848, 47.334, 0.44 ) }
    dend_47 { pt3dadd( 84.2458, 54.1072, 48.7755, 0.44 ) }
    dend_47 { pt3dadd( 84.3047, 54.1186, 48.8482, 0.44 ) }
    dend_47 { pt3dadd( 85.5315, 54.4267, 50.2916, 0.44 ) }
    dend_47 { pt3dadd( 85.5941, 54.444, 50.3602, 0.44 ) }
    dend_47 { pt3dadd( 86.4719, 54.6213, 51.3297, 0.44 ) }
    dend_47 { pt3dadd( 86.5298, 54.6309, 51.3877, 0.44 ) }
    dend_47 { pt3dadd( 87.9836, 54.7461, 52.6984, 0.44 ) }
    dend_47 { pt3dadd( 88.0468, 54.7464, 52.7512, 0.44 ) }
    dend_47 { pt3dadd( 88.8477, 54.7145, 53.3451, 0.44 ) }
    dend_47 { pt3dadd( 88.9007, 54.711, 53.3917, 0.44 ) }
    dend_47 { pt3dadd( 89.0818, 54.696, 53.5763, 0.66 ) }
    dend_47 { pt3dadd( 90.0586, 54.6205, 54.5143, 0.29 ) }
    dend_47 { pt3dadd( 90.9388, 54.5111, 55.3668, 0.29 ) }
    dend_47 { pt3dadd( 91.0046, 54.5004, 55.4334, 0.29 ) }
    dend_47 { pt3dadd( 92.2572, 54.2286, 56.7909, 0.29 ) }
    dend_47 { pt3dadd( 92.3362, 54.2133, 56.8753, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_47 { pt3dadd( 93.366, 54.0627, 57.9641, 0.29 ) }
    dend_47 { pt3dadd( 103.54, 57.4512, 62.985, 0.29 ) }
    dend_47 { pt3dadd( 112.734, 61.5018, 69.2937, 0.29 ) }
    dend_47 { pt3dadd( 121.24, 63.3416, 77.2644, 0.29 ) }
    dend_47 { pt3dadd( 129.118, 62.8276, 86.0007, 0.29 ) }
    dend_47 { pt3dadd( 136.792, 61.925, 94.8859, 0.29 ) }
    dend_47 { pt3dadd( 144.531, 62.0761, 103.763, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.473385, 30.6466, 1.78064, 1.84 ) }
    dend_28 { pt3dadd( -0.362521, 31.1917, 1.81307, 1.84 ) }
    dend_28 { pt3dadd( -0.189026, 32.1922, 1.91166, 1.03 ) }
    dend_28 { pt3dadd( -0.178736, 32.2548, 1.91874, 1.03 ) }
    dend_28 { pt3dadd( -0.0862318, 32.8523, 1.98877, 1.03 ) }
    dend_28 { pt3dadd( 0.0124382, 33.778, 2.08693, 1.03 ) }
    dend_28 { pt3dadd( 0.0662052, 34.7987, 2.20339, 1.03 ) }
    dend_28 { pt3dadd( 0.0386972, 36.3626, 2.40171, 1.03 ) }
    dend_28 { pt3dadd( 0.0355692, 36.4099, 2.40822, 1.03 ) }
    dend_28 { pt3dadd( -0.0635698, 37.3913, 2.51065, 1.18 ) }
    dend_28 { pt3dadd( -0.236205, 38.6891, 2.60717, 1.18 ) }
    dend_28 { pt3dadd( -0.422559, 39.8314, 2.65867, 1.18 ) }
    dend_28 { pt3dadd( -0.654406, 41.1066, 2.62995, 1.18 ) }
    dend_28 { pt3dadd( -0.664461, 41.1613, 2.6254, 1.18 ) }
    dend_28 { pt3dadd( -0.82985, 42.143, 2.50215, 1.18 ) }
    dend_28 { pt3dadd( -0.96311, 42.9913, 2.33306, 1.18 ) }
    dend_28 { pt3dadd( -0.97066, 43.0521, 2.31642, 1.18 ) }
    dend_28 { pt3dadd( -1.07106, 43.9774, 1.99992, 0.96 ) }
    dend_28 { pt3dadd( -1.21006, 44.9547, 1.66464, 0.96 ) }
    dend_28 { pt3dadd( -1.21976, 45.0068, 1.64854, 0.96 ) }
    dend_28 { pt3dadd( -1.43733, 45.8327, 1.44153, 1.18 ) }
    dend_28 { pt3dadd( -1.64859, 46.4892, 1.2856, 1.18 ) }
    dend_28 { pt3dadd( -1.6651, 46.5401, 1.27154, 1.18 ) }
    dend_28 { pt3dadd( -2.0459, 47.5806, 1.16638, 1.18 ) }
    dend_28 { pt3dadd( -2.07397, 47.6539, 1.16637, 1.18 ) }
    dend_28 { pt3dadd( -2.46686, 48.6439, 1.24695, 1.18 ) }
    dend_28 { pt3dadd( -2.49087, 48.702, 1.25476, 1.18 ) }
    dend_28 { pt3dadd( -3.18303, 50.3028, 1.56403, 1.18 ) }
    dend_28 { pt3dadd( -4.22206, 52.6441, 2.11562, 1.18 ) }
    dend_28 { pt3dadd( -4.28589, 52.7873, 2.15657, 1.18 ) }
    dend_28 { pt3dadd( -5.05342, 54.4801, 2.72656, 1.18 ) }
    dend_28 { pt3dadd( -5.20282, 54.801, 2.85429, 1.18 ) }
    dend_28 { pt3dadd( -5.54211, 55.5068, 3.16502, 1.18 ) }
    dend_28 { pt3dadd( -5.57618, 55.5748, 3.19949, 1.18 ) }
    dend_28 { pt3dadd( -5.88184, 56.263, 3.45156, 1.18 ) }
    dend_28 { pt3dadd( -6.20993, 57.0441, 3.79013, 1.18 ) }
    dend_28 { pt3dadd( -6.22455, 57.0834, 3.8119, 1.18 ) }
    dend_28 { pt3dadd( -6.40257, 57.6637, 4.12818, 0.88 ) }
    dend_28 { pt3dadd( -6.42057, 57.7314, 4.16294, 0.88 ) }
    dend_28 { pt3dadd( -6.57776, 58.5511, 4.48652, 0.88 ) }
    dend_28 { pt3dadd( -6.58759, 58.6447, 4.51067, 0.88 ) }
    dend_28 { pt3dadd( -6.62848, 59.6797, 4.63191, 1.11 ) }
    dend_28 { pt3dadd( -6.63487, 60.4982, 4.66809, 1.11 ) }
    dend_28 { pt3dadd( -6.63419, 60.5461, 4.66634, 1.11 ) }
    dend_28 { pt3dadd( -6.60361, 62.1008, 4.52841, 1.33 ) }
    dend_28 { pt3dadd( -6.58289, 62.7122, 4.45949, 1.4 ) }
    dend_28 { pt3dadd( -6.56849, 63.3738, 4.40426, 1.18 ) }
    dend_28 { pt3dadd( -6.56865, 63.4376, 4.40053, 1.18 ) }
    dend_28 { pt3dadd( -6.60916, 64.5734, 4.38577, 1.03 ) }
    dend_28 { pt3dadd( -6.6134, 64.6291, 4.3878, 1.03 ) }
    dend_28 { pt3dadd( -6.78608, 66.1586, 4.5245, 1.03 ) }
    dend_28 { pt3dadd( -6.9541, 67.5083, 4.6551, 1.03 ) }
    dend_28 { pt3dadd( -7.10092, 68.6316, 4.76663, 1.03 ) }
    dend_28 { pt3dadd( -7.20307, 69.3386, 4.83743, 1.47 ) }
    dend_28 { pt3dadd( -7.32876, 70.248, 4.91743, 1.47 ) }
    dend_28 { pt3dadd( -7.43812, 71.1161, 4.97434, 1.47 ) }
    dend_28 { pt3dadd( -7.44363, 71.1636, 4.9761, 1.47 ) }
    dend_28 { pt3dadd( -7.52727, 72.0449, 5.03913, 1.47 ) }
    dend_28 { pt3dadd( -7.57562, 72.7379, 5.11366, 0.88 ) }
    dend_28 { pt3dadd( -7.63296, 74.1628, 5.31919, 0.66 ) }
    dend_28 { pt3dadd( -7.63944, 75.1384, 5.49511, 0.66 ) }
    dend_28 { pt3dadd( -7.63842, 75.2166, 5.51104, 0.66 ) }
    dend_28 { pt3dadd( -7.60687, 76.7155, 5.94898, 0.66 ) }
    dend_28 { pt3dadd( -7.60498, 76.7749, 5.97159, 0.66 ) }
    dend_28 { pt3dadd( -7.58957, 77.2641, 6.19351, 1.33 ) }
    dend_28 { pt3dadd( -7.58199, 77.9297, 6.55205, 1.69 ) }
    dend_28 { pt3dadd( -7.57925, 78.6431, 6.93413, 1.69 ) }
    dend_28 { pt3dadd( -7.56, 80.174, 7.62437, 1.33 ) }
    dend_28 { pt3dadd( -7.55888, 80.2272, 7.64105, 1.33 ) }
    dend_28 { pt3dadd( -7.55756, 80.6974, 7.76139, 1.18 ) }
    dend_28 { pt3dadd( -7.55708, 80.8078, 7.77926, 1.18 ) }
    dend_28 { pt3dadd( -7.54418, 81.6878, 7.83562, 1.18 ) }
    dend_28 { pt3dadd( -7.50863, 82.4525, 7.79176, 1.18 ) }
    dend_28 { pt3dadd( -7.42103, 83.5853, 7.60172, 0.96 ) }
    dend_28 { pt3dadd( -7.40805, 83.7063, 7.57503, 0.96 ) }
    dend_28 { pt3dadd( -7.28915, 84.5422, 7.35975, 0.96 ) }
    dend_28 { pt3dadd( -7.28136, 84.5952, 7.34484, 0.96 ) }
    dend_28 { pt3dadd( -7.11424, 85.6541, 7.02013, 0.96 ) }
    dend_28 { pt3dadd( -7.1085, 85.6996, 7.00684, 0.96 ) }
    dend_28 { pt3dadd( -6.99546, 86.7455, 6.68471, 0.74 ) }
    dend_28 { pt3dadd( -6.9772, 87.1532, 6.5746, 1.03 ) }
    dend_28 { pt3dadd( -7.02508, 87.8875, 6.44735, 1.03 ) }
    dend_28 { pt3dadd( -7.03191, 87.9347, 6.44428, 1.03 ) }
    dend_28 { pt3dadd( -7.16629, 88.6497, 6.45115, 1.03 ) }
    dend_28 { pt3dadd( -7.17688, 88.7043, 6.45442, 1.03 ) }
    dend_28 { pt3dadd( -7.36228, 89.6436, 6.55096, 0.81 ) }
    dend_28 { pt3dadd( -7.55851, 90.7178, 6.67576, 0.81 ) }
    dend_28 { pt3dadd( -7.90524, 92.8065, 6.95568, 0.81 ) }
    dend_28 { pt3dadd( -8.0079, 93.5594, 7.05406, 0.81 ) }
    dend_28 { pt3dadd( -8.06734, 94.1439, 7.12455, 1.18 ) }
    dend_28 { pt3dadd( -8.12175, 94.8437, 7.18695, 1.55 ) }
    dend_28 { pt3dadd( -8.16291, 95.68, 7.23559, 1.55 ) }
    dend_28 { pt3dadd( -8.16632, 95.8317, 7.23341, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_28 { pt3dadd( -8.1718, 96.5483, 7.17899, 1.4 ) }
    dend_28 { pt3dadd( -8.20515, 97.3309, 7.06788, 1.25 ) }
    dend_28 { pt3dadd( -8.28327, 98.4268, 6.85573, 1.11 ) }
    dend_28 { pt3dadd( -8.28768, 98.4731, 6.84508, 1.11 ) }
    dend_28 { pt3dadd( -8.40271, 99.4236, 6.60832, 0.96 ) }
    dend_28 { pt3dadd( -8.40889, 99.4695, 6.59702, 0.96 ) }
    dend_28 { pt3dadd( -8.61742, 100.812, 6.27187, 0.96 ) }
    dend_28 { pt3dadd( -8.62483, 100.865, 6.25945, 0.96 ) }
    dend_28 { pt3dadd( -8.81278, 102.501, 5.90842, 0.96 ) }
    dend_28 { pt3dadd( -8.89739, 103.418, 5.73981, 1.11 ) }
    dend_28 { pt3dadd( -8.90189, 103.481, 5.72994, 1.11 ) }
    dend_28 { pt3dadd( -8.93219, 104.034, 5.67426, 1.4 ) }
    dend_28 { pt3dadd( -8.96052, 104.914, 5.63683, 1.4 ) }
    dend_28 { pt3dadd( -8.9878, 105.687, 5.64064, 1.03 ) }
    dend_28 { pt3dadd( -9.02246, 106.919, 5.7184, 0.74 ) }
    dend_28 { pt3dadd( -9.02354, 106.967, 5.72288, 0.74 ) }
    dend_28 { pt3dadd( -9.05041, 108.098, 5.84582, 0.74 ) }
    dend_28 { pt3dadd( -9.05843, 108.503, 5.91607, 1.18 ) }
    dend_28 { pt3dadd( -9.06044, 109.316, 6.10044, 1.18 ) }
    dend_28 { pt3dadd( -9.04458, 110.111, 6.31363, 1.18 ) }
    dend_28 { pt3dadd( -9.04275, 110.166, 6.3267, 1.18 ) }
    dend_28 { pt3dadd( -9.01449, 111.201, 6.52128, 0.88 ) }
    dend_28 { pt3dadd( -8.97901, 112.473, 6.6936, 0.74 ) }
    dend_28 { pt3dadd( -8.97417, 113.47, 6.77618, 0.74 ) }
    dend_28 { pt3dadd( -8.97647, 113.518, 6.77591, 0.74 ) }
    dend_28 { pt3dadd( -9.08538, 114.648, 6.63469, 0.74 ) }
    dend_28 { pt3dadd( -9.19646, 115.543, 6.43524, 0.74 ) }
    dend_28 { pt3dadd( -9.20227, 115.588, 6.42101, 0.74 ) }
    dend_28 { pt3dadd( -9.32348, 116.49, 6.06672, 1.18 ) }
    dend_28 { pt3dadd( -9.4695, 117.589, 5.62193, 1.69 ) }
    dend_28 { pt3dadd( -9.56445, 118.356, 5.31934, 1.69 ) }
    dend_28 { pt3dadd( -9.63404, 119.014, 5.07764, 1.69 ) }
    dend_28 { pt3dadd( -9.69579, 119.871, 4.75645, 1.69 ) }
    dend_28 { pt3dadd( -9.6981, 119.931, 4.73566, 1.69 ) }
    dend_28 { pt3dadd( -9.67879, 120.23, 4.65293, 1.69 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 35/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -61.3305, 74.8138, 117.303, 0.37 ) }
    dend_26 { pt3dadd( -65.0815, 77.617, 122.322, 0.37 ) }
    dend_26 { pt3dadd( -68.307, 80.4538, 127.68, 0.37 ) }
    dend_26 { pt3dadd( -70.9822, 83.1601, 133.395, 0.37 ) }
    dend_26 { pt3dadd( -74.9279, 86.3729, 138.022, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 40/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -61.3305, 74.8138, 117.303, 0.52 ) }
    dend_25 { pt3dadd( -62.6698, 80.2565, 129.204, 0.37 ) }
    dend_25 { pt3dadd( -66.6604, 82.9026, 141.384, 0.37 ) }
    dend_25 { pt3dadd( -73.9377, 83.8977, 152.196, 0.37 ) }
    dend_25 { pt3dadd( -80.1085, 84.8723, 163.677, 0.37 ) }
    dend_25 { pt3dadd( -87.6102, 85.3345, 174.368, 0.37 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 46/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 50.2114, -23.7759, 29.3953, 0.37 ) }
    dend_22 { pt3dadd( 60.1706, -24.8524, 32.6163, 0.37 ) }
    dend_22 { pt3dadd( 69.5204, -25.7786, 37.3624, 0.37 ) }
    dend_22 { pt3dadd( 77.4178, -27.2888, 44.195, 0.37 ) }
    dend_22 { pt3dadd( 85.2877, -30.3684, 50.575, 0.37 ) }
    dend_22 { pt3dadd( 94.6275, -32.6143, 54.918, 0.37 ) }
    dend_22 { pt3dadd( 104.384, -35.7473, 57.403, 0.37 ) }
    dend_22 { pt3dadd( 114.387, -36.5578, 60.5615, 0.37 ) }
    dend_22 { pt3dadd( 124.149, -38.7359, 63.8642, 0.37 ) }
    dend_22 { pt3dadd( 133.546, -41.5049, 67.7771, 0.37 ) }
    dend_22 { pt3dadd( 143.376, -42.149, 71.4737, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 50.2114, -23.7759, 29.3953, 0.52 ) }
    dend_21 { pt3dadd( 54.5323, -29.0581, 36.1618, 0.37 ) }
    dend_21 { pt3dadd( 60.5834, -33.0831, 42.3292, 0.37 ) }
    dend_21 { pt3dadd( 65.5506, -38.666, 48.3809, 0.37 ) }
    dend_21 { pt3dadd( 71.8343, -43.8101, 53.451, 0.37 ) }
    dend_21 { pt3dadd( 77.9419, -49.2522, 58.4552, 0.37 ) }
    dend_21 { pt3dadd( 82.9652, -54.5497, 64.691, 0.37 ) }
    dend_21 { pt3dadd( 88.186, -58.9346, 71.3884, 0.37 ) }
    dend_21 { pt3dadd( 94.2132, -62.5764, 77.791, 0.37 ) }
    dend_21 { pt3dadd( 99.3239, -67.2066, 84.4254, 0.37 ) }
    dend_21 { pt3dadd( 103.394, -73.7187, 90.3147, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 29.6365, -20.3273, 16.0819, 0.74 ) }
    dend_17 { pt3dadd( 29.2363, -24.1742, 10.1559, 0.74 ) }
    dend_17 { pt3dadd( 29.1214, -25.2014, 8.83834, 0.74 ) }
    dend_17 { pt3dadd( 29.0945, -25.4154, 8.63122, 0.74 ) }
    dend_17 { pt3dadd( 28.9543, -26.461, 7.81712, 0.74 ) }
    dend_17 { pt3dadd( 28.9476, -26.5623, 7.77313, 0.74 ) }
    dend_17 { pt3dadd( 28.9251, -27.4956, 7.51893, 0.96 ) }
    dend_17 { pt3dadd( 28.98, -27.98, 7.64411, 0.96 ) }
    dend_17 { pt3dadd( 29.1971, -29.1485, 8.01684, 0.96 ) }
    dend_17 { pt3dadd( 29.2194, -29.2379, 8.0485, 0.96 ) }
    dend_17 { pt3dadd( 30.0199, -31.7562, 9.03549, 0.81 ) }
    dend_17 { pt3dadd( 30.0575, -31.8513, 9.07811, 0.81 ) }
    dend_17 { pt3dadd( 31.1644, -34.3033, 10.2466, 0.81 ) }
    dend_17 { pt3dadd( 31.5911, -35.262, 10.6921, 1.11 ) }
    dend_17 { pt3dadd( 31.6275, -35.3434, 10.7298, 1.11 ) }
    dend_17 { pt3dadd( 31.7578, -35.669, 10.871, 1.11 ) }
    dend_17 { pt3dadd( 32.4808, -37.6915, 11.7041, 0.66 ) }
    dend_17 { pt3dadd( 32.9641, -39.1526, 12.307, 0.66 ) }
    dend_17 { pt3dadd( 33.6621, -41.2576, 13.1, 0.66 ) }
    dend_17 { pt3dadd( 33.6878, -41.3321, 13.127, 0.66 ) }
    dend_17 { pt3dadd( 34.346, -43.2027, 13.7689, 0.66 ) }
    dend_17 { pt3dadd( 34.3883, -43.318, 13.8053, 0.66 ) }
    dend_17 { pt3dadd( 35.369, -45.9135, 14.5569, 0.66 ) }
    dend_17 { pt3dadd( 36.3259, -48.3216, 15.2479, 0.52 ) }
    dend_17 { pt3dadd( 36.3613, -48.409, 15.271, 0.52 ) }
    dend_17 { pt3dadd( 36.7932, -49.4829, 15.5298, 0.52 ) }
    dend_17 { pt3dadd( 37.7691, -51.949, 16.1071, 0.52 ) }
    dend_17 { pt3dadd( 38.1244, -52.9314, 16.3253, 0.81 ) }
    dend_17 { pt3dadd( 38.4938, -54.0674, 16.5524, 0.81 ) }
    dend_17 { pt3dadd( 39.1098, -56.1758, 17.0146, 0.81 ) }
    dend_17 { pt3dadd( 39.1736, -56.3985, 17.0638, 0.81 ) }
    dend_17 { pt3dadd( 39.8224, -58.7135, 17.5872, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_17 { pt3dadd( 40.03, -59.4086, 17.7354, 1.11 ) }
    dend_17 { pt3dadd( 40.2612, -60.0985, 17.8755, 1.11 ) }
    dend_17 { pt3dadd( 40.5747, -60.8943, 18.0083, 0.59 ) }
    dend_17 { pt3dadd( 41.2625, -62.5128, 18.2158, 0.59 ) }
    dend_17 { pt3dadd( 41.3068, -62.614, 18.2258, 0.59 ) }
    dend_17 { pt3dadd( 42.4552, -64.9631, 18.2936, 0.59 ) }
    dend_17 { pt3dadd( 42.5008, -65.0483, 18.2948, 0.59 ) }
    dend_17 { pt3dadd( 43.0888, -66.1035, 18.2895, 0.81 ) }
    dend_17 { pt3dadd( 43.1391, -66.1856, 18.286, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 29.6365, -20.3273, 16.0819, 0.74 ) }
    dend_16 { pt3dadd( 31.2833, -19.4777, 15.1293, 0.74 ) }
    dend_16 { pt3dadd( 31.3552, -19.4456, 15.1151, 0.74 ) }
    dend_16 { pt3dadd( 32.1392, -19.2568, 15.4147, 0.74 ) }
    dend_16 { pt3dadd( 32.287, -19.2475, 15.5127, 0.74 ) }
    dend_16 { pt3dadd( 33.0308, -19.3071, 16.143, 0.74 ) }
    dend_16 { pt3dadd( 33.125, -19.356, 16.2768, 0.74 ) }
    dend_16 { pt3dadd( 33.6963, -19.916, 17.4529, 0.74 ) }
    dend_16 { pt3dadd( 34.2863, -20.9648, 19.0558, 0.74 ) }
    dend_16 { pt3dadd( 34.5935, -21.6164, 19.9523, 0.74 ) }
    dend_16 { pt3dadd( 34.6406, -21.7224, 20.0907, 0.74 ) }
    dend_16 { pt3dadd( 35.2207, -22.8834, 21.4803, 0.74 ) }
    dend_16 { pt3dadd( 35.2487, -22.9333, 21.5375, 0.74 ) }
    dend_16 { pt3dadd( 35.9881, -24.0517, 22.6058, 0.66 ) }
    dend_16 { pt3dadd( 37.2706, -25.6117, 23.9045, 0.66 ) }
    dend_16 { pt3dadd( 37.3761, -25.7209, 23.9882, 0.66 ) }
    dend_16 { pt3dadd( 38.9322, -27.1529, 24.9366, 0.66 ) }
    dend_16 { pt3dadd( 39.0171, -27.2228, 24.9715, 0.66 ) }
    dend_16 { pt3dadd( 40.5977, -28.5015, 25.4732, 0.66 ) }
    dend_16 { pt3dadd( 40.6578, -28.5537, 25.4882, 0.66 ) }
    dend_16 { pt3dadd( 41.8312, -29.7119, 25.7227, 0.66 ) }
    dend_16 { pt3dadd( 42.5264, -30.4888, 25.8891, 1.03 ) }
    dend_16 { pt3dadd( 43.3443, -31.5966, 26.1345, 1.03 ) }
    dend_16 { pt3dadd( 43.3894, -31.6614, 26.156, 1.03 ) }
    dend_16 { pt3dadd( 44.75, -33.7193, 26.9909, 0.74 ) }
    dend_16 { pt3dadd( 45.7125, -35.212, 27.6233, 0.74 ) }
    dend_16 { pt3dadd( 46.9218, -37.0881, 28.4074, 0.74 ) }
    dend_16 { pt3dadd( 48.6183, -39.7472, 29.5333, 0.74 ) }
    dend_16 { pt3dadd( 50.0527, -41.9601, 30.5083, 0.74 ) }
    dend_16 { pt3dadd( 51.3365, -43.8829, 31.3711, 0.74 ) }
    dend_16 { pt3dadd( 51.3809, -43.9452, 31.3998, 0.74 ) }
    dend_16 { pt3dadd( 53.0713, -46.1332, 32.4794, 0.74 ) }
    dend_16 { pt3dadd( 53.1219, -46.1883, 32.5107, 0.74 ) }
    dend_16 { pt3dadd( 54.2042, -47.0916, 33.2069, 0.74 ) }
    dend_16 { pt3dadd( 54.2619, -47.1336, 33.2441, 0.74 ) }
    dend_16 { pt3dadd( 54.7375, -47.459, 33.5837, 0.52 ) }
    dend_16 { pt3dadd( 55.6177, -48.1403, 34.1939, 0.52 ) }
    dend_16 { pt3dadd( 56.821, -49.2738, 35.0628, 0.52 ) }
    dend_16 { pt3dadd( 58.4624, -51.0399, 36.1895, 0.52 ) }
    dend_16 { pt3dadd( 58.5095, -51.0973, 36.2226, 0.52 ) }
    dend_16 { pt3dadd( 60.0473, -53.12, 37.316, 0.52 ) }
    dend_16 { pt3dadd( 61.0063, -54.5576, 38.0124, 0.52 ) }
    dend_16 { pt3dadd( 61.962, -56.2637, 38.6603, 0.52 ) }
    dend_16 { pt3dadd( 61.9965, -56.3374, 38.674, 0.52 ) }
    dend_16 { pt3dadd( 62.426, -57.409, 38.7023, 0.74 ) }
    dend_16 { pt3dadd( 69.9588, -64.8086, 43.4231, 0.74 ) }
    dend_16 { pt3dadd( 78.5139, -70.7987, 48.2133, 0.74 ) }
    dend_16 { pt3dadd( 86.9354, -76.0501, 53.9368, 0.74 ) }
    dend_16 { pt3dadd( 93.5596, -82.2878, 60.9763, 0.74 ) }
    dend_16 { pt3dadd( 99.6229, -88.3681, 68.6208, 0.74 ) }
    dend_16 { pt3dadd( 107.765, -93.2522, 75.0068, 0.74 ) }
    dend_16 { pt3dadd( 115.929, -98.5042, 81.0916, 0.74 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 61/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.50773, 105.146, 0.838877, 0.96 ) }
    dend_13 { pt3dadd( -4.27173, 104.349, 0.705726, 0.96 ) }
    dend_13 { pt3dadd( -4.1769, 103.987, 0.664622, 0.44 ) }
    dend_13 { pt3dadd( -3.85856, 102.681, 0.559041, 0.44 ) }
    dend_13 { pt3dadd( -3.63625, 101.769, 0.485311, 0.44 ) }
    dend_13 { pt3dadd( -3.42269, 100.893, 0.41448, 0.66 ) }
    dend_13 { pt3dadd( -3.17541, 99.8781, 0.332463, 1.55 ) }
    dend_13 { pt3dadd( -2.9261, 98.9064, 0.256462, 1.11 ) }
    dend_13 { pt3dadd( -2.78409, 98.3174, 0.229515, 0.37 ) }
    dend_13 { pt3dadd( -0.96413, 86.9244, 0.907129, 0.37 ) }
    dend_13 { pt3dadd( -1.44527, 75.428, -0.0297152, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.50773, 105.146, 0.838877, 0.52 ) }
    dend_12 { pt3dadd( -3.22106, 105.625, -0.356148, 0.52 ) }
    dend_12 { pt3dadd( -3.0905, 105.673, -0.50081, 0.29 ) }
    dend_12 { pt3dadd( -2.80429, 105.772, -0.830944, 0.29 ) }
    dend_12 { pt3dadd( -2.22782, 105.973, -1.4959, 0.29 ) }
    dend_12 { pt3dadd( -2.14559, 106.002, -1.59075, 0.29 ) }
    dend_12 { pt3dadd( -1.48627, 106.231, -2.35126, 0.29 ) }
    dend_12 { pt3dadd( -0.335003, 106.629, -3.27759, 0.29 ) }
    dend_12 { pt3dadd( -0.234071, 106.664, -3.36371, 0.29 ) }
    dend_12 { pt3dadd( 9.05613, 110.418, -10.2069, 0.29 ) }
    dend_12 { pt3dadd( 19.2853, 112.257, -16.367, 0.29 ) }
    dend_12 { pt3dadd( 28.3023, 112.964, -24.3578, 0.29 ) }
    dend_12 { pt3dadd( 37.5437, 111.817, -32.0213, 0.29 ) }
    dend_12 { pt3dadd( 45.1637, 112.738, -41.3428, 0.29 ) }
    dend_12 { pt3dadd( 52.8638, 115.421, -50.2984, 0.29 ) }
    dend_12 { pt3dadd( 60.8069, 118.092, -59.0409, 0.29 ) }
    dend_12 { pt3dadd( 70.4827, 119.614, -66.1087, 0.29 ) }
    dend_12 { pt3dadd( 81.3722, 120.806, -71.1749, 0.29 ) }
    dend_12 { pt3dadd( 92.5703, 123.884, -74.5676, 0.29 ) }
    dend_12 { pt3dadd( 102.847, 129.48, -77.9692, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 40.4104, 76.8294, 2.70605, 1.33 ) }
    dend_8 { pt3dadd( 40.509, 78.0255, 3.0936, 1.33 ) }
    dend_8 { pt3dadd( 40.6042, 78.8142, 3.31642, 1.33 ) }
    dend_8 { pt3dadd( 40.6891, 79.4254, 3.43083, 1.03 ) }
    dend_8 { pt3dadd( 40.7678, 79.9778, 3.50466, 1.03 ) }
    dend_8 { pt3dadd( 40.9504, 81.2131, 3.63514, 0.59 ) }
    dend_8 { pt3dadd( 41.0799, 81.954, 3.69612, 0.59 ) }
    dend_8 { pt3dadd( 41.1868, 82.4409, 3.69077, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 41.4489, 83.2938, 3.64892, 0.59 ) }
    dend_8 { pt3dadd( 41.6823, 83.8547, 3.54263, 0.44 ) }
    dend_8 { pt3dadd( 41.711, 83.9101, 3.52426, 0.44 ) }
    dend_8 { pt3dadd( 42.2093, 84.7294, 3.14028, 0.44 ) }
    dend_8 { pt3dadd( 42.329, 84.913, 3.04184, 0.44 ) }
    dend_8 { pt3dadd( 42.7091, 85.5016, 2.74791, 0.44 ) }
    dend_8 { pt3dadd( 43.4504, 86.7471, 2.10416, 0.44 ) }
    dend_8 { pt3dadd( 43.4808, 86.8066, 2.07263, 0.44 ) }
    dend_8 { pt3dadd( 43.6835, 87.3836, 1.72312, 0.44 ) }
    dend_8 { pt3dadd( 43.711, 87.5092, 1.64744, 0.44 ) }
    dend_8 { pt3dadd( 43.8345, 88.3995, 1.14843, 0.44 ) }
    dend_8 { pt3dadd( 43.9117, 89.3903, 0.651577, 0.74 ) }
    dend_8 { pt3dadd( 43.9427, 89.8935, 0.425961, 0.96 ) }
    dend_8 { pt3dadd( 44.0951, 91.7352, -0.436796, 1.03 ) }
    dend_8 { pt3dadd( 44.1728, 92.469, -0.790667, 1.03 ) }
    dend_8 { pt3dadd( 44.2617, 93.127, -1.11247, 0.37 ) }
    dend_8 { pt3dadd( 44.3345, 93.5591, -1.32615, 0.37 ) }
    dend_8 { pt3dadd( 44.3593, 93.6864, -1.37814, 0.37 ) }
    dend_8 { pt3dadd( 44.4553, 94.1981, -1.55853, 0.37 ) }
    dend_8 { pt3dadd( 44.5569, 94.7613, -1.66736, 0.37 ) }
    dend_8 { pt3dadd( 44.6506, 95.6492, -1.8328, 0.37 ) }
    dend_8 { pt3dadd( 44.6519, 95.7484, -1.84655, 0.37 ) }
    dend_8 { pt3dadd( 44.597, 96.1967, -1.961, 0.88 ) }
    dend_8 { pt3dadd( 44.4608, 96.8291, -2.1581, 0.88 ) }
    dend_8 { pt3dadd( 44.4444, 96.8892, -2.17781, 0.88 ) }
    dend_8 { pt3dadd( 44.2948, 97.3998, -2.35685, 0.88 ) }
    dend_8 { pt3dadd( 44.2778, 97.4672, -2.38365, 0.88 ) }
    dend_8 { pt3dadd( 44.0287, 98.7656, -2.99696, 0.66 ) }
    dend_8 { pt3dadd( 44.0147, 98.9453, -3.093, 0.44 ) }
    dend_8 { pt3dadd( 44.0274, 99.4867, -3.40945, 0.44 ) }
    dend_8 { pt3dadd( 44.0379, 99.5945, -3.49504, 0.44 ) }
    dend_8 { pt3dadd( 44.1444, 100.087, -3.93324, 1.18 ) }
    dend_8 { pt3dadd( 44.1656, 100.157, -3.99743, 1.18 ) }
    dend_8 { pt3dadd( 44.3456, 100.607, -4.38089, 1.18 ) }
    dend_8 { pt3dadd( 44.3648, 100.655, -4.41855, 1.18 ) }
    dend_8 { pt3dadd( 44.8965, 102.28, -5.36695, 0.59 ) }
    dend_8 { pt3dadd( 44.9929, 102.868, -5.68614, 0.59 ) }
    dend_8 { pt3dadd( 44.9953, 102.926, -5.7144, 0.59 ) }
    dend_8 { pt3dadd( 44.9475, 103.524, -5.97369, 0.59 ) }
    dend_8 { pt3dadd( 44.827, 104.227, -6.24591, 1.25 ) }
    dend_8 { pt3dadd( 44.569, 105.387, -6.58963, 1.55 ) }
    dend_8 { pt3dadd( 43.9578, 107.641, -7.057, 0.74 ) }
    dend_8 { pt3dadd( 43.7985, 108.152, -7.16029, 0.59 ) }
    dend_8 { pt3dadd( 43.5539, 108.897, -7.30751, 0.59 ) }
    dend_8 { pt3dadd( 43.5063, 109.03, -7.34623, 0.59 ) }
    dend_8 { pt3dadd( 43.1992, 109.88, -7.66436, 0.59 ) }
    dend_8 { pt3dadd( 42.8741, 110.815, -8.04961, 0.96 ) }
    dend_8 { pt3dadd( 42.6901, 111.445, -8.31679, 0.96 ) }
    dend_8 { pt3dadd( 42.6755, 111.501, -8.34604, 0.96 ) }
    dend_8 { pt3dadd( 42.3267, 113.052, -9.34896, 0.81 ) }
    dend_8 { pt3dadd( 42.1909, 113.816, -9.89636, 0.59 ) }
    dend_8 { pt3dadd( 42.1821, 113.882, -9.94933, 0.59 ) }
    dend_8 { pt3dadd( 42.0833, 114.912, -10.8339, 0.44 ) }
    dend_8 { pt3dadd( 42.0792, 114.969, -10.8801, 0.44 ) }
    dend_8 { pt3dadd( 42.0379, 115.845, -11.4737, 0.37 ) }
    dend_8 { pt3dadd( 42.0459, 116.684, -11.8734, 0.37 ) }
    dend_8 { pt3dadd( 42.0488, 116.744, -11.8985, 0.37 ) }
    dend_8 { pt3dadd( 42.1392, 117.605, -12.1689, 0.96 ) }
    dend_8 { pt3dadd( 42.2849, 118.511, -12.3399, 1.18 ) }
    dend_8 { pt3dadd( 42.4017, 118.977, -12.3983, 1.18 ) }
    dend_8 { pt3dadd( 42.5933, 119.538, -12.4149, 0.59 ) }
    dend_8 { pt3dadd( 42.6854, 119.721, -12.433, 0.59 ) }
    dend_8 { pt3dadd( 43.096, 120.374, -12.5205, 0.59 ) }
    dend_8 { pt3dadd( 43.14, 120.433, -12.5304, 0.59 ) }
    dend_8 { pt3dadd( 43.7603, 121.235, -12.7411, 0.59 ) }
    dend_8 { pt3dadd( 43.8786, 121.393, -12.7893, 0.59 ) }
    dend_8 { pt3dadd( 44.8381, 122.811, -13.3927, 0.59 ) }
    dend_8 { pt3dadd( 44.9043, 122.92, -13.4463, 0.59 ) }
    dend_8 { pt3dadd( 45.2001, 123.455, -13.7344, 0.96 ) }
    dend_8 { pt3dadd( 45.5517, 124.137, -14.1202, 1.18 ) }
    dend_8 { pt3dadd( 45.7782, 124.595, -14.3835, 1.18 ) }
    dend_8 { pt3dadd( 46.3609, 125.715, -15.0189, 0.44 ) }
    dend_8 { pt3dadd( 46.3883, 125.767, -15.0459, 0.44 ) }
    dend_8 { pt3dadd( 46.693, 126.357, -15.3422, 0.44 ) }
    dend_8 { pt3dadd( 46.7197, 126.411, -15.3652, 0.44 ) }
    dend_8 { pt3dadd( 47.1648, 127.333, -15.6767, 0.44 ) }
    dend_8 { pt3dadd( 47.2684, 127.579, -15.7244, 1.33 ) }
    dend_8 { pt3dadd( 47.4384, 128.044, -15.758, 1.33 ) }
    dend_8 { pt3dadd( 47.7291, 129.0, -15.8584, 0.52 ) }
    dend_8 { pt3dadd( 47.926, 129.847, -15.9505, 0.52 ) }
    dend_8 { pt3dadd( 47.9518, 129.992, -15.9649, 0.52 ) }
    dend_8 { pt3dadd( 48.1679, 131.764, -16.1264, 0.52 ) }
    dend_8 { pt3dadd( 48.2562, 132.789, -16.2073, 0.52 ) }
    dend_8 { pt3dadd( 48.3328, 133.934, -16.2742, 1.25 ) }
    dend_8 { pt3dadd( 48.3818, 134.839, -16.3004, 1.62 ) }
    dend_8 { pt3dadd( 48.4148, 135.413, -16.2903, 1.62 ) }
    dend_8 { pt3dadd( 48.4763, 136.338, -16.2344, 0.59 ) }
    dend_8 { pt3dadd( 48.5249, 136.97, -16.1571, 0.44 ) }
    dend_8 { pt3dadd( 48.6301, 137.809, -15.984, 0.44 ) }
    dend_8 { pt3dadd( 48.6817, 138.098, -15.9029, 0.44 ) }
    dend_8 { pt3dadd( 49.0244, 139.752, -15.4254, 0.44 ) }
    dend_8 { pt3dadd( 49.0444, 139.839, -15.3994, 0.44 ) }
    dend_8 { pt3dadd( 49.283, 140.884, -15.1317, 1.03 ) }
    dend_8 { pt3dadd( 49.4632, 141.702, -14.9593, 1.62 ) }
    dend_8 { pt3dadd( 49.5841, 142.439, -14.8498, 1.62 ) }
    dend_8 { pt3dadd( 49.6777, 143.189, -14.7865, 0.88 ) }
    dend_8 { pt3dadd( 49.6823, 143.255, -14.7874, 0.88 ) }
    dend_8 { pt3dadd( 49.7529, 144.645, -14.832, 0.66 ) }
    dend_8 { pt3dadd( 49.7534, 144.719, -14.842, 0.66 ) }
    dend_8 { pt3dadd( 49.7099, 146.062, -15.1204, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_8 { pt3dadd( 49.7007, 146.199, -15.153, 0.59 ) }
    dend_8 { pt3dadd( 49.6228, 147.19, -15.3871, 0.96 ) }
    dend_8 { pt3dadd( 49.5512, 147.997, -15.5694, 0.96 ) }
    dend_8 { pt3dadd( 49.438, 149.414, -15.8889, 0.59 ) }
    dend_8 { pt3dadd( 49.4355, 149.478, -15.9041, 0.59 ) }
    dend_8 { pt3dadd( 49.4506, 150.071, -16.0528, 0.52 ) }
    dend_8 { pt3dadd( 49.5313, 150.806, -16.2278, 0.52 ) }
    dend_8 { pt3dadd( 49.5808, 151.088, -16.2849, 0.52 ) }
    dend_8 { pt3dadd( 49.793, 152.057, -16.4445, 0.81 ) }
    dend_8 { pt3dadd( 49.9699, 152.805, -16.5142, 1.33 ) }
    dend_8 { pt3dadd( 50.1271, 153.492, -16.5781, 1.33 ) }
    dend_8 { pt3dadd( 50.3433, 154.513, -16.6693, 0.44 ) }
    dend_8 { pt3dadd( 50.4281, 155.07, -16.7087, 0.44 ) }
    dend_8 { pt3dadd( 50.4323, 155.136, -16.7094, 0.44 ) }
    dend_8 { pt3dadd( 50.4249, 155.762, -16.701, 0.44 ) }
    dend_8 { pt3dadd( 50.4201, 155.894, -16.699, 0.44 ) }
    dend_8 { pt3dadd( 50.3946, 156.483, -16.6864, 0.44 ) }
    dend_8 { pt3dadd( 50.4091, 156.86, -16.6747, 0.44 ) }
    dend_8 { pt3dadd( 50.554, 157.822, -16.6787, 0.44 ) }
    dend_8 { pt3dadd( 50.7413, 158.562, -16.7438, 0.74 ) }
    dend_8 { pt3dadd( 50.9236, 159.077, -16.8316, 0.96 ) }
    dend_8 { pt3dadd( 50.9513, 159.145, -16.8466, 0.96 ) }
    dend_8 { pt3dadd( 51.2614, 159.786, -17.0212, 0.96 ) }
    dend_8 { pt3dadd( 51.3212, 159.908, -17.0546, 0.96 ) }
    dend_8 { pt3dadd( 51.7164, 160.751, -17.2619, 0.44 ) }
    dend_8 { pt3dadd( 51.7417, 160.81, -17.2714, 0.44 ) }
    dend_8 { pt3dadd( 52.0185, 161.541, -17.3515, 0.37 ) }
    dend_8 { pt3dadd( 52.176, 161.956, -17.3765, 0.96 ) }
    dend_8 { pt3dadd( 52.5085, 162.839, -17.3935, 1.03 ) }
    dend_8 { pt3dadd( 52.8562, 163.638, -17.3814, 0.74 ) }
    dend_8 { pt3dadd( 53.0964, 164.132, -17.3523, 0.52 ) }
    dend_8 { pt3dadd( 53.4814, 164.814, -17.3125, 0.44 ) }
    dend_8 { pt3dadd( 53.9655, 165.541, -17.2712, 0.44 ) }
    dend_8 { pt3dadd( 54.0867, 165.688, -17.272, 0.44 ) }
    dend_8 { pt3dadd( 54.7762, 166.324, -17.3363, 0.44 ) }
    dend_8 { pt3dadd( 54.8283, 166.371, -17.3573, 0.44 ) }
    dend_8 { pt3dadd( 55.219, 166.784, -17.6449, 0.44 ) }
    dend_8 { pt3dadd( 55.2503, 166.829, -17.6782, 0.44 ) }
    dend_8 { pt3dadd( 55.5797, 167.685, -18.2558, 0.44 ) }
    dend_8 { pt3dadd( 55.589, 167.741, -18.287, 0.44 ) }
    dend_8 { pt3dadd( 55.6732, 169.523, -19.249, 1.11 ) }
    dend_8 { pt3dadd( 55.6935, 170.152, -19.5727, 1.55 ) }
    dend_8 { pt3dadd( 55.6972, 170.95, -19.9541, 1.55 ) }
    dend_8 { pt3dadd( 55.7091, 172.073, -20.4521, 0.66 ) }
    dend_8 { pt3dadd( 55.716, 173.414, -20.9951, 0.66 ) }
    dend_8 { pt3dadd( 55.7666, 174.56, -21.4298, 0.44 ) }
    dend_8 { pt3dadd( 55.8776, 175.561, -21.759, 0.44 ) }
    dend_8 { pt3dadd( 55.936, 175.902, -21.8968, 0.44 ) }
    dend_8 { pt3dadd( 56.1613, 176.566, -22.2085, 0.44 ) }
    dend_8 { pt3dadd( 56.1908, 176.618, -22.2343, 0.44 ) }
    dend_8 { pt3dadd( 56.3932, 176.88, -22.3917, 0.88 ) }
    dend_8 { pt3dadd( 56.6651, 177.22, -22.5943, 0.88 ) }
    dend_8 { pt3dadd( 57.2618, 178.021, -23.1894, 0.37 ) }
    dend_8 { pt3dadd( 57.8646, 178.886, -23.8546, 0.37 ) }
    dend_8 { pt3dadd( 57.8974, 178.939, -23.8933, 0.37 ) }
    dend_8 { pt3dadd( 58.4023, 179.822, -24.4894, 1.18 ) }
    dend_8 { pt3dadd( 58.7035, 180.391, -24.8472, 1.55 ) }
    dend_8 { pt3dadd( 59.1425, 181.297, -25.3427, 0.52 ) }
    dend_8 { pt3dadd( 59.4413, 181.971, -25.63, 0.52 ) }
    dend_8 { pt3dadd( 59.6941, 182.613, -25.8688, 0.52 ) }
    dend_8 { pt3dadd( 59.7514, 182.757, -25.9042, 1.03 ) }
    dend_8 { pt3dadd( 59.8345, 182.955, -25.9289, 1.03 ) }
    dend_8 { pt3dadd( 60.0606, 183.476, -25.922, 0.52 ) }
    dend_8 { pt3dadd( 60.2252, 183.858, -25.8679, 0.37 ) }
    dend_8 { pt3dadd( 60.4801, 184.453, -25.7609, 0.29 ) }
    dend_8 { pt3dadd( 60.9389, 185.511, -25.5426, 0.29 ) }
    dend_8 { pt3dadd( 61.1243, 185.965, -25.4418, 0.88 ) }
    dend_8 { pt3dadd( 61.5209, 187.015, -25.2388, 0.88 ) }
    dend_8 { pt3dadd( 61.7058, 187.55, -25.1465, 0.52 ) }
    dend_8 { pt3dadd( 61.8577, 188.084, -25.1014, 0.37 ) }
    dend_8 { pt3dadd( 61.8794, 188.175, -25.1033, 0.37 ) }
    dend_8 { pt3dadd( 62.1308, 189.322, -25.2543, 0.37 ) }
    dend_8 { pt3dadd( 62.32, 190.221, -25.4469, 1.11 ) }
    dend_8 { pt3dadd( 62.4539, 190.861, -25.6422, 1.11 ) }
    dend_8 { pt3dadd( 62.7171, 192.053, -26.0492, 0.37 ) }
    dend_8 { pt3dadd( 62.8525, 192.594, -26.2503, 0.15 ) }
    dend_8 { pt3dadd( 63.0447, 193.217, -26.4927, 0.15 ) }
    dend_8 { pt3dadd( 63.0679, 193.273, -26.5172, 0.15 ) }
    dend_8 { pt3dadd( 63.3581, 193.739, -26.7029, 0.15 ) }
    dend_8 { pt3dadd( 63.4174, 193.804, -26.726, 0.15 ) }
    dend_8 { pt3dadd( 63.7745, 194.081, -26.7701, 0.15 ) }
    dend_8 { pt3dadd( 64.1435, 194.31, -26.7921, 0.74 ) }
    dend_8 { pt3dadd( 64.3068, 194.4, -26.7959, 0.74 ) }
    dend_8 { pt3dadd( 65.0017, 194.768, -26.8014, 0.74 ) }
    dend_8 { pt3dadd( 65.3481, 194.941, -26.7991, 0.74 ) }
    dend_8 { pt3dadd( 65.8437, 195.219, -26.786, 0.22 ) }
    dend_8 { pt3dadd( 66.1336, 195.401, -26.7734, 0.15 ) }
    dend_8 { pt3dadd( 66.6253, 195.771, -26.8169, 0.15 ) }
    dend_8 { pt3dadd( 66.679, 195.819, -26.8289, 0.15 ) }
    dend_8 { pt3dadd( 66.8358, 195.987, -26.8892, 0.81 ) }
    dend_8 { pt3dadd( 67.3143, 196.484, -27.1215, 1.03 ) }
    dend_8 { pt3dadd( 67.6599, 196.828, -27.3455, 1.03 ) }
    dend_8 { pt3dadd( 68.4649, 197.594, -27.9044, 0.37 ) }
    dend_8 { pt3dadd( 68.7128, 197.837, -28.0895, 0.37 ) }
    dend_8 { pt3dadd( 68.7555, 197.883, -28.1264, 0.37 ) }
    dend_8 { pt3dadd( 69.3682, 198.601, -28.712, 0.37 ) }
    dend_8 { pt3dadd( 70.012, 199.454, -29.4648, 0.37 ) }
    dend_8 { pt3dadd( 70.2826, 199.847, -29.805, 0.74 ) }
    dend_8 { pt3dadd( 70.6238, 200.368, -30.2347, 1.33 ) }
    dend_8 { pt3dadd( 71.1904, 201.232, -30.9726, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( 71.2182, 201.274, -31.0115, 0.66 ) }
    dend_8 { pt3dadd( 71.7962, 202.17, -31.8522, 0.37 ) }
    dend_8 { pt3dadd( 72.0558, 202.547, -32.1927, 0.37 ) }
    dend_8 { pt3dadd( 72.0921, 202.593, -32.2362, 0.37 ) }
    dend_8 { pt3dadd( 72.6221, 203.153, -32.7723, 0.37 ) }
    dend_8 { pt3dadd( 73.2832, 203.788, -33.3078, 0.74 ) }
    dend_8 { pt3dadd( 73.7603, 204.279, -33.6452, 0.74 ) }
    dend_8 { pt3dadd( 74.098, 204.654, -33.8237, 0.07 ) }
    dend_8 { pt3dadd( 74.2392, 204.873, -33.8889, 0.37 ) }
    dend_8 { pt3dadd( 74.2676, 204.931, -33.8982, 0.37 ) }
    dend_8 { pt3dadd( 74.4347, 205.395, -33.9047, 0.37 ) }
    dend_8 { pt3dadd( 74.6176, 205.91, -33.8484, 0.37 ) }
    dend_8 { pt3dadd( 74.6427, 205.971, -33.8419, 0.37 ) }
    dend_8 { pt3dadd( 75.1273, 206.965, -33.7469, 0.37 ) }
    dend_8 { pt3dadd( 75.1598, 207.033, -33.7487, 0.37 ) }
    dend_8 { pt3dadd( 75.3803, 207.468, -33.8078, 1.03 ) }
    dend_8 { pt3dadd( 75.4268, 207.552, -33.8298, 1.03 ) }
    dend_8 { pt3dadd( 75.8566, 208.253, -34.0965, 1.03 ) }
    dend_8 { pt3dadd( 75.8848, 208.296, -34.1171, 1.03 ) }
    dend_8 { pt3dadd( 76.4655, 209.132, -34.6457, 0.44 ) }
    dend_8 { pt3dadd( 76.5086, 209.203, -34.685, 0.44 ) }
    dend_8 { pt3dadd( 76.6962, 209.549, -34.865, 0.44 ) }
    dend_8 { pt3dadd( 76.8274, 209.844, -34.9783, 0.44 ) }
    dend_8 { pt3dadd( 76.9117, 210.071, -35.0384, 0.44 ) }
    dend_8 { pt3dadd( 76.9367, 210.14, -35.0552, 0.44 ) }
    dend_8 { pt3dadd( 77.2066, 210.829, -35.1855, 0.44 ) }
    dend_8 { pt3dadd( 77.2267, 210.89, -35.1977, 0.44 ) }
    dend_8 { pt3dadd( 77.4018, 211.477, -35.3033, 0.44 ) }
    dend_8 { pt3dadd( 77.4207, 211.539, -35.3124, 0.44 ) }
    dend_8 { pt3dadd( 77.7346, 212.516, -35.4367, 0.74 ) }
    dend_8 { pt3dadd( 77.9767, 213.159, -35.5088, 1.25 ) }
    dend_8 { pt3dadd( 78.3078, 213.912, -35.5503, 1.25 ) }
    dend_8 { pt3dadd( 78.4843, 214.317, -35.5444, 0.59 ) }
    dend_8 { pt3dadd( 78.8115, 215.046, -35.5165, 0.59 ) }
    dend_8 { pt3dadd( 78.8386, 215.105, -35.5111, 0.59 ) }
    dend_8 { pt3dadd( 79.1608, 215.803, -35.4049, 0.59 ) }
    dend_8 { pt3dadd( 79.4317, 216.382, -35.3174, 0.29 ) }
    dend_8 { pt3dadd( 79.671, 216.862, -35.2541, 0.29 ) }
    dend_8 { pt3dadd( 80.1438, 217.842, -35.1504, 0.29 ) }
    dend_8 { pt3dadd( 80.6601, 218.949, -35.0509, 0.29 ) }
    dend_8 { pt3dadd( 80.6873, 219.009, -35.0472, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 40.4104, 76.8294, 2.70605, 0.52 ) }
    dend_7 { pt3dadd( 40.7523, 76.9645, 2.77622, 0.52 ) }
    dend_7 { pt3dadd( 40.8731, 76.9958, 2.79274, 0.52 ) }
    dend_7 { pt3dadd( 40.9786, 77.0198, 2.80564, 0.52 ) }
    dend_7 { pt3dadd( 41.1166, 77.0406, 2.83411, 0.52 ) }
    dend_7 { pt3dadd( 41.8869, 77.1354, 3.01172, 0.52 ) }
    dend_7 { pt3dadd( 42.0082, 77.1494, 3.04084, 0.52 ) }
    dend_7 { pt3dadd( 42.8457, 77.2346, 3.2278, 0.52 ) }
    dend_7 { pt3dadd( 42.9105, 77.2429, 3.24261, 0.52 ) }
    dend_7 { pt3dadd( 43.9848, 77.4034, 3.49246, 0.52 ) }
    dend_7 { pt3dadd( 44.1056, 77.4238, 3.52082, 0.52 ) }
    dend_7 { pt3dadd( 44.2382, 77.4511, 3.55092, 0.96 ) }
    dend_7 { pt3dadd( 44.2926, 77.4655, 3.56787, 0.96 ) }
    dend_7 { pt3dadd( 44.771, 77.6165, 3.73672, 0.37 ) }
    dend_7 { pt3dadd( 44.8308, 77.6387, 3.75816, 0.37 ) }
    dend_7 { pt3dadd( 45.5461, 77.9525, 3.99953, 0.37 ) }
    dend_7 { pt3dadd( 46.1045, 78.2044, 4.21902, 0.37 ) }
    dend_7 { pt3dadd( 47.7262, 78.9438, 4.90936, 0.37 ) }
    dend_7 { pt3dadd( 47.917, 79.0279, 4.99207, 0.74 ) }
    dend_7 { pt3dadd( 48.3134, 79.1948, 5.17584, 0.59 ) }
    dend_7 { pt3dadd( 49.3117, 79.6244, 5.6645, 0.44 ) }
    dend_7 { pt3dadd( 50.2569, 80.0646, 6.15152, 0.44 ) }
    dend_7 { pt3dadd( 50.33, 80.1002, 6.18926, 0.44 ) }
    dend_7 { pt3dadd( 50.9208, 80.3957, 6.6455, 0.44 ) }
    dend_7 { pt3dadd( 51.3499, 80.5987, 7.04091, 0.81 ) }
    dend_7 { pt3dadd( 51.4338, 80.6364, 7.12724, 0.81 ) }
    dend_7 { pt3dadd( 51.8793, 80.8295, 7.63304, 0.81 ) }
    dend_7 { pt3dadd( 51.9168, 80.8455, 7.67549, 0.81 ) }
    dend_7 { pt3dadd( 53.7117, 81.7299, 9.81117, 0.37 ) }
    dend_7 { pt3dadd( 54.5024, 82.1749, 10.82, 0.37 ) }
    dend_7 { pt3dadd( 54.5852, 82.2246, 10.9258, 0.37 ) }
    dend_7 { pt3dadd( 54.9404, 82.4459, 11.3837, 0.88 ) }
    dend_7 { pt3dadd( 55.0703, 82.5407, 11.5682, 1.18 ) }
    dend_7 { pt3dadd( 55.5684, 83.0293, 12.3101, 0.44 ) }
    dend_7 { pt3dadd( 55.6033, 83.0898, 12.3685, 0.44 ) }
    dend_7 { pt3dadd( 55.6234, 83.1548, 12.4376, 0.44 ) }
    dend_7 { pt3dadd( 55.6989, 83.5092, 12.8133, 0.44 ) }
    dend_7 { pt3dadd( 55.7514, 84.1684, 13.4967, 0.59 ) }
    dend_7 { pt3dadd( 55.7557, 84.4671, 13.8355, 0.59 ) }
    dend_7 { pt3dadd( 55.7507, 84.7102, 14.1904, 0.59 ) }
    dend_7 { pt3dadd( 62.3372, 88.2455, 18.1136, 0.59 ) }
    dend_7 { pt3dadd( 68.0115, 92.5203, 22.74, 0.59 ) }
    dend_7 { pt3dadd( 72.8404, 98.1723, 26.9725, 0.59 ) }
    dend_7 { pt3dadd( 78.2347, 103.274, 31.1522, 0.59 ) }
    dend_7 { pt3dadd( 83.0436, 109.393, 34.7712, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -78.0623, 52.7052, -134.663, 0.37 ) }
    dend_4 { pt3dadd( -76.9108, 53.1118, -135.071, 0.37 ) }
    dend_4 { pt3dadd( -76.8706, 53.1199, -135.087, 0.37 ) }
    dend_4 { pt3dadd( -76.0547, 53.2682, -135.416, 0.37 ) }
    dend_4 { pt3dadd( -75.0329, 53.4477, -135.827, 0.37 ) }
    dend_4 { pt3dadd( -74.9866, 53.4558, -135.846, 0.37 ) }
    dend_4 { pt3dadd( -72.9709, 53.8097, -136.657, 0.29 ) }
    dend_4 { pt3dadd( -68.2416, 54.6126, -138.41, 0.29 ) }
    dend_4 { pt3dadd( -67.7969, 54.6844, -138.578, 1.18 ) }
    dend_4 { pt3dadd( -67.7562, 54.6904, -138.594, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 96/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -78.0623, 52.7052, -134.663, 0.52 ) }
    dend_3 { pt3dadd( -79.176, 53.9188, -136.285, 0.52 ) }
    dend_3 { pt3dadd( -79.2245, 53.9714, -136.365, 0.52 ) }
    dend_3 { pt3dadd( -80.9131, 55.7934, -138.967, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -81.8901, 56.8468, -140.44, 0.37 ) }
    dend_3 { pt3dadd( -82.2836, 57.2736, -141.046, 0.37 ) }
    dend_3 { pt3dadd( -83.7233, 58.8517, -143.286, 0.37 ) }
    dend_3 { pt3dadd( -85.1308, 60.4366, -145.687, 0.37 ) }
    dend_3 { pt3dadd( -86.0904, 61.5327, -147.247, 0.37 ) }
    dend_3 { pt3dadd( -86.1185, 61.565, -147.29, 0.37 ) }
    dend_3 { pt3dadd( -86.9424, 62.5528, -148.697, 0.59 ) }
    dend_3 { pt3dadd( -87.2423, 62.9314, -149.264, 0.59 ) }
    dend_3 { pt3dadd( -88.4005, 64.4367, -151.527, 0.37 ) }
    dend_3 { pt3dadd( -89.1052, 65.3281, -152.837, 0.37 ) }
    dend_3 { pt3dadd( -89.1349, 65.3608, -152.892, 0.37 ) }
    dend_3 { pt3dadd( -90.3819, 66.5404, -154.9, 0.37 ) }
    dend_3 { pt3dadd( -90.4597, 66.6002, -155.014, 0.37 ) }
    dend_3 { pt3dadd( -90.9305, 66.8919, -155.674, 0.37 ) }
    dend_3 { pt3dadd( -91.0377, 66.9416, -155.796, 0.37 ) }
    dend_3 { pt3dadd( -92.0364, 67.3746, -156.872, 0.37 ) }
    dend_3 { pt3dadd( -92.1327, 67.4221, -156.976, 0.37 ) }
    dend_3 { pt3dadd( -93.9364, 68.374, -158.817, 0.37 ) }
    dend_3 { pt3dadd( -94.0444, 68.4456, -158.941, 0.37 ) }
    dend_3 { pt3dadd( -94.9534, 69.1709, -160.017, 0.37 ) }
    dend_3 { pt3dadd( -95.0716, 69.2807, -160.146, 0.37 ) }
    dend_3 { pt3dadd( -96.3907, 70.6509, -161.521, 0.37 ) }
    dend_3 { pt3dadd( -96.428, 70.6933, -161.563, 0.37 ) }
    dend_3 { pt3dadd( -98.0605, 72.6526, -163.496, 0.37 ) }
    dend_3 { pt3dadd( -98.7081, 73.4738, -164.312, 0.37 ) }
    dend_3 { pt3dadd( -99.6194, 74.6894, -165.531, 0.37 ) }
    dend_3 { pt3dadd( -99.6856, 74.7797, -165.618, 0.37 ) }
    dend_3 { pt3dadd( -101.748, 77.7115, -168.194, 0.15 ) }
    dend_3 { pt3dadd( -101.78, 77.7583, -168.238, 0.15 ) }
    dend_3 { pt3dadd( -102.154, 78.4273, -168.955, 0.15 ) }
    // Section: dend_150, id: dend_150, parent: dend_148 (entry count 30/100)
    dend_150 { pt3dclear() }
    dend_150 { pt3dadd( -39.4171, -38.2309, -43.8802, 0.29 ) }
    dend_150 { pt3dadd( -39.4252, -39.5885, -45.3227, 0.29 ) }
    dend_150 { pt3dadd( -39.4369, -39.6343, -45.3955, 0.29 ) }
    dend_150 { pt3dadd( -39.8151, -40.3927, -46.7397, 0.29 ) }
    dend_150 { pt3dadd( -39.8377, -40.4332, -46.8128, 0.29 ) }
    dend_150 { pt3dadd( -40.5159, -41.7156, -48.9774, 0.29 ) }
    dend_150 { pt3dadd( -40.5456, -41.7728, -49.0717, 0.29 ) }
    dend_150 { pt3dadd( -41.8351, -44.3006, -52.6985, 0.29 ) }
    dend_150 { pt3dadd( -43.2669, -47.1621, -56.4534, 0.29 ) }
    dend_150 { pt3dadd( -43.3439, -47.3169, -56.6388, 0.29 ) }
    dend_150 { pt3dadd( -44.9429, -50.5836, -60.3164, 0.29 ) }
    dend_150 { pt3dadd( -44.965, -50.6331, -60.3682, 0.29 ) }
    dend_150 { pt3dadd( -46.8273, -55.2155, -64.9048, 0.29 ) }
    dend_150 { pt3dadd( -46.869, -55.3286, -65.0143, 0.29 ) }
    dend_150 { pt3dadd( -48.1839, -59.0757, -68.7238, 0.29 ) }
    dend_150 { pt3dadd( -48.2, -59.1247, -68.7782, 0.29 ) }
    dend_150 { pt3dadd( -49.8061, -64.2628, -75.0545, 0.29 ) }
    dend_150 { pt3dadd( -49.8335, -64.3505, -75.1722, 0.29 ) }
    dend_150 { pt3dadd( -50.5229, -66.5661, -78.4626, 0.29 ) }
    dend_150 { pt3dadd( -50.5421, -66.6226, -78.5421, 0.29 ) }
    dend_150 { pt3dadd( -52.2429, -71.3529, -84.986, 0.29 ) }
    dend_150 { pt3dadd( -52.2771, -71.4451, -85.0986, 0.29 ) }
    dend_150 { pt3dadd( -53.4432, -74.3316, -88.4926, 0.29 ) }
    dend_150 { pt3dadd( -53.9231, -75.5088, -89.7788, 0.29 ) }
    dend_150 { pt3dadd( -55.0736, -78.2762, -92.3619, 0.29 ) }
    dend_150 { pt3dadd( -55.102, -78.3404, -92.4147, 0.29 ) }
    dend_150 { pt3dadd( -56.3793, -80.7103, -93.4966, 0.29 ) }
    // Section: dend_149, id: dend_149, parent: dend_148 (entry count 57/100)
    dend_149 { pt3dclear() }
    dend_149 { pt3dadd( -39.4171, -38.2309, -43.8802, 0.29 ) }
    dend_149 { pt3dadd( -39.6141, -37.974, -44.2331, 0.29 ) }
    dend_149 { pt3dadd( -40.1235, -37.4445, -45.0281, 0.29 ) }
    dend_149 { pt3dadd( -40.7454, -36.8588, -45.9201, 0.29 ) }
    dend_149 { pt3dadd( -41.5237, -36.1575, -46.8853, 0.29 ) }
    dend_149 { pt3dadd( -41.6604, -36.0436, -47.0654, 0.29 ) }
    dend_149 { pt3dadd( -41.8467, -35.8955, -47.3123, 0.29 ) }
    dend_149 { pt3dadd( -42.6654, -35.2732, -48.4228, 0.29 ) }
    dend_149 { pt3dadd( -42.7935, -35.1909, -48.6095, 0.29 ) }
    dend_149 { pt3dadd( -43.3192, -34.8927, -49.3629, 0.29 ) }
    dend_149 { pt3dadd( -44.57, -34.2175, -51.2101, 0.29 ) }
    dend_149 { pt3dadd( -44.6742, -34.1588, -51.3898, 0.29 ) }
    dend_149 { pt3dadd( -44.8008, -34.0824, -51.6237, 0.29 ) }
    dend_149 { pt3dadd( -45.6181, -33.5729, -53.5887, 0.29 ) }
    dend_149 { pt3dadd( -46.1133, -33.2606, -54.9663, 0.44 ) }
    dend_149 { pt3dadd( -46.133, -33.248, -55.0263, 0.44 ) }
    dend_149 { pt3dadd( -46.6405, -32.8995, -56.6011, 0.29 ) }
    dend_149 { pt3dadd( -46.9052, -32.7126, -57.4039, 0.29 ) }
    dend_149 { pt3dadd( -48.2716, -31.725, -61.4634, 0.29 ) }
    dend_149 { pt3dadd( -48.293, -31.71, -61.5224, 0.29 ) }
    dend_149 { pt3dadd( -48.4488, -31.6125, -61.9065, 0.22 ) }
    dend_149 { pt3dadd( -48.5825, -31.5377, -62.1748, 0.29 ) }
    dend_149 { pt3dadd( -49.0272, -31.337, -62.8005, 0.29 ) }
    dend_149 { pt3dadd( -49.1098, -31.3053, -62.8944, 0.29 ) }
    dend_149 { pt3dadd( -49.5894, -31.1312, -63.1952, 0.29 ) }
    dend_149 { pt3dadd( -50.0905, -30.9499, -63.485, 0.29 ) }
    dend_149 { pt3dadd( -51.8077, -30.3998, -64.4223, 0.29 ) }
    dend_149 { pt3dadd( -52.7027, -30.1392, -64.8843, 0.29 ) }
    dend_149 { pt3dadd( -53.0052, -30.0619, -65.0489, 0.29 ) }
    dend_149 { pt3dadd( -53.9287, -29.8285, -65.5106, 0.29 ) }
    dend_149 { pt3dadd( -54.9523, -29.5535, -66.0466, 0.29 ) }
    dend_149 { pt3dadd( -55.4535, -29.4083, -66.3014, 0.29 ) }
    dend_149 { pt3dadd( -55.6433, -29.3542, -66.3787, 0.29 ) }
    dend_149 { pt3dadd( -56.6691, -29.062, -66.8022, 0.29 ) }
    dend_149 { pt3dadd( -57.887, -28.7162, -67.233, 0.29 ) }
    dend_149 { pt3dadd( -59.1888, -28.3521, -67.6626, 0.29 ) }
    dend_149 { pt3dadd( -60.042, -28.0979, -68.0353, 0.29 ) }
    dend_149 { pt3dadd( -61.5278, -27.662, -68.7521, 0.29 ) }
    dend_149 { pt3dadd( -61.6367, -27.6353, -68.8156, 0.29 ) }
    dend_149 { pt3dadd( -63.6298, -27.2637, -70.0162, 0.29 ) }
    dend_149 { pt3dadd( -63.7992, -27.2428, -70.1248, 0.29 ) }
    dend_149 { pt3dadd( -66.2452, -27.0534, -71.7006, 0.29 ) }
    dend_149 { pt3dadd( -67.1782, -27.005, -72.3237, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_149 { pt3dadd( -69.0763, -26.8991, -73.5113, 0.29 ) }
    dend_149 { pt3dadd( -70.7392, -26.8079, -74.4143, 0.29 ) }
    dend_149 { pt3dadd( -71.3634, -26.7767, -74.6995, 0.29 ) }
    dend_149 { pt3dadd( -71.7537, -26.757, -74.817, 0.29 ) }
    dend_149 { pt3dadd( -72.9172, -26.6962, -75.0117, 0.29 ) }
    dend_149 { pt3dadd( -75.2762, -26.5332, -75.2705, 0.29 ) }
    dend_149 { pt3dadd( -76.8199, -26.4097, -75.3519, 0.29 ) }
    dend_149 { pt3dadd( -77.7067, -26.3379, -75.447, 0.29 ) }
    dend_149 { pt3dadd( -80.3433, -26.1252, -75.8341, 0.29 ) }
    dend_149 { pt3dadd( -80.5416, -26.1104, -75.8708, 0.29 ) }
    dend_149 { pt3dadd( -82.9277, -25.9315, -76.4004, 0.29 ) }
    dend_149 { pt3dadd( -83.5765, -25.8602, -76.6085, 0.29 ) }
    dend_149 { pt3dadd( -85.7212, -25.5234, -77.4748, 0.29 ) }
    dend_149 { pt3dadd( -86.1418, -25.4276, -77.6741, 0.29 ) }
    dend_149 { pt3dadd( -86.91, -25.1944, -78.0905, 0.29 ) }
    dend_149 { pt3dadd( -88.4493, -24.6861, -78.9246, 0.29 ) }
    dend_149 { pt3dadd( -90.4835, -23.9174, -80.0303, 0.29 ) }
    dend_149 { pt3dadd( -90.5386, -23.895, -80.0558, 0.29 ) }
    dend_149 { pt3dadd( -92.0364, -23.2393, -80.5417, 0.29 ) }
    dend_149 { pt3dadd( -92.3941, -23.0749, -80.6646, 0.29 ) }
    dend_149 { pt3dadd( -92.6886, -22.9325, -80.7669, 0.29 ) }
    dend_149 { pt3dadd( -93.0997, -22.7315, -80.9059, 0.29 ) }
    dend_149 { pt3dadd( -93.7036, -22.4539, -81.0567, 0.29 ) }
    dend_149 { pt3dadd( -94.6405, -22.027, -81.3257, 0.29 ) }
    dend_149 { pt3dadd( -96.057, -21.4011, -81.7952, 0.22 ) }
    dend_149 { pt3dadd( -96.1136, -21.3761, -81.8142, 0.22 ) }
    dend_149 { pt3dadd( -96.1958, -21.3447, -81.8391, 0.29 ) }
    dend_149 { pt3dadd( -96.3316, -21.3103, -81.8732, 0.29 ) }
    dend_149 { pt3dadd( -96.8198, -21.24, -81.9662, 0.29 ) }
    dend_149 { pt3dadd( -97.6796, -21.2578, -82.0379, 0.29 ) }
    dend_149 { pt3dadd( -97.7528, -21.2646, -82.038, 0.29 ) }
    dend_149 { pt3dadd( -98.8273, -21.4145, -82.0637, 0.29 ) }
    dend_149 { pt3dadd( -99.5469, -21.5333, -82.0875, 0.29 ) }
    dend_149 { pt3dadd( -99.6101, -21.5459, -82.0901, 0.29 ) }
    dend_149 { pt3dadd( -101.324, -21.9322, -82.1744, 0.29 ) }
    dend_149 { pt3dadd( -101.396, -21.9477, -82.1834, 0.29 ) }
    dend_149 { pt3dadd( -103.142, -22.2787, -82.4901, 0.29 ) }
    dend_149 { pt3dadd( -103.543, -22.3335, -82.575, 0.29 ) }
    dend_149 { pt3dadd( -104.064, -22.3621, -82.7269, 0.29 ) }
    dend_149 { pt3dadd( -104.453, -22.3589, -82.8589, 0.29 ) }
    dend_149 { pt3dadd( -106.454, -22.2249, -83.5865, 0.29 ) }
    dend_149 { pt3dadd( -106.539, -22.2169, -83.6177, 0.29 ) }
    dend_149 { pt3dadd( -108.511, -22.0044, -84.3382, 0.29 ) }
    dend_149 { pt3dadd( -110.023, -21.8435, -84.8663, 0.29 ) }
    dend_149 { pt3dadd( -110.754, -21.7342, -85.0885, 0.29 ) }
    dend_149 { pt3dadd( -112.242, -21.4769, -85.4655, 0.29 ) }
    dend_149 { pt3dadd( -112.309, -21.4607, -85.4925, 0.29 ) }
    dend_149 { pt3dadd( -113.055, -21.2345, -85.9546, 0.29 ) }
    dend_149 { pt3dadd( -113.216, -21.1797, -86.0882, 0.29 ) }
    dend_149 { pt3dadd( -114.652, -20.6708, -87.4279, 0.29 ) }
    dend_149 { pt3dadd( -114.697, -20.654, -87.4712, 0.29 ) }
    dend_149 { pt3dadd( -118.375, -19.1716, -91.2007, 0.29 ) }
    dend_149 { pt3dadd( -119.464, -18.752, -92.2307, 0.29 ) }
    dend_149 { pt3dadd( -120.589, -18.331, -93.2647, 0.29 ) }
    dend_149 { pt3dadd( -120.739, -18.2779, -93.4058, 0.29 ) }
    dend_149 { pt3dadd( -122.109, -17.8547, -94.731, 0.29 ) }
    dend_149 { pt3dadd( -122.15, -17.8427, -94.7659, 0.29 ) }
    dend_149 { pt3dadd( -124.158, -17.4049, -95.4574, 0.29 ) }
    dend_149 { pt3dadd( -124.306, -17.3768, -95.48, 0.29 ) }
    // Section: dend_143, id: dend_143, parent: dend_140 (entry count 59/100)
    dend_143 { pt3dclear() }
    dend_143 { pt3dadd( -11.5317, -24.4547, -6.43475, 0.66 ) }
    dend_143 { pt3dadd( -12.4263, -26.118, -4.50781, 0.66 ) }
    dend_143 { pt3dadd( -12.7703, -26.654, -3.67531, 0.66 ) }
    dend_143 { pt3dadd( -12.8395, -26.7365, -3.53611, 0.66 ) }
    dend_143 { pt3dadd( -13.587, -27.5335, -2.13275, 0.59 ) }
    dend_143 { pt3dadd( -14.0698, -27.9886, -1.27484, 0.59 ) }
    dend_143 { pt3dadd( -15.063, -28.8685, 0.357738, 0.59 ) }
    dend_143 { pt3dadd( -16.4573, -30.0014, 2.38088, 0.59 ) }
    dend_143 { pt3dadd( -17.1738, -30.5338, 3.47388, 0.59 ) }
    dend_143 { pt3dadd( -17.2066, -30.5558, 3.52354, 0.59 ) }
    dend_143 { pt3dadd( -17.8381, -30.9442, 4.48787, 0.59 ) }
    dend_143 { pt3dadd( -18.3738, -31.2597, 5.32137, 0.59 ) }
    dend_143 { pt3dadd( -18.4218, -31.3044, 5.41296, 0.59 ) }
    dend_143 { pt3dadd( -18.5952, -32.4232, 6.83875, 0.59 ) }
    dend_143 { pt3dadd( -18.585, -32.4723, 6.89475, 0.59 ) }
    dend_143 { pt3dadd( -18.4196, -33.2153, 7.71954, 0.59 ) }
    dend_143 { pt3dadd( -18.4117, -33.2679, 7.77286, 0.59 ) }
    dend_143 { pt3dadd( -18.3608, -34.3014, 8.81824, 0.59 ) }
    dend_143 { pt3dadd( -18.5192, -35.046, 9.49742, 0.59 ) }
    dend_143 { pt3dadd( -18.6166, -35.225, 9.63882, 0.59 ) }
    dend_143 { pt3dadd( -19.5515, -36.4374, 10.5042, 0.74 ) }
    dend_143 { pt3dadd( -20.3975, -37.3753, 11.0658, 0.74 ) }
    dend_143 { pt3dadd( -20.4527, -37.4351, 11.0939, 0.74 ) }
    dend_143 { pt3dadd( -20.9429, -37.9815, 11.2631, 0.44 ) }
    dend_143 { pt3dadd( -20.9893, -38.0398, 11.2769, 0.44 ) }
    dend_143 { pt3dadd( -21.4776, -38.9774, 11.4657, 0.44 ) }
    dend_143 { pt3dadd( -21.7277, -39.8104, 11.5937, 0.59 ) }
    dend_143 { pt3dadd( -21.7551, -40.1104, 11.6972, 0.59 ) }
    dend_143 { pt3dadd( -21.7514, -40.9767, 12.1171, 0.59 ) }
    dend_143 { pt3dadd( -21.7283, -41.1147, 12.2291, 0.59 ) }
    dend_143 { pt3dadd( -21.4031, -42.2534, 13.4097, 0.44 ) }
    dend_143 { pt3dadd( -21.3669, -42.3556, 13.5285, 0.44 ) }
    dend_143 { pt3dadd( -20.9499, -43.8808, 15.247, 0.44 ) }
    dend_143 { pt3dadd( -20.939, -43.9464, 15.3203, 0.44 ) }
    dend_143 { pt3dadd( -20.7942, -45.5138, 17.0659, 0.88 ) }
    dend_143 { pt3dadd( -20.7579, -46.0373, 17.6411, 0.88 ) }
    dend_143 { pt3dadd( -20.7342, -46.8123, 18.4559, 0.59 ) }
    dend_143 { pt3dadd( -20.8156, -48.3649, 19.9325, 0.59 ) }
    dend_143 { pt3dadd( -21.0283, -49.4585, 20.7562, 0.96 ) }
    dend_143 { pt3dadd( -21.0511, -49.5495, 20.817, 0.96 ) }
    // Section: dend_141, id: dend_141, parent: dend_140 (entry count 99/100)
    dend_141 { pt3dclear() }
    dend_141 { pt3dadd( -11.5317, -24.4547, -6.43475, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_141 { pt3dadd( -11.5503, -25.2959, -6.35023, 1.25 ) }
    dend_141 { pt3dadd( -11.5561, -25.4433, -6.33597, 1.25 ) }
    dend_141 { pt3dadd( -11.5929, -26.4167, -6.25879, 1.25 ) }
    dend_141 { pt3dadd( -11.6172, -27.4229, -6.24255, 1.25 ) }
    dend_141 { pt3dadd( -11.619, -27.4964, -6.24299, 1.25 ) }
    dend_141 { pt3dadd( -11.5302, -28.5098, -6.33776, 1.11 ) }
    dend_141 { pt3dadd( -11.5193, -28.5728, -6.34434, 1.11 ) }
    dend_141 { pt3dadd( -11.2312, -29.8734, -6.49143, 0.96 ) }
    dend_141 { pt3dadd( -10.769, -31.5333, -6.72277, 0.88 ) }
    dend_141 { pt3dadd( -10.7459, -31.6019, -6.73293, 0.88 ) }
    dend_141 { pt3dadd( -9.6019, -34.6127, -7.1875, 0.88 ) }
    dend_141 { pt3dadd( -8.87619, -36.2231, -7.42573, 0.88 ) }
    dend_141 { pt3dadd( -8.84817, -36.28, -7.43154, 0.88 ) }
    dend_141 { pt3dadd( -8.37762, -37.1451, -7.48013, 1.33 ) }
    dend_141 { pt3dadd( -7.79401, -38.1743, -7.46599, 1.33 ) }
    dend_141 { pt3dadd( -7.75377, -38.2546, -7.45934, 1.33 ) }
    dend_141 { pt3dadd( -7.05794, -39.904, -7.16654, 1.33 ) }
    dend_141 { pt3dadd( -6.65747, -41.1018, -7.00616, 0.96 ) }
    dend_141 { pt3dadd( -6.58883, -41.3564, -6.97409, 0.96 ) }
    dend_141 { pt3dadd( -6.35968, -42.5182, -6.83673, 0.96 ) }
    dend_141 { pt3dadd( -6.15887, -44.1851, -6.69734, 0.96 ) }
    dend_141 { pt3dadd( -6.15461, -44.2584, -6.69423, 0.96 ) }
    dend_141 { pt3dadd( -6.20717, -46.4165, -6.72174, 0.96 ) }
    dend_141 { pt3dadd( -6.21114, -46.4899, -6.7256, 0.96 ) }
    dend_141 { pt3dadd( -6.26886, -47.2395, -6.76336, 1.69 ) }
    dend_141 { pt3dadd( -6.34932, -48.0624, -6.79168, 1.69 ) }
    dend_141 { pt3dadd( -6.46334, -49.2782, -6.80972, 1.4 ) }
    dend_141 { pt3dadd( -6.53292, -50.3345, -6.83599, 0.88 ) }
    dend_141 { pt3dadd( -6.56247, -51.5116, -6.86431, 0.66 ) }
    dend_141 { pt3dadd( -6.55383, -53.0609, -6.91964, 0.96 ) }
    dend_141 { pt3dadd( -6.52088, -53.9641, -6.95997, 1.03 ) }
    dend_141 { pt3dadd( -6.43673, -55.1652, -7.02748, 1.11 ) }
    dend_141 { pt3dadd( -6.26694, -57.0231, -7.15431, 1.11 ) }
    dend_141 { pt3dadd( -6.14057, -58.2752, -7.24751, 1.11 ) }
    dend_141 { pt3dadd( -6.13116, -58.3784, -7.25635, 1.11 ) }
    dend_141 { pt3dadd( -6.068, -59.1762, -7.32153, 1.11 ) }
    dend_141 { pt3dadd( -6.06357, -59.2494, -7.32674, 1.11 ) }
    dend_141 { pt3dadd( -6.00554, -61.1344, -7.38819, 1.11 ) }
    dend_141 { pt3dadd( -5.99233, -62.8172, -7.36513, 0.74 ) }
    dend_141 { pt3dadd( -5.9861, -63.7653, -7.37196, 1.11 ) }
    dend_141 { pt3dadd( -5.98459, -63.8846, -7.36465, 1.11 ) }
    dend_141 { pt3dadd( -5.99307, -64.6509, -7.27668, 1.33 ) }
    dend_141 { pt3dadd( -6.02819, -65.9117, -7.07861, 1.33 ) }
    dend_141 { pt3dadd( -6.07839, -66.8622, -6.87688, 0.96 ) }
    dend_141 { pt3dadd( -6.15223, -67.5927, -6.69837, 0.88 ) }
    dend_141 { pt3dadd( -6.46936, -70.1677, -6.05024, 0.88 ) }
    dend_141 { pt3dadd( -6.61405, -71.3317, -5.76468, 0.88 ) }
    dend_141 { pt3dadd( -6.66048, -71.6632, -5.68097, 0.88 ) }
    dend_141 { pt3dadd( -6.77922, -72.525, -5.46863, 0.88 ) }
    dend_141 { pt3dadd( -6.87561, -73.4668, -5.18914, 0.88 ) }
    dend_141 { pt3dadd( -6.88829, -74.1538, -4.97653, 0.88 ) }
    dend_141 { pt3dadd( -6.83875, -75.0053, -4.75143, 0.88 ) }
    dend_141 { pt3dadd( -6.82644, -75.1463, -4.70953, 0.88 ) }
    dend_141 { pt3dadd( -6.76444, -76.0765, -4.50337, 0.88 ) }
    dend_141 { pt3dadd( -6.66868, -78.1624, -4.2087, 0.52 ) }
    dend_141 { pt3dadd( -6.64265, -79.5644, -4.15352, 0.52 ) }
    dend_141 { pt3dadd( -6.63392, -80.021, -4.17096, 1.25 ) }
    dend_141 { pt3dadd( -6.6319, -81.0992, -4.24542, 1.55 ) }
    dend_141 { pt3dadd( -6.63872, -83.1175, -4.46907, 1.55 ) }
    dend_141 { pt3dadd( -6.65764, -84.2383, -4.67527, 1.18 ) }
    dend_141 { pt3dadd( -6.71105, -86.0887, -5.20574, 0.74 ) }
    dend_141 { pt3dadd( -6.76521, -88.8857, -6.05758, 0.74 ) }
    // Section: dend_126, id: dend_126, parent: dend_122 (entry count 62/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( 31.8263, -58.091, 42.5966, 0.22 ) }
    dend_126 { pt3dadd( 31.5498, -58.327, 42.6526, 0.22 ) }
    dend_126 { pt3dadd( 31.0992, -58.7117, 42.744, 0.22 ) }
    dend_126 { pt3dadd( 30.8877, -58.8923, 42.7869, 0.22 ) }
    dend_126 { pt3dadd( 29.727, -59.8832, 43.0222, 0.22 ) }
    dend_126 { pt3dadd( 22.0322, -67.4604, 43.8773, 0.22 ) }
    dend_126 { pt3dadd( 14.9701, -75.6339, 45.127, 0.22 ) }
    dend_126 { pt3dadd( 7.99447, -83.9872, 45.3616, 0.22 ) }
    dend_126 { pt3dadd( 2.83252, -93.5826, 44.0155, 0.22 ) }
    dend_126 { pt3dadd( -3.06583, -102.438, 41.5622, 0.22 ) }
    dend_126 { pt3dadd( -7.48872, -112.055, 38.6475, 0.22 ) }
    dend_126 { pt3dadd( -13.1369, -121.043, 36.0483, 0.22 ) }
    dend_126 { pt3dadd( -20.1279, -129.036, 33.7852, 0.22 ) }
    dend_126 { pt3dadd( -26.7247, -137.038, 30.5723, 0.22 ) }
    dend_126 { pt3dadd( -32.4814, -146.07, 28.3775, 0.22 ) }
    dend_126 { pt3dadd( -37.0019, -155.792, 25.9719, 0.22 ) }
    dend_126 { pt3dadd( -41.2546, -165.582, 23.3428, 0.22 ) }
    // Section: dend_123, id: dend_123, parent: dend_122 (entry count 79/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( 31.8263, -58.091, 42.5966, 0.44 ) }
    dend_123 { pt3dadd( 31.9186, -58.4065, 42.6346, 0.44 ) }
    dend_123 { pt3dadd( 32.2861, -59.6614, 42.7859, 0.44 ) }
    dend_123 { pt3dadd( 32.4557, -60.2407, 42.8558, 0.22 ) }
    dend_123 { pt3dadd( 32.4766, -60.3122, 42.8644, 0.22 ) }
    dend_123 { pt3dadd( 33.8265, -69.591, 42.355, 0.22 ) }
    dend_123 { pt3dadd( 34.5632, -78.8344, 40.9159, 0.22 ) }
    dend_123 { pt3dadd( 36.0141, -88.1158, 40.9064, 0.22 ) }
    dend_123 { pt3dadd( 38.661, -97.0427, 40.0782, 0.22 ) }
    dend_123 { pt3dadd( 39.7318, -106.376, 40.5361, 0.22 ) }
    dend_123 { pt3dadd( 41.2776, -115.64, 40.596, 0.22 ) }
    dend_123 { pt3dadd( 43.9938, -124.582, 41.1157, 0.22 ) }
    dend_123 { pt3dadd( 44.8754, -133.85, 42.4829, 0.22 ) }
    dend_123 { pt3dadd( 46.3609, -142.988, 44.0795, 0.22 ) }
    dend_123 { pt3dadd( 45.9721, -152.365, 44.9394, 0.22 ) }
    // Section: dend_119, id: dend_119, parent: dend_113 (entry count 94/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( 20.5541, 123.344, 38.5588, 0.81 ) }
    dend_119 { pt3dadd( 20.3035, 121.878, 38.7258, 0.81 ) }
    dend_119 { pt3dadd( 20.2689, 121.689, 38.746, 0.81 ) }
    dend_119 { pt3dadd( 20.0567, 120.538, 38.9125, 0.81 ) }
    dend_119 { pt3dadd( 19.8531, 119.433, 39.0723, 0.59 ) }
    dend_119 { pt3dadd( 19.2074, 115.931, 39.579, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_119 { pt3dadd( 19.1484, 115.611, 39.6252, 0.44 ) }
    dend_119 { pt3dadd( 19.0091, 114.978, 39.7297, 1.11 ) }
    dend_119 { pt3dadd( 18.7546, 113.885, 39.9106, 1.11 ) }
    dend_119 { pt3dadd( 17.2066, 102.643, 39.49, 1.11 ) }
    dend_119 { pt3dadd( 17.4806, 91.3787, 38.0114, 1.11 ) }
    // Section: dend_114, id: dend_114, parent: dend_113 (entry count 5/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 20.5541, 123.344, 38.5588, 1.25 ) }
    dend_114 { pt3dadd( 21.1025, 124.145, 38.5185, 1.25 ) }
    dend_114 { pt3dadd( 21.1937, 124.298, 38.4867, 1.25 ) }
    dend_114 { pt3dadd( 21.7023, 125.196, 38.268, 0.88 ) }
    dend_114 { pt3dadd( 21.7427, 125.268, 38.2484, 0.88 ) }
    dend_114 { pt3dadd( 22.369, 126.415, 37.935, 0.59 ) }
    dend_114 { pt3dadd( 23.1762, 127.948, 37.5295, 0.52 ) }
    dend_114 { pt3dadd( 23.8834, 129.349, 37.155, 0.52 ) }
    dend_114 { pt3dadd( 23.9254, 129.434, 37.1345, 0.52 ) }
    dend_114 { pt3dadd( 24.2344, 130.087, 36.9741, 0.88 ) }
    dend_114 { pt3dadd( 24.5889, 130.907, 36.8362, 0.88 ) }
    dend_114 { pt3dadd( 24.7794, 131.412, 36.7891, 0.88 ) }
    dend_114 { pt3dadd( 25.3801, 133.28, 36.7576, 0.66 ) }
    dend_114 { pt3dadd( 25.7292, 134.524, 36.7704, 0.52 ) }
    dend_114 { pt3dadd( 26.0884, 135.976, 36.7826, 0.66 ) }
    dend_114 { pt3dadd( 26.5206, 137.827, 36.8091, 0.66 ) }
    dend_114 { pt3dadd( 26.8392, 139.13, 36.8322, 0.66 ) }
    dend_114 { pt3dadd( 27.2226, 140.685, 36.8657, 0.66 ) }
    dend_114 { pt3dadd( 27.5264, 141.989, 36.9467, 0.66 ) }
    dend_114 { pt3dadd( 27.719, 142.769, 37.0247, 0.44 ) }
    dend_114 { pt3dadd( 28.0291, 143.859, 37.1869, 0.44 ) }
    dend_114 { pt3dadd( 28.3472, 144.834, 37.3382, 0.44 ) }
    dend_114 { pt3dadd( 28.4074, 145.003, 37.373, 0.44 ) }
    dend_114 { pt3dadd( 28.9862, 146.717, 37.9024, 0.66 ) }
    dend_114 { pt3dadd( 29.009, 146.805, 37.9351, 0.66 ) }
    dend_114 { pt3dadd( 29.1112, 147.559, 38.2048, 1.62 ) }
    dend_114 { pt3dadd( 29.1179, 148.579, 38.5273, 1.92 ) }
    dend_114 { pt3dadd( 29.1114, 148.649, 38.5455, 1.92 ) }
    dend_114 { pt3dadd( 28.9064, 150.118, 38.8384, 0.88 ) }
    dend_114 { pt3dadd( 28.7204, 151.189, 38.9472, 0.44 ) }
    dend_114 { pt3dadd( 28.5513, 152.121, 39.0205, 0.44 ) }
    dend_114 { pt3dadd( 28.5401, 152.205, 39.0245, 0.44 ) }
    dend_114 { pt3dadd( 28.5479, 152.806, 39.0086, 0.44 ) }
    dend_114 { pt3dadd( 28.5573, 152.891, 39.0095, 0.44 ) }
    dend_114 { pt3dadd( 28.7848, 154.059, 39.0399, 0.44 ) }
    dend_114 { pt3dadd( 28.8498, 154.319, 39.0444, 0.44 ) }
    dend_114 { pt3dadd( 29.2977, 156.09, 39.0594, 0.44 ) }
    dend_114 { pt3dadd( 29.743, 157.993, 39.0418, 0.44 ) }
    dend_114 { pt3dadd( 30.1484, 159.97, 38.9905, 0.44 ) }
    dend_114 { pt3dadd( 30.3763, 161.329, 38.9325, 0.44 ) }
    dend_114 { pt3dadd( 30.5029, 162.629, 38.8452, 0.44 ) }
    dend_114 { pt3dadd( 30.5325, 163.638, 38.7138, 0.44 ) }
    dend_114 { pt3dadd( 30.4891, 164.204, 38.5929, 0.44 ) }
    dend_114 { pt3dadd( 30.3625, 164.998, 38.3658, 0.44 ) }
    dend_114 { pt3dadd( 30.3383, 165.182, 38.3035, 0.44 ) }
    dend_114 { pt3dadd( 30.234, 166.403, 37.9406, 0.44 ) }
    dend_114 { pt3dadd( 30.2117, 167.881, 37.6245, 0.44 ) }
    dend_114 { pt3dadd( 30.2179, 168.009, 37.6009, 0.44 ) }
    dend_114 { pt3dadd( 30.3556, 169.507, 37.3755, 1.33 ) }
    dend_114 { pt3dadd( 30.5639, 171.158, 37.1933, 1.62 ) }
    dend_114 { pt3dadd( 30.7832, 172.646, 37.0759, 0.59 ) }
    dend_114 { pt3dadd( 31.0366, 174.096, 37.0664, 0.59 ) }
    dend_114 { pt3dadd( 31.0491, 174.168, 37.0708, 0.59 ) }
    dend_114 { pt3dadd( 31.3317, 175.649, 37.2186, 0.59 ) }
    dend_114 { pt3dadd( 31.6795, 177.386, 37.4719, 0.59 ) }
    dend_114 { pt3dadd( 31.696, 177.468, 37.4888, 0.59 ) }
    dend_114 { pt3dadd( 32.0087, 178.835, 37.7834, 0.59 ) }
    dend_114 { pt3dadd( 32.0307, 178.916, 37.7948, 0.59 ) }
    dend_114 { pt3dadd( 32.56, 180.64, 37.9413, 0.59 ) }
    dend_114 { pt3dadd( 32.5976, 180.746, 37.9449, 0.59 ) }
    dend_114 { pt3dadd( 33.3091, 182.493, 37.9204, 0.59 ) }
    dend_114 { pt3dadd( 33.9036, 183.711, 37.872, 1.25 ) }
    dend_114 { pt3dadd( 34.7208, 185.189, 37.7549, 1.92 ) }
    dend_114 { pt3dadd( 35.0265, 185.673, 37.7026, 1.77 ) }
    dend_114 { pt3dadd( 35.5926, 186.471, 37.5886, 1.11 ) }
    dend_114 { pt3dadd( 36.4214, 187.581, 37.4569, 0.29 ) }
    dend_114 { pt3dadd( 37.4488, 188.786, 37.3139, 0.29 ) }
    dend_114 { pt3dadd( 37.5603, 188.911, 37.3101, 0.29 ) }
    dend_114 { pt3dadd( 38.324, 189.745, 37.3417, 0.74 ) }
    dend_114 { pt3dadd( 38.9226, 190.393, 37.3526, 1.11 ) }
    dend_114 { pt3dadd( 39.6699, 191.187, 37.3343, 0.81 ) }
    // Section: dend_110, id: dend_110, parent: dend_104 (entry count 76/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 55.6756, 11.6866, 33.8874, 0.44 ) }
    dend_110 { pt3dadd( 55.8038, 11.6774, 33.8763, 0.44 ) }
    dend_110 { pt3dadd( 56.1328, 11.6484, 33.914, 0.44 ) }
    dend_110 { pt3dadd( 57.2615, 11.4965, 34.1283, 0.44 ) }
    dend_110 { pt3dadd( 57.4244, 11.4886, 34.1642, 0.44 ) }
    dend_110 { pt3dadd( 58.434, 11.4396, 34.3866, 0.44 ) }
    dend_110 { pt3dadd( 58.51, 11.4359, 34.4033, 0.44 ) }
    dend_110 { pt3dadd( 59.8143, 11.3679, 34.728, 0.52 ) }
    dend_110 { pt3dadd( 60.8598, 11.3181, 35.0495, 0.52 ) }
    dend_110 { pt3dadd( 61.8294, 11.2783, 35.4585, 0.52 ) }
    dend_110 { pt3dadd( 72.4499, 8.95579, 38.0061, 0.52 ) }
    dend_110 { pt3dadd( 83.2032, 7.15331, 40.36, 0.52 ) }
    dend_110 { pt3dadd( 93.3448, 3.22432, 43.097, 0.52 ) }
    dend_110 { pt3dadd( 103.006, -0.426471, 47.413, 0.52 ) }
    dend_110 { pt3dadd( 113.447, -2.96123, 50.4632, 0.52 ) }
    dend_110 { pt3dadd( 124.096, -3.31198, 53.6727, 0.52 ) }
    dend_110 { pt3dadd( 135.211, -3.37205, 54.2449, 0.52 ) }
    dend_110 { pt3dadd( 146.191, -1.63775, 53.8769, 0.52 ) }
    // Section: dend_105, id: dend_105, parent: dend_104 (entry count 94/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 55.6756, 11.6866, 33.8874, 0.52 ) }
    dend_105 { pt3dadd( 56.0226, 11.8842, 33.875, 0.52 ) }
    dend_105 { pt3dadd( 56.5, 12.1559, 33.8581, 0.37 ) }
    dend_105 { pt3dadd( 56.9076, 12.388, 33.8437, 0.37 ) }
    dend_105 { pt3dadd( 57.0954, 12.4949, 33.837, 0.37 ) }
    dend_105 { pt3dadd( 57.936, 12.9735, 33.8072, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_105 { pt3dadd( 58.172, 13.1078, 33.7988, 0.37 ) }
    // Section: dend_103, id: dend_103, parent: dend_99 (entry count 1/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 58.8943, -6.92414, 26.1675, 0.29 ) }
    dend_103 { pt3dadd( 67.2986, -13.9891, 22.1458, 0.29 ) }
    dend_103 { pt3dadd( 74.3177, -22.9055, 18.9777, 0.29 ) }
    dend_103 { pt3dadd( 81.7751, -31.9109, 18.0211, 0.29 ) }
    dend_103 { pt3dadd( 88.7979, -41.3021, 17.3988, 0.29 ) }
    dend_103 { pt3dadd( 95.6975, -50.744, 18.0093, 0.29 ) }
    dend_103 { pt3dadd( 100.945, -60.9297, 20.3288, 0.29 ) }
    dend_103 { pt3dadd( 106.65, -70.1699, 24.3837, 0.29 ) }
    dend_103 { pt3dadd( 112.684, -79.0178, 28.7525, 0.29 ) }
    dend_103 { pt3dadd( 119.157, -88.612, 30.3747, 0.29 ) }
    dend_103 { pt3dadd( 124.337, -99.0634, 31.6663, 0.29 ) }
    dend_103 { pt3dadd( 131.925, -107.936, 32.1495, 0.29 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 13/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 58.8943, -6.92414, 26.1675, 0.22 ) }
    dend_100 { pt3dadd( 63.8721, -11.1433, 23.7025, 0.29 ) }
    dend_100 { pt3dadd( 68.8378, -15.8193, 22.2346, 0.29 ) }
    dend_100 { pt3dadd( 73.3496, -21.1205, 21.6438, 0.29 ) }
    dend_100 { pt3dadd( 77.3517, -26.8492, 21.163, 0.29 ) }
    dend_100 { pt3dadd( 81.8653, -31.9843, 19.6443, 0.29 ) }
    dend_100 { pt3dadd( 86.1818, -36.7256, 16.8034, 0.29 ) }
    dend_100 { pt3dadd( 89.9042, -42.4013, 14.9297, 0.29 ) }
    dend_100 { pt3dadd( 94.4776, -47.653, 14.4502, 0.29 ) }
    dend_100 { pt3dadd( 98.8321, -53.0885, 14.6765, 0.29 ) }
    dend_100 { pt3dadd( 103.704, -58.0279, 14.0122, 0.29 ) }
    dend_100 { pt3dadd( 108.641, -62.8917, 14.3285, 0.29 ) }
    dend_100 { pt3dadd( 113.802, -67.5235, 14.3235, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_74 (entry count 26/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -25.6484, -0.287674, 4.35263, 1.25 ) }
    dend_91 { pt3dadd( -28.7191, 3.54659, 13.5797, 1.25 ) }
    dend_91 { pt3dadd( -29.2026, 4.03279, 14.5321, 1.03 ) }
    dend_91 { pt3dadd( -29.7951, 4.55826, 15.4105, 1.25 ) }
    dend_91 { pt3dadd( -30.6512, 5.25452, 16.3573, 1.25 ) }
    dend_91 { pt3dadd( -30.8059, 5.37438, 16.4963, 1.25 ) }
    dend_91 { pt3dadd( -31.8906, 6.22976, 17.4308, 1.03 ) }
    dend_91 { pt3dadd( -33.4492, 7.21821, 17.631, 1.03 ) }
    dend_91 { pt3dadd( -33.5691, 7.3108, 17.659, 1.03 ) }
    dend_91 { pt3dadd( -34.3735, 8.07401, 17.9524, 1.03 ) }
    dend_91 { pt3dadd( -34.4433, 8.16162, 17.9887, 1.03 ) }
    dend_91 { pt3dadd( -35.7203, 10.4106, 19.1039, 1.4 ) }
    dend_91 { pt3dadd( -35.7409, 10.4657, 19.1353, 1.4 ) }
    dend_91 { pt3dadd( -36.1457, 11.8883, 19.975, 1.4 ) }
    dend_91 { pt3dadd( -36.1861, 12.033, 20.0485, 1.4 ) }
    dend_91 { pt3dadd( -36.4115, 12.9272, 20.4063, 1.4 ) }
    dend_91 { pt3dadd( -36.8986, 14.9002, 20.8926, 1.03 ) }
    dend_91 { pt3dadd( -36.9149, 14.9776, 20.8979, 1.03 ) }
    dend_91 { pt3dadd( -37.1127, 15.9729, 20.9313, 1.03 ) }
    dend_91 { pt3dadd( -37.3601, 17.4839, 20.9329, 0.96 ) }
    dend_91 { pt3dadd( -37.506, 18.634, 20.8709, 1.11 ) }
    dend_91 { pt3dadd( -37.614, 19.954, 20.7271, 1.11 ) }
    dend_91 { pt3dadd( -37.6722, 21.7913, 20.4443, 0.81 ) }
    dend_91 { pt3dadd( -37.6716, 21.8707, 20.4402, 0.81 ) }
    dend_91 { pt3dadd( -37.5539, 24.328, 20.5165, 0.74 ) }
    dend_91 { pt3dadd( -37.4165, 26.2123, 20.8157, 0.88 ) }
    dend_91 { pt3dadd( -37.2825, 27.9031, 21.2727, 0.88 ) }
    dend_91 { pt3dadd( -37.2149, 28.7876, 21.5991, 0.88 ) }
    dend_91 { pt3dadd( -36.9789, 32.2576, 23.2168, 0.88 ) }
    dend_91 { pt3dadd( -36.9747, 32.3263, 23.2535, 0.88 ) }
    dend_91 { pt3dadd( -36.9062, 34.1288, 24.4127, 1.11 ) }
    dend_91 { pt3dadd( -36.9047, 34.2653, 24.5078, 1.11 ) }
    dend_91 { pt3dadd( -36.9374, 35.1007, 25.0683, 1.03 ) }
    dend_91 { pt3dadd( -36.9425, 35.1607, 25.0978, 1.03 ) }
    dend_91 { pt3dadd( -37.0858, 36.6142, 25.4416, 0.52 ) }
    dend_91 { pt3dadd( -37.1805, 37.5573, 25.6031, 0.74 ) }
    dend_91 { pt3dadd( -37.3292, 38.9683, 25.7276, 0.74 ) }
    dend_91 { pt3dadd( -37.3414, 39.0875, 25.7384, 0.74 ) }
    dend_91 { pt3dadd( -37.4533, 40.158, 25.8182, 0.74 ) }
    dend_91 { pt3dadd( -37.4632, 40.248, 25.8236, 0.74 ) }
    dend_91 { pt3dadd( -37.5842, 41.2315, 25.8375, 0.74 ) }
    dend_91 { pt3dadd( -37.5981, 41.3514, 25.8361, 0.74 ) }
    dend_91 { pt3dadd( -37.7079, 42.0868, 25.7655, 1.18 ) }
    dend_91 { pt3dadd( -37.8892, 43.3435, 25.66, 1.77 ) }
    // Section: dend_84, id: dend_84, parent: dend_74 (entry count 70/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -25.6484, -0.287674, 4.35263, 0.37 ) }
    dend_84 { pt3dadd( -25.6073, -0.436736, 8.06136, 0.37 ) }
    dend_84 { pt3dadd( -25.6071, -0.437537, 8.08127, 0.48 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 73/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -25.6484, -0.287674, 4.35263, 1.77 ) }
    dend_75 { pt3dadd( -27.0488, -2.66313, 3.70052, 1.77 ) }
    dend_75 { pt3dadd( -27.3788, -3.27033, 3.52995, 1.03 ) }
    dend_75 { pt3dadd( -28.3731, -4.94518, 2.95585, 0.88 ) }
    dend_75 { pt3dadd( -28.4059, -4.99616, 2.93645, 0.88 ) }
    dend_75 { pt3dadd( -29.0384, -5.84672, 2.52578, 0.88 ) }
    dend_75 { pt3dadd( -29.7924, -6.73055, 2.03892, 0.88 ) }
    dend_75 { pt3dadd( -30.512, -7.41966, 1.47217, 0.81 ) }
    dend_75 { pt3dadd( -31.5237, -8.19316, 0.726212, 0.81 ) }
    dend_75 { pt3dadd( -32.0877, -8.51892, 0.339753, 1.25 ) }
    dend_75 { pt3dadd( -33.0398, -8.88233, -0.584488, 0.96 ) }
    dend_75 { pt3dadd( -33.4549, -8.9514, -1.10792, 0.81 ) }
    dend_75 { pt3dadd( -34.0633, -8.95813, -1.99624, 1.11 ) }
    dend_75 { pt3dadd( -34.4022, -8.92833, -2.54541, 1.11 ) }
    dend_75 { pt3dadd( -34.7677, -8.90065, -3.1613, 1.11 ) }
    dend_75 { pt3dadd( -36.5742, -8.85146, -6.28617, 1.11 ) }
    dend_75 { pt3dadd( -37.149, -8.91654, -7.28497, 1.11 ) }
    dend_75 { pt3dadd( -37.7828, -9.05402, -8.39255, 0.74 ) }
    dend_75 { pt3dadd( -37.8434, -9.07742, -8.49652, 0.74 ) }
    dend_75 { pt3dadd( -38.6312, -9.52937, -9.74332, 0.66 ) }
    dend_75 { pt3dadd( -38.6621, -9.55694, -9.77733, 0.66 ) }
    dend_75 { pt3dadd( -39.2876, -10.5351, -9.96668, 0.66 ) }
    dend_75 { pt3dadd( -39.3128, -10.5937, -9.97318, 0.66 ) }
    dend_75 { pt3dadd( -39.6704, -11.7534, -10.0767, 1.03 ) }
    dend_75 { pt3dadd( -40.056, -13.2828, -10.2555, 1.4 ) }
    dend_75 { pt3dadd( -40.3068, -14.5428, -10.5294, 1.4 ) }
    dend_75 { pt3dadd( -40.3201, -14.5938, -10.5458, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_75 { pt3dadd( -40.8991, -16.4795, -11.3345, 1.4 ) }
    dend_75 { pt3dadd( -40.9167, -16.5242, -11.3607, 1.4 ) }
    dend_75 { pt3dadd( -41.2547, -17.2181, -11.8736, 1.03 ) }
    dend_75 { pt3dadd( -41.7554, -18.1477, -12.7306, 0.59 ) }
    dend_75 { pt3dadd( -42.2884, -19.0559, -13.6178, 0.59 ) }
    dend_75 { pt3dadd( -42.3111, -19.0914, -13.6516, 0.59 ) }
    dend_75 { pt3dadd( -42.9404, -19.9918, -14.4633, 0.88 ) }
    dend_75 { pt3dadd( -43.4197, -20.6142, -15.0455, 1.03 ) }
    dend_75 { pt3dadd( -44.0481, -21.3541, -15.7794, 0.81 ) }
    dend_75 { pt3dadd( -44.4694, -21.7877, -16.2504, 0.59 ) }
    dend_75 { pt3dadd( -45.1166, -22.3081, -16.9814, 0.52 ) }
    dend_75 { pt3dadd( -45.1495, -22.3248, -17.0195, 0.52 ) }
    dend_75 { pt3dadd( -45.7212, -22.3426, -17.6915, 0.52 ) }
    dend_75 { pt3dadd( -45.7593, -22.3295, -17.7382, 0.52 ) }
    dend_75 { pt3dadd( -46.3866, -21.9981, -18.5023, 0.52 ) }
    dend_75 { pt3dadd( -46.7301, -21.7672, -18.9655, 0.74 ) }
    dend_75 { pt3dadd( -47.3806, -21.1698, -19.9763, 0.96 ) }
    dend_75 { pt3dadd( -47.5395, -20.9939, -20.2856, 0.96 ) }
    dend_75 { pt3dadd( -47.6772, -20.9912, -21.0144, 0.96 ) }
    dend_75 { pt3dadd( -47.8116, -21.065, -21.7776, 0.96 ) }
    dend_75 { pt3dadd( -47.8226, -21.0749, -21.8375, 0.96 ) }
    dend_75 { pt3dadd( -48.1282, -21.3915, -23.4742, 0.96 ) }
    dend_75 { pt3dadd( -48.1396, -21.4024, -23.5339, 0.96 ) }
    dend_75 { pt3dadd( -49.5171, -22.5584, -30.6876, 0.96 ) }
    dend_75 { pt3dadd( -49.6389, -22.631, -31.2853, 0.74 ) }
    dend_75 { pt3dadd( -49.7697, -22.6823, -31.8797, 0.59 ) }
    dend_75 { pt3dadd( -49.7824, -22.6854, -31.9309, 0.59 ) }
    dend_75 { pt3dadd( -50.2239, -22.7361, -33.5488, 0.59 ) }
    dend_75 { pt3dadd( -50.2836, -22.7396, -33.7192, 0.59 ) }
    dend_75 { pt3dadd( -50.9428, -22.7043, -34.0499, 0.59 ) }
    dend_75 { pt3dadd( -51.1171, -22.6982, -34.0962, 0.59 ) }
    dend_75 { pt3dadd( -51.9614, -22.7797, -34.1719, 0.59 ) }
    dend_75 { pt3dadd( -52.0214, -22.7938, -34.1691, 0.59 ) }
    dend_75 { pt3dadd( -52.6666, -23.059, -34.1047, 0.74 ) }
    dend_75 { pt3dadd( -53.5934, -23.5902, -34.2941, 0.44 ) }
    dend_75 { pt3dadd( -53.6618, -23.6381, -34.326, 0.44 ) }
    dend_75 { pt3dadd( -54.2726, -24.0592, -34.7574, 0.44 ) }
    dend_75 { pt3dadd( -54.3166, -24.0862, -34.7921, 0.44 ) }
    dend_75 { pt3dadd( -55.0036, -24.4314, -35.3873, 0.88 ) }
    dend_75 { pt3dadd( -55.9894, -24.8567, -36.2629, 0.88 ) }
    dend_75 { pt3dadd( -56.5823, -25.0766, -36.7892, 0.88 ) }
    dend_75 { pt3dadd( -57.4196, -25.384, -37.5066, 0.52 ) }
    dend_75 { pt3dadd( -58.2003, -25.6598, -38.1448, 0.52 ) }
    dend_75 { pt3dadd( -59.0365, -25.9656, -38.7695, 0.52 ) }
    dend_75 { pt3dadd( -59.7901, -26.2396, -39.2574, 0.52 ) }
    dend_75 { pt3dadd( -59.834, -26.2577, -39.2812, 0.52 ) }
    dend_75 { pt3dadd( -60.2474, -26.4565, -39.4771, 0.88 ) }
    dend_75 { pt3dadd( -60.2968, -26.488, -39.4986, 0.88 ) }
    dend_75 { pt3dadd( -60.8386, -26.9889, -40.1475, 0.88 ) }
    dend_75 { pt3dadd( -60.8662, -27.024, -40.2032, 0.88 ) }
    dend_75 { pt3dadd( -61.0224, -27.2386, -40.5594, 0.66 ) }
    dend_75 { pt3dadd( -61.2959, -27.6209, -41.1987, 0.66 ) }
    dend_75 { pt3dadd( -61.6893, -28.1355, -42.0945, 0.44 ) }
    dend_75 { pt3dadd( -62.7887, -29.5375, -44.6613, 0.44 ) }
    dend_75 { pt3dadd( -62.9406, -29.6688, -45.0703, 1.03 ) }
    dend_75 { pt3dadd( -63.4971, -30.0289, -46.457, 1.03 ) }
    dend_75 { pt3dadd( -63.5211, -30.0416, -46.5125, 1.03 ) }
    dend_75 { pt3dadd( -63.8396, -30.1878, -47.2174, 1.03 ) }
    dend_75 { pt3dadd( -63.8663, -30.2012, -47.2716, 1.03 ) }
    dend_75 { pt3dadd( -65.4249, -31.2154, -50.1762, 1.03 ) }
    dend_75 { pt3dadd( -65.8327, -31.5357, -50.9639, 0.66 ) }
    dend_75 { pt3dadd( -66.4319, -32.0486, -52.1187, 0.59 ) }
    dend_75 { pt3dadd( -66.4551, -32.0699, -52.1618, 0.59 ) }
    dend_75 { pt3dadd( -67.0983, -32.6792, -53.3082, 0.59 ) }
    dend_75 { pt3dadd( -67.6902, -33.221, -54.1839, 0.59 ) }
    dend_75 { pt3dadd( -68.2834, -33.7771, -54.8263, 0.29 ) }
    dend_75 { pt3dadd( -68.7278, -34.138, -55.2734, 0.29 ) }
    dend_75 { pt3dadd( -68.8228, -34.2063, -55.3569, 0.29 ) }
    dend_75 { pt3dadd( -69.9276, -34.9185, -56.2947, 0.96 ) }
    dend_75 { pt3dadd( -70.3544, -35.147, -56.6208, 0.96 ) }
    dend_75 { pt3dadd( -70.407, -35.1725, -56.6609, 0.96 ) }
    dend_75 { pt3dadd( -70.9349, -35.4621, -57.0264, 0.44 ) }
    dend_75 { pt3dadd( -71.7043, -35.9183, -57.477, 0.22 ) }
    dend_75 { pt3dadd( -71.9611, -36.0749, -57.5936, 0.59 ) }
    dend_75 { pt3dadd( -72.5673, -36.4659, -57.8036, 0.59 ) }
    dend_75 { pt3dadd( -72.9732, -36.742, -58.0073, 0.59 ) }
    dend_75 { pt3dadd( -73.2783, -36.9684, -58.1839, 0.44 ) }
    dend_75 { pt3dadd( -74.0498, -37.5363, -58.6348, 0.44 ) }
    dend_75 { pt3dadd( -74.2002, -37.647, -58.729, 0.44 ) }
    dend_75 { pt3dadd( -74.955, -38.2234, -59.2302, 0.44 ) }
    dend_75 { pt3dadd( -75.9817, -39.0977, -60.069, 2.06 ) }
    dend_75 { pt3dadd( -76.4597, -39.5759, -60.544, 2.06 ) }
    // Section: dend_67, id: dend_67, parent: dend_53 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -32.873, -18.0189, -9.26878, 0.81 ) }
    dend_67 { pt3dadd( -33.2967, -17.9547, -8.98199, 0.81 ) }
    dend_67 { pt3dadd( -33.9395, -17.8572, -8.54683, 0.37 ) }
    dend_67 { pt3dadd( -34.6372, -17.7513, -8.07457, 0.37 ) }
    dend_67 { pt3dadd( -35.6858, -17.5923, -7.36478, 0.37 ) }
    dend_67 { pt3dadd( -36.618, -17.4509, -6.73374, 0.37 ) }
    dend_67 { pt3dadd( -47.189, -16.3894, -0.6572, 0.37 ) }
    dend_67 { pt3dadd( -57.1292, -17.9844, 6.23717, 0.37 ) }
    dend_67 { pt3dadd( -66.3964, -18.8425, 14.1504, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -32.873, -18.0189, -9.26878, 1.11 ) }
    dend_54 { pt3dadd( -33.0237, -18.1542, -9.30804, 1.11 ) }
    dend_54 { pt3dadd( -34.0594, -19.0206, -9.59682, 1.11 ) }
    dend_54 { pt3dadd( -34.1512, -19.0904, -9.62596, 1.11 ) }
    dend_54 { pt3dadd( -35.6263, -20.1744, -10.1587, 1.11 ) }
    dend_54 { pt3dadd( -36.65, -20.9148, -10.5483, 1.11 ) }
    dend_54 { pt3dadd( -37.6214, -21.6322, -10.9672, 1.11 ) }
    dend_54 { pt3dadd( -37.6696, -21.6683, -10.993, 1.11 ) }
    dend_54 { pt3dadd( -38.4, -22.2464, -11.4958, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_54 { pt3dadd( -39.0825, -22.8219, -12.0774, 1.11 ) }
    dend_54 { pt3dadd( -39.1155, -22.8505, -12.1131, 1.11 ) }
    dend_54 { pt3dadd( -39.7716, -23.4869, -12.8197, 0.88 ) }
    dend_54 { pt3dadd( -40.5503, -24.2829, -13.5621, 0.74 ) }
    dend_54 { pt3dadd( -41.1352, -24.869, -14.0204, 0.74 ) }
    dend_54 { pt3dadd( -41.8733, -25.5889, -14.4871, 0.74 ) }
    dend_54 { pt3dadd( -42.936, -26.6065, -15.0804, 0.74 ) }
    dend_54 { pt3dadd( -44.1444, -27.7717, -15.6938, 0.74 ) }
    dend_54 { pt3dadd( -45.1211, -28.6648, -16.1122, 0.74 ) }
    dend_54 { pt3dadd( -46.4181, -29.8088, -16.6084, 0.74 ) }
    dend_54 { pt3dadd( -47.4243, -30.6809, -16.9727, 0.74 ) }
    dend_54 { pt3dadd( -48.6698, -31.738, -17.3982, 0.74 ) }
    dend_54 { pt3dadd( -50.0539, -32.8994, -17.8959, 0.74 ) }
    dend_54 { pt3dadd( -51.2764, -33.9015, -18.4166, 0.74 ) }
    dend_54 { pt3dadd( -51.999, -34.4967, -18.7383, 1.03 ) }
    dend_54 { pt3dadd( -52.0412, -34.531, -18.7527, 1.03 ) }
    dend_54 { pt3dadd( -53.2185, -35.4512, -18.9942, 1.03 ) }
    dend_54 { pt3dadd( -54.0071, -36.0154, -19.0233, 1.33 ) }
    dend_54 { pt3dadd( -54.7211, -36.4631, -18.9541, 1.33 ) }
    dend_54 { pt3dadd( -54.7768, -36.4944, -18.9442, 1.33 ) }
    dend_54 { pt3dadd( -57.1365, -37.5815, -18.4312, 0.81 ) }
    dend_54 { pt3dadd( -57.9705, -37.8909, -18.2605, 0.81 ) }
    dend_54 { pt3dadd( -58.6213, -38.0695, -18.1431, 0.81 ) }
    dend_54 { pt3dadd( -59.8259, -38.3103, -17.961, 0.74 ) }
    dend_54 { pt3dadd( -60.9071, -38.4541, -17.9095, 0.96 ) }
    dend_54 { pt3dadd( -61.8461, -38.5429, -17.9741, 0.96 ) }
    dend_54 { pt3dadd( -62.7893, -38.5199, -18.2375, 0.59 ) }
    dend_54 { pt3dadd( -63.7978, -38.4284, -18.6181, 0.59 ) }
    dend_54 { pt3dadd( -63.8472, -38.4214, -18.6412, 0.59 ) }
    dend_54 { pt3dadd( -65.2551, -38.1729, -19.4326, 0.59 ) }
    dend_54 { pt3dadd( -66.1696, -38.0084, -20.024, 1.18 ) }
    dend_54 { pt3dadd( -68.0805, -37.8031, -21.2581, 0.59 ) }
    dend_54 { pt3dadd( -68.5803, -37.8076, -21.555, 0.59 ) }
    dend_54 { pt3dadd( -68.6368, -37.818, -21.5844, 0.59 ) }
    dend_54 { pt3dadd( -69.0927, -37.9983, -21.7766, 0.59 ) }
    dend_54 { pt3dadd( -70.2022, -38.6907, -22.1141, 0.59 ) }
    dend_54 { pt3dadd( -71.6725, -39.7003, -22.5453, 0.59 ) }
    dend_54 { pt3dadd( -72.237, -40.0828, -22.688, 0.59 ) }
    dend_54 { pt3dadd( -72.8341, -40.4651, -22.8558, 1.4 ) }
    dend_54 { pt3dadd( -73.878, -41.0722, -23.1431, 1.62 ) }
    dend_54 { pt3dadd( -74.3753, -41.3477, -23.2817, 1.62 ) }
    dend_54 { pt3dadd( -75.6567, -42.0721, -23.6695, 0.74 ) }
    dend_54 { pt3dadd( -77.1753, -42.9158, -24.2842, 0.59 ) }
    dend_54 { pt3dadd( -77.3397, -43.0176, -24.3528, 0.59 ) }
    dend_54 { pt3dadd( -78.4321, -43.7745, -24.8137, 0.37 ) }
    dend_54 { pt3dadd( -79.4193, -44.5637, -25.2163, 0.37 ) }
    dend_54 { pt3dadd( -80.2829, -45.3079, -25.6046, 0.37 ) }
    dend_54 { pt3dadd( -81.279, -46.262, -26.0433, 0.59 ) }
    dend_54 { pt3dadd( -82.0972, -47.0432, -26.3932, 0.96 ) }
    dend_54 { pt3dadd( -82.8917, -47.7736, -26.7121, 0.96 ) }
    dend_54 { pt3dadd( -83.9863, -48.779, -27.0571, 0.96 ) }
    dend_54 { pt3dadd( -84.8477, -49.5451, -27.205, 0.96 ) }
    dend_54 { pt3dadd( -85.9985, -50.5908, -27.1612, 0.44 ) }
    dend_54 { pt3dadd( -86.6775, -51.2796, -27.0144, 0.81 ) }
    dend_54 { pt3dadd( -86.7474, -51.3553, -26.9921, 0.81 ) }
    dend_54 { pt3dadd( -87.7074, -52.6311, -26.5672, 0.96 ) }
    dend_54 { pt3dadd( -88.0348, -53.1659, -26.4011, 0.96 ) }
    dend_54 { pt3dadd( -88.7368, -54.5072, -26.0151, 0.59 ) }
    dend_54 { pt3dadd( -89.2986, -55.703, -25.7643, 0.59 ) }
    dend_54 { pt3dadd( -89.3263, -55.7625, -25.7563, 0.59 ) }
    dend_54 { pt3dadd( -90.1921, -57.4064, -25.641, 0.59 ) }
    dend_54 { pt3dadd( -90.8429, -58.4667, -25.659, 0.59 ) }
    dend_54 { pt3dadd( -90.8746, -58.5135, -25.6587, 0.59 ) }
    dend_54 { pt3dadd( -91.396, -59.1827, -25.6058, 0.59 ) }
    dend_54 { pt3dadd( -92.1013, -59.9761, -25.4462, 1.33 ) }
    dend_54 { pt3dadd( -93.0256, -60.8509, -25.1838, 1.33 ) }
    dend_54 { pt3dadd( -93.7188, -61.3824, -24.9483, 1.33 ) }
    dend_54 { pt3dadd( -94.6778, -62.0742, -24.5945, 1.33 ) }
    dend_54 { pt3dadd( -95.7146, -62.8185, -24.2023, 0.66 ) }
    dend_54 { pt3dadd( -95.7715, -62.8604, -24.1804, 0.66 ) }
    dend_54 { pt3dadd( -96.6708, -63.5739, -23.8739, 0.66 ) }
    dend_54 { pt3dadd( -96.8245, -63.7054, -23.844, 0.66 ) }
    dend_54 { pt3dadd( -97.5899, -64.3996, -23.8369, 0.66 ) }
    dend_54 { pt3dadd( -97.6318, -64.4362, -23.8446, 0.66 ) }
    dend_54 { pt3dadd( -98.2158, -64.9595, -24.0087, 0.66 ) }
    dend_54 { pt3dadd( -98.7843, -65.4857, -24.1455, 1.03 ) }
    dend_54 { pt3dadd( -99.4257, -66.0663, -24.272, 1.03 ) }
    dend_54 { pt3dadd( -100.172, -66.6449, -24.3628, 1.03 ) }
    dend_54 { pt3dadd( -101.22, -67.3337, -24.4319, 0.74 ) }
    dend_54 { pt3dadd( -101.276, -67.3667, -24.4329, 0.74 ) }
    dend_54 { pt3dadd( -102.299, -67.8939, -24.4233, 0.52 ) }
    dend_54 { pt3dadd( -103.052, -68.2219, -24.4519, 0.52 ) }
    dend_54 { pt3dadd( -104.251, -68.6308, -24.7663, 0.52 ) }
    dend_54 { pt3dadd( -104.81, -68.7827, -25.0959, 0.96 ) }
    dend_54 { pt3dadd( -104.86, -68.795, -25.1353, 0.96 ) }
    dend_54 { pt3dadd( -105.482, -68.9491, -25.7123, 0.96 ) }
    dend_54 { pt3dadd( -106.584, -69.234, -26.8507, 0.66 ) }
    dend_54 { pt3dadd( -107.949, -69.6199, -28.3465, 0.52 ) }
    dend_54 { pt3dadd( -109.379, -70.0646, -29.8815, 0.52 ) }
    dend_54 { pt3dadd( -109.91, -70.2501, -30.4098, 0.52 ) }
    dend_54 { pt3dadd( -111.158, -70.7505, -31.5369, 1.62 ) }
    dend_54 { pt3dadd( -111.999, -71.1082, -32.2391, 1.62 ) }
    dend_54 { pt3dadd( -112.598, -71.392, -32.6709, 1.25 ) }
    dend_54 { pt3dadd( -113.794, -72.0074, -33.4136, 0.66 ) }
    dend_54 { pt3dadd( -114.66, -72.4831, -33.932, 1.25 ) }
    dend_54 { pt3dadd( -115.308, -72.8588, -34.2893, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 96/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.67879, 120.23, 4.65293, 1.25 ) }
    dend_32 { pt3dadd( -9.33638, 120.995, 5.23457, 1.25 ) }
    dend_32 { pt3dadd( -9.09215, 121.559, 5.61459, 0.74 ) }
    dend_32 { pt3dadd( -9.06867, 121.617, 5.64872, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( -8.86675, 122.134, 5.93634, 0.74 ) }
    dend_32 { pt3dadd( -8.84548, 122.194, 5.96934, 0.74 ) }
    dend_32 { pt3dadd( -8.63722, 122.83, 6.30381, 0.74 ) }
    dend_32 { pt3dadd( -8.35368, 123.745, 6.72009, 0.74 ) }
    dend_32 { pt3dadd( -8.06929, 124.831, 7.18471, 0.59 ) }
    dend_32 { pt3dadd( -8.0599, 124.874, 7.20163, 0.59 ) }
    dend_32 { pt3dadd( -7.97598, 125.405, 7.3777, 1.11 ) }
    dend_32 { pt3dadd( -7.90556, 126.041, 7.55586, 1.25 ) }
    dend_32 { pt3dadd( -7.9039, 126.081, 7.566, 1.25 ) }
    dend_32 { pt3dadd( -7.92521, 126.952, 7.76201, 1.25 ) }
    dend_32 { pt3dadd( -7.98905, 127.68, 7.93529, 1.25 ) }
    dend_32 { pt3dadd( -8.09755, 128.695, 8.18503, 1.25 ) }
    dend_32 { pt3dadd( -8.10776, 128.787, 8.20898, 1.25 ) }
    dend_32 { pt3dadd( -8.21354, 129.624, 8.44767, 1.03 ) }
    dend_32 { pt3dadd( -8.29456, 130.285, 8.65998, 0.66 ) }
    dend_32 { pt3dadd( -8.37679, 130.931, 8.89913, 0.66 ) }
    dend_32 { pt3dadd( -8.46488, 131.704, 9.23698, 0.88 ) }
    dend_32 { pt3dadd( -8.52114, 132.377, 9.56524, 1.18 ) }
    dend_32 { pt3dadd( -8.52368, 132.418, 9.58753, 1.18 ) }
    dend_32 { pt3dadd( -8.54522, 133.158, 10.0017, 1.18 ) }
    dend_32 { pt3dadd( -8.54524, 133.193, 10.0234, 1.18 ) }
    dend_32 { pt3dadd( -8.54161, 133.941, 10.4856, 1.18 ) }
    dend_32 { pt3dadd( -8.54726, 134.267, 10.69, 0.74 ) }
    dend_32 { pt3dadd( -8.57144, 134.761, 10.935, 0.74 ) }
    dend_32 { pt3dadd( -8.59123, 135.174, 11.0902, 0.74 ) }
    dend_32 { pt3dadd( -8.59994, 135.319, 11.129, 0.74 ) }
    dend_32 { pt3dadd( -8.68323, 136.352, 11.322, 0.74 ) }
    dend_32 { pt3dadd( -8.68772, 136.4, 11.3271, 0.74 ) }
    dend_32 { pt3dadd( -8.82744, 137.504, 11.4196, 0.74 ) }
    dend_32 { pt3dadd( -8.88243, 137.918, 11.4464, 1.11 ) }
    dend_32 { pt3dadd( -8.96116, 138.463, 11.489, 1.25 ) }
    dend_32 { pt3dadd( -9.03751, 138.97, 11.536, 1.25 ) }
    dend_32 { pt3dadd( -9.04495, 139.017, 11.5426, 1.25 ) }
    dend_32 { pt3dadd( -9.15934, 139.712, 11.6627, 0.74 ) }
    dend_32 { pt3dadd( -9.2986, 140.526, 11.8364, 0.59 ) }
    dend_32 { pt3dadd( -9.36363, 140.961, 11.9398, 0.59 ) }
    dend_32 { pt3dadd( -9.36834, 141.014, 11.9531, 0.59 ) }
    dend_32 { pt3dadd( -9.37613, 141.733, 12.1536, 0.59 ) }
    dend_32 { pt3dadd( -9.35008, 142.204, 12.2903, 0.59 ) }
    dend_32 { pt3dadd( -9.34353, 142.249, 12.3041, 0.59 ) }
    dend_32 { pt3dadd( -9.28539, 142.614, 12.4328, 0.59 ) }
    dend_32 { pt3dadd( -9.24393, 142.908, 12.5353, 0.59 ) }
    dend_32 { pt3dadd( -9.17128, 143.463, 12.7131, 0.59 ) }
    dend_32 { pt3dadd( -9.12829, 143.995, 12.9085, 0.66 ) }
    dend_32 { pt3dadd( -9.12339, 144.062, 12.9349, 0.66 ) }
    dend_32 { pt3dadd( -9.10701, 144.537, 13.1238, 0.88 ) }
    dend_32 { pt3dadd( -9.12157, 144.927, 13.2823, 1.18 ) }
    dend_32 { pt3dadd( -9.1726, 145.395, 13.4798, 1.18 ) }
    dend_32 { pt3dadd( -9.34294, 146.267, 13.8768, 1.03 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 49/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -9.67879, 120.23, 4.65293, 0.59 ) }
    dend_29 { pt3dadd( -10.3238, 121.427, 3.85343, 0.59 ) }
    dend_29 { pt3dadd( -10.622, 122.042, 3.4398, 0.59 ) }
    dend_29 { pt3dadd( -10.8168, 122.6, 3.10006, 0.59 ) }
    dend_29 { pt3dadd( -10.9184, 123.076, 2.82036, 0.59 ) }
    dend_29 { pt3dadd( -10.9953, 123.668, 2.48938, 0.37 ) }
    dend_29 { pt3dadd( -11.0694, 124.53, 2.02196, 0.29 ) }
    dend_29 { pt3dadd( -11.0701, 124.571, 2.00467, 0.29 ) }
    dend_29 { pt3dadd( -11.0319, 125.36, 1.67214, 0.29 ) }
    dend_29 { pt3dadd( -10.9569, 126.227, 1.33872, 0.29 ) }
    dend_29 { pt3dadd( -10.9231, 126.558, 1.23308, 0.29 ) }
    dend_29 { pt3dadd( -10.9175, 126.609, 1.22086, 0.29 ) }
    dend_29 { pt3dadd( -10.8571, 127.213, 1.06429, 0.29 ) }
    dend_29 { pt3dadd( -10.813, 127.712, 0.916231, 0.29 ) }
    dend_29 { pt3dadd( -10.7864, 128.181, 0.730142, 0.88 ) }
    dend_29 { pt3dadd( -10.7694, 128.861, 0.42733, 1.18 ) }
    dend_29 { pt3dadd( -10.8103, 129.638, -0.0261052, 1.03 ) }
    dend_29 { pt3dadd( -10.9101, 130.377, -0.512016, 0.52 ) }
    dend_29 { pt3dadd( -10.9844, 130.762, -0.795682, 0.44 ) }
    dend_29 { pt3dadd( -11.2091, 131.542, -1.38318, 0.88 ) }
    dend_29 { pt3dadd( -11.3531, 131.924, -1.66834, 1.11 ) }
    dend_29 { pt3dadd( -11.8219, 132.985, -2.4332, 0.52 ) }
    dend_29 { pt3dadd( -12.1107, 133.585, -2.81269, 0.52 ) }
    dend_29 { pt3dadd( -12.1309, 133.627, -2.83452, 0.52 ) }
    dend_29 { pt3dadd( -12.4621, 134.345, -3.17514, 0.44 ) }
    dend_29 { pt3dadd( -12.7061, 134.871, -3.3788, 0.44 ) }
    dend_29 { pt3dadd( -13.0101, 135.504, -3.62963, 0.44 ) }
    dend_29 { pt3dadd( -13.1714, 135.831, -3.753, 1.11 ) }
    dend_29 { pt3dadd( -13.4981, 136.407, -3.99901, 1.11 ) }
    dend_29 { pt3dadd( -13.9851, 137.105, -4.36393, 0.44 ) }
    dend_29 { pt3dadd( -14.4137, 137.583, -4.69069, 0.37 ) }
    dend_29 { pt3dadd( -14.9173, 138.095, -5.10552, 1.11 ) }
    dend_29 { pt3dadd( -14.9482, 138.126, -5.13257, 1.11 ) }
    dend_29 { pt3dadd( -15.1959, 138.384, -5.38978, 1.25 ) }
    dend_29 { pt3dadd( -15.7848, 139.053, -6.13262, 0.44 ) }
    dend_29 { pt3dadd( -16.2091, 139.617, -6.75857, 0.29 ) }
    dend_29 { pt3dadd( -16.7172, 140.334, -7.78268, 0.29 ) }
    dend_29 { pt3dadd( -16.7722, 140.414, -7.91071, 0.66 ) }
    dend_29 { pt3dadd( -17.1627, 141.0, -8.88249, 0.37 ) }
    dend_29 { pt3dadd( -17.4429, 141.434, -9.6167, 1.03 ) }
    dend_29 { pt3dadd( -17.5563, 141.62, -9.92013, 1.18 ) }
    dend_29 { pt3dadd( -18.5897, 143.327, -12.725, 1.84 ) }
    dend_29 { pt3dadd( -18.6059, 143.352, -12.7662, 1.84 ) }
    dend_29 { pt3dadd( -18.81, 143.638, -13.2447, 2.14 ) }
    dend_29 { pt3dadd( -19.4936, 144.455, -14.5466, 0.29 ) }
    dend_29 { pt3dadd( -19.7803, 144.763, -15.0388, 0.29 ) }
    dend_29 { pt3dadd( -20.2409, 145.215, -15.7837, 0.66 ) }
    dend_29 { pt3dadd( -20.4375, 145.39, -16.0657, 0.66 ) }
    dend_29 { pt3dadd( -21.5299, 146.253, -17.5793, 0.44 ) }
    dend_29 { pt3dadd( -22.6106, 147.008, -19.048, 0.22 ) }
    dend_29 { pt3dadd( -23.4698, 147.467, -20.1529, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -24.4854, 147.876, -21.3783, 0.37 ) }
    dend_29 { pt3dadd( -24.9337, 148.014, -21.898, 0.22 ) }
    dend_29 { pt3dadd( -25.254, 148.095, -22.2659, 0.29 ) }
    dend_29 { pt3dadd( -25.2932, 148.1, -22.3075, 0.29 ) }
    dend_29 { pt3dadd( -26.5868, 148.052, -23.6649, 0.29 ) }
    dend_29 { pt3dadd( -26.9914, 147.99, -24.0233, 1.03 ) }
    dend_29 { pt3dadd( -27.9825, 147.687, -24.8792, 0.775 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 43.1391, -66.1856, 18.286, 0.74 ) }
    dend_19 { pt3dadd( 43.2914, -66.7442, 18.3548, 0.74 ) }
    dend_19 { pt3dadd( 43.4293, -67.3151, 18.4266, 0.74 ) }
    dend_19 { pt3dadd( 43.5764, -67.9417, 18.478, 0.52 ) }
    dend_19 { pt3dadd( 43.7978, -68.6462, 18.5177, 0.44 ) }
    dend_19 { pt3dadd( 44.1247, -69.5986, 18.5622, 0.96 ) }
    dend_19 { pt3dadd( 44.3526, -70.2054, 18.5852, 0.96 ) }
    dend_19 { pt3dadd( 44.4828, -70.5463, 18.5959, 0.96 ) }
    dend_19 { pt3dadd( 44.9085, -71.5827, 18.6193, 0.66 ) }
    dend_19 { pt3dadd( 45.6333, -73.1064, 18.6017, 0.52 ) }
    dend_19 { pt3dadd( 45.9374, -73.6113, 18.58, 0.81 ) }
    dend_19 { pt3dadd( 46.4085, -74.2856, 18.5333, 1.11 ) }
    dend_19 { pt3dadd( 46.456, -74.3464, 18.5286, 1.11 ) }
    dend_19 { pt3dadd( 47.1218, -75.1344, 18.4702, 1.11 ) }
    dend_19 { pt3dadd( 48.215, -76.3301, 18.3956, 0.44 ) }
    dend_19 { pt3dadd( 49.38, -77.5188, 18.3263, 0.44 ) }
    dend_19 { pt3dadd( 49.4977, -77.6335, 18.3217, 0.44 ) }
    dend_19 { pt3dadd( 50.1335, -78.2251, 18.3106, 1.03 ) }
    dend_19 { pt3dadd( 50.8952, -78.9051, 18.3128, 1.03 ) }
    dend_19 { pt3dadd( 51.7599, -79.6413, 18.3421, 1.03 ) }
    dend_19 { pt3dadd( 52.2109, -80.0212, 18.3755, 0.44 ) }
    dend_19 { pt3dadd( 53.149, -80.8441, 18.4575, 0.44 ) }
    dend_19 { pt3dadd( 53.7953, -81.4202, 18.5398, 1.11 ) }
    dend_19 { pt3dadd( 54.5086, -82.0972, 18.6633, 1.11 ) }
    dend_19 { pt3dadd( 54.9883, -82.593, 18.7694, 0.52 ) }
    dend_19 { pt3dadd( 55.4361, -83.1089, 18.8898, 0.52 ) }
    dend_19 { pt3dadd( 55.4892, -83.1776, 18.9055, 0.52 ) }
    dend_19 { pt3dadd( 56.0694, -83.995, 19.0991, 0.37 ) }
    dend_19 { pt3dadd( 56.6571, -84.9072, 19.3382, 0.37 ) }
    dend_19 { pt3dadd( 56.9015, -85.3027, 19.444, 0.37 ) }
    dend_19 { pt3dadd( 57.2522, -85.8782, 19.5933, 1.25 ) }
    dend_19 { pt3dadd( 57.8924, -86.8741, 19.8348, 1.25 ) }
    dend_19 { pt3dadd( 58.0537, -87.1158, 19.8851, 1.25 ) }
    dend_19 { pt3dadd( 58.6037, -87.9209, 20.0251, 0.37 ) }
    dend_19 { pt3dadd( 59.1401, -88.6688, 20.1527, 0.37 ) }
    dend_19 { pt3dadd( 59.2808, -88.865, 20.193, 0.37 ) }
    dend_19 { pt3dadd( 59.9326, -89.7954, 20.4063, 0.37 ) }
    dend_19 { pt3dadd( 60.8089, -91.0698, 20.7102, 0.37 ) }
    dend_19 { pt3dadd( 60.8518, -91.1326, 20.725, 0.37 ) }
    dend_19 { pt3dadd( 61.5907, -92.2158, 20.9645, 0.37 ) }
    dend_19 { pt3dadd( 62.1431, -93.0284, 21.1636, 1.03 ) }
    dend_19 { pt3dadd( 62.1855, -93.091, 21.1803, 1.03 ) }
    dend_19 { pt3dadd( 62.7927, -94.0374, 21.4825, 1.03 ) }
    dend_19 { pt3dadd( 62.8394, -94.1074, 21.5098, 1.03 ) }
    dend_19 { pt3dadd( 68.43, -103.668, 22.3457, 1.03 ) }
    dend_19 { pt3dadd( 72.8702, -113.729, 24.2334, 1.03 ) }
    dend_19 { pt3dadd( 78.3562, -122.796, 27.4828, 1.03 ) }
    dend_19 { pt3dadd( 82.6285, -132.216, 31.5674, 1.03 ) }
    dend_19 { pt3dadd( 85.5318, -141.65, 36.7185, 1.03 ) }
    dend_19 { pt3dadd( 86.4798, -150.404, 43.4736, 1.03 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 57/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 43.1391, -66.1856, 18.286, 0.81 ) }
    dend_18 { pt3dadd( 43.1764, -66.2084, 17.7843, 0.81 ) }
    dend_18 { pt3dadd( 43.2021, -66.18, 17.7065, 0.81 ) }
    dend_18 { pt3dadd( 43.2021, -66.18, 17.7065, 0.22 ) }
    dend_18 { pt3dadd( 43.5374, -65.4212, 17.3322, 0.59 ) }
    dend_18 { pt3dadd( 43.5662, -65.3561, 17.3001, 0.59 ) }
    dend_18 { pt3dadd( 44.0958, -64.1573, 16.7088, 0.44 ) }
    dend_18 { pt3dadd( 44.3229, -63.6101, 16.4369, 0.44 ) }
    dend_18 { pt3dadd( 44.9956, -61.9869, 15.5915, 0.44 ) }
    dend_18 { pt3dadd( 45.0216, -61.9225, 15.5557, 0.44 ) }
    dend_18 { pt3dadd( 48.2733, -52.0855, 11.34, 0.44 ) }
    dend_18 { pt3dadd( 49.7319, -42.0591, 6.56447, 0.44 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 69/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 80.6873, 219.009, -35.0472, 0.44 ) }
    dend_10 { pt3dadd( 80.7804, 219.644, -35.2595, 0.44 ) }
    dend_10 { pt3dadd( 80.8649, 220.22, -35.4522, 0.44 ) }
    dend_10 { pt3dadd( 80.9505, 220.803, -35.6474, 0.29 ) }
    dend_10 { pt3dadd( 81.0261, 221.319, -35.8198, 0.29 ) }
    dend_10 { pt3dadd( 81.1332, 222.048, -36.0639, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 80.6873, 219.009, -35.0472, 0.29 ) }
    dend_9 { pt3dadd( 81.0853, 219.552, -34.9718, 0.29 ) }
    dend_9 { pt3dadd( 81.1649, 219.662, -34.9617, 0.29 ) }
    dend_9 { pt3dadd( 81.7257, 220.496, -34.9254, 0.29 ) }
    dend_9 { pt3dadd( 82.216, 221.291, -34.9818, 0.29 ) }
    dend_9 { pt3dadd( 82.646, 222.133, -35.0794, 0.29 ) }
    dend_9 { pt3dadd( 82.9841, 222.906, -35.2379, 0.66 ) }
    dend_9 { pt3dadd( 83.0298, 223.041, -35.2742, 0.66 ) }
    dend_9 { pt3dadd( 83.2269, 223.724, -35.5207, 0.52 ) }
    dend_9 { pt3dadd( 83.5188, 224.838, -36.0473, 0.29 ) }
    dend_9 { pt3dadd( 83.8785, 226.193, -36.7483, 0.81 ) }
    dend_9 { pt3dadd( 84.244, 227.413, -37.3923, 1.4 ) }
    dend_9 { pt3dadd( 84.4486, 228.056, -37.727, 1.4 ) }
    dend_9 { pt3dadd( 84.9622, 229.382, -38.4775, 0.44 ) }
    dend_9 { pt3dadd( 85.6175, 230.851, -39.3547, 0.22 ) }
    dend_9 { pt3dadd( 85.8907, 231.38, -39.6819, 0.22 ) }
    dend_9 { pt3dadd( 86.1731, 231.858, -39.9849, 0.59 ) }
    dend_9 { pt3dadd( 86.2696, 231.998, -40.0751, 0.59 ) }
    dend_9 { pt3dadd( 87.2344, 233.219, -40.86, 0.52 ) }
    dend_9 { pt3dadd( 87.8403, 233.888, -41.364, 0.52 ) }
    dend_9 { pt3dadd( 87.8919, 233.946, -41.4075, 0.52 ) }
    dend_9 { pt3dadd( 88.4288, 234.588, -41.8576, 0.52 ) }
    dend_9 { pt3dadd( 89.5507, 235.985, -42.7562, 1.11 ) }
    dend_9 { pt3dadd( 90.1399, 236.733, -43.2094, 1.4 ) }
    dend_9 { pt3dadd( 91.5241, 238.513, -44.1701, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_9 { pt3dadd( 92.5816, 239.815, -44.8581, 0.66 ) }
    dend_9 { pt3dadd( 93.1319, 240.481, -45.2097, 0.66 ) }
    dend_9 { pt3dadd( 93.4462, 240.861, -45.3898, 0.52 ) }
    dend_9 { pt3dadd( 94.3092, 242.019, -45.807, 0.52 ) }
    dend_9 { pt3dadd( 94.7526, 242.647, -45.997, 0.52 ) }
    dend_9 { pt3dadd( 94.8756, 242.825, -46.0306, 0.52 ) }
    dend_9 { pt3dadd( 95.8296, 244.146, -46.2899, 1.18 ) }
    dend_9 { pt3dadd( 96.6799, 245.338, -46.4676, 1.47 ) }
    dend_9 { pt3dadd( 97.1214, 245.973, -46.5268, 0.37 ) }
    dend_9 { pt3dadd( 97.5661, 246.64, -46.533, 0.37 ) }
    dend_9 { pt3dadd( 98.2479, 247.694, -46.5138, 0.37 ) }
    dend_9 { pt3dadd( 98.2928, 247.772, -46.513, 0.37 ) }
    dend_9 { pt3dadd( 99.0142, 249.207, -46.4839, 0.37 ) }
    dend_9 { pt3dadd( 99.0943, 249.385, -46.4904, 0.37 ) }
    dend_9 { pt3dadd( 99.465, 250.273, -46.5558, 0.37 ) }
    dend_9 { pt3dadd( 99.4942, 250.36, -46.5652, 0.37 ) }
    dend_9 { pt3dadd( 100.042, 252.714, -46.7444, 0.37 ) }
    dend_9 { pt3dadd( 100.057, 252.791, -46.7472, 0.37 ) }
    dend_9 { pt3dadd( 100.147, 253.463, -46.7517, 0.37 ) }
    dend_9 { pt3dadd( 100.159, 253.554, -46.7491, 0.37 ) }
    dend_9 { pt3dadd( 100.286, 254.314, -46.6919, 0.37 ) }
    dend_9 { pt3dadd( 100.633, 256.065, -46.4298, 0.29 ) }
    dend_9 { pt3dadd( 100.954, 257.228, -46.1623, 0.29 ) }
    dend_9 { pt3dadd( 101.107, 257.71, -46.044, 0.29 ) }
    dend_9 { pt3dadd( 101.138, 257.793, -46.0226, 0.29 ) }
    dend_9 { pt3dadd( 102.359, 260.571, -45.2937, 0.29 ) }
    dend_9 { pt3dadd( 102.897, 261.655, -45.0054, 0.15 ) }
    dend_9 { pt3dadd( 103.869, 263.467, -44.5331, 0.15 ) }
    dend_9 { pt3dadd( 103.911, 263.544, -44.5123, 0.15 ) }
    dend_9 { pt3dadd( 104.683, 264.9, -44.1347, 0.15 ) }
    dend_9 { pt3dadd( 105.902, 266.976, -43.5432, 0.15 ) }
    dend_9 { pt3dadd( 105.97, 267.079, -43.5112, 0.15 ) }
    // Section: dend_152, id: dend_152, parent: dend_150 (entry count 32/100)
    dend_152 { pt3dclear() }
    dend_152 { pt3dadd( -56.3793, -80.7103, -93.4966, 0.29 ) }
    dend_152 { pt3dadd( -57.712, -82.3508, -93.8321, 0.29 ) }
    dend_152 { pt3dadd( -57.7557, -82.4046, -93.8431, 0.29 ) }
    dend_152 { pt3dadd( -59.3859, -84.4113, -94.2536, 0.29 ) }
    dend_152 { pt3dadd( -59.4868, -84.5354, -94.279, 0.29 ) }
    dend_152 { pt3dadd( -61.0943, -86.5142, -94.6837, 0.29 ) }
    dend_152 { pt3dadd( -62.2329, -87.9158, -94.9704, 0.29 ) }
    // Section: dend_151, id: dend_151, parent: dend_150 (entry count 39/100)
    dend_151 { pt3dclear() }
    dend_151 { pt3dadd( -56.3793, -80.7103, -93.4966, 0.29 ) }
    dend_151 { pt3dadd( -56.145, -80.7587, -93.5394, 0.29 ) }
    dend_151 { pt3dadd( -53.1154, -81.5948, -94.1721, 0.29 ) }
    dend_151 { pt3dadd( -53.0294, -81.6324, -94.19, 0.29 ) }
    dend_151 { pt3dadd( -50.9402, -82.7195, -94.6244, 0.29 ) }
    dend_151 { pt3dadd( -50.7766, -82.8047, -94.6584, 0.29 ) }
    dend_151 { pt3dadd( -48.7934, -83.8366, -95.0707, 0.29 ) }
    dend_151 { pt3dadd( -48.6402, -83.932, -95.1036, 0.29 ) }
    dend_151 { pt3dadd( -46.9596, -85.5217, -95.4692, 0.29 ) }
    dend_151 { pt3dadd( -46.9019, -85.5826, -95.4833, 0.29 ) }
    // Section: dend_147, id: dend_147, parent: dend_143 (entry count 49/100)
    dend_147 { pt3dclear() }
    dend_147 { pt3dadd( -21.0511, -49.5495, 20.817, 0.29 ) }
    dend_147 { pt3dadd( -22.3639, -49.1041, -9.37553, 0.29 ) }
    dend_147 { pt3dadd( -22.3907, -49.0967, -9.88206, 0.29 ) }
    dend_147 { pt3dadd( -22.3966, -49.0958, -9.97158, 0.29 ) }
    dend_147 { pt3dadd( -22.4818, -49.0902, -11.0457, 0.29 ) }
    dend_147 { pt3dadd( -22.6136, -49.0943, -12.4355, 0.29 ) }
    dend_147 { pt3dadd( -22.7438, -49.1128, -13.6102, 0.29 ) }
    dend_147 { pt3dadd( -22.8318, -49.1527, -13.6466, 0.29 ) }
    dend_147 { pt3dadd( -24.0892, -49.8739, -14.094, 0.29 ) }
    dend_147 { pt3dadd( -24.7025, -50.2755, -14.2863, 0.29 ) }
    dend_147 { pt3dadd( -25.9498, -51.2108, -14.6056, 0.29 ) }
    dend_147 { pt3dadd( -26.9493, -52.0385, -14.7751, 0.29 ) }
    dend_147 { pt3dadd( -28.0303, -52.9993, -14.9169, 0.29 ) }
    dend_147 { pt3dadd( -29.3268, -54.201, -15.0372, 0.29 ) }
    dend_147 { pt3dadd( -29.3915, -54.2663, -15.04, 0.29 ) }
    dend_147 { pt3dadd( -30.2267, -55.1717, -15.1268, 0.29 ) }
    dend_147 { pt3dadd( -31.1562, -56.2372, -15.2482, 0.29 ) }
    dend_147 { pt3dadd( -32.2646, -57.5397, -15.3869, 0.29 ) }
    dend_147 { pt3dadd( -32.3921, -57.6991, -15.418, 0.29 ) }
    dend_147 { pt3dadd( -33.1252, -58.5364, -15.6493, 0.29 ) }
    dend_147 { pt3dadd( -34.5189, -59.9492, -16.1161, 0.29 ) }
    dend_147 { pt3dadd( -36.2439, -61.5633, -16.7755, 0.29 ) }
    dend_147 { pt3dadd( -36.3103, -61.6198, -16.8031, 0.29 ) }
    dend_147 { pt3dadd( -37.7653, -62.7932, -17.4317, 0.29 ) }
    dend_147 { pt3dadd( -38.991, -63.7528, -17.9542, 0.29 ) }
    dend_147 { pt3dadd( -40.1796, -64.6701, -18.4454, 0.29 ) }
    dend_147 { pt3dadd( -40.6859, -65.0727, -18.6321, 0.29 ) }
    dend_147 { pt3dadd( -40.7514, -65.1321, -18.6559, 0.29 ) }
    dend_147 { pt3dadd( -41.2139, -65.661, -18.7742, 0.29 ) }
    dend_147 { pt3dadd( -41.4242, -65.9825, -18.7914, 0.29 ) }
    dend_147 { pt3dadd( -41.909, -66.8299, -18.8132, 0.29 ) }
    dend_147 { pt3dadd( -42.0171, -67.0074, -18.8182, 0.29 ) }
    dend_147 { pt3dadd( -42.9365, -68.2161, -18.8765, 0.29 ) }
    dend_147 { pt3dadd( -43.81, -69.2427, -18.947, 0.29 ) }
    dend_147 { pt3dadd( -44.9813, -70.3658, -19.0466, 0.29 ) }
    dend_147 { pt3dadd( -46.0422, -71.2514, -19.1402, 0.29 ) }
    dend_147 { pt3dadd( -47.803, -72.5477, -19.3667, 0.29 ) }
    dend_147 { pt3dadd( -49.8039, -73.8886, -19.6871, 0.29 ) }
    dend_147 { pt3dadd( -49.8935, -73.9381, -19.7039, 0.29 ) }
    dend_147 { pt3dadd( -51.7752, -74.7572, -20.1993, 0.29 ) }
    dend_147 { pt3dadd( -51.8685, -74.7883, -20.23, 0.29 ) }
    dend_147 { pt3dadd( -53.4573, -75.184, -20.8279, 0.29 ) }
    dend_147 { pt3dadd( -53.5509, -75.2006, -20.8668, 0.29 ) }
    dend_147 { pt3dadd( -54.7449, -75.4333, -21.394, 0.29 ) }
    dend_147 { pt3dadd( -56.528, -75.8375, -22.175, 0.29 ) }
    dend_147 { pt3dadd( -56.7007, -75.8835, -22.2475, 0.29 ) }
    dend_147 { pt3dadd( -58.2558, -76.2837, -22.825, 0.29 ) }
    dend_147 { pt3dadd( -58.4366, -76.3283, -22.8752, 0.29 ) }
    dend_147 { pt3dadd( -59.4776, -76.6059, -23.1303, 0.29 ) }
    dend_147 { pt3dadd( -59.5968, -76.64, -23.1596, 0.29 ) }
    dend_147 { pt3dadd( -62.2303, -77.2952, -23.6961, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_147 { pt3dadd( -62.3525, -77.3222, -23.7253, 0.29 ) }
    dend_147 { pt3dadd( -64.544, -77.7607, -24.3098, 0.29 ) }
    dend_147 { pt3dadd( -64.6293, -77.7738, -24.3346, 0.29 ) }
    dend_147 { pt3dadd( -66.0988, -77.95, -24.7836, 0.29 ) }
    dend_147 { pt3dadd( -68.9049, -78.2189, -25.6137, 0.29 ) }
    dend_147 { pt3dadd( -70.8884, -78.3766, -26.1877, 0.29 ) }
    dend_147 { pt3dadd( -71.0021, -78.3857, -26.2189, 0.29 ) }
    dend_147 { pt3dadd( -73.9554, -78.5889, -26.9815, 0.29 ) }
    dend_147 { pt3dadd( -74.1558, -78.6044, -27.0321, 0.29 ) }
    dend_147 { pt3dadd( -76.0855, -78.7774, -27.4876, 0.29 ) }
    dend_147 { pt3dadd( -76.3586, -78.8064, -27.5527, 0.29 ) }
    dend_147 { pt3dadd( -78.1451, -79.0042, -27.9321, 0.29 ) }
    dend_147 { pt3dadd( -79.1835, -79.1275, -28.0857, 0.29 ) }
    dend_147 { pt3dadd( -81.1166, -79.3837, -28.2298, 0.29 ) }
    dend_147 { pt3dadd( -81.3284, -79.3983, -28.2354, 0.29 ) }
    dend_147 { pt3dadd( -82.9294, -79.3698, -28.3082, 0.29 ) }
    dend_147 { pt3dadd( -83.018, -79.3554, -28.3041, 0.29 ) }
    dend_147 { pt3dadd( -84.8459, -78.7736, -28.018, 0.29 ) }
    dend_147 { pt3dadd( -85.042, -78.6877, -27.9692, 0.29 ) }
    dend_147 { pt3dadd( -86.5953, -77.8613, -27.4409, 0.29 ) }
    dend_147 { pt3dadd( -88.142, -76.9429, -26.9018, 0.29 ) }
    dend_147 { pt3dadd( -90.1955, -75.508, -26.1665, 0.29 ) }
    dend_147 { pt3dadd( -90.338, -75.4028, -26.1231, 0.29 ) }
    dend_147 { pt3dadd( -91.5138, -74.4459, -25.9283, 0.29 ) }
    // Section: dend_144, id: dend_144, parent: dend_143 (entry count 24/100)
    dend_144 { pt3dclear() }
    dend_144 { pt3dadd( -21.0511, -49.5495, 20.817, 0.96 ) }
    dend_144 { pt3dadd( -21.3081, -50.4385, 21.4422, 0.96 ) }
    dend_144 { pt3dadd( -21.3352, -50.5427, 21.514, 0.96 ) }
    dend_144 { pt3dadd( -21.7514, -52.2009, 22.657, 0.88 ) }
    dend_144 { pt3dadd( -22.0307, -53.2214, 23.5686, 0.66 ) }
    dend_144 { pt3dadd( -22.0497, -53.2818, 23.6248, 0.66 ) }
    dend_144 { pt3dadd( -22.2443, -53.9189, 24.2128, 0.52 ) }
    dend_144 { pt3dadd( -22.5883, -55.0587, 25.269, 0.52 ) }
    dend_144 { pt3dadd( -22.6071, -55.1204, 25.3239, 0.52 ) }
    dend_144 { pt3dadd( -23.1875, -57.1087, 26.9922, 0.52 ) }
    dend_144 { pt3dadd( -23.4864, -58.1118, 27.856, 0.52 ) }
    dend_144 { pt3dadd( -23.6045, -58.5315, 28.2199, 0.52 ) }
    dend_144 { pt3dadd( -23.8146, -59.2127, 28.8588, 0.52 ) }
    dend_144 { pt3dadd( -23.8297, -59.276, 28.9133, 0.52 ) }
    dend_144 { pt3dadd( -24.0643, -60.5227, 29.9128, 0.52 ) }
    dend_144 { pt3dadd( -24.0644, -60.5864, 29.9688, 0.52 ) }
    dend_144 { pt3dadd( -23.8743, -61.6687, 31.2245, 0.52 ) }
    dend_144 { pt3dadd( -23.1943, -62.9782, 33.2258, 0.52 ) }
    dend_144 { pt3dadd( -22.4772, -63.7034, 34.6613, 0.52 ) }
    dend_144 { pt3dadd( -22.4281, -63.7355, 34.736, 0.52 ) }
    dend_144 { pt3dadd( -20.5965, -64.4248, 36.8702, 0.52 ) }
    dend_144 { pt3dadd( -20.4443, -64.4605, 37.0141, 0.52 ) }
    dend_144 { pt3dadd( -18.908, -64.5296, 38.0904, 0.52 ) }
    dend_144 { pt3dadd( -18.8476, -64.528, 38.1274, 0.52 ) }
    dend_144 { pt3dadd( -18.3948, -64.5209, 38.4608, 0.52 ) }
    dend_144 { pt3dadd( -18.3258, -64.5205, 38.5063, 0.52 ) }
    dend_144 { pt3dadd( -17.6551, -64.5449, 38.759, 0.52 ) }
    dend_144 { pt3dadd( -16.7049, -64.5372, 39.0626, 0.52 ) }
    dend_144 { pt3dadd( -11.7284, -70.2983, 48.2562, 0.52 ) }
    dend_144 { pt3dadd( -6.70202, -75.017, 57.948, 0.52 ) }
    dend_144 { pt3dadd( -1.02351, -80.2899, 66.9994, 0.52 ) }
    dend_144 { pt3dadd( 3.03065, -84.1319, 77.4669, 0.52 ) }
    dend_144 { pt3dadd( 7.52073, -88.1163, 87.7056, 0.52 ) }
    dend_144 { pt3dadd( 12.4115, -91.3302, 98.0062, 0.52 ) }
    dend_144 { pt3dadd( 16.9935, -96.1708, 107.862, 0.52 ) }
    dend_144 { pt3dadd( 23.5918, -101.277, 116.359, 0.52 ) }
    dend_144 { pt3dadd( 29.2047, -107.484, 124.9, 0.52 ) }
    dend_144 { pt3dadd( 35.8674, -114.346, 132.131, 0.52 ) }
    dend_144 { pt3dadd( 42.2134, -122.818, 137.964, 0.52 ) }
    // Section: dend_142, id: dend_142, parent: dend_141 (entry count 63/100)
    dend_142 { pt3dclear() }
    dend_142 { pt3dadd( -6.76521, -88.8857, -6.05758, 0.74 ) }
    dend_142 { pt3dadd( -6.20458, -90.0408, -6.51001, 0.74 ) }
    dend_142 { pt3dadd( -6.17397, -90.1007, -6.53574, 0.74 ) }
    dend_142 { pt3dadd( -5.66138, -91.0718, -6.96192, 0.74 ) }
    dend_142 { pt3dadd( -5.6005, -91.1855, -7.00189, 0.74 ) }
    dend_142 { pt3dadd( -4.96679, -92.427, -7.34729, 0.74 ) }
    dend_142 { pt3dadd( -4.19043, -94.0046, -7.72121, 1.4 ) }
    dend_142 { pt3dadd( -3.83974, -94.7898, -7.85988, 1.4 ) }
    dend_142 { pt3dadd( -3.77485, -94.9618, -7.88843, 1.4 ) }
    dend_142 { pt3dadd( -3.43972, -96.1682, -8.07296, 0.37 ) }
    dend_142 { pt3dadd( -3.25758, -97.0713, -8.26017, 0.37 ) }
    dend_142 { pt3dadd( -3.22213, -97.2539, -8.30355, 0.37 ) }
    dend_142 { pt3dadd( -3.02662, -98.0208, -8.58335, 0.37 ) }
    dend_142 { pt3dadd( -2.76359, -98.9084, -9.03471, 1.18 ) }
    dend_142 { pt3dadd( -2.49813, -99.7396, -9.53463, 1.47 ) }
    dend_142 { pt3dadd( -2.02757, -101.169, -10.488, 0.52 ) }
    dend_142 { pt3dadd( -1.59039, -102.417, -11.3412, 0.37 ) }
    dend_142 { pt3dadd( -0.94246, -104.291, -12.6184, 0.37 ) }
    dend_142 { pt3dadd( -0.9053, -104.4, -12.6878, 0.37 ) }
    dend_142 { pt3dadd( -0.722201, -105.04, -13.0041, 1.4 ) }
    dend_142 { pt3dadd( -0.48246, -106.058, -13.4104, 1.4 ) }
    dend_142 { pt3dadd( -0.417224, -106.442, -13.5217, 1.4 ) }
    dend_142 { pt3dadd( -0.205715, -108.201, -13.901, 0.66 ) }
    dend_142 { pt3dadd( -0.0090078, -109.659, -14.0921, 0.59 ) }
    dend_142 { pt3dadd( 0.379631, -112.052, -14.3712, 0.59 ) }
    dend_142 { pt3dadd( 0.391772, -112.114, -14.3773, 0.59 ) }
    dend_142 { pt3dadd( 0.503217, -112.634, -14.4241, 1.33 ) }
    dend_142 { pt3dadd( 0.697817, -113.509, -14.4868, 0.74 ) }
    dend_142 { pt3dadd( 0.942536, -114.626, -14.489, 0.52 ) }
    dend_142 { pt3dadd( 0.96697, -114.751, -14.4857, 0.52 ) }
    dend_142 { pt3dadd( 1.11562, -115.643, -14.419, 0.52 ) }
    dend_142 { pt3dadd( 1.3712, -117.4, -14.2313, 0.52 ) }
    dend_142 { pt3dadd( 1.38747, -117.535, -14.2132, 0.52 ) }
    dend_142 { pt3dadd( 1.55406, -119.334, -13.9242, 0.52 ) }
    dend_142 { pt3dadd( 1.61278, -120.186, -13.7418, 1.25 ) }
    dend_142 { pt3dadd( 1.71379, -121.44, -13.4385, 1.25 ) }
    dend_142 { pt3dadd( 1.72084, -121.555, -13.4097, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_142 { pt3dadd( 1.75291, -122.526, -13.1165, 1.25 ) }
    dend_142 { pt3dadd( 1.75385, -122.587, -13.0982, 1.25 ) }
    dend_142 { pt3dadd( 1.7413, -124.025, -12.6892, 0.52 ) }
    dend_142 { pt3dadd( 1.70927, -125.469, -12.2784, 0.52 ) }
    dend_142 { pt3dadd( 1.64872, -127.354, -11.7561, 0.52 ) }
    dend_142 { pt3dadd( 1.6153, -128.574, -11.4315, 0.81 ) }
    dend_142 { pt3dadd( 1.61345, -128.635, -11.4148, 0.81 ) }
    dend_142 { pt3dadd( 1.59875, -129.279, -11.2474, 0.81 ) }
    dend_142 { pt3dadd( 1.59035, -129.748, -11.1303, 0.37 ) }
    dend_142 { pt3dadd( 1.59063, -130.609, -10.9095, 0.37 ) }
    dend_142 { pt3dadd( 1.64063, -131.34, -10.7493, 0.37 ) }
    dend_142 { pt3dadd( 1.68249, -131.813, -10.7003, 0.74 ) }
    dend_142 { pt3dadd( 1.73844, -132.48, -10.6649, 0.74 ) }
    dend_142 { pt3dadd( 1.74368, -132.544, -10.6641, 0.74 ) }
    dend_142 { pt3dadd( 1.80101, -133.272, -10.6844, 0.74 ) }
    dend_142 { pt3dadd( 1.82921, -133.608, -10.687, 0.74 ) }
    dend_142 { pt3dadd( 1.90451, -134.442, -10.6847, 0.44 ) }
    dend_142 { pt3dadd( 2.03707, -135.869, -10.6706, 0.44 ) }
    dend_142 { pt3dadd( 2.05024, -136.011, -10.6646, 0.44 ) }
    dend_142 { pt3dadd( 2.14283, -137.154, -10.5858, 0.44 ) }
    dend_142 { pt3dadd( 2.19196, -137.846, -10.537, 0.29 ) }
    dend_142 { pt3dadd( 2.19571, -137.909, -10.5331, 0.29 ) }
    dend_142 { pt3dadd( 2.23634, -138.713, -10.4814, 0.29 ) }
    dend_142 { pt3dadd( 2.24408, -139.214, -10.4651, 0.29 ) }
    dend_142 { pt3dadd( 2.24377, -139.663, -10.4646, 0.29 ) }
    dend_142 { pt3dadd( 2.20308, -140.645, -10.4951, 0.29 ) }
    dend_142 { pt3dadd( 2.11302, -142.18, -10.5829, 0.29 ) }
    dend_142 { pt3dadd( 2.10806, -142.244, -10.5871, 0.22 ) }
    dend_142 { pt3dadd( 2.0208, -143.065, -10.6468, 0.29 ) }
    dend_142 { pt3dadd( 1.9173, -143.85, -10.7047, 0.29 ) }
    dend_142 { pt3dadd( 1.76581, -144.885, -10.7708, 0.29 ) }
    dend_142 { pt3dadd( 1.7364, -145.094, -10.7799, 0.29 ) }
    dend_142 { pt3dadd( 1.64273, -145.775, -10.8122, 0.29 ) }
    dend_142 { pt3dadd( 1.55253, -146.598, -10.8471, 0.29 ) }
    dend_142 { pt3dadd( 1.46893, -147.935, -10.9029, 0.29 ) }
    dend_142 { pt3dadd( 1.46684, -147.999, -10.9057, 0.37 ) }
    dend_142 { pt3dadd( 1.46844, -149.567, -11.0127, 0.29 ) }
    dend_142 { pt3dadd( 1.47126, -149.664, -11.0206, 0.29 ) }
    dend_142 { pt3dadd( 1.58327, -151.393, -11.175, 0.29 ) }
    dend_142 { pt3dadd( 1.72229, -152.993, -11.3415, 0.29 ) }
    dend_142 { pt3dadd( 1.73332, -153.101, -11.3539, 0.37 ) }
    dend_142 { pt3dadd( 1.83234, -153.925, -11.4489, 0.29 ) }
    dend_142 { pt3dadd( 1.96595, -154.898, -11.567, 0.29 ) }
    dend_142 { pt3dadd( 2.07315, -155.698, -11.6722, 0.29 ) }
    dend_142 { pt3dadd( 2.07977, -155.761, -11.6807, 0.29 ) }
    dend_142 { pt3dadd( 2.13708, -156.682, -11.8538, 0.29 ) }
    dend_142 { pt3dadd( 2.16934, -157.71, -12.0746, 0.29 ) }
    dend_142 { pt3dadd( 2.16891, -157.915, -12.1223, 0.29 ) }
    dend_142 { pt3dadd( 2.13159, -158.934, -12.3971, 0.29 ) }
    dend_142 { pt3dadd( 2.07373, -159.94, -12.865, 0.29 ) }
    dend_142 { pt3dadd( 1.94392, -161.026, -13.4941, 0.29 ) }
    dend_142 { pt3dadd( 1.92529, -161.129, -13.5647, 0.29 ) }
    dend_142 { pt3dadd( 1.77671, -161.741, -14.0421, 0.29 ) }
    dend_142 { pt3dadd( 1.65406, -162.228, -14.4584, 0.29 ) }
    dend_142 { pt3dadd( 1.1475, -164.26, -16.3062, 0.29 ) }
    dend_142 { pt3dadd( 0.936944, -165.088, -17.0833, 0.29 ) }
    dend_142 { pt3dadd( 0.923239, -165.141, -17.1295, 0.29 ) }
    dend_142 { pt3dadd( 0.741904, -165.9, -17.7531, 0.29 ) }
    dend_142 { pt3dadd( 0.548505, -166.76, -18.4256, 0.29 ) }
    dend_142 { pt3dadd( 0.492598, -167.09, -18.6458, 0.29 ) }
    dend_142 { pt3dadd( 0.43676, -167.421, -18.8255, 0.29 ) }
    dend_142 { pt3dadd( 0.236442, -168.635, -19.5245, 0.29 ) }
    dend_142 { pt3dadd( 0.0566042, -169.349, -19.9746, 0.29 ) }
    dend_142 { pt3dadd( 0.0401082, -169.399, -20.0083, 0.29 ) }
    dend_142 { pt3dadd( -0.363668, -170.384, -20.7185, 0.29 ) }
    dend_142 { pt3dadd( -0.99369, -171.681, -21.7268, 0.29 ) }
    dend_142 { pt3dadd( -1.02237, -171.732, -21.7679, 0.29 ) }
    dend_142 { pt3dadd( -1.96732, -173.097, -22.933, 0.29 ) }
    dend_142 { pt3dadd( -2.00805, -173.15, -22.9805, 0.29 ) }
    dend_142 { pt3dadd( -2.5351, -173.778, -23.5659, 0.29 ) }
    dend_142 { pt3dadd( -2.79248, -174.054, -23.824, 0.29 ) }
    dend_142 { pt3dadd( -3.11199, -174.393, -24.1434, 0.29 ) }
    dend_142 { pt3dadd( -4.20988, -175.51, -25.2001, 0.29 ) }
    dend_142 { pt3dadd( -4.73942, -176.023, -25.7228, 0.29 ) }
    dend_142 { pt3dadd( -5.44102, -176.68, -26.4034, 0.29 ) }
    dend_142 { pt3dadd( -5.90509, -177.098, -26.8485, 0.29 ) }
    dend_142 { pt3dadd( -6.50165, -177.644, -27.4244, 0.29 ) }
    dend_142 { pt3dadd( -6.83985, -177.957, -27.7486, 0.29 ) }
    dend_142 { pt3dadd( -8.08763, -179.23, -28.8399, 0.29 ) }
    dend_142 { pt3dadd( -8.6965, -179.926, -29.2815, 0.37 ) }
    dend_142 { pt3dadd( -8.73272, -179.972, -29.3029, 0.37 ) }
    dend_142 { pt3dadd( -9.14114, -180.55, -29.5034, 0.29 ) }
    dend_142 { pt3dadd( -9.17379, -180.603, -29.5144, 0.29 ) }
    dend_142 { pt3dadd( -9.91428, -181.91, -29.6856, 0.29 ) }
    dend_142 { pt3dadd( -10.4245, -182.924, -29.6681, 0.29 ) }
    dend_142 { pt3dadd( -10.6257, -183.361, -29.6612, 0.29 ) }
    dend_142 { pt3dadd( -10.7157, -183.557, -29.6575, 0.29 ) }
    dend_142 { pt3dadd( -10.974, -184.132, -29.6424, 0.29 ) }
    // Section: dend_125, id: dend_125, parent: dend_123 (entry count 88/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( 45.9721, -152.365, 44.9394, 0.44 ) }
    dend_125 { pt3dadd( 47.1575, -162.704, 45.4094, 0.44 ) }
    dend_125 { pt3dadd( 49.6053, -172.786, 45.877, 0.44 ) }
    dend_125 { pt3dadd( 53.1755, -182.272, 47.922, 0.44 ) }
    dend_125 { pt3dadd( 58.0325, -191.117, 49.8795, 0.44 ) }
    // Section: dend_124, id: dend_124, parent: dend_123 (entry count 93/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( 45.9721, -152.365, 44.9394, 0.29 ) }
    dend_124 { pt3dadd( 47.2317, -160.672, 45.0109, 0.44 ) }
    dend_124 { pt3dadd( 49.5726, -168.705, 45.0685, 0.44 ) }
    dend_124 { pt3dadd( 51.9939, -176.608, 43.97, 0.44 ) }
    dend_124 { pt3dadd( 55.9306, -183.897, 43.6376, 0.44 ) }
    // Section: dend_118, id: dend_118, parent: dend_114 (entry count 98/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( 39.6699, 191.187, 37.3343, 0.44 ) }
    dend_118 { pt3dadd( 39.8627, 191.3, 37.3207, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_118 { pt3dadd( 40.8735, 192.02, 37.2902, 0.44 ) }
    dend_118 { pt3dadd( 41.0556, 192.158, 37.2873, 0.44 ) }
    dend_118 { pt3dadd( 41.8622, 192.927, 37.2895, 0.44 ) }
    dend_118 { pt3dadd( 41.9175, 192.985, 37.2902, 0.44 ) }
    dend_118 { pt3dadd( 43.4365, 194.878, 37.3252, 0.44 ) }
    dend_118 { pt3dadd( 44.2922, 196.101, 37.3707, 0.44 ) }
    dend_118 { pt3dadd( 44.3422, 196.188, 37.3715, 0.44 ) }
    dend_118 { pt3dadd( 45.1776, 197.857, 37.3458, 0.44 ) }
    dend_118 { pt3dadd( 45.2102, 197.932, 37.3427, 0.44 ) }
    dend_118 { pt3dadd( 45.8862, 199.695, 37.2147, 0.44 ) }
    dend_118 { pt3dadd( 45.9078, 199.773, 37.2059, 0.44 ) }
    dend_118 { pt3dadd( 46.377, 201.489, 36.9732, 0.44 ) }
    dend_118 { pt3dadd( 46.3962, 201.557, 36.9599, 0.44 ) }
    dend_118 { pt3dadd( 46.5787, 202.156, 36.7866, 1.03 ) }
    dend_118 { pt3dadd( 46.6304, 202.348, 36.724, 1.03 ) }
    dend_118 { pt3dadd( 46.8155, 203.161, 36.4004, 1.03 ) }
    dend_118 { pt3dadd( 46.8246, 203.228, 36.3778, 1.03 ) }
    dend_118 { pt3dadd( 46.8518, 204.303, 36.0897, 0.37 ) }
    dend_118 { pt3dadd( 46.8471, 204.374, 36.0792, 0.37 ) }
    dend_118 { pt3dadd( 46.761, 205.115, 36.013, 0.29 ) }
    dend_118 { pt3dadd( 46.7503, 205.196, 36.0045, 0.29 ) }
    dend_118 { pt3dadd( 46.6117, 206.158, 35.9035, 0.29 ) }
    dend_118 { pt3dadd( 46.6019, 206.229, 35.8975, 0.29 ) }
    dend_118 { pt3dadd( 46.2675, 208.442, 35.7892, 0.29 ) }
    dend_118 { pt3dadd( 46.2557, 208.512, 35.7822, 0.29 ) }
    dend_118 { pt3dadd( 45.9808, 210.006, 35.583, 0.29 ) }
    dend_118 { pt3dadd( 45.9655, 210.085, 35.572, 0.29 ) }
    dend_118 { pt3dadd( 45.8019, 210.893, 35.4538, 1.03 ) }
    dend_118 { pt3dadd( 45.6388, 211.644, 35.355, 1.03 ) }
    dend_118 { pt3dadd( 45.431, 212.564, 35.2468, 0.29 ) }
    dend_118 { pt3dadd( 45.1442, 213.746, 35.1657, 0.29 ) }
    dend_118 { pt3dadd( 44.7825, 215.142, 35.1499, 0.29 ) }
    dend_118 { pt3dadd( 44.6935, 215.465, 35.1463, 0.29 ) }
    dend_118 { pt3dadd( 44.4382, 216.33, 35.1489, 0.29 ) }
    dend_118 { pt3dadd( 44.3084, 216.761, 35.166, 1.11 ) }
    dend_118 { pt3dadd( 44.1225, 217.407, 35.2167, 1.11 ) }
    dend_118 { pt3dadd( 44.1028, 217.476, 35.2218, 1.11 ) }
    dend_118 { pt3dadd( 43.9522, 218.114, 35.2528, 0.29 ) }
    dend_118 { pt3dadd( 43.6758, 219.581, 35.3609, 0.29 ) }
    dend_118 { pt3dadd( 43.342, 221.677, 35.5444, 0.29 ) }
    dend_118 { pt3dadd( 43.105, 223.307, 35.7185, 0.29 ) }
    dend_118 { pt3dadd( 43.096, 223.377, 35.7272, 0.29 ) }
    dend_118 { pt3dadd( 42.7676, 226.228, 36.1042, 0.29 ) }
    dend_118 { pt3dadd( 42.6088, 227.955, 36.3654, 0.29 ) }
    dend_118 { pt3dadd( 42.6003, 228.107, 36.3895, 0.59 ) }
    dend_118 { pt3dadd( 42.5972, 228.472, 36.4533, 0.59 ) }
    dend_118 { pt3dadd( 42.597, 228.553, 36.4699, 0.59 ) }
    dend_118 { pt3dadd( 43.8371, 238.729, 37.1379, 0.59 ) }
    // Section: dend_115, id: dend_115, parent: dend_114 (entry count 48/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 39.6699, 191.187, 37.3343, 0.52 ) }
    dend_115 { pt3dadd( 40.0201, 192.495, 36.4936, 0.52 ) }
    dend_115 { pt3dadd( 40.2923, 193.426, 35.8753, 0.52 ) }
    dend_115 { pt3dadd( 40.3153, 193.494, 35.8307, 0.52 ) }
    dend_115 { pt3dadd( 40.865, 194.775, 34.9113, 0.52 ) }
    dend_115 { pt3dadd( 41.3666, 195.842, 34.1141, 0.52 ) }
    dend_115 { pt3dadd( 41.4659, 196.038, 33.9657, 0.81 ) }
    dend_115 { pt3dadd( 41.5123, 196.109, 33.9071, 0.81 ) }
    dend_115 { pt3dadd( 41.8119, 196.512, 33.5667, 0.81 ) }
    dend_115 { pt3dadd( 42.7197, 197.706, 32.6371, 0.66 ) }
    dend_115 { pt3dadd( 42.7735, 197.773, 32.5925, 0.66 ) }
    dend_115 { pt3dadd( 43.1863, 198.297, 32.3353, 1.47 ) }
    dend_115 { pt3dadd( 43.5732, 198.765, 32.1379, 1.77 ) }
    dend_115 { pt3dadd( 44.1208, 199.417, 31.9222, 0.81 ) }
    dend_115 { pt3dadd( 44.1659, 199.474, 31.9097, 0.81 ) }
    dend_115 { pt3dadd( 44.5144, 199.923, 31.8552, 0.52 ) }
    dend_115 { pt3dadd( 45.2125, 200.883, 31.7516, 0.29 ) }
    dend_115 { pt3dadd( 45.5426, 201.381, 31.7089, 1.4 ) }
    dend_115 { pt3dadd( 45.9371, 202.043, 31.6606, 1.47 ) }
    dend_115 { pt3dadd( 46.3708, 202.901, 31.6167, 0.59 ) }
    dend_115 { pt3dadd( 46.5578, 203.318, 31.5964, 0.59 ) }
    dend_115 { pt3dadd( 46.9544, 204.35, 31.5476, 0.59 ) }
    dend_115 { pt3dadd( 47.1695, 205.007, 31.5209, 0.52 ) }
    dend_115 { pt3dadd( 47.3793, 205.668, 31.5076, 0.52 ) }
    dend_115 { pt3dadd( 47.9276, 207.265, 31.5128, 0.52 ) }
    dend_115 { pt3dadd( 47.9608, 207.358, 31.5175, 0.52 ) }
    dend_115 { pt3dadd( 48.0531, 207.618, 31.54, 0.88 ) }
    dend_115 { pt3dadd( 48.3009, 208.305, 31.6128, 0.88 ) }
    dend_115 { pt3dadd( 48.7289, 209.539, 31.7603, 0.44 ) }
    dend_115 { pt3dadd( 49.0868, 210.768, 31.9096, 0.44 ) }
    dend_115 { pt3dadd( 49.2491, 211.483, 31.9949, 1.03 ) }
    dend_115 { pt3dadd( 49.3603, 212.086, 32.0494, 1.03 ) }
    dend_115 { pt3dadd( 49.3687, 212.151, 32.0535, 1.03 ) }
    dend_115 { pt3dadd( 49.3776, 212.781, 32.0659, 0.59 ) }
    dend_115 { pt3dadd( 49.2536, 214.218, 32.0311, 0.29 ) }
    dend_115 { pt3dadd( 49.1803, 214.693, 31.9998, 0.96 ) }
    dend_115 { pt3dadd( 49.0872, 215.198, 31.9503, 0.59 ) }
    dend_115 { pt3dadd( 49.0165, 215.527, 31.9171, 0.29 ) }
    dend_115 { pt3dadd( 48.6693, 217.032, 31.7797, 0.29 ) }
    dend_115 { pt3dadd( 48.6538, 217.095, 31.7745, 0.59 ) }
    dend_115 { pt3dadd( 48.4538, 217.871, 31.7199, 0.29 ) }
    dend_115 { pt3dadd( 48.2385, 218.725, 31.6651, 0.29 ) }
    dend_115 { pt3dadd( 48.2148, 218.821, 31.66, 0.29 ) }
    dend_115 { pt3dadd( 47.8691, 220.382, 31.5664, 0.29 ) }
    dend_115 { pt3dadd( 47.8301, 220.583, 31.5529, 0.29 ) }
    dend_115 { pt3dadd( 47.7217, 221.115, 31.5148, 1.11 ) }
    dend_115 { pt3dadd( 47.6184, 221.582, 31.479, 1.11 ) }
    dend_115 { pt3dadd( 47.6057, 221.637, 31.4748, 1.11 ) }
    dend_115 { pt3dadd( 47.3944, 222.463, 31.4122, 0.37 ) }
    dend_115 { pt3dadd( 47.3372, 222.659, 31.4129, 0.37 ) }
    dend_115 { pt3dadd( 47.0736, 223.512, 31.4625, 0.37 ) }
    dend_115 { pt3dadd( 46.829, 224.26, 31.5386, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_115 { pt3dadd( 46.7627, 224.451, 31.5649, 0.37 ) }
    dend_115 { pt3dadd( 46.5692, 225.005, 31.6996, 0.37 ) }
    dend_115 { pt3dadd( 46.1205, 226.288, 32.0882, 0.37 ) }
    dend_115 { pt3dadd( 45.9781, 226.698, 32.2259, 0.66 ) }
    dend_115 { pt3dadd( 45.957, 226.765, 32.2484, 0.66 ) }
    dend_115 { pt3dadd( 45.8623, 227.074, 32.3438, 0.66 ) }
    dend_115 { pt3dadd( 45.202, 229.18, 32.9131, 0.44 ) }
    dend_115 { pt3dadd( 44.884, 230.046, 33.1113, 0.44 ) }
    dend_115 { pt3dadd( 44.8251, 230.189, 33.1369, 0.44 ) }
    dend_115 { pt3dadd( 44.2066, 231.609, 33.3744, 1.33 ) }
    dend_115 { pt3dadd( 43.9125, 232.273, 33.4749, 1.47 ) }
    dend_115 { pt3dadd( 43.6212, 232.904, 33.5504, 0.88 ) }
    dend_115 { pt3dadd( 42.7776, 234.513, 33.6137, 0.59 ) }
    dend_115 { pt3dadd( 42.466, 235.057, 33.6426, 1.03 ) }
    dend_115 { pt3dadd( 42.1693, 235.527, 33.6738, 0.74 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 15/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 58.172, 13.1078, 33.7988, 0.22 ) }
    dend_107 { pt3dadd( 58.5564, 12.8297, 33.9494, 0.22 ) }
    dend_107 { pt3dadd( 58.98, 12.5232, 34.1154, 0.22 ) }
    dend_107 { pt3dadd( 59.5044, 12.1438, 34.3209, 0.22 ) }
    dend_107 { pt3dadd( 59.5758, 12.0921, 34.3489, 0.22 ) }
    dend_107 { pt3dadd( 60.2484, 11.6055, 34.6125, 0.44 ) }
    dend_107 { pt3dadd( 70.1365, 7.13393, 38.3308, 0.44 ) }
    dend_107 { pt3dadd( 79.542, 2.17344, 42.6777, 0.44 ) }
    dend_107 { pt3dadd( 89.3114, -2.54957, 46.4291, 0.44 ) }
    dend_107 { pt3dadd( 99.0654, -7.98071, 49.2608, 0.44 ) }
    dend_107 { pt3dadd( 108.646, -13.7676, 52.0521, 0.44 ) }
    dend_107 { pt3dadd( 118.716, -18.9969, 54.0018, 0.44 ) }
    dend_107 { pt3dadd( 128.585, -23.1304, 58.0965, 0.44 ) }
    dend_107 { pt3dadd( 138.175, -27.3372, 62.7433, 0.44 ) }
    dend_107 { pt3dadd( 146.976, -32.8651, 67.6844, 0.44 ) }
    dend_107 { pt3dadd( 155.87, -38.6064, 72.2293, 0.44 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 31/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 58.172, 13.1078, 33.7988, 0.37 ) }
    dend_106 { pt3dadd( 58.2172, 13.208, 33.8283, 0.37 ) }
    dend_106 { pt3dadd( 58.3965, 13.6054, 33.9454, 0.37 ) }
    dend_106 { pt3dadd( 58.728, 14.3402, 34.1618, 0.37 ) }
    dend_106 { pt3dadd( 60.552, 24.8458, 35.8144, 0.37 ) }
    dend_106 { pt3dadd( 63.3546, 35.1904, 36.1143, 0.37 ) }
    dend_106 { pt3dadd( 65.3576, 45.5763, 38.2592, 0.37 ) }
    dend_106 { pt3dadd( 67.3831, 55.9852, 40.2489, 0.37 ) }
    dend_106 { pt3dadd( 70.952, 65.9699, 41.8173, 0.37 ) }
    dend_106 { pt3dadd( 73.08, 76.2732, 44.221, 0.37 ) }
    dend_106 { pt3dadd( 75.4663, 86.735, 44.7519, 0.37 ) }
    dend_106 { pt3dadd( 78.4371, 96.7786, 47.2119, 0.37 ) }
    dend_106 { pt3dadd( 82.5234, 105.895, 51.082, 0.37 ) }
    dend_106 { pt3dadd( 86.9246, 115.338, 53.4783, 0.37 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 45/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 113.802, -67.5235, 14.3235, 0.44 ) }
    dend_102 { pt3dadd( 122.684, -77.5414, 12.6485, 0.44 ) }
    dend_102 { pt3dadd( 133.008, -85.6268, 9.80226, 0.44 ) }
    dend_102 { pt3dadd( 141.836, -95.3131, 6.48583, 0.44 ) }
    dend_102 { pt3dadd( 149.449, -106.399, 4.85251, 0.44 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 50/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 113.802, -67.5235, 14.3235, 0.29 ) }
    dend_101 { pt3dadd( 123.776, -77.2106, 11.2541, 0.44 ) }
    dend_101 { pt3dadd( 132.387, -87.2686, 5.76858, 0.44 ) }
    dend_101 { pt3dadd( 140.931, -96.2004, -1.47184, 0.44 ) }
    dend_101 { pt3dadd( 150.038, -103.69, -9.51003, 0.44 ) }
    // Section: dend_96, id: dend_96, parent: dend_91 (entry count 55/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -37.8892, 43.3435, 25.66, 0.29 ) }
    dend_96 { pt3dadd( -38.9134, 44.5018, 24.9472, 0.29 ) }
    dend_96 { pt3dadd( -39.3064, 45.0279, 24.6471, 0.29 ) }
    dend_96 { pt3dadd( -39.3523, 45.0893, 24.612, 0.29 ) }
    dend_96 { pt3dadd( -39.9371, 45.8722, 24.1654, 0.29 ) }
    dend_96 { pt3dadd( -40.3183, 46.3825, 23.8743, 0.29 ) }
    dend_96 { pt3dadd( -40.3584, 46.4363, 23.8436, 0.29 ) }
    dend_96 { pt3dadd( -40.7533, 47.065, 23.4201, 0.29 ) }
    dend_96 { pt3dadd( -46.1332, 55.4489, 19.879, 0.29 ) }
    dend_96 { pt3dadd( -52.0247, 62.652, 14.9953, 0.29 ) }
    dend_96 { pt3dadd( -57.8482, 70.948, 12.0433, 0.29 ) }
    dend_96 { pt3dadd( -62.7831, 80.1635, 10.2691, 0.29 ) }
    dend_96 { pt3dadd( -68.3559, 89.0866, 9.25982, 0.29 ) }
    dend_96 { pt3dadd( -75.3418, 96.56, 6.93509, 0.29 ) }
    dend_96 { pt3dadd( -82.1867, 103.828, 3.7134, 0.29 ) }
    dend_96 { pt3dadd( -90.0206, 110.625, 2.61474, 0.29 ) }
    dend_96 { pt3dadd( -97.8461, 117.503, 2.56756, 0.29 ) }
    dend_96 { pt3dadd( -105.471, 124.616, 2.75276, 0.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_91 (entry count 73/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -37.8892, 43.3435, 25.66, 1.11 ) }
    dend_95 { pt3dadd( -38.9145, 43.4987, 26.2515, 1.11 ) }
    dend_95 { pt3dadd( -40.0012, 43.6286, 26.8012, 1.11 ) }
    dend_95 { pt3dadd( -41.4104, 43.7832, 27.6068, 0.52 ) }
    dend_95 { pt3dadd( -42.0249, 43.86, 27.9609, 0.52 ) }
    dend_95 { pt3dadd( -42.0836, 43.8678, 27.9951, 0.52 ) }
    dend_95 { pt3dadd( -43.2096, 44.0368, 28.6119, 0.52 ) }
    dend_95 { pt3dadd( -43.3091, 44.0547, 28.6567, 0.52 ) }
    dend_95 { pt3dadd( -44.6066, 44.3658, 29.196, 0.52 ) }
    dend_95 { pt3dadd( -45.1997, 44.5506, 29.3758, 0.52 ) }
    dend_95 { pt3dadd( -45.2518, 44.575, 29.389, 0.52 ) }
    dend_95 { pt3dadd( -46.1146, 45.1503, 29.6105, 0.52 ) }
    dend_95 { pt3dadd( -46.3526, 45.3397, 29.664, 0.52 ) }
    dend_95 { pt3dadd( -47.092, 45.937, 29.7934, 0.52 ) }
    dend_95 { pt3dadd( -47.5702, 46.2992, 29.8438, 0.52 ) }
    dend_95 { pt3dadd( -48.4394, 46.8592, 29.9541, 0.52 ) }
    dend_95 { pt3dadd( -49.6079, 47.4331, 30.1399, 0.52 ) }
    dend_95 { pt3dadd( -50.5634, 47.6906, 30.3466, 0.52 ) }
    dend_95 { pt3dadd( -50.6508, 47.6683, 30.3988, 0.52 ) }
    dend_95 { pt3dadd( -51.1646, 47.2832, 31.0619, 0.81 ) }
    dend_95 { pt3dadd( -51.5986, 46.8435, 31.8048, 0.81 ) }
    dend_95 { pt3dadd( -51.9369, 46.4547, 32.4442, 0.37 ) }
    dend_95 { pt3dadd( -52.1633, 46.1725, 32.9084, 0.37 ) }
    dend_95 { pt3dadd( -53.3284, 44.8239, 35.3261, 0.37 ) }
    dend_95 { pt3dadd( -53.9812, 44.2037, 36.6092, 0.37 ) }
    dend_95 { pt3dadd( -54.0131, 44.1823, 36.6665, 0.37 ) }
    dend_95 { pt3dadd( -54.56, 43.9605, 37.4996, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_95 { pt3dadd( -54.7184, 43.9332, 37.643, 0.37 ) }
    dend_95 { pt3dadd( -55.5761, 43.8923, 37.9404, 0.37 ) }
    dend_95 { pt3dadd( -55.8801, 43.8915, 37.94, 0.37 ) }
    dend_95 { pt3dadd( -56.6812, 43.8876, 37.8631, 0.37 ) }
    dend_95 { pt3dadd( -56.827, 43.8872, 37.8483, 0.37 ) }
    dend_95 { pt3dadd( -58.3472, 43.8877, 37.6787, 0.37 ) }
    dend_95 { pt3dadd( -59.0578, 43.8918, 37.5937, 0.37 ) }
    dend_95 { pt3dadd( -59.6343, 43.9015, 37.5166, 0.37 ) }
    dend_95 { pt3dadd( -59.7795, 43.8989, 37.4965, 0.37 ) }
    dend_95 { pt3dadd( -68.8285, 44.816, 41.0665, 0.37 ) }
    dend_95 { pt3dadd( -77.7944, 47.3043, 44.1086, 0.37 ) }
    dend_95 { pt3dadd( -86.2957, 49.093, 48.5928, 0.37 ) }
    dend_95 { pt3dadd( -94.1971, 51.119, 53.9848, 0.37 ) }
    dend_95 { pt3dadd( -102.17, 54.4087, 58.643, 0.37 ) }
    dend_95 { pt3dadd( -109.919, 58.1566, 63.3585, 0.37 ) }
    dend_95 { pt3dadd( -117.639, 63.0973, 66.9969, 0.37 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 16/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -37.8892, 43.3435, 25.66, 1.33 ) }
    dend_92 { pt3dadd( -37.8844, 43.4206, 25.6515, 1.33 ) }
    dend_92 { pt3dadd( -37.87, 44.0818, 25.5768, 1.11 ) }
    dend_92 { pt3dadd( -37.9219, 45.0811, 25.4599, 0.88 ) }
    dend_92 { pt3dadd( -38.0424, 46.5411, 25.2867, 0.88 ) }
    dend_92 { pt3dadd( -38.0504, 46.6179, 25.2775, 0.88 ) }
    dend_92 { pt3dadd( -38.2797, 48.6781, 25.0944, 0.74 ) }
    dend_92 { pt3dadd( -38.2949, 48.7948, 25.0861, 0.74 ) }
    dend_92 { pt3dadd( -38.4981, 50.3023, 25.0002, 0.74 ) }
    dend_92 { pt3dadd( -38.5076, 50.3793, 24.997, 0.74 ) }
    dend_92 { pt3dadd( -38.7044, 52.7322, 24.8391, 0.74 ) }
    dend_92 { pt3dadd( -38.7959, 54.2794, 24.6951, 0.74 ) }
    dend_92 { pt3dadd( -38.7984, 54.3567, 24.6865, 0.74 ) }
    dend_92 { pt3dadd( -38.8185, 55.5233, 24.5249, 0.74 ) }
    dend_92 { pt3dadd( -38.8184, 56.7385, 24.278, 0.74 ) }
    dend_92 { pt3dadd( -38.8179, 58.6344, 23.7796, 0.74 ) }
    dend_92 { pt3dadd( -38.8088, 60.2947, 23.2093, 0.74 ) }
    dend_92 { pt3dadd( -38.8088, 60.367, 23.1816, 0.74 ) }
    dend_92 { pt3dadd( -38.8062, 60.9771, 22.9147, 1.03 ) }
    dend_92 { pt3dadd( -38.7536, 62.3598, 22.2547, 0.81 ) }
    dend_92 { pt3dadd( -38.7453, 62.4277, 22.219, 0.81 ) }
    dend_92 { pt3dadd( -38.5469, 63.2592, 21.7547, 0.81 ) }
    dend_92 { pt3dadd( -37.9307, 65.1507, 20.6288, 0.59 ) }
    dend_92 { pt3dadd( -37.4066, 66.6363, 19.7608, 0.59 ) }
    dend_92 { pt3dadd( -37.01, 67.6774, 19.1635, 0.59 ) }
    dend_92 { pt3dadd( -36.4595, 69.0513, 18.4539, 0.59 ) }
    dend_92 { pt3dadd( -35.8186, 70.672, 17.661, 0.59 ) }
    dend_92 { pt3dadd( -35.7962, 70.7284, 17.635, 0.59 ) }
    dend_92 { pt3dadd( -35.1996, 72.2855, 17.1655, 0.59 ) }
    dend_92 { pt3dadd( -35.1725, 72.3839, 17.1634, 0.59 ) }
    dend_92 { pt3dadd( -34.9629, 73.8912, 17.5351, 0.59 ) }
    dend_92 { pt3dadd( -34.9587, 74.385, 17.7526, 0.81 ) }
    dend_92 { pt3dadd( -35.0101, 74.9612, 18.0391, 0.81 ) }
    dend_92 { pt3dadd( -35.3593, 77.6189, 19.3826, 0.81 ) }
    dend_92 { pt3dadd( -35.513, 78.5306, 19.8545, 0.81 ) }
    dend_92 { pt3dadd( -35.7067, 79.6372, 20.3627, 0.74 ) }
    dend_92 { pt3dadd( -35.9039, 80.7916, 20.8491, 0.74 ) }
    dend_92 { pt3dadd( -36.1556, 82.4944, 21.4912, 0.74 ) }
    dend_92 { pt3dadd( -36.1637, 82.5573, 21.5098, 0.74 ) }
    dend_92 { pt3dadd( -36.3404, 84.1715, 21.785, 0.74 ) }
    dend_92 { pt3dadd( -36.4718, 85.6645, 21.9492, 0.74 ) }
    dend_92 { pt3dadd( -36.5378, 86.7221, 21.9925, 1.03 ) }
    dend_92 { pt3dadd( -36.5652, 87.3653, 21.9988, 1.03 ) }
    dend_92 { pt3dadd( -36.6311, 88.5869, 21.9685, 0.52 ) }
    dend_92 { pt3dadd( -36.7793, 90.1405, 21.8656, 0.52 ) }
    dend_92 { pt3dadd( -37.0151, 91.6467, 21.6879, 0.52 ) }
    dend_92 { pt3dadd( -37.1971, 92.4461, 21.6119, 0.52 ) }
    dend_92 { pt3dadd( -37.2465, 92.622, 21.5994, 0.52 ) }
    dend_92 { pt3dadd( -37.8172, 94.4059, 21.5581, 0.52 ) }
    dend_92 { pt3dadd( -38.3244, 95.8622, 21.6052, 0.52 ) }
    dend_92 { pt3dadd( -38.6389, 96.7219, 21.6885, 0.52 ) }
    dend_92 { pt3dadd( -39.1976, 98.4024, 22.0266, 0.52 ) }
    dend_92 { pt3dadd( -39.2869, 98.7087, 22.1034, 0.66 ) }
    dend_92 { pt3dadd( -39.3022, 98.7811, 22.1245, 0.66 ) }
    dend_92 { pt3dadd( -39.3535, 99.6239, 22.4195, 0.66 ) }
    dend_92 { pt3dadd( -39.3298, 99.789, 22.4796, 0.66 ) }
    dend_92 { pt3dadd( -38.8856, 101.369, 23.0321, 0.52 ) }
    dend_92 { pt3dadd( -38.8602, 101.438, 23.0537, 0.52 ) }
    dend_92 { pt3dadd( -38.5706, 102.175, 23.274, 0.88 ) }
    dend_92 { pt3dadd( -38.2831, 102.884, 23.4765, 0.88 ) }
    dend_92 { pt3dadd( -38.0056, 103.574, 23.6526, 0.88 ) }
    dend_92 { pt3dadd( -37.4948, 104.904, 23.9249, 0.29 ) }
    dend_92 { pt3dadd( -37.469, 104.976, 23.9334, 0.29 ) }
    dend_92 { pt3dadd( -37.1014, 106.11, 24.0314, 0.29 ) }
    dend_92 { pt3dadd( -37.0811, 106.184, 24.0342, 0.29 ) }
    dend_92 { pt3dadd( -36.9207, 106.977, 24.0316, 0.29 ) }
    dend_92 { pt3dadd( -36.9129, 107.055, 24.0274, 0.29 ) }
    dend_92 { pt3dadd( -36.8893, 107.881, 23.9858, 1.03 ) }
    dend_92 { pt3dadd( -36.9169, 108.737, 23.9623, 1.03 ) }
    dend_92 { pt3dadd( -37.0156, 109.946, 23.9481, 1.03 ) }
    dend_92 { pt3dadd( -37.1622, 111.323, 23.9462, 0.37 ) }
    dend_92 { pt3dadd( -37.429, 113.317, 23.9643, 0.29 ) }
    dend_92 { pt3dadd( -37.6757, 114.627, 24.1638, 0.29 ) }
    dend_92 { pt3dadd( -37.878, 115.324, 24.3824, 0.52 ) }
    dend_92 { pt3dadd( -37.9866, 115.599, 24.5177, 0.74 ) }
    dend_92 { pt3dadd( -38.0194, 115.664, 24.5642, 0.74 ) }
    dend_92 { pt3dadd( -38.1191, 115.824, 24.7253, 0.74 ) }
    dend_92 { pt3dadd( -39.6394, 117.864, 27.586, 0.52 ) }
    dend_92 { pt3dadd( -40.0343, 118.322, 28.3591, 0.52 ) }
    dend_92 { pt3dadd( -40.0672, 118.359, 28.4287, 0.52 ) }
    dend_92 { pt3dadd( -40.1474, 118.444, 28.6026, 0.88 ) }
    dend_92 { pt3dadd( -40.1755, 118.473, 28.6647, 0.88 ) }
    dend_92 { pt3dadd( -40.5476, 129.565, 28.2934, 0.88 ) }
    dend_92 { pt3dadd( -40.3924, 140.66, 27.792, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_92 { pt3dadd( -39.5043, 151.672, 26.647, 0.88 ) }
    dend_92 { pt3dadd( -38.2755, 162.702, 26.4947, 0.88 ) }
    dend_92 { pt3dadd( -35.9675, 173.359, 28.2671, 0.88 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 3/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -25.6071, -0.437537, 8.08127, 0.59 ) }
    dend_85 { pt3dadd( -27.2829, 0.12234, 7.89635, 0.59 ) }
    dend_85 { pt3dadd( -28.252, 0.44018, 7.82813, 0.59 ) }
    dend_85 { pt3dadd( -30.161, 1.08534, 7.74764, 0.59 ) }
    dend_85 { pt3dadd( -31.3955, 1.50743, 7.71032, 0.52 ) }
    dend_85 { pt3dadd( -33.1335, 2.0915, 7.66515, 0.52 ) }
    dend_85 { pt3dadd( -33.3275, 2.15599, 7.66002, 0.52 ) }
    dend_85 { pt3dadd( -35.0629, 2.78, 7.69256, 0.52 ) }
    dend_85 { pt3dadd( -36.8127, 3.46818, 7.71744, 0.52 ) }
    dend_85 { pt3dadd( -37.0746, 3.58329, 7.716, 0.52 ) }
    dend_85 { pt3dadd( -38.6819, 4.34707, 7.6771, 0.52 ) }
    dend_85 { pt3dadd( -38.7918, 4.40189, 7.67214, 0.52 ) }
    dend_85 { pt3dadd( -39.825, 4.96601, 7.6096, 0.52 ) }
    dend_85 { pt3dadd( -40.0676, 5.12018, 7.59496, 0.52 ) }
    dend_85 { pt3dadd( -41.8711, 6.36793, 7.50927, 0.52 ) }
    dend_85 { pt3dadd( -42.0414, 6.48503, 7.50707, 0.52 ) }
    dend_85 { pt3dadd( -43.2741, 7.34099, 7.53755, 0.52 ) }
    dend_85 { pt3dadd( -43.5486, 7.51451, 7.55366, 0.52 ) }
    dend_85 { pt3dadd( -44.309, 7.90473, 7.62051, 0.52 ) }
    dend_85 { pt3dadd( -44.3884, 7.93802, 7.63078, 0.52 ) }
    dend_85 { pt3dadd( -45.6097, 8.28423, 7.82675, 0.52 ) }
    dend_85 { pt3dadd( -45.6914, 8.30967, 7.83921, 0.52 ) }
    dend_85 { pt3dadd( -46.6215, 8.6194, 7.97501, 0.66 ) }
    dend_85 { pt3dadd( -47.8101, 9.05292, 8.14738, 0.66 ) }
    dend_85 { pt3dadd( -48.892, 9.46123, 8.30259, 0.29 ) }
    dend_85 { pt3dadd( -49.8296, 9.83446, 8.44986, 0.29 ) }
    dend_85 { pt3dadd( -51.418, 10.48, 8.71182, 0.29 ) }
    dend_85 { pt3dadd( -51.72, 10.6018, 8.76359, 0.29 ) }
    dend_85 { pt3dadd( -52.7297, 11.0182, 8.83035, 0.29 ) }
    dend_85 { pt3dadd( -53.673, 11.4299, 8.77075, 0.29 ) }
    dend_85 { pt3dadd( -53.7394, 11.4592, 8.75495, 0.29 ) }
    dend_85 { pt3dadd( -54.6153, 11.849, 8.41408, 0.29 ) }
    dend_85 { pt3dadd( -54.7166, 11.8849, 8.35599, 0.29 ) }
    dend_85 { pt3dadd( -56.8353, 12.6309, 6.9164, 0.29 ) }
    dend_85 { pt3dadd( -57.0368, 12.7207, 6.7748, 0.29 ) }
    dend_85 { pt3dadd( -57.8408, 13.1778, 6.24245, 0.29 ) }
    dend_85 { pt3dadd( -57.9056, 13.2171, 6.2001, 0.29 ) }
    dend_85 { pt3dadd( -58.8895, 13.8842, 5.58535, 0.29 ) }
    dend_85 { pt3dadd( -59.0228, 13.9758, 5.52038, 0.29 ) }
    dend_85 { pt3dadd( -60.6992, 15.1778, 5.19902, 0.29 ) }
    dend_85 { pt3dadd( -61.21, 15.559, 5.09861, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 44/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -76.4597, -39.5759, -60.544, 0.52 ) }
    dend_79 { pt3dadd( -76.739, -40.6138, -64.0074, 0.52 ) }
    dend_79 { pt3dadd( -76.9325, -41.2302, -65.7218, 0.37 ) }
    dend_79 { pt3dadd( -77.0848, -41.6836, -67.1022, 0.37 ) }
    dend_79 { pt3dadd( -77.2525, -43.3709, -71.3085, 0.37 ) }
    dend_79 { pt3dadd( -77.2532, -43.4165, -71.413, 0.37 ) }
    dend_79 { pt3dadd( -77.2817, -43.9895, -72.7976, 0.37 ) }
    dend_79 { pt3dadd( -77.302, -44.1002, -73.1011, 0.37 ) }
    dend_79 { pt3dadd( -77.776, -45.2005, -76.3339, 0.37 ) }
    dend_79 { pt3dadd( -78.1214, -45.8838, -78.3368, 0.37 ) }
    dend_79 { pt3dadd( -78.142, -45.9186, -78.4275, 0.37 ) }
    dend_79 { pt3dadd( -78.8666, -46.861, -81.058, 0.37 ) }
    dend_79 { pt3dadd( -79.13, -47.0822, -81.8168, 0.37 ) }
    dend_79 { pt3dadd( -79.4863, -47.2909, -82.6152, 0.66 ) }
    dend_79 { pt3dadd( -79.7427, -47.4086, -83.0674, 0.66 ) }
    dend_79 { pt3dadd( -81.1347, -47.938, -85.3777, 0.29 ) }
    dend_79 { pt3dadd( -81.4117, -48.0935, -85.9507, 0.29 ) }
    dend_79 { pt3dadd( -82.3175, -48.9271, -88.202, 0.29 ) }
    dend_79 { pt3dadd( -82.4026, -49.0579, -88.4732, 0.29 ) }
    dend_79 { pt3dadd( -82.5976, -49.5055, -89.1824, 0.29 ) }
    dend_79 { pt3dadd( -82.6202, -49.5705, -89.2743, 0.29 ) }
    dend_79 { pt3dadd( -83.0066, -51.5949, -91.4191, 0.29 ) }
    dend_79 { pt3dadd( -83.111, -52.5515, -92.327, 1.18 ) }
    dend_79 { pt3dadd( -83.1726, -53.9397, -93.3392, 1.18 ) }
    dend_79 { pt3dadd( -83.2416, -54.8492, -93.9982, 0.66 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 69/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -76.4597, -39.5759, -60.544, 1.18 ) }
    dend_76 { pt3dadd( -77.3023, -39.768, -60.5298, 0.59 ) }
    dend_76 { pt3dadd( -78.592, -40.0904, -60.5288, 0.59 ) }
    dend_76 { pt3dadd( -79.5035, -40.3377, -60.5983, 0.96 ) }
    dend_76 { pt3dadd( -80.6503, -40.6378, -60.7386, 0.96 ) }
    dend_76 { pt3dadd( -81.8124, -40.9021, -60.9109, 0.52 ) }
    dend_76 { pt3dadd( -83.0404, -41.156, -61.1092, 0.52 ) }
    dend_76 { pt3dadd( -83.1414, -41.1752, -61.1318, 0.52 ) }
    dend_76 { pt3dadd( -84.2469, -41.3909, -61.4545, 0.52 ) }
    dend_76 { pt3dadd( -84.8797, -41.5209, -61.6724, 0.29 ) }
    dend_76 { pt3dadd( -85.6363, -41.6714, -61.9669, 0.29 ) }
    dend_76 { pt3dadd( -86.5877, -41.8592, -62.3401, 0.29 ) }
    dend_76 { pt3dadd( -86.646, -41.8711, -62.3632, 0.29 ) }
    dend_76 { pt3dadd( -87.6098, -42.0871, -62.7091, 0.88 ) }
    dend_76 { pt3dadd( -88.7491, -42.3773, -63.0406, 0.88 ) }
    dend_76 { pt3dadd( -88.8677, -42.4136, -63.0714, 0.88 ) }
    dend_76 { pt3dadd( -89.4617, -42.6255, -63.2151, 0.88 ) }
    dend_76 { pt3dadd( -89.5403, -42.6536, -63.2323, 0.88 ) }
    dend_76 { pt3dadd( -90.2099, -42.8863, -63.3412, 0.52 ) }
    dend_76 { pt3dadd( -90.8782, -43.1071, -63.41, 0.44 ) }
    dend_76 { pt3dadd( -92.1819, -43.5155, -63.5848, 0.44 ) }
    dend_76 { pt3dadd( -92.7887, -43.7001, -63.6815, 1.25 ) }
    dend_76 { pt3dadd( -92.8888, -43.7298, -63.6959, 1.25 ) }
    dend_76 { pt3dadd( -93.9591, -44.0464, -63.8284, 1.47 ) }
    dend_76 { pt3dadd( -94.1111, -44.093, -63.844, 1.47 ) }
    dend_76 { pt3dadd( -95.1967, -44.4011, -63.9291, 1.11 ) }
    dend_76 { pt3dadd( -96.0462, -44.6036, -63.9674, 0.81 ) }
    dend_76 { pt3dadd( -96.8522, -44.7539, -63.9743, 0.37 ) }
    dend_76 { pt3dadd( -97.5134, -44.8542, -63.975, 0.29 ) }
    dend_76 { pt3dadd( -98.3167, -44.954, -63.9556, 0.15 ) }
    dend_76 { pt3dadd( -98.9555, -45.0275, -63.9228, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_76 { pt3dadd( -99.3752, -45.0752, -63.8862, 0.96 ) }
    dend_76 { pt3dadd( -100.233, -45.1821, -63.8392, 0.96 ) }
    dend_76 { pt3dadd( -100.845, -45.278, -63.8304, 0.96 ) }
    dend_76 { pt3dadd( -101.743, -45.4502, -63.8187, 0.37 ) }
    dend_76 { pt3dadd( -101.815, -45.468, -63.8164, 0.37 ) }
    dend_76 { pt3dadd( -102.525, -45.6746, -63.7839, 0.37 ) }
    dend_76 { pt3dadd( -103.463, -45.9814, -63.7651, 0.66 ) }
    dend_76 { pt3dadd( -104.264, -46.2694, -63.7688, 0.44 ) }
    dend_76 { pt3dadd( -105.013, -46.557, -63.7995, 0.74 ) }
    dend_76 { pt3dadd( -105.842, -46.8499, -63.8577, 0.74 ) }
    dend_76 { pt3dadd( -106.371, -47.0263, -63.8993, 0.59 ) }
    dend_76 { pt3dadd( -107.378, -47.3674, -63.9897, 0.66 ) }
    dend_76 { pt3dadd( -108.399, -47.7209, -64.1198, 1.03 ) }
    dend_76 { pt3dadd( -109.077, -47.9729, -64.2265, 1.03 ) }
    dend_76 { pt3dadd( -110.314, -48.4614, -64.4951, 0.59 ) }
    dend_76 { pt3dadd( -111.072, -48.7733, -64.715, 0.44 ) }
    dend_76 { pt3dadd( -112.01, -49.1744, -65.0206, 0.44 ) }
    dend_76 { pt3dadd( -112.781, -49.5119, -65.3347, 0.88 ) }
    dend_76 { pt3dadd( -113.522, -49.8475, -65.7015, 0.88 ) }
    dend_76 { pt3dadd( -114.702, -50.4068, -66.3481, 0.52 ) }
    dend_76 { pt3dadd( -115.81, -50.9554, -67.0236, 0.52 ) }
    dend_76 { pt3dadd( -115.879, -50.9848, -67.0636, 0.52 ) }
    dend_76 { pt3dadd( -117.205, -51.4588, -67.7643, 0.96 ) }
    dend_76 { pt3dadd( -117.981, -51.6617, -68.0986, 0.52 ) }
    dend_76 { pt3dadd( -118.86, -51.7863, -68.4248, 0.37 ) }
    dend_76 { pt3dadd( -119.14, -51.8018, -68.5064, 0.37 ) }
    dend_76 { pt3dadd( -120.757, -51.7682, -68.8947, 0.37 ) }
    dend_76 { pt3dadd( -120.841, -51.7639, -68.9115, 0.37 ) }
    dend_76 { pt3dadd( -122.263, -51.6409, -69.1377, 0.37 ) }
    dend_76 { pt3dadd( -123.434, -51.5287, -69.353, 0.37 ) }
    dend_76 { pt3dadd( -123.507, -51.5221, -69.3679, 0.37 ) }
    dend_76 { pt3dadd( -125.041, -51.4697, -69.6327, 0.37 ) }
    dend_76 { pt3dadd( -126.75, -51.5049, -69.8834, 0.37 ) }
    dend_76 { pt3dadd( -126.835, -51.5121, -69.8917, 0.37 ) }
    dend_76 { pt3dadd( -128.475, -51.8342, -69.8234, 0.37 ) }
    dend_76 { pt3dadd( -128.546, -51.853, -69.8091, 0.37 ) }
    dend_76 { pt3dadd( -129.994, -52.304, -69.347, 1.18 ) }
    dend_76 { pt3dadd( -130.058, -52.3282, -69.3168, 1.18 ) }
    dend_76 { pt3dadd( -130.723, -52.6049, -68.9375, 1.18 ) }
    dend_76 { pt3dadd( -132.184, -53.227, -68.0907, 0.44 ) }
    dend_76 { pt3dadd( -132.803, -53.4947, -67.7246, 0.22 ) }
    dend_76 { pt3dadd( -133.836, -53.9413, -67.1205, 0.22 ) }
    dend_76 { pt3dadd( -134.582, -54.2413, -66.7407, 0.59 ) }
    dend_76 { pt3dadd( -134.717, -54.2957, -66.6744, 0.59 ) }
    dend_76 { pt3dadd( -135.252, -54.5156, -66.4402, 0.59 ) }
    dend_76 { pt3dadd( -135.744, -54.7255, -66.2714, 0.59 ) }
    dend_76 { pt3dadd( -137.366, -55.5317, -65.5993, 0.44 ) }
    dend_76 { pt3dadd( -138.462, -56.1523, -65.1029, 0.15 ) }
    dend_76 { pt3dadd( -138.521, -56.1888, -65.0767, 0.15 ) }
    dend_76 { pt3dadd( -139.475, -56.8058, -64.6662, 0.15 ) }
    dend_76 { pt3dadd( -139.998, -57.1568, -64.4536, 0.52 ) }
    dend_76 { pt3dadd( -141.093, -57.8913, -64.0797, 0.88 ) }
    dend_76 { pt3dadd( -141.97, -58.4674, -63.8704, 0.52 ) }
    dend_76 { pt3dadd( -142.651, -58.8855, -63.7638, 0.29 ) }
    dend_76 { pt3dadd( -142.717, -58.9195, -63.7603, 0.29 ) }
    dend_76 { pt3dadd( -143.235, -59.1534, -63.7649, 0.29 ) }
    dend_76 { pt3dadd( -144.122, -59.4729, -63.8712, 0.29 ) }
    dend_76 { pt3dadd( -144.192, -59.4886, -63.8911, 0.29 ) }
    dend_76 { pt3dadd( -145.682, -59.5862, -64.3962, 0.29 ) }
    dend_76 { pt3dadd( -146.092, -59.5766, -64.5621, 1.11 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 60/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -66.3964, -18.8425, 14.1504, 0.44 ) }
    dend_71 { pt3dadd( -74.1559, -19.1423, 19.5802, 0.44 ) }
    dend_71 { pt3dadd( -81.3959, -18.5024, 25.703, 0.44 ) }
    dend_71 { pt3dadd( -89.1827, -19.1183, 31.057, 0.44 ) }
    dend_71 { pt3dadd( -97.1182, -17.3838, 36.0225, 0.44 ) }
    dend_71 { pt3dadd( -105.192, -14.5438, 40.2529, 0.44 ) }
    dend_71 { pt3dadd( -112.992, -12.0931, 45.1781, 0.44 ) }
    dend_71 { pt3dadd( -121.315, -9.64102, 49.116, 0.44 ) }
    dend_71 { pt3dadd( -128.969, -4.78895, 52.3321, 0.44 ) }
    dend_71 { pt3dadd( -137.332, -0.542183, 54.1866, 0.44 ) }
    dend_71 { pt3dadd( -146.219, 2.64225, 55.3497, 0.44 ) }
    dend_71 { pt3dadd( -154.933, 5.58604, 57.8177, 0.44 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 72/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -66.3964, -18.8425, 14.1504, 0.29 ) }
    dend_68 { pt3dadd( -74.2854, -19.0603, 19.7302, 0.44 ) }
    dend_68 { pt3dadd( -82.8532, -19.4905, 24.16, 0.44 ) }
    dend_68 { pt3dadd( -91.8788, -19.5086, 27.588, 0.44 ) }
    dend_68 { pt3dadd( -101.368, -19.8688, 29.2842, 0.44 ) }
    dend_68 { pt3dadd( -110.524, -21.4584, 31.8727, 0.44 ) }
    dend_68 { pt3dadd( -119.904, -23.6956, 32.4693, 0.44 ) }
    dend_68 { pt3dadd( -128.558, -27.9045, 33.6923, 0.44 ) }
    dend_68 { pt3dadd( -136.605, -32.9952, 35.6405, 0.44 ) }
    dend_68 { pt3dadd( -144.357, -37.6241, 39.1464, 0.44 ) }
    dend_68 { pt3dadd( -153.205, -40.2782, 41.9522, 0.44 ) }
    // Section: dend_66, id: dend_66, parent: dend_54 (entry count 83/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -115.308, -72.8588, -34.2893, 1.11 ) }
    dend_66 { pt3dadd( -115.243, -73.2118, -34.466, 1.11 ) }
    dend_66 { pt3dadd( -114.996, -74.6746, -35.2094, 0.52 ) }
    dend_66 { pt3dadd( -114.891, -75.3918, -35.5727, 0.22 ) }
    dend_66 { pt3dadd( -114.697, -76.779, -36.2747, 0.22 ) }
    dend_66 { pt3dadd( -114.688, -76.8456, -36.308, 0.22 ) }
    dend_66 { pt3dadd( -114.491, -78.2943, -36.9796, 0.22 ) }
    dend_66 { pt3dadd( -114.48, -78.3849, -37.0176, 0.22 ) }
    dend_66 { pt3dadd( -114.374, -79.0439, -37.2675, 1.11 ) }
    dend_66 { pt3dadd( -114.357, -79.1231, -37.2949, 1.11 ) }
    dend_66 { pt3dadd( -114.07, -80.0635, -37.5952, 1.11 ) }
    dend_66 { pt3dadd( -113.573, -81.4767, -38.0138, 0.52 ) }
    dend_66 { pt3dadd( -112.986, -82.8434, -38.3784, 0.29 ) }
    dend_66 { pt3dadd( -112.413, -84.0307, -38.6848, 0.29 ) }
    dend_66 { pt3dadd( -112.385, -84.0858, -38.6987, 0.29 ) }
    dend_66 { pt3dadd( -111.87, -85.0144, -38.9269, 0.29 ) }
    dend_66 { pt3dadd( -111.83, -85.0752, -38.9411, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_66 { pt3dadd( -111.127, -85.8971, -39.1382, 0.29 ) }
    dend_66 { pt3dadd( -111.065, -85.9524, -39.1482, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 2/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -115.308, -72.8588, -34.2893, 0.74 ) }
    dend_55 { pt3dadd( -115.377, -72.8804, -34.3056, 0.74 ) }
    dend_55 { pt3dadd( -115.447, -72.9009, -34.3176, 0.74 ) }
    dend_55 { pt3dadd( -117.149, -73.3712, -34.5555, 0.59 ) }
    dend_55 { pt3dadd( -118.512, -73.7461, -34.7072, 0.44 ) }
    dend_55 { pt3dadd( -120.264, -74.2279, -34.9023, 0.44 ) }
    dend_55 { pt3dadd( -120.335, -74.2475, -34.9102, 0.44 ) }
    dend_55 { pt3dadd( -121.418, -74.5332, -35.0259, 0.44 ) }
    dend_55 { pt3dadd( -121.5, -74.553, -35.0339, 0.44 ) }
    dend_55 { pt3dadd( -123.054, -74.7987, -35.1345, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_32 (entry count 12/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -9.34294, 146.267, 13.8768, 0.15 ) }
    dend_46 { pt3dadd( -9.45268, 146.413, 13.9031, 0.15 ) }
    dend_46 { pt3dadd( -10.1934, 147.478, 14.059, 0.81 ) }
    dend_46 { pt3dadd( -10.7192, 148.277, 14.2227, 0.22 ) }
    dend_46 { pt3dadd( -11.3468, 149.245, 14.4288, 0.22 ) }
    dend_46 { pt3dadd( -11.9156, 150.128, 14.6158, 0.22 ) }
    dend_46 { pt3dadd( -11.9469, 150.177, 14.6259, 0.22 ) }
    dend_46 { pt3dadd( -12.7574, 151.49, 14.8765, 0.22 ) }
    dend_46 { pt3dadd( -13.53, 152.77, 15.1225, 0.22 ) }
    dend_46 { pt3dadd( -13.8514, 153.32, 15.2663, 0.22 ) }
    dend_46 { pt3dadd( -13.997, 153.577, 15.3522, 0.66 ) }
    dend_46 { pt3dadd( -14.1944, 153.93, 15.4645, 0.81 ) }
    dend_46 { pt3dadd( -14.2805, 154.081, 15.5133, 0.29 ) }
    dend_46 { pt3dadd( -14.6838, 154.807, 15.7681, 0.37 ) }
    dend_46 { pt3dadd( -14.84, 155.095, 15.8503, 0.37 ) }
    dend_46 { pt3dadd( -15.2825, 155.814, 16.0992, 0.29 ) }
    dend_46 { pt3dadd( -15.752, 156.408, 16.3398, 0.29 ) }
    dend_46 { pt3dadd( -15.8013, 156.462, 16.3631, 0.29 ) }
    dend_46 { pt3dadd( -16.3149, 156.984, 16.5874, 0.29 ) }
    dend_46 { pt3dadd( -16.9901, 157.601, 16.8535, 0.29 ) }
    dend_46 { pt3dadd( -18.2183, 158.62, 17.3304, 0.29 ) }
    dend_46 { pt3dadd( -19.5417, 159.587, 17.8576, 0.29 ) }
    dend_46 { pt3dadd( -19.7584, 159.73, 17.9476, 0.59 ) }
    dend_46 { pt3dadd( -19.806, 159.758, 17.965, 0.59 ) }
    dend_46 { pt3dadd( -20.0677, 159.888, 18.052, 0.59 ) }
    dend_46 { pt3dadd( -20.1254, 159.913, 18.0705, 0.59 ) }
    dend_46 { pt3dadd( -21.0271, 160.299, 18.3023, 0.29 ) }
    dend_46 { pt3dadd( -21.079, 160.321, 18.3141, 0.29 ) }
    dend_46 { pt3dadd( -22.3006, 160.794, 18.5041, 0.29 ) }
    dend_46 { pt3dadd( -23.2004, 161.103, 18.5667, 0.29 ) }
    dend_46 { pt3dadd( -23.5964, 161.213, 18.586, 0.59 ) }
    dend_46 { pt3dadd( -23.8367, 161.255, 18.5953, 0.88 ) }
    dend_46 { pt3dadd( -24.3312, 161.288, 18.592, 0.88 ) }
    dend_46 { pt3dadd( -25.1724, 161.294, 18.5818, 0.44 ) }
    dend_46 { pt3dadd( -26.0123, 161.235, 18.5957, 0.29 ) }
    dend_46 { pt3dadd( -27.1365, 161.087, 18.6129, 0.22 ) }
    dend_46 { pt3dadd( -28.5267, 160.831, 18.6681, 0.22 ) }
    dend_46 { pt3dadd( -30.0692, 160.492, 18.774, 0.22 ) }
    dend_46 { pt3dadd( -30.1534, 160.472, 18.7828, 0.22 ) }
    dend_46 { pt3dadd( -31.2744, 160.157, 18.9408, 0.22 ) }
    dend_46 { pt3dadd( -32.021, 159.92, 19.0476, 0.37 ) }
    dend_46 { pt3dadd( -32.9095, 159.599, 19.1438, 0.37 ) }
    dend_46 { pt3dadd( -33.0179, 159.553, 19.1582, 0.37 ) }
    dend_46 { pt3dadd( -33.4285, 159.337, 19.2487, 0.37 ) }
    dend_46 { pt3dadd( -33.486, 159.307, 19.2602, 0.37 ) }
    dend_46 { pt3dadd( -40.059, 163.738, 21.6527, 0.37 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.34294, 146.267, 13.8768, 0.66 ) }
    dend_33 { pt3dadd( -9.25625, 146.637, 13.925, 0.66 ) }
    dend_33 { pt3dadd( -9.01955, 147.641, 14.0297, 0.52 ) }
    dend_33 { pt3dadd( -8.64996, 149.07, 14.1747, 0.52 ) }
    dend_33 { pt3dadd( -8.62912, 149.147, 14.1825, 0.52 ) }
    dend_33 { pt3dadd( -8.07165, 151.275, 14.3855, 0.52 ) }
    dend_33 { pt3dadd( -7.54362, 153.314, 14.5712, 0.66 ) }
    dend_33 { pt3dadd( -7.09107, 155.07, 14.7181, 0.66 ) }
    dend_33 { pt3dadd( -6.7829, 156.405, 14.8034, 0.66 ) }
    dend_33 { pt3dadd( -6.63185, 157.162, 14.8299, 1.47 ) }
    dend_33 { pt3dadd( -6.45086, 158.252, 14.8401, 1.77 ) }
    dend_33 { pt3dadd( -6.36085, 158.951, 14.8213, 1.77 ) }
    dend_33 { pt3dadd( -6.35595, 159.032, 14.8191, 1.77 ) }
    dend_33 { pt3dadd( -6.35146, 160.206, 14.7544, 1.25 ) }
    dend_33 { pt3dadd( -6.41518, 161.934, 14.6404, 0.52 ) }
    dend_33 { pt3dadd( -6.44871, 162.951, 14.5857, 0.74 ) }
    dend_33 { pt3dadd( -6.45057, 163.032, 14.5835, 0.74 ) }
    dend_33 { pt3dadd( -6.46756, 164.135, 14.5776, 0.96 ) }
    dend_33 { pt3dadd( -6.46576, 164.297, 14.5814, 0.96 ) }
    dend_33 { pt3dadd( -6.40707, 165.313, 14.6461, 0.96 ) }
    dend_33 { pt3dadd( -6.28917, 166.588, 14.7732, 0.52 ) }
    dend_33 { pt3dadd( -6.10398, 168.136, 14.9516, 0.52 ) }
    dend_33 { pt3dadd( -6.06684, 168.386, 14.9833, 0.52 ) }
    dend_33 { pt3dadd( -5.94004, 169.091, 15.0717, 0.96 ) }
    dend_33 { pt3dadd( -5.75778, 170.141, 15.1906, 1.18 ) }
    dend_33 { pt3dadd( -5.61558, 171.037, 15.2549, 0.96 ) }
    dend_33 { pt3dadd( -5.48892, 172.159, 15.2849, 0.66 ) }
    dend_33 { pt3dadd( -5.40688, 173.233, 15.2679, 0.52 ) }
    dend_33 { pt3dadd( -5.36304, 174.205, 15.2278, 0.52 ) }
    dend_33 { pt3dadd( -5.34378, 175.711, 15.1328, 0.52 ) }
    dend_33 { pt3dadd( -5.36248, 177.301, 15.007, 0.66 ) }
    dend_33 { pt3dadd( -5.47638, 180.017, 14.7579, 0.66 ) }
    dend_33 { pt3dadd( -5.55292, 181.196, 14.6437, 1.25 ) }
    dend_33 { pt3dadd( -5.64996, 182.45, 14.5262, 1.4 ) }
    dend_33 { pt3dadd( -5.74508, 183.648, 14.4278, 1.03 ) }
    dend_33 { pt3dadd( -5.80307, 184.572, 14.3657, 0.66 ) }
    dend_33 { pt3dadd( -5.86833, 185.753, 14.3211, 0.44 ) }
    dend_33 { pt3dadd( -5.87065, 185.846, 14.3189, 0.44 ) }
    dend_33 { pt3dadd( -5.86293, 186.54, 14.3261, 0.44 ) }
    dend_33 { pt3dadd( -5.85475, 186.632, 14.3295, 0.44 ) }
    dend_33 { pt3dadd( -5.74681, 187.19, 14.3676, 0.66 ) }
    dend_33 { pt3dadd( -5.72514, 187.268, 14.3721, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_33 { pt3dadd( -5.51855, 187.953, 14.4001, 0.96 ) }
    dend_33 { pt3dadd( -5.4865, 188.062, 14.4039, 0.96 ) }
    dend_33 { pt3dadd( -5.17127, 189.169, 14.4324, 0.96 ) }
    dend_33 { pt3dadd( -5.14676, 189.258, 14.4342, 0.96 ) }
    dend_33 { pt3dadd( -4.79728, 190.622, 14.4492, 0.66 ) }
    dend_33 { pt3dadd( -4.43591, 192.104, 14.4605, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -27.9825, 147.687, -24.8792, 0.22 ) }
    dend_31 { pt3dadd( -28.8312, 147.124, -24.7297, 0.22 ) }
    dend_31 { pt3dadd( -29.5468, 146.65, -24.6035, 0.22 ) }
    dend_31 { pt3dadd( -30.3428, 146.122, -24.4633, 0.22 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -27.9825, 147.687, -24.8792, 0.52 ) }
    dend_30 { pt3dadd( -28.3664, 147.879, -25.4954, 0.52 ) }
    dend_30 { pt3dadd( -29.4335, 148.412, -27.2082, 0.52 ) }
    dend_30 { pt3dadd( -30.2285, 148.809, -28.4842, 0.37 ) }
    dend_30 { pt3dadd( -30.6688, 149.028, -29.1909, 0.37 ) }
    dend_30 { pt3dadd( -32.1258, 149.756, -31.5295, 0.37 ) }
    // Section: dend_146, id: dend_146, parent: dend_144 (entry count 16/100)
    dend_146 { pt3dclear() }
    dend_146 { pt3dadd( 42.2134, -122.818, 137.964, 0.37 ) }
    dend_146 { pt3dadd( 47.0092, -128.127, 144.878, 0.37 ) }
    dend_146 { pt3dadd( 52.936, -131.29, 152.1, 0.37 ) }
    dend_146 { pt3dadd( 58.76, -135.446, 158.94, 0.37 ) }
    dend_146 { pt3dadd( 64.8998, -138.933, 165.842, 0.37 ) }
    dend_146 { pt3dadd( 69.7346, -142.533, 173.667, 0.37 ) }
    // Section: dend_145, id: dend_145, parent: dend_144 (entry count 22/100)
    dend_145 { pt3dclear() }
    dend_145 { pt3dadd( 42.2134, -122.818, 137.964, 0.52 ) }
    dend_145 { pt3dadd( 46.6746, -128.527, 150.562, 0.37 ) }
    dend_145 { pt3dadd( 50.2131, -133.506, 163.722, 0.37 ) }
    dend_145 { pt3dadd( 51.3046, -137.694, 177.545, 0.37 ) }
    dend_145 { pt3dadd( 50.8349, -143.118, 191.008, 0.37 ) }
    dend_145 { pt3dadd( 51.753, -148.86, 204.329, 0.37 ) }
    // Section: dend_117, id: dend_117, parent: dend_115 (entry count 28/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( 42.1693, 235.527, 33.6738, 0.59 ) }
    dend_117 { pt3dadd( 42.1976, 235.846, 33.6527, 0.59 ) }
    dend_117 { pt3dadd( 42.2872, 236.636, 33.618, 0.29 ) }
    dend_117 { pt3dadd( 42.3407, 237.081, 33.603, 0.29 ) }
    dend_117 { pt3dadd( 42.4378, 237.69, 33.5556, 0.29 ) }
    dend_117 { pt3dadd( 42.4504, 237.75, 33.55, 0.29 ) }
    dend_117 { pt3dadd( 42.5991, 238.37, 33.488, 0.96 ) }
    dend_117 { pt3dadd( 42.8096, 239.072, 33.4261, 0.96 ) }
    dend_117 { pt3dadd( 42.9262, 239.388, 33.3923, 0.96 ) }
    dend_117 { pt3dadd( 43.1925, 240.028, 33.3204, 0.52 ) }
    dend_117 { pt3dadd( 43.3666, 240.434, 33.3154, 0.37 ) }
    dend_117 { pt3dadd( 43.3981, 240.509, 33.3213, 0.37 ) }
    dend_117 { pt3dadd( 43.5912, 240.972, 33.3972, 0.37 ) }
    dend_117 { pt3dadd( 43.6105, 241.021, 33.4088, 0.37 ) }
    dend_117 { pt3dadd( 43.791, 241.6, 33.5604, 0.37 ) }
    dend_117 { pt3dadd( 43.9899, 242.724, 33.8362, 0.22 ) }
    dend_117 { pt3dadd( 44.038, 243.19, 33.9332, 0.22 ) }
    dend_117 { pt3dadd( 44.0514, 243.438, 33.9771, 1.11 ) }
    dend_117 { pt3dadd( 44.052, 243.835, 34.0353, 1.11 ) }
    dend_117 { pt3dadd( 44.029, 244.463, 34.101, 0.52 ) }
    dend_117 { pt3dadd( 43.9566, 245.477, 34.1342, 0.37 ) }
    dend_117 { pt3dadd( 43.9527, 245.53, 34.1309, 0.37 ) }
    dend_117 { pt3dadd( 43.9417, 245.708, 34.1209, 0.66 ) }
    dend_117 { pt3dadd( 43.9393, 245.785, 34.1174, 0.66 ) }
    dend_117 { pt3dadd( 43.9395, 245.839, 34.1157, 0.66 ) }
    dend_117 { pt3dadd( 43.9739, 246.666, 34.1013, 0.44 ) }
    dend_117 { pt3dadd( 44.0147, 247.456, 34.0931, 0.44 ) }
    dend_117 { pt3dadd( 44.0156, 247.51, 34.0922, 0.44 ) }
    dend_117 { pt3dadd( 43.9841, 248.199, 34.0714, 0.44 ) }
    dend_117 { pt3dadd( 43.9691, 248.362, 34.0618, 0.44 ) }
    dend_117 { pt3dadd( 43.8494, 249.199, 33.9914, 0.44 ) }
    dend_117 { pt3dadd( 43.8406, 249.244, 33.9865, 0.44 ) }
    dend_117 { pt3dadd( 43.7558, 249.638, 33.9393, 1.4 ) }
    dend_117 { pt3dadd( 43.5863, 250.431, 33.8415, 1.4 ) }
    dend_117 { pt3dadd( 43.4159, 251.216, 33.7398, 0.44 ) }
    dend_117 { pt3dadd( 43.2812, 251.899, 33.6539, 0.44 ) }
    dend_117 { pt3dadd( 43.2605, 252.012, 33.6397, 0.44 ) }
    dend_117 { pt3dadd( 43.163, 252.638, 33.555, 0.44 ) }
    dend_117 { pt3dadd( 43.1585, 252.692, 33.5484, 0.44 ) }
    dend_117 { pt3dadd( 43.1573, 252.891, 33.5167, 0.88 ) }
    dend_117 { pt3dadd( 43.199, 253.433, 33.3623, 0.88 ) }
    dend_117 { pt3dadd( 43.2149, 253.54, 33.3234, 0.88 ) }
    dend_117 { pt3dadd( 43.2856, 253.933, 33.1664, 0.22 ) }
    dend_117 { pt3dadd( 43.5305, 255.094, 32.6591, 0.15 ) }
    dend_117 { pt3dadd( 43.7406, 256.023, 32.2354, 0.15 ) }
    dend_117 { pt3dadd( 44.0591, 257.345, 31.6029, 0.15 ) }
    dend_117 { pt3dadd( 44.3547, 258.494, 31.0331, 0.15 ) }
    dend_117 { pt3dadd( 44.3658, 258.533, 31.0121, 0.15 ) }
    dend_117 { pt3dadd( 44.4204, 258.706, 30.9128, 0.59 ) }
    dend_117 { pt3dadd( 44.5115, 258.99, 30.7516, 0.59 ) }
    dend_117 { pt3dadd( 44.761, 259.812, 30.3499, 0.29 ) }
    dend_117 { pt3dadd( 44.8277, 260.065, 30.2515, 0.74 ) }
    dend_117 { pt3dadd( 45.031, 260.84, 29.9804, 0.29 ) }
    dend_117 { pt3dadd( 45.1126, 261.154, 29.8832, 0.22 ) }
    dend_117 { pt3dadd( 45.4948, 262.582, 29.507, 0.22 ) }
    dend_117 { pt3dadd( 45.5105, 262.632, 29.4968, 0.22 ) }
    dend_117 { pt3dadd( 45.6044, 262.897, 29.4672, 0.88 ) }
    dend_117 { pt3dadd( 45.7098, 263.163, 29.4577, 0.88 ) }
    dend_117 { pt3dadd( 45.7598, 263.266, 29.4676, 0.88 ) }
    dend_117 { pt3dadd( 45.9004, 263.469, 29.498, 0.29 ) }
    dend_117 { pt3dadd( 46.343, 263.833, 29.6234, 0.22 ) }
    dend_117 { pt3dadd( 46.383, 263.865, 29.6363, 0.22 ) }
    dend_117 { pt3dadd( 46.6315, 264.05, 29.7253, 0.81 ) }
    dend_117 { pt3dadd( 46.7926, 264.183, 29.7875, 0.81 ) }
    dend_117 { pt3dadd( 46.8305, 264.216, 29.8029, 0.81 ) }
    dend_117 { pt3dadd( 47.0801, 264.467, 29.9093, 0.22 ) }
    dend_117 { pt3dadd( 47.2908, 264.704, 30.0033, 0.22 ) }
    dend_117 { pt3dadd( 47.3627, 264.798, 30.0336, 0.22 ) }
    dend_117 { pt3dadd( 47.6205, 265.181, 30.1356, 0.22 ) }
    dend_117 { pt3dadd( 47.6869, 265.29, 30.1603, 0.22 ) }
    dend_117 { pt3dadd( 47.8103, 265.503, 30.1998, 0.22 ) }
    dend_117 { pt3dadd( 47.846, 265.57, 30.2071, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_117 { pt3dadd( 48.071, 265.976, 30.2533, 0.22 ) }
    dend_117 { pt3dadd( 48.1058, 266.043, 30.2604, 0.22 ) }
    dend_117 { pt3dadd( 50.378, 273.409, 30.4703, 0.22 ) }
    // Section: dend_116, id: dend_116, parent: dend_115 (entry count 3/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( 42.1693, 235.527, 33.6738, 0.52 ) }
    dend_116 { pt3dadd( 41.7149, 235.424, 33.7184, 0.52 ) }
    dend_116 { pt3dadd( 41.5238, 235.379, 33.7468, 0.52 ) }
    dend_116 { pt3dadd( 40.9397, 235.24, 33.8335, 0.44 ) }
    dend_116 { pt3dadd( 40.8542, 235.22, 33.8462, 0.44 ) }
    dend_116 { pt3dadd( 39.7638, 234.961, 34.0081, 0.44 ) }
    dend_116 { pt3dadd( 38.5704, 234.677, 34.1853, 0.15 ) }
    dend_116 { pt3dadd( 38.4846, 234.66, 34.2004, 0.15 ) }
    dend_116 { pt3dadd( 26.7446, 229.79, 35.1473, 0.15 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 12/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 155.87, -38.6064, 72.2293, 0.37 ) }
    dend_109 { pt3dadd( 160.329, -46.7123, 77.8691, 0.37 ) }
    dend_109 { pt3dadd( 165.366, -55.9318, 81.0041, 0.37 ) }
    dend_109 { pt3dadd( 170.305, -64.6929, 85.2252, 0.37 ) }
    dend_109 { pt3dadd( 176.279, -73.7474, 87.0604, 0.37 ) }
    dend_109 { pt3dadd( 181.852, -83.1676, 88.4457, 0.37 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 18/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 155.87, -38.6064, 72.2293, 0.52 ) }
    dend_108 { pt3dadd( 164.644, -38.6001, 71.0968, 0.37 ) }
    dend_108 { pt3dadd( 173.345, -39.8993, 69.8925, 0.37 ) }
    dend_108 { pt3dadd( 182.162, -40.6927, 69.5557, 0.37 ) }
    dend_108 { pt3dadd( 190.969, -40.8486, 70.3173, 0.37 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 23/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -35.9675, 173.359, 28.2671, 0.37 ) }
    dend_94 { pt3dadd( -35.5813, 181.018, 29.6874, 0.37 ) }
    dend_94 { pt3dadd( -36.5983, 188.411, 31.8377, 0.37 ) }
    dend_94 { pt3dadd( -36.3694, 195.855, 34.1087, 0.37 ) }
    dend_94 { pt3dadd( -35.6849, 202.861, 37.3781, 0.37 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 28/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -35.9675, 173.359, 28.2671, 0.52 ) }
    dend_93 { pt3dadd( -35.1825, 186.619, 30.4601, 0.37 ) }
    dend_93 { pt3dadd( -37.2755, 199.49, 33.557, 0.37 ) }
    dend_93 { pt3dadd( -41.7773, 211.908, 35.4529, 0.37 ) }
    dend_93 { pt3dadd( -45.2124, 224.813, 36.4851, 0.37 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 33/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -61.21, 15.559, 5.09861, 0.29 ) }
    dend_86 { pt3dadd( -61.3283, 15.6046, 5.10122, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 35/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -83.2416, -54.8492, -93.9982, 0.15 ) }
    dend_83 { pt3dadd( -83.5726, -55.5449, -94.0213, 0.15 ) }
    dend_83 { pt3dadd( -83.5943, -55.612, -94.0115, 0.15 ) }
    dend_83 { pt3dadd( -83.7649, -56.1806, -93.894, 0.15 ) }
    dend_83 { pt3dadd( -83.8179, -56.3285, -93.8694, 0.15 ) }
    dend_83 { pt3dadd( -84.0618, -56.9694, -93.7753, 0.15 ) }
    dend_83 { pt3dadd( -84.1125, -57.1096, -93.7448, 0.15 ) }
    dend_83 { pt3dadd( -84.5901, -58.1495, -93.4897, 0.15 ) }
    dend_83 { pt3dadd( -84.6384, -58.249, -93.4612, 0.15 ) }
    dend_83 { pt3dadd( -85.1862, -59.291, -93.1334, 0.15 ) }
    dend_83 { pt3dadd( -85.2348, -59.3736, -93.1061, 0.15 ) }
    dend_83 { pt3dadd( -85.748, -60.2345, -92.7728, 0.15 ) }
    dend_83 { pt3dadd( -86.5382, -61.5712, -92.2042, 0.15 ) }
    dend_83 { pt3dadd( -86.5682, -61.6199, -92.1851, 0.15 ) }
    dend_83 { pt3dadd( -87.0364, -62.3766, -91.8792, 0.15 ) }
    dend_83 { pt3dadd( -87.2255, -62.6709, -91.754, 0.15 ) }
    dend_83 { pt3dadd( -87.7185, -63.4315, -91.4423, 0.15 ) }
    dend_83 { pt3dadd( -88.2792, -64.2841, -91.1238, 0.15 ) }
    dend_83 { pt3dadd( -89.0857, -65.6164, -90.5963, 0.15 ) }
    dend_83 { pt3dadd( -89.4361, -66.1911, -90.3724, 0.44 ) }
    dend_83 { pt3dadd( -89.6996, -66.6213, -90.2072, 0.81 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 56/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -83.2416, -54.8492, -93.9982, 0.22 ) }
    dend_80 { pt3dadd( -83.1327, -55.7336, -94.2554, 0.22 ) }
    dend_80 { pt3dadd( -82.9116, -57.3847, -94.8155, 0.22 ) }
    dend_80 { pt3dadd( -82.6524, -59.343, -95.5289, 0.22 ) }
    dend_80 { pt3dadd( -82.505, -60.5174, -95.9765, 0.22 ) }
    dend_80 { pt3dadd( -82.2214, -62.7691, -96.8778, 0.22 ) }
    dend_80 { pt3dadd( -82.0902, -63.8166, -97.316, 0.22 ) }
    dend_80 { pt3dadd( -82.0362, -64.1965, -97.505, 0.59 ) }
    dend_80 { pt3dadd( -82.001, -64.3752, -97.6074, 0.59 ) }
    dend_80 { pt3dadd( -81.9226, -64.7807, -97.8658, 0.59 ) }
    dend_80 { pt3dadd( -81.819, -65.4993, -98.3803, 0.29 ) }
    dend_80 { pt3dadd( -81.7919, -65.6506, -98.4981, 0.29 ) }
    dend_80 { pt3dadd( -81.6036, -66.5678, -99.0676, 0.22 ) }
    dend_80 { pt3dadd( -81.4033, -67.497, -99.6005, 0.22 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 70/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -146.092, -59.5766, -64.5621, 0.59 ) }
    dend_78 { pt3dadd( -146.431, -59.53, -63.8431, 0.59 ) }
    dend_78 { pt3dadd( -146.713, -59.5142, -63.218, 0.59 ) }
    dend_78 { pt3dadd( -147.069, -59.4454, -62.5091, 0.44 ) }
    dend_78 { pt3dadd( -147.104, -59.4358, -62.4451, 0.44 ) }
    dend_78 { pt3dadd( -147.723, -59.2805, -61.1286, 0.07 ) }
    dend_78 { pt3dadd( -147.936, -59.158, -60.46, 0.07 ) }
    dend_78 { pt3dadd( -147.951, -59.1387, -60.3899, 0.07 ) }
    dend_78 { pt3dadd( -148.043, -58.8505, -59.6026, 0.07 ) }
    dend_78 { pt3dadd( -148.071, -58.732, -59.3458, 0.07 ) }
    dend_78 { pt3dadd( -148.253, -57.9001, -57.8127, 0.07 ) }
    dend_78 { pt3dadd( -148.493, -56.8479, -56.0872, 0.07 ) }
    dend_78 { pt3dadd( -148.709, -56.1134, -54.9298, 0.07 ) }
    dend_78 { pt3dadd( -148.953, -55.5307, -54.0966, 0.07 ) }
    dend_78 { pt3dadd( -149.302, -54.8347, -53.1715, 0.07 ) }
    dend_78 { pt3dadd( -149.325, -54.7962, -53.125, 0.07 ) }
    dend_78 { pt3dadd( -149.873, -54.0403, -52.3304, 0.07 ) }
    dend_78 { pt3dadd( -150.694, -53.1675, -51.5176, 0.07 ) }
    dend_78 { pt3dadd( -152.051, -51.9526, -50.4413, 0.07 ) }
    dend_78 { pt3dadd( -152.134, -51.8825, -50.381, 0.07 ) }
    dend_78 { pt3dadd( -152.547, -51.5307, -50.0985, 0.07 ) }
    dend_78 { pt3dadd( -152.59, -51.4932, -50.07, 0.07 ) }
    dend_78 { pt3dadd( -154.194, -50.1206, -49.1231, 0.07 ) }
    dend_78 { pt3dadd( -156.638, -48.1027, -47.7454, 0.07 ) }
    dend_78 { pt3dadd( -156.919, -47.8833, -47.588, 0.74 ) }
    dend_78 { pt3dadd( -157.084, -47.7548, -47.4981, 0.74 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 96/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -146.092, -59.5766, -64.5621, 0.29 ) }
    dend_77 { pt3dadd( -146.777, -59.9057, -64.906, 0.29 ) }
    dend_77 { pt3dadd( -147.532, -60.2711, -65.2605, 0.22 ) }
    dend_77 { pt3dadd( -148.804, -60.9451, -65.8345, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_77 { pt3dadd( -148.863, -60.9775, -65.8596, 0.29 ) }
    dend_77 { pt3dadd( -149.662, -61.4443, -66.2016, 0.29 ) }
    dend_77 { pt3dadd( -150.029, -61.6736, -66.3512, 0.52 ) }
    dend_77 { pt3dadd( -150.086, -61.7116, -66.372, 0.52 ) }
    dend_77 { pt3dadd( -150.559, -62.0604, -66.5321, 0.22 ) }
    dend_77 { pt3dadd( -150.784, -62.246, -66.5949, 0.22 ) }
    dend_77 { pt3dadd( -151.667, -62.9456, -66.9039, 0.07 ) }
    dend_77 { pt3dadd( -152.502, -63.5674, -67.2394, 0.07 ) }
    dend_77 { pt3dadd( -152.615, -63.6445, -67.2827, 0.07 ) }
    dend_77 { pt3dadd( -153.052, -63.9169, -67.4351, 0.88 ) }
    dend_77 { pt3dadd( -153.419, -64.129, -67.5556, 0.88 ) }
    dend_77 { pt3dadd( -154.53, -64.7541, -67.916, 0.29 ) }
    dend_77 { pt3dadd( -155.443, -65.2306, -68.1934, 0.29 ) }
    dend_77 { pt3dadd( -156.428, -65.7078, -68.5001, 0.59 ) }
    dend_77 { pt3dadd( -156.989, -65.9711, -68.6717, 0.59 ) }
    dend_77 { pt3dadd( -157.052, -65.9984, -68.6898, 0.59 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 16/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -154.933, 5.58604, 57.8177, 0.37 ) }
    dend_73 { pt3dadd( -166.135, 7.30172, 65.8072, 0.37 ) }
    dend_73 { pt3dadd( -176.405, 8.76724, 75.0358, 0.37 ) }
    dend_73 { pt3dadd( -188.523, 9.16068, 81.652, 0.37 ) }
    dend_73 { pt3dadd( -201.149, 12.203, 86.4514, 0.37 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 21/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -154.933, 5.58604, 57.8177, 0.52 ) }
    dend_72 { pt3dadd( -167.997, 9.72882, 61.9305, 0.37 ) }
    dend_72 { pt3dadd( -180.562, 15.4223, 65.9524, 0.37 ) }
    dend_72 { pt3dadd( -191.83, 21.8512, 72.2756, 0.37 ) }
    dend_72 { pt3dadd( -201.626, 31.2789, 77.5674, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 26/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -153.205, -40.2782, 41.9522, 0.37 ) }
    dend_70 { pt3dadd( -164.67, -43.2907, 45.752, 0.37 ) }
    dend_70 { pt3dadd( -176.331, -46.176, 49.0072, 0.37 ) }
    dend_70 { pt3dadd( -187.221, -50.6914, 53.0882, 0.37 ) }
    dend_70 { pt3dadd( -197.862, -55.8607, 57.1049, 0.37 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 31/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -153.205, -40.2782, 41.9522, 0.52 ) }
    dend_69 { pt3dadd( -164.413, -42.6511, 45.5727, 0.37 ) }
    dend_69 { pt3dadd( -175.24, -44.8603, 50.2867, 0.37 ) }
    dend_69 { pt3dadd( -186.361, -48.6943, 52.8349, 0.37 ) }
    dend_69 { pt3dadd( -197.708, -52.4816, 54.2798, 0.37 ) }
    // Section: dend_65, id: dend_65, parent: dend_55 (entry count 36/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -123.054, -74.7987, -35.1345, 0.52 ) }
    dend_65 { pt3dadd( -122.883, -74.496, -35.0531, 0.52 ) }
    dend_65 { pt3dadd( -122.463, -73.7525, -34.8533, 0.52 ) }
    dend_65 { pt3dadd( -122.092, -73.0951, -34.6766, 0.37 ) }
    dend_65 { pt3dadd( -121.54, -72.1198, -34.4144, 0.29 ) }
    dend_65 { pt3dadd( -121.183, -71.4877, -34.2445, 0.15 ) }
    dend_65 { pt3dadd( -121.143, -71.4163, -34.2253, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 43/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -123.054, -74.7987, -35.1345, 0.44 ) }
    dend_56 { pt3dadd( -123.308, -75.1578, -34.9435, 0.44 ) }
    dend_56 { pt3dadd( -123.716, -75.7493, -34.6506, 0.74 ) }
    dend_56 { pt3dadd( -124.239, -76.4955, -34.3412, 1.03 ) }
    dend_56 { pt3dadd( -125.052, -77.4959, -33.9587, 1.03 ) }
    dend_56 { pt3dadd( -126.032, -78.6538, -33.5869, 1.18 ) }
    dend_56 { pt3dadd( -126.087, -78.7173, -33.5685, 1.18 ) }
    dend_56 { pt3dadd( -126.428, -79.1233, -33.4609, 1.03 ) }
    dend_56 { pt3dadd( -127.335, -80.2225, -33.1716, 0.52 ) }
    dend_56 { pt3dadd( -128.617, -81.8267, -32.746, 0.52 ) }
    dend_56 { pt3dadd( -129.217, -82.6597, -32.539, 0.52 ) }
    dend_56 { pt3dadd( -129.27, -82.7396, -32.5177, 0.52 ) }
    dend_56 { pt3dadd( -129.863, -83.7751, -32.2262, 0.52 ) }
    dend_56 { pt3dadd( -129.906, -83.8599, -32.1993, 0.52 ) }
    dend_56 { pt3dadd( -130.453, -85.1611, -31.7629, 0.52 ) }
    dend_56 { pt3dadd( -131.01, -86.4657, -31.3843, 0.52 ) }
    dend_56 { pt3dadd( -131.046, -86.5413, -31.3634, 0.52 ) }
    dend_56 { pt3dadd( -131.56, -87.4892, -31.1407, 0.52 ) }
    dend_56 { pt3dadd( -132.707, -89.2832, -30.8158, 0.52 ) }
    dend_56 { pt3dadd( -132.757, -89.3532, -30.8079, 0.52 ) }
    dend_56 { pt3dadd( -134.262, -91.2163, -30.7526, 0.52 ) }
    dend_56 { pt3dadd( -134.312, -91.2701, -30.7586, 0.52 ) }
    dend_56 { pt3dadd( -135.039, -92.0009, -30.9047, 1.03 ) }
    dend_56 { pt3dadd( -135.815, -92.7361, -31.1358, 1.33 ) }
    dend_56 { pt3dadd( -136.761, -93.653, -31.5413, 1.33 ) }
    dend_56 { pt3dadd( -137.457, -94.339, -31.876, 0.88 ) }
    dend_56 { pt3dadd( -138.954, -95.8272, -32.7398, 0.52 ) }
    dend_56 { pt3dadd( -139.016, -95.8904, -32.7825, 0.52 ) }
    dend_56 { pt3dadd( -140.15, -97.0368, -33.6176, 0.52 ) }
    dend_56 { pt3dadd( -141.414, -98.3535, -34.6177, 0.52 ) }
    dend_56 { pt3dadd( -141.474, -98.4155, -34.6664, 0.52 ) }
    dend_56 { pt3dadd( -142.277, -99.2979, -35.3407, 1.11 ) }
    dend_56 { pt3dadd( -143.347, -100.615, -36.1905, 1.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -4.43591, 192.104, 14.4605, 0.52 ) }
    dend_35 { pt3dadd( -4.48065, 192.565, 14.5025, 0.52 ) }
    dend_35 { pt3dadd( -4.54614, 193.401, 14.5763, 0.52 ) }
    dend_35 { pt3dadd( -4.59679, 194.413, 14.5899, 0.66 ) }
    dend_35 { pt3dadd( -4.63366, 195.533, 14.5692, 1.11 ) }
    dend_35 { pt3dadd( -4.63886, 195.654, 14.5627, 1.11 ) }
    dend_35 { pt3dadd( -4.6919, 196.854, 14.4814, 1.4 ) }
    dend_35 { pt3dadd( -4.72539, 197.765, 14.3592, 1.4 ) }
    dend_35 { pt3dadd( -4.76074, 198.806, 14.1341, 1.11 ) }
    dend_35 { pt3dadd( -4.76491, 198.883, 14.1135, 1.11 ) }
    dend_35 { pt3dadd( -4.85534, 200.587, 13.6242, 0.81 ) }
    dend_35 { pt3dadd( -4.85945, 200.663, 13.6017, 0.81 ) }
    dend_35 { pt3dadd( -4.94337, 202.711, 13.0212, 0.74 ) }
    dend_35 { pt3dadd( -4.95501, 204.163, 12.7169, 0.66 ) }
    dend_35 { pt3dadd( -4.9029, 205.757, 12.5094, 0.66 ) }
    dend_35 { pt3dadd( -4.82356, 207.044, 12.3891, 0.66 ) }
    dend_35 { pt3dadd( -4.81361, 207.176, 12.3843, 0.66 ) }
    dend_35 { pt3dadd( -4.72979, 208.462, 12.3889, 0.74 ) }
    dend_35 { pt3dadd( -4.58497, 211.588, 12.6313, 0.74 ) }
    dend_35 { pt3dadd( -4.52349, 214.028, 12.9438, 0.74 ) }
    dend_35 { pt3dadd( -4.52371, 214.198, 12.9695, 0.74 ) }
    dend_35 { pt3dadd( -4.59453, 215.727, 13.1969, 0.74 ) }
    dend_35 { pt3dadd( -4.70721, 216.827, 13.3347, 1.25 ) }
    dend_35 { pt3dadd( -4.96619, 218.282, 13.4714, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_35 { pt3dadd( -5.01322, 218.454, 13.4811, 1.69 ) }
    dend_35 { pt3dadd( -5.31091, 219.463, 13.5089, 1.69 ) }
    dend_35 { pt3dadd( -5.55828, 220.42, 13.5011, 1.25 ) }
    dend_35 { pt3dadd( -5.7904, 221.677, 13.4331, 0.81 ) }
    dend_35 { pt3dadd( -5.87752, 222.592, 13.3908, 0.81 ) }
    dend_35 { pt3dadd( -5.87731, 222.782, 13.3868, 0.81 ) }
    dend_35 { pt3dadd( -5.86038, 223.636, 13.4192, 0.81 ) }
    dend_35 { pt3dadd( -5.85787, 223.704, 13.4239, 0.81 ) }
    dend_35 { pt3dadd( -5.82494, 224.964, 13.5278, 0.81 ) }
    dend_35 { pt3dadd( -5.80916, 226.238, 13.6264, 0.81 ) }
    dend_35 { pt3dadd( -5.86592, 228.526, 13.7921, 0.74 ) }
    dend_35 { pt3dadd( -5.97189, 230.367, 13.9165, 0.74 ) }
    dend_35 { pt3dadd( -6.04529, 231.35, 13.9471, 1.11 ) }
    dend_35 { pt3dadd( -6.09057, 232.131, 13.9349, 1.4 ) }
    dend_35 { pt3dadd( -6.1322, 232.926, 13.8822, 1.55 ) }
    dend_35 { pt3dadd( -6.18727, 234.188, 13.7402, 1.03 ) }
    dend_35 { pt3dadd( -6.20708, 235.189, 13.5801, 0.81 ) }
    dend_35 { pt3dadd( -6.1807, 237.096, 13.2507, 0.59 ) }
    dend_35 { pt3dadd( -6.10696, 238.653, 12.9413, 0.59 ) }
    dend_35 { pt3dadd( -5.99685, 240.073, 12.6294, 0.59 ) }
    dend_35 { pt3dadd( -5.98907, 240.162, 12.6095, 0.59 ) }
    dend_35 { pt3dadd( -5.89292, 241.233, 12.3702, 0.88 ) }
    dend_35 { pt3dadd( -5.78027, 242.666, 12.0763, 0.88 ) }
    dend_35 { pt3dadd( -5.65691, 244.932, 11.7184, 0.81 ) }
    dend_35 { pt3dadd( -5.6541, 245.012, 11.7083, 0.81 ) }
    dend_35 { pt3dadd( -5.55445, 247.108, 11.4842, 0.66 ) }
    dend_35 { pt3dadd( -5.5302, 247.857, 11.4503, 0.66 ) }
    dend_35 { pt3dadd( -5.52772, 247.948, 11.4521, 0.66 ) }
    dend_35 { pt3dadd( -5.5071, 249.125, 11.5614, 1.11 ) }
    dend_35 { pt3dadd( -5.50808, 250.106, 11.741, 1.47 ) }
    dend_35 { pt3dadd( -5.50028, 251.016, 11.9225, 1.47 ) }
    dend_35 { pt3dadd( -5.49927, 252.367, 12.2759, 1.33 ) }
    dend_35 { pt3dadd( -5.53988, 253.472, 12.5817, 0.66 ) }
    dend_35 { pt3dadd( -5.54618, 253.538, 12.5985, 0.66 ) }
    dend_35 { pt3dadd( -5.63981, 254.073, 12.7424, 0.52 ) }
    dend_35 { pt3dadd( -5.83742, 254.949, 12.966, 0.52 ) }
    dend_35 { pt3dadd( -6.06409, 255.846, 13.1786, 0.74 ) }
    dend_35 { pt3dadd( -6.2363, 256.654, 13.3347, 0.96 ) }
    dend_35 { pt3dadd( -6.52808, 258.097, 13.6165, 0.96 ) }
    dend_35 { pt3dadd( -6.81826, 259.942, 13.9118, 0.66 ) }
    dend_35 { pt3dadd( -6.99103, 261.455, 14.1069, 0.66 ) }
    dend_35 { pt3dadd( -6.99515, 261.535, 14.1134, 0.66 ) }
    dend_35 { pt3dadd( -6.96087, 263.04, 14.1543, 0.66 ) }
    dend_35 { pt3dadd( -6.95344, 263.119, 14.1537, 0.66 ) }
    dend_35 { pt3dadd( -6.77262, 264.492, 14.0788, 0.66 ) }
    dend_35 { pt3dadd( -6.74333, 264.794, 14.0345, 0.66 ) }
    dend_35 { pt3dadd( -6.70388, 265.848, 13.8235, 0.66 ) }
    dend_35 { pt3dadd( -6.70833, 266.028, 13.7844, 0.66 ) }
    dend_35 { pt3dadd( -6.80657, 267.137, 13.5246, 0.66 ) }
    dend_35 { pt3dadd( -6.93089, 268.311, 13.2349, 0.66 ) }
    dend_35 { pt3dadd( -7.13722, 269.767, 12.9535, 0.66 ) }
    dend_35 { pt3dadd( -7.26177, 270.803, 12.8369, 0.52 ) }
    dend_35 { pt3dadd( -7.26791, 270.871, 12.8345, 0.52 ) }
    dend_35 { pt3dadd( -7.33461, 271.939, 12.91, 0.52 ) }
    dend_35 { pt3dadd( -7.33689, 272.018, 12.9249, 0.52 ) }
    dend_35 { pt3dadd( -7.34513, 273.579, 13.3554, 0.52 ) }
    dend_35 { pt3dadd( -7.36337, 275.006, 13.8664, 0.52 ) }
    dend_35 { pt3dadd( -7.37142, 275.157, 13.9202, 0.52 ) }
    dend_35 { pt3dadd( -7.44005, 276.106, 14.1972, 0.81 ) }
    dend_35 { pt3dadd( -7.50899, 277.103, 14.4371, 1.25 ) }
    dend_35 { pt3dadd( -7.59076, 278.269, 14.6738, 1.47 ) }
    dend_35 { pt3dadd( -7.65334, 279.056, 14.7911, 1.47 ) }
    dend_35 { pt3dadd( -7.76011, 280.136, 14.9297, 0.81 ) }
    dend_35 { pt3dadd( -7.93735, 281.732, 15.1133, 0.52 ) }
    dend_35 { pt3dadd( -8.12705, 283.093, 15.2705, 0.52 ) }
    dend_35 { pt3dadd( -8.41538, 284.831, 15.4993, 0.52 ) }
    dend_35 { pt3dadd( -8.56397, 285.638, 15.619, 1.18 ) }
    dend_35 { pt3dadd( -8.84721, 287.049, 15.8444, 1.18 ) }
    dend_35 { pt3dadd( -9.12419, 288.382, 16.0969, 0.66 ) }
    dend_35 { pt3dadd( -9.36606, 289.681, 16.3973, 0.52 ) }
    dend_35 { pt3dadd( -9.37061, 289.758, 16.4166, 0.52 ) }
    dend_35 { pt3dadd( -9.2845, 290.236, 16.5427, 0.44 ) }
    dend_35 { pt3dadd( -9.2556, 290.32, 16.5616, 0.44 ) }
    dend_35 { pt3dadd( -8.94889, 291.097, 16.734, 0.44 ) }
    dend_35 { pt3dadd( -8.38515, 292.564, 17.0236, 0.44 ) }
    dend_35 { pt3dadd( -7.72842, 294.401, 17.3402, 0.44 ) }
    dend_35 { pt3dadd( -7.19962, 296.162, 17.6091, 0.44 ) }
    dend_35 { pt3dadd( -6.56295, 298.723, 17.9486, 0.44 ) }
    dend_35 { pt3dadd( -6.22452, 300.397, 18.0927, 0.44 ) }
    dend_35 { pt3dadd( -6.06419, 301.52, 18.1105, 0.44 ) }
    dend_35 { pt3dadd( -6.01802, 302.2, 18.0711, 1.4 ) }
    dend_35 { pt3dadd( -5.97741, 303.406, 17.931, 1.4 ) }
    dend_35 { pt3dadd( -5.96998, 303.645, 17.889, 1.4 ) }
    dend_35 { pt3dadd( -5.90143, 305.148, 17.5707, 0.96 ) }
    dend_35 { pt3dadd( -5.78668, 306.623, 17.2218, 0.66 ) }
    dend_35 { pt3dadd( -5.66599, 308.014, 16.9139, 0.52 ) }
    dend_35 { pt3dadd( -5.56781, 309.311, 16.6562, 0.52 ) }
    dend_35 { pt3dadd( -5.56028, 309.401, 16.6395, 0.52 ) }
    dend_35 { pt3dadd( -5.42039, 310.892, 16.3843, 0.52 ) }
    dend_35 { pt3dadd( -5.32223, 311.993, 16.2267, 0.81 ) }
    dend_35 { pt3dadd( -5.25424, 312.64, 16.1316, 1.25 ) }
    dend_35 { pt3dadd( -5.16851, 313.289, 16.0272, 1.25 ) }
    dend_35 { pt3dadd( -5.01125, 314.584, 15.8183, 0.66 ) }
    dend_35 { pt3dadd( -4.78532, 316.149, 15.577, 0.52 ) }
    dend_35 { pt3dadd( -4.77422, 316.215, 15.567, 0.52 ) }
    dend_35 { pt3dadd( -4.61854, 317.288, 15.4273, 0.52 ) }
    dend_35 { pt3dadd( -4.52022, 318.131, 15.3397, 0.52 ) }
    dend_35 { pt3dadd( -4.45989, 319.326, 15.258, 0.52 ) }
    dend_35 { pt3dadd( -4.46288, 319.406, 15.2569, 0.52 ) }
    dend_35 { pt3dadd( -4.55581, 320.197, 15.2925, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_35 { pt3dadd( -4.69618, 321.278, 15.38, 0.96 ) }
    dend_35 { pt3dadd( -4.70671, 321.357, 15.3887, 0.96 ) }
    dend_35 { pt3dadd( -4.77767, 322.189, 15.478, 1.11 ) }
    dend_35 { pt3dadd( -4.79531, 322.947, 15.5628, 0.59 ) }
    dend_35 { pt3dadd( -4.72331, 324.262, 15.5928, 0.22 ) }
    dend_35 { pt3dadd( -4.60574, 325.231, 15.5505, 0.22 ) }
    dend_35 { pt3dadd( -4.48922, 326.075, 15.4941, 0.52 ) }
    dend_35 { pt3dadd( -4.33865, 327.219, 15.393, 0.96 ) }
    dend_35 { pt3dadd( -4.2437, 327.956, 15.3047, 1.18 ) }
    dend_35 { pt3dadd( -4.0059, 330.06, 14.9906, 0.52 ) }
    dend_35 { pt3dadd( -3.8968, 331.456, 14.7642, 0.52 ) }
    dend_35 { pt3dadd( -3.88978, 332.665, 14.597, 0.37 ) }
    dend_35 { pt3dadd( -3.92902, 333.346, 14.5314, 0.81 ) }
    dend_35 { pt3dadd( -3.94816, 333.517, 14.5284, 0.81 ) }
    dend_35 { pt3dadd( -4.06663, 334.408, 14.5773, 0.81 ) }
    dend_35 { pt3dadd( -4.20994, 335.459, 14.7134, 0.52 ) }
    dend_35 { pt3dadd( -4.24663, 336.48, 14.8354, 0.52 ) }
    dend_35 { pt3dadd( -4.24086, 336.571, 14.8452, 0.52 ) }
    dend_35 { pt3dadd( -4.16039, 337.278, 14.9263, 0.88 ) }
    dend_35 { pt3dadd( -4.00573, 338.549, 15.055, 0.88 ) }
    dend_35 { pt3dadd( -3.87099, 339.546, 15.143, 0.52 ) }
    dend_35 { pt3dadd( -3.6691, 341.159, 15.2193, 0.52 ) }
    dend_35 { pt3dadd( -3.52765, 342.583, 15.2482, 0.52 ) }
    dend_35 { pt3dadd( -3.52195, 342.663, 15.246, 0.52 ) }
    dend_35 { pt3dadd( -3.45832, 344.159, 15.1413, 0.52 ) }
    dend_35 { pt3dadd( -3.45658, 344.28, 15.1285, 0.52 ) }
    dend_35 { pt3dadd( -3.47326, 345.635, 14.963, 0.52 ) }
    dend_35 { pt3dadd( -3.48919, 346.96, 14.7253, 0.52 ) }
    dend_35 { pt3dadd( -3.46743, 347.946, 14.5368, 0.81 ) }
    dend_35 { pt3dadd( -3.41585, 348.941, 14.355, 1.25 ) }
    dend_35 { pt3dadd( -3.40803, 349.031, 14.3394, 1.25 ) }
    dend_35 { pt3dadd( -3.31838, 350.105, 14.1644, 1.25 ) }
    dend_35 { pt3dadd( -3.18738, 351.637, 13.9394, 0.66 ) }
    dend_35 { pt3dadd( -3.08297, 352.726, 13.8134, 0.44 ) }
    dend_35 { pt3dadd( -2.93952, 353.84, 13.7274, 0.37 ) }
    dend_35 { pt3dadd( -2.92301, 353.93, 13.723, 0.37 ) }
    dend_35 { pt3dadd( -2.71639, 354.734, 13.7261, 0.37 ) }
    dend_35 { pt3dadd( -2.67464, 354.847, 13.736, 0.37 ) }
    dend_35 { pt3dadd( -2.05335, 355.953, 13.7782, 0.37 ) }
    dend_35 { pt3dadd( -1.66892, 356.527, 13.7612, 0.59 ) }
    dend_35 { pt3dadd( -1.22321, 357.142, 13.7224, 0.88 ) }
    dend_35 { pt3dadd( -0.657651, 357.914, 13.6311, 1.11 ) }
    dend_35 { pt3dadd( -0.136878, 358.62, 13.5067, 1.11 ) }
    dend_35 { pt3dadd( 1.4381, 360.938, 13.0077, 0.37 ) }
    dend_35 { pt3dadd( 2.12511, 362.046, 12.6766, 0.37 ) }
    dend_35 { pt3dadd( 2.2028, 362.186, 12.6215, 0.37 ) }
    dend_35 { pt3dadd( 2.63617, 363.03, 12.2341, 1.03 ) }
    dend_35 { pt3dadd( 3.06379, 363.925, 11.7796, 1.33 ) }
    dend_35 { pt3dadd( 3.42491, 364.754, 11.3698, 1.33 ) }
    dend_35 { pt3dadd( 3.96008, 366.152, 10.7615, 0.52 ) }
    dend_35 { pt3dadd( 4.42526, 367.346, 10.2479, 0.37 ) }
    dend_35 { pt3dadd( 4.68614, 368.032, 9.98544, 0.29 ) }
    dend_35 { pt3dadd( 4.71109, 368.104, 9.96203, 0.29 ) }
    dend_35 { pt3dadd( 5.01367, 369.19, 9.67478, 0.29 ) }
    dend_35 { pt3dadd( 5.03699, 369.347, 9.65368, 0.29 ) }
    dend_35 { pt3dadd( 5.01059, 370.439, 9.6581, 0.29 ) }
    dend_35 { pt3dadd( 4.99723, 370.529, 9.66173, 0.29 ) }
    dend_35 { pt3dadd( 4.70114, 371.594, 9.70488, 0.66 ) }
    dend_35 { pt3dadd( 4.34482, 372.621, 9.74981, 0.81 ) }
    dend_35 { pt3dadd( 3.76764, 374.025, 9.80088, 0.81 ) }
    dend_35 { pt3dadd( 3.37716, 374.996, 9.862, 1.4 ) }
    dend_35 { pt3dadd( 3.03979, 375.983, 9.95323, 1.4 ) }
    dend_35 { pt3dadd( 2.53625, 377.679, 10.1521, 0.66 ) }
    dend_35 { pt3dadd( 2.51457, 377.767, 10.1676, 0.66 ) }
    dend_35 { pt3dadd( 2.28002, 379.064, 10.4289, 0.59 ) }
    dend_35 { pt3dadd( 2.0948, 380.61, 10.7532, 0.37 ) }
    dend_35 { pt3dadd( 1.91487, 382.912, 11.2971, 0.37 ) }
    dend_35 { pt3dadd( 1.91167, 382.978, 11.3132, 0.37 ) }
    dend_35 { pt3dadd( 1.82982, 384.611, 11.7355, 0.37 ) }
    dend_35 { pt3dadd( 1.73781, 385.738, 12.0387, 0.37 ) }
    dend_35 { pt3dadd( 1.72897, 385.814, 12.0604, 0.37 ) }
    dend_35 { pt3dadd( 1.58623, 386.522, 12.2753, 1.11 ) }
    dend_35 { pt3dadd( 1.29708, 387.513, 12.5834, 1.25 ) }
    dend_35 { pt3dadd( 0.723355, 389.259, 13.0742, 1.25 ) }
    dend_35 { pt3dadd( 0.391994, 390.167, 13.3066, 1.25 ) }
    dend_35 { pt3dadd( 0.366451, 390.239, 13.3263, 1.25 ) }
    dend_35 { pt3dadd( -0.111424, 391.702, 13.7271, 0.59 ) }
    dend_35 { pt3dadd( -0.386895, 392.72, 14.0399, 0.29 ) }
    dend_35 { pt3dadd( -0.55378, 393.586, 14.3285, 0.29 ) }
    dend_35 { pt3dadd( -0.56884, 393.739, 14.3756, 0.29 ) }
    dend_35 { pt3dadd( -0.624263, 394.915, 14.7586, 0.29 ) }
    dend_35 { pt3dadd( -0.623757, 394.991, 14.7828, 0.29 ) }
    dend_35 { pt3dadd( -0.52814, 396.381, 15.1604, 0.29 ) }
    dend_35 { pt3dadd( -0.51912, 396.471, 15.1738, 0.29 ) }
    dend_35 { pt3dadd( -0.479347, 397.096, 15.0674, 0.29 ) }
    dend_35 { pt3dadd( -0.467908, 397.551, 14.8341, 0.66 ) }
    dend_35 { pt3dadd( -0.460264, 397.694, 14.7453, 0.66 ) }
    dend_35 { pt3dadd( -0.385636, 398.581, 14.1612, 0.66 ) }
    dend_35 { pt3dadd( -0.159118, 400.163, 13.1992, 0.66 ) }
    dend_35 { pt3dadd( 0.113712, 401.596, 12.4436, 0.52 ) }
    dend_35 { pt3dadd( 0.460209, 402.981, 11.7476, 0.52 ) }
    dend_35 { pt3dadd( 0.847529, 404.288, 11.0795, 0.52 ) }
    dend_35 { pt3dadd( 0.88036, 404.392, 11.0289, 0.52 ) }
    dend_35 { pt3dadd( 1.51355, 406.297, 10.1752, 0.52 ) }
    dend_35 { pt3dadd( 1.67154, 406.821, 9.98664, 0.74 ) }
    dend_35 { pt3dadd( 2.11209, 408.386, 9.43431, 0.74 ) }
    dend_35 { pt3dadd( 2.46209, 409.859, 8.86211, 0.59 ) }
    dend_35 { pt3dadd( 2.56489, 410.491, 8.57272, 0.59 ) }
    dend_35 { pt3dadd( 2.60921, 410.875, 8.38604, 0.88 ) }
    dend_35 { pt3dadd( 2.63206, 411.74, 7.96164, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_35 { pt3dadd( 2.6645, 413.191, 7.35041, 1.11 ) }
    dend_35 { pt3dadd( 2.70139, 414.157, 7.0654, 0.59 ) }
    dend_35 { pt3dadd( 2.76156, 415.101, 6.8381, 0.52 ) }
    dend_35 { pt3dadd( 2.76877, 415.179, 6.82031, 0.52 ) }
    dend_35 { pt3dadd( 3.0086, 417.028, 6.37791, 0.52 ) }
    dend_35 { pt3dadd( 3.29409, 418.818, 5.90417, 0.52 ) }
    dend_35 { pt3dadd( 3.6172, 420.722, 5.44005, 0.52 ) }
    dend_35 { pt3dadd( 3.91001, 422.212, 5.06918, 0.52 ) }
    dend_35 { pt3dadd( 3.93, 422.298, 5.04655, 0.52 ) }
    dend_35 { pt3dadd( 4.20689, 423.405, 4.73221, 0.52 ) }
    dend_35 { pt3dadd( 4.54891, 424.479, 4.36081, 1.25 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 11/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -4.43591, 192.104, 14.4605, 0.59 ) }
    dend_34 { pt3dadd( -4.45623, 192.134, 14.4476, 0.59 ) }
    dend_34 { pt3dadd( -4.70879, 192.507, 14.2871, 0.59 ) }
    dend_34 { pt3dadd( -5.01221, 192.955, 14.0944, 0.37 ) }
    dend_34 { pt3dadd( -5.19774, 193.229, 13.9765, 0.37 ) }
    dend_34 { pt3dadd( -5.3991, 193.527, 13.8486, 0.15 ) }
    dend_34 { pt3dadd( -9.08014, 198.469, 11.5402, 0.15 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 18/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -61.3283, 15.6046, 5.10122, 0.52 ) }
    dend_88 { pt3dadd( -61.6064, 15.9891, 4.90386, 0.52 ) }
    dend_88 { pt3dadd( -61.9021, 16.4139, 4.74629, 0.52 ) }
    dend_88 { pt3dadd( -61.9938, 16.5488, 4.70438, 0.52 ) }
    dend_88 { pt3dadd( -62.3823, 17.0888, 4.53165, 0.22 ) }
    dend_88 { pt3dadd( -62.8113, 17.6697, 4.33894, 0.22 ) }
    dend_88 { pt3dadd( -62.931, 17.8316, 4.28522, 0.22 ) }
    dend_88 { pt3dadd( -63.3836, 18.4306, 4.12055, 0.22 ) }
    dend_88 { pt3dadd( -63.4828, 18.5613, 4.08393, 0.22 ) }
    dend_88 { pt3dadd( -63.9021, 19.1206, 3.94608, 0.22 ) }
    dend_88 { pt3dadd( -63.9391, 19.1686, 3.93897, 0.59 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 29/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -61.3283, 15.6046, 5.10122, 0.66 ) }
    dend_87 { pt3dadd( -61.4574, 15.4413, 4.99471, 0.66 ) }
    dend_87 { pt3dadd( -61.9285, 14.8458, 4.60621, 0.66 ) }
    dend_87 { pt3dadd( -62.4942, 14.1308, 4.13971, 0.15 ) }
    dend_87 { pt3dadd( -67.6923, 7.20347, -0.867672, 0.15 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 34/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -81.4033, -67.497, -99.6005, 0.29 ) }
    dend_82 { pt3dadd( -80.9486, -67.568, -99.3964, 0.29 ) }
    dend_82 { pt3dadd( -80.5366, -67.6324, -99.2115, 0.29 ) }
    dend_82 { pt3dadd( -80.4895, -67.6397, -99.1903, 0.29 ) }
    dend_82 { pt3dadd( -79.8948, -67.7326, -98.9234, 0.29 ) }
    dend_82 { pt3dadd( -79.7719, -67.7518, -98.8682, 0.29 ) }
    dend_82 { pt3dadd( -78.8098, -67.9021, -98.4363, 0.37 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 41/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -81.4033, -67.497, -99.6005, 0.22 ) }
    dend_81 { pt3dadd( -82.0953, -68.4374, -100.275, 0.22 ) }
    dend_81 { pt3dadd( -83.1878, -69.8471, -101.233, 0.22 ) }
    dend_81 { pt3dadd( -83.8119, -70.6524, -101.779, 0.81 ) }
    dend_81 { pt3dadd( -84.3825, -71.3887, -102.279, 0.37 ) }
    dend_81 { pt3dadd( -85.5128, -72.8472, -103.27, 0.29 ) }
    dend_81 { pt3dadd( -85.7907, -73.2059, -103.513, 0.29 ) }
    dend_81 { pt3dadd( -85.8511, -73.2696, -103.558, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_56 (entry count 49/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -143.347, -100.615, -36.1905, 0.59 ) }
    dend_64 { pt3dadd( -143.083, -101.351, -36.6697, 0.59 ) }
    dend_64 { pt3dadd( -142.96, -102.267, -37.1066, 0.29 ) }
    dend_64 { pt3dadd( -142.957, -102.36, -37.1445, 0.29 ) }
    dend_64 { pt3dadd( -142.941, -103.534, -37.6033, 0.29 ) }
    dend_64 { pt3dadd( -142.939, -103.617, -37.634, 0.29 ) }
    dend_64 { pt3dadd( -142.884, -105.211, -38.2093, 0.29 ) }
    dend_64 { pt3dadd( -142.852, -106.529, -38.6371, 0.29 ) }
    dend_64 { pt3dadd( -142.862, -108.989, -39.4061, 0.29 ) }
    dend_64 { pt3dadd( -142.862, -109.086, -39.436, 0.29 ) }
    dend_64 { pt3dadd( -142.881, -110.416, -39.8421, 0.59 ) }
    dend_64 { pt3dadd( -142.88, -110.5, -39.8673, 0.59 ) }
    dend_64 { pt3dadd( -142.841, -111.071, -40.0246, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 62/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -143.347, -100.615, -36.1905, 0.96 ) }
    dend_57 { pt3dadd( -143.424, -100.66, -36.203, 0.96 ) }
    dend_57 { pt3dadd( -144.085, -101.111, -36.3388, 0.96 ) }
    dend_57 { pt3dadd( -144.713, -101.549, -36.5174, 0.74 ) }
    dend_57 { pt3dadd( -144.786, -101.598, -36.5395, 0.74 ) }
    dend_57 { pt3dadd( -145.952, -102.262, -36.8591, 0.59 ) }
    dend_57 { pt3dadd( -146.007, -102.291, -36.8732, 0.59 ) }
    dend_57 { pt3dadd( -147.434, -102.937, -37.2185, 0.59 ) }
    dend_57 { pt3dadd( -148.305, -103.275, -37.4189, 0.59 ) }
    dend_57 { pt3dadd( -148.998, -103.503, -37.5646, 0.52 ) }
    dend_57 { pt3dadd( -149.927, -103.758, -37.7598, 0.52 ) }
    dend_57 { pt3dadd( -149.987, -103.772, -37.7741, 0.52 ) }
    dend_57 { pt3dadd( -150.441, -103.886, -37.9095, 0.52 ) }
    dend_57 { pt3dadd( -150.564, -103.922, -37.9555, 0.52 ) }
    dend_57 { pt3dadd( -151.255, -104.203, -38.2757, 0.52 ) }
    dend_57 { pt3dadd( -151.759, -104.504, -38.6109, 0.88 ) }
    dend_57 { pt3dadd( -152.524, -105.076, -39.2354, 1.18 ) }
    dend_57 { pt3dadd( -153.016, -105.487, -39.7194, 0.88 ) }
    dend_57 { pt3dadd( -153.458, -105.904, -40.2203, 0.66 ) }
    dend_57 { pt3dadd( -153.518, -105.956, -40.2964, 0.66 ) }
    dend_57 { pt3dadd( -154.097, -106.428, -41.1024, 0.66 ) }
    dend_57 { pt3dadd( -154.131, -106.454, -41.1504, 0.66 ) }
    dend_57 { pt3dadd( -154.606, -106.781, -41.8376, 0.66 ) }
    dend_57 { pt3dadd( -155.022, -107.049, -42.4087, 0.66 ) }
    dend_57 { pt3dadd( -155.993, -107.638, -43.7775, 0.66 ) }
    dend_57 { pt3dadd( -156.031, -107.661, -43.8232, 0.66 ) }
    dend_57 { pt3dadd( -156.436, -107.89, -44.1812, 1.11 ) }
    dend_57 { pt3dadd( -156.491, -107.922, -44.2163, 1.11 ) }
    dend_57 { pt3dadd( -157.022, -108.204, -44.4841, 1.11 ) }
    dend_57 { pt3dadd( -158.017, -108.7, -44.919, 0.74 ) }
    dend_57 { pt3dadd( -159.182, -109.267, -45.3243, 0.52 ) }
    dend_57 { pt3dadd( -160.419, -109.812, -45.7342, 0.52 ) }
    dend_57 { pt3dadd( -161.386, -110.174, -46.0184, 0.52 ) }
    dend_57 { pt3dadd( -162.773, -110.631, -46.3904, 1.25 ) }
    dend_57 { pt3dadd( -162.832, -110.646, -46.4034, 1.25 ) }
    dend_57 { pt3dadd( -163.357, -110.78, -46.4932, 1.25 ) }
    dend_57 { pt3dadd( -163.415, -110.797, -46.5091, 1.25 ) }
    dend_57 { pt3dadd( -164.333, -111.193, -46.7411, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_57 { pt3dadd( -164.405, -111.233, -46.7571, 0.96 ) }
    dend_57 { pt3dadd( -165.123, -111.725, -46.8775, 0.59 ) }
    dend_57 { pt3dadd( -166.313, -112.663, -47.0868, 0.44 ) }
    dend_57 { pt3dadd( -167.428, -113.645, -47.291, 0.44 ) }
    dend_57 { pt3dadd( -168.278, -114.535, -47.3977, 0.74 ) }
    dend_57 { pt3dadd( -168.792, -115.166, -47.4618, 1.11 ) }
    dend_57 { pt3dadd( -169.283, -115.834, -47.5187, 1.11 ) }
    dend_57 { pt3dadd( -169.703, -116.47, -47.5605, 0.81 ) }
    dend_57 { pt3dadd( -169.739, -116.523, -47.5625, 0.81 ) }
    dend_57 { pt3dadd( -170.924, -117.949, -47.6162, 0.29 ) }
    dend_57 { pt3dadd( -171.631, -118.62, -47.7086, 0.29 ) }
    dend_57 { pt3dadd( -171.689, -118.664, -47.7168, 0.29 ) }
    dend_57 { pt3dadd( -172.251, -119.009, -47.8145, 0.29 ) }
    dend_57 { pt3dadd( -173.205, -119.502, -48.0138, 0.29 ) }
    dend_57 { pt3dadd( -174.178, -119.98, -48.2714, 0.29 ) }
    dend_57 { pt3dadd( -174.295, -120.036, -48.3122, 0.29 ) }
    dend_57 { pt3dadd( -174.561, -120.213, -48.403, 0.88 ) }
    dend_57 { pt3dadd( -175.028, -120.597, -48.6071, 0.88 ) }
    dend_57 { pt3dadd( -175.123, -120.691, -48.6614, 0.88 ) }
    dend_57 { pt3dadd( -175.508, -121.151, -48.8951, 0.66 ) }
    dend_57 { pt3dadd( -176.084, -121.906, -49.2437, 0.29 ) }
    dend_57 { pt3dadd( -176.768, -122.822, -49.6339, 0.15 ) }
    dend_57 { pt3dadd( -177.273, -123.508, -49.907, 0.88 ) }
    dend_57 { pt3dadd( -177.793, -124.218, -50.1777, 1.11 ) }
    dend_57 { pt3dadd( -178.399, -125.054, -50.4821, 0.37 ) }
    dend_57 { pt3dadd( -178.935, -125.778, -50.7671, 0.37 ) }
    dend_57 { pt3dadd( -179.507, -126.551, -51.084, 0.37 ) }
    dend_57 { pt3dadd( -179.836, -127.013, -51.2794, 1.03 ) }
    dend_57 { pt3dadd( -180.185, -127.514, -51.4935, 1.18 ) }
    dend_57 { pt3dadd( -180.572, -128.116, -51.7743, 1.18 ) }
    dend_57 { pt3dadd( -181.267, -129.438, -52.4612, 0.52 ) }
    dend_57 { pt3dadd( -181.299, -129.515, -52.5009, 0.52 ) }
    dend_57 { pt3dadd( -181.595, -130.553, -53.0152, 0.52 ) }
    dend_57 { pt3dadd( -181.61, -130.637, -53.0548, 0.52 ) }
    dend_57 { pt3dadd( -181.785, -132.149, -53.7268, 0.37 ) }
    dend_57 { pt3dadd( -181.877, -133.629, -54.3482, 0.37 ) }
    dend_57 { pt3dadd( -181.905, -134.206, -54.5533, 1.03 ) }
    dend_57 { pt3dadd( -181.968, -134.993, -54.8133, 1.03 ) }
    dend_57 { pt3dadd( -182.101, -136.239, -55.1971, 0.59 ) }
    dend_57 { pt3dadd( -182.251, -137.24, -55.4709, 0.29 ) }
    dend_57 { pt3dadd( -182.265, -137.312, -55.4878, 0.29 ) }
    dend_57 { pt3dadd( -182.664, -138.737, -55.7801, 0.29 ) }
    dend_57 { pt3dadd( -183.106, -140.046, -56.026, 0.29 ) }
    dend_57 { pt3dadd( -183.379, -140.69, -56.1624, 0.29 ) }
    dend_57 { pt3dadd( -183.715, -141.34, -56.3276, 0.88 ) }
    dend_57 { pt3dadd( -183.746, -141.395, -56.3442, 0.88 ) }
    dend_57 { pt3dadd( -184.122, -142.041, -56.5736, 0.88 ) }
    dend_57 { pt3dadd( -184.533, -142.701, -56.8612, 0.44 ) }
    dend_57 { pt3dadd( -185.213, -143.778, -57.3682, 0.29 ) }
    dend_57 { pt3dadd( -185.829, -144.855, -57.9918, 0.29 ) }
    dend_57 { pt3dadd( -185.879, -144.954, -58.0604, 0.29 ) }
    dend_57 { pt3dadd( -186.018, -145.269, -58.2935, 0.81 ) }
    dend_57 { pt3dadd( -186.037, -145.319, -58.3319, 0.81 ) }
    dend_57 { pt3dadd( -186.214, -145.87, -58.7835, 0.81 ) }
    dend_57 { pt3dadd( -186.558, -147.347, -60.0329, 0.52 ) }
    dend_57 { pt3dadd( -186.684, -147.998, -60.6466, 1.18 ) }
    dend_57 { pt3dadd( -186.799, -148.538, -61.172, 1.18 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 57/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 4.54891, 424.479, 4.36081, 1.69 ) }
    dend_37 { pt3dadd( 4.33133, 425.587, 4.49672, 1.69 ) }
    dend_37 { pt3dadd( 4.1978, 426.152, 4.62915, 1.69 ) }
    dend_37 { pt3dadd( 3.94508, 427.138, 4.91132, 0.52 ) }
    dend_37 { pt3dadd( 3.75585, 427.877, 5.12259, 0.52 ) }
    dend_37 { pt3dadd( 3.58142, 428.557, 5.31735, 0.52 ) }
    dend_37 { pt3dadd( 3.48613, 428.929, 5.42374, 0.52 ) }
    dend_37 { pt3dadd( 3.25124, 429.782, 5.80303, 0.52 ) }
    dend_37 { pt3dadd( 3.23921, 429.829, 5.82558, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 4.54891, 424.479, 4.36081, 0.37 ) }
    dend_36 { pt3dadd( 4.39842, 424.546, 4.19466, 0.37 ) }
    dend_36 { pt3dadd( 3.61788, 424.892, 3.33293, 0.37 ) }
    dend_36 { pt3dadd( 2.66383, 425.316, 2.27964, 0.37 ) }
    dend_36 { pt3dadd( 2.14507, 425.546, 1.70692, 0.37 ) }
    dend_36 { pt3dadd( 1.14358, 425.991, 0.601241, 1.03 ) }
    dend_36 { pt3dadd( 1.01253, 426.049, 0.456558, 1.03 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 73/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -63.9391, 19.1686, 3.93897, 0.37 ) }
    dend_90 { pt3dadd( -64.1313, 19.3121, 3.94035, 0.37 ) }
    dend_90 { pt3dadd( -64.2835, 19.4233, 3.94256, 0.37 ) }
    dend_90 { pt3dadd( -65.1402, 20.0509, 3.95733, 0.37 ) }
    dend_90 { pt3dadd( -65.2769, 20.1535, 3.96007, 0.37 ) }
    dend_90 { pt3dadd( -66.0381, 20.7348, 3.9768, 0.29 ) }
    dend_90 { pt3dadd( -66.1092, 20.7923, 3.97865, 0.29 ) }
    dend_90 { pt3dadd( -66.8092, 21.3661, 3.94737, 0.29 ) }
    dend_90 { pt3dadd( -66.8722, 21.4144, 3.93984, 0.29 ) }
    dend_90 { pt3dadd( -67.11, 21.567, 3.89252, 0.29 ) }
    dend_90 { pt3dadd( -67.2184, 21.6302, 3.86638, 0.29 ) }
    dend_90 { pt3dadd( -67.9202, 22.0024, 3.65081, 0.29 ) }
    dend_90 { pt3dadd( -68.7221, 22.4084, 3.37563, 0.29 ) }
    dend_90 { pt3dadd( -69.6066, 22.9047, 3.26313, 0.22 ) }
    dend_90 { pt3dadd( -70.6319, 23.5825, 3.20957, 0.22 ) }
    dend_90 { pt3dadd( -70.6875, 23.6221, 3.20918, 0.22 ) }
    dend_90 { pt3dadd( -71.4291, 24.1966, 3.16127, 0.22 ) }
    dend_90 { pt3dadd( -71.482, 24.2396, 3.15444, 0.22 ) }
    dend_90 { pt3dadd( -74.0271, 26.4566, 2.74968, 0.22 ) }
    dend_90 { pt3dadd( -75.842, 28.1246, 2.3664, 0.22 ) }
    dend_90 { pt3dadd( -75.9177, 28.1942, 2.34332, 0.22 ) }
    dend_90 { pt3dadd( -77.6296, 29.6598, 1.7092, 0.22 ) }
    dend_90 { pt3dadd( -78.2689, 30.1495, 1.42059, 0.96 ) }
    dend_90 { pt3dadd( -78.3209, 30.1839, 1.39345, 0.96 ) }
    dend_90 { pt3dadd( -78.949, 30.5286, 0.99786, 0.96 ) }
    dend_90 { pt3dadd( -80.2002, 31.1307, 0.332686, 0.22 ) }
    dend_90 { pt3dadd( -81.0596, 31.5616, -0.0504623, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_90 { pt3dadd( -81.7582, 31.9357, -0.294969, 0.22 ) }
    dend_90 { pt3dadd( -82.9589, 32.6763, -0.648124, 0.22 ) }
    dend_90 { pt3dadd( -84.1084, 33.4402, -0.954987, 0.22 ) }
    dend_90 { pt3dadd( -84.264, 33.5496, -0.989332, 0.22 ) }
    dend_90 { pt3dadd( -84.9759, 34.0797, -1.1006, 0.22 ) }
    dend_90 { pt3dadd( -85.6723, 34.6018, -1.19338, 0.22 ) }
    dend_90 { pt3dadd( -87.1567, 35.6994, -1.34469, 0.22 ) }
    dend_90 { pt3dadd( -87.5841, 35.9811, -1.41912, 0.22 ) }
    dend_90 { pt3dadd( -88.4943, 36.4647, -1.61004, 0.22 ) }
    dend_90 { pt3dadd( -88.6655, 36.5404, -1.65178, 0.22 ) }
    dend_90 { pt3dadd( -89.9179, 37.0017, -2.03643, 0.22 ) }
    dend_90 { pt3dadd( -89.9887, 37.025, -2.06165, 0.22 ) }
    dend_90 { pt3dadd( -91.8164, 37.606, -2.95479, 0.22 ) }
    dend_90 { pt3dadd( -92.9413, 37.9688, -3.55631, 0.22 ) }
    dend_90 { pt3dadd( -93.0065, 37.9899, -3.59492, 0.22 ) }
    dend_90 { pt3dadd( -94.3557, 38.4349, -4.44678, 0.22 ) }
    dend_90 { pt3dadd( -94.4177, 38.4564, -4.49028, 0.22 ) }
    dend_90 { pt3dadd( -96.2583, 39.1419, -5.75909, 0.22 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 18/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -63.9391, 19.1686, 3.93897, 0.15 ) }
    dend_89 { pt3dadd( -64.2035, 19.1228, 7.50228, 0.15 ) }
    dend_89 { pt3dadd( -64.2366, 19.1092, 8.13723, 0.07 ) }
    dend_89 { pt3dadd( -64.2388, 19.1024, 8.31631, 0.07 ) }
    dend_89 { pt3dadd( -64.1558, 19.0053, 9.82788, 0.29 ) }
    dend_89 { pt3dadd( -64.2305, 19.0211, 9.80308, 0.29 ) }
    dend_89 { pt3dadd( -64.5603, 19.0189, 9.89906, 0.29 ) }
    dend_89 { pt3dadd( -64.9714, 18.9796, 9.95641, 0.29 ) }
    dend_89 { pt3dadd( -65.769, 18.8599, 10.1354, 0.29 ) }
    dend_89 { pt3dadd( -65.9333, 18.8308, 10.1769, 0.29 ) }
    dend_89 { pt3dadd( -67.4092, 18.551, 10.6002, 0.29 ) }
    dend_89 { pt3dadd( -69.4158, 18.1025, 11.1958, 0.29 ) }
    dend_89 { pt3dadd( -70.4654, 17.8335, 11.5181, 0.29 ) }
    dend_89 { pt3dadd( -70.612, 17.788, 11.566, 0.29 ) }
    dend_89 { pt3dadd( -71.8518, 17.3544, 11.9903, 0.29 ) }
    dend_89 { pt3dadd( -72.0064, 17.2987, 12.0427, 0.29 ) }
    dend_89 { pt3dadd( -72.8996, 16.9676, 12.3351, 0.29 ) }
    dend_89 { pt3dadd( -72.9817, 16.9379, 12.3642, 0.29 ) }
    dend_89 { pt3dadd( -73.6935, 16.674, 12.7197, 0.22 ) }
    dend_89 { pt3dadd( -73.9154, 16.5947, 12.8416, 0.22 ) }
    dend_89 { pt3dadd( -74.3512, 16.4454, 13.1043, 0.22 ) }
    dend_89 { pt3dadd( -74.4181, 16.425, 13.144, 0.22 ) }
    dend_89 { pt3dadd( -76.0107, 16.0411, 14.0534, 0.22 ) }
    dend_89 { pt3dadd( -76.5207, 15.9317, 14.342, 0.22 ) }
    dend_89 { pt3dadd( -77.4155, 15.7434, 14.8418, 0.22 ) }
    dend_89 { pt3dadd( -77.5635, 15.7066, 14.9216, 0.22 ) }
    dend_89 { pt3dadd( -78.5648, 15.4511, 15.4093, 0.22 ) }
    dend_89 { pt3dadd( -80.0064, 15.0759, 16.0158, 0.22 ) }
    dend_89 { pt3dadd( -80.07, 15.0582, 16.0356, 0.22 ) }
    dend_89 { pt3dadd( -80.6434, 14.8838, 16.1917, 0.22 ) }
    dend_89 { pt3dadd( -81.3728, 14.6544, 16.3598, 0.22 ) }
    dend_89 { pt3dadd( -82.3236, 14.3742, 16.5742, 0.22 ) }
    dend_89 { pt3dadd( -82.4869, 14.3299, 16.6064, 0.22 ) }
    dend_89 { pt3dadd( -83.399, 14.1456, 16.7646, 0.22 ) }
    dend_89 { pt3dadd( -84.52, 13.9872, 16.9617, 0.22 ) }
    dend_89 { pt3dadd( -84.63, 13.9792, 16.9879, 0.22 ) }
    dend_89 { pt3dadd( -86.2135, 13.9441, 17.4545, 0.22 ) }
    dend_89 { pt3dadd( -86.3979, 13.9466, 17.517, 0.22 ) }
    dend_89 { pt3dadd( -88.228, 14.0431, 18.1786, 0.22 ) }
    dend_89 { pt3dadd( -88.4709, 14.0734, 18.279, 0.22 ) }
    dend_89 { pt3dadd( -89.6412, 14.2769, 18.8036, 0.22 ) }
    dend_89 { pt3dadd( -89.8819, 14.3163, 18.9063, 0.22 ) }
    dend_89 { pt3dadd( -90.5292, 14.422, 19.1578, 0.22 ) }
    dend_89 { pt3dadd( -90.7004, 14.4433, 19.2367, 0.22 ) }
    dend_89 { pt3dadd( -91.6274, 14.5423, 19.6659, 0.22 ) }
    dend_89 { pt3dadd( -91.7004, 14.547, 19.6989, 0.22 ) }
    dend_89 { pt3dadd( -92.6078, 14.5809, 20.0809, 0.22 ) }
    dend_89 { pt3dadd( -92.8409, 14.578, 20.1764, 0.22 ) }
    dend_89 { pt3dadd( -93.8941, 14.5298, 20.5956, 0.22 ) }
    dend_89 { pt3dadd( -94.8983, 14.4862, 20.9612, 0.22 ) }
    dend_89 { pt3dadd( -97.1476, 14.3911, 21.7004, 0.22 ) }
    dend_89 { pt3dadd( -97.2351, 14.3934, 21.7272, 0.22 ) }
    dend_89 { pt3dadd( -98.4358, 14.5034, 22.0706, 0.22 ) }
    dend_89 { pt3dadd( -98.6729, 14.5193, 22.1543, 0.22 ) }
    dend_89 { pt3dadd( -99.5201, 14.5583, 22.4846, 0.22 ) }
    dend_89 { pt3dadd( -99.6303, 14.5568, 22.5363, 0.22 ) }
    dend_89 { pt3dadd( -100.77, 14.4963, 23.0422, 0.22 ) }
    dend_89 { pt3dadd( -100.842, 14.4907, 23.076, 0.22 ) }
    dend_89 { pt3dadd( -103.1, 14.2176, 24.4509, 0.22 ) }
    dend_89 { pt3dadd( -103.255, 14.1908, 24.5576, 0.22 ) }
    dend_89 { pt3dadd( -103.942, 13.9947, 25.0617, 0.22 ) }
    dend_89 { pt3dadd( -104.585, 13.6954, 25.5327, 0.22 ) }
    dend_89 { pt3dadd( -104.825, 13.5423, 25.7089, 0.22 ) }
    dend_89 { pt3dadd( -106.037, 12.7449, 26.6436, 0.22 ) }
    dend_89 { pt3dadd( -106.096, 12.7069, 26.6833, 0.22 ) }
    dend_89 { pt3dadd( -106.976, 12.1373, 27.2756, 0.22 ) }
    dend_89 { pt3dadd( -108.214, 11.2941, 28.0437, 0.22 ) }
    dend_89 { pt3dadd( -108.274, 11.2514, 28.0777, 0.22 ) }
    dend_89 { pt3dadd( -109.881, 10.1935, 28.8716, 0.22 ) }
    dend_89 { pt3dadd( -111.449, 9.28644, 29.5029, 0.22 ) }
    dend_89 { pt3dadd( -111.545, 9.23798, 29.5404, 0.22 ) }
    dend_89 { pt3dadd( -113.127, 8.68844, 30.0256, 0.22 ) }
    dend_89 { pt3dadd( -113.292, 8.65373, 30.0599, 0.22 ) }
    dend_89 { pt3dadd( -114.627, 8.52234, 30.1671, 0.22 ) }
    dend_89 { pt3dadd( -115.199, 8.53886, 30.1221, 0.66 ) }
    dend_89 { pt3dadd( -115.375, 8.56401, 30.102, 0.66 ) }
    dend_89 { pt3dadd( -117.19, 8.88424, 29.9133, 0.66 ) }
    dend_89 { pt3dadd( -117.268, 8.90145, 29.9049, 0.66 ) }
    dend_89 { pt3dadd( -118.896, 9.18383, 29.7416, 0.66 ) }
    dend_89 { pt3dadd( -119.235, 9.22778, 29.7091, 0.66 ) }
    dend_89 { pt3dadd( -120.72, 9.33495, 29.6027, 0.66 ) }
    dend_89 { pt3dadd( -121.441, 9.34885, 29.5781, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_89 { pt3dadd( -121.613, 9.33837, 29.5829, 0.37 ) }
    dend_89 { pt3dadd( -122.551, 9.26119, 29.5931, 0.29 ) }
    dend_89 { pt3dadd( -123.382, 9.17205, 29.5979, 0.15 ) }
    dend_89 { pt3dadd( -123.866, 9.13412, 29.5974, 0.22 ) }
    dend_89 { pt3dadd( -124.037, 9.12252, 29.5942, 0.22 ) }
    dend_89 { pt3dadd( -124.896, 9.06328, 29.6417, 0.22 ) }
    dend_89 { pt3dadd( -125.325, 9.0368, 29.6775, 0.22 ) }
    dend_89 { pt3dadd( -125.836, 8.99685, 29.7531, 0.22 ) }
    dend_89 { pt3dadd( -125.991, 8.97772, 29.789, 0.22 ) }
    dend_89 { pt3dadd( -126.658, 8.90486, 30.0044, 0.22 ) }
    dend_89 { pt3dadd( -127.844, 8.76536, 30.4649, 0.22 ) }
    dend_89 { pt3dadd( -138.836, 8.50333, 33.6597, 0.22 ) }
    dend_89 { pt3dadd( -149.53, 9.52472, 37.6373, 0.22 ) }
    dend_89 { pt3dadd( -160.257, 10.819, 41.4509, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 14/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -186.799, -148.538, -61.172, 0.74 ) }
    dend_63 { pt3dadd( -186.295, -149.25, -61.4893, 0.74 ) }
    dend_63 { pt3dadd( -186.037, -149.552, -61.6049, 0.59 ) }
    dend_63 { pt3dadd( -185.419, -150.24, -61.8506, 0.59 ) }
    dend_63 { pt3dadd( -185.302, -150.366, -61.8928, 0.59 ) }
    dend_63 { pt3dadd( -184.667, -151.031, -62.1705, 0.52 ) }
    dend_63 { pt3dadd( -183.71, -152.016, -62.6219, 0.29 ) }
    dend_63 { pt3dadd( -183.024, -152.714, -62.9086, 0.29 ) }
    dend_63 { pt3dadd( -182.956, -152.779, -62.9367, 0.29 ) }
    dend_63 { pt3dadd( -181.663, -153.906, -63.4534, 0.29 ) }
    dend_63 { pt3dadd( -180.938, -154.546, -63.7638, 0.59 ) }
    dend_63 { pt3dadd( -180.905, -154.574, -63.7797, 0.59 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -186.799, -148.538, -61.172, 0.81 ) }
    dend_58 { pt3dadd( -187.14, -149.307, -61.2033, 0.81 ) }
    dend_58 { pt3dadd( -187.624, -150.491, -61.2398, 0.52 ) }
    dend_58 { pt3dadd( -188.255, -152.061, -61.2836, 0.44 ) }
    dend_58 { pt3dadd( -188.681, -153.153, -61.3665, 0.44 ) }
    dend_58 { pt3dadd( -189.442, -155.11, -61.6497, 0.44 ) }
    dend_58 { pt3dadd( -189.817, -156.038, -61.8364, 0.88 ) }
    dend_58 { pt3dadd( -190.179, -156.95, -62.061, 0.88 ) }
    dend_58 { pt3dadd( -190.241, -157.112, -62.1189, 0.88 ) }
    dend_58 { pt3dadd( -190.72, -158.213, -62.7017, 0.59 ) }
    dend_58 { pt3dadd( -191.171, -159.03, -63.2842, 0.66 ) }
    dend_58 { pt3dadd( -191.696, -159.766, -63.9575, 0.44 ) }
    dend_58 { pt3dadd( -191.753, -159.841, -64.03, 0.44 ) }
    dend_58 { pt3dadd( -192.392, -160.615, -64.7827, 0.44 ) }
    dend_58 { pt3dadd( -192.958, -161.297, -65.3848, 1.18 ) }
    dend_58 { pt3dadd( -193.608, -162.048, -65.9292, 1.18 ) }
    dend_58 { pt3dadd( -194.631, -163.234, -66.689, 1.77 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 43/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.23921, 429.829, 5.82558, 0.66 ) }
    dend_39 { pt3dadd( 3.06058, 430.031, 5.51363, 0.66 ) }
    dend_39 { pt3dadd( 2.60543, 430.429, 4.81648, 0.37 ) }
    dend_39 { pt3dadd( 2.11784, 430.845, 4.11283, 0.22 ) }
    dend_39 { pt3dadd( 1.39809, 431.508, 3.11667, 0.22 ) }
    dend_39 { pt3dadd( 0.968742, 431.995, 2.49407, 0.22 ) }
    dend_39 { pt3dadd( 0.881996, 432.121, 2.36424, 0.22 ) }
    dend_39 { pt3dadd( 0.532871, 432.778, 1.87199, 0.22 ) }
    dend_39 { pt3dadd( 0.371547, 433.225, 1.67386, 0.22 ) }
    dend_39 { pt3dadd( 0.25963, 433.823, 1.50132, 0.52 ) }
    dend_39 { pt3dadd( 0.154553, 434.847, 1.28231, 0.88 ) }
    dend_39 { pt3dadd( 0.091882, 435.836, 1.11464, 0.88 ) }
    dend_39 { pt3dadd( 0.0322302, 437.19, 0.923272, 0.44 ) }
    dend_39 { pt3dadd( -0.0138068, 439.029, 0.708192, 0.37 ) }
    dend_39 { pt3dadd( -0.0328638, 440.479, 0.569341, 0.37 ) }
    dend_39 { pt3dadd( -0.0424468, 441.161, 0.508793, 0.88 ) }
    dend_39 { pt3dadd( -0.0698908, 442.371, 0.415282, 0.96 ) }
    dend_39 { pt3dadd( -0.0833178, 443.379, 0.336459, 0.96 ) }
    dend_39 { pt3dadd( -0.0819118, 443.475, 0.330758, 0.96 ) }
    dend_39 { pt3dadd( -0.0214368, 444.92, 0.30419, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 3.23921, 429.829, 5.82558, 0.52 ) }
    dend_38 { pt3dadd( 3.01868, 429.944, 5.7699, 0.52 ) }
    dend_38 { pt3dadd( 2.76162, 430.114, 5.70681, 0.52 ) }
    dend_38 { pt3dadd( 2.46208, 430.328, 5.63402, 0.52 ) }
    dend_38 { pt3dadd( 2.40762, 430.366, 5.62079, 0.52 ) }
    dend_38 { pt3dadd( 1.93352, 430.704, 5.50561, 0.52 ) }
    dend_38 { pt3dadd( 1.55539, 430.973, 5.41373, 0.52 ) }
    dend_38 { pt3dadd( 1.27464, 431.202, 5.34692, 0.52 ) }
    dend_38 { pt3dadd( 1.22583, 431.248, 5.33567, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 72/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -194.631, -163.234, -66.689, 0.52 ) }
    dend_60 { pt3dadd( -194.543, -163.834, -66.8689, 0.52 ) }
    dend_60 { pt3dadd( -194.342, -164.722, -67.0964, 0.52 ) }
    dend_60 { pt3dadd( -194.316, -164.838, -67.1233, 0.52 ) }
    dend_60 { pt3dadd( -194.062, -165.605, -67.4189, 0.52 ) }
    dend_60 { pt3dadd( -193.964, -165.884, -67.5423, 0.52 ) }
    dend_60 { pt3dadd( -193.671, -166.707, -67.9233, 0.44 ) }
    dend_60 { pt3dadd( -193.457, -167.284, -68.1863, 0.37 ) }
    dend_60 { pt3dadd( -193.126, -168.079, -68.5809, 0.37 ) }
    dend_60 { pt3dadd( -192.38, -169.757, -69.4693, 0.37 ) }
    dend_60 { pt3dadd( -192.046, -170.446, -69.8778, 0.37 ) }
    dend_60 { pt3dadd( -191.93, -170.686, -70.0342, 0.37 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 84/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -194.631, -163.234, -66.689, 0.66 ) }
    dend_59 { pt3dadd( -194.691, -163.239, -66.7185, 0.66 ) }
    dend_59 { pt3dadd( -195.137, -163.28, -66.948, 0.59 ) }
    dend_59 { pt3dadd( -196.33, -163.443, -67.523, 0.59 ) }
    dend_59 { pt3dadd( -197.126, -163.594, -67.9004, 0.59 ) }
    dend_59 { pt3dadd( -197.171, -163.604, -67.9231, 0.59 ) }
    dend_59 { pt3dadd( -198.955, -164.045, -68.8599, 0.29 ) }
    dend_59 { pt3dadd( -199.006, -164.06, -68.8867, 0.29 ) }
    dend_59 { pt3dadd( -200.362, -164.509, -69.6181, 0.29 ) }
    dend_59 { pt3dadd( -200.868, -164.694, -69.8873, 1.03 ) }
    dend_59 { pt3dadd( -201.573, -164.953, -70.2298, 0.88 ) }
    dend_59 { pt3dadd( -202.168, -165.173, -70.508, 0.88 ) }
    dend_59 { pt3dadd( -203.055, -165.579, -70.9122, 0.29 ) }
    dend_59 { pt3dadd( -203.164, -165.634, -70.9626, 0.29 ) }
    dend_59 { pt3dadd( -203.722, -165.954, -71.2212, 0.29 ) }
    dend_59 { pt3dadd( -204.433, -166.413, -71.5353, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_59 { pt3dadd( -205.014, -166.849, -71.7738, 0.29 ) }
    dend_59 { pt3dadd( -206.431, -168.097, -72.3054, 0.29 ) }
    dend_59 { pt3dadd( -206.806, -168.486, -72.4353, 0.96 ) }
    dend_59 { pt3dadd( -207.21, -168.96, -72.534, 0.96 ) }
    dend_59 { pt3dadd( -207.563, -169.442, -72.5677, 0.44 ) }
    dend_59 { pt3dadd( -208.286, -170.539, -72.5089, 0.37 ) }
    dend_59 { pt3dadd( -208.832, -171.449, -72.364, 0.74 ) }
    dend_59 { pt3dadd( -209.131, -171.999, -72.2305, 0.74 ) }
    dend_59 { pt3dadd( -209.601, -172.949, -72.003, 0.74 ) }
    dend_59 { pt3dadd( -209.951, -173.688, -71.8225, 0.37 ) }
    dend_59 { pt3dadd( -210.354, -174.63, -71.5702, 0.22 ) }
    dend_59 { pt3dadd( -210.62, -175.313, -71.3655, 0.22 ) }
    dend_59 { pt3dadd( -210.689, -175.486, -71.3168, 0.22 ) }
    dend_59 { pt3dadd( -211.055, -176.364, -71.0741, 0.22 ) }
    dend_59 { pt3dadd( -211.105, -176.483, -71.0475, 0.22 ) }
    dend_59 { pt3dadd( -211.412, -177.233, -70.8701, 0.22 ) }
    dend_59 { pt3dadd( -211.838, -178.273, -70.5038, 0.22 ) }
    dend_59 { pt3dadd( -211.863, -178.323, -70.48, 0.22 ) }
    dend_59 { pt3dadd( -211.963, -178.506, -70.3757, 0.22 ) }
    dend_59 { pt3dadd( -212.028, -178.604, -70.2968, 0.52 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 20/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.0214368, 444.92, 0.30419, 0.44 ) }
    dend_41 { pt3dadd( 0.760468, 445.945, 0.119713, 0.44 ) }
    dend_41 { pt3dadd( 1.22217, 446.607, 0.0113887, 0.44 ) }
    dend_41 { pt3dadd( 1.27198, 446.691, -2.10751E-4, 0.44 ) }
    dend_41 { pt3dadd( 1.60403, 447.508, -0.100936, 0.96 ) }
    dend_41 { pt3dadd( 1.62164, 447.561, -0.107136, 0.96 ) }
    dend_41 { pt3dadd( 1.99694, 448.828, -0.234483, 1.55 ) }
    dend_41 { pt3dadd( 2.18733, 449.695, -0.295275, 1.55 ) }
    dend_41 { pt3dadd( 2.37739, 450.712, -0.353098, 0.74 ) }
    dend_41 { pt3dadd( 2.63814, 452.676, -0.43295, 0.59 ) }
    dend_41 { pt3dadd( 2.66048, 453.02, -0.444018, 0.81 ) }
    dend_41 { pt3dadd( 2.67129, 453.541, -0.456119, 0.96 ) }
    dend_41 { pt3dadd( 2.64833, 454.163, -0.463461, 0.96 ) }
    dend_41 { pt3dadd( 2.6188, 454.786, -0.474735, 0.44 ) }
    dend_41 { pt3dadd( 2.56125, 456.119, -0.514564, 0.37 ) }
    dend_41 { pt3dadd( 2.52092, 457.288, -0.591615, 0.37 ) }
    dend_41 { pt3dadd( 2.51498, 457.418, -0.607037, 0.37 ) }
    dend_41 { pt3dadd( 2.47647, 458.242, -0.743178, 0.37 ) }
    dend_41 { pt3dadd( 2.47391, 458.306, -0.755321, 0.37 ) }
    dend_41 { pt3dadd( 2.46662, 459.279, -0.931316, 0.37 ) }
    dend_41 { pt3dadd( 2.53181, 460.262, -1.09367, 0.29 ) }
    dend_41 { pt3dadd( 2.61771, 460.946, -1.17602, 0.29 ) }
    dend_41 { pt3dadd( 2.70611, 461.515, -1.21828, 1.03 ) }
    dend_41 { pt3dadd( 2.86731, 462.39, -1.24649, 1.4 ) }
    dend_41 { pt3dadd( 3.07757, 463.461, -1.22419, 1.4 ) }
    dend_41 { pt3dadd( 3.24896, 464.27, -1.15826, 1.4 ) }
    dend_41 { pt3dadd( 3.45495, 465.218, -1.0329, 0.29 ) }
    dend_41 { pt3dadd( 3.62362, 466.027, -0.907358, 0.29 ) }
    dend_41 { pt3dadd( 3.64288, 466.124, -0.893848, 0.29 ) }
    dend_41 { pt3dadd( 3.83773, 467.138, -0.769614, 0.29 ) }
    dend_41 { pt3dadd( 3.85939, 467.276, -0.756375, 0.29 ) }
    dend_41 { pt3dadd( 4.10334, 468.755, -0.693847, 0.29 ) }
    dend_41 { pt3dadd( 4.1346, 468.959, -0.694732, 0.29 ) }
    dend_41 { pt3dadd( 4.24223, 469.757, -0.718311, 0.74 ) }
    dend_41 { pt3dadd( 4.24861, 469.813, -0.720335, 0.74 ) }
    dend_41 { pt3dadd( 4.32066, 470.562, -0.748522, 0.74 ) }
    dend_41 { pt3dadd( 4.45401, 472.13, -0.788306, 0.37 ) }
    dend_41 { pt3dadd( 4.53499, 473.332, -0.796651, 0.96 ) }
    dend_41 { pt3dadd( 4.5675, 474.085, -0.784692, 1.18 ) }
    dend_41 { pt3dadd( 4.5784, 474.911, -0.754901, 1.18 ) }
    dend_41 { pt3dadd( 4.57707, 475.935, -0.713646, 0.37 ) }
    dend_41 { pt3dadd( 4.57484, 476.076, -0.706586, 0.37 ) }
    dend_41 { pt3dadd( 4.52622, 477.172, -0.643824, 0.15 ) }
    dend_41 { pt3dadd( 4.50893, 478.066, -0.61486, 0.15 ) }
    dend_41 { pt3dadd( 4.49487, 478.5, -0.611525, 0.52 ) }
    dend_41 { pt3dadd( 4.46574, 479.134, -0.621296, 1.18 ) }
    dend_41 { pt3dadd( 4.46203, 479.2, -0.623337, 1.18 ) }
    dend_41 { pt3dadd( 4.40461, 480.112, -0.664577, 1.18 ) }
    dend_41 { pt3dadd( 4.33678, 481.074, -0.717371, 0.81 ) }
    dend_41 { pt3dadd( 4.27043, 481.997, -0.766959, 0.22 ) }
    dend_41 { pt3dadd( 4.26574, 482.063, -0.77022, 0.22 ) }
    dend_41 { pt3dadd( 4.21436, 482.745, -0.805142, 0.22 ) }
    dend_41 { pt3dadd( 4.20627, 482.837, -0.812865, 0.22 ) }
    dend_41 { pt3dadd( 4.13438, 483.6, -0.892183, 0.22 ) }
    dend_41 { pt3dadd( 4.12863, 483.665, -0.898681, 0.22 ) }
    dend_41 { pt3dadd( 4.12069, 483.764, -0.907372, 0.88 ) }
    dend_41 { pt3dadd( 4.08221, 484.387, -0.952641, 0.88 ) }
    dend_41 { pt3dadd( 4.02323, 485.744, -1.03065, 0.15 ) }
    dend_41 { pt3dadd( 4.02233, 485.819, -1.03176, 0.15 ) }
    dend_41 { pt3dadd( 4.10745, 486.782, -1.02651, 0.15 ) }
    dend_41 { pt3dadd( 4.11947, 486.856, -1.02445, 0.15 ) }
    dend_41 { pt3dadd( 4.19911, 487.165, -0.993572, 0.74 ) }
    dend_41 { pt3dadd( 4.29821, 487.483, -0.942191, 0.81 ) }
    dend_41 { pt3dadd( 4.44664, 487.945, -0.858966, 0.81 ) }
    dend_41 { pt3dadd( 4.67075, 488.993, -0.745955, 0.37 ) }
    dend_41 { pt3dadd( 4.67924, 489.058, -0.742491, 0.37 ) }
    dend_41 { pt3dadd( 4.76581, 490.129, -0.716586, 0.37 ) }
    dend_41 { pt3dadd( 4.81281, 491.501, -0.728519, 0.37 ) }
    dend_41 { pt3dadd( 4.81162, 491.995, -0.751646, 0.37 ) }
    dend_41 { pt3dadd( 4.71999, 494.089, -0.924037, 0.37 ) }
    dend_41 { pt3dadd( 4.60817, 495.539, -1.06945, 0.37 ) }
    dend_41 { pt3dadd( 4.57131, 495.97, -1.12078, 1.18 ) }
    dend_41 { pt3dadd( 4.5045, 496.64, -1.22251, 1.18 ) }
    dend_41 { pt3dadd( 4.3395, 498.262, -1.4942, 0.37 ) }
    dend_41 { pt3dadd( 4.17222, 500.009, -1.79268, 0.37 ) }
    dend_41 { pt3dadd( 4.16539, 500.082, -1.80726, 0.37 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 96/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -0.0214368, 444.92, 0.30419, 0.81 ) }
    dend_40 { pt3dadd( 0.200434, 445.154, 0.528077, 0.81 ) }
    dend_40 { pt3dadd( 0.410834, 445.39, 0.73101, 0.22 ) }
    dend_40 { pt3dadd( 1.27845, 446.379, 1.55618, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_40 { pt3dadd( 2.30625, 447.601, 2.51653, 0.22 ) }
    dend_40 { pt3dadd( 2.34676, 447.651, 2.55411, 0.22 ) }
    dend_40 { pt3dadd( 3.71687, 449.45, 3.82372, 0.22 ) }
    dend_40 { pt3dadd( 4.26486, 450.236, 4.33713, 0.22 ) }
    dend_40 { pt3dadd( 4.30543, 450.301, 4.37569, 0.22 ) }
    dend_40 { pt3dadd( 4.59319, 450.82, 4.62613, 0.96 ) }
    dend_40 { pt3dadd( 4.72888, 451.102, 4.73791, 1.33 ) }
    dend_40 { pt3dadd( 5.06574, 451.879, 5.048, 0.22 ) }
    dend_40 { pt3dadd( 5.36153, 452.854, 5.46231, 0.15 ) }
    dend_40 { pt3dadd( 5.39064, 452.955, 5.50971, 0.15 ) }
    dend_40 { pt3dadd( 5.58188, 453.615, 5.83538, 0.29 ) }
    dend_40 { pt3dadd( 5.60372, 453.689, 5.87579, 0.29 ) }
    dend_40 { pt3dadd( 5.80454, 454.337, 6.27022, 0.29 ) }
    dend_40 { pt3dadd( 5.9791, 454.88, 6.67003, 0.44 ) }
    dend_40 { pt3dadd( 6.09624, 455.26, 7.01488, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 15/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -191.93, -170.686, -70.0342, 0.29 ) }
    dend_62 { pt3dadd( -190.027, -172.016, -70.8387, 0.29 ) }
    dend_62 { pt3dadd( -188.652, -172.966, -71.365, 0.29 ) }
    dend_62 { pt3dadd( -186.76, -174.276, -72.0152, 0.29 ) }
    dend_62 { pt3dadd( -185.619, -175.067, -72.4076, 0.22 ) }
    dend_62 { pt3dadd( -184.772, -175.653, -72.6985, 0.22 ) }
    dend_62 { pt3dadd( -183.193, -176.747, -73.2412, 0.22 ) }
    dend_62 { pt3dadd( -182.284, -177.364, -73.4319, 0.88 ) }
    dend_62 { pt3dadd( -181.65, -177.786, -73.5815, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -191.93, -170.686, -70.0342, 0.37 ) }
    dend_61 { pt3dadd( -192.303, -171.406, -70.6768, 0.37 ) }
    dend_61 { pt3dadd( -192.467, -171.663, -70.9006, 0.37 ) }
    dend_61 { pt3dadd( -192.848, -172.212, -71.3751, 0.37 ) }
    dend_61 { pt3dadd( -192.922, -172.299, -71.455, 0.66 ) }
    dend_61 { pt3dadd( -193.535, -172.913, -72.1047, 0.29 ) }
    dend_61 { pt3dadd( -193.834, -173.157, -72.3915, 0.15 ) }
    dend_61 { pt3dadd( -194.334, -173.439, -72.7731, 0.15 ) }
    dend_61 { pt3dadd( -194.369, -173.45, -72.7994, 0.15 ) }
    dend_61 { pt3dadd( -194.997, -173.465, -73.2348, 0.15 ) }
    dend_61 { pt3dadd( -195.481, -173.407, -73.5323, 0.15 ) }
    dend_61 { pt3dadd( -196.068, -173.207, -73.8153, 0.15 ) }
    dend_61 { pt3dadd( -196.259, -173.105, -73.9099, 0.15 ) }
    dend_61 { pt3dadd( -196.597, -172.847, -74.0736, 0.15 ) }
    dend_61 { pt3dadd( -196.846, -172.623, -74.1865, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 39/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 4.16539, 500.082, -1.80726, 0.29 ) }
    dend_43 { pt3dadd( 4.19234, 501.308, -3.19052, 0.29 ) }
    dend_43 { pt3dadd( 4.04327, 502.29, -4.38356, 0.29 ) }
    dend_43 { pt3dadd( 3.97605, 502.733, -4.92145, 0.29 ) }
    dend_43 { pt3dadd( 3.92403, 503.076, -5.33777, 0.96 ) }
    dend_43 { pt3dadd( 3.80718, 503.846, -6.27299, 0.96 ) }
    dend_43 { pt3dadd( 3.79832, 503.905, -6.34383, 0.96 ) }
    dend_43 { pt3dadd( 3.43098, 504.531, -7.18978, 0.52 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 47/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.16539, 500.082, -1.80726, 0.37 ) }
    dend_42 { pt3dadd( 4.46104, 500.638, -1.45512, 0.37 ) }
    dend_42 { pt3dadd( 4.50167, 500.729, -1.40676, 0.37 ) }
    dend_42 { pt3dadd( 4.88412, 501.605, -0.949768, 0.37 ) }
    dend_42 { pt3dadd( 4.94178, 501.75, -0.877024, 0.37 ) }
    dend_42 { pt3dadd( 5.24411, 502.544, -0.486378, 0.37 ) }
    dend_42 { pt3dadd( 5.27887, 502.639, -0.440154, 0.37 ) }
    dend_42 { pt3dadd( 6.09183, 505.066, 0.746246, 0.29 ) }
    dend_42 { pt3dadd( 6.11985, 505.157, 0.788231, 0.29 ) }
    dend_42 { pt3dadd( 6.58836, 506.842, 1.51247, 0.29 ) }
    dend_42 { pt3dadd( 6.62589, 507.0, 1.57371, 0.29 ) }
    dend_42 { pt3dadd( 6.83781, 507.962, 1.88442, 0.29 ) }
    dend_42 { pt3dadd( 6.86684, 508.101, 1.92359, 0.29 ) }
    dend_42 { pt3dadd( 7.00578, 508.726, 2.1029, 0.52 ) }
    dend_42 { pt3dadd( 7.18472, 509.439, 2.32097, 0.52 ) }
    dend_42 { pt3dadd( 7.4964, 510.405, 2.69312, 0.37 ) }
    dend_42 { pt3dadd( 8.07488, 511.944, 3.44956, 0.22 ) }
    dend_42 { pt3dadd( 8.23497, 512.298, 3.67211, 0.22 ) }
    dend_42 { pt3dadd( 8.9645, 513.778, 4.68841, 0.22 ) }
    dend_42 { pt3dadd( 9.00574, 513.852, 4.74615, 0.22 ) }
    dend_42 { pt3dadd( 9.76854, 515.047, 5.85747, 0.22 ) }
    dend_42 { pt3dadd( 10.1711, 515.586, 6.49088, 1.25 ) }
    dend_42 { pt3dadd( 10.5912, 516.079, 7.26883, 1.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 70/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 3.43098, 504.531, -7.18978, 0.22 ) }
    dend_45 { pt3dadd( 4.27556, 506.719, -7.41492, 0.22 ) }
    dend_45 { pt3dadd( 4.60307, 507.812, -7.68286, 0.22 ) }
    dend_45 { pt3dadd( 4.97212, 508.858, -8.04733, 0.22 ) }
    dend_45 { pt3dadd( 5.1971, 509.542, -8.33058, 0.96 ) }
    dend_45 { pt3dadd( 5.22121, 509.616, -8.364, 0.96 ) }
    dend_45 { pt3dadd( 5.46972, 510.409, -8.74383, 0.37 ) }
    dend_45 { pt3dadd( 5.8501, 511.708, -9.49613, 0.22 ) }
    dend_45 { pt3dadd( 6.24615, 512.737, -10.1929, 0.37 ) }
    dend_45 { pt3dadd( 6.74022, 513.814, -10.9809, 0.37 ) }
    dend_45 { pt3dadd( 6.93542, 514.21, -11.2738, 0.88 ) }
    dend_45 { pt3dadd( 7.11479, 514.598, -11.5354, 0.88 ) }
    dend_45 { pt3dadd( 7.65586, 515.92, -12.2955, 0.52 ) }
    dend_45 { pt3dadd( 7.68204, 515.993, -12.3286, 0.52 ) }
    dend_45 { pt3dadd( 8.01784, 517.368, -12.7966, 0.22 ) }
    dend_45 { pt3dadd( 8.03225, 517.438, -12.8141, 0.22 ) }
    dend_45 { pt3dadd( 8.312, 518.907, -13.07, 0.22 ) }
    dend_45 { pt3dadd( 8.46793, 519.884, -13.1948, 0.52 ) }
    dend_45 { pt3dadd( 8.50929, 520.349, -13.2505, 0.22 ) }
    dend_45 { pt3dadd( 8.5951, 521.332, -13.3825, 0.22 ) }
    dend_45 { pt3dadd( 8.60284, 521.43, -13.3928, 0.22 ) }
    dend_45 { pt3dadd( 8.69907, 522.525, -13.5255, 0.81 ) }
    dend_45 { pt3dadd( 8.84063, 523.533, -13.6747, 0.22 ) }
    dend_45 { pt3dadd( 9.064, 524.839, -13.8773, 0.22 ) }
    dend_45 { pt3dadd( 9.08571, 524.933, -13.8936, 0.22 ) }
    dend_45 { pt3dadd( 9.41795, 526.228, -14.1318, 0.22 ) }
    dend_45 { pt3dadd( 9.45995, 526.405, -14.1575, 0.22 ) }
    dend_45 { pt3dadd( 9.68646, 527.19, -14.2475, 0.59 ) }
    dend_45 { pt3dadd( 9.90301, 527.8, -14.2948, 0.59 ) }
    dend_45 { pt3dadd( 10.3613, 528.957, -14.3685, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_45 { pt3dadd( 10.6832, 529.589, -14.4302, 0.22 ) }
    dend_45 { pt3dadd( 11.4122, 530.792, -14.5891, 0.22 ) }
    dend_45 { pt3dadd( 12.3879, 532.352, -14.7835, 0.88 ) }
    dend_45 { pt3dadd( 12.7212, 532.882, -14.8417, 0.88 ) }
    dend_45 { pt3dadd( 12.7679, 532.953, -14.8486, 0.88 ) }
    dend_45 { pt3dadd( 14.0907, 534.811, -15.0004, 0.29 ) }
    dend_45 { pt3dadd( 14.1432, 534.877, -15.0066, 0.29 ) }
    dend_45 { pt3dadd( 14.8235, 535.685, -15.1211, 0.29 ) }
    dend_45 { pt3dadd( 15.0284, 535.976, -15.1734, 0.66 ) }
    dend_45 { pt3dadd( 15.2016, 536.238, -15.2384, 0.66 ) }
    dend_45 { pt3dadd( 15.7251, 537.172, -15.4967, 0.22 ) }
    dend_45 { pt3dadd( 15.7909, 537.336, -15.5394, 0.22 ) }
    dend_45 { pt3dadd( 16.1348, 538.069, -15.7092, 0.22 ) }
    dend_45 { pt3dadd( 16.3952, 538.561, -15.8197, 0.22 ) }
    dend_45 { pt3dadd( 17.0001, 539.833, -16.0051, 0.22 ) }
    dend_45 { pt3dadd( 17.0682, 539.989, -16.0174, 0.22 ) }
    dend_45 { pt3dadd( 17.3072, 540.721, -15.9903, 0.22 ) }
    dend_45 { pt3dadd( 17.7065, 542.123, -15.8372, 0.22 ) }
    dend_45 { pt3dadd( 17.7353, 542.215, -15.8208, 0.22 ) }
    dend_45 { pt3dadd( 18.2467, 543.7, -15.4972, 0.29 ) }
    dend_45 { pt3dadd( 18.273, 543.779, -15.4774, 0.29 ) }
    dend_45 { pt3dadd( 18.7392, 545.955, -14.8768, 0.29 ) }
    dend_45 { pt3dadd( 18.7651, 546.13, -14.8262, 0.29 ) }
    dend_45 { pt3dadd( 18.8801, 547.498, -14.4135, 0.59 ) }
    dend_45 { pt3dadd( 18.9475, 548.457, -14.1388, 0.15 ) }
    dend_45 { pt3dadd( 19.1057, 551.277, -13.3636, 0.15 ) }
    dend_45 { pt3dadd( 19.2019, 554.648, -12.6301, 0.15 ) }
    dend_45 { pt3dadd( 19.2036, 554.734, -12.6186, 0.15 ) }
    dend_45 { pt3dadd( 19.3796, 556.368, -12.5658, 0.15 ) }
    dend_45 { pt3dadd( 19.6158, 557.759, -12.7098, 0.15 ) }
    dend_45 { pt3dadd( 19.6418, 557.85, -12.7342, 0.15 ) }
    dend_45 { pt3dadd( 20.4325, 559.474, -13.6088, 0.15 ) }
    dend_45 { pt3dadd( 21.5292, 561.141, -14.7593, 0.15 ) }
    dend_45 { pt3dadd( 23.4533, 563.783, -16.8025, 0.15 ) }
    dend_45 { pt3dadd( 24.1536, 564.586, -17.5596, 0.15 ) }
    dend_45 { pt3dadd( 24.2648, 564.696, -17.678, 0.15 ) }
    dend_45 { pt3dadd( 24.8558, 565.197, -18.2685, 0.15 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 3.43098, 504.531, -7.18978, 0.52 ) }
    dend_44 { pt3dadd( 3.04275, 504.61, -7.45371, 0.52 ) }
    dend_44 { pt3dadd( 2.01378, 504.819, -8.15325, 0.52 ) }
    dend_44 { pt3dadd( 1.96689, 504.829, -8.18512, 0.52 ) }
    dend_44 { pt3dadd( 0.934407, 505.039, -8.88704, 0.52 ) }
    dend_44 { pt3dadd( 0.675728, 505.091, -9.0629, 0.66 ) }
    dend_44 { pt3dadd( 0.599957, 505.107, -9.1144, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
    ModelViewParmSubset_2 = new SectionList()
    dend_138 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_139 ModelViewParmSubset_2.append()
    dend_135 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_148 ModelViewParmSubset_2.append()
    dend_140 ModelViewParmSubset_2.append()
    dend_137 ModelViewParmSubset_2.append()
    dend_136 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_150 ModelViewParmSubset_2.append()
    dend_149 ModelViewParmSubset_2.append()
    dend_143 ModelViewParmSubset_2.append()
    dend_141 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_152 ModelViewParmSubset_2.append()
    dend_151 ModelViewParmSubset_2.append()
    dend_147 ModelViewParmSubset_2.append()
    dend_144 ModelViewParmSubset_2.append()
    dend_142 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_85 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_146 ModelViewParmSubset_2.append()
    dend_145 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_138 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_139 ModelViewParmSubset_4.append()
    dend_135 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_148 ModelViewParmSubset_4.append()
    dend_140 ModelViewParmSubset_4.append()
    dend_137 ModelViewParmSubset_4.append()
    dend_136 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_150 ModelViewParmSubset_4.append()
    dend_149 ModelViewParmSubset_4.append()
    dend_143 ModelViewParmSubset_4.append()
    dend_141 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_152 ModelViewParmSubset_4.append()
    dend_151 ModelViewParmSubset_4.append()
    dend_147 ModelViewParmSubset_4.append()
    dend_144 ModelViewParmSubset_4.append()
    dend_142 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_146 ModelViewParmSubset_4.append()
    dend_145 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, axon_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, axon_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
    ModelViewParmSubset_5 = new SectionList()
    dend_138 ModelViewParmSubset_5.append()
    dend_131 ModelViewParmSubset_5.append()
    dend_120 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_139 ModelViewParmSubset_5.append()
    dend_135 ModelViewParmSubset_5.append()
    dend_132 ModelViewParmSubset_5.append()
    dend_128 ModelViewParmSubset_5.append()
    dend_121 ModelViewParmSubset_5.append()
    dend_111 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_148 ModelViewParmSubset_5.append()
    dend_140 ModelViewParmSubset_5.append()
    dend_137 ModelViewParmSubset_5.append()
    dend_136 ModelViewParmSubset_5.append()
    dend_134 ModelViewParmSubset_5.append()
    dend_133 ModelViewParmSubset_5.append()
    dend_130 ModelViewParmSubset_5.append()
    dend_129 ModelViewParmSubset_5.append()
    dend_127 ModelViewParmSubset_5.append()
    dend_122 ModelViewParmSubset_5.append()
    dend_113 ModelViewParmSubset_5.append()
    dend_112 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_150 ModelViewParmSubset_5.append()
    dend_149 ModelViewParmSubset_5.append()
    dend_143 ModelViewParmSubset_5.append()
    dend_141 ModelViewParmSubset_5.append()
    dend_126 ModelViewParmSubset_5.append()
    dend_123 ModelViewParmSubset_5.append()
    dend_119 ModelViewParmSubset_5.append()
    dend_114 ModelViewParmSubset_5.append()
    dend_110 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_152 ModelViewParmSubset_5.append()
    dend_151 ModelViewParmSubset_5.append()
    dend_147 ModelViewParmSubset_5.append()
    dend_144 ModelViewParmSubset_5.append()
    dend_142 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_125 ModelViewParmSubset_5.append()
    dend_124 ModelViewParmSubset_5.append()
    dend_118 ModelViewParmSubset_5.append()
    dend_115 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_106 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_146 ModelViewParmSubset_5.append()
    dend_145 ModelViewParmSubset_5.append()
    dend_117 ModelViewParmSubset_5.append()
    dend_116 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_131 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_120 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_132 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_128 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_98 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_49 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_24 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_148]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_148 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_137]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_137 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_133 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_127 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_113 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_112 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_51 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_47 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_28 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_22 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_17 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_16 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_12 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_8 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_7 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_3 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_150]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_150 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_149]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_149 OneSecGrp_SectionRef_63.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_143]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_143 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_141]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_141 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_126 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_123 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_114 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_110 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_103 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_100 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_91 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_75 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_67 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_54 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_29 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_19 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_147]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_147 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_144]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_144 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_142]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_142 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_125 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_118 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_115 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_107 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_106 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_102 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_101 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_96 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_95 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_92 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_85 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_76 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_71 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_68 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_46 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_33 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_146]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_146 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_145]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_145 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_117 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_109 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_93 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_73 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_72 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_70 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_69 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_35 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_57 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_141 = new SectionList()
    dend_90 OneSecGrp_SectionRef_141.append()

    // Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_142 = new SectionList()
    dend_89 OneSecGrp_SectionRef_142.append()

    // Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_149 = new SectionList()
    dend_41 OneSecGrp_SectionRef_149.append()

    // Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_155 = new SectionList()
    dend_45 OneSecGrp_SectionRef_155.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_138]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_138 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_97 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_139]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_139 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_74 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_140]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_140 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_14 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_84 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_53 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_111 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_121 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_86 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_88 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_104 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_135]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_135 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_87 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_105 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_122 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_136]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_136 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_99 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_1 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_130 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_129 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_18 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_152]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_152 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_32 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_151]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_151 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_55 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_65 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_79 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_66 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_31 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_119 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_80 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_83 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_30 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_82 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_81 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_56 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_64 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_134 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_34 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_124 OneSecGrp_SectionRef_91.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_77 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_78 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_13 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_108 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_94 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_10 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_143 = new SectionList()
    dend_63 OneSecGrp_SectionRef_143.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_116 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_144 = new SectionList()
    dend_58 OneSecGrp_SectionRef_144.append()

    // Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_147 = new SectionList()
    dend_60 OneSecGrp_SectionRef_147.append()

    // Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_152 = new SectionList()
    dend_61 OneSecGrp_SectionRef_152.append()

    // Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_151 = new SectionList()
    dend_62 OneSecGrp_SectionRef_151.append()

    // Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_148 = new SectionList()
    dend_59 OneSecGrp_SectionRef_148.append()

    // Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_140 = new SectionList()
    dend_36 OneSecGrp_SectionRef_140.append()

    // Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_139 = new SectionList()
    dend_37 OneSecGrp_SectionRef_139.append()

    // Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_146 = new SectionList()
    dend_38 OneSecGrp_SectionRef_146.append()

    // Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_145 = new SectionList()
    dend_39 OneSecGrp_SectionRef_145.append()

    // Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_150 = new SectionList()
    dend_40 OneSecGrp_SectionRef_150.append()

    // Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_153 = new SectionList()
    dend_43 OneSecGrp_SectionRef_153.append()

    // Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_156 = new SectionList()
    dend_44 OneSecGrp_SectionRef_156.append()

    // Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_154 = new SectionList()
    dend_42 OneSecGrp_SectionRef_154.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()
    dend_135 basal.append()
    dend_136 basal.append()
    dend_137 basal.append()
    dend_138 basal.append()
    dend_139 basal.append()
    dend_140 basal.append()
    dend_141 basal.append()
    dend_142 basal.append()
    dend_143 basal.append()
    dend_144 basal.append()
    dend_145 basal.append()
    dend_146 basal.append()
    dend_147 basal.append()
    dend_148 basal.append()
    dend_149 basal.append()
    dend_150 basal.append()
    dend_151 basal.append()
    dend_152 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_138, dend_138, dend_138, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_130, dend_129, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_84, dend_84, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_140 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_136 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_110 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_107 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_131 nseg = 3
    dend_120 nseg = 3
    dend_0 nseg = 3
    dend_132 nseg = 5
    dend_128 nseg = 3
    dend_98 nseg = 3
    dend_49 nseg = 3
    dend_24 nseg = 7
    dend_11 nseg = 9
    dend_6 nseg = 3
    dend_2 nseg = 5
    dend_148 nseg = 3
    dend_137 nseg = 7
    dend_133 nseg = 3
    dend_127 nseg = 7
    dend_113 nseg = 5
    dend_112 nseg = 7
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_47 nseg = 9
    dend_28 nseg = 5
    dend_25 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 7
    dend_12 nseg = 7
    dend_8 nseg = 9
    dend_7 nseg = 3
    dend_3 nseg = 3
    dend_150 nseg = 3
    dend_149 nseg = 5
    dend_143 nseg = 3
    dend_141 nseg = 3
    dend_126 nseg = 7
    dend_123 nseg = 5
    dend_114 nseg = 3
    dend_110 nseg = 5
    dend_103 nseg = 7
    dend_100 nseg = 5
    dend_91 nseg = 3
    dend_75 nseg = 5
    dend_67 nseg = 3
    dend_54 nseg = 5
    dend_29 nseg = 3
    dend_19 nseg = 5
    dend_9 nseg = 3
    dend_147 nseg = 5
    dend_144 nseg = 7
    dend_142 nseg = 5
    dend_125 nseg = 3
    dend_118 nseg = 3
    dend_115 nseg = 3
    dend_107 nseg = 5
    dend_106 nseg = 5
    dend_102 nseg = 3
    dend_101 nseg = 3
    dend_96 nseg = 5
    dend_95 nseg = 5
    dend_92 nseg = 7
    dend_85 nseg = 3
    dend_76 nseg = 3
    dend_71 nseg = 5
    dend_68 nseg = 5
    dend_46 nseg = 3
    dend_33 nseg = 3
    dend_146 nseg = 3
    dend_145 nseg = 3
    dend_117 nseg = 3
    dend_109 nseg = 3
    dend_93 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_70 nseg = 3
    dend_69 nseg = 3
    dend_35 nseg = 13
    dend_57 nseg = 3
    dend_90 nseg = 3
    dend_89 nseg = 5
    dend_41 nseg = 3
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_LBC_34458d6725_0_0


