// Cell: cACint209_L23_LBC_78b571a886_0_0
/*
{
  "id" : "cACint209_L23_LBC_78b571a886_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.701302, 11.9739, -1.24376, 2.36127", "-0.606294, 10.7546, -1.0834, 3.83931", "-0.511286, 9.53541, -0.92305, 4.78417", "-0.416278, 8.31617, -0.762698, 6.14661", "-0.32127, 7.09693, -0.602345, 7.73722", "-0.226261, 5.8777, -0.441992, 8.31396", "-0.131253, 4.65846, -0.281639, 8.14547", "-0.0362448, 3.43922, -0.121287, 7.98262", "0.0587634, 2.21999, 0.0390659, 7.82998", "0.153772, 1.00075, 0.199419, 7.57671", "0.24878, -0.218488, 0.359771, 7.56649", "0.343788, -1.43772, 0.520124, 7.52579", "0.438796, -2.65696, 0.680477, 7.17937", "0.533805, -3.8762, 0.840829, 6.69186", "0.628813, -5.09544, 1.00118, 6.36625", "0.723821, -6.31467, 1.16153, 6.05036", "0.818829, -7.53391, 1.32189, 5.80715", "0.913837, -8.75315, 1.48224, 5.61319", "1.00885, -9.97238, 1.64259, 5.41924", "1.10385, -11.1916, 1.80295, 4.79633", "1.19886, -12.4109, 1.9633, 2.79741" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.06534, -11.3454, -6.34462, 0.83", "4.27089, -12.5298, -6.36132, 0.83", "4.92003, -13.1366, -6.33617, 0.83", "6.58645, -14.823, -6.23675, 0.55", "7.78734, -16.1097, -6.16448, 0.55", "8.94899, -17.3415, -6.09984, 0.83", "12.4632, -21.1134, -5.98604, 0.55", "14.2716, -23.1325, -6.03116, 0.55", "15.5335, -24.6186, -6.15566, 0.55", "20.0878, -30.2795, -6.8797, 0.55", "20.9853, -31.3652, -7.06306, 0.55", "22.8166, -33.5556, -7.58013, 0.55", "26.0143, -37.2758, -8.8522, 0.55", "27.9228, -39.4989, -9.81413, 0.55", "29.6404, -41.4228, -10.7869, 0.55", "31.6827, -43.743, -12.1063, 0.55", "34.3132, -46.7425, -13.7956, 0.55", "36.3871, -49.0458, -15.0772, 0.55", "38.6791, -51.5498, -16.6055, 0.55", "39.6519, -52.5863, -17.2816, 0.55", "40.7526, -53.8251, -18.1684, 0.28", "41.7726, -54.997, -19.037, 0.55", "43.5866, -56.821, -20.3786, 0.28", "46.2058, -59.2996, -22.1833, 0.28", "47.0836, -60.0028, -22.7502, 0.55", "50.076, -62.0743, -24.5598, 0.28", "51.5723, -63.0634, -25.3116, 0.28", "54.6834, -65.144, -26.3742, 0.55", "56.6651, -66.4693, -26.7998, 0.28", "58.1112, -67.4262, -27.0479, 0.28", "59.5003, -68.3509, -27.2551, 0.55", "63.9439, -71.332, -27.7404, 0.28", "70.1507, -75.7718, -28.3775, 0.28", "72.1347, -77.273, -28.5538, 0.55", "74.9591, -79.4933, -28.7348, 0.83", "81.7858, -85.9451, -32.3594, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.93534, -13.6954, -8.45462, 1.11", "1.80451, -14.4691, -8.99857, 1.11", "1.48812, -16.8188, -10.7179, 0.83", "1.04358, -20.1201, -13.1335, 0.83", "0.0579767, -27.4397, -18.4892, 0.83", "-0.450953, -31.2192, -21.2547, 0.83", "-0.795622, -33.7789, -23.1276, 0.83", "-1.3242, -37.2206, -25.8188, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.02466, 6.4247, -9.39462, 0.83", "-5.43113, 7.92002, -9.03669, 0.83", "-6.93337, 9.69335, -8.34335, 0.55", "-8.78668, 11.9619, -7.2666, 0.55", "-10.2123, 13.7804, -6.33931, 0.55", "-10.6018, 14.3221, -6.08831, 0.28", "-11.9495, 16.4306, -5.25074, 0.28", "-13.5989, 19.5341, -4.33298, 0.55", "-15.2117, 22.8964, -3.55426, 0.55", "-16.4837, 25.5604, -3.02792, 0.55", "-18.2316, 29.3705, -2.33557, 0.55", "-19.9678, 33.1072, -1.64807, 0.55", "-23.5562, 40.6074, -0.344193, 0.55", "-24.6278, 42.8258, 0.04589, 0.55", "-26.653, 47.0609, 0.906613, 0.55", "-28.0775, 50.0457, 1.67957, 0.55", "-29.6574, 53.38, 2.79117, 0.55", "-30.5402, 55.1808, 3.51085, 0.55", "-31.8499, 57.9215, 4.79608, 0.55", "-32.3991, 59.1861, 5.33749, 0.55", "-33.6024, 62.8097, 6.57332, 0.55", "-34.1694, 64.8009, 6.96195, 0.55", "-34.6808, 66.9674, 7.19465, 0.28", "-35.0048, 68.4806, 7.25819, 0.55", "-35.6161, 71.2688, 7.04177, 0.55", "-36.0727, 73.5317, 6.72185, 0.55", "-36.4504, 75.4232, 6.18554, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.15466, 12.5246, -0.304621, 2.77", "-0.929256, 13.356, -0.304621, 2.77", "-0.491676, 14.9698, -0.304621, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.62534, 1.3347, -0.954618, 0.83", "8.24711, 2.3161, -0.998968, 0.83", "10.8651, 3.02965, -1.38978, 0.55", "13.9372, 3.84328, -1.94191, 0.55", "16.218, 4.34207, -2.31158, 0.55", "17.2479, 4.5198, -2.46304, 0.83", "21.223, 5.09395, -2.97912, 0.55", "25.275, 5.63777, -3.52511, 0.55", "29.5894, 6.15939, -4.11058, 0.55", "35.1244, 6.75799, -4.84575, 0.55", "37.0877, 6.94837, -5.03733, 0.55", "40.6436, 7.29024, -5.27522, 0.55", "42.1342, 7.42758, -5.3104, 0.55", "43.0568, 7.57793, -5.30251, 0.28", "43.9865, 7.83093, -5.33908, 0.28", "45.5186, 8.55828, -5.53174, 0.55", "46.8906, 9.4325, -5.81843, 0.55", "47.9757, 10.2571, -6.1165, 0.55", "49.4457, 11.3709, -6.51825, 0.28", "49.9553, 11.7778, -6.65507, 0.28", "50.7438, 12.4428, -6.85241, 0.55", "52.5214, 13.9637, -7.25326, 0.28", "54.3866, 15.5501, -7.60186, 0.28", "55.5837, 16.5702, -7.68754, 0.28", "56.8868, 17.6573, -7.65046, 0.28", "58.8537, 19.2161, -7.31557, 0.55", "59.4183, 19.6651, -7.14054, 0.55", "60.6691, 20.6849, -6.63328, 0.28", "63.1384, 22.7888, -5.49043, 0.28", "65.0336, 24.4267, -4.61548, 0.55", "67.7633, 26.8005, -3.41178, 0.55", "69.1896, 28.0742, -2.74725, 0.55", "70.7459, 29.4807, -2.02342, 0.55", "71.7081, 30.347, -1.59446, 0.55", "73.9823, 32.4516, -0.810076, 0.28", "75.3942, 33.8476, -0.492857, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.85466, -13.6854, 5.15538, 2.77", "-0.933165, -14.717, 5.34166, 2.77", "-1.09042, -16.7834, 5.7148, 1.94", "-1.31789, -19.7727, 6.25458, 1.94", "-1.45795, -21.6133, 6.58694, 1.66", "-1.56797, -23.059, 6.848, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995275182907
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.19886, -12.4109, 1.9633, 0.83", "2.36419, -27.3656, 1.9633, 0.83", "3.52951, -42.3202, 1.9633, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.3242, -37.2206, -25.8188, 0.55", "-2.27493, -38.5576, -28.7573, 0.55", "-2.58533, -38.9942, -29.7166, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.3242, -37.2206, -25.8188, 0.55", "-0.437321, -39.014, -31.579, 0.55", "0.0997691, -40.0115, -34.2869, 0.55", "0.648093, -41.0299, -37.0515, 0.55", "1.18329, -42.0239, -39.7498, 0.55", "1.55025, -42.7055, -41.6, 0.28", "1.74627, -43.0695, -42.5883, 0.55", "2.77253, -44.608, -46.1843, 0.28", "4.01477, -47.8175, -52.9821, 0.28", "4.5711, -51.4734, -59.6438, 0.28", "4.03606, -56.5963, -65.2585, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.491676, 14.9698, -0.304621, 1.66", "0.804826, 16.8214, -0.358593, 1.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.491676, 14.9698, -0.304621, 0.55", "1.334, 17.733, -1.98275, 0.55", "2.80059, 19.6368, -2.81055, 0.55", "5.86424, 23.1011, -4.05301, 0.55", "6.71908, 23.9957, -4.3558, 0.55", "7.90988, 25.1507, -4.73279, 0.55", "9.30142, 26.4077, -5.17154, 0.55", "12.2117, 28.9082, -6.02707, 0.55", "15.1492, 31.1395, -6.63172, 0.55", "17.4685, 32.7452, -6.91283, 0.55", "18.4915, 33.379, -7.06907, 0.55", "21.5427, 35.1787, -7.59816, 0.55", "23.6238, 36.2892, -8.0548, 0.55", "25.7029, 37.3758, -8.61081, 0.55", "27.91, 38.4247, -9.17288, 0.55", "30.614, 39.6357, -9.88558, 0.55", "32.6419, 40.6108, -10.5029, 0.55", "36.0713, 42.3819, -11.6494, 0.55", "37.6807, 43.322, -12.238, 0.28", "39.6607, 44.8132, -13.0121, 0.28", "40.8056, 45.9341, -13.4314, 0.55", "42.8039, 48.689, -13.9279, 0.28", "43.4821, 50.016, -13.993, 0.28", "44.267, 52.2955, -14.0255, 0.55", "44.784, 54.3471, -14.0863, 0.55", "45.2673, 56.6594, -14.1845, 0.55", "45.6428, 58.4241, -14.2465, 0.55", "46.2464, 60.7119, -14.3324, 0.28", "47.4444, 64.6584, -14.645, 0.28", "48.0265, 66.345, -14.8936, 0.55", "48.5681, 67.8856, -15.201, 0.55", "49.0232, 69.0384, -15.5106, 0.55", "49.8805, 71.1547, -16.1254, 0.55", "56.2448, 76.7642, -16.9731, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.56797, -23.059, 6.848, 1.66", "-2.91577, -23.4862, 7.09755, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.56797, -23.059, 6.848, 0.55", "-2.76053, -24.6067, 7.47034, 0.55", "-4.48871, -27.0521, 8.22075, 0.55", "-6.27602, -29.6835, 8.85458, 0.55", "-7.47817, -31.421, 9.342, 0.55", "-8.48232, -32.7612, 9.85764, 0.55", "-9.56252, -34.1736, 10.4449, 0.55", "-10.6062, -35.6656, 11.0654, 0.55", "-11.5467, -37.0048, 11.643, 0.55", "-13.204, -39.284, 12.6123, 0.55", "-16.0269, -42.9568, 14.2844, 0.55", "-17.1999, -44.4582, 15.0711, 0.55", "-18.8058, -46.5289, 16.3041, 0.55", "-19.5797, -47.4794, 16.9074, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.52951, -42.3202, 1.9633, 0.28", "4.69484, -57.2749, 1.9633, 0.28", "5.86017, -72.2296, 1.9633, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.58533, -38.9942, -29.7166, 0.55", "-2.94887, -42.5594, -34.6068, 0.55", "-3.02005, -43.9751, -36.4059, 0.55", "-2.80959, -47.8146, -41.1868, 0.55", "-2.52702, -50.0599, -43.8228, 0.55", "-2.25224, -52.2433, -46.3862, 0.28", "-1.9957, -54.2817, -48.7794, 0.28", "-1.81428, -55.1344, -49.7755, 0.55", "-0.293888, -60.3305, -55.8165, 0.28", "0.285805, -61.8952, -57.329, 0.55", "1.91609, -70.4184, -64.539, 0.55", "5.58132, -77.1725, -72.7998, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.58533, -38.9942, -29.7166, 0.55", "-3.56836, -37.5269, -35.3337, 0.55", "-4.82305, -35.654, -42.5031, 0.55", "-6.04795, -33.8257, -49.5022, 0.28", "-6.65235, -32.9235, -52.9558, 0.55", "-9.41828, -30.9661, -63.2835, 0.55", "-13.8524, -28.7441, -72.9552, 0.55", "-18.9469, -26.0034, -82.1572, 0.55", "-22.7678, -23.6964, -92.0679, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.804826, 16.8214, -0.358593, 1.66", "0.602325, 21.095, -0.481122, 1.66", "0.436666, 24.591, -0.581358, 1.66", "0.302822, 27.4157, -0.662343, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.804826, 16.8214, -0.358593, 1.11", "0.260611, 17.7364, 3.79875, 1.11", "0.128845, 17.958, 4.80533, 1.11", "-0.660841, 19.2857, 10.8378, 0.83", "-1.09262, 20.0117, 14.1363, 0.83", "-2.60131, 22.5483, 25.6614, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.91577, -23.4862, 7.09755, 1.66", "-3.00098, -24.0307, 7.10394, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.91577, -23.4862, 7.09755, 0.55", "-3.26949, -26.475, 9.2255, 0.55", "-3.43018, -29.049, 11.1732, 0.55", "-3.4739, -29.9123, 11.85, 0.55", "-3.62034, -32.4951, 13.9339, 0.55", "-3.63676, -34.6973, 15.7418, 0.55", "-3.59853, -37.246, 17.7871, 0.55", "-3.57095, -38.6375, 19.0454, 0.55", "-3.60681, -40.5081, 20.7816, 0.55", "-3.73329, -42.4658, 22.5983, 0.55", "-3.88406, -44.5918, 24.5663, 0.55", "-4.00538, -45.7064, 25.631, 0.55", "-4.30478, -48.0466, 28.04, 0.55", "-4.49664, -49.9423, 29.978, 0.55", "-4.5558, -50.9121, 31.0027, 0.55", "-4.6295, -52.1141, 32.3667, 0.55", "-4.83581, -53.8689, 34.4608, 0.55", "-5.1038, -55.9375, 37.0984, 0.55", "-5.43575, -58.4743, 40.3717, 0.55", "-5.77999, -60.6916, 43.4146, 0.55", "-6.02499, -62.0917, 45.3971, 0.55", "-6.49744, -64.2138, 48.4639, 0.55", "-7.04392, -66.0831, 51.2516, 0.55", "-7.77135, -67.868, 54.0844, 0.55", "-8.6424, -69.5085, 57.0179, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-19.5797, -47.4794, 16.9074, 0.55", "-24.801, -48.0087, 21.272, 0.55", "-27.1213, -48.1607, 23.0616, 0.55", "-30.4408, -48.4266, 25.4303, 0.55", "-34.2836, -48.8094, 28.0242, 0.55", "-37.5644, -49.1123, 30.1298, 0.55", "-43.0104, -49.6948, 33.4912, 0.55", "-48.3714, -50.305, 36.6588, 0.55", "-52.3662, -50.8677, 39.2074, 0.55", "-55.5122, -51.3251, 41.2205, 0.55", "-60.4374, -52.1186, 44.3116, 0.55", "-63.2323, -52.6018, 46.1409, 0.28", "-67.2647, -53.6188, 48.8074, 0.55", "-71.8448, -54.8171, 52.2318, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-19.5797, -47.4794, 16.9074, 0.55", "-19.8366, -48.8306, 19.4301, 0.55", "-20.2713, -52.0092, 24.9722, 0.55", "-20.6091, -53.7294, 27.9307, 0.55", "-21.0436, -55.6699, 31.2628, 0.55", "-21.4551, -57.5404, 34.5524, 0.55", "-22.0069, -60.049, 38.9645, 0.55", "-22.7197, -62.7793, 43.7159, 0.55", "-23.4296, -65.6828, 48.3902, 0.55", "-23.8937, -67.7865, 51.8052, 0.55", "-24.5793, -70.1049, 55.8276, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.302822, 27.4157, -0.662343, 1.11", "-0.841892, 29.2969, -0.833678, 1.11", "-1.66508, 30.6497, -0.956888, 1.11", "-2.55397, 32.1105, -1.08993, 0.83", "-3.11104, 33.026, -1.17331, 0.83", "-4.17347, 34.7721, -1.33233, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.302822, 27.4157, -0.662343, 0.55", "1.7487, 29.5162, -3.0304, 0.55", "2.44199, 30.4909, -3.94307, 0.55", "5.30379, 34.2766, -7.02217, 0.55", "6.87932, 36.3941, -8.49806, 0.55", "8.43054, 38.4356, -9.76123, 0.55", "9.37018, 39.6371, -10.4448, 0.55", "10.9573, 41.4624, -11.1805, 0.55", "12.3635, 42.912, -11.6046, 0.55", "13.8924, 44.3659, -11.9737, 0.55", "15.3689, 45.7644, -12.4082, 0.55", "16.2878, 46.6589, -12.7161, 0.55", "19.9312, 50.1935, -14.1618, 0.55", "21.994, 52.1395, -15.0691, 0.55", "24.7222, 54.6417, -16.3352, 0.55", "26.2038, 55.906, -17.0411, 0.55", "27.4359, 56.8916, -17.5822, 0.55", "29.5633, 58.5181, -18.6519, 0.83", "32.0465, 60.421, -20.1205, 0.55", "33.7228, 61.7786, -21.1302, 0.55", "34.6996, 62.5399, -21.6542, 0.55", "36.8925, 64.1471, -22.8416, 0.55", "41.0016, 66.9788, -25.0198, 0.55", "43.5702, 68.8836, -26.3607, 0.55", "44.8832, 69.9716, -27.0765, 0.83", "46.2871, 71.2163, -27.8343, 0.55", "47.4384, 72.2378, -28.3069, 0.55", "48.4691, 73.0534, -28.499, 0.55", "50.4564, 74.357, -28.4111, 0.55", "51.8884, 75.2208, -28.2549, 0.55", "52.5576, 75.6489, -28.1655, 0.55", "56.9012, 79.0294, -27.2514, 0.55", "59.4703, 81.3906, -26.548, 0.55", "60.4662, 82.3608, -26.2498, 0.55", "61.3382, 83.3043, -25.9126, 0.55", "62.39, 84.6744, -25.4881, 0.55", "64.6787, 88.3542, -24.6088, 0.55", "65.2066, 89.3806, -24.3849, 0.55", "66.2144, 91.3721, -24.0294, 0.55", "67.7633, 94.399, -23.444, 0.55", "69.1253, 96.8462, -22.9692, 0.55", "70.3133, 98.6432, -22.5919, 0.55", "72.5198, 101.455, -22.0692, 0.55", "73.6338, 102.732, -21.8553, 0.55", "74.8154, 104.035, -21.6632, 0.28", "75.639, 104.879, -21.518, 0.83", "78.2823, 107.564, -20.8994, 0.55", "80.8371, 110.29, -20.4022, 0.55", "82.0992, 111.662, -20.2263, 0.28", "82.915, 112.524, -20.1053, 0.55", "85.1214, 114.738, -19.7825, 0.28", "86.4369, 116.139, -19.5683, 0.28", "87.6892, 117.847, -19.3305, 0.28", "93.6026, 125.368, -18.9167, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.60131, 22.5483, 25.6614, 0.83", "-3.22309, 24.4245, 25.1563, 0.83", "-3.56863, 26.0184, 25.0931, 0.83", "-4.26195, 29.4104, 25.4749, 0.55", "-4.63732, 31.4184, 26.192, 0.55", "-4.79921, 32.4167, 26.7587, 0.55", "-5.32822, 35.2634, 28.9302, 0.55", "-5.78349, 37.3898, 31.2286, 0.55", "-6.22985, 39.3881, 33.7931, 0.55", "-6.97723, 42.6617, 38.5611, 0.55", "-7.52828, 45.1031, 42.4005, 0.55", "-8.07278, 47.2, 45.9749, 0.55", "-8.67904, 49.0266, 49.4544, 0.55", "-8.95734, 49.718, 50.9493, 0.55", "-9.3721, 50.7485, 53.5273, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.60131, 22.5483, 25.6614, 0.55", "-2.64139, 23.3575, 27.2992, 0.55", "-2.46368, 25.3056, 31.1294, 0.55", "-2.18179, 27.8246, 35.6915, 0.55", "-1.9226, 30.1777, 39.7687, 0.55", "-1.6859, 31.7232, 42.3375, 0.55", "-1.48357, 32.7674, 44.0969, 0.55", "-0.868052, 35.0896, 48.0188, 0.55", "-0.263248, 36.7345, 50.7765, 0.55", "0.729675, 39.0033, 54.7396, 0.55", "1.22971, 40.0549, 56.7281, 0.55", "2.0316, 41.6528, 59.8674, 0.55", "2.96346, 43.4905, 63.6665, 0.55", "4.11112, 45.7274, 68.6453, 0.55", "5.25657, 47.5722, 73.2004, 0.55", "6.31214, 49.2239, 77.4869, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.00098, -24.0307, 7.10394, 1.11", "-5.21324, -28.1297, 4.59122, 1.11", "-7.31354, -32.0213, 2.20566, 1.11", "-8.56453, -34.3392, 0.784759, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.00098, -24.0307, 7.10394, 0.55", "-1.04273, -25.9718, 5.96091, 0.55", "0.114277, -27.129, 5.09494, 0.55", "1.14636, -28.2881, 4.29212, 0.55", "1.58108, -28.7411, 3.9977, 0.55", "3.19587, -30.4422, 2.92159, 0.55", "4.44348, -31.7717, 2.20692, 0.55", "6.42742, -33.93, 1.3292, 0.55", "8.06094, -35.8013, 0.668898, 0.55", "10.0303, -38.0239, 0.0679529, 0.55", "11.4989, -39.5984, -0.244919, 0.55", "15.4769, -43.7, -0.389161, 0.55", "16.6708, -44.937, -0.267188, 0.55", "17.3067, -45.5839, -0.119017, 0.55", "19.4339, -47.6999, 0.523852, 0.55", "20.3694, -48.6711, 0.925276, 0.55", "23.4279, -51.5748, 2.50685, 0.55", "24.3376, -52.4182, 3.01492, 0.55", "25.3244, -53.2878, 3.48981, 0.55", "26.4368, -54.2487, 3.98276, 0.55", "29.2345, -56.6368, 5.14892, 0.55", "31.8561, -58.8654, 6.15863, 0.55", "33.2639, -60.0062, 6.54127, 0.55", "35.632, -61.8917, 7.07185, 0.55", "36.167, -62.3237, 7.16073, 0.55", "38.4536, -64.2091, 7.34672, 0.55", "39.6972, -65.3014, 7.21132, 0.83", "41.4077, -67.0, 6.94629, 0.28", "42.3747, -67.9718, 6.80941, 0.55", "43.3952, -69.0638, 6.40393, 0.28", "44.746, -70.5173, 5.65076, 0.83", "46.3257, -72.279, 4.60117, 0.28", "48.2918, -74.4609, 3.27025, 0.28", "49.0001, -75.27, 2.7985, 0.55", "53.1638, -80.0361, -0.413983, 0.28", "53.653, -80.5387, -0.847846, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-24.5793, -70.1049, 55.8276, 0.55", "-25.667, -71.7977, 57.2477, 0.55", "-26.9266, -73.571, 58.6825, 0.55", "-28.7225, -76.0991, 60.728, 0.55", "-30.3199, -78.3479, 62.5475, 0.55", "-31.9359, -80.6228, 64.3881, 0.55", "-33.069, -82.218, 65.6787, 0.28", "-33.7497, -83.0703, 66.4045, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-24.5793, -70.1049, 55.8276, 0.55", "-25.0863, -71.4075, 58.8662, 0.55", "-25.9312, -73.5779, 63.9297, 0.55", "-26.5479, -75.1623, 67.6261, 0.55", "-27.1196, -76.6308, 71.052, 0.55", "-27.9903, -78.8677, 76.2704, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.17347, 34.7721, -1.33233, 0.55", "-5.85261, 35.7828, -0.213605, 0.55", "-13.1224, 40.3623, 4.0365, 0.55", "-15.9884, 42.176, 5.61725, 0.55", "-19.4387, 44.2823, 7.10223, 0.55", "-23.2178, 46.4005, 8.56005, 0.55", "-26.656, 48.2345, 9.87402, 0.55", "-28.2101, 49.0257, 10.3968, 0.55", "-30.9886, 50.4595, 11.1646, 0.55", "-36.4417, 53.3141, 12.7142, 0.55", "-41.2845, 55.9925, 14.4682, 0.55", "-45.9717, 58.6504, 16.2943, 0.55", "-48.2026, 60.1381, 17.319, 0.55", "-49.6684, 61.4075, 18.0272, 0.55", "-51.8149, 64.0014, 19.1322, 0.55", "-54.0249, 67.6766, 20.4392, 0.55", "-56.8009, 73.8853, 21.8442, 0.55", "-58.7244, 79.1822, 22.6813, 0.55", "-60.7053, 86.098, 23.7826, 0.55", "-61.7481, 90.5528, 24.5629, 0.28", "-61.9575, 91.785, 24.7847, 0.28", "-62.2472, 93.7739, 25.1494, 0.55", "-62.3535, 96.4353, 25.9136, 0.55", "-62.3807, 100.617, 27.1792, 0.55", "-62.2043, 102.691, 28.0965, 0.28", "-62.0971, 105.025, 29.1921, 0.55", "-62.1415, 108.309, 30.71, 0.28", "-62.5018, 112.237, 32.4607, 0.55", "-62.9051, 115.589, 33.8836, 0.55", "-63.5863, 119.138, 35.2276, 0.28", "-64.4889, 123.582, 36.9425, 0.28", "-64.8062, 124.772, 37.4243, 0.28", "-65.7426, 127.45, 38.2892, 0.55", "-70.6936, 137.163, 42.2165, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.17347, 34.7721, -1.33233, 0.55", "-4.30198, 36.788, -2.60123, 0.55", "-4.40592, 37.8401, -3.20615, 0.55", "-4.77097, 40.1664, -4.44568, 0.55", "-5.38555, 43.4868, -6.04107, 0.55", "-5.95219, 47.1374, -7.64029, 0.55", "-6.28585, 49.1215, -8.44661, 0.55", "-6.75898, 51.2462, -9.23974, 0.55", "-7.1676, 52.7678, -9.7437, 0.55", "-7.64746, 54.5491, -10.3105, 0.55", "-8.30215, 57.0895, -11.0092, 0.55", "-9.01607, 59.6557, -11.683, 0.55", "-9.52126, 61.3746, -12.136, 0.55", "-10.1407, 63.6055, -12.7197, 0.55", "-11.46, 69.3632, -13.9411, 0.55", "-11.8756, 71.7871, -14.3526, 0.55", "-12.1575, 73.8632, -14.6415, 0.55", "-12.4124, 76.6615, -14.9355, 0.55", "-12.4682, 77.6411, -15.0082, 0.55", "-12.5177, 84.5193, -15.0497, 0.55", "-12.4724, 88.4209, -14.9112, 0.55", "-12.3386, 91.8749, -14.8181, 0.55", "-12.1819, 94.2138, -14.806, 0.55", "-11.8952, 96.9417, -14.7355, 0.55", "-11.4245, 100.611, -14.5716, 0.28", "-11.0524, 103.213, -14.3994, 0.28", "-10.6828, 105.759, -14.153, 0.55", "-9.53856, 112.449, -13.2731, 0.55", "-8.89861, 116.049, -12.7789, 0.28", "-8.57899, 117.99, -12.5098, 0.55", "-8.25867, 120.076, -12.2508, 0.55", "-7.99013, 121.971, -12.0123, 0.55", "-7.6956, 124.443, -11.794, 0.55", "-7.25982, 127.422, -11.5911, 0.55", "-6.94487, 129.592, -11.5967, 0.28", "-6.42135, 132.836, -11.5714, 0.55", "-5.91656, 135.79, -11.5382, 0.28", "-5.4463, 138.437, -11.5236, 0.55", "-4.62992, 142.937, -11.5358, 0.55", "-4.07174, 146.034, -11.5075, 0.55", "-2.62326, 154.118, -11.295, 0.28", "-2.1292, 156.847, -11.1461, 0.55", "-0.468507, 166.479, -12.2716, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-9.3721, 50.7485, 53.5273, 0.55", "-11.7635, 51.5047, 61.8907, 0.55", "-12.5898, 51.7661, 64.7805, 0.55", "-14.7142, 52.4379, 72.2101, 0.55", "-16.6818, 53.0602, 79.0914, 0.55", "-17.8547, 53.431, 83.1932, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.3721, 50.7485, 53.5273, 0.55", "-9.78341, 51.9925, 53.6324, 0.55", "-10.2865, 53.6106, 53.8094, 0.55", "-11.7794, 58.6847, 54.5178, 0.55", "-13.5404, 64.5818, 55.6156, 0.55", "-14.6476, 68.2352, 56.365, 0.55", "-16.6292, 74.5502, 57.7128, 0.55", "-18.2861, 79.6205, 58.9804, 0.55", "-19.4622, 82.8456, 59.9772, 0.55", "-21.2266, 87.1362, 61.6471, 0.55", "-22.1061, 88.9097, 62.4593, 0.55", "-23.0848, 90.5434, 63.3876, 0.55", "-25.5821, 93.8412, 65.5901, 0.55", "-27.794, 96.1613, 67.2361, 0.55", "-30.2996, 98.287, 68.9717, 0.55", "-33.2006, 100.549, 70.9232, 0.55", "-36.2608, 102.781, 72.9744, 0.55", "-41.1074, 106.078, 76.136, 0.28", "-44.7394, 108.308, 78.2899, 0.28", "-48.0502, 110.279, 80.1595, 0.28" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-8.56453, -34.3392, 0.784759, 1.11", "-8.58295, -36.9783, 0.151026, 1.11", "-8.60427, -40.034, -0.582723, 1.11", "-8.62922, -43.6096, -1.44135, 1.11", "-8.64963, -46.534, -2.1436, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-8.56453, -34.3392, 0.784759, 0.55", "-10.5221, -35.5392, 1.37886, 0.55", "-12.5141, -36.9592, 1.97709, 0.55", "-14.4213, -38.3376, 2.22343, 0.55", "-16.2794, -39.7399, 2.40195, 0.55", "-18.3104, -41.2871, 2.69195, 0.55", "-20.3802, -42.8909, 3.02143, 0.55", "-23.1633, -45.2791, 3.46532, 0.55", "-26.2517, -48.1825, 3.88261, 0.55", "-27.5873, -49.4097, 4.06952, 0.55", "-30.4029, -51.8887, 4.43405, 0.55", "-31.47, -52.7586, 4.57706, 0.55", "-32.5851, -53.592, 4.76538, 0.55", "-35.2689, -55.5048, 5.26433, 0.55", "-39.6779, -58.5028, 6.09517, 0.55", "-41.6258, -59.7151, 6.32166, 0.55", "-43.543, -60.8589, 6.45728, 0.55", "-44.8658, -61.5896, 6.56709, 0.55", "-46.1579, -62.2266, 6.68331, 0.28", "-47.7967, -62.9296, 6.8643, 0.83", "-48.5836, -63.1852, 6.81313, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.64963, -46.534, -2.1436, 1.11", "-9.02521, -49.1508, -2.67261, 1.11", "-9.80431, -54.5792, -3.76996, 0.83", "-10.3696, -58.5177, -4.56614, 0.83", "-10.8476, -61.8479, -5.23938, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.64963, -46.534, -2.1436, 0.55", "-10.4906, -49.7705, -0.679783, 0.55", "-11.5151, -51.8317, 0.0921269, 0.55", "-13.0585, -55.3682, 1.17766, 0.55", "-14.7004, -59.3032, 2.22263, 0.55", "-16.0954, -62.7406, 3.24856, 0.55", "-16.9208, -64.7744, 3.85561, 0.55", "-17.7213, -66.8112, 4.30681, 0.55", "-18.5673, -69.2923, 4.82885, 0.55", "-18.8662, -70.3432, 5.02854, 0.55", "-19.7354, -74.9758, 5.48855, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-48.5836, -63.1852, 6.81313, 0.55", "-51.0783, -63.5121, 4.84779, 0.55", "-52.3352, -63.753, 3.88496, 0.55", "-58.0963, -64.6192, -1.001, 0.55", "-60.6795, -64.9321, -3.17105, 0.28", "-61.9889, -65.0907, -4.2711, 0.28", "-63.8113, -65.3116, -5.80203, 0.55", "-65.7987, -65.5977, -7.65107, 0.55", "-71.5217, -66.4339, -13.1053, 0.28", "-72.7655, -66.5706, -14.1751, 0.83", "-79.9206, -69.1991, -22.8468, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-48.5836, -63.1852, 6.81313, 0.28", "-49.6137, -63.444, 5.79818, 0.28", "-50.0471, -63.5349, 5.36617, 0.55", "-54.4937, -64.468, 0.933081, 0.28", "-54.7662, -64.5253, 0.661388, 0.55", "-55.9991, -64.784, -0.567719, 0.28", "-56.492, -64.8875, -1.05913, 0.55", "-59.8699, -65.502, -4.77083, 0.28", "-63.5043, -66.942, -9.55527, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.8476, -61.8479, -5.23938, 0.83", "-11.6429, -64.2695, -5.48454, 0.83", "-12.4951, -66.8643, -5.74726, 0.83", "-13.9658, -71.3423, -6.20063, 0.83", "-14.8192, -73.9408, -6.46371, 0.83", "-15.9975, -77.5282, -6.82694, 0.83", "-16.8298, -80.0623, -7.08349, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.8476, -61.8479, -5.23938, 0.55", "-10.0271, -63.6763, -5.12989, 0.55", "-9.20518, -65.7151, -5.14584, 0.55", "-7.95549, -69.4738, -4.8595, 0.55", "-6.34839, -73.8512, -4.48593, 0.55", "-5.71262, -75.6485, -4.32713, 0.55", "-4.8918, -77.8914, -4.13462, 0.55", "-3.44331, -81.6806, -3.83395, 0.55", "-1.17077, -87.3409, -3.53647, 0.55", "1.51603, -93.5607, -3.56699, 0.55", "2.22957, -95.1718, -3.68785, 0.55", "3.12571, -97.0266, -3.89073, 0.55", "5.58189, -101.981, -4.59223, 0.55", "8.45887, -107.531, -5.59264, 0.55", "10.4769, -111.121, -6.5134, 0.28", "11.2379, -112.534, -6.87981, 0.28", "12.2405, -114.323, -7.31543, 0.28", "13.2331, -115.983, -7.67566, 0.28", "15.029, -118.819, -8.1161, 0.55", "16.7242, -121.202, -8.31396, 0.55", "18.4663, -123.604, -8.39112, 0.55", "20.9695, -127.084, -8.47978, 0.55", "23.9963, -131.426, -8.38332, 0.55", "25.7263, -133.858, -8.30252, 0.28", "27.6653, -136.682, -8.15108, 0.28", "28.4073, -137.776, -8.06791, 0.28", "29.9369, -139.911, -7.84697, 0.55", "32.1699, -143.668, -7.22692, 0.28", "35.1098, -155.033, -8.90077, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-19.7354, -74.9758, 5.48855, 0.55", "-20.4756, -76.6502, 6.32578, 0.55", "-21.6583, -79.3254, 7.66351, 0.55", "-22.6542, -81.578, 8.78989, 0.28", "-23.9071, -84.4119, 10.2069, 0.55", "-24.3226, -85.3518, 10.6769, 0.28" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.7354, -74.9758, 5.48855, 0.55", "-20.5404, -77.9352, 7.24466, 0.55", "-20.8525, -79.1939, 8.24516, 0.55", "-21.385, -81.566, 10.4638, 0.55", "-21.6348, -83.0716, 12.0771, 0.55", "-21.8483, -84.4948, 13.6634, 0.55", "-22.204, -87.4171, 16.832, 0.55", "-22.5561, -89.7147, 19.3781, 0.55", "-22.6578, -91.2259, 21.2294, 0.55", "-22.6308, -93.2658, 23.9386, 0.28", "-22.6305, -94.1126, 25.1207, 0.55", "-22.6743, -95.186, 26.6914, 0.28", "-22.7748, -96.607, 28.63, 0.55", "-23.1236, -99.569, 32.5562, 0.28", "-23.255, -100.232, 33.45, 0.55", "-23.6944, -101.455, 35.3057, 0.28", "-24.0257, -102.193, 36.8328, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.8298, -80.0623, -7.08349, 0.83", "-17.5316, -82.378, -7.26859, 0.83", "-18.2898, -84.8799, -7.46857, 0.83", "-18.9774, -87.1487, -7.64992, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.8298, -80.0623, -7.08349, 0.55", "-17.8351, -80.4863, -7.34096, 0.55", "-19.0002, -80.8785, -7.70421, 0.55", "-20.7452, -81.4787, -8.22375, 0.55", "-22.1943, -81.9882, -8.62088, 1.38", "-22.6704, -82.15, -8.73954, 1.38", "-24.5731, -82.7831, -9.22938, 0.55", "-25.6879, -83.1445, -9.63507, 0.55", "-26.855, -83.5422, -10.2096, 0.55", "-27.2876, -83.7031, -10.4367, 0.55", "-27.7274, -83.8729, -10.6626, 0.55", "-29.4855, -84.6502, -11.5326, 0.55", "-31.3347, -85.6544, -12.4285, 0.55", "-33.1695, -86.782, -13.3413, 0.55", "-34.6252, -87.7065, -14.0127, 0.55", "-35.8122, -88.5742, -14.5274, 0.28", "-36.7653, -89.3073, -14.9752, 0.55", "-37.9732, -90.2751, -15.5143, 0.55", "-39.9898, -91.9332, -16.3476, 0.55", "-41.6719, -93.372, -17.0584, 0.55", "-43.3809, -94.8604, -17.8877, 0.55", "-46.4752, -97.5429, -19.5663, 0.55", "-47.201, -98.1199, -19.9906, 0.55", "-51.3644, -100.056, -22.39, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.9774, -87.1487, -7.64992, 0.83", "-18.535, -91.8754, -5.16326, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-18.9774, -87.1487, -7.64992, 0.55", "-21.7387, -89.3318, -7.94726, 0.55", "-22.3574, -89.873, -7.95923, 0.28", "-26.4353, -93.2178, -8.23495, 0.28", "-28.0668, -94.4969, -8.46037, 0.28", "-28.8024, -95.0869, -8.58781, 0.28", "-30.5647, -96.5151, -9.0459, 0.28", "-32.3657, -98.0923, -9.59835, 0.55", "-35.786, -101.297, -10.8754, 0.55", "-37.8351, -103.263, -11.7916, 0.28", "-38.7967, -104.171, -12.2889, 0.55", "-41.8657, -107.066, -14.087, 0.28", "-42.8337, -107.943, -14.7311, 0.55", "-44.2554, -109.363, -15.882, 0.55", "-50.1066, -115.259, -16.4679, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-18.535, -91.8754, -5.16326, 0.83", "-19.8828, -96.1881, -7.17726, 0.83", "-20.4245, -97.9551, -7.84937, 0.83", "-21.8278, -101.895, -9.05446, 0.55", "-22.8468, -104.575, -9.61702, 0.55", "-23.3993, -106.046, -9.83618, 0.55", "-24.4821, -109.099, -10.1791, 0.55", "-25.3039, -111.683, -10.1216, 0.55", "-26.2594, -114.641, -9.83683, 0.55", "-27.0446, -117.139, -9.50098, 0.55", "-27.4157, -118.586, -9.27379, 0.55", "-27.6839, -119.85, -9.12376, 0.55", "-27.9099, -121.34, -9.01571, 0.55", "-28.1779, -123.412, -8.96386, 0.55", "-28.3979, -126.016, -9.17684, 0.55", "-28.703, -128.331, -9.53374, 0.55", "-29.0046, -130.106, -9.72635, 0.55", "-29.1773, -131.254, -9.80713, 0.55", "-29.4486, -133.073, -9.86033, 0.55", "-29.7942, -135.783, -9.84145, 0.55", "-30.144, -139.139, -9.89057, 0.55", "-30.439, -142.166, -10.0297, 0.55", "-30.6398, -145.281, -10.2442, 0.55", "-30.8742, -148.382, -10.6221, 0.55", "-31.0216, -150.438, -10.9815, 0.55", "-31.2602, -153.972, -11.7028, 0.55", "-31.5262, -157.26, -12.6203, 0.55", "-31.8348, -160.182, -13.7031, 0.55", "-32.4397, -164.94, -15.6304, 0.55", "-32.7459, -167.262, -16.5203, 0.55", "-33.1166, -169.705, -17.3538, 0.55", "-33.5014, -172.213, -18.0637, 0.55", "-34.0913, -175.847, -19.1263, 0.55", "-34.5192, -178.115, -19.5944, 0.55", "-35.2526, -182.26, -20.2067, 0.55", "-35.5609, -184.116, -20.4265, 0.55", "-35.8934, -186.288, -20.638, 0.55", "-36.4716, -190.827, -21.1285, 0.55", "-37.2779, -197.863, -22.1266, 0.55", "-37.6338, -201.439, -22.8598, 0.55", "-37.8187, -203.394, -23.3728, 0.55", "-38.0121, -205.142, -23.8478, 0.55", "-38.3966, -209.077, -24.9315, 0.55", "-38.5295, -211.202, -25.483, 0.55", "-38.6302, -212.961, -26.007, 0.55", "-38.8014, -215.581, -26.7041, 0.55", "-39.0451, -218.62, -27.3701, 0.55", "-39.2684, -220.945, -27.8707, 0.55", "-39.6621, -224.288, -28.4989, 0.55", "-39.7255, -224.855, -28.6102, 0.55", "-40.2, -229.874, -29.7224, 0.55", "-40.6344, -235.448, -31.0492, 0.55", "-40.8758, -239.135, -31.8142, 0.55", "-41.0171, -241.188, -32.2322, 0.28", "-41.0646, -242.206, -32.4314, 0.28", "-41.1102, -243.5, -32.6846, 0.55", "-41.243, -246.349, -33.2471, 0.28", "-41.3962, -250.012, -34.1171, 0.28", "-41.5981, -253.189, -34.8108, 0.28", "-41.6496, -253.942, -34.9825, 0.55", "-41.9956, -256.99, -35.7884, 0.28", "-42.5738, -260.638, -36.7916, 0.28", "-43.0242, -263.188, -37.3889, 0.28", "-43.9052, -267.971, -38.3069, 0.28", "-44.4659, -270.718, -38.5638, 0.55", "-45.615, -276.054, -38.7603, 0.28", "-46.5134, -279.99, -38.6642, 0.28", "-47.3878, -283.826, -38.4338, 0.55", "-47.884, -285.904, -38.2712, 0.28", "-49.5176, -292.675, -37.6118, 0.28", "-50.1496, -295.199, -37.4329, 0.55", "-51.1446, -299.503, -37.0947, 0.28", "-51.5337, -301.3, -37.0239, 0.83", "-52.4573, -305.616, -37.0414, 0.28", "-52.6948, -306.923, -37.069, 0.55", "-53.4172, -312.717, -37.3157, 0.28", "-53.7995, -316.039, -37.4821, 0.55", "-54.0814, -318.993, -37.6596, 0.28", "-54.1692, -320.057, -37.7277, 0.55", "-54.3783, -324.269, -38.011, 0.28", "-54.3981, -325.375, -38.066, 0.83", "-56.6513, -334.395, -39.3193, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-18.535, -91.8754, -5.16326, 0.55", "-18.4681, -94.7506, -5.28608, 0.55", "-18.2733, -97.7729, -5.16764, 0.55", "-18.1982, -100.69, -4.91152, 0.55", "-18.1431, -104.514, -4.51408, 0.55", "-17.9194, -108.023, -3.97282, 0.55", "-17.3612, -113.993, -2.89959, 0.55", "-16.9466, -116.568, -2.1584, 0.55", "-16.2391, -119.415, -1.19957, 0.55", "-15.9261, -120.405, -0.806492, 0.55", "-14.3193, -124.802, 1.23257, 0.55", "-13.2019, -127.456, 2.53106, 0.55", "-11.4908, -131.513, 4.61303, 0.55", "-10.4028, -134.069, 5.96718, 0.55", "-8.58859, -138.327, 8.35566, 0.55", "-7.22796, -141.893, 10.5491, 0.55", "-6.50865, -143.948, 11.9722, 0.55", "-5.47169, -147.042, 14.3737, 0.55", "-4.48271, -150.304, 16.9547, 0.55", "-3.62741, -153.294, 19.3602, 0.55", "-2.80104, -156.451, 21.8562, 0.55", "-1.69064, -160.902, 25.174, 0.55", "-1.24588, -162.738, 26.4537, 0.28", "-0.779107, -164.833, 27.6398, 0.55", "-0.464377, -167.299, 28.3903, 0.28", "-0.374596, -168.397, 28.4728, 0.55", "-0.346909, -169.354, 28.3184, 0.28", "-0.402378, -170.583, 27.8845, 0.83", "-0.596082, -175.639, 25.8369, 0.28", "-0.647737, -176.692, 25.4599, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_42", "dend_41", "dend_28", "dend_27", "dend_0", "axon_0", "dend_44", "dend_43", "dend_30", "dend_29", "dend_6", "dend_1", "axon_1", "dend_46", "dend_45", "dend_36", "dend_31", "dend_8", "dend_7", "dend_5", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_10", "dend_9", "dend_4", "dend_3", "dend_40", "dend_39", "dend_35", "dend_34", "dend_14", "dend_11", "dend_18", "dend_15", "dend_13", "dend_12", "dend_20", "dend_19", "dend_17", "dend_16", "dend_22", "dend_21", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_LBC_78b571a886_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, axon_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, axon_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999995275182907)
    connect dend_42(0), soma_0(0.4999995275182907)
    connect dend_41(0), soma_0(0.4999995275182907)
    connect dend_28(0), soma_0(0.4999995275182907)
    connect dend_27(0), soma_0(0.4999995275182907)
    connect dend_0(0), soma_0(0.4999995275182907)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.701302, 11.9739, -1.24376, 2.36127 ) }
    soma_0 { pt3dadd( -0.606294, 10.7546, -1.0834, 3.83931 ) }
    soma_0 { pt3dadd( -0.511286, 9.53541, -0.92305, 4.78417 ) }
    soma_0 { pt3dadd( -0.416278, 8.31617, -0.762698, 6.14661 ) }
    soma_0 { pt3dadd( -0.32127, 7.09693, -0.602345, 7.73722 ) }
    soma_0 { pt3dadd( -0.226261, 5.8777, -0.441992, 8.31396 ) }
    soma_0 { pt3dadd( -0.131253, 4.65846, -0.281639, 8.14547 ) }
    soma_0 { pt3dadd( -0.0362448, 3.43922, -0.121287, 7.98262 ) }
    soma_0 { pt3dadd( 0.0587634, 2.21999, 0.0390659, 7.82998 ) }
    soma_0 { pt3dadd( 0.153772, 1.00075, 0.199419, 7.57671 ) }
    soma_0 { pt3dadd( 0.24878, -0.218488, 0.359771, 7.56649 ) }
    soma_0 { pt3dadd( 0.343788, -1.43772, 0.520124, 7.52579 ) }
    soma_0 { pt3dadd( 0.438796, -2.65696, 0.680477, 7.17937 ) }
    soma_0 { pt3dadd( 0.533805, -3.8762, 0.840829, 6.69186 ) }
    soma_0 { pt3dadd( 0.628813, -5.09544, 1.00118, 6.36625 ) }
    soma_0 { pt3dadd( 0.723821, -6.31467, 1.16153, 6.05036 ) }
    soma_0 { pt3dadd( 0.818829, -7.53391, 1.32189, 5.80715 ) }
    soma_0 { pt3dadd( 0.913837, -8.75315, 1.48224, 5.61319 ) }
    soma_0 { pt3dadd( 1.00885, -9.97238, 1.64259, 5.41924 ) }
    soma_0 { pt3dadd( 1.10385, -11.1916, 1.80295, 4.79633 ) }
    soma_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 2.79741 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.06534, -11.3454, -6.34462, 0.83 ) }
    dend_47 { pt3dadd( 4.27089, -12.5298, -6.36132, 0.83 ) }
    dend_47 { pt3dadd( 4.92003, -13.1366, -6.33617, 0.83 ) }
    dend_47 { pt3dadd( 6.58645, -14.823, -6.23675, 0.55 ) }
    dend_47 { pt3dadd( 7.78734, -16.1097, -6.16448, 0.55 ) }
    dend_47 { pt3dadd( 8.94899, -17.3415, -6.09984, 0.83 ) }
    dend_47 { pt3dadd( 12.4632, -21.1134, -5.98604, 0.55 ) }
    dend_47 { pt3dadd( 14.2716, -23.1325, -6.03116, 0.55 ) }
    dend_47 { pt3dadd( 15.5335, -24.6186, -6.15566, 0.55 ) }
    dend_47 { pt3dadd( 20.0878, -30.2795, -6.8797, 0.55 ) }
    dend_47 { pt3dadd( 20.9853, -31.3652, -7.06306, 0.55 ) }
    dend_47 { pt3dadd( 22.8166, -33.5556, -7.58013, 0.55 ) }
    dend_47 { pt3dadd( 26.0143, -37.2758, -8.8522, 0.55 ) }
    dend_47 { pt3dadd( 27.9228, -39.4989, -9.81413, 0.55 ) }
    dend_47 { pt3dadd( 29.6404, -41.4228, -10.7869, 0.55 ) }
    dend_47 { pt3dadd( 31.6827, -43.743, -12.1063, 0.55 ) }
    dend_47 { pt3dadd( 34.3132, -46.7425, -13.7956, 0.55 ) }
    dend_47 { pt3dadd( 36.3871, -49.0458, -15.0772, 0.55 ) }
    dend_47 { pt3dadd( 38.6791, -51.5498, -16.6055, 0.55 ) }
    dend_47 { pt3dadd( 39.6519, -52.5863, -17.2816, 0.55 ) }
    dend_47 { pt3dadd( 40.7526, -53.8251, -18.1684, 0.28 ) }
    dend_47 { pt3dadd( 41.7726, -54.997, -19.037, 0.55 ) }
    dend_47 { pt3dadd( 43.5866, -56.821, -20.3786, 0.28 ) }
    dend_47 { pt3dadd( 46.2058, -59.2996, -22.1833, 0.28 ) }
    dend_47 { pt3dadd( 47.0836, -60.0028, -22.7502, 0.55 ) }
    dend_47 { pt3dadd( 50.076, -62.0743, -24.5598, 0.28 ) }
    dend_47 { pt3dadd( 51.5723, -63.0634, -25.3116, 0.28 ) }
    dend_47 { pt3dadd( 54.6834, -65.144, -26.3742, 0.55 ) }
    dend_47 { pt3dadd( 56.6651, -66.4693, -26.7998, 0.28 ) }
    dend_47 { pt3dadd( 58.1112, -67.4262, -27.0479, 0.28 ) }
    dend_47 { pt3dadd( 59.5003, -68.3509, -27.2551, 0.55 ) }
    dend_47 { pt3dadd( 63.9439, -71.332, -27.7404, 0.28 ) }
    dend_47 { pt3dadd( 70.1507, -75.7718, -28.3775, 0.28 ) }
    dend_47 { pt3dadd( 72.1347, -77.273, -28.5538, 0.55 ) }
    dend_47 { pt3dadd( 74.9591, -79.4933, -28.7348, 0.83 ) }
    dend_47 { pt3dadd( 81.7858, -85.9451, -32.3594, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.93534, -13.6954, -8.45462, 1.11 ) }
    dend_42 { pt3dadd( 1.80451, -14.4691, -8.99857, 1.11 ) }
    dend_42 { pt3dadd( 1.48812, -16.8188, -10.7179, 0.83 ) }
    dend_42 { pt3dadd( 1.04358, -20.1201, -13.1335, 0.83 ) }
    dend_42 { pt3dadd( 0.0579767, -27.4397, -18.4892, 0.83 ) }
    dend_42 { pt3dadd( -0.450953, -31.2192, -21.2547, 0.83 ) }
    dend_42 { pt3dadd( -0.795622, -33.7789, -23.1276, 0.83 ) }
    dend_42 { pt3dadd( -1.3242, -37.2206, -25.8188, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.02466, 6.4247, -9.39462, 0.83 ) }
    dend_41 { pt3dadd( -5.43113, 7.92002, -9.03669, 0.83 ) }
    dend_41 { pt3dadd( -6.93337, 9.69335, -8.34335, 0.55 ) }
    dend_41 { pt3dadd( -8.78668, 11.9619, -7.2666, 0.55 ) }
    dend_41 { pt3dadd( -10.2123, 13.7804, -6.33931, 0.55 ) }
    dend_41 { pt3dadd( -10.6018, 14.3221, -6.08831, 0.28 ) }
    dend_41 { pt3dadd( -11.9495, 16.4306, -5.25074, 0.28 ) }
    dend_41 { pt3dadd( -13.5989, 19.5341, -4.33298, 0.55 ) }
    dend_41 { pt3dadd( -15.2117, 22.8964, -3.55426, 0.55 ) }
    dend_41 { pt3dadd( -16.4837, 25.5604, -3.02792, 0.55 ) }
    dend_41 { pt3dadd( -18.2316, 29.3705, -2.33557, 0.55 ) }
    dend_41 { pt3dadd( -19.9678, 33.1072, -1.64807, 0.55 ) }
    dend_41 { pt3dadd( -23.5562, 40.6074, -0.344193, 0.55 ) }
    dend_41 { pt3dadd( -24.6278, 42.8258, 0.04589, 0.55 ) }
    dend_41 { pt3dadd( -26.653, 47.0609, 0.906613, 0.55 ) }
    dend_41 { pt3dadd( -28.0775, 50.0457, 1.67957, 0.55 ) }
    dend_41 { pt3dadd( -29.6574, 53.38, 2.79117, 0.55 ) }
    dend_41 { pt3dadd( -30.5402, 55.1808, 3.51085, 0.55 ) }
    dend_41 { pt3dadd( -31.8499, 57.9215, 4.79608, 0.55 ) }
    dend_41 { pt3dadd( -32.3991, 59.1861, 5.33749, 0.55 ) }
    dend_41 { pt3dadd( -33.6024, 62.8097, 6.57332, 0.55 ) }
    dend_41 { pt3dadd( -34.1694, 64.8009, 6.96195, 0.55 ) }
    dend_41 { pt3dadd( -34.6808, 66.9674, 7.19465, 0.28 ) }
    dend_41 { pt3dadd( -35.0048, 68.4806, 7.25819, 0.55 ) }
    dend_41 { pt3dadd( -35.6161, 71.2688, 7.04177, 0.55 ) }
    dend_41 { pt3dadd( -36.0727, 73.5317, 6.72185, 0.55 ) }
    dend_41 { pt3dadd( -36.4504, 75.4232, 6.18554, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 92/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.15466, 12.5246, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.929256, 13.356, -0.304621, 2.77 ) }
    dend_28 { pt3dadd( -0.491676, 14.9698, -0.304621, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 95/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.62534, 1.3347, -0.954618, 0.83 ) }
    dend_27 { pt3dadd( 8.24711, 2.3161, -0.998968, 0.83 ) }
    dend_27 { pt3dadd( 10.8651, 3.02965, -1.38978, 0.55 ) }
    dend_27 { pt3dadd( 13.9372, 3.84328, -1.94191, 0.55 ) }
    dend_27 { pt3dadd( 16.218, 4.34207, -2.31158, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 17.2479, 4.5198, -2.46304, 0.83 ) }
    dend_27 { pt3dadd( 21.223, 5.09395, -2.97912, 0.55 ) }
    dend_27 { pt3dadd( 25.275, 5.63777, -3.52511, 0.55 ) }
    dend_27 { pt3dadd( 29.5894, 6.15939, -4.11058, 0.55 ) }
    dend_27 { pt3dadd( 35.1244, 6.75799, -4.84575, 0.55 ) }
    dend_27 { pt3dadd( 37.0877, 6.94837, -5.03733, 0.55 ) }
    dend_27 { pt3dadd( 40.6436, 7.29024, -5.27522, 0.55 ) }
    dend_27 { pt3dadd( 42.1342, 7.42758, -5.3104, 0.55 ) }
    dend_27 { pt3dadd( 43.0568, 7.57793, -5.30251, 0.28 ) }
    dend_27 { pt3dadd( 43.9865, 7.83093, -5.33908, 0.28 ) }
    dend_27 { pt3dadd( 45.5186, 8.55828, -5.53174, 0.55 ) }
    dend_27 { pt3dadd( 46.8906, 9.4325, -5.81843, 0.55 ) }
    dend_27 { pt3dadd( 47.9757, 10.2571, -6.1165, 0.55 ) }
    dend_27 { pt3dadd( 49.4457, 11.3709, -6.51825, 0.28 ) }
    dend_27 { pt3dadd( 49.9553, 11.7778, -6.65507, 0.28 ) }
    dend_27 { pt3dadd( 50.7438, 12.4428, -6.85241, 0.55 ) }
    dend_27 { pt3dadd( 52.5214, 13.9637, -7.25326, 0.28 ) }
    dend_27 { pt3dadd( 54.3866, 15.5501, -7.60186, 0.28 ) }
    dend_27 { pt3dadd( 55.5837, 16.5702, -7.68754, 0.28 ) }
    dend_27 { pt3dadd( 56.8868, 17.6573, -7.65046, 0.28 ) }
    dend_27 { pt3dadd( 58.8537, 19.2161, -7.31557, 0.55 ) }
    dend_27 { pt3dadd( 59.4183, 19.6651, -7.14054, 0.55 ) }
    dend_27 { pt3dadd( 60.6691, 20.6849, -6.63328, 0.28 ) }
    dend_27 { pt3dadd( 63.1384, 22.7888, -5.49043, 0.28 ) }
    dend_27 { pt3dadd( 65.0336, 24.4267, -4.61548, 0.55 ) }
    dend_27 { pt3dadd( 67.7633, 26.8005, -3.41178, 0.55 ) }
    dend_27 { pt3dadd( 69.1896, 28.0742, -2.74725, 0.55 ) }
    dend_27 { pt3dadd( 70.7459, 29.4807, -2.02342, 0.55 ) }
    dend_27 { pt3dadd( 71.7081, 30.347, -1.59446, 0.55 ) }
    dend_27 { pt3dadd( 73.9823, 32.4516, -0.810076, 0.28 ) }
    dend_27 { pt3dadd( 75.3942, 33.8476, -0.492857, 0.28 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.85466, -13.6854, 5.15538, 2.77 ) }
    dend_0 { pt3dadd( -0.933165, -14.717, 5.34166, 2.77 ) }
    dend_0 { pt3dadd( -1.09042, -16.7834, 5.7148, 1.94 ) }
    dend_0 { pt3dadd( -1.31789, -19.7727, 6.25458, 1.94 ) }
    dend_0 { pt3dadd( -1.45795, -21.6133, 6.58694, 1.66 ) }
    dend_0 { pt3dadd( -1.56797, -23.059, 6.848, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 37/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.19886, -12.4109, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 2.36419, -27.3656, 1.9633, 0.83 ) }
    axon_0 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 40/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.3242, -37.2206, -25.8188, 0.55 ) }
    dend_44 { pt3dadd( -2.27493, -38.5576, -28.7573, 0.55 ) }
    dend_44 { pt3dadd( -2.58533, -38.9942, -29.7166, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.3242, -37.2206, -25.8188, 0.55 ) }
    dend_43 { pt3dadd( -0.437321, -39.014, -31.579, 0.55 ) }
    dend_43 { pt3dadd( 0.0997691, -40.0115, -34.2869, 0.55 ) }
    dend_43 { pt3dadd( 0.648093, -41.0299, -37.0515, 0.55 ) }
    dend_43 { pt3dadd( 1.18329, -42.0239, -39.7498, 0.55 ) }
    dend_43 { pt3dadd( 1.55025, -42.7055, -41.6, 0.28 ) }
    dend_43 { pt3dadd( 1.74627, -43.0695, -42.5883, 0.55 ) }
    dend_43 { pt3dadd( 2.77253, -44.608, -46.1843, 0.28 ) }
    dend_43 { pt3dadd( 4.01477, -47.8175, -52.9821, 0.28 ) }
    dend_43 { pt3dadd( 4.5711, -51.4734, -59.6438, 0.28 ) }
    dend_43 { pt3dadd( 4.03606, -56.5963, -65.2585, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 54/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.491676, 14.9698, -0.304621, 1.66 ) }
    dend_30 { pt3dadd( 0.804826, 16.8214, -0.358593, 1.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.491676, 14.9698, -0.304621, 0.55 ) }
    dend_29 { pt3dadd( 1.334, 17.733, -1.98275, 0.55 ) }
    dend_29 { pt3dadd( 2.80059, 19.6368, -2.81055, 0.55 ) }
    dend_29 { pt3dadd( 5.86424, 23.1011, -4.05301, 0.55 ) }
    dend_29 { pt3dadd( 6.71908, 23.9957, -4.3558, 0.55 ) }
    dend_29 { pt3dadd( 7.90988, 25.1507, -4.73279, 0.55 ) }
    dend_29 { pt3dadd( 9.30142, 26.4077, -5.17154, 0.55 ) }
    dend_29 { pt3dadd( 12.2117, 28.9082, -6.02707, 0.55 ) }
    dend_29 { pt3dadd( 15.1492, 31.1395, -6.63172, 0.55 ) }
    dend_29 { pt3dadd( 17.4685, 32.7452, -6.91283, 0.55 ) }
    dend_29 { pt3dadd( 18.4915, 33.379, -7.06907, 0.55 ) }
    dend_29 { pt3dadd( 21.5427, 35.1787, -7.59816, 0.55 ) }
    dend_29 { pt3dadd( 23.6238, 36.2892, -8.0548, 0.55 ) }
    dend_29 { pt3dadd( 25.7029, 37.3758, -8.61081, 0.55 ) }
    dend_29 { pt3dadd( 27.91, 38.4247, -9.17288, 0.55 ) }
    dend_29 { pt3dadd( 30.614, 39.6357, -9.88558, 0.55 ) }
    dend_29 { pt3dadd( 32.6419, 40.6108, -10.5029, 0.55 ) }
    dend_29 { pt3dadd( 36.0713, 42.3819, -11.6494, 0.55 ) }
    dend_29 { pt3dadd( 37.6807, 43.322, -12.238, 0.28 ) }
    dend_29 { pt3dadd( 39.6607, 44.8132, -13.0121, 0.28 ) }
    dend_29 { pt3dadd( 40.8056, 45.9341, -13.4314, 0.55 ) }
    dend_29 { pt3dadd( 42.8039, 48.689, -13.9279, 0.28 ) }
    dend_29 { pt3dadd( 43.4821, 50.016, -13.993, 0.28 ) }
    dend_29 { pt3dadd( 44.267, 52.2955, -14.0255, 0.55 ) }
    dend_29 { pt3dadd( 44.784, 54.3471, -14.0863, 0.55 ) }
    dend_29 { pt3dadd( 45.2673, 56.6594, -14.1845, 0.55 ) }
    dend_29 { pt3dadd( 45.6428, 58.4241, -14.2465, 0.55 ) }
    dend_29 { pt3dadd( 46.2464, 60.7119, -14.3324, 0.28 ) }
    dend_29 { pt3dadd( 47.4444, 64.6584, -14.645, 0.28 ) }
    dend_29 { pt3dadd( 48.0265, 66.345, -14.8936, 0.55 ) }
    dend_29 { pt3dadd( 48.5681, 67.8856, -15.201, 0.55 ) }
    dend_29 { pt3dadd( 49.0232, 69.0384, -15.5106, 0.55 ) }
    dend_29 { pt3dadd( 49.8805, 71.1547, -16.1254, 0.55 ) }
    dend_29 { pt3dadd( 56.2448, 76.7642, -16.9731, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 90/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.56797, -23.059, 6.848, 1.66 ) }
    dend_6 { pt3dadd( -2.91577, -23.4862, 7.09755, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.56797, -23.059, 6.848, 0.55 ) }
    dend_1 { pt3dadd( -2.76053, -24.6067, 7.47034, 0.55 ) }
    dend_1 { pt3dadd( -4.48871, -27.0521, 8.22075, 0.55 ) }
    dend_1 { pt3dadd( -6.27602, -29.6835, 8.85458, 0.55 ) }
    dend_1 { pt3dadd( -7.47817, -31.421, 9.342, 0.55 ) }
    dend_1 { pt3dadd( -8.48232, -32.7612, 9.85764, 0.55 ) }
    dend_1 { pt3dadd( -9.56252, -34.1736, 10.4449, 0.55 ) }
    dend_1 { pt3dadd( -10.6062, -35.6656, 11.0654, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( -11.5467, -37.0048, 11.643, 0.55 ) }
    dend_1 { pt3dadd( -13.204, -39.284, 12.6123, 0.55 ) }
    dend_1 { pt3dadd( -16.0269, -42.9568, 14.2844, 0.55 ) }
    dend_1 { pt3dadd( -17.1999, -44.4582, 15.0711, 0.55 ) }
    dend_1 { pt3dadd( -18.8058, -46.5289, 16.3041, 0.55 ) }
    dend_1 { pt3dadd( -19.5797, -47.4794, 16.9074, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.52951, -42.3202, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 4.69484, -57.2749, 1.9633, 0.28 ) }
    axon_1 { pt3dadd( 5.86017, -72.2296, 1.9633, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 9/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.58533, -38.9942, -29.7166, 0.55 ) }
    dend_46 { pt3dadd( -2.94887, -42.5594, -34.6068, 0.55 ) }
    dend_46 { pt3dadd( -3.02005, -43.9751, -36.4059, 0.55 ) }
    dend_46 { pt3dadd( -2.80959, -47.8146, -41.1868, 0.55 ) }
    dend_46 { pt3dadd( -2.52702, -50.0599, -43.8228, 0.55 ) }
    dend_46 { pt3dadd( -2.25224, -52.2433, -46.3862, 0.28 ) }
    dend_46 { pt3dadd( -1.9957, -54.2817, -48.7794, 0.28 ) }
    dend_46 { pt3dadd( -1.81428, -55.1344, -49.7755, 0.55 ) }
    dend_46 { pt3dadd( -0.293888, -60.3305, -55.8165, 0.28 ) }
    dend_46 { pt3dadd( 0.285805, -61.8952, -57.329, 0.55 ) }
    dend_46 { pt3dadd( 1.91609, -70.4184, -64.539, 0.55 ) }
    dend_46 { pt3dadd( 5.58132, -77.1725, -72.7998, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.58533, -38.9942, -29.7166, 0.55 ) }
    dend_45 { pt3dadd( -3.56836, -37.5269, -35.3337, 0.55 ) }
    dend_45 { pt3dadd( -4.82305, -35.654, -42.5031, 0.55 ) }
    dend_45 { pt3dadd( -6.04795, -33.8257, -49.5022, 0.28 ) }
    dend_45 { pt3dadd( -6.65235, -32.9235, -52.9558, 0.55 ) }
    dend_45 { pt3dadd( -9.41828, -30.9661, -63.2835, 0.55 ) }
    dend_45 { pt3dadd( -13.8524, -28.7441, -72.9552, 0.55 ) }
    dend_45 { pt3dadd( -18.9469, -26.0034, -82.1572, 0.55 ) }
    dend_45 { pt3dadd( -22.7678, -23.6964, -92.0679, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 30/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.804826, 16.8214, -0.358593, 1.66 ) }
    dend_36 { pt3dadd( 0.602325, 21.095, -0.481122, 1.66 ) }
    dend_36 { pt3dadd( 0.436666, 24.591, -0.581358, 1.66 ) }
    dend_36 { pt3dadd( 0.302822, 27.4157, -0.662343, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 34/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.804826, 16.8214, -0.358593, 1.11 ) }
    dend_31 { pt3dadd( 0.260611, 17.7364, 3.79875, 1.11 ) }
    dend_31 { pt3dadd( 0.128845, 17.958, 4.80533, 1.11 ) }
    dend_31 { pt3dadd( -0.660841, 19.2857, 10.8378, 0.83 ) }
    dend_31 { pt3dadd( -1.09262, 20.0117, 14.1363, 0.83 ) }
    dend_31 { pt3dadd( -2.60131, 22.5483, 25.6614, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.91577, -23.4862, 7.09755, 1.66 ) }
    dend_8 { pt3dadd( -3.00098, -24.0307, 7.10394, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.91577, -23.4862, 7.09755, 0.55 ) }
    dend_7 { pt3dadd( -3.26949, -26.475, 9.2255, 0.55 ) }
    dend_7 { pt3dadd( -3.43018, -29.049, 11.1732, 0.55 ) }
    dend_7 { pt3dadd( -3.4739, -29.9123, 11.85, 0.55 ) }
    dend_7 { pt3dadd( -3.62034, -32.4951, 13.9339, 0.55 ) }
    dend_7 { pt3dadd( -3.63676, -34.6973, 15.7418, 0.55 ) }
    dend_7 { pt3dadd( -3.59853, -37.246, 17.7871, 0.55 ) }
    dend_7 { pt3dadd( -3.57095, -38.6375, 19.0454, 0.55 ) }
    dend_7 { pt3dadd( -3.60681, -40.5081, 20.7816, 0.55 ) }
    dend_7 { pt3dadd( -3.73329, -42.4658, 22.5983, 0.55 ) }
    dend_7 { pt3dadd( -3.88406, -44.5918, 24.5663, 0.55 ) }
    dend_7 { pt3dadd( -4.00538, -45.7064, 25.631, 0.55 ) }
    dend_7 { pt3dadd( -4.30478, -48.0466, 28.04, 0.55 ) }
    dend_7 { pt3dadd( -4.49664, -49.9423, 29.978, 0.55 ) }
    dend_7 { pt3dadd( -4.5558, -50.9121, 31.0027, 0.55 ) }
    dend_7 { pt3dadd( -4.6295, -52.1141, 32.3667, 0.55 ) }
    dend_7 { pt3dadd( -4.83581, -53.8689, 34.4608, 0.55 ) }
    dend_7 { pt3dadd( -5.1038, -55.9375, 37.0984, 0.55 ) }
    dend_7 { pt3dadd( -5.43575, -58.4743, 40.3717, 0.55 ) }
    dend_7 { pt3dadd( -5.77999, -60.6916, 43.4146, 0.55 ) }
    dend_7 { pt3dadd( -6.02499, -62.0917, 45.3971, 0.55 ) }
    dend_7 { pt3dadd( -6.49744, -64.2138, 48.4639, 0.55 ) }
    dend_7 { pt3dadd( -7.04392, -66.0831, 51.2516, 0.55 ) }
    dend_7 { pt3dadd( -7.77135, -67.868, 54.0844, 0.55 ) }
    dend_7 { pt3dadd( -8.6424, -69.5085, 57.0179, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -19.5797, -47.4794, 16.9074, 0.55 ) }
    dend_5 { pt3dadd( -24.801, -48.0087, 21.272, 0.55 ) }
    dend_5 { pt3dadd( -27.1213, -48.1607, 23.0616, 0.55 ) }
    dend_5 { pt3dadd( -30.4408, -48.4266, 25.4303, 0.55 ) }
    dend_5 { pt3dadd( -34.2836, -48.8094, 28.0242, 0.55 ) }
    dend_5 { pt3dadd( -37.5644, -49.1123, 30.1298, 0.55 ) }
    dend_5 { pt3dadd( -43.0104, -49.6948, 33.4912, 0.55 ) }
    dend_5 { pt3dadd( -48.3714, -50.305, 36.6588, 0.55 ) }
    dend_5 { pt3dadd( -52.3662, -50.8677, 39.2074, 0.55 ) }
    dend_5 { pt3dadd( -55.5122, -51.3251, 41.2205, 0.55 ) }
    dend_5 { pt3dadd( -60.4374, -52.1186, 44.3116, 0.55 ) }
    dend_5 { pt3dadd( -63.2323, -52.6018, 46.1409, 0.28 ) }
    dend_5 { pt3dadd( -67.2647, -53.6188, 48.8074, 0.55 ) }
    dend_5 { pt3dadd( -71.8448, -54.8171, 52.2318, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 81/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -19.5797, -47.4794, 16.9074, 0.55 ) }
    dend_2 { pt3dadd( -19.8366, -48.8306, 19.4301, 0.55 ) }
    dend_2 { pt3dadd( -20.2713, -52.0092, 24.9722, 0.55 ) }
    dend_2 { pt3dadd( -20.6091, -53.7294, 27.9307, 0.55 ) }
    dend_2 { pt3dadd( -21.0436, -55.6699, 31.2628, 0.55 ) }
    dend_2 { pt3dadd( -21.4551, -57.5404, 34.5524, 0.55 ) }
    dend_2 { pt3dadd( -22.0069, -60.049, 38.9645, 0.55 ) }
    dend_2 { pt3dadd( -22.7197, -62.7793, 43.7159, 0.55 ) }
    dend_2 { pt3dadd( -23.4296, -65.6828, 48.3902, 0.55 ) }
    dend_2 { pt3dadd( -23.8937, -67.7865, 51.8052, 0.55 ) }
    dend_2 { pt3dadd( -24.5793, -70.1049, 55.8276, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 92/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.302822, 27.4157, -0.662343, 1.11 ) }
    dend_38 { pt3dadd( -0.841892, 29.2969, -0.833678, 1.11 ) }
    dend_38 { pt3dadd( -1.66508, 30.6497, -0.956888, 1.11 ) }
    dend_38 { pt3dadd( -2.55397, 32.1105, -1.08993, 0.83 ) }
    dend_38 { pt3dadd( -3.11104, 33.026, -1.17331, 0.83 ) }
    dend_38 { pt3dadd( -4.17347, 34.7721, -1.33233, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 98/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.302822, 27.4157, -0.662343, 0.55 ) }
    dend_37 { pt3dadd( 1.7487, 29.5162, -3.0304, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( 2.44199, 30.4909, -3.94307, 0.55 ) }
    dend_37 { pt3dadd( 5.30379, 34.2766, -7.02217, 0.55 ) }
    dend_37 { pt3dadd( 6.87932, 36.3941, -8.49806, 0.55 ) }
    dend_37 { pt3dadd( 8.43054, 38.4356, -9.76123, 0.55 ) }
    dend_37 { pt3dadd( 9.37018, 39.6371, -10.4448, 0.55 ) }
    dend_37 { pt3dadd( 10.9573, 41.4624, -11.1805, 0.55 ) }
    dend_37 { pt3dadd( 12.3635, 42.912, -11.6046, 0.55 ) }
    dend_37 { pt3dadd( 13.8924, 44.3659, -11.9737, 0.55 ) }
    dend_37 { pt3dadd( 15.3689, 45.7644, -12.4082, 0.55 ) }
    dend_37 { pt3dadd( 16.2878, 46.6589, -12.7161, 0.55 ) }
    dend_37 { pt3dadd( 19.9312, 50.1935, -14.1618, 0.55 ) }
    dend_37 { pt3dadd( 21.994, 52.1395, -15.0691, 0.55 ) }
    dend_37 { pt3dadd( 24.7222, 54.6417, -16.3352, 0.55 ) }
    dend_37 { pt3dadd( 26.2038, 55.906, -17.0411, 0.55 ) }
    dend_37 { pt3dadd( 27.4359, 56.8916, -17.5822, 0.55 ) }
    dend_37 { pt3dadd( 29.5633, 58.5181, -18.6519, 0.83 ) }
    dend_37 { pt3dadd( 32.0465, 60.421, -20.1205, 0.55 ) }
    dend_37 { pt3dadd( 33.7228, 61.7786, -21.1302, 0.55 ) }
    dend_37 { pt3dadd( 34.6996, 62.5399, -21.6542, 0.55 ) }
    dend_37 { pt3dadd( 36.8925, 64.1471, -22.8416, 0.55 ) }
    dend_37 { pt3dadd( 41.0016, 66.9788, -25.0198, 0.55 ) }
    dend_37 { pt3dadd( 43.5702, 68.8836, -26.3607, 0.55 ) }
    dend_37 { pt3dadd( 44.8832, 69.9716, -27.0765, 0.83 ) }
    dend_37 { pt3dadd( 46.2871, 71.2163, -27.8343, 0.55 ) }
    dend_37 { pt3dadd( 47.4384, 72.2378, -28.3069, 0.55 ) }
    dend_37 { pt3dadd( 48.4691, 73.0534, -28.499, 0.55 ) }
    dend_37 { pt3dadd( 50.4564, 74.357, -28.4111, 0.55 ) }
    dend_37 { pt3dadd( 51.8884, 75.2208, -28.2549, 0.55 ) }
    dend_37 { pt3dadd( 52.5576, 75.6489, -28.1655, 0.55 ) }
    dend_37 { pt3dadd( 56.9012, 79.0294, -27.2514, 0.55 ) }
    dend_37 { pt3dadd( 59.4703, 81.3906, -26.548, 0.55 ) }
    dend_37 { pt3dadd( 60.4662, 82.3608, -26.2498, 0.55 ) }
    dend_37 { pt3dadd( 61.3382, 83.3043, -25.9126, 0.55 ) }
    dend_37 { pt3dadd( 62.39, 84.6744, -25.4881, 0.55 ) }
    dend_37 { pt3dadd( 64.6787, 88.3542, -24.6088, 0.55 ) }
    dend_37 { pt3dadd( 65.2066, 89.3806, -24.3849, 0.55 ) }
    dend_37 { pt3dadd( 66.2144, 91.3721, -24.0294, 0.55 ) }
    dend_37 { pt3dadd( 67.7633, 94.399, -23.444, 0.55 ) }
    dend_37 { pt3dadd( 69.1253, 96.8462, -22.9692, 0.55 ) }
    dend_37 { pt3dadd( 70.3133, 98.6432, -22.5919, 0.55 ) }
    dend_37 { pt3dadd( 72.5198, 101.455, -22.0692, 0.55 ) }
    dend_37 { pt3dadd( 73.6338, 102.732, -21.8553, 0.55 ) }
    dend_37 { pt3dadd( 74.8154, 104.035, -21.6632, 0.28 ) }
    dend_37 { pt3dadd( 75.639, 104.879, -21.518, 0.83 ) }
    dend_37 { pt3dadd( 78.2823, 107.564, -20.8994, 0.55 ) }
    dend_37 { pt3dadd( 80.8371, 110.29, -20.4022, 0.55 ) }
    dend_37 { pt3dadd( 82.0992, 111.662, -20.2263, 0.28 ) }
    dend_37 { pt3dadd( 82.915, 112.524, -20.1053, 0.55 ) }
    dend_37 { pt3dadd( 85.1214, 114.738, -19.7825, 0.28 ) }
    dend_37 { pt3dadd( 86.4369, 116.139, -19.5683, 0.28 ) }
    dend_37 { pt3dadd( 87.6892, 117.847, -19.3305, 0.28 ) }
    dend_37 { pt3dadd( 93.6026, 125.368, -18.9167, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 52/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.60131, 22.5483, 25.6614, 0.83 ) }
    dend_33 { pt3dadd( -3.22309, 24.4245, 25.1563, 0.83 ) }
    dend_33 { pt3dadd( -3.56863, 26.0184, 25.0931, 0.83 ) }
    dend_33 { pt3dadd( -4.26195, 29.4104, 25.4749, 0.55 ) }
    dend_33 { pt3dadd( -4.63732, 31.4184, 26.192, 0.55 ) }
    dend_33 { pt3dadd( -4.79921, 32.4167, 26.7587, 0.55 ) }
    dend_33 { pt3dadd( -5.32822, 35.2634, 28.9302, 0.55 ) }
    dend_33 { pt3dadd( -5.78349, 37.3898, 31.2286, 0.55 ) }
    dend_33 { pt3dadd( -6.22985, 39.3881, 33.7931, 0.55 ) }
    dend_33 { pt3dadd( -6.97723, 42.6617, 38.5611, 0.55 ) }
    dend_33 { pt3dadd( -7.52828, 45.1031, 42.4005, 0.55 ) }
    dend_33 { pt3dadd( -8.07278, 47.2, 45.9749, 0.55 ) }
    dend_33 { pt3dadd( -8.67904, 49.0266, 49.4544, 0.55 ) }
    dend_33 { pt3dadd( -8.95734, 49.718, 50.9493, 0.55 ) }
    dend_33 { pt3dadd( -9.3721, 50.7485, 53.5273, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.60131, 22.5483, 25.6614, 0.55 ) }
    dend_32 { pt3dadd( -2.64139, 23.3575, 27.2992, 0.55 ) }
    dend_32 { pt3dadd( -2.46368, 25.3056, 31.1294, 0.55 ) }
    dend_32 { pt3dadd( -2.18179, 27.8246, 35.6915, 0.55 ) }
    dend_32 { pt3dadd( -1.9226, 30.1777, 39.7687, 0.55 ) }
    dend_32 { pt3dadd( -1.6859, 31.7232, 42.3375, 0.55 ) }
    dend_32 { pt3dadd( -1.48357, 32.7674, 44.0969, 0.55 ) }
    dend_32 { pt3dadd( -0.868052, 35.0896, 48.0188, 0.55 ) }
    dend_32 { pt3dadd( -0.263248, 36.7345, 50.7765, 0.55 ) }
    dend_32 { pt3dadd( 0.729675, 39.0033, 54.7396, 0.55 ) }
    dend_32 { pt3dadd( 1.22971, 40.0549, 56.7281, 0.55 ) }
    dend_32 { pt3dadd( 2.0316, 41.6528, 59.8674, 0.55 ) }
    dend_32 { pt3dadd( 2.96346, 43.4905, 63.6665, 0.55 ) }
    dend_32 { pt3dadd( 4.11112, 45.7274, 68.6453, 0.55 ) }
    dend_32 { pt3dadd( 5.25657, 47.5722, 73.2004, 0.55 ) }
    dend_32 { pt3dadd( 6.31214, 49.2239, 77.4869, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.00098, -24.0307, 7.10394, 1.11 ) }
    dend_10 { pt3dadd( -5.21324, -28.1297, 4.59122, 1.11 ) }
    dend_10 { pt3dadd( -7.31354, -32.0213, 2.20566, 1.11 ) }
    dend_10 { pt3dadd( -8.56453, -34.3392, 0.784759, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.00098, -24.0307, 7.10394, 0.55 ) }
    dend_9 { pt3dadd( -1.04273, -25.9718, 5.96091, 0.55 ) }
    dend_9 { pt3dadd( 0.114277, -27.129, 5.09494, 0.55 ) }
    dend_9 { pt3dadd( 1.14636, -28.2881, 4.29212, 0.55 ) }
    dend_9 { pt3dadd( 1.58108, -28.7411, 3.9977, 0.55 ) }
    dend_9 { pt3dadd( 3.19587, -30.4422, 2.92159, 0.55 ) }
    dend_9 { pt3dadd( 4.44348, -31.7717, 2.20692, 0.55 ) }
    dend_9 { pt3dadd( 6.42742, -33.93, 1.3292, 0.55 ) }
    dend_9 { pt3dadd( 8.06094, -35.8013, 0.668898, 0.55 ) }
    dend_9 { pt3dadd( 10.0303, -38.0239, 0.0679529, 0.55 ) }
    dend_9 { pt3dadd( 11.4989, -39.5984, -0.244919, 0.55 ) }
    dend_9 { pt3dadd( 15.4769, -43.7, -0.389161, 0.55 ) }
    dend_9 { pt3dadd( 16.6708, -44.937, -0.267188, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_9 { pt3dadd( 17.3067, -45.5839, -0.119017, 0.55 ) }
    dend_9 { pt3dadd( 19.4339, -47.6999, 0.523852, 0.55 ) }
    dend_9 { pt3dadd( 20.3694, -48.6711, 0.925276, 0.55 ) }
    dend_9 { pt3dadd( 23.4279, -51.5748, 2.50685, 0.55 ) }
    dend_9 { pt3dadd( 24.3376, -52.4182, 3.01492, 0.55 ) }
    dend_9 { pt3dadd( 25.3244, -53.2878, 3.48981, 0.55 ) }
    dend_9 { pt3dadd( 26.4368, -54.2487, 3.98276, 0.55 ) }
    dend_9 { pt3dadd( 29.2345, -56.6368, 5.14892, 0.55 ) }
    dend_9 { pt3dadd( 31.8561, -58.8654, 6.15863, 0.55 ) }
    dend_9 { pt3dadd( 33.2639, -60.0062, 6.54127, 0.55 ) }
    dend_9 { pt3dadd( 35.632, -61.8917, 7.07185, 0.55 ) }
    dend_9 { pt3dadd( 36.167, -62.3237, 7.16073, 0.55 ) }
    dend_9 { pt3dadd( 38.4536, -64.2091, 7.34672, 0.55 ) }
    dend_9 { pt3dadd( 39.6972, -65.3014, 7.21132, 0.83 ) }
    dend_9 { pt3dadd( 41.4077, -67.0, 6.94629, 0.28 ) }
    dend_9 { pt3dadd( 42.3747, -67.9718, 6.80941, 0.55 ) }
    dend_9 { pt3dadd( 43.3952, -69.0638, 6.40393, 0.28 ) }
    dend_9 { pt3dadd( 44.746, -70.5173, 5.65076, 0.83 ) }
    dend_9 { pt3dadd( 46.3257, -72.279, 4.60117, 0.28 ) }
    dend_9 { pt3dadd( 48.2918, -74.4609, 3.27025, 0.28 ) }
    dend_9 { pt3dadd( 49.0001, -75.27, 2.7985, 0.55 ) }
    dend_9 { pt3dadd( 53.1638, -80.0361, -0.413983, 0.28 ) }
    dend_9 { pt3dadd( 53.653, -80.5387, -0.847846, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 23/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -24.5793, -70.1049, 55.8276, 0.55 ) }
    dend_4 { pt3dadd( -25.667, -71.7977, 57.2477, 0.55 ) }
    dend_4 { pt3dadd( -26.9266, -73.571, 58.6825, 0.55 ) }
    dend_4 { pt3dadd( -28.7225, -76.0991, 60.728, 0.55 ) }
    dend_4 { pt3dadd( -30.3199, -78.3479, 62.5475, 0.55 ) }
    dend_4 { pt3dadd( -31.9359, -80.6228, 64.3881, 0.55 ) }
    dend_4 { pt3dadd( -33.069, -82.218, 65.6787, 0.28 ) }
    dend_4 { pt3dadd( -33.7497, -83.0703, 66.4045, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -24.5793, -70.1049, 55.8276, 0.55 ) }
    dend_3 { pt3dadd( -25.0863, -71.4075, 58.8662, 0.55 ) }
    dend_3 { pt3dadd( -25.9312, -73.5779, 63.9297, 0.55 ) }
    dend_3 { pt3dadd( -26.5479, -75.1623, 67.6261, 0.55 ) }
    dend_3 { pt3dadd( -27.1196, -76.6308, 71.052, 0.55 ) }
    dend_3 { pt3dadd( -27.9903, -78.8677, 76.2704, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.17347, 34.7721, -1.33233, 0.55 ) }
    dend_40 { pt3dadd( -5.85261, 35.7828, -0.213605, 0.55 ) }
    dend_40 { pt3dadd( -13.1224, 40.3623, 4.0365, 0.55 ) }
    dend_40 { pt3dadd( -15.9884, 42.176, 5.61725, 0.55 ) }
    dend_40 { pt3dadd( -19.4387, 44.2823, 7.10223, 0.55 ) }
    dend_40 { pt3dadd( -23.2178, 46.4005, 8.56005, 0.55 ) }
    dend_40 { pt3dadd( -26.656, 48.2345, 9.87402, 0.55 ) }
    dend_40 { pt3dadd( -28.2101, 49.0257, 10.3968, 0.55 ) }
    dend_40 { pt3dadd( -30.9886, 50.4595, 11.1646, 0.55 ) }
    dend_40 { pt3dadd( -36.4417, 53.3141, 12.7142, 0.55 ) }
    dend_40 { pt3dadd( -41.2845, 55.9925, 14.4682, 0.55 ) }
    dend_40 { pt3dadd( -45.9717, 58.6504, 16.2943, 0.55 ) }
    dend_40 { pt3dadd( -48.2026, 60.1381, 17.319, 0.55 ) }
    dend_40 { pt3dadd( -49.6684, 61.4075, 18.0272, 0.55 ) }
    dend_40 { pt3dadd( -51.8149, 64.0014, 19.1322, 0.55 ) }
    dend_40 { pt3dadd( -54.0249, 67.6766, 20.4392, 0.55 ) }
    dend_40 { pt3dadd( -56.8009, 73.8853, 21.8442, 0.55 ) }
    dend_40 { pt3dadd( -58.7244, 79.1822, 22.6813, 0.55 ) }
    dend_40 { pt3dadd( -60.7053, 86.098, 23.7826, 0.55 ) }
    dend_40 { pt3dadd( -61.7481, 90.5528, 24.5629, 0.28 ) }
    dend_40 { pt3dadd( -61.9575, 91.785, 24.7847, 0.28 ) }
    dend_40 { pt3dadd( -62.2472, 93.7739, 25.1494, 0.55 ) }
    dend_40 { pt3dadd( -62.3535, 96.4353, 25.9136, 0.55 ) }
    dend_40 { pt3dadd( -62.3807, 100.617, 27.1792, 0.55 ) }
    dend_40 { pt3dadd( -62.2043, 102.691, 28.0965, 0.28 ) }
    dend_40 { pt3dadd( -62.0971, 105.025, 29.1921, 0.55 ) }
    dend_40 { pt3dadd( -62.1415, 108.309, 30.71, 0.28 ) }
    dend_40 { pt3dadd( -62.5018, 112.237, 32.4607, 0.55 ) }
    dend_40 { pt3dadd( -62.9051, 115.589, 33.8836, 0.55 ) }
    dend_40 { pt3dadd( -63.5863, 119.138, 35.2276, 0.28 ) }
    dend_40 { pt3dadd( -64.4889, 123.582, 36.9425, 0.28 ) }
    dend_40 { pt3dadd( -64.8062, 124.772, 37.4243, 0.28 ) }
    dend_40 { pt3dadd( -65.7426, 127.45, 38.2892, 0.55 ) }
    dend_40 { pt3dadd( -70.6936, 137.163, 42.2165, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.17347, 34.7721, -1.33233, 0.55 ) }
    dend_39 { pt3dadd( -4.30198, 36.788, -2.60123, 0.55 ) }
    dend_39 { pt3dadd( -4.40592, 37.8401, -3.20615, 0.55 ) }
    dend_39 { pt3dadd( -4.77097, 40.1664, -4.44568, 0.55 ) }
    dend_39 { pt3dadd( -5.38555, 43.4868, -6.04107, 0.55 ) }
    dend_39 { pt3dadd( -5.95219, 47.1374, -7.64029, 0.55 ) }
    dend_39 { pt3dadd( -6.28585, 49.1215, -8.44661, 0.55 ) }
    dend_39 { pt3dadd( -6.75898, 51.2462, -9.23974, 0.55 ) }
    dend_39 { pt3dadd( -7.1676, 52.7678, -9.7437, 0.55 ) }
    dend_39 { pt3dadd( -7.64746, 54.5491, -10.3105, 0.55 ) }
    dend_39 { pt3dadd( -8.30215, 57.0895, -11.0092, 0.55 ) }
    dend_39 { pt3dadd( -9.01607, 59.6557, -11.683, 0.55 ) }
    dend_39 { pt3dadd( -9.52126, 61.3746, -12.136, 0.55 ) }
    dend_39 { pt3dadd( -10.1407, 63.6055, -12.7197, 0.55 ) }
    dend_39 { pt3dadd( -11.46, 69.3632, -13.9411, 0.55 ) }
    dend_39 { pt3dadd( -11.8756, 71.7871, -14.3526, 0.55 ) }
    dend_39 { pt3dadd( -12.1575, 73.8632, -14.6415, 0.55 ) }
    dend_39 { pt3dadd( -12.4124, 76.6615, -14.9355, 0.55 ) }
    dend_39 { pt3dadd( -12.4682, 77.6411, -15.0082, 0.55 ) }
    dend_39 { pt3dadd( -12.5177, 84.5193, -15.0497, 0.55 ) }
    dend_39 { pt3dadd( -12.4724, 88.4209, -14.9112, 0.55 ) }
    dend_39 { pt3dadd( -12.3386, 91.8749, -14.8181, 0.55 ) }
    dend_39 { pt3dadd( -12.1819, 94.2138, -14.806, 0.55 ) }
    dend_39 { pt3dadd( -11.8952, 96.9417, -14.7355, 0.55 ) }
    dend_39 { pt3dadd( -11.4245, 100.611, -14.5716, 0.28 ) }
    dend_39 { pt3dadd( -11.0524, 103.213, -14.3994, 0.28 ) }
    dend_39 { pt3dadd( -10.6828, 105.759, -14.153, 0.55 ) }
    dend_39 { pt3dadd( -9.53856, 112.449, -13.2731, 0.55 ) }
    dend_39 { pt3dadd( -8.89861, 116.049, -12.7789, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -8.57899, 117.99, -12.5098, 0.55 ) }
    dend_39 { pt3dadd( -8.25867, 120.076, -12.2508, 0.55 ) }
    dend_39 { pt3dadd( -7.99013, 121.971, -12.0123, 0.55 ) }
    dend_39 { pt3dadd( -7.6956, 124.443, -11.794, 0.55 ) }
    dend_39 { pt3dadd( -7.25982, 127.422, -11.5911, 0.55 ) }
    dend_39 { pt3dadd( -6.94487, 129.592, -11.5967, 0.28 ) }
    dend_39 { pt3dadd( -6.42135, 132.836, -11.5714, 0.55 ) }
    dend_39 { pt3dadd( -5.91656, 135.79, -11.5382, 0.28 ) }
    dend_39 { pt3dadd( -5.4463, 138.437, -11.5236, 0.55 ) }
    dend_39 { pt3dadd( -4.62992, 142.937, -11.5358, 0.55 ) }
    dend_39 { pt3dadd( -4.07174, 146.034, -11.5075, 0.55 ) }
    dend_39 { pt3dadd( -2.62326, 154.118, -11.295, 0.28 ) }
    dend_39 { pt3dadd( -2.1292, 156.847, -11.1461, 0.55 ) }
    dend_39 { pt3dadd( -0.468507, 166.479, -12.2716, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -9.3721, 50.7485, 53.5273, 0.55 ) }
    dend_35 { pt3dadd( -11.7635, 51.5047, 61.8907, 0.55 ) }
    dend_35 { pt3dadd( -12.5898, 51.7661, 64.7805, 0.55 ) }
    dend_35 { pt3dadd( -14.7142, 52.4379, 72.2101, 0.55 ) }
    dend_35 { pt3dadd( -16.6818, 53.0602, 79.0914, 0.55 ) }
    dend_35 { pt3dadd( -17.8547, 53.431, 83.1932, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.3721, 50.7485, 53.5273, 0.55 ) }
    dend_34 { pt3dadd( -9.78341, 51.9925, 53.6324, 0.55 ) }
    dend_34 { pt3dadd( -10.2865, 53.6106, 53.8094, 0.55 ) }
    dend_34 { pt3dadd( -11.7794, 58.6847, 54.5178, 0.55 ) }
    dend_34 { pt3dadd( -13.5404, 64.5818, 55.6156, 0.55 ) }
    dend_34 { pt3dadd( -14.6476, 68.2352, 56.365, 0.55 ) }
    dend_34 { pt3dadd( -16.6292, 74.5502, 57.7128, 0.55 ) }
    dend_34 { pt3dadd( -18.2861, 79.6205, 58.9804, 0.55 ) }
    dend_34 { pt3dadd( -19.4622, 82.8456, 59.9772, 0.55 ) }
    dend_34 { pt3dadd( -21.2266, 87.1362, 61.6471, 0.55 ) }
    dend_34 { pt3dadd( -22.1061, 88.9097, 62.4593, 0.55 ) }
    dend_34 { pt3dadd( -23.0848, 90.5434, 63.3876, 0.55 ) }
    dend_34 { pt3dadd( -25.5821, 93.8412, 65.5901, 0.55 ) }
    dend_34 { pt3dadd( -27.794, 96.1613, 67.2361, 0.55 ) }
    dend_34 { pt3dadd( -30.2996, 98.287, 68.9717, 0.55 ) }
    dend_34 { pt3dadd( -33.2006, 100.549, 70.9232, 0.55 ) }
    dend_34 { pt3dadd( -36.2608, 102.781, 72.9744, 0.55 ) }
    dend_34 { pt3dadd( -41.1074, 106.078, 76.136, 0.28 ) }
    dend_34 { pt3dadd( -44.7394, 108.308, 78.2899, 0.28 ) }
    dend_34 { pt3dadd( -48.0502, 110.279, 80.1595, 0.28 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -8.56453, -34.3392, 0.784759, 1.11 ) }
    dend_14 { pt3dadd( -8.58295, -36.9783, 0.151026, 1.11 ) }
    dend_14 { pt3dadd( -8.60427, -40.034, -0.582723, 1.11 ) }
    dend_14 { pt3dadd( -8.62922, -43.6096, -1.44135, 1.11 ) }
    dend_14 { pt3dadd( -8.64963, -46.534, -2.1436, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -8.56453, -34.3392, 0.784759, 0.55 ) }
    dend_11 { pt3dadd( -10.5221, -35.5392, 1.37886, 0.55 ) }
    dend_11 { pt3dadd( -12.5141, -36.9592, 1.97709, 0.55 ) }
    dend_11 { pt3dadd( -14.4213, -38.3376, 2.22343, 0.55 ) }
    dend_11 { pt3dadd( -16.2794, -39.7399, 2.40195, 0.55 ) }
    dend_11 { pt3dadd( -18.3104, -41.2871, 2.69195, 0.55 ) }
    dend_11 { pt3dadd( -20.3802, -42.8909, 3.02143, 0.55 ) }
    dend_11 { pt3dadd( -23.1633, -45.2791, 3.46532, 0.55 ) }
    dend_11 { pt3dadd( -26.2517, -48.1825, 3.88261, 0.55 ) }
    dend_11 { pt3dadd( -27.5873, -49.4097, 4.06952, 0.55 ) }
    dend_11 { pt3dadd( -30.4029, -51.8887, 4.43405, 0.55 ) }
    dend_11 { pt3dadd( -31.47, -52.7586, 4.57706, 0.55 ) }
    dend_11 { pt3dadd( -32.5851, -53.592, 4.76538, 0.55 ) }
    dend_11 { pt3dadd( -35.2689, -55.5048, 5.26433, 0.55 ) }
    dend_11 { pt3dadd( -39.6779, -58.5028, 6.09517, 0.55 ) }
    dend_11 { pt3dadd( -41.6258, -59.7151, 6.32166, 0.55 ) }
    dend_11 { pt3dadd( -43.543, -60.8589, 6.45728, 0.55 ) }
    dend_11 { pt3dadd( -44.8658, -61.5896, 6.56709, 0.55 ) }
    dend_11 { pt3dadd( -46.1579, -62.2266, 6.68331, 0.28 ) }
    dend_11 { pt3dadd( -47.7967, -62.9296, 6.8643, 0.83 ) }
    dend_11 { pt3dadd( -48.5836, -63.1852, 6.81313, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.64963, -46.534, -2.1436, 1.11 ) }
    dend_18 { pt3dadd( -9.02521, -49.1508, -2.67261, 1.11 ) }
    dend_18 { pt3dadd( -9.80431, -54.5792, -3.76996, 0.83 ) }
    dend_18 { pt3dadd( -10.3696, -58.5177, -4.56614, 0.83 ) }
    dend_18 { pt3dadd( -10.8476, -61.8479, -5.23938, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.64963, -46.534, -2.1436, 0.55 ) }
    dend_15 { pt3dadd( -10.4906, -49.7705, -0.679783, 0.55 ) }
    dend_15 { pt3dadd( -11.5151, -51.8317, 0.0921269, 0.55 ) }
    dend_15 { pt3dadd( -13.0585, -55.3682, 1.17766, 0.55 ) }
    dend_15 { pt3dadd( -14.7004, -59.3032, 2.22263, 0.55 ) }
    dend_15 { pt3dadd( -16.0954, -62.7406, 3.24856, 0.55 ) }
    dend_15 { pt3dadd( -16.9208, -64.7744, 3.85561, 0.55 ) }
    dend_15 { pt3dadd( -17.7213, -66.8112, 4.30681, 0.55 ) }
    dend_15 { pt3dadd( -18.5673, -69.2923, 4.82885, 0.55 ) }
    dend_15 { pt3dadd( -18.8662, -70.3432, 5.02854, 0.55 ) }
    dend_15 { pt3dadd( -19.7354, -74.9758, 5.48855, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -48.5836, -63.1852, 6.81313, 0.55 ) }
    dend_13 { pt3dadd( -51.0783, -63.5121, 4.84779, 0.55 ) }
    dend_13 { pt3dadd( -52.3352, -63.753, 3.88496, 0.55 ) }
    dend_13 { pt3dadd( -58.0963, -64.6192, -1.001, 0.55 ) }
    dend_13 { pt3dadd( -60.6795, -64.9321, -3.17105, 0.28 ) }
    dend_13 { pt3dadd( -61.9889, -65.0907, -4.2711, 0.28 ) }
    dend_13 { pt3dadd( -63.8113, -65.3116, -5.80203, 0.55 ) }
    dend_13 { pt3dadd( -65.7987, -65.5977, -7.65107, 0.55 ) }
    dend_13 { pt3dadd( -71.5217, -66.4339, -13.1053, 0.28 ) }
    dend_13 { pt3dadd( -72.7655, -66.5706, -14.1751, 0.83 ) }
    dend_13 { pt3dadd( -79.9206, -69.1991, -22.8468, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 93/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -48.5836, -63.1852, 6.81313, 0.28 ) }
    dend_12 { pt3dadd( -49.6137, -63.444, 5.79818, 0.28 ) }
    dend_12 { pt3dadd( -50.0471, -63.5349, 5.36617, 0.55 ) }
    dend_12 { pt3dadd( -54.4937, -64.468, 0.933081, 0.28 ) }
    dend_12 { pt3dadd( -54.7662, -64.5253, 0.661388, 0.55 ) }
    dend_12 { pt3dadd( -55.9991, -64.784, -0.567719, 0.28 ) }
    dend_12 { pt3dadd( -56.492, -64.8875, -1.05913, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( -59.8699, -65.502, -4.77083, 0.28 ) }
    dend_12 { pt3dadd( -63.5043, -66.942, -9.55527, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.8476, -61.8479, -5.23938, 0.83 ) }
    dend_20 { pt3dadd( -11.6429, -64.2695, -5.48454, 0.83 ) }
    dend_20 { pt3dadd( -12.4951, -66.8643, -5.74726, 0.83 ) }
    dend_20 { pt3dadd( -13.9658, -71.3423, -6.20063, 0.83 ) }
    dend_20 { pt3dadd( -14.8192, -73.9408, -6.46371, 0.83 ) }
    dend_20 { pt3dadd( -15.9975, -77.5282, -6.82694, 0.83 ) }
    dend_20 { pt3dadd( -16.8298, -80.0623, -7.08349, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.8476, -61.8479, -5.23938, 0.55 ) }
    dend_19 { pt3dadd( -10.0271, -63.6763, -5.12989, 0.55 ) }
    dend_19 { pt3dadd( -9.20518, -65.7151, -5.14584, 0.55 ) }
    dend_19 { pt3dadd( -7.95549, -69.4738, -4.8595, 0.55 ) }
    dend_19 { pt3dadd( -6.34839, -73.8512, -4.48593, 0.55 ) }
    dend_19 { pt3dadd( -5.71262, -75.6485, -4.32713, 0.55 ) }
    dend_19 { pt3dadd( -4.8918, -77.8914, -4.13462, 0.55 ) }
    dend_19 { pt3dadd( -3.44331, -81.6806, -3.83395, 0.55 ) }
    dend_19 { pt3dadd( -1.17077, -87.3409, -3.53647, 0.55 ) }
    dend_19 { pt3dadd( 1.51603, -93.5607, -3.56699, 0.55 ) }
    dend_19 { pt3dadd( 2.22957, -95.1718, -3.68785, 0.55 ) }
    dend_19 { pt3dadd( 3.12571, -97.0266, -3.89073, 0.55 ) }
    dend_19 { pt3dadd( 5.58189, -101.981, -4.59223, 0.55 ) }
    dend_19 { pt3dadd( 8.45887, -107.531, -5.59264, 0.55 ) }
    dend_19 { pt3dadd( 10.4769, -111.121, -6.5134, 0.28 ) }
    dend_19 { pt3dadd( 11.2379, -112.534, -6.87981, 0.28 ) }
    dend_19 { pt3dadd( 12.2405, -114.323, -7.31543, 0.28 ) }
    dend_19 { pt3dadd( 13.2331, -115.983, -7.67566, 0.28 ) }
    dend_19 { pt3dadd( 15.029, -118.819, -8.1161, 0.55 ) }
    dend_19 { pt3dadd( 16.7242, -121.202, -8.31396, 0.55 ) }
    dend_19 { pt3dadd( 18.4663, -123.604, -8.39112, 0.55 ) }
    dend_19 { pt3dadd( 20.9695, -127.084, -8.47978, 0.55 ) }
    dend_19 { pt3dadd( 23.9963, -131.426, -8.38332, 0.55 ) }
    dend_19 { pt3dadd( 25.7263, -133.858, -8.30252, 0.28 ) }
    dend_19 { pt3dadd( 27.6653, -136.682, -8.15108, 0.28 ) }
    dend_19 { pt3dadd( 28.4073, -137.776, -8.06791, 0.28 ) }
    dend_19 { pt3dadd( 29.9369, -139.911, -7.84697, 0.55 ) }
    dend_19 { pt3dadd( 32.1699, -143.668, -7.22692, 0.28 ) }
    dend_19 { pt3dadd( 35.1098, -155.033, -8.90077, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -19.7354, -74.9758, 5.48855, 0.55 ) }
    dend_17 { pt3dadd( -20.4756, -76.6502, 6.32578, 0.55 ) }
    dend_17 { pt3dadd( -21.6583, -79.3254, 7.66351, 0.55 ) }
    dend_17 { pt3dadd( -22.6542, -81.578, 8.78989, 0.28 ) }
    dend_17 { pt3dadd( -23.9071, -84.4119, 10.2069, 0.55 ) }
    dend_17 { pt3dadd( -24.3226, -85.3518, 10.6769, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.7354, -74.9758, 5.48855, 0.55 ) }
    dend_16 { pt3dadd( -20.5404, -77.9352, 7.24466, 0.55 ) }
    dend_16 { pt3dadd( -20.8525, -79.1939, 8.24516, 0.55 ) }
    dend_16 { pt3dadd( -21.385, -81.566, 10.4638, 0.55 ) }
    dend_16 { pt3dadd( -21.6348, -83.0716, 12.0771, 0.55 ) }
    dend_16 { pt3dadd( -21.8483, -84.4948, 13.6634, 0.55 ) }
    dend_16 { pt3dadd( -22.204, -87.4171, 16.832, 0.55 ) }
    dend_16 { pt3dadd( -22.5561, -89.7147, 19.3781, 0.55 ) }
    dend_16 { pt3dadd( -22.6578, -91.2259, 21.2294, 0.55 ) }
    dend_16 { pt3dadd( -22.6308, -93.2658, 23.9386, 0.28 ) }
    dend_16 { pt3dadd( -22.6305, -94.1126, 25.1207, 0.55 ) }
    dend_16 { pt3dadd( -22.6743, -95.186, 26.6914, 0.28 ) }
    dend_16 { pt3dadd( -22.7748, -96.607, 28.63, 0.55 ) }
    dend_16 { pt3dadd( -23.1236, -99.569, 32.5562, 0.28 ) }
    dend_16 { pt3dadd( -23.255, -100.232, 33.45, 0.55 ) }
    dend_16 { pt3dadd( -23.6944, -101.455, 35.3057, 0.28 ) }
    dend_16 { pt3dadd( -24.0257, -102.193, 36.8328, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 61/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.8298, -80.0623, -7.08349, 0.83 ) }
    dend_22 { pt3dadd( -17.5316, -82.378, -7.26859, 0.83 ) }
    dend_22 { pt3dadd( -18.2898, -84.8799, -7.46857, 0.83 ) }
    dend_22 { pt3dadd( -18.9774, -87.1487, -7.64992, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.8298, -80.0623, -7.08349, 0.55 ) }
    dend_21 { pt3dadd( -17.8351, -80.4863, -7.34096, 0.55 ) }
    dend_21 { pt3dadd( -19.0002, -80.8785, -7.70421, 0.55 ) }
    dend_21 { pt3dadd( -20.7452, -81.4787, -8.22375, 0.55 ) }
    dend_21 { pt3dadd( -22.1943, -81.9882, -8.62088, 1.38 ) }
    dend_21 { pt3dadd( -22.6704, -82.15, -8.73954, 1.38 ) }
    dend_21 { pt3dadd( -24.5731, -82.7831, -9.22938, 0.55 ) }
    dend_21 { pt3dadd( -25.6879, -83.1445, -9.63507, 0.55 ) }
    dend_21 { pt3dadd( -26.855, -83.5422, -10.2096, 0.55 ) }
    dend_21 { pt3dadd( -27.2876, -83.7031, -10.4367, 0.55 ) }
    dend_21 { pt3dadd( -27.7274, -83.8729, -10.6626, 0.55 ) }
    dend_21 { pt3dadd( -29.4855, -84.6502, -11.5326, 0.55 ) }
    dend_21 { pt3dadd( -31.3347, -85.6544, -12.4285, 0.55 ) }
    dend_21 { pt3dadd( -33.1695, -86.782, -13.3413, 0.55 ) }
    dend_21 { pt3dadd( -34.6252, -87.7065, -14.0127, 0.55 ) }
    dend_21 { pt3dadd( -35.8122, -88.5742, -14.5274, 0.28 ) }
    dend_21 { pt3dadd( -36.7653, -89.3073, -14.9752, 0.55 ) }
    dend_21 { pt3dadd( -37.9732, -90.2751, -15.5143, 0.55 ) }
    dend_21 { pt3dadd( -39.9898, -91.9332, -16.3476, 0.55 ) }
    dend_21 { pt3dadd( -41.6719, -93.372, -17.0584, 0.55 ) }
    dend_21 { pt3dadd( -43.3809, -94.8604, -17.8877, 0.55 ) }
    dend_21 { pt3dadd( -46.4752, -97.5429, -19.5663, 0.55 ) }
    dend_21 { pt3dadd( -47.201, -98.1199, -19.9906, 0.55 ) }
    dend_21 { pt3dadd( -51.3644, -100.056, -22.39, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.9774, -87.1487, -7.64992, 0.83 ) }
    dend_24 { pt3dadd( -18.535, -91.8754, -5.16326, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 91/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -18.9774, -87.1487, -7.64992, 0.55 ) }
    dend_23 { pt3dadd( -21.7387, -89.3318, -7.94726, 0.55 ) }
    dend_23 { pt3dadd( -22.3574, -89.873, -7.95923, 0.28 ) }
    dend_23 { pt3dadd( -26.4353, -93.2178, -8.23495, 0.28 ) }
    dend_23 { pt3dadd( -28.0668, -94.4969, -8.46037, 0.28 ) }
    dend_23 { pt3dadd( -28.8024, -95.0869, -8.58781, 0.28 ) }
    dend_23 { pt3dadd( -30.5647, -96.5151, -9.0459, 0.28 ) }
    dend_23 { pt3dadd( -32.3657, -98.0923, -9.59835, 0.55 ) }
    dend_23 { pt3dadd( -35.786, -101.297, -10.8754, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -37.8351, -103.263, -11.7916, 0.28 ) }
    dend_23 { pt3dadd( -38.7967, -104.171, -12.2889, 0.55 ) }
    dend_23 { pt3dadd( -41.8657, -107.066, -14.087, 0.28 ) }
    dend_23 { pt3dadd( -42.8337, -107.943, -14.7311, 0.55 ) }
    dend_23 { pt3dadd( -44.2554, -109.363, -15.882, 0.55 ) }
    dend_23 { pt3dadd( -50.1066, -115.259, -16.4679, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -18.535, -91.8754, -5.16326, 0.83 ) }
    dend_26 { pt3dadd( -19.8828, -96.1881, -7.17726, 0.83 ) }
    dend_26 { pt3dadd( -20.4245, -97.9551, -7.84937, 0.83 ) }
    dend_26 { pt3dadd( -21.8278, -101.895, -9.05446, 0.55 ) }
    dend_26 { pt3dadd( -22.8468, -104.575, -9.61702, 0.55 ) }
    dend_26 { pt3dadd( -23.3993, -106.046, -9.83618, 0.55 ) }
    dend_26 { pt3dadd( -24.4821, -109.099, -10.1791, 0.55 ) }
    dend_26 { pt3dadd( -25.3039, -111.683, -10.1216, 0.55 ) }
    dend_26 { pt3dadd( -26.2594, -114.641, -9.83683, 0.55 ) }
    dend_26 { pt3dadd( -27.0446, -117.139, -9.50098, 0.55 ) }
    dend_26 { pt3dadd( -27.4157, -118.586, -9.27379, 0.55 ) }
    dend_26 { pt3dadd( -27.6839, -119.85, -9.12376, 0.55 ) }
    dend_26 { pt3dadd( -27.9099, -121.34, -9.01571, 0.55 ) }
    dend_26 { pt3dadd( -28.1779, -123.412, -8.96386, 0.55 ) }
    dend_26 { pt3dadd( -28.3979, -126.016, -9.17684, 0.55 ) }
    dend_26 { pt3dadd( -28.703, -128.331, -9.53374, 0.55 ) }
    dend_26 { pt3dadd( -29.0046, -130.106, -9.72635, 0.55 ) }
    dend_26 { pt3dadd( -29.1773, -131.254, -9.80713, 0.55 ) }
    dend_26 { pt3dadd( -29.4486, -133.073, -9.86033, 0.55 ) }
    dend_26 { pt3dadd( -29.7942, -135.783, -9.84145, 0.55 ) }
    dend_26 { pt3dadd( -30.144, -139.139, -9.89057, 0.55 ) }
    dend_26 { pt3dadd( -30.439, -142.166, -10.0297, 0.55 ) }
    dend_26 { pt3dadd( -30.6398, -145.281, -10.2442, 0.55 ) }
    dend_26 { pt3dadd( -30.8742, -148.382, -10.6221, 0.55 ) }
    dend_26 { pt3dadd( -31.0216, -150.438, -10.9815, 0.55 ) }
    dend_26 { pt3dadd( -31.2602, -153.972, -11.7028, 0.55 ) }
    dend_26 { pt3dadd( -31.5262, -157.26, -12.6203, 0.55 ) }
    dend_26 { pt3dadd( -31.8348, -160.182, -13.7031, 0.55 ) }
    dend_26 { pt3dadd( -32.4397, -164.94, -15.6304, 0.55 ) }
    dend_26 { pt3dadd( -32.7459, -167.262, -16.5203, 0.55 ) }
    dend_26 { pt3dadd( -33.1166, -169.705, -17.3538, 0.55 ) }
    dend_26 { pt3dadd( -33.5014, -172.213, -18.0637, 0.55 ) }
    dend_26 { pt3dadd( -34.0913, -175.847, -19.1263, 0.55 ) }
    dend_26 { pt3dadd( -34.5192, -178.115, -19.5944, 0.55 ) }
    dend_26 { pt3dadd( -35.2526, -182.26, -20.2067, 0.55 ) }
    dend_26 { pt3dadd( -35.5609, -184.116, -20.4265, 0.55 ) }
    dend_26 { pt3dadd( -35.8934, -186.288, -20.638, 0.55 ) }
    dend_26 { pt3dadd( -36.4716, -190.827, -21.1285, 0.55 ) }
    dend_26 { pt3dadd( -37.2779, -197.863, -22.1266, 0.55 ) }
    dend_26 { pt3dadd( -37.6338, -201.439, -22.8598, 0.55 ) }
    dend_26 { pt3dadd( -37.8187, -203.394, -23.3728, 0.55 ) }
    dend_26 { pt3dadd( -38.0121, -205.142, -23.8478, 0.55 ) }
    dend_26 { pt3dadd( -38.3966, -209.077, -24.9315, 0.55 ) }
    dend_26 { pt3dadd( -38.5295, -211.202, -25.483, 0.55 ) }
    dend_26 { pt3dadd( -38.6302, -212.961, -26.007, 0.55 ) }
    dend_26 { pt3dadd( -38.8014, -215.581, -26.7041, 0.55 ) }
    dend_26 { pt3dadd( -39.0451, -218.62, -27.3701, 0.55 ) }
    dend_26 { pt3dadd( -39.2684, -220.945, -27.8707, 0.55 ) }
    dend_26 { pt3dadd( -39.6621, -224.288, -28.4989, 0.55 ) }
    dend_26 { pt3dadd( -39.7255, -224.855, -28.6102, 0.55 ) }
    dend_26 { pt3dadd( -40.2, -229.874, -29.7224, 0.55 ) }
    dend_26 { pt3dadd( -40.6344, -235.448, -31.0492, 0.55 ) }
    dend_26 { pt3dadd( -40.8758, -239.135, -31.8142, 0.55 ) }
    dend_26 { pt3dadd( -41.0171, -241.188, -32.2322, 0.28 ) }
    dend_26 { pt3dadd( -41.0646, -242.206, -32.4314, 0.28 ) }
    dend_26 { pt3dadd( -41.1102, -243.5, -32.6846, 0.55 ) }
    dend_26 { pt3dadd( -41.243, -246.349, -33.2471, 0.28 ) }
    dend_26 { pt3dadd( -41.3962, -250.012, -34.1171, 0.28 ) }
    dend_26 { pt3dadd( -41.5981, -253.189, -34.8108, 0.28 ) }
    dend_26 { pt3dadd( -41.6496, -253.942, -34.9825, 0.55 ) }
    dend_26 { pt3dadd( -41.9956, -256.99, -35.7884, 0.28 ) }
    dend_26 { pt3dadd( -42.5738, -260.638, -36.7916, 0.28 ) }
    dend_26 { pt3dadd( -43.0242, -263.188, -37.3889, 0.28 ) }
    dend_26 { pt3dadd( -43.9052, -267.971, -38.3069, 0.28 ) }
    dend_26 { pt3dadd( -44.4659, -270.718, -38.5638, 0.55 ) }
    dend_26 { pt3dadd( -45.615, -276.054, -38.7603, 0.28 ) }
    dend_26 { pt3dadd( -46.5134, -279.99, -38.6642, 0.28 ) }
    dend_26 { pt3dadd( -47.3878, -283.826, -38.4338, 0.55 ) }
    dend_26 { pt3dadd( -47.884, -285.904, -38.2712, 0.28 ) }
    dend_26 { pt3dadd( -49.5176, -292.675, -37.6118, 0.28 ) }
    dend_26 { pt3dadd( -50.1496, -295.199, -37.4329, 0.55 ) }
    dend_26 { pt3dadd( -51.1446, -299.503, -37.0947, 0.28 ) }
    dend_26 { pt3dadd( -51.5337, -301.3, -37.0239, 0.83 ) }
    dend_26 { pt3dadd( -52.4573, -305.616, -37.0414, 0.28 ) }
    dend_26 { pt3dadd( -52.6948, -306.923, -37.069, 0.55 ) }
    dend_26 { pt3dadd( -53.4172, -312.717, -37.3157, 0.28 ) }
    dend_26 { pt3dadd( -53.7995, -316.039, -37.4821, 0.55 ) }
    dend_26 { pt3dadd( -54.0814, -318.993, -37.6596, 0.28 ) }
    dend_26 { pt3dadd( -54.1692, -320.057, -37.7277, 0.55 ) }
    dend_26 { pt3dadd( -54.3783, -324.269, -38.011, 0.28 ) }
    dend_26 { pt3dadd( -54.3981, -325.375, -38.066, 0.83 ) }
    dend_26 { pt3dadd( -56.6513, -334.395, -39.3193, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 88/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -18.535, -91.8754, -5.16326, 0.55 ) }
    dend_25 { pt3dadd( -18.4681, -94.7506, -5.28608, 0.55 ) }
    dend_25 { pt3dadd( -18.2733, -97.7729, -5.16764, 0.55 ) }
    dend_25 { pt3dadd( -18.1982, -100.69, -4.91152, 0.55 ) }
    dend_25 { pt3dadd( -18.1431, -104.514, -4.51408, 0.55 ) }
    dend_25 { pt3dadd( -17.9194, -108.023, -3.97282, 0.55 ) }
    dend_25 { pt3dadd( -17.3612, -113.993, -2.89959, 0.55 ) }
    dend_25 { pt3dadd( -16.9466, -116.568, -2.1584, 0.55 ) }
    dend_25 { pt3dadd( -16.2391, -119.415, -1.19957, 0.55 ) }
    dend_25 { pt3dadd( -15.9261, -120.405, -0.806492, 0.55 ) }
    dend_25 { pt3dadd( -14.3193, -124.802, 1.23257, 0.55 ) }
    dend_25 { pt3dadd( -13.2019, -127.456, 2.53106, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( -11.4908, -131.513, 4.61303, 0.55 ) }
    dend_25 { pt3dadd( -10.4028, -134.069, 5.96718, 0.55 ) }
    dend_25 { pt3dadd( -8.58859, -138.327, 8.35566, 0.55 ) }
    dend_25 { pt3dadd( -7.22796, -141.893, 10.5491, 0.55 ) }
    dend_25 { pt3dadd( -6.50865, -143.948, 11.9722, 0.55 ) }
    dend_25 { pt3dadd( -5.47169, -147.042, 14.3737, 0.55 ) }
    dend_25 { pt3dadd( -4.48271, -150.304, 16.9547, 0.55 ) }
    dend_25 { pt3dadd( -3.62741, -153.294, 19.3602, 0.55 ) }
    dend_25 { pt3dadd( -2.80104, -156.451, 21.8562, 0.55 ) }
    dend_25 { pt3dadd( -1.69064, -160.902, 25.174, 0.55 ) }
    dend_25 { pt3dadd( -1.24588, -162.738, 26.4537, 0.28 ) }
    dend_25 { pt3dadd( -0.779107, -164.833, 27.6398, 0.55 ) }
    dend_25 { pt3dadd( -0.464377, -167.299, 28.3903, 0.28 ) }
    dend_25 { pt3dadd( -0.374596, -168.397, 28.4728, 0.55 ) }
    dend_25 { pt3dadd( -0.346909, -169.354, 28.3184, 0.28 ) }
    dend_25 { pt3dadd( -0.402378, -170.583, 27.8845, 0.83 ) }
    dend_25 { pt3dadd( -0.596082, -175.639, 25.8369, 0.28 ) }
    dend_25 { pt3dadd( -0.647737, -176.692, 25.4599, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_42, dend_41, dend_28, dend_27, dend_0, axon_0, dend_44, dend_43, dend_30, dend_29, dend_6, dend_1, axon_1, dend_46, dend_45, dend_36, dend_31, dend_8, dend_7, dend_5, dend_2, dend_38, dend_37, dend_33, dend_32, dend_10, dend_9, dend_4, dend_3, dend_40, dend_39, dend_35, dend_34, dend_14, dend_11, dend_18, dend_15, dend_13, dend_12, dend_20, dend_19, dend_17, dend_16, dend_22, dend_21, dend_24, dend_23, dend_26, dend_25]}
    ModelViewParmSubset_5 = new SectionList()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_41 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_27 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_7 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_37 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_8 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_38 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_44 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_24 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 5
    dend_41 nseg = 3
    dend_27 nseg = 5
    dend_43 nseg = 3
    dend_29 nseg = 5
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_37 nseg = 7
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_9 nseg = 5
    dend_40 nseg = 7
    dend_39 nseg = 7
    dend_34 nseg = 3
    dend_11 nseg = 3
    dend_13 nseg = 3
    dend_19 nseg = 5
    dend_16 nseg = 3
    dend_21 nseg = 3
    dend_23 nseg = 3
    dend_26 nseg = 13
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_LBC_78b571a886_0_0


