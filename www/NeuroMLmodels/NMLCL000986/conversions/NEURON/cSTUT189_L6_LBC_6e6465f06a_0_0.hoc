// Cell: cSTUT189_L6_LBC_6e6465f06a_0_0
/*
{
  "id" : "cSTUT189_L6_LBC_6e6465f06a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.84291, 11.3612, 2.23641, 5.89494", "-5.19407, 10.0003, 1.99661, 10.2773", "-4.54524, 8.63944, 1.7568, 13.3265", "-3.8964, 7.27857, 1.517, 15.2194", "-3.24756, 5.91771, 1.2772, 16.1615", "-2.59873, 4.55684, 1.0374, 16.5543", "-1.94989, 3.19598, 0.797597, 16.4314", "-1.30106, 1.83511, 0.557795, 16.0873", "-0.65222, 0.47425, 0.317993, 15.3318", "-0.00338354, -0.886615, 0.0781916, 14.6262", "0.645453, -2.24748, -0.16161, 13.9141", "1.29429, -3.60834, -0.401412, 12.634", "1.94312, -4.96921, -0.641214, 10.4536", "2.59196, -6.33007, -0.881015, 8.87258", "3.2408, -7.69094, -1.12082, 7.42349", "3.88963, -9.0518, -1.36062, 6.11203", "4.53847, -10.4127, -1.60042, 4.82754", "5.18731, -11.7735, -1.84022, 4.18986", "5.83614, -13.1344, -2.08002, 4.58127", "6.48498, -14.4953, -2.31983, 4.2655", "7.13381, -15.8561, -2.55963, 2.83368" ]
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "9.13926, -15.777, -1.39701, 1.62", "10.4703, -16.1258, -0.723775, 1.62", "11.5471, -16.413, -0.146076, 1.62", "12.7506, -16.7407, 0.548156, 1.25", "14.1282, -17.1537, 1.38629, 1.25", "16.053, -17.8049, 2.57444, 1.25", "17.1174, -18.2076, 3.22212, 1.4", "18.5333, -18.7848, 4.14789, 1.4", "19.3396, -19.2107, 4.70297, 1.4", "20.2644, -19.8566, 5.33472, 1.62", "20.8606, -20.3819, 5.67155, 1.62", "21.935, -21.3885, 6.13047, 1.62", "22.8617, -22.1997, 6.45477, 1.62", "24.0351, -23.1552, 6.8217, 1.62", "24.9365, -23.8724, 7.07391, 1.62", "26.6851, -25.1921, 7.52944, 1.11", "28.5594, -26.5091, 8.01089, 1.4", "30.5793, -27.8128, 8.50345, 1.4", "31.7496, -28.4657, 8.76615, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "6.56926, -15.977, -4.34701, 2.65", "8.17604, -19.0863, -4.5713, 2.73", "9.51307, -21.6736, -4.75794, 2.43", "10.833, -24.2278, -4.94219, 2.43", "12.1766, -26.8278, -5.12974, 2.65", "13.0272, -28.4739, -5.24848, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.59074, -4.41702, 12.953, 2.36", "-6.21703, -5.0136, 13.1998, 2.36", "-7.90721, -5.63362, 13.4562, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.27926, 9.99302, 3.25299, 2.21", "4.51981, 11.2151, 4.59864, 2.21", "5.91444, 12.5891, 6.11142, 2.21", "6.8879, 13.5482, 7.16735, 2.21", "8.07053, 14.7133, 8.45016, 2.21", "9.08712, 15.7148, 9.55289, 2.21", "10.6043, 17.2095, 11.1986, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.53074, 9.25302, 1.90299, 1.47", "-8.77775, 10.1676, 1.90299, 1.47", "-9.01748, 11.104, 1.90299, 1.47", "-9.19513, 12.0301, 1.90299, 1.62", "-9.33166, 12.8231, 1.90299, 1.84", "-9.40111, 13.2853, 1.90299, 1.84", "-9.53195, 14.3372, 1.90521, 1.84", "-9.55165, 14.6973, 1.90646, 1.84", "-9.54785, 16.0058, 1.9121, 1.4", "-9.50085, 17.1095, 1.91731, 1.4", "-9.44995, 17.6976, 1.92014, 1.25", "-9.2326, 19.7235, 1.92978, 1.69", "-9.11845, 20.6732, 1.93539, 1.69", "-8.97805, 21.9498, 1.97716, 1.69", "-8.89276, 23.0842, 2.04048, 1.33", "-8.84605, 24.2048, 2.12488, 1.33", "-8.87087, 24.8994, 2.18874, 1.33", "-9.03045, 25.986, 2.33606, 0.81", "-9.34851, 27.2452, 2.54197, 0.81", "-9.62615, 28.1795, 2.70935, 0.81", "-9.77765, 28.8047, 2.78932, 0.96", "-9.99595, 30.004, 2.83712, 0.96", "-10.1664, 31.5017, 2.72513, 1.25", "-10.2197, 32.3773, 2.55576, 1.25", "-10.2795, 33.6588, 2.20687, 1.25", "-10.4265, 36.1256, 1.47172, 0.88", "-10.5248, 37.3054, 1.09749, 0.88", "-10.6929, 38.7947, 0.609772, 1.03", "-10.8449, 39.7432, 0.323022, 1.25", "-11.3739, 42.108, -0.269251, 1.11", "-11.8123, 43.553, -0.534516, 0.88", "-12.0049, 44.0995, -0.598431, 0.88", "-12.4136, 45.3323, -0.679922, 1.11", "-12.8857, 47.012, -0.82485, 0.66", "-12.9986, 47.5459, -0.901726, 0.66", "-13.0975, 48.3127, -1.04747, 0.66", "-13.2451, 49.8419, -1.36203, 0.88", "-13.3007, 50.3731, -1.4771, 0.88", "-13.5293, 52.2001, -1.89288, 0.59", "-13.6616, 53.2252, -2.13207, 0.52", "-14.1838, 57.365, -2.99761, 0.59", "-14.247, 57.9748, -3.10386, 0.52", "-14.3371, 59.0433, -3.27151, 0.37", "-14.3682, 59.6952, -3.37566, 0.37", "-14.3716, 61.0005, -3.57492, 0.44", "-14.3028, 61.8926, -3.77466, 0.44", "-14.0163, 63.1768, -4.30971, 0.29", "-13.726, 64.3544, -4.90652, 0.29", "-13.5492, 65.0985, -5.34626, 0.29", "-13.4954, 65.4256, -5.57007, 0.44", "-13.5045, 65.7505, -5.83702, 0.74", "-13.6459, 66.3432, -6.38287, 0.74", "-13.848, 66.7774, -6.8016, 0.74", "-14.1416, 67.351, -7.25241, 0.74", "-14.2203, 67.5324, -7.36917, 0.37", "-14.2922, 68.0859, -7.71454, 0.37", "-14.2914, 68.3041, -7.86399, 0.37", "-14.2661, 68.7585, -8.19277, 0.37", "-14.255, 69.262, -8.58134, 0.37", "-14.2799, 69.9106, -9.07569, 0.37", "-14.462, 71.7552, -10.5451, 0.37", "-14.666, 73.1948, -11.7185, 0.37", "-14.7591, 73.7438, -12.1811, 0.22", "-14.9546, 74.6498, -12.9612, 0.22", "-15.2171, 75.607, -13.7583, 0.22", "-15.4249, 76.5719, -14.506, 0.44", "-15.4687, 76.8986, -14.7218, 0.44", "-15.4703, 77.5233, -15.0897, 0.44", "-15.3826, 78.2642, -15.4942, 0.44", "-15.0712, 79.6627, -16.191, 0.44", "-14.3895, 82.0101, -17.2592, 0.29", "-14.1693, 82.7109, -17.5231, 0.37", "-14.0084, 83.1954, -17.6869, 0.37", "-13.6312, 84.2572, -17.9984, 0.37", "-13.424, 84.8179, -18.1455, 0.37", "-13.2675, 85.3358, -18.2529, 0.37", "-13.2507, 85.9123, -18.2944, 0.22", "-13.283, 86.3149, -18.3027, 0.22", "-13.3225, 86.5667, -18.2926, 0.29", "-13.4787, 87.2912, -18.2335, 0.29", "-13.7554, 88.4785, -18.1209, 0.29", "-14.2515, 90.6266, -17.9777, 0.59", "-14.4607, 91.553, -17.9575, 0.37", "-14.6371, 92.3044, -17.9683, 0.22", "-14.8056, 92.9801, -17.9995, 0.22", "-15.1208, 94.0316, -18.0833, 0.22", "-15.8182, 95.7298, -18.2982, 0.37", "-16.1795, 96.4107, -18.4588, 0.37", "-16.5625, 97.0255, -18.6559, 0.37", "-16.9135, 97.539, -18.8622, 0.37", "-17.6958, 98.5731, -19.2873, 0.37", "-18.5478, 99.5794, -19.6825, 0.15", "-19.2545, 100.359, -19.9254, 0.15", "-19.3341, 100.459, -19.954, 0.29", "-19.7273, 101.045, -20.1303, 0.29", "-20.1407, 101.821, -20.3728, 0.29", "-20.4276, 102.555, -20.6115, 0.29", "-20.6652, 103.353, -20.8391, 0.29", "-21.0258, 104.819, -21.1411, 0.37", "-21.1785, 105.586, -21.3002, 0.22", "-21.2771, 106.193, -21.398, 0.15", "-21.3642, 106.863, -21.4941, 0.15", "-21.5043, 108.468, -21.656, 0.15", "-21.6466, 110.613, -21.7613, 0.29", "-21.6705, 111.226, -21.7518, 0.22", "-21.7056, 112.525, -21.6939, 0.22", "-21.7146, 112.896, -21.6683, 0.29", "-21.7146, 113.472, -21.5938, 0.29", "-21.6931, 114.309, -21.4481, 0.29", "-21.6622, 115.169, -21.2767, 0.29", "-21.6507, 115.506, -21.2144, 0.29", "-21.5685, 117.111, -20.9805, 0.29", "-21.4717, 119.022, -20.7183, 0.29", "-21.4463, 119.576, -20.6422, 0.29", "-21.4292, 120.071, -20.5767, 0.29", "-21.4295, 121.859, -20.4264, 0.29", "-21.4573, 123.431, -20.3823, 0.44", "-21.4972, 124.269, -20.4063, 0.44", "-21.554, 125.309, -20.4775, 0.29", "-21.6515, 126.745, -20.6002, 0.29", "-21.8673, 129.162, -20.8478, 0.44", "-21.9709, 130.038, -20.9638, 0.29", "-22.2227, 131.792, -21.2581, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.13381, -15.8561, -2.55963, 0.944631", "13.5893, -29.3959, -2.55963, 0.944631", "20.0449, -42.9357, -2.55963, 0.944631" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "31.7496, -28.4657, 8.76615, 1.33", "32.9515, -28.8743, 7.92334, 1.33", "33.9218, -29.2702, 7.32617, 1.33", "35.5228, -30.0936, 6.3496, 0.96", "36.4715, -30.7205, 5.75815, 0.96", "36.848, -31.0385, 5.50457, 1.11", "37.3669, -31.636, 5.12543, 1.11", "37.9081, -32.6025, 4.66723, 0.88", "38.1756, -33.441, 4.39297, 0.52", "38.3591, -34.3489, 4.09757, 0.52", "38.4719, -35.163, 3.77223, 0.52", "38.6443, -36.4355, 3.21536, 1.03", "38.7611, -37.1429, 2.87515, 1.4", "38.9689, -38.0122, 2.42695, 1.4", "39.6021, -39.855, 1.44589, 1.11", "40.033, -40.7715, 0.942994, 0.66", "40.483, -41.5154, 0.540358, 0.66", "41.164, -42.3849, 0.0874386, 1.11", "41.7382, -43.0194, -0.210932, 1.55", "42.2055, -43.477, -0.384952, 1.55", "42.9076, -44.0703, -0.546903, 1.55", "43.5281, -44.5784, -0.697548, 1.55", "44.5221, -45.4321, -1.01307, 1.25", "45.3481, -46.2132, -1.34298, 1.25", "45.8471, -46.7488, -1.60046, 1.25", "46.4341, -47.4734, -1.98783, 0.81", "47.1275, -48.3894, -2.51999, 0.66", "47.4706, -48.866, -2.80723, 0.66", "47.7176, -49.2177, -3.00501, 0.66", "47.9791, -49.5375, -3.14939, 0.66", "48.2924, -49.851, -3.26507, 0.66", "49.1956, -50.6913, -3.51785, 0.66", "49.6272, -51.05, -3.58117, 1.11", "50.4925, -51.7187, -3.65802, 1.47", "51.3868, -52.3806, -3.70849, 1.99", "52.337, -53.093, -3.74263, 1.99" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "31.7496, -28.4657, 8.76615, 1.11", "32.8974, -29.0714, 10.7552, 1.11", "34.6938, -30.0394, 13.6406, 1.25", "35.944, -30.6394, 15.5768, 1.25", "37.2627, -31.1729, 17.5829, 0.74", "37.8157, -31.3167, 18.4033, 0.59", "38.3885, -31.3547, 19.2192, 0.59", "38.8155, -31.2921, 19.9066, 0.59", "39.4758, -30.9318, 20.9478, 0.44", "39.9092, -30.5699, 21.629, 0.44", "40.9911, -29.465, 23.2902, 0.44", "42.0935, -28.1934, 24.9969, 0.44", "43.7267, -26.1654, 27.4694, 0.44", "44.634, -25.0282, 28.762, 0.52", "45.2954, -24.2822, 29.6112, 0.52", "45.8599, -23.7924, 30.2102, 0.52", "46.6986, -23.3963, 30.8329, 0.52", "47.2672, -23.3249, 31.1404, 0.52", "47.6042, -23.3528, 31.2925, 0.52", "48.7402, -23.6403, 31.8673, 0.52", "51.149, -24.516, 33.1994, 0.52", "53.3186, -25.4842, 34.4596, 0.81", "54.516, -26.1267, 35.1746, 1.03", "55.3224, -26.6147, 35.6566, 1.03", "55.8829, -26.9657, 35.9669, 1.33", "56.4239, -27.2889, 36.2152, 1.33", "56.7105, -27.4466, 36.3126, 1.33", "58.0734, -28.0072, 36.6276, 0.59", "58.9349, -28.2834, 36.7937, 0.59", "60.7252, -28.7094, 37.1351, 0.59", "62.4225, -29.0301, 37.4923, 0.59", "63.4316, -29.2001, 37.7454, 0.59", "64.401, -29.3742, 38.0378, 0.37", "65.7723, -29.6531, 38.5647, 0.37", "66.0938, -29.7926, 38.7199, 0.37", "66.4418, -30.1488, 38.9215, 0.37", "67.0052, -31.0175, 39.1656, 0.37", "67.6276, -31.9932, 39.3105, 0.37", "68.0804, -32.6769, 39.3853, 0.74", "69.176, -34.0797, 39.4876, 1.18", "70.2723, -35.2946, 39.598, 0.52", "71.3774, -36.3322, 39.7521, 0.52", "72.6676, -37.341, 40.0188, 0.81", "73.4694, -37.8535, 40.2982, 0.81", "74.7011, -38.4766, 40.9114, 1.11", "75.1483, -38.6283, 41.2056, 1.11", "75.9671, -38.8004, 41.862, 1.11", "76.7203, -38.8822, 42.5326, 1.11", "77.8253, -38.9053, 43.5012, 0.66", "78.2839, -38.877, 43.8178, 0.66", "78.931, -38.7913, 44.1734, 0.66", "79.6257, -38.6936, 44.4673, 0.66", "80.2113, -38.6288, 44.66, 0.66", "81.1782, -38.558, 44.9402, 0.15", "82.441, -38.5522, 45.3527, 0.37", "82.8093, -38.6501, 45.6212, 0.37", "83.2702, -39.1099, 46.5687, 0.37", "83.4733, -39.4279, 47.1683, 0.37", "83.5736, -39.6888, 47.6365, 0.37", "83.6666, -40.2515, 48.6144, 0.37", "83.6581, -41.4427, 50.6927, 0.59", "83.5602, -42.3542, 52.3646, 0.59", "92.6767, -46.6563, 59.9223, 0.59", "102.018, -50.9678, 67.1938, 0.59", "110.832, -56.4619, 74.3259, 0.59", "118.276, -61.7501, 83.0075, 0.59", "125.96, -67.1878, 91.3808, 0.59", "131.292, -74.3901, 100.237, 0.59", "137.058, -82.9283, 107.489, 0.59", "144.816, -90.0314, 114.424, 0.59", "153.37, -94.1745, 122.695, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "13.0272, -28.4739, -5.24848, 1.55", "11.6016, -30.0507, -7.80174, 1.55", "9.87199, -31.8567, -10.6746, 1.55", "8.84853, -32.8719, -12.1827, 1.84", "8.30473, -33.4039, -12.8827, 1.84", "7.65089, -34.0617, -13.6433, 1.84", "7.198, -34.5321, -14.1057, 1.84", "6.54941, -35.1334, -14.6195, 1.84", "5.66849, -36.0168, -15.029, 1.84", "4.70148, -37.0429, -15.3391, 1.84", "4.0209, -37.7746, -15.4783, 1.84", "3.03769, -38.9308, -15.5672, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "13.0272, -28.4739, -5.24848, 1.25", "14.4748, -30.0521, -5.29208, 1.25", "16.1799, -31.911, -5.34345, 1.18", "17.3184, -33.1522, -5.37774, 1.03", "18.9491, -34.93, -5.42687, 1.25", "21.1673, -37.3484, -5.49369, 2.73" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-7.90721, -5.63362, 13.4562, 1.11", "-7.62443, -7.74959, 13.2164, 1.11", "-7.42877, -9.18034, 13.0427, 1.11", "-7.15756, -11.2187, 12.7877, 1.03", "-7.05441, -12.051, 12.6832, 1.03", "-6.91947, -13.3331, 12.5223, 1.03", "-6.73886, -15.5288, 12.2485, 1.18", "-6.64207, -16.5854, 12.1529, 1.18", "-6.59943, -17.1402, 12.1235, 1.18", "-6.53656, -18.1443, 12.1063, 1.03", "-6.46966, -19.455, 12.1224, 1.03", "-6.4338, -20.1817, 12.1522, 1.03", "-6.36546, -21.9197, 12.2764, 0.74", "-6.29879, -22.9854, 12.3473, 0.74", "-6.22091, -24.0042, 12.4522, 0.74", "-6.14718, -24.9222, 12.5814, 0.74", "-6.09179, -25.5349, 12.6743, 0.88", "-5.96319, -26.7731, 12.8592, 0.88", "-5.86196, -27.5627, 12.9839, 0.88", "-5.47121, -30.0173, 13.4535, 0.88", "-5.27581, -30.9934, 13.6563, 0.88", "-4.95695, -32.2935, 13.9295, 0.88", "-4.75286, -33.1875, 14.1051, 0.88", "-4.46446, -34.6997, 14.3741, 0.66", "-4.34958, -35.6726, 14.5116, 0.44", "-4.30777, -36.683, 14.5691, 0.44", "-4.31677, -37.5139, 14.5866, 0.44", "-4.36601, -39.4194, 14.5895, 0.44", "-4.366, -40.2635, 14.5641, 0.44", "-4.32092, -41.0722, 14.5364, 0.44", "-4.05175, -42.4846, 14.6106, 0.44", "-3.74573, -43.2677, 14.7228, 0.44", "-2.90879, -44.5126, 15.0113, 0.44", "-2.14387, -45.2965, 15.2641, 0.44", "-1.48563, -45.8985, 15.481, 0.44", "-0.363113, -46.8303, 15.8659, 0.07", "0.179979, -47.2373, 16.0888, 0.07", "1.24744, -48.0174, 16.5976, 0.07", "1.82682, -48.4147, 16.9316, 0.07", "3.07797, -56.8113, 16.1771, 0.07", "4.46747, -65.2172, 15.9573, 0.07", "6.49509, -73.4087, 14.763, 0.07", "9.21318, -81.4426, 13.9224, 0.07", "13.7089, -88.6832, 13.9038, 0.07", "17.0209, -96.3393, 12.1567, 0.07", "20.0117, -104.257, 11.1504, 0.07", "22.8471, -111.926, 8.74431, 0.07", "26.1517, -118.705, 4.77523, 0.07", "29.1446, -125.604, 0.765055, 0.07", "31.7957, -132.807, -2.94142, 0.07", "34.9504, -140.09, -6.04663, 0.07", "38.8656, -147.255, -8.49078, 0.07" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.90721, -5.63362, 13.4562, 1.55", "-9.38099, -5.48914, 14.2947, 1.55", "-10.8586, -5.45065, 15.1596, 1.55", "-12.6342, -5.40439, 16.199, 1.55", "-13.4429, -5.38333, 16.6724, 1.55", "-14.4332, -5.35753, 17.2521, 1.55", "-16.2832, -5.30933, 18.335, 1.55", "-17.9173, -5.38051, 19.2628, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.6043, 17.2095, 11.1986, 2.14", "13.2876, 19.6192, 12.1822, 2.14", "15.5563, 21.4555, 13.1526, 2.14", "18.0342, 23.4612, 14.2124, 2.43", "19.6512, 24.77, 14.9041, 2.43", "20.4357, 25.405, 15.2396, 2.43", "22.9799, 27.4643, 16.3278, 2.28", "25.992, 29.5961, 17.8144, 2.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.6043, 17.2095, 11.1986, 0.81", "12.8427, 16.6204, 11.6025, 0.81", "14.2977, 16.2762, 11.977, 0.81", "15.6075, 16.0082, 12.5584, 0.81", "17.1089, 15.7544, 13.6388, 0.66", "18.0907, 15.6314, 14.5851, 0.66", "18.5128, 15.5923, 15.0339, 0.66", "19.0288, 15.5739, 15.7281, 0.96", "20.1923, 15.6126, 17.3838, 1.33", "21.1731, 15.7041, 18.72, 1.77", "22.1951, 15.8009, 19.8988, 1.33", "22.9952, 15.8219, 20.5419, 0.44", "24.0883, 15.8144, 21.1657, 0.44", "24.7826, 15.8165, 21.4758, 0.44", "25.8131, 15.8626, 21.8214, 0.44", "27.5565, 16.0159, 22.357, 0.44", "28.8075, 16.1551, 22.7461, 0.44", "31.1357, 16.438, 23.6168, 0.66", "32.304, 16.5722, 24.1412, 0.66", "33.5595, 16.7004, 24.8005, 0.66", "34.5038, 16.7784, 25.3954, 0.44", "35.1094, 16.7979, 25.8889, 0.44", "36.0997, 16.7167, 26.9228, 0.44", "36.503, 16.541, 27.5367, 1.11", "36.7757, 16.375, 28.0482, 1.11", "36.9887, 16.2357, 28.5187, 1.11", "37.2936, 16.0944, 29.244, 1.4", "37.5758, 16.103, 29.9854, 1.77", "38.0495, 16.5437, 31.4342, 1.77", "38.4074, 17.129, 32.6381, 0.59", "38.5523, 17.4413, 33.1433, 0.59", "38.7611, 17.9484, 33.8456, 0.59", "39.1384, 18.8502, 34.9025, 0.59", "39.9001, 20.583, 36.6903, 0.81", "40.0507, 20.91, 37.0017, 0.81", "40.2457, 21.2884, 37.4018, 0.81", "40.4415, 21.5886, 37.7675, 0.81", "40.9914, 22.1924, 38.6378, 0.52", "41.4847, 22.5306, 39.2218, 0.29", "41.7623, 22.6669, 39.3977, 0.29", "42.3998, 22.913, 39.7673, 0.29", "43.5678, 23.277, 40.3951, 0.29", "52.612, 27.8976, 47.1643, 0.29", "61.9227, 33.4248, 52.7971, 0.29", "72.3916, 38.6317, 56.2983, 0.29", "82.6538, 44.0457, 60.0856, 0.29", "92.2555, 50.9028, 63.2092, 0.29", "101.152, 59.1278, 64.6825, 0.29", "109.828, 67.7115, 64.7985, 0.29", "116.452, 77.6422, 67.342, 0.29", "120.607, 88.8189, 69.9476, 0.29", "125.829, 99.3964, 73.0808, 0.29", "131.28, 109.981, 75.7673, 0.29", "138.233, 119.901, 77.2511, 0.29", "146.516, 128.166, 80.7217, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-22.2227, 131.792, -21.2581, 0.29", "-21.361, 133.395, -23.733, 0.29", "-20.9888, 134.016, -24.7845, 0.29", "-20.6472, 134.558, -25.5917, 0.15", "-20.2443, 135.212, -26.4463, 0.22", "-19.1667, 136.927, -28.5582, 0.29", "-18.1326, 138.552, -30.3707, 0.29", "-17.4299, 139.651, -31.414, 0.29", "-16.3541, 141.419, -32.872, 0.22", "-15.0953, 143.611, -34.3794, 0.22", "-14.7804, 144.191, -34.6991, 0.22", "-13.5936, 146.604, -35.5872, 0.15", "-12.9055, 148.161, -36.038, 0.15", "-12.3598, 149.487, -36.3712, 0.07", "-11.2802, 152.306, -37.0252, 0.07", "-10.8243, 153.564, -37.2674, 0.07", "-9.53035, 157.294, -37.8926, 0.07", "-8.95314, 159.029, -38.1638, 0.22", "-8.59754, 160.129, -38.327, 0.22", "-8.10948, 161.709, -38.5721, 0.22", "-7.76102, 162.878, -38.7738, 0.22", "-6.94744, 165.61, -39.2964, 0.22", "-6.5535, 166.956, -39.5659, 0.22", "-6.0125, 168.628, -39.9239, 0.22", "-5.49574, 170.03, -40.3125, 0.15", "-4.96075, 171.296, -40.777, 0.15", "-4.31318, 172.627, -41.3695, 0.15", "-3.87002, 173.448, -41.7826, 0.15", "-2.72717, 175.446, -42.8116, 0.15", "-1.86467, 176.968, -43.7284, 0.15", "-1.32545, 178.035, -44.3843, 0.15", "-0.794114, 179.28, -45.1465, 0.15", "-0.329011, 180.64, -45.9671, 0.15", "0.105137, 182.33, -46.9245, 0.15", "0.588231, 185.215, -48.3298, 0.15", "0.714032, 186.582, -48.8986, 0.15", "0.806517, 188.584, -49.6258, 0.07", "0.81648, 189.973, -50.0946, 0.07", "0.778279, 191.179, -50.5074, 0.07", "0.700307, 192.96, -51.0798, 0.07", "0.663126, 194.361, -51.4646, 0.07", "0.648901, 196.217, -51.9914, 0.07", "0.646347, 198.86, -52.759, 0.07", "0.733592, 200.921, -53.3197, 0.07", "0.941385, 203.086, -53.8448, 0.07", "1.46863, 206.404, -54.5491, 0.07", "2.04845, 209.024, -55.0024, 0.07", "2.77375, 211.676, -55.3442, 0.07", "3.6349, 214.182, -55.625, 0.07", "4.54687, 216.298, -55.9274, 0.07", "5.87535, 218.795, -56.5133, 0.07", "6.95343, 220.307, -57.076, 0.07", "7.43207, 220.843, -57.4333, 0.07", "8.81584, 222.15, -58.8516, 0.07", "10.521, 223.642, -61.1437, 0.07", "11.5853, 224.542, -62.9019, 0.07", "12.6436, 225.461, -65.0095, 0.07", "14.413, 227.185, -69.125, 0.07", "15.039, 227.924, -70.817, 0.07", "15.2964, 228.291, -71.637, 0.07", "15.7344, 229.155, -73.4744, 0.07", "15.9937, 229.965, -75.1434, 0.07", "16.0575, 230.562, -76.278, 0.07", "16.1185, 231.196, -77.1404, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-22.2227, 131.792, -21.2581, 0.07", "-22.4451, 133.878, -21.407, 0.07", "-22.609, 135.336, -21.4756, 0.15", "-22.7587, 137.044, -21.5295, 0.15", "-23.0544, 140.052, -21.5961, 0.15", "-23.2105, 141.414, -21.6014, 0.15", "-23.4408, 143.382, -21.5677, 0.07", "-23.4952, 143.873, -21.53, 0.07", "-23.8725, 146.518, -21.133, 0.07", "-24.1955, 148.672, -20.7572, 0.07", "-24.5011, 150.692, -20.3402, 0.07", "-24.7235, 152.06, -20.0323, 0.07", "-25.05, 153.943, -19.5722, 0.07", "-25.4683, 156.111, -18.9443, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "20.0449, -42.9357, -2.55963, 0.287701", "26.5004, -56.4755, -2.55963, 0.287701", "32.9559, -70.0153, -2.55963, 0.287701" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "52.337, -53.093, -3.74263, 0.29", "53.1178, -53.4264, -4.51064, 0.29", "53.8014, -53.7098, -5.16533, 0.44", "54.4452, -53.9971, -5.73267, 0.44", "55.7853, -54.6655, -6.79444, 0.44", "56.0372, -54.8088, -6.99682, 0.44", "56.6569, -55.2024, -7.47685, 0.44", "57.0651, -55.5036, -7.7919, 0.44", "58.0187, -56.2884, -8.43322, 0.44", "58.784, -56.959, -8.86294, 0.44", "59.5651, -57.6829, -9.22828, 0.29", "60.531, -58.6354, -9.66016, 0.29", "61.1231, -59.2517, -9.9075, 0.29", "62.4184, -60.6199, -10.3879, 0.29", "63.161, -61.4071, -10.6403, 0.29", "63.7794, -62.0406, -10.8351, 0.22", "64.3482, -62.5913, -10.9918, 0.22", "64.9755, -63.1606, -11.168, 0.22", "66.017, -64.0491, -11.4644, 0.22", "66.8241, -64.6627, -11.7084, 0.22", "67.2426, -64.9481, -11.8315, 0.22", "67.5936, -65.1644, -11.9491, 0.22", "68.2722, -65.5394, -12.1909, 0.22", "68.5396, -65.6767, -12.2849, 0.07", "68.8601, -65.8512, -12.4117, 0.07", "69.3106, -66.1206, -12.6199, 0.07", "70.3037, -66.7597, -13.1168, 0.07", "70.6882, -67.028, -13.3249, 0.07", "72.3017, -68.2371, -14.3256, 0.07", "73.173, -68.9329, -14.9397, 0.07", "74.0793, -69.713, -15.6532, 0.07", "74.4558, -70.0697, -15.9871, 0.07", "75.023, -70.6982, -16.5782, 0.07", "75.5082, -71.352, -17.1936, 0.15", "75.8315, -71.9266, -17.7134, 0.15", "75.9681, -72.1969, -17.9281, 0.15", "76.0504, -72.3606, -18.0392, 0.15", "76.553, -73.2724, -18.6737, 0.15", "77.0767, -74.1073, -19.2897, 0.15", "77.463, -74.6394, -19.7036, 0.15", "77.7795, -74.9826, -20.0003, 0.15", "79.1319, -76.23, -21.2431, 0.07", "80.1514, -77.0174, -22.1607, 0.07", "80.642, -77.3222, -22.5953, 0.07", "81.1267, -77.5828, -23.0057, 0.07", "82.5866, -78.2852, -24.246, 0.07", "83.2682, -78.5786, -24.8061, 0.07", "83.7049, -78.7556, -25.1307, 0.07", "84.4979, -79.1203, -25.648, 0.07", "85.0797, -79.4286, -25.9925, 0.07", "85.8159, -79.8602, -26.372, 0.07", "86.4464, -80.2465, -26.6128, 0.07", "88.0712, -81.2427, -27.0363, 0.07", "89.3548, -82.0368, -27.2824, 0.07", "90.1664, -82.5471, -27.3864, 0.07", "91.6626, -83.5066, -27.4942, 0.07", "93.8129, -84.9139, -27.5172, 0.07", "95.1433, -85.7741, -27.4787, 0.07", "96.3689, -86.5236, -27.3974, 0.07", "97.5704, -87.192, -27.301, 0.07", "98.8283, -87.8165, -27.2184, 0.07", "99.9072, -88.2785, -27.1846, 0.07", "101.038, -88.6763, -27.2065, 0.07", "101.974, -88.9266, -27.2657, 0.07", "103.014, -89.0997, -27.3758, 0.07", "103.901, -89.1596, -27.5226, 0.07", "105.628, -89.1543, -27.8581, 0.07", "105.999, -89.1428, -27.9287, 0.07", "106.719, -89.1401, -28.0458, 0.07", "108.171, -89.1914, -28.2273, 0.07", "109.565, -89.2925, -28.2942, 0.07", "111.08, -89.3821, -28.2182, 0.07", "111.622, -89.4068, -28.1373, 0.07", "113.127, -89.5033, -27.803, 0.07", "114.343, -89.5935, -27.4503, 0.07", "116.112, -89.7133, -26.7939, 0.07", "117.648, -89.8024, -26.16, 0.07", "118.451, -89.8383, -25.809, 0.07", "119.146, -89.8455, -25.4961, 0.07", "120.651, -89.7719, -24.7767, 0.07", "122.179, -89.6592, -24.0405, 0.07", "122.909, -89.5989, -23.733, 0.07" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "52.337, -53.093, -3.74263, 2.5", "52.0993, -53.8434, -3.60606, 2.5", "51.3989, -56.2455, -3.12617, 0.52", "51.238, -57.0848, -2.90166, 0.52", "51.0543, -58.2973, -2.58028, 0.52", "50.9346, -59.2019, -2.29729, 0.52", "50.7679, -60.3611, -1.88377, 0.52", "50.6896, -60.9311, -1.65404, 0.52", "50.3576, -63.6983, -0.411113, 0.52", "50.2718, -65.0796, 0.298422, 0.37", "50.2315, -66.7699, 1.22454, 0.52", "50.2338, -68.1625, 1.99154, 0.52", "50.2437, -69.675, 2.86018, 0.52", "50.2331, -70.7536, 3.47592, 0.52", "50.1214, -74.4314, 5.58682, 0.37", "50.0888, -75.3593, 6.11651, 0.37", "50.0489, -76.2976, 6.60126, 0.07", "49.9992, -77.3497, 7.10818, 0.22", "49.786, -79.3302, 8.03443, 0.22", "49.5562, -80.5819, 8.60873, 0.07", "49.4287, -81.1448, 8.85404, 0.07", "49.1839, -82.353, 9.36252, 0.22", "49.0783, -82.9981, 9.62527, 0.22", "48.8667, -84.9305, 10.3856, 0.22", "48.7943, -86.705, 11.0945, 0.22", "48.7998, -89.0347, 11.9929, 0.44", "48.8211, -90.2235, 12.4587, 0.44", "48.8474, -91.0626, 12.7912, 0.44", "48.8768, -91.7535, 13.0532, 0.44", "48.9512, -92.5815, 13.3551, 0.44", "49.0176, -93.4161, 13.6595, 0.44", "49.0628, -94.245, 13.9914, 0.44", "49.1083, -95.1587, 14.3836, 0.44", "49.1659, -96.3292, 14.8969, 0.44", "49.3693, -100.305, 16.668, 0.37", "49.42, -101.042, 16.9971, 0.15", "49.5062, -101.863, 17.3578, 0.15", "49.6469, -102.762, 17.7432, 0.15", "49.7924, -103.368, 18.0087, 0.15", "49.8872, -103.679, 18.1453, 0.15", "50.3876, -105.092, 18.7751, 0.15", "50.6422, -105.787, 19.0826, 0.15", "51.2805, -107.383, 19.8372, 0.15", "52.1819, -109.436, 20.9299, 0.15", "52.7355, -110.677, 21.6096, 0.15", "53.1662, -111.609, 22.1375, 0.15", "53.5762, -112.447, 22.644, 0.15", "54.2912, -113.831, 23.5339, 0.15", "54.9074, -114.946, 24.3513, 0.15" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "153.37, -94.1745, 122.695, 0.29", "161.643, -93.4177, 127.58, 0.29", "170.294, -94.1867, 131.757, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "153.37, -94.1745, 122.695, 0.07", "155.543, -103.921, 123.685, 0.29", "156.352, -113.644, 126.026, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "3.03769, -38.9308, -15.5672, 0.66", "0.596382, -40.2403, -13.7441, 0.66", "0.426221, -40.3476, -13.6348, 0.66", "-0.468643, -41.0587, -13.0276, 0.37", "-1.39915, -42.0117, -12.3549, 0.37", "-2.30328, -43.1776, -11.6502, 0.37", "-2.82959, -44.0107, -11.2038, 0.37", "-3.30189, -45.0141, -10.8487, 0.37", "-3.63538, -46.3305, -10.4222, 0.37", "-3.74543, -47.6377, -10.0052, 0.59", "-3.69464, -48.6732, -9.66768, 0.59", "-3.55124, -49.6958, -9.3077, 0.59", "-3.36248, -50.718, -8.92431, 0.59", "-2.85556, -53.3115, -7.9172, 0.59", "-2.6726, -54.3998, -7.49659, 0.44", "-2.53508, -55.286, -7.14686, 0.44", "-2.40275, -56.198, -6.79002, 0.44", "-2.23363, -57.2028, -6.42049, 0.44", "-2.02995, -58.3515, -6.01421, 0.44", "-1.81906, -59.7078, -5.57102, 0.44", "-1.71245, -60.5298, -5.31194, 0.44", "-1.63003, -61.3234, -5.06658, 0.44", "-1.48201, -63.0149, -4.50759, 0.44", "-1.38318, -64.2266, -4.01695, 0.59", "-1.27708, -65.5339, -3.41058, 0.59", "-1.17502, -66.8552, -2.74983, 0.59", "-1.03282, -68.9523, -1.66483, 0.44", "-0.949693, -70.4735, -0.883924, 0.15", "-0.884073, -72.1426, -0.0640894, 0.15", "-0.823833, -72.9758, 0.299697, 0.37", "-0.736213, -73.8638, 0.636684, 0.37", "-0.637493, -74.8361, 0.935564, 0.37", "-0.492953, -76.3699, 1.26235, 0.37", "-0.347668, -78.074, 1.42483, 0.37", "-0.259145, -79.7258, 1.47234, 0.37", "-0.21953, -81.3704, 1.48321, 0.37", "-0.261039, -82.4068, 1.48054, 0.37", "-0.498343, -84.9423, 1.46058, 0.37", "-0.751963, -86.9083, 1.4308, 0.07", "-0.933973, -88.013, 1.40579, 0.07", "-1.1908, -89.278, 1.37815, 0.07", "-1.76971, -91.7963, 1.35453, 0.07", "-1.9396, -92.496, 1.35287, 0.22", "-2.12965, -93.1904, 1.35305, 0.22", "-2.39791, -94.1917, 1.33891, 0.22", "-2.56209, -94.9463, 1.2933, 0.22", "-2.80708, -96.4764, 1.14009, 0.22", "-2.99819, -98.9513, 0.898124, 0.22", "-3.03943, -99.8087, 0.832064, 0.22", "-3.0461, -100.829, 0.797544, 0.22", "-2.99676, -101.65, 0.823413, 0.22", "-2.87942, -102.569, 0.933544, 0.29", "-2.61817, -103.967, 1.26999, 0.29", "-2.45521, -104.744, 1.58581, 0.29", "-2.19906, -106.162, 2.35212, 0.29", "-2.09176, -107.074, 2.90874, 0.29", "-2.0131, -108.245, 3.6536, 0.29", "-1.98574, -109.107, 4.21286, 0.29", "-1.98398, -110.557, 5.10859, 0.29", "-2.04197, -112.403, 6.18497, 0.29", "-2.15863, -113.889, 6.98968, 0.15", "-2.22921, -114.544, 7.30287, 0.15", "-2.30015, -115.177, 7.56892, 0.15", "-2.48729, -116.872, 8.12028, 0.15", "-2.6805, -118.605, 8.58275, 0.15", "-2.80726, -119.819, 8.84108, 0.15", "-2.9435, -121.226, 9.12318, 0.15", "-3.05697, -122.352, 9.33399, 0.15", "-3.26861, -124.392, 9.67876, 0.15" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "3.03769, -38.9308, -15.5672, 0.52", "2.74508, -39.5632, -16.212, 0.52", "2.62161, -40.0199, -16.6505, 0.52", "2.43262, -41.0528, -17.6344, 0.74", "2.25682, -41.9502, -18.5172, 0.74", "2.12985, -42.4441, -19.0179, 0.74", "1.7559, -43.5372, -20.1621, 0.74", "1.49382, -44.2694, -20.8652, 0.74", "1.25842, -44.8127, -21.3551, 0.74", "0.911296, -45.3419, -21.8013, 0.74", "0.260178, -45.9678, -22.3331, 1.4", "-0.363682, -46.4211, -22.712, 1.4", "-1.12785, -46.875, -23.0456, 1.4", "-1.82264, -47.2642, -23.3005, 1.69", "-3.48204, -48.1674, -23.8437, 1.69", "-4.95767, -49.0199, -24.2901, 1.69", "-5.81717, -49.5538, -24.5385, 1.69", "-7.13706, -50.472, -24.946, 1.11", "-8.05195, -51.1932, -25.2663, 0.88", "-8.44041, -51.5738, -25.4213, 0.88", "-9.18216, -52.5623, -25.8194, 0.88", "-9.48445, -53.1287, -26.0756, 0.88", "-9.86025, -54.0006, -26.5232, 0.88", "-10.1536, -54.7513, -26.9537, 1.18", "-10.4741, -55.4792, -27.4075, 1.18", "-11.1623, -56.6654, -28.2837, 1.47", "-11.5481, -57.1402, -28.6902, 1.47", "-11.9307, -57.4891, -29.0432, 1.47", "-12.7119, -58.0203, -29.671, 1.18", "-13.4151, -58.4417, -30.2171, 1.18", "-14.2298, -58.9488, -30.8771, 1.18", "-14.8585, -59.3616, -31.4009, 0.74", "-15.653, -59.9381, -32.094, 0.74", "-16.0046, -60.2155, -32.4318, 0.74", "-17.216, -61.2046, -33.6682, 0.74", "-18.2088, -62.0628, -34.6861, 0.74", "-18.4146, -62.2533, -34.8932, 0.74", "-19.4021, -63.182, -35.8481, 0.74", "-20.3184, -64.0929, -36.6587, 0.74", "-21.2429, -65.0438, -37.4436, 0.74", "-21.9059, -65.6774, -37.9079, 0.74", "-22.4899, -66.2345, -38.2416, 0.15", "-22.9693, -66.7148, -38.5205, 0.15", "-23.5234, -67.3456, -38.8701, 0.15", "-23.9737, -67.9022, -39.144, 0.15", "-24.7593, -68.9147, -39.687, 0.15", "-25.3127, -69.5886, -40.1203, 0.15", "-26.5887, -71.0371, -41.1285, 0.52", "-27.4228, -71.9212, -41.7502, 0.52", "-27.8626, -72.3431, -42.0769, 0.52", "-28.5246, -72.9214, -42.5588, 0.52", "-29.3586, -73.5355, -43.1484, 0.52", "-30.4052, -74.1193, -43.812, 0.52", "-31.1135, -74.4033, -44.1863, 0.52", "-32.1709, -74.7137, -44.7169, 0.52", "-33.0754, -74.9446, -45.1707, 0.44", "-34.3433, -75.239, -45.7508, 0.44", "-35.5578, -75.527, -46.2797, 0.44", "-36.2326, -75.6934, -46.5583, 0.44", "-37.6592, -76.1372, -47.1123, 0.44", "-38.566, -76.4921, -47.4317, 0.44", "-39.9099, -77.1554, -47.8729, 0.29", "-40.8229, -77.7047, -48.1582, 0.29", "-41.7998, -78.357, -48.4466, 0.29", "-42.968, -79.208, -48.773, 0.29", "-43.698, -79.7669, -48.9618, 0.29", "-44.6, -80.4917, -49.2044, 0.29", "-45.3621, -81.1057, -49.4145, 0.29", "-45.8029, -81.4568, -49.5263, 0.29", "-46.4644, -81.9728, -49.6993, 0.29", "-47.4406, -82.7084, -50.0059, 0.29", "-48.0509, -83.1676, -50.2287, 0.29", "-49.2623, -84.1016, -50.7245, 0.29", "-50.3614, -84.9896, -51.1992, 0.29", "-51.3288, -85.8562, -51.6215, 0.29", "-52.434, -86.9125, -52.1048, 0.07", "-52.8256, -87.321, -52.3127, 0.07", "-53.2312, -87.772, -52.5544, 0.07", "-53.5726, -88.1977, -52.7777, 0.07", "-54.8284, -89.8399, -53.5674, 0.07", "-55.7648, -91.124, -54.0726, 0.22", "-56.7957, -92.5719, -54.5473, 0.22", "-57.2557, -93.2514, -54.8018, 0.22", "-57.7953, -94.0917, -55.1827, 0.22", "-58.1669, -94.7345, -55.5104, 0.22", "-58.4993, -95.4108, -55.9014, 0.22", "-58.7641, -96.0249, -56.2683, 0.22", "-59.4601, -97.6154, -57.1791, 0.22", "-59.8527, -98.4471, -57.7539, 0.22", "-60.012, -98.7461, -57.9904, 0.22", "-60.2948, -99.2209, -58.386, 0.22", "-60.6958, -99.7941, -58.8632, 0.22", "-61.1707, -100.376, -59.3273, 0.22", "-61.8456, -101.12, -59.8485, 0.22", "-62.1977, -101.507, -60.0883, 0.22", "-62.7352, -102.115, -60.4414, 0.22", "-63.5466, -103.097, -60.9592, 0.22", "-63.9949, -103.65, -61.2225, 0.22", "-64.4043, -104.158, -61.4564, 0.22", "-65.2505, -105.196, -61.8943, 0.22", "-65.9619, -105.967, -62.2308, 0.22", "-66.6119, -106.586, -62.4958, 0.22", "-67.5145, -107.365, -62.8347, 0.22", "-68.2366, -107.921, -63.0827, 0.22", "-68.7713, -108.295, -63.2636, 0.22", "-71.5933, -110.126, -64.2425, 0.22", "-72.4879, -110.695, -64.5399, 0.22", "-73.9519, -111.618, -65.034, 0.22", "-75.3745, -112.558, -65.5434, 0.22", "-76.4863, -113.318, -65.9458, 0.22", "-77.4293, -114.007, -66.3166, 0.22", "-78.5125, -114.875, -66.8208, 0.22", "-79.2336, -115.501, -67.2181, 0.22", "-80.2271, -116.411, -67.803, 0.22", "-80.6228, -116.787, -68.0441, 0.22", "-81.4398, -117.572, -68.5537, 0.22", "-82.3195, -118.365, -69.1227, 0.22", "-82.9563, -118.889, -69.5646, 0.22", "-84.1589, -119.763, -70.3317, 0.22", "-84.8854, -120.24, -70.8045, 0.22", "-85.8171, -120.809, -71.3732, 0.22", "-87.1394, -121.605, -72.1276, 0.22", "-88.3321, -122.353, -72.8213, 0.22", "-89.5563, -123.18, -73.545, 0.07", "-90.5461, -123.912, -74.1366, 0.07", "-91.4984, -124.684, -74.6817, 0.07", "-92.2773, -125.375, -75.0736, 0.07", "-93.1796, -126.341, -75.4849, 0.07", "-94.0481, -127.4, -75.8218, 0.07", "-94.6027, -128.134, -76.0245, 0.07", "-95.2567, -129.052, -76.2229, 0.07", "-95.7518, -129.785, -76.3748, 0.07", "-96.5471, -130.933, -76.5538, 0.07", "-97.3764, -132.145, -76.7416, 0.07", "-97.9488, -132.969, -76.9488, 0.07", "-98.521, -133.786, -77.1957, 0.07", "-99.2816, -134.864, -77.5464, 0.07", "-100.379, -136.44, -78.0738, 0.07", "-101.461, -138.027, -78.6155, 0.07", "-102.528, -139.605, -79.1894, 0.07", "-103.14, -140.509, -79.5327, 0.07", "-103.605, -141.187, -79.792, 0.07", "-104.45, -142.537, -80.2964, 0.07", "-104.719, -142.988, -80.4521, 0.07", "-105.351, -144.021, -80.7873, 0.07", "-105.815, -144.747, -81.0151, 0.07", "-106.529, -145.838, -81.3931, 0.07", "-107.881, -147.842, -82.1485, 0.07", "-108.588, -148.833, -82.559, 0.07", "-109.853, -150.595, -83.2927, 0.15", "-110.862, -152.023, -83.856, 0.15" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "21.1673, -37.3484, -5.49369, 0.52", "23.1213, -37.5342, -3.49368, 0.52", "25.8883, -37.6426, -0.44691, 1.25", "28.0308, -37.655, 1.9696, 1.33", "29.1897, -37.6366, 3.29047, 1.11", "30.2932, -37.5994, 4.52383, 1.11", "31.6906, -37.5561, 6.03245, 1.11", "32.4986, -37.4388, 6.94345, 1.11", "33.019, -37.3607, 7.48429, 1.11", "33.3572, -37.4091, 7.79842, 1.11", "34.1822, -37.8067, 8.30564, 0.81", "34.9395, -38.4016, 8.58733, 0.81", "35.5275, -38.93, 8.70404, 0.96", "36.8714, -40.1389, 8.88612, 0.96", "37.5484, -40.7051, 8.96442, 0.96", "38.4775, -41.3374, 9.13902, 0.81", "38.7943, -41.4659, 9.23626, 0.81", "39.5478, -41.6081, 9.55374, 0.81", "40.9023, -41.7404, 10.2717, 0.81", "41.459, -41.7654, 10.6026, 0.81", "42.9643, -41.8007, 11.5761, 0.81", "44.718, -41.8304, 12.8027, 0.81", "46.7324, -41.8975, 14.2283, 0.96", "48.5043, -42.0162, 15.4821, 0.96", "50.0643, -42.1545, 16.6143, 1.11", "50.8622, -42.2228, 17.2025, 1.11", "51.2792, -42.2442, 17.5176, 1.11", "52.1086, -42.2462, 18.2222, 0.37", "52.742, -42.1714, 18.8548, 0.37", "53.1048, -42.0645, 19.2981, 0.37", "53.3948, -41.9034, 19.7975, 0.37", "53.6925, -41.7026, 20.3772, 0.52", "53.9795, -41.5118, 20.9036, 0.52", "54.6047, -41.2462, 21.8053, 0.52", "54.8356, -41.2147, 22.0427, 0.52", "55.3929, -41.289, 22.4251, 0.52", "55.9319, -41.5927, 22.6624, 0.52", "56.7436, -42.3516, 22.8966, 0.52", "57.9521, -43.7381, 23.2055, 0.52", "58.6488, -44.6179, 23.3886, 1.11", "59.0046, -45.1182, 23.5358, 1.11", "60.1159, -47.004, 24.5073, 1.11", "60.5096, -47.8645, 25.2104, 0.66", "60.6814, -48.392, 25.811, 0.66", "60.8274, -49.0693, 26.7937, 0.66", "60.9979, -50.0598, 28.4538, 0.81", "61.2326, -51.5408, 31.188, 1.11", "61.3554, -52.3366, 32.8049, 1.11", "61.4277, -52.84, 33.7695, 1.11", "61.5058, -53.2002, 34.3562, 1.11", "61.6565, -53.6807, 35.0014, 1.11", "62.0454, -54.1655, 35.5099, 1.11", "62.714, -54.5349, 35.8843, 0.66", "63.6744, -54.7615, 36.3006, 0.37", "65.0473, -54.8599, 36.8436, 0.37", "65.4174, -54.8558, 36.9726, 0.37", "67.7805, -54.7624, 37.7369, 0.74", "69.0099, -54.7316, 38.1549, 0.37", "70.3763, -54.7209, 38.6428, 0.37", "71.947, -54.7038, 39.2346, 0.37", "73.639, -54.7328, 39.866, 0.44", "74.5568, -54.8319, 40.1864, 0.44", "76.3014, -55.2137, 40.7425, 0.44", "77.4027, -55.4776, 41.0276, 0.44", "78.8456, -55.8174, 41.357, 0.44", "79.7933, -56.0109, 41.584, 0.22", "81.3011, -56.2776, 41.9518, 0.22", "82.0452, -56.3753, 42.1057, 0.22", "83.8709, -56.562, 42.3432, 0.07", "85.3787, -56.7481, 42.4911, 0.07", "88.1204, -57.1762, 42.7124, 0.07", "95.8448, -59.4538, 50.0361, 0.07", "102.943, -62.9793, 57.4974, 0.07", "110.758, -67.4969, 63.5812, 0.07", "119.692, -70.984, 68.7295, 0.07", "127.796, -76.092, 73.8996, 0.07", "137.25, -79.376, 78.1798, 0.07", "147.03, -80.8968, 82.7117, 0.07" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "21.1673, -37.3484, -5.49369, 1.4", "20.713, -39.9159, -6.32869, 1.4", "20.4027, -41.6366, -6.83274, 1.25", "19.9096, -43.905, -7.4678, 0.88", "19.6039, -45.1128, -7.78097, 0.88", "19.0633, -46.8823, -8.21655, 1.18", "18.5532, -48.365, -8.57018, 1.69", "17.9963, -49.8164, -8.87658, 2.14", "17.4923, -50.9309, -9.08097, 2.14", "16.2136, -53.3597, -9.54377, 2.43", "14.9099, -55.5464, -9.97539, 2.06", "14.1677, -56.6564, -10.1997, 2.06", "12.8209, -58.567, -10.5674, 2.28", "11.6133, -60.2361, -10.8691, 2.28", "10.7003, -61.5505, -11.0804, 2.28", "9.7924, -62.8656, -11.2622, 1.69", "8.70833, -64.5497, -11.4516, 1.55", "7.92898, -65.8358, -11.5714, 1.55", "6.96891, -67.5068, -11.697, 1.33", "6.08472, -69.1744, -11.7448, 1.33", "5.54243, -70.2468, -11.7456, 0.44", "5.25557, -70.8553, -11.7327, 0.44", "4.83403, -71.8073, -11.6824, 0.44", "4.10265, -73.6299, -11.5207, 0.44", "3.14231, -76.4582, -11.1593, 0.44", "2.9044, -77.2021, -11.0515, 0.44", "2.50376, -78.4626, -10.8622, 0.37", "2.16471, -79.4137, -10.7296, 0.37", "1.51633, -81.1671, -10.5477, 0.37", "0.9313, -82.6023, -10.4857, 0.37", "0.1453, -84.2561, -10.5414, 0.37", "-0.454602, -85.4542, -10.6218, 0.37", "-1.45631, -87.3948, -10.8021, 0.37", "-2.84069, -89.9259, -11.0816, 0.37", "-4.1373, -92.0944, -11.3315, 0.37", "-5.39784, -94.2229, -11.5119, 0.44", "-6.27601, -95.892, -11.6009, 0.44", "-6.88492, -97.23, -11.6269, 0.44", "-7.20201, -98.0416, -11.6007, 0.44", "-7.85368, -99.9398, -11.4473, 0.44", "-8.68316, -102.686, -11.1284, 0.44", "-9.63365, -105.932, -10.663, 0.44", "-10.089, -107.422, -10.4423, 0.44", "-10.7241, -109.392, -10.1697, 0.37", "-11.1082, -110.564, -10.0241, 0.37", "-11.6318, -112.108, -9.84725, 0.37", "-12.3497, -113.977, -9.63953, 0.66", "-12.8526, -115.049, -9.5131, 0.66", "-13.6096, -116.379, -9.38957, 1.11", "-13.9545, -116.89, -9.35996, 0.52", "-14.3114, -117.389, -9.34101, 0.52", "-15.2234, -118.804, -9.36625, 0.52", "-15.5716, -119.399, -9.39575, 0.52", "-15.8668, -119.924, -9.42582, 0.52", "-16.8988, -121.834, -9.55385, 0.59", "-17.6044, -123.199, -9.66246, 0.59", "-19.42, -126.815, -10.001, 0.59", "-21.5207, -131.102, -10.4793, 0.37", "-21.976, -132.074, -10.5915, 0.37", "-22.5852, -133.366, -10.7449, 0.37", "-23.4839, -135.212, -10.964, 0.37", "-24.3751, -136.883, -11.1507, 0.37", "-25.1776, -138.28, -11.2908, 0.37", "-25.6079, -139.002, -11.3598, 0.37", "-26.3858, -140.239, -11.4648, 0.37", "-27.5189, -141.879, -11.5809, 0.37", "-28.553, -143.234, -11.6585, 0.37", "-30.0111, -145.093, -11.746, 0.37", "-30.7495, -146.103, -11.8147, 0.37", "-31.0321, -146.539, -11.8581, 0.37", "-31.3447, -147.129, -11.9346, 0.37", "-31.8799, -148.271, -12.1064, 0.37", "-32.412, -149.577, -12.3174, 0.37", "-33.411, -152.319, -12.7813, 0.37", "-33.9505, -153.996, -13.0653, 0.37", "-34.9954, -157.441, -13.5485, 0.37", "-35.5836, -159.508, -13.796, 0.37", "-36.0564, -161.266, -13.9592, 0.37", "-36.8952, -164.479, -14.2138, 0.07", "-37.3015, -166.061, -14.3013, 0.07", "-38.0585, -168.953, -14.4123, 0.07", "-38.2917, -169.784, -14.4194, 0.07", "-38.6283, -170.942, -14.3833, 0.07", "-42.0222, -182.093, -13.316, 0.07", "-44.3958, -193.513, -12.3321, 0.07" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "38.8656, -147.255, -8.49078, 0.22", "40.222, -158.608, -11.3048, 0.22", "41.8385, -169.493, -15.4921, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "38.8656, -147.255, -8.49078, 0.07", "42.7674, -154.732, -9.58519, 0.22", "45.027, -162.854, -10.7088, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-17.9173, -5.38051, 19.2628, 0.29", "-19.2737, -6.32149, 19.7004, 0.29", "-19.8773, -6.56053, 20.0203, 0.66", "-20.4469, -6.74312, 20.3449, 0.66", "-21.3594, -6.97148, 20.8676, 0.66", "-21.8088, -7.04516, 21.1341, 0.66", "-23.1594, -7.12371, 22.0165, 0.66", "-23.795, -7.14043, 22.498, 0.44", "-24.0654, -7.1239, 22.7508, 0.44", "-24.2972, -7.0417, 23.069, 0.44", "-24.4872, -6.80219, 23.5334, 0.44", "-24.674, -6.42738, 24.1457, 0.44", "-24.8544, -5.79106, 25.0996, 0.52", "-24.9255, -5.32196, 25.7552, 0.52", "-24.9532, -4.86389, 26.3624, 0.52", "-24.9767, -3.22761, 28.4449, 0.66", "-24.9906, -2.58134, 29.2655, 0.66", "-25.0383, -2.06793, 29.9033, 0.66", "-25.1103, -1.41117, 30.6712, 0.66", "-25.1588, -0.89855, 31.2511, 0.52", "-25.1703, -0.549109, 31.6252, 0.29", "-24.9675, 0.22484, 32.2298, 0.29", "-24.8497, 1.11477, 32.9361, 0.29", "-27.7852, 6.37973, 39.9923, 0.29", "-31.283, 11.1967, 47.1119, 0.29", "-34.7005, 15.2048, 54.7528, 0.29", "-37.5553, 20.8948, 61.5056, 0.29", "-39.4895, 25.9764, 69.0265, 0.29", "-40.7611, 31.0131, 76.7168, 0.29", "-43.4209, 35.9771, 84.0933, 0.29", "-48.4014, 40.9658, 90.1293, 0.29", "-52.3499, 46.1281, 96.7541, 0.29", "-57.2567, 50.9106, 103.013, 0.29", "-61.5975, 57.432, 107.989, 0.29", "-64.5891, 63.4721, 114.368, 0.29", "-67.4875, 68.2739, 121.762, 0.29" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-17.9173, -5.38051, 19.2628, 1.11", "-20.1236, -7.34471, 17.57, 1.11", "-21.8597, -8.53914, 16.5193, 1.11", "-23.0382, -9.19313, 15.9578, 1.25", "-25.4874, -10.3362, 15.0368, 1.25", "-27.3987, -11.0737, 14.5224, 1.25", "-29.4184, -11.7763, 14.1665, 1.11", "-31.5344, -12.2811, 14.0609, 0.88", "-32.9707, -12.4973, 14.1336, 0.88", "-34.0683, -12.5653, 14.2726, 0.88", "-36.0232, -12.4979, 14.7883, 0.88", "-37.6196, -12.4001, 15.4157, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "25.992, 29.5961, 17.8144, 1.55", "26.3772, 33.088, 17.3612, 1.55", "26.5076, 34.4859, 17.1366, 1.55", "26.7673, 37.6955, 16.5844, 1.77", "26.9017, 39.4605, 16.2852, 1.77", "27.0683, 41.9733, 15.8683, 2.06", "27.1473, 43.5004, 15.6329, 2.06", "27.2068, 45.4606, 15.3091, 1.55", "27.2443, 47.5544, 14.9423, 1.55", "27.2704, 49.3521, 14.5898, 1.84", "27.312, 50.3577, 14.3499, 1.84", "27.4668, 53.4683, 13.6203, 1.92", "27.6082, 55.9153, 13.0777, 1.92", "27.6872, 57.1647, 12.8358, 1.92", "27.825, 59.0081, 12.5472, 1.92", "28.0609, 61.4901, 12.3176, 1.4", "28.2644, 63.1297, 12.3085, 1.4", "28.4903, 64.7243, 12.4856, 1.55", "28.7104, 66.5089, 12.9042, 1.55", "28.7949, 67.5892, 13.2347, 1.55", "28.8419, 69.0357, 13.706, 1.25", "28.8227, 70.5036, 14.1089, 0.59", "28.7953, 71.4264, 14.1796, 0.88", "28.7519, 72.463, 14.0836, 1.25", "28.6515, 74.0847, 13.715, 1.25", "28.4181, 76.5769, 12.9444, 1.62", "28.0955, 79.4346, 11.8886, 1.62", "27.7172, 82.6713, 10.5879, 1.18", "27.4969, 84.5184, 9.81212, 1.18", "27.3604, 85.8404, 9.23866, 0.74", "27.2433, 87.3419, 8.58782, 1.03", "27.2111, 88.2592, 8.2294, 1.84", "27.2523, 89.5045, 7.91066, 2.21", "27.344, 90.7546, 7.80848, 2.21", "27.4318, 91.951, 7.78852, 2.21", "27.5127, 93.3425, 7.79595, 2.21", "27.5882, 95.6551, 7.77455, 2.21", "27.5948, 98.2367, 7.71185, 1.99", "27.5121, 100.986, 7.57453, 1.11", "27.3518, 103.424, 7.36388, 1.33", "27.1833, 104.812, 7.19761, 1.33", "26.8967, 106.601, 6.92082, 1.33", "26.7738, 107.269, 6.78809, 1.33", "26.6322, 108.247, 6.54053, 0.96", "26.6465, 109.39, 6.19861, 0.74", "26.8055, 110.052, 6.00547, 0.59", "27.1001, 110.941, 5.7906, 0.66", "27.492, 112.314, 5.513, 0.66", "27.6248, 113.339, 5.30321, 0.66", "27.6119, 114.625, 5.06259, 0.66", "27.4096, 116.258, 4.71467, 0.96", "27.1867, 117.419, 4.45353, 0.96", "26.7608, 119.218, 4.0527, 1.25", "26.221, 121.374, 3.61114, 1.25", "25.7604, 123.229, 3.2783, 1.4", "25.4298, 124.742, 3.04944, 1.4", "24.9955, 126.955, 2.76617, 1.18", "24.776, 128.227, 2.62788, 1.18", "24.4139, 130.766, 2.41527, 1.55", "24.1209, 133.579, 2.23331, 1.55", "23.9649, 135.697, 2.11945, 0.81", "23.8791, 137.482, 2.03456, 0.66", "23.8678, 138.035, 1.99833, 0.66", "23.9015, 138.88, 1.92434, 0.66", "23.9913, 139.856, 1.7696, 0.66", "24.0475, 140.395, 1.65908, 0.66", "24.119, 141.413, 1.42325, 0.66", "24.1825, 143.402, 0.931244, 0.66", "24.0923, 148.344, -0.389997, 0.81", "23.9645, 150.37, -0.964159, 1.03", "23.7873, 152.17, -1.49658, 1.18", "23.6384, 153.522, -1.9095, 1.18", "23.4868, 154.816, -2.2987, 1.18", "23.3514, 155.849, -2.62447, 1.03", "23.2581, 156.529, -2.83113, 1.03", "23.2849, 158.09, -3.11802, 0.96", "23.4084, 158.801, -3.24964, 0.59", "23.6607, 159.69, -3.43971, 0.59", "23.8742, 160.322, -3.59465, 0.59", "24.0777, 160.867, -3.75498, 0.59", "25.0207, 163.329, -4.58773, 0.59", "25.4008, 164.425, -5.03893, 0.66", "25.7168, 165.561, -5.56773, 0.81", "25.919, 166.577, -6.08632, 0.81", "26.0184, 167.341, -6.48562, 0.81", "26.0446, 167.924, -6.76572, 0.81", "26.0713, 169.413, -7.32449, 0.81", "26.096, 170.14, -7.52464, 0.81", "26.1216, 171.239, -7.82663, 0.66", "26.1277, 172.193, -8.08692, 0.44", "26.1046, 174.024, -8.56713, 0.44", "26.1174, 177.163, -9.31332, 0.52", "26.1478, 177.909, -9.46676, 0.52", "26.2595, 179.699, -9.80719, 0.52", "26.3136, 180.554, -9.95595, 0.59", "26.2993, 181.5, -10.09, 0.59", "26.1408, 183.088, -10.2543, 0.59", "26.0669, 183.56, -10.2792, 0.59", "25.9099, 184.841, -10.3055, 0.59", "25.8574, 185.87, -10.3117, 0.59", "25.9098, 188.443, -10.4957, 0.59", "26.0403, 190.338, -10.7501, 0.37", "26.1717, 191.678, -11.0078, 0.37", "26.3008, 192.733, -11.2514, 0.37", "26.6019, 194.702, -11.7697, 0.37", "26.9713, 196.694, -12.3271, 0.37", "27.2328, 197.92, -12.6725, 0.37", "27.3688, 198.659, -12.9007, 0.37", "27.4458, 199.34, -13.1249, 0.37", "27.4691, 199.936, -13.3149, 0.37", "27.4492, 200.793, -13.5595, 0.37", "27.374, 202.637, -14.0031, 0.37", "27.3192, 205.281, -14.6189, 0.52", "27.3196, 206.896, -14.9897, 0.52", "27.3274, 207.779, -15.1873, 0.52", "27.3374, 208.614, -15.373, 0.52", "27.308, 210.325, -15.7091, 0.44", "27.2678, 211.167, -15.8229, 0.44", "27.2292, 211.85, -15.8434, 0.44", "27.1865, 213.177, -15.8324, 0.44", "27.1741, 214.661, -15.8853, 0.44", "27.1417, 216.66, -16.0361, 0.44", "27.1153, 217.752, -16.1925, 0.44", "27.0782, 219.341, -16.4883, 0.44", "27.0662, 221.352, -16.9185, 0.44", "27.1165, 224.035, -17.5769, 0.44", "27.2583, 227.33, -18.4628, 0.44", "27.4836, 229.968, -19.2568, 0.44", "27.6789, 231.653, -19.8027, 0.44", "27.8567, 232.851, -20.2081, 0.44", "28.1601, 234.508, -20.7539, 0.44", "28.3304, 235.321, -20.9971, 0.44", "28.6788, 236.8, -21.4291, 0.44", "28.9151, 237.801, -21.5832, 0.44", "29.1164, 238.764, -21.6406, 0.44", "29.3013, 239.871, -21.6335, 0.44", "29.4531, 241.133, -21.6383, 0.44", "29.7169, 243.873, -21.6917, 0.44", "29.9982, 247.115, -21.7256, 0.59", "30.1461, 248.59, -21.7358, 0.59", "30.541, 251.875, -21.7665, 0.59", "31.0804, 255.906, -21.8055, 0.44", "31.3188, 257.659, -21.8328, 0.37", "31.4183, 258.659, -21.8819, 0.37", "31.486, 260.04, -22.0651, 0.29", "31.5098, 260.708, -22.1668, 0.29", "31.5304, 261.33, -22.2726, 0.29", "31.5525, 262.231, -22.4261, 0.29", "31.5167, 264.199, -22.8235, 0.29", "31.3899, 266.828, -23.4909, 0.52", "31.3437, 267.716, -23.7419, 0.52", "31.3125, 268.922, -24.0835, 0.52", "31.3023, 270.143, -24.4427, 0.52", "31.2933, 271.552, -24.8864, 0.52", "31.2947, 273.165, -25.4257, 0.44", "31.2542, 273.944, -25.6686, 0.37", "31.11, 275.912, -26.3158, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "25.992, 29.5961, 17.8144, 1.55", "27.8496, 30.5939, 19.9113, 1.55", "28.5599, 30.9755, 20.7132, 1.55", "28.8759, 31.1452, 21.0699, 1.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "146.516, 128.166, 80.7217, 0.29", "157.44, 137.023, 85.9193, 0.29", "169.857, 144.308, 90.1067, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "146.516, 128.166, 80.7217, 0.07", "156.041, 135.734, 85.7546, 0.29", "164.505, 143.845, 91.7459, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-25.4683, 156.111, -18.9443, 0.22", "-26.6814, 156.34, -17.5611, 0.22", "-27.6164, 156.54, -16.5695, 0.22", "-28.508, 156.746, -15.6578, 0.22", "-29.2735, 156.923, -14.8751, 0.22", "-30.3383, 157.169, -13.7865, 0.22", "-32.0082, 157.554, -12.0791, 0.07", "-33.6038, 157.976, -10.5899, 0.07", "-34.295, 158.16, -9.96222, 0.07" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-25.4683, 156.111, -18.9443, 0.07", "-25.8022, 157.22, -18.8887, 0.07", "-26.0874, 158.095, -18.8377, 0.07", "-27.0786, 161.119, -18.8148, 0.07", "-27.7904, 163.293, -18.8565, 0.07", "-28.2124, 164.643, -18.9058, 0.07", "-28.9431, 167.211, -19.0801, 0.07", "-29.2664, 168.5, -19.2245, 0.07", "-29.6492, 170.437, -19.5206, 0.07", "-29.845, 171.747, -19.7852, 0.07", "-29.9976, 173.182, -20.1407, 0.07", "-30.0693, 174.778, -20.6099, 0.07", "-29.9724, 176.263, -21.1398, 0.07", "-29.7809, 177.604, -21.6307, 0.07" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.26861, -124.392, 9.67876, 0.07", "-3.59561, -126.001, 9.53169, 0.07", "-3.78254, -127.444, 9.42889, 0.07", "-3.97296, -128.915, 9.32417, 0.07", "-4.23837, -130.966, 9.17821, 0.07", "-4.53581, -133.263, 9.01464, 0.07", "-4.79147, -135.238, 8.87404, 0.07", "-4.91377, -136.854, 8.76066, 0.07" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-3.26861, -124.392, 9.67876, 0.07", "-1.55725, -125.717, 9.27203, 0.07", "-0.418462, -126.599, 9.00137, 0.07", "-0.0228751, -126.905, 8.90735, 0.07", "1.01446, -127.708, 8.66081, 0.07" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-110.862, -152.023, -83.856, 0.15", "-111.45, -153.016, -83.8394, 0.15", "-112.011, -153.986, -83.8769, 0.15", "-112.678, -155.139, -83.9483, 0.15", "-113.623, -156.804, -84.1362, 0.15", "-114.137, -157.664, -84.2874, 0.15", "-114.958, -158.989, -84.5579, 0.15", "-115.436, -159.724, -84.7263, 0.15", "-115.645, -160.029, -84.7987, 0.15", "-117.715, -162.915, -85.4794, 0.15", "-118.847, -164.438, -85.8024, 0.15", "-119.412, -165.183, -85.9332, 0.15", "-120.739, -166.932, -86.2373, 0.15", "-121.169, -167.513, -86.3373, 0.15", "-121.834, -168.45, -86.5028, 0.07", "-122.563, -169.531, -86.7029, 0.07", "-123.14, -170.494, -86.9235, 0.07", "-123.924, -171.925, -87.4076, 0.07", "-124.252, -172.594, -87.7067, 0.07", "-124.692, -173.568, -88.1739, 0.07", "-124.969, -174.218, -88.5226, 0.07", "-125.356, -175.071, -89.0592, 0.22", "-125.608, -175.588, -89.4076, 0.22", "-126.104, -176.539, -90.0227, 0.22", "-126.375, -177.057, -90.3736, 0.22", "-126.755, -177.85, -90.9033, 0.22", "-127.119, -178.576, -91.4234, 0.22", "-127.359, -179.065, -91.7878, 0.22", "-127.551, -179.465, -92.1006, 0.22", "-127.818, -180.063, -92.6049, 0.22", "-128.077, -180.703, -93.1369, 0.22", "-128.561, -182.095, -94.1669, 0.22", "-128.727, -182.654, -94.5423, 0.22", "-128.838, -183.04, -94.81, 0.22", "-128.918, -183.337, -95.0218, 0.22", "-129.001, -183.656, -95.2892, 0.22", "-129.139, -184.248, -95.8146, 0.22", "-129.228, -184.767, -96.2375, 0.22", "-129.294, -185.252, -96.6144, 0.22", "-129.343, -185.626, -96.9153, 0.22", "-129.572, -187.22, -98.2288, 0.07", "-129.693, -188.027, -98.9133, 0.07", "-129.801, -188.871, -99.5996, 0.07", "-129.91, -189.846, -100.385, 0.07", "-130.064, -191.417, -101.609, 0.07", "-130.17, -192.475, -102.398, 0.07", "-130.249, -193.244, -102.913, 0.07", "-130.371, -194.156, -103.56, 0.07" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-110.862, -152.023, -83.856, 0.15", "-112.159, -151.914, -84.7483, 0.15", "-113.442, -151.777, -85.5539, 0.15", "-114.361, -151.652, -86.0533, 0.15", "-115.206, -151.516, -86.472, 0.07", "-116.045, -151.368, -86.8858, 0.07", "-116.525, -151.279, -87.1266, 0.07", "-117.165, -151.14, -87.4233, 0.07", "-118.365, -150.895, -87.9275, 0.07", "-118.952, -150.798, -88.1869, 0.15", "-119.675, -150.699, -88.5114, 0.15", "-120.53, -150.631, -88.9861, 0.15", "-120.905, -150.63, -89.2285, 0.15", "-121.337, -150.68, -89.5514, 0.15", "-121.857, -150.843, -89.9691, 0.15", "-122.055, -150.92, -90.1301, 0.15", "-123.149, -151.422, -91.0009, 0.15", "-123.569, -151.644, -91.3459, 0.15", "-124.169, -151.96, -91.8597, 0.15", "-124.906, -152.426, -92.5559, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "147.03, -80.8968, 82.7117, 0.22", "153.907, -83.2521, 87.4866, 0.22", "160.276, -85.2869, 93.0497, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "147.03, -80.8968, 82.7117, 0.07", "155.411, -83.5108, 88.1617, 0.22", "164.035, -84.313, 93.7961, 0.22", "172.324, -83.9522, 99.9563, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-44.3958, -193.513, -12.3321, 0.22", "-48.2548, -202.641, -13.2316, 0.22", "-52.0245, -211.416, -16.0253, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-44.3958, -193.513, -12.3321, 0.07", "-48.4006, -202.918, -12.3516, 0.22", "-52.7514, -212.144, -11.7011, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-67.4875, 68.2739, 121.762, 0.29", "-69.993, 72.0774, 127.285, 0.29", "-73.62, 76.5457, 131.542, 0.29", "-77.4952, 81.1434, 135.427, 0.29", "-81.2309, 86.1253, 138.959, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-67.4875, 68.2739, 121.762, 0.07", "-70.8439, 73.3917, 129.378, 0.29", "-73.394, 77.8037, 137.715, 0.29", "-76.6894, 83.5072, 144.932, 0.29", "-79.7812, 91.245, 150.035, 0.29", "-84.7761, 98.2679, 154.639, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-37.6196, -12.4001, 15.4157, 0.74", "-39.9338, -13.5146, 15.5631, 0.74", "-42.0477, -14.5327, 15.6977, 0.74", "-43.6822, -15.3199, 15.8018, 0.74", "-46.1953, -16.5301, 15.9619, 0.74", "-48.7576, -17.7641, 16.1251, 0.74", "-50.5495, -18.627, 16.2392, 0.88" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-37.6196, -12.4001, 15.4157, 0.81", "-36.3401, -14.4465, 16.4896, 0.81", "-35.2563, -16.2303, 17.3425, 0.59", "-34.5438, -17.4759, 17.9497, 0.59", "-33.5177, -19.4465, 18.9609, 0.44", "-32.8648, -20.8259, 19.7116, 0.44", "-32.2752, -22.2791, 20.5167, 0.44", "-31.8827, -23.6665, 21.277, 0.44", "-31.7374, -24.6786, 21.8092, 0.44", "-31.6944, -25.8095, 22.4298, 0.44", "-31.7222, -26.7259, 22.942, 0.44", "-31.7807, -28.5273, 23.9321, 0.44", "-31.8141, -30.2076, 24.82, 0.44", "-31.7528, -31.625, 25.5308, 0.44", "-31.5182, -33.1518, 26.2257, 0.44", "-31.2106, -34.3954, 26.7642, 0.59", "-30.8111, -35.561, 27.2884, 0.59", "-30.3172, -36.6882, 27.8341, 0.59", "-29.4759, -38.3901, 28.6876, 0.59", "-28.1594, -41.0178, 30.0515, 0.29", "-27.5978, -42.2613, 30.7264, 0.29", "-27.1487, -43.4367, 31.4073, 0.29", "-26.8148, -44.4891, 32.2123, 0.44", "-26.6319, -45.2252, 32.8331, 0.44", "-26.5366, -45.794, 33.3623, 0.44", "-26.4177, -46.8085, 34.3867, 0.44", "-26.2824, -48.0955, 35.6525, 0.44", "-25.9123, -51.4538, 38.8126, 0.15", "-25.6358, -52.921, 40.1929, 0.07", "-25.4083, -53.6737, 40.8848, 0.07", "-25.0867, -54.3974, 41.5156, 0.22", "-24.4375, -55.4995, 42.4201, 0.22", "-24.2447, -55.7906, 42.6229, 0.22", "-23.6156, -56.7312, 43.1579, 0.22", "-23.2354, -57.4491, 43.6639, 0.22", "-23.0962, -58.0536, 44.0725, 0.22", "-23.1781, -59.3569, 44.9544, 0.22", "-23.6204, -60.669, 45.8505, 0.22", "-23.9942, -61.227, 46.2101, 0.22", "-25.1933, -62.3222, 46.882, 0.22", "-26.5928, -63.1503, 47.3684, 0.22", "-27.4391, -63.4198, 47.5084, 0.22", "-28.1508, -63.4929, 47.5124, 0.22", "-30.1323, -63.2654, 47.2957, 0.22", "-31.2258, -62.8818, 47.0496, 0.22", "-32.1526, -62.1619, 46.6892, 0.22", "-33.0816, -61.0864, 46.197, 0.22", "-30.7155, -70.9416, 52.6985, 0.22", "-29.5127, -81.2546, 58.7967, 0.22", "-29.5548, -91.5999, 64.9583, 0.22", "-29.0317, -100.713, 72.8117, 0.22", "-28.1065, -110.549, 79.6958, 0.22", "-26.5483, -119.891, 87.1322, 0.22", "-23.1265, -130.189, 92.3508, 0.22", "-18.649, -140.504, 96.6578, 0.22", "-13.484, -150.56, 100.803, 0.22", "-8.13584, -160.362, 105.309, 0.22", "-2.90523, -169.773, 110.701, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "31.11, 275.912, -26.3158, 0.59", "31.8221, 279.224, -28.3913, 0.59", "32.0067, 280.111, -28.8424, 0.59", "32.2299, 281.149, -29.3513, 0.37", "32.3257, 281.613, -29.571, 0.15", "32.4563, 282.263, -29.8636, 0.15", "32.804, 284.104, -30.6326, 0.15", "33.2147, 286.823, -31.553, 0.07", "33.4037, 288.125, -31.9655, 0.07", "33.5505, 289.031, -32.237, 0.07", "33.7211, 290.158, -32.5661, 0.07", "33.9002, 291.596, -32.9718, 0.07", "34.0622, 293.141, -33.4043, 0.07", "34.3359, 295.624, -34.1597, 0.07", "34.4527, 296.671, -34.4791, 0.07", "34.5846, 297.728, -34.8179, 0.07", "34.6638, 298.345, -35.0201, 0.15", "34.8096, 299.41, -35.3911, 0.15", "34.9008, 300.258, -35.6795, 0.15", "34.9493, 300.935, -35.9239, 0.15", "34.961, 301.616, -36.1941, 0.15", "34.9391, 302.952, -36.7228, 0.15", "34.9112, 303.874, -37.0745, 0.15", "34.8574, 305.211, -37.5323, 0.15", "34.7992, 306.873, -38.0741, 0.15", "34.7397, 308.045, -38.4391, 0.15", "34.6946, 308.74, -38.6394, 0.15", "34.5978, 310.392, -39.0787, 0.15", "34.5366, 311.747, -39.3831, 0.15", "34.487, 313.099, -39.6271, 0.15", "34.4343, 314.299, -39.7961, 0.15", "34.4232, 315.093, -39.8961, 0.15", "34.4108, 317.326, -40.161, 0.22", "34.402, 318.326, -40.2732, 0.22", "34.3701, 320.993, -40.5594, 0.22", "34.3746, 321.35, -40.6106, 0.22", "34.4084, 322.227, -40.7593, 0.22", "34.4304, 322.719, -40.8534, 0.22", "34.4657, 323.426, -40.9975, 0.22", "34.5762, 325.626, -41.5262, 0.22", "34.8014, 328.917, -42.5957, 0.29", "34.8983, 330.213, -43.0578, 0.22", "35.0307, 331.791, -43.6453, 0.22", "35.2017, 333.484, -44.292, 0.22", "35.5452, 336.396, -45.4097, 0.22", "36.0431, 339.658, -46.6545, 0.15", "36.223, 340.724, -47.045, 0.15", "36.4333, 341.884, -47.49, 0.15", "36.6577, 343.125, -47.9685, 0.15", "37.0422, 345.361, -48.8144, 0.15", "37.6751, 349.206, -50.2011, 0.15", "37.9463, 350.915, -50.765, 0.15", "38.36, 353.411, -51.6066, 0.15", "38.6339, 354.984, -52.1252, 0.15", "38.9113, 356.466, -52.5944, 0.15", "39.2224, 357.921, -53.0408, 0.15", "39.7415, 360.173, -53.6838, 0.15", "40.1206, 361.742, -54.1071, 0.15", "40.5038, 363.652, -54.6215, 0.15", "40.5804, 364.1, -54.7625, 0.15", "40.8457, 366.26, -55.5203, 0.15", "40.9265, 367.647, -56.0606, 0.15", "40.8899, 369.396, -56.8081, 0.15", "40.6034, 372.475, -58.1911, 0.15", "40.2345, 374.413, -59.1063, 0.15", "39.6394, 376.423, -60.0811, 0.15", "39.0975, 377.688, -60.6868, 0.15", "38.4333, 378.974, -61.256, 0.15", "37.6867, 380.223, -61.7499, 0.15", "36.2247, 382.384, -62.4114, 0.15", "35.0505, 384.026, -62.771, 0.15", "33.7159, 385.978, -63.073, 0.15", "32.2666, 388.375, -63.2683, 0.15", "31.6866, 389.463, -63.3011, 0.15", "30.735, 391.552, -63.2697, 0.15", "30.0859, 393.255, -63.2088, 0.15", "29.0179, 396.388, -63.1222, 0.15", "28.07, 399.303, -63.1296, 0.15", "27.8441, 400.001, -63.1533, 0.15", "27.3438, 401.625, -63.2524, 0.15", "26.2931, 405.398, -63.5623, 0.15", "25.6388, 407.946, -63.7854, 0.15", "24.9444, 411.151, -64.0625, 0.15", "24.6163, 413.051, -64.2532, 0.15", "24.2224, 416.41, -64.5714, 0.07", "24.1461, 418.744, -64.7796, 0.07", "24.2627, 420.087, -64.8877, 0.07", "24.9101, 423.11, -65.1423, 0.07", "25.3351, 424.324, -65.2593, 0.07", "25.943, 425.63, -65.4324, 0.07", "26.7956, 427.06, -65.7601, 0.07", "27.4905, 428.106, -66.0881, 0.07", "28.5482, 429.542, -66.6695, 0.07", "29.2149, 430.354, -67.0408, 0.07", "30.08, 431.49, -67.53, 0.07", "31.4277, 433.427, -68.3216, 0.07", "32.166, 434.551, -68.7406, 0.07", "33.2936, 436.319, -69.3433, 0.07", "34.3156, 438.012, -69.8643, 0.07", "35.6181, 440.34, -70.53, 0.07", "36.3754, 441.85, -70.9613, 0.07", "37.3044, 444.201, -71.6344, 0.07", "37.7087, 445.529, -72.0116, 0.07", "38.0984, 447.621, -72.5746, 0.07", "38.3037, 449.683, -73.1524, 0.07", "38.3816, 452.181, -73.8474, 0.07", "38.3091, 455.403, -74.7553, 0.07", "38.2185, 456.989, -75.224, 0.07", "38.1356, 459.947, -76.141, 0.07", "38.1598, 461.55, -76.6509, 0.07", "38.3043, 463.124, -77.1228, 0.07", "38.5821, 464.812, -77.6394, 0.07", "38.942, 466.365, -78.1536, 0.07", "39.7567, 469.256, -79.2092, 0.07", "40.1907, 470.512, -79.6807, 0.07", "41.858, 475.071, -81.3315, 0.07", "42.243, 476.08, -81.6857, 0.07" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "31.11, 275.912, -26.3158, 0.07", "31.8409, 279.526, -25.5267, 0.07", "32.0601, 280.823, -25.2785, 0.07", "32.3873, 282.853, -24.9623, 0.07", "32.7235, 284.942, -24.6515, 0.07", "33.2564, 288.335, -24.168, 0.22", "33.5361, 290.173, -23.9166, 0.22", "33.8356, 292.567, -23.6178, 0.22", "34.2036, 295.621, -23.304, 0.07", "34.438, 297.564, -23.1039, 0.07", "34.5912, 298.692, -22.9877, 0.07", "34.6695, 299.332, -22.9162, 0.07", "34.8758, 301.437, -22.5979, 0.15", "35.0315, 303.387, -22.2745, 0.15", "35.1137, 304.947, -22.0101, 0.15", "35.1657, 306.91, -21.7223, 0.15", "35.1892, 309.732, -21.3645, 0.15", "35.149, 310.862, -21.2697, 0.15", "35.0364, 312.293, -21.2449, 0.15", "34.9312, 313.419, -21.278, 0.15", "34.8119, 314.761, -21.3683, 0.15", "34.7109, 316.861, -21.5369, 0.15", "34.7592, 320.411, -21.8664, 0.07", "34.9659, 323.629, -22.1515, 0.07", "35.186, 325.685, -22.2909, 0.07", "35.3519, 326.753, -22.3537, 0.07", "35.8772, 329.384, -22.4755, 0.07", "36.6111, 332.444, -22.5778, 0.07", "37.5182, 335.679, -22.6307, 0.07", "37.9359, 337.136, -22.6348, 0.07", "38.6379, 339.922, -22.6479, 0.07", "38.8532, 341.14, -22.6378, 0.07", "38.9081, 341.738, -22.6253, 0.07", "38.9146, 343.035, -22.5634, 0.07", "38.8779, 344.013, -22.504, 0.07", "38.7309, 347.331, -22.2799, 0.07", "38.6233, 350.49, -22.031, 0.07", "38.5974, 352.369, -21.8768, 0.07", "38.5529, 356.636, -21.5174, 0.07", "38.5474, 359.767, -21.2344, 0.07", "38.566, 361.046, -21.1101, 0.07", "38.6215, 362.172, -20.9907, 0.07", "38.8493, 364.042, -20.8082, 0.07" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "28.8759, 31.1452, 21.0699, 0.37", "30.369, 31.245, 20.9517, 0.37", "31.8743, 31.4239, 20.8933, 0.37", "32.6976, 31.5575, 20.9073, 0.52", "34.1189, 31.8163, 20.9783, 0.96", "35.3351, 32.044, 21.102, 0.96", "36.4895, 32.2195, 21.2488, 0.96", "37.3016, 32.3449, 21.3881, 0.74", "38.0514, 32.4424, 21.5572, 0.44", "38.7568, 32.5146, 21.7228, 0.44", "39.6985, 32.6183, 21.9363, 0.44", "40.7323, 32.7609, 22.1054, 0.44", "41.757, 32.9265, 22.1997, 0.52", "42.9244, 33.1732, 22.2233, 0.52", "45.0449, 33.7521, 22.1215, 0.96", "46.271, 34.165, 22.0068, 1.18", "47.297, 34.5483, 21.8638, 0.59", "47.8402, 34.7664, 21.7743, 0.59", "48.7343, 35.1206, 21.6002, 0.59", "49.6165, 35.439, 21.3949, 0.59", "50.059, 35.5575, 21.2809, 0.59", "51.0871, 35.7549, 21.0534, 0.29", "52.2257, 35.927, 20.8783, 0.29", "52.6969, 35.9834, 20.8303, 0.22", "53.4458, 36.0566, 20.7945, 0.22", "54.4276, 36.1833, 20.7908, 0.22", "55.5501, 36.4375, 20.7574, 0.22", "57.3111, 36.8822, 20.7229, 0.07", "58.3693, 37.1624, 20.716, 0.07", "59.3715, 37.435, 20.712, 0.07", "61.5998, 38.0726, 20.7123, 0.07", "64.3769, 39.0062, 20.6843, 0.07", "72.6395, 42.4626, 20.1479, 0.07", "81.4227, 44.2749, 20.4239, 0.07", "90.2583, 44.7322, 21.9164, 0.07", "98.5639, 44.8814, 25.3077, 0.07", "106.164, 44.8094, 30.0763, 0.07", "113.575, 44.2899, 35.1074, 0.07", "121.853, 42.555, 38.1014, 0.07", "129.966, 41.7475, 41.8472, 0.07", "137.63, 41.0717, 46.4645, 0.07", "145.656, 39.9553, 50.3172, 0.07", "154.286, 38.9876, 52.5712, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "28.8759, 31.1452, 21.0699, 1.55", "29.488, 31.7032, 21.3367, 1.55", "30.1924, 32.4921, 21.7468, 1.33", "30.7731, 33.3013, 22.3321, 1.11", "31.1845, 33.9837, 22.9364, 0.81", "31.6611, 34.8529, 23.7942, 0.81", "32.0099, 35.5211, 24.5113, 0.81", "32.3133, 36.1553, 25.3746, 0.74", "32.7074, 37.0833, 26.9719, 0.88", "32.8409, 37.441, 27.718, 0.88", "32.8754, 37.5276, 27.9285, 0.88", "32.9587, 37.6528, 28.2774, 0.74", "33.2729, 37.8937, 28.9696, 0.52", "33.5987, 38.1096, 29.3997, 0.37", "33.8425, 38.399, 29.5623, 0.37", "34.2492, 38.9548, 29.7911, 0.37", "34.7203, 39.565, 30.0784, 0.59", "35.0083, 39.925, 30.2635, 0.59", "35.6305, 40.6895, 30.6965, 0.59", "36.2742, 41.4006, 31.1682, 0.59", "36.6974, 41.7342, 31.4807, 0.29", "37.5645, 42.0409, 32.1064, 0.15", "37.9168, 42.0836, 32.355, 0.15", "38.1995, 42.06, 32.5418, 0.15", "38.5509, 41.9475, 32.7689, 0.15", "39.2179, 41.6046, 33.1695, 0.15", "39.7845, 41.2523, 33.5155, 0.15", "43.318, 45.7712, 37.4482, 0.15", "47.7129, 48.5076, 42.0926, 0.15", "51.029, 51.0668, 47.6448, 0.15", "55.2744, 54.2006, 52.1756, 0.15", "58.6407, 57.6263, 57.2061, 0.15", "62.4555, 59.874, 62.5697, 0.15", "65.2569, 62.8226, 68.2116, 0.15", "68.7261, 65.4576, 73.6333, 0.15", "71.5735, 69.0308, 78.877, 0.15", "75.3998, 72.495, 83.5387, 0.15", "79.813, 76.5234, 87.098, 0.15" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-124.906, -152.426, -92.5559, 0.07", "-124.886, -153.662, -91.5446, 0.07", "-124.783, -154.955, -90.6273, 0.07", "-124.662, -155.942, -90.0904, 0.07", "-124.507, -156.9, -89.7012, 0.07", "-124.198, -158.352, -89.2316, 0.07", "-123.751, -159.996, -88.7914, 0.07", "-123.29, -161.335, -88.5908, 0.07", "-122.728, -163.017, -88.4507, 0.07", "-122.377, -164.36, -88.3673, 0.07", "-122.165, -165.532, -88.3426, 0.07", "-122.095, -167.093, -88.3429, 0.07", "-122.314, -169.043, -88.3549, 0.07", "-122.821, -171.025, -88.3913, 0.07", "-123.651, -173.366, -88.4412, 0.07", "-124.44, -175.172, -88.5292, 0.07", "-125.739, -177.693, -88.7279, 0.07", "-126.888, -179.686, -88.9573, 0.07", "-127.783, -181.179, -89.1883, 0.07", "-128.496, -182.379, -89.4093, 0.07", "-128.867, -183.004, -89.5276, 0.07", "-129.626, -184.34, -89.7572, 0.07", "-130.494, -186.004, -90.0874, 0.07", "-131.076, -187.196, -90.326, 0.07", "-131.658, -188.352, -90.4979, 0.07", "-132.143, -189.255, -90.6025, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-124.906, -152.426, -92.5559, 0.07", "-126.123, -151.878, -93.2958, 0.07", "-127.391, -151.229, -94.1913, 0.07", "-128.076, -150.856, -94.7156, 0.07", "-129.078, -150.271, -95.5282, 0.07", "-129.969, -149.715, -96.4273, 0.07", "-130.76, -149.189, -97.3792, 0.07", "-131.46, -148.654, -98.4564, 0.07", "-131.785, -148.386, -99.0289, 0.07", "-131.987, -148.218, -99.4132, 0.07", "-133.119, -147.311, -101.621, 0.07", "-133.708, -146.869, -102.637, 0.07", "-134.354, -146.414, -103.619, 0.07", "-134.87, -146.086, -104.302, 0.07", "-135.577, -145.69, -105.208, 0.07", "-136.051, -145.434, -105.747, 0.07", "-137.069, -144.897, -106.872, 0.07", "-137.83, -144.502, -107.899, 0.07", "-138.793, -143.98, -109.59, 0.07", "-139.622, -143.498, -111.444, 0.07", "-140.184, -143.113, -113.131, 0.07", "-140.745, -142.6, -115.569, 0.07", "-141.006, -142.296, -117.23, 0.07", "-141.075, -142.169, -117.908, 0.07", "-141.123, -141.934, -119.061, 0.07", "-141.158, -141.588, -120.593, 0.07", "-141.192, -141.396, -121.54, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "172.324, -83.9522, 99.9563, 0.29", "183.715, -85.5138, 108.261, 0.29", "195.148, -86.502, 116.596, 0.29", "207.451, -85.5106, 123.583, 0.29", "219.064, -86.6051, 131.653, 0.29", "231.282, -86.5738, 138.855, 0.29", "243.401, -85.7744, 146.181, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "172.324, -83.9522, 99.9563, 0.07", "181.666, -84.9256, 105.691, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-81.2309, 86.1253, 138.959, 0.29", "-84.1883, 94.4933, 146.181, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-81.2309, 86.1253, 138.959, 0.07", "-85.0701, 90.015, 142.996, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-50.5495, -18.627, 16.2392, 0.22", "-52.4918, -18.5814, 14.6392, 0.22", "-53.8787, -18.4219, 14.1706, 0.29", "-54.4088, -18.342, 14.0717, 0.29", "-55.003, -18.2423, 14.001, 0.29", "-55.9836, -18.0608, 13.9411, 0.29", "-58.3428, -17.5555, 13.8679, 0.29", "-60.7587, -16.9519, 13.9772, 0.29", "-62.5416, -16.4931, 14.1228, 0.29", "-63.9196, -16.1422, 14.2386, 0.29", "-65.9416, -15.6869, 14.3847, 0.29", "-67.5061, -15.3905, 14.4425, 0.29", "-68.6771, -15.2053, 14.4053, 0.29", "-70.2215, -15.0169, 14.2462, 0.29", "-71.9977, -14.8696, 13.9751, 0.29", "-73.2897, -14.813, 13.7139, 0.29", "-74.8871, -14.8385, 13.2831, 0.07", "-75.5723, -14.8926, 13.0668, 0.07", "-76.0974, -14.946, 12.8741, 0.07", "-76.8568, -15.0011, 12.4909, 0.07", "-86.1183, -12.2949, 12.1304, 0.07", "-95.1095, -9.06423, 10.7335, 0.07", "-104.437, -6.5701, 10.7189, 0.07", "-113.745, -4.99568, 8.68773, 0.07", "-122.514, -1.58063, 6.52965, 0.07", "-130.596, 3.20826, 4.29608, 0.07", "-138.481, 8.75414, 3.75025, 0.07", "-147.054, 13.074, 4.78589, 0.07", "-155.61, 17.3074, 6.23441, 0.07", "-164.71, 20.4124, 7.11666, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-50.5495, -18.627, 16.2392, 0.88", "-50.5052, -19.2752, 16.9636, 0.88", "-50.4713, -20.4933, 18.2959, 0.88", "-50.5997, -21.2557, 19.2023, 0.88", "-50.8467, -21.7709, 19.9034, 1.11", "-51.3503, -22.283, 20.7306, 1.11", "-51.9045, -22.6899, 21.4521, 1.11", "-52.22, -22.8451, 21.7694, 0.74", "-53.7673, -23.4354, 23.0822, 0.88", "-55.2542, -23.8807, 24.2108, 0.88", "-57.2085, -24.3421, 25.5678, 1.03", "-58.5134, -24.5821, 26.3977, 0.81", "-59.5186, -24.7319, 27.0017, 0.81" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.90523, -169.773, 110.701, 0.29", "-1.03572, -176.722, 113.878, 0.29", "1.91147, -182.873, 117.796, 0.29", "4.96722, -189.443, 120.858, 0.29", "8.55502, -196.175, 122.78, 0.29", "11.7651, -203.047, 124.865, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.90523, -169.773, 110.701, 0.07", "-0.694472, -177.696, 117.371, 0.29", "2.30324, -185.609, 123.739, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "38.8493, 364.042, -20.8082, 0.15", "38.5318, 367.058, -21.3654, 0.15", "38.3219, 368.684, -21.6947, 0.15", "38.1023, 370.549, -22.0516, 0.15", "37.8965, 372.398, -22.4155, 0.15", "37.6937, 374.655, -22.9016, 0.15", "37.4619, 377.944, -23.7005, 0.15", "37.2854, 380.886, -24.4944, 0.15", "37.2257, 382.694, -25.0232, 0.15", "37.2194, 383.898, -25.4031, 0.15", "37.3361, 386.333, -26.2777, 0.15", "37.5383, 387.85, -26.8835, 0.15", "37.716, 388.526, -27.1795, 0.15", "38.3185, 390.099, -27.912, 0.15", "38.8802, 391.295, -28.4916, 0.15", "39.5159, 392.429, -29.0574, 0.15", "40.0021, 393.211, -29.4496, 0.15", "40.8656, 394.732, -30.2156, 0.15", "41.3763, 395.808, -30.803, 0.15", "41.6268, 396.539, -31.2204, 0.15", "41.997, 398.303, -32.1522, 0.15", "42.0775, 398.97, -32.4477, 0.15", "42.248, 401.303, -33.3298, 0.15", "42.3603, 402.85, -33.8344, 0.15", "42.5746, 404.407, -34.3255, 0.15", "42.9568, 405.984, -34.7898, 0.15", "43.8405, 408.311, -35.4576, 0.15", "44.1963, 408.994, -35.6683, 0.15", "45.3358, 410.709, -36.2386, 0.15", "46.4213, 412.196, -36.8362, 0.15", "47.5939, 413.785, -37.6056, 0.15", "48.5571, 415.219, -38.4123, 0.15", "49.3102, 416.595, -39.2468, 0.15", "49.6144, 417.223, -39.6326, 0.15", "50.1705, 418.798, -40.5663, 0.15", "50.3868, 419.895, -41.1646, 0.15", "50.462, 421.287, -41.9214, 0.15", "50.4223, 423.178, -42.8897, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "38.8493, 364.042, -20.8082, 0.07", "40.4182, 366.773, -20.6457, 0.07", "40.9812, 367.855, -20.6802, 0.07", "41.7154, 369.447, -20.8958, 0.07", "42.301, 370.873, -21.2244, 0.07", "42.8575, 372.461, -21.7769, 0.07", "43.2085, 373.547, -22.2375, 0.07", "43.4787, 374.674, -22.8535, 0.07", "43.7373, 375.936, -23.6654, 0.07", "43.9052, 376.984, -24.454, 0.07", "44.2257, 379.152, -26.2736, 0.07", "44.2947, 379.759, -26.7941, 0.07" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "154.286, 38.9876, 52.5712, 0.22", "160.871, 39.3032, 54.9389, 0.22", "167.824, 39.576, 55.7483, 0.22", "174.614, 40.3471, 57.2882, 0.22", "181.257, 40.5702, 59.4977, 0.22", "187.758, 41.6316, 61.8805, 0.22", "194.287, 42.2238, 64.3488, 0.22", "201.073, 42.7013, 66.017, 0.22", "207.846, 43.028, 67.7764, 0.22", "214.487, 42.7555, 69.9864, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "154.286, 38.9876, 52.5712, 0.07", "163.522, 39.6888, 54.5547, 0.22", "172.722, 41.8357, 55.2566, 0.22", "182.164, 42.4833, 55.6532, 0.22", "191.631, 42.3365, 55.365, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "79.813, 76.5234, 87.098, 0.22", "82.849, 79.5025, 91.2914, 0.22", "85.4561, 82.3387, 95.856, 0.22", "88.1254, 84.9526, 100.516, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "79.813, 76.5234, 87.098, 0.07", "84.9418, 80.7676, 93.4588, 0.22", "89.3266, 84.6563, 100.56, 0.22", "92.9408, 88.7408, 107.978, 0.22", "97.022, 92.4613, 115.345, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-164.71, 20.4124, 7.11666, 0.22", "-173.941, 23.1141, 5.87969, 0.22", "-182.804, 26.1263, 3.34309, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-164.71, 20.4124, 7.11666, 0.07", "-175.053, 23.7388, 5.92894, 0.22", "-184.982, 28.1766, 4.85083, 0.22", "-194.216, 33.9902, 5.47121, 0.22", "-201.923, 41.5664, 7.0977, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-59.5186, -24.7319, 27.0017, 0.74", "-61.1333, -24.4609, 27.357, 0.74", "-62.8724, -24.068, 27.6608, 0.74", "-64.3028, -23.6725, 27.8556, 0.74", "-65.3235, -23.3298, 27.9583, 0.37", "-66.5672, -22.8963, 28.0548, 0.37", "-68.2177, -22.3399, 28.1593, 0.52", "-69.2481, -21.9907, 28.19, 0.52", "-70.4501, -21.6627, 28.2197, 0.66", "-72.1609, -21.3675, 28.2818, 0.66", "-73.3876, -21.308, 28.382, 0.66", "-74.4642, -21.4046, 28.5268, 0.66", "-76.1897, -21.7377, 28.8308, 0.66", "-77.7826, -22.122, 29.1384, 0.66", "-78.6517, -22.3439, 29.3116, 0.66", "-79.6558, -22.646, 29.519, 0.81", "-81.4539, -23.2679, 29.8371, 0.44", "-82.6064, -23.722, 29.9734, 0.44", "-83.9918, -24.3712, 30.0269, 0.44", "-84.783, -24.7965, 29.969, 0.44", "-86.2424, -25.6865, 29.7598, 0.44", "-87.7355, -26.7796, 29.431, 0.44", "-88.5208, -27.5009, 29.1646, 0.44", "-89.3166, -28.3358, 28.8195, 0.44", "-89.929, -29.0202, 28.4895, 0.44", "-90.6092, -29.6471, 28.0609, 0.44", "-91.67, -30.3026, 27.2888, 0.37", "-92.5096, -30.6405, 26.706, 0.37", "-93.2006, -30.8398, 26.2006, 0.37", "-93.8109, -30.9634, 25.7116, 0.37", "-95.5786, -31.1723, 24.149, 0.22", "-96.6119, -31.2593, 23.1895, 0.22", "-97.9408, -31.2417, 21.9238, 0.07", "-98.9536, -31.1529, 20.9856, 0.07", "-99.5518, -31.0649, 20.4226, 0.07", "-100.464, -30.8974, 19.5829, 0.07", "-111.264, -33.1147, 18.7096, 0.07", "-122.019, -35.656, 19.1404, 0.07", "-132.716, -38.2741, 20.1628, 0.07", "-143.459, -38.7274, 22.7535, 0.07", "-153.799, -40.6819, 26.1546, 0.07", "-163.556, -43.6691, 30.4216, 0.07", "-173.854, -47.043, 32.6339, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-59.5186, -24.7319, 27.0017, 0.37", "-61.5267, -27.366, 28.315, 0.37", "-62.209, -28.261, 28.7612, 0.37", "-63.3258, -29.7259, 29.4916, 0.37", "-64.2506, -30.9391, 30.0964, 0.37", "-65.0252, -31.955, 30.603, 0.37", "-73.037, -41.6504, 36.068, 0.37", "-79.7233, -50.8155, 43.7723, 0.37", "-85.7139, -60.3609, 51.5862, 0.37", "-92.4244, -68.6913, 60.1671, 0.37", "-98.8083, -76.7511, 69.2415, 0.37", "-104.71, -83.1204, 79.8557, 0.37", "-110.246, -88.1508, 91.3496, 0.37", "-116.068, -91.2732, 103.366, 0.37", "-121.076, -95.1183, 115.54, 0.37", "-127.474, -96.5503, 127.585, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "88.1254, 84.9526, 100.516, 0.29", "92.4569, 88.5684, 106.789, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "88.1254, 84.9526, 100.516, 0.07", "92.6364, 89.1898, 107.546, 0.29", "97.1553, 92.3086, 115.134, 0.29", "101.868, 94.4326, 122.945, 0.29", "106.191, 95.1055, 131.227, 0.29", "110.573, 94.6806, 139.493, 0.29", "116.325, 93.9782, 146.852, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-173.854, -47.043, 32.6339, 0.22", "-183.566, -48.9538, 33.0914, 0.22", "-193.342, -50.5664, 32.9844, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-173.854, -47.043, 32.6339, 0.07", "-184.412, -49.3085, 33.0838, 0.22", "-194.953, -51.6811, 32.7899, 0.22", "-205.515, -53.3375, 34.3763, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-127.474, -96.5503, 127.585, 0.29", "-132.085, -101.221, 134.515, 0.29", "-136.95, -105.849, 141.299, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-127.474, -96.5503, 127.585, 0.07", "-131.343, -99.6028, 133.382, 0.29", "-135.661, -103.283, 138.453, 0.29", "-140.513, -106.957, 143.021, 0.29", "-144.006, -112.082, 147.43, 0.29", "-147.559, -115.755, 153.067, 0.29", "-151.793, -119.125, 158.417, 0.29", "-156.782, -122.732, 162.889, 0.29", "-160.73, -126.554, 168.153, 0.29", "-163.557, -130.268, 174.162, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-205.515, -53.3375, 34.3763, 0.29", "-214.464, -55.1932, 34.793, 0.29", "-223.114, -58.1639, 35.0419, 0.29", "-230.915, -62.3715, 37.312, 0.29", "-238.537, -66.7387, 39.8712, 0.29", "-245.624, -72.4683, 40.6819, 0.29", "-252.774, -77.6493, 43.077, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-205.515, -53.3375, 34.3763, 0.07", "-216.968, -54.7236, 35.7226, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_70", "dend_51", "dend_24", "dend_5", "dend_0", "dend_74", "dend_71", "dend_61", "dend_52", "dend_48", "dend_25", "dend_9", "dend_6", "dend_4", "dend_1", "dend_76", "dend_75", "dend_73", "dend_72", "dend_67", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_43", "dend_26", "dend_19", "dend_10", "dend_8", "dend_7", "dend_3", "dend_2", "dend_69", "dend_68", "dend_66", "dend_63", "dend_60", "dend_57", "dend_55", "dend_54", "dend_45", "dend_44", "dend_30", "dend_27", "dend_23", "dend_20", "dend_16", "dend_11", "dend_65", "dend_64", "dend_59", "dend_58", "dend_47", "dend_46", "dend_40", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_18", "dend_17", "dend_13", "dend_12", "dend_42", "dend_41", "dend_35", "dend_32", "dend_15", "dend_14", "dend_39", "dend_36", "dend_34", "dend_33", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_70", "dend_51", "dend_24", "dend_5", "dend_0", "dend_74", "dend_71", "dend_61", "dend_52", "dend_48", "dend_25", "dend_9", "dend_6", "dend_4", "dend_1", "dend_76", "dend_75", "dend_73", "dend_72", "dend_67", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_43", "dend_26", "dend_19", "dend_10", "dend_8", "dend_7", "dend_3", "dend_2", "dend_69", "dend_68", "dend_66", "dend_63", "dend_60", "dend_57", "dend_55", "dend_54", "dend_45", "dend_44", "dend_30", "dend_27", "dend_23", "dend_20", "dend_16", "dend_11", "dend_65", "dend_64", "dend_59", "dend_58", "dend_47", "dend_46", "dend_40", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_18", "dend_17", "dend_13", "dend_12", "dend_42", "dend_41", "dend_35", "dend_32", "dend_15", "dend_14", "dend_39", "dend_36", "dend_34", "dend_33", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_24", "dend_24", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_49", "dend_49", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_47", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_LBC_6e6465f06a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_24
create dend_48
public dend_48
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_61
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_43, id: dend_43, parent: dend_25
create dend_43
public dend_43
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_30
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_8, dend_8, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_57, dend_57, dend_57, dend_55, dend_55, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_47, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_39, dend_39, dend_36, dend_36, dend_36, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_70(0), soma_0(0.4500009122195697)
    connect dend_51(0), soma_0(0.4500009122195697)
    connect dend_24(0), soma_0(0.4500009122195697)
    connect dend_5(0), soma_0(0.4500009122195697)
    connect dend_0(0), soma_0(0.4500009122195697)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_67(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_43(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.84291, 11.3612, 2.23641, 5.89494 ) }
    soma_0 { pt3dadd( -5.19407, 10.0003, 1.99661, 10.2773 ) }
    soma_0 { pt3dadd( -4.54524, 8.63944, 1.7568, 13.3265 ) }
    soma_0 { pt3dadd( -3.8964, 7.27857, 1.517, 15.2194 ) }
    soma_0 { pt3dadd( -3.24756, 5.91771, 1.2772, 16.1615 ) }
    soma_0 { pt3dadd( -2.59873, 4.55684, 1.0374, 16.5543 ) }
    soma_0 { pt3dadd( -1.94989, 3.19598, 0.797597, 16.4314 ) }
    soma_0 { pt3dadd( -1.30106, 1.83511, 0.557795, 16.0873 ) }
    soma_0 { pt3dadd( -0.65222, 0.47425, 0.317993, 15.3318 ) }
    soma_0 { pt3dadd( -0.00338354, -0.886615, 0.0781916, 14.6262 ) }
    soma_0 { pt3dadd( 0.645453, -2.24748, -0.16161, 13.9141 ) }
    soma_0 { pt3dadd( 1.29429, -3.60834, -0.401412, 12.634 ) }
    soma_0 { pt3dadd( 1.94312, -4.96921, -0.641214, 10.4536 ) }
    soma_0 { pt3dadd( 2.59196, -6.33007, -0.881015, 8.87258 ) }
    soma_0 { pt3dadd( 3.2408, -7.69094, -1.12082, 7.42349 ) }
    soma_0 { pt3dadd( 3.88963, -9.0518, -1.36062, 6.11203 ) }
    soma_0 { pt3dadd( 4.53847, -10.4127, -1.60042, 4.82754 ) }
    soma_0 { pt3dadd( 5.18731, -11.7735, -1.84022, 4.18986 ) }
    soma_0 { pt3dadd( 5.83614, -13.1344, -2.08002, 4.58127 ) }
    soma_0 { pt3dadd( 6.48498, -14.4953, -2.31983, 4.2655 ) }
    soma_0 { pt3dadd( 7.13381, -15.8561, -2.55963, 2.83368 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 21/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 9.13926, -15.777, -1.39701, 1.62 ) }
    dend_70 { pt3dadd( 10.4703, -16.1258, -0.723775, 1.62 ) }
    dend_70 { pt3dadd( 11.5471, -16.413, -0.146076, 1.62 ) }
    dend_70 { pt3dadd( 12.7506, -16.7407, 0.548156, 1.25 ) }
    dend_70 { pt3dadd( 14.1282, -17.1537, 1.38629, 1.25 ) }
    dend_70 { pt3dadd( 16.053, -17.8049, 2.57444, 1.25 ) }
    dend_70 { pt3dadd( 17.1174, -18.2076, 3.22212, 1.4 ) }
    dend_70 { pt3dadd( 18.5333, -18.7848, 4.14789, 1.4 ) }
    dend_70 { pt3dadd( 19.3396, -19.2107, 4.70297, 1.4 ) }
    dend_70 { pt3dadd( 20.2644, -19.8566, 5.33472, 1.62 ) }
    dend_70 { pt3dadd( 20.8606, -20.3819, 5.67155, 1.62 ) }
    dend_70 { pt3dadd( 21.935, -21.3885, 6.13047, 1.62 ) }
    dend_70 { pt3dadd( 22.8617, -22.1997, 6.45477, 1.62 ) }
    dend_70 { pt3dadd( 24.0351, -23.1552, 6.8217, 1.62 ) }
    dend_70 { pt3dadd( 24.9365, -23.8724, 7.07391, 1.62 ) }
    dend_70 { pt3dadd( 26.6851, -25.1921, 7.52944, 1.11 ) }
    dend_70 { pt3dadd( 28.5594, -26.5091, 8.01089, 1.4 ) }
    dend_70 { pt3dadd( 30.5793, -27.8128, 8.50345, 1.4 ) }
    dend_70 { pt3dadd( 31.7496, -28.4657, 8.76615, 1.4 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 40/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 6.56926, -15.977, -4.34701, 2.65 ) }
    dend_51 { pt3dadd( 8.17604, -19.0863, -4.5713, 2.73 ) }
    dend_51 { pt3dadd( 9.51307, -21.6736, -4.75794, 2.43 ) }
    dend_51 { pt3dadd( 10.833, -24.2278, -4.94219, 2.43 ) }
    dend_51 { pt3dadd( 12.1766, -26.8278, -5.12974, 2.65 ) }
    dend_51 { pt3dadd( 13.0272, -28.4739, -5.24848, 2.65 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.59074, -4.41702, 12.953, 2.36 ) }
    dend_24 { pt3dadd( -6.21703, -5.0136, 13.1998, 2.36 ) }
    dend_24 { pt3dadd( -7.90721, -5.63362, 13.4562, 2.36 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.27926, 9.99302, 3.25299, 2.21 ) }
    dend_5 { pt3dadd( 4.51981, 11.2151, 4.59864, 2.21 ) }
    dend_5 { pt3dadd( 5.91444, 12.5891, 6.11142, 2.21 ) }
    dend_5 { pt3dadd( 6.8879, 13.5482, 7.16735, 2.21 ) }
    dend_5 { pt3dadd( 8.07053, 14.7133, 8.45016, 2.21 ) }
    dend_5 { pt3dadd( 9.08712, 15.7148, 9.55289, 2.21 ) }
    dend_5 { pt3dadd( 10.6043, 17.2095, 11.1986, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 56/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.53074, 9.25302, 1.90299, 1.47 ) }
    dend_0 { pt3dadd( -8.77775, 10.1676, 1.90299, 1.47 ) }
    dend_0 { pt3dadd( -9.01748, 11.104, 1.90299, 1.47 ) }
    dend_0 { pt3dadd( -9.19513, 12.0301, 1.90299, 1.62 ) }
    dend_0 { pt3dadd( -9.33166, 12.8231, 1.90299, 1.84 ) }
    dend_0 { pt3dadd( -9.40111, 13.2853, 1.90299, 1.84 ) }
    dend_0 { pt3dadd( -9.53195, 14.3372, 1.90521, 1.84 ) }
    dend_0 { pt3dadd( -9.55165, 14.6973, 1.90646, 1.84 ) }
    dend_0 { pt3dadd( -9.54785, 16.0058, 1.9121, 1.4 ) }
    dend_0 { pt3dadd( -9.50085, 17.1095, 1.91731, 1.4 ) }
    dend_0 { pt3dadd( -9.44995, 17.6976, 1.92014, 1.25 ) }
    dend_0 { pt3dadd( -9.2326, 19.7235, 1.92978, 1.69 ) }
    dend_0 { pt3dadd( -9.11845, 20.6732, 1.93539, 1.69 ) }
    dend_0 { pt3dadd( -8.97805, 21.9498, 1.97716, 1.69 ) }
    dend_0 { pt3dadd( -8.89276, 23.0842, 2.04048, 1.33 ) }
    dend_0 { pt3dadd( -8.84605, 24.2048, 2.12488, 1.33 ) }
    dend_0 { pt3dadd( -8.87087, 24.8994, 2.18874, 1.33 ) }
    dend_0 { pt3dadd( -9.03045, 25.986, 2.33606, 0.81 ) }
    dend_0 { pt3dadd( -9.34851, 27.2452, 2.54197, 0.81 ) }
    dend_0 { pt3dadd( -9.62615, 28.1795, 2.70935, 0.81 ) }
    dend_0 { pt3dadd( -9.77765, 28.8047, 2.78932, 0.96 ) }
    dend_0 { pt3dadd( -9.99595, 30.004, 2.83712, 0.96 ) }
    dend_0 { pt3dadd( -10.1664, 31.5017, 2.72513, 1.25 ) }
    dend_0 { pt3dadd( -10.2197, 32.3773, 2.55576, 1.25 ) }
    dend_0 { pt3dadd( -10.2795, 33.6588, 2.20687, 1.25 ) }
    dend_0 { pt3dadd( -10.4265, 36.1256, 1.47172, 0.88 ) }
    dend_0 { pt3dadd( -10.5248, 37.3054, 1.09749, 0.88 ) }
    dend_0 { pt3dadd( -10.6929, 38.7947, 0.609772, 1.03 ) }
    dend_0 { pt3dadd( -10.8449, 39.7432, 0.323022, 1.25 ) }
    dend_0 { pt3dadd( -11.3739, 42.108, -0.269251, 1.11 ) }
    dend_0 { pt3dadd( -11.8123, 43.553, -0.534516, 0.88 ) }
    dend_0 { pt3dadd( -12.0049, 44.0995, -0.598431, 0.88 ) }
    dend_0 { pt3dadd( -12.4136, 45.3323, -0.679922, 1.11 ) }
    dend_0 { pt3dadd( -12.8857, 47.012, -0.82485, 0.66 ) }
    dend_0 { pt3dadd( -12.9986, 47.5459, -0.901726, 0.66 ) }
    dend_0 { pt3dadd( -13.0975, 48.3127, -1.04747, 0.66 ) }
    dend_0 { pt3dadd( -13.2451, 49.8419, -1.36203, 0.88 ) }
    dend_0 { pt3dadd( -13.3007, 50.3731, -1.4771, 0.88 ) }
    dend_0 { pt3dadd( -13.5293, 52.2001, -1.89288, 0.59 ) }
    dend_0 { pt3dadd( -13.6616, 53.2252, -2.13207, 0.52 ) }
    dend_0 { pt3dadd( -14.1838, 57.365, -2.99761, 0.59 ) }
    dend_0 { pt3dadd( -14.247, 57.9748, -3.10386, 0.52 ) }
    dend_0 { pt3dadd( -14.3371, 59.0433, -3.27151, 0.37 ) }
    dend_0 { pt3dadd( -14.3682, 59.6952, -3.37566, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -14.3716, 61.0005, -3.57492, 0.44 ) }
    dend_0 { pt3dadd( -14.3028, 61.8926, -3.77466, 0.44 ) }
    dend_0 { pt3dadd( -14.0163, 63.1768, -4.30971, 0.29 ) }
    dend_0 { pt3dadd( -13.726, 64.3544, -4.90652, 0.29 ) }
    dend_0 { pt3dadd( -13.5492, 65.0985, -5.34626, 0.29 ) }
    dend_0 { pt3dadd( -13.4954, 65.4256, -5.57007, 0.44 ) }
    dend_0 { pt3dadd( -13.5045, 65.7505, -5.83702, 0.74 ) }
    dend_0 { pt3dadd( -13.6459, 66.3432, -6.38287, 0.74 ) }
    dend_0 { pt3dadd( -13.848, 66.7774, -6.8016, 0.74 ) }
    dend_0 { pt3dadd( -14.1416, 67.351, -7.25241, 0.74 ) }
    dend_0 { pt3dadd( -14.2203, 67.5324, -7.36917, 0.37 ) }
    dend_0 { pt3dadd( -14.2922, 68.0859, -7.71454, 0.37 ) }
    dend_0 { pt3dadd( -14.2914, 68.3041, -7.86399, 0.37 ) }
    dend_0 { pt3dadd( -14.2661, 68.7585, -8.19277, 0.37 ) }
    dend_0 { pt3dadd( -14.255, 69.262, -8.58134, 0.37 ) }
    dend_0 { pt3dadd( -14.2799, 69.9106, -9.07569, 0.37 ) }
    dend_0 { pt3dadd( -14.462, 71.7552, -10.5451, 0.37 ) }
    dend_0 { pt3dadd( -14.666, 73.1948, -11.7185, 0.37 ) }
    dend_0 { pt3dadd( -14.7591, 73.7438, -12.1811, 0.22 ) }
    dend_0 { pt3dadd( -14.9546, 74.6498, -12.9612, 0.22 ) }
    dend_0 { pt3dadd( -15.2171, 75.607, -13.7583, 0.22 ) }
    dend_0 { pt3dadd( -15.4249, 76.5719, -14.506, 0.44 ) }
    dend_0 { pt3dadd( -15.4687, 76.8986, -14.7218, 0.44 ) }
    dend_0 { pt3dadd( -15.4703, 77.5233, -15.0897, 0.44 ) }
    dend_0 { pt3dadd( -15.3826, 78.2642, -15.4942, 0.44 ) }
    dend_0 { pt3dadd( -15.0712, 79.6627, -16.191, 0.44 ) }
    dend_0 { pt3dadd( -14.3895, 82.0101, -17.2592, 0.29 ) }
    dend_0 { pt3dadd( -14.1693, 82.7109, -17.5231, 0.37 ) }
    dend_0 { pt3dadd( -14.0084, 83.1954, -17.6869, 0.37 ) }
    dend_0 { pt3dadd( -13.6312, 84.2572, -17.9984, 0.37 ) }
    dend_0 { pt3dadd( -13.424, 84.8179, -18.1455, 0.37 ) }
    dend_0 { pt3dadd( -13.2675, 85.3358, -18.2529, 0.37 ) }
    dend_0 { pt3dadd( -13.2507, 85.9123, -18.2944, 0.22 ) }
    dend_0 { pt3dadd( -13.283, 86.3149, -18.3027, 0.22 ) }
    dend_0 { pt3dadd( -13.3225, 86.5667, -18.2926, 0.29 ) }
    dend_0 { pt3dadd( -13.4787, 87.2912, -18.2335, 0.29 ) }
    dend_0 { pt3dadd( -13.7554, 88.4785, -18.1209, 0.29 ) }
    dend_0 { pt3dadd( -14.2515, 90.6266, -17.9777, 0.59 ) }
    dend_0 { pt3dadd( -14.4607, 91.553, -17.9575, 0.37 ) }
    dend_0 { pt3dadd( -14.6371, 92.3044, -17.9683, 0.22 ) }
    dend_0 { pt3dadd( -14.8056, 92.9801, -17.9995, 0.22 ) }
    dend_0 { pt3dadd( -15.1208, 94.0316, -18.0833, 0.22 ) }
    dend_0 { pt3dadd( -15.8182, 95.7298, -18.2982, 0.37 ) }
    dend_0 { pt3dadd( -16.1795, 96.4107, -18.4588, 0.37 ) }
    dend_0 { pt3dadd( -16.5625, 97.0255, -18.6559, 0.37 ) }
    dend_0 { pt3dadd( -16.9135, 97.539, -18.8622, 0.37 ) }
    dend_0 { pt3dadd( -17.6958, 98.5731, -19.2873, 0.37 ) }
    dend_0 { pt3dadd( -18.5478, 99.5794, -19.6825, 0.15 ) }
    dend_0 { pt3dadd( -19.2545, 100.359, -19.9254, 0.15 ) }
    dend_0 { pt3dadd( -19.3341, 100.459, -19.954, 0.29 ) }
    dend_0 { pt3dadd( -19.7273, 101.045, -20.1303, 0.29 ) }
    dend_0 { pt3dadd( -20.1407, 101.821, -20.3728, 0.29 ) }
    dend_0 { pt3dadd( -20.4276, 102.555, -20.6115, 0.29 ) }
    dend_0 { pt3dadd( -20.6652, 103.353, -20.8391, 0.29 ) }
    dend_0 { pt3dadd( -21.0258, 104.819, -21.1411, 0.37 ) }
    dend_0 { pt3dadd( -21.1785, 105.586, -21.3002, 0.22 ) }
    dend_0 { pt3dadd( -21.2771, 106.193, -21.398, 0.15 ) }
    dend_0 { pt3dadd( -21.3642, 106.863, -21.4941, 0.15 ) }
    dend_0 { pt3dadd( -21.5043, 108.468, -21.656, 0.15 ) }
    dend_0 { pt3dadd( -21.6466, 110.613, -21.7613, 0.29 ) }
    dend_0 { pt3dadd( -21.6705, 111.226, -21.7518, 0.22 ) }
    dend_0 { pt3dadd( -21.7056, 112.525, -21.6939, 0.22 ) }
    dend_0 { pt3dadd( -21.7146, 112.896, -21.6683, 0.29 ) }
    dend_0 { pt3dadd( -21.7146, 113.472, -21.5938, 0.29 ) }
    dend_0 { pt3dadd( -21.6931, 114.309, -21.4481, 0.29 ) }
    dend_0 { pt3dadd( -21.6622, 115.169, -21.2767, 0.29 ) }
    dend_0 { pt3dadd( -21.6507, 115.506, -21.2144, 0.29 ) }
    dend_0 { pt3dadd( -21.5685, 117.111, -20.9805, 0.29 ) }
    dend_0 { pt3dadd( -21.4717, 119.022, -20.7183, 0.29 ) }
    dend_0 { pt3dadd( -21.4463, 119.576, -20.6422, 0.29 ) }
    dend_0 { pt3dadd( -21.4292, 120.071, -20.5767, 0.29 ) }
    dend_0 { pt3dadd( -21.4295, 121.859, -20.4264, 0.29 ) }
    dend_0 { pt3dadd( -21.4573, 123.431, -20.3823, 0.44 ) }
    dend_0 { pt3dadd( -21.4972, 124.269, -20.4063, 0.44 ) }
    dend_0 { pt3dadd( -21.554, 125.309, -20.4775, 0.29 ) }
    dend_0 { pt3dadd( -21.6515, 126.745, -20.6002, 0.29 ) }
    dend_0 { pt3dadd( -21.8673, 129.162, -20.8478, 0.44 ) }
    dend_0 { pt3dadd( -21.9709, 130.038, -20.9638, 0.29 ) }
    dend_0 { pt3dadd( -22.2227, 131.792, -21.2581, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.13381, -15.8561, -2.55963, 0.944631 ) }
    axon_0 { pt3dadd( 13.5893, -29.3959, -2.55963, 0.944631 ) }
    axon_0 { pt3dadd( 20.0449, -42.9357, -2.55963, 0.944631 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 82/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 31.7496, -28.4657, 8.76615, 1.33 ) }
    dend_74 { pt3dadd( 32.9515, -28.8743, 7.92334, 1.33 ) }
    dend_74 { pt3dadd( 33.9218, -29.2702, 7.32617, 1.33 ) }
    dend_74 { pt3dadd( 35.5228, -30.0936, 6.3496, 0.96 ) }
    dend_74 { pt3dadd( 36.4715, -30.7205, 5.75815, 0.96 ) }
    dend_74 { pt3dadd( 36.848, -31.0385, 5.50457, 1.11 ) }
    dend_74 { pt3dadd( 37.3669, -31.636, 5.12543, 1.11 ) }
    dend_74 { pt3dadd( 37.9081, -32.6025, 4.66723, 0.88 ) }
    dend_74 { pt3dadd( 38.1756, -33.441, 4.39297, 0.52 ) }
    dend_74 { pt3dadd( 38.3591, -34.3489, 4.09757, 0.52 ) }
    dend_74 { pt3dadd( 38.4719, -35.163, 3.77223, 0.52 ) }
    dend_74 { pt3dadd( 38.6443, -36.4355, 3.21536, 1.03 ) }
    dend_74 { pt3dadd( 38.7611, -37.1429, 2.87515, 1.4 ) }
    dend_74 { pt3dadd( 38.9689, -38.0122, 2.42695, 1.4 ) }
    dend_74 { pt3dadd( 39.6021, -39.855, 1.44589, 1.11 ) }
    dend_74 { pt3dadd( 40.033, -40.7715, 0.942994, 0.66 ) }
    dend_74 { pt3dadd( 40.483, -41.5154, 0.540358, 0.66 ) }
    dend_74 { pt3dadd( 41.164, -42.3849, 0.0874386, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_74 { pt3dadd( 41.7382, -43.0194, -0.210932, 1.55 ) }
    dend_74 { pt3dadd( 42.2055, -43.477, -0.384952, 1.55 ) }
    dend_74 { pt3dadd( 42.9076, -44.0703, -0.546903, 1.55 ) }
    dend_74 { pt3dadd( 43.5281, -44.5784, -0.697548, 1.55 ) }
    dend_74 { pt3dadd( 44.5221, -45.4321, -1.01307, 1.25 ) }
    dend_74 { pt3dadd( 45.3481, -46.2132, -1.34298, 1.25 ) }
    dend_74 { pt3dadd( 45.8471, -46.7488, -1.60046, 1.25 ) }
    dend_74 { pt3dadd( 46.4341, -47.4734, -1.98783, 0.81 ) }
    dend_74 { pt3dadd( 47.1275, -48.3894, -2.51999, 0.66 ) }
    dend_74 { pt3dadd( 47.4706, -48.866, -2.80723, 0.66 ) }
    dend_74 { pt3dadd( 47.7176, -49.2177, -3.00501, 0.66 ) }
    dend_74 { pt3dadd( 47.9791, -49.5375, -3.14939, 0.66 ) }
    dend_74 { pt3dadd( 48.2924, -49.851, -3.26507, 0.66 ) }
    dend_74 { pt3dadd( 49.1956, -50.6913, -3.51785, 0.66 ) }
    dend_74 { pt3dadd( 49.6272, -51.05, -3.58117, 1.11 ) }
    dend_74 { pt3dadd( 50.4925, -51.7187, -3.65802, 1.47 ) }
    dend_74 { pt3dadd( 51.3868, -52.3806, -3.70849, 1.99 ) }
    dend_74 { pt3dadd( 52.337, -53.093, -3.74263, 1.99 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 18/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 31.7496, -28.4657, 8.76615, 1.11 ) }
    dend_71 { pt3dadd( 32.8974, -29.0714, 10.7552, 1.11 ) }
    dend_71 { pt3dadd( 34.6938, -30.0394, 13.6406, 1.25 ) }
    dend_71 { pt3dadd( 35.944, -30.6394, 15.5768, 1.25 ) }
    dend_71 { pt3dadd( 37.2627, -31.1729, 17.5829, 0.74 ) }
    dend_71 { pt3dadd( 37.8157, -31.3167, 18.4033, 0.59 ) }
    dend_71 { pt3dadd( 38.3885, -31.3547, 19.2192, 0.59 ) }
    dend_71 { pt3dadd( 38.8155, -31.2921, 19.9066, 0.59 ) }
    dend_71 { pt3dadd( 39.4758, -30.9318, 20.9478, 0.44 ) }
    dend_71 { pt3dadd( 39.9092, -30.5699, 21.629, 0.44 ) }
    dend_71 { pt3dadd( 40.9911, -29.465, 23.2902, 0.44 ) }
    dend_71 { pt3dadd( 42.0935, -28.1934, 24.9969, 0.44 ) }
    dend_71 { pt3dadd( 43.7267, -26.1654, 27.4694, 0.44 ) }
    dend_71 { pt3dadd( 44.634, -25.0282, 28.762, 0.52 ) }
    dend_71 { pt3dadd( 45.2954, -24.2822, 29.6112, 0.52 ) }
    dend_71 { pt3dadd( 45.8599, -23.7924, 30.2102, 0.52 ) }
    dend_71 { pt3dadd( 46.6986, -23.3963, 30.8329, 0.52 ) }
    dend_71 { pt3dadd( 47.2672, -23.3249, 31.1404, 0.52 ) }
    dend_71 { pt3dadd( 47.6042, -23.3528, 31.2925, 0.52 ) }
    dend_71 { pt3dadd( 48.7402, -23.6403, 31.8673, 0.52 ) }
    dend_71 { pt3dadd( 51.149, -24.516, 33.1994, 0.52 ) }
    dend_71 { pt3dadd( 53.3186, -25.4842, 34.4596, 0.81 ) }
    dend_71 { pt3dadd( 54.516, -26.1267, 35.1746, 1.03 ) }
    dend_71 { pt3dadd( 55.3224, -26.6147, 35.6566, 1.03 ) }
    dend_71 { pt3dadd( 55.8829, -26.9657, 35.9669, 1.33 ) }
    dend_71 { pt3dadd( 56.4239, -27.2889, 36.2152, 1.33 ) }
    dend_71 { pt3dadd( 56.7105, -27.4466, 36.3126, 1.33 ) }
    dend_71 { pt3dadd( 58.0734, -28.0072, 36.6276, 0.59 ) }
    dend_71 { pt3dadd( 58.9349, -28.2834, 36.7937, 0.59 ) }
    dend_71 { pt3dadd( 60.7252, -28.7094, 37.1351, 0.59 ) }
    dend_71 { pt3dadd( 62.4225, -29.0301, 37.4923, 0.59 ) }
    dend_71 { pt3dadd( 63.4316, -29.2001, 37.7454, 0.59 ) }
    dend_71 { pt3dadd( 64.401, -29.3742, 38.0378, 0.37 ) }
    dend_71 { pt3dadd( 65.7723, -29.6531, 38.5647, 0.37 ) }
    dend_71 { pt3dadd( 66.0938, -29.7926, 38.7199, 0.37 ) }
    dend_71 { pt3dadd( 66.4418, -30.1488, 38.9215, 0.37 ) }
    dend_71 { pt3dadd( 67.0052, -31.0175, 39.1656, 0.37 ) }
    dend_71 { pt3dadd( 67.6276, -31.9932, 39.3105, 0.37 ) }
    dend_71 { pt3dadd( 68.0804, -32.6769, 39.3853, 0.74 ) }
    dend_71 { pt3dadd( 69.176, -34.0797, 39.4876, 1.18 ) }
    dend_71 { pt3dadd( 70.2723, -35.2946, 39.598, 0.52 ) }
    dend_71 { pt3dadd( 71.3774, -36.3322, 39.7521, 0.52 ) }
    dend_71 { pt3dadd( 72.6676, -37.341, 40.0188, 0.81 ) }
    dend_71 { pt3dadd( 73.4694, -37.8535, 40.2982, 0.81 ) }
    dend_71 { pt3dadd( 74.7011, -38.4766, 40.9114, 1.11 ) }
    dend_71 { pt3dadd( 75.1483, -38.6283, 41.2056, 1.11 ) }
    dend_71 { pt3dadd( 75.9671, -38.8004, 41.862, 1.11 ) }
    dend_71 { pt3dadd( 76.7203, -38.8822, 42.5326, 1.11 ) }
    dend_71 { pt3dadd( 77.8253, -38.9053, 43.5012, 0.66 ) }
    dend_71 { pt3dadd( 78.2839, -38.877, 43.8178, 0.66 ) }
    dend_71 { pt3dadd( 78.931, -38.7913, 44.1734, 0.66 ) }
    dend_71 { pt3dadd( 79.6257, -38.6936, 44.4673, 0.66 ) }
    dend_71 { pt3dadd( 80.2113, -38.6288, 44.66, 0.66 ) }
    dend_71 { pt3dadd( 81.1782, -38.558, 44.9402, 0.15 ) }
    dend_71 { pt3dadd( 82.441, -38.5522, 45.3527, 0.37 ) }
    dend_71 { pt3dadd( 82.8093, -38.6501, 45.6212, 0.37 ) }
    dend_71 { pt3dadd( 83.2702, -39.1099, 46.5687, 0.37 ) }
    dend_71 { pt3dadd( 83.4733, -39.4279, 47.1683, 0.37 ) }
    dend_71 { pt3dadd( 83.5736, -39.6888, 47.6365, 0.37 ) }
    dend_71 { pt3dadd( 83.6666, -40.2515, 48.6144, 0.37 ) }
    dend_71 { pt3dadd( 83.6581, -41.4427, 50.6927, 0.59 ) }
    dend_71 { pt3dadd( 83.5602, -42.3542, 52.3646, 0.59 ) }
    dend_71 { pt3dadd( 92.6767, -46.6563, 59.9223, 0.59 ) }
    dend_71 { pt3dadd( 102.018, -50.9678, 67.1938, 0.59 ) }
    dend_71 { pt3dadd( 110.832, -56.4619, 74.3259, 0.59 ) }
    dend_71 { pt3dadd( 118.276, -61.7501, 83.0075, 0.59 ) }
    dend_71 { pt3dadd( 125.96, -67.1878, 91.3808, 0.59 ) }
    dend_71 { pt3dadd( 131.292, -74.3901, 100.237, 0.59 ) }
    dend_71 { pt3dadd( 137.058, -82.9283, 107.489, 0.59 ) }
    dend_71 { pt3dadd( 144.816, -90.0314, 114.424, 0.59 ) }
    dend_71 { pt3dadd( 153.37, -94.1745, 122.695, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 89/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 13.0272, -28.4739, -5.24848, 1.55 ) }
    dend_61 { pt3dadd( 11.6016, -30.0507, -7.80174, 1.55 ) }
    dend_61 { pt3dadd( 9.87199, -31.8567, -10.6746, 1.55 ) }
    dend_61 { pt3dadd( 8.84853, -32.8719, -12.1827, 1.84 ) }
    dend_61 { pt3dadd( 8.30473, -33.4039, -12.8827, 1.84 ) }
    dend_61 { pt3dadd( 7.65089, -34.0617, -13.6433, 1.84 ) }
    dend_61 { pt3dadd( 7.198, -34.5321, -14.1057, 1.84 ) }
    dend_61 { pt3dadd( 6.54941, -35.1334, -14.6195, 1.84 ) }
    dend_61 { pt3dadd( 5.66849, -36.0168, -15.029, 1.84 ) }
    dend_61 { pt3dadd( 4.70148, -37.0429, -15.3391, 1.84 ) }
    dend_61 { pt3dadd( 4.0209, -37.7746, -15.4783, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( 3.03769, -38.9308, -15.5672, 1.18 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 1/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 13.0272, -28.4739, -5.24848, 1.25 ) }
    dend_52 { pt3dadd( 14.4748, -30.0521, -5.29208, 1.25 ) }
    dend_52 { pt3dadd( 16.1799, -31.911, -5.34345, 1.18 ) }
    dend_52 { pt3dadd( 17.3184, -33.1522, -5.37774, 1.03 ) }
    dend_52 { pt3dadd( 18.9491, -34.93, -5.42687, 1.25 ) }
    dend_52 { pt3dadd( 21.1673, -37.3484, -5.49369, 2.73 ) }
    // Section: dend_48, id: dend_48, parent: dend_24 (entry count 7/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -7.90721, -5.63362, 13.4562, 1.11 ) }
    dend_48 { pt3dadd( -7.62443, -7.74959, 13.2164, 1.11 ) }
    dend_48 { pt3dadd( -7.42877, -9.18034, 13.0427, 1.11 ) }
    dend_48 { pt3dadd( -7.15756, -11.2187, 12.7877, 1.03 ) }
    dend_48 { pt3dadd( -7.05441, -12.051, 12.6832, 1.03 ) }
    dend_48 { pt3dadd( -6.91947, -13.3331, 12.5223, 1.03 ) }
    dend_48 { pt3dadd( -6.73886, -15.5288, 12.2485, 1.18 ) }
    dend_48 { pt3dadd( -6.64207, -16.5854, 12.1529, 1.18 ) }
    dend_48 { pt3dadd( -6.59943, -17.1402, 12.1235, 1.18 ) }
    dend_48 { pt3dadd( -6.53656, -18.1443, 12.1063, 1.03 ) }
    dend_48 { pt3dadd( -6.46966, -19.455, 12.1224, 1.03 ) }
    dend_48 { pt3dadd( -6.4338, -20.1817, 12.1522, 1.03 ) }
    dend_48 { pt3dadd( -6.36546, -21.9197, 12.2764, 0.74 ) }
    dend_48 { pt3dadd( -6.29879, -22.9854, 12.3473, 0.74 ) }
    dend_48 { pt3dadd( -6.22091, -24.0042, 12.4522, 0.74 ) }
    dend_48 { pt3dadd( -6.14718, -24.9222, 12.5814, 0.74 ) }
    dend_48 { pt3dadd( -6.09179, -25.5349, 12.6743, 0.88 ) }
    dend_48 { pt3dadd( -5.96319, -26.7731, 12.8592, 0.88 ) }
    dend_48 { pt3dadd( -5.86196, -27.5627, 12.9839, 0.88 ) }
    dend_48 { pt3dadd( -5.47121, -30.0173, 13.4535, 0.88 ) }
    dend_48 { pt3dadd( -5.27581, -30.9934, 13.6563, 0.88 ) }
    dend_48 { pt3dadd( -4.95695, -32.2935, 13.9295, 0.88 ) }
    dend_48 { pt3dadd( -4.75286, -33.1875, 14.1051, 0.88 ) }
    dend_48 { pt3dadd( -4.46446, -34.6997, 14.3741, 0.66 ) }
    dend_48 { pt3dadd( -4.34958, -35.6726, 14.5116, 0.44 ) }
    dend_48 { pt3dadd( -4.30777, -36.683, 14.5691, 0.44 ) }
    dend_48 { pt3dadd( -4.31677, -37.5139, 14.5866, 0.44 ) }
    dend_48 { pt3dadd( -4.36601, -39.4194, 14.5895, 0.44 ) }
    dend_48 { pt3dadd( -4.366, -40.2635, 14.5641, 0.44 ) }
    dend_48 { pt3dadd( -4.32092, -41.0722, 14.5364, 0.44 ) }
    dend_48 { pt3dadd( -4.05175, -42.4846, 14.6106, 0.44 ) }
    dend_48 { pt3dadd( -3.74573, -43.2677, 14.7228, 0.44 ) }
    dend_48 { pt3dadd( -2.90879, -44.5126, 15.0113, 0.44 ) }
    dend_48 { pt3dadd( -2.14387, -45.2965, 15.2641, 0.44 ) }
    dend_48 { pt3dadd( -1.48563, -45.8985, 15.481, 0.44 ) }
    dend_48 { pt3dadd( -0.363113, -46.8303, 15.8659, 0.07 ) }
    dend_48 { pt3dadd( 0.179979, -47.2373, 16.0888, 0.07 ) }
    dend_48 { pt3dadd( 1.24744, -48.0174, 16.5976, 0.07 ) }
    dend_48 { pt3dadd( 1.82682, -48.4147, 16.9316, 0.07 ) }
    dend_48 { pt3dadd( 3.07797, -56.8113, 16.1771, 0.07 ) }
    dend_48 { pt3dadd( 4.46747, -65.2172, 15.9573, 0.07 ) }
    dend_48 { pt3dadd( 6.49509, -73.4087, 14.763, 0.07 ) }
    dend_48 { pt3dadd( 9.21318, -81.4426, 13.9224, 0.07 ) }
    dend_48 { pt3dadd( 13.7089, -88.6832, 13.9038, 0.07 ) }
    dend_48 { pt3dadd( 17.0209, -96.3393, 12.1567, 0.07 ) }
    dend_48 { pt3dadd( 20.0117, -104.257, 11.1504, 0.07 ) }
    dend_48 { pt3dadd( 22.8471, -111.926, 8.74431, 0.07 ) }
    dend_48 { pt3dadd( 26.1517, -118.705, 4.77523, 0.07 ) }
    dend_48 { pt3dadd( 29.1446, -125.604, 0.765055, 0.07 ) }
    dend_48 { pt3dadd( 31.7957, -132.807, -2.94142, 0.07 ) }
    dend_48 { pt3dadd( 34.9504, -140.09, -6.04663, 0.07 ) }
    dend_48 { pt3dadd( 38.8656, -147.255, -8.49078, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 59/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.90721, -5.63362, 13.4562, 1.55 ) }
    dend_25 { pt3dadd( -9.38099, -5.48914, 14.2947, 1.55 ) }
    dend_25 { pt3dadd( -10.8586, -5.45065, 15.1596, 1.55 ) }
    dend_25 { pt3dadd( -12.6342, -5.40439, 16.199, 1.55 ) }
    dend_25 { pt3dadd( -13.4429, -5.38333, 16.6724, 1.55 ) }
    dend_25 { pt3dadd( -14.4332, -5.35753, 17.2521, 1.55 ) }
    dend_25 { pt3dadd( -16.2832, -5.30933, 18.335, 1.55 ) }
    dend_25 { pt3dadd( -17.9173, -5.38051, 19.2628, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 67/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.6043, 17.2095, 11.1986, 2.14 ) }
    dend_9 { pt3dadd( 13.2876, 19.6192, 12.1822, 2.14 ) }
    dend_9 { pt3dadd( 15.5563, 21.4555, 13.1526, 2.14 ) }
    dend_9 { pt3dadd( 18.0342, 23.4612, 14.2124, 2.43 ) }
    dend_9 { pt3dadd( 19.6512, 24.77, 14.9041, 2.43 ) }
    dend_9 { pt3dadd( 20.4357, 25.405, 15.2396, 2.43 ) }
    dend_9 { pt3dadd( 22.9799, 27.4643, 16.3278, 2.28 ) }
    dend_9 { pt3dadd( 25.992, 29.5961, 17.8144, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.6043, 17.2095, 11.1986, 0.81 ) }
    dend_6 { pt3dadd( 12.8427, 16.6204, 11.6025, 0.81 ) }
    dend_6 { pt3dadd( 14.2977, 16.2762, 11.977, 0.81 ) }
    dend_6 { pt3dadd( 15.6075, 16.0082, 12.5584, 0.81 ) }
    dend_6 { pt3dadd( 17.1089, 15.7544, 13.6388, 0.66 ) }
    dend_6 { pt3dadd( 18.0907, 15.6314, 14.5851, 0.66 ) }
    dend_6 { pt3dadd( 18.5128, 15.5923, 15.0339, 0.66 ) }
    dend_6 { pt3dadd( 19.0288, 15.5739, 15.7281, 0.96 ) }
    dend_6 { pt3dadd( 20.1923, 15.6126, 17.3838, 1.33 ) }
    dend_6 { pt3dadd( 21.1731, 15.7041, 18.72, 1.77 ) }
    dend_6 { pt3dadd( 22.1951, 15.8009, 19.8988, 1.33 ) }
    dend_6 { pt3dadd( 22.9952, 15.8219, 20.5419, 0.44 ) }
    dend_6 { pt3dadd( 24.0883, 15.8144, 21.1657, 0.44 ) }
    dend_6 { pt3dadd( 24.7826, 15.8165, 21.4758, 0.44 ) }
    dend_6 { pt3dadd( 25.8131, 15.8626, 21.8214, 0.44 ) }
    dend_6 { pt3dadd( 27.5565, 16.0159, 22.357, 0.44 ) }
    dend_6 { pt3dadd( 28.8075, 16.1551, 22.7461, 0.44 ) }
    dend_6 { pt3dadd( 31.1357, 16.438, 23.6168, 0.66 ) }
    dend_6 { pt3dadd( 32.304, 16.5722, 24.1412, 0.66 ) }
    dend_6 { pt3dadd( 33.5595, 16.7004, 24.8005, 0.66 ) }
    dend_6 { pt3dadd( 34.5038, 16.7784, 25.3954, 0.44 ) }
    dend_6 { pt3dadd( 35.1094, 16.7979, 25.8889, 0.44 ) }
    dend_6 { pt3dadd( 36.0997, 16.7167, 26.9228, 0.44 ) }
    dend_6 { pt3dadd( 36.503, 16.541, 27.5367, 1.11 ) }
    dend_6 { pt3dadd( 36.7757, 16.375, 28.0482, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( 36.9887, 16.2357, 28.5187, 1.11 ) }
    dend_6 { pt3dadd( 37.2936, 16.0944, 29.244, 1.4 ) }
    dend_6 { pt3dadd( 37.5758, 16.103, 29.9854, 1.77 ) }
    dend_6 { pt3dadd( 38.0495, 16.5437, 31.4342, 1.77 ) }
    dend_6 { pt3dadd( 38.4074, 17.129, 32.6381, 0.59 ) }
    dend_6 { pt3dadd( 38.5523, 17.4413, 33.1433, 0.59 ) }
    dend_6 { pt3dadd( 38.7611, 17.9484, 33.8456, 0.59 ) }
    dend_6 { pt3dadd( 39.1384, 18.8502, 34.9025, 0.59 ) }
    dend_6 { pt3dadd( 39.9001, 20.583, 36.6903, 0.81 ) }
    dend_6 { pt3dadd( 40.0507, 20.91, 37.0017, 0.81 ) }
    dend_6 { pt3dadd( 40.2457, 21.2884, 37.4018, 0.81 ) }
    dend_6 { pt3dadd( 40.4415, 21.5886, 37.7675, 0.81 ) }
    dend_6 { pt3dadd( 40.9914, 22.1924, 38.6378, 0.52 ) }
    dend_6 { pt3dadd( 41.4847, 22.5306, 39.2218, 0.29 ) }
    dend_6 { pt3dadd( 41.7623, 22.6669, 39.3977, 0.29 ) }
    dend_6 { pt3dadd( 42.3998, 22.913, 39.7673, 0.29 ) }
    dend_6 { pt3dadd( 43.5678, 23.277, 40.3951, 0.29 ) }
    dend_6 { pt3dadd( 52.612, 27.8976, 47.1643, 0.29 ) }
    dend_6 { pt3dadd( 61.9227, 33.4248, 52.7971, 0.29 ) }
    dend_6 { pt3dadd( 72.3916, 38.6317, 56.2983, 0.29 ) }
    dend_6 { pt3dadd( 82.6538, 44.0457, 60.0856, 0.29 ) }
    dend_6 { pt3dadd( 92.2555, 50.9028, 63.2092, 0.29 ) }
    dend_6 { pt3dadd( 101.152, 59.1278, 64.6825, 0.29 ) }
    dend_6 { pt3dadd( 109.828, 67.7115, 64.7985, 0.29 ) }
    dend_6 { pt3dadd( 116.452, 77.6422, 67.342, 0.29 ) }
    dend_6 { pt3dadd( 120.607, 88.8189, 69.9476, 0.29 ) }
    dend_6 { pt3dadd( 125.829, 99.3964, 73.0808, 0.29 ) }
    dend_6 { pt3dadd( 131.28, 109.981, 75.7673, 0.29 ) }
    dend_6 { pt3dadd( 138.233, 119.901, 77.2511, 0.29 ) }
    dend_6 { pt3dadd( 146.516, 128.166, 80.7217, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 30/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -22.2227, 131.792, -21.2581, 0.29 ) }
    dend_4 { pt3dadd( -21.361, 133.395, -23.733, 0.29 ) }
    dend_4 { pt3dadd( -20.9888, 134.016, -24.7845, 0.29 ) }
    dend_4 { pt3dadd( -20.6472, 134.558, -25.5917, 0.15 ) }
    dend_4 { pt3dadd( -20.2443, 135.212, -26.4463, 0.22 ) }
    dend_4 { pt3dadd( -19.1667, 136.927, -28.5582, 0.29 ) }
    dend_4 { pt3dadd( -18.1326, 138.552, -30.3707, 0.29 ) }
    dend_4 { pt3dadd( -17.4299, 139.651, -31.414, 0.29 ) }
    dend_4 { pt3dadd( -16.3541, 141.419, -32.872, 0.22 ) }
    dend_4 { pt3dadd( -15.0953, 143.611, -34.3794, 0.22 ) }
    dend_4 { pt3dadd( -14.7804, 144.191, -34.6991, 0.22 ) }
    dend_4 { pt3dadd( -13.5936, 146.604, -35.5872, 0.15 ) }
    dend_4 { pt3dadd( -12.9055, 148.161, -36.038, 0.15 ) }
    dend_4 { pt3dadd( -12.3598, 149.487, -36.3712, 0.07 ) }
    dend_4 { pt3dadd( -11.2802, 152.306, -37.0252, 0.07 ) }
    dend_4 { pt3dadd( -10.8243, 153.564, -37.2674, 0.07 ) }
    dend_4 { pt3dadd( -9.53035, 157.294, -37.8926, 0.07 ) }
    dend_4 { pt3dadd( -8.95314, 159.029, -38.1638, 0.22 ) }
    dend_4 { pt3dadd( -8.59754, 160.129, -38.327, 0.22 ) }
    dend_4 { pt3dadd( -8.10948, 161.709, -38.5721, 0.22 ) }
    dend_4 { pt3dadd( -7.76102, 162.878, -38.7738, 0.22 ) }
    dend_4 { pt3dadd( -6.94744, 165.61, -39.2964, 0.22 ) }
    dend_4 { pt3dadd( -6.5535, 166.956, -39.5659, 0.22 ) }
    dend_4 { pt3dadd( -6.0125, 168.628, -39.9239, 0.22 ) }
    dend_4 { pt3dadd( -5.49574, 170.03, -40.3125, 0.15 ) }
    dend_4 { pt3dadd( -4.96075, 171.296, -40.777, 0.15 ) }
    dend_4 { pt3dadd( -4.31318, 172.627, -41.3695, 0.15 ) }
    dend_4 { pt3dadd( -3.87002, 173.448, -41.7826, 0.15 ) }
    dend_4 { pt3dadd( -2.72717, 175.446, -42.8116, 0.15 ) }
    dend_4 { pt3dadd( -1.86467, 176.968, -43.7284, 0.15 ) }
    dend_4 { pt3dadd( -1.32545, 178.035, -44.3843, 0.15 ) }
    dend_4 { pt3dadd( -0.794114, 179.28, -45.1465, 0.15 ) }
    dend_4 { pt3dadd( -0.329011, 180.64, -45.9671, 0.15 ) }
    dend_4 { pt3dadd( 0.105137, 182.33, -46.9245, 0.15 ) }
    dend_4 { pt3dadd( 0.588231, 185.215, -48.3298, 0.15 ) }
    dend_4 { pt3dadd( 0.714032, 186.582, -48.8986, 0.15 ) }
    dend_4 { pt3dadd( 0.806517, 188.584, -49.6258, 0.07 ) }
    dend_4 { pt3dadd( 0.81648, 189.973, -50.0946, 0.07 ) }
    dend_4 { pt3dadd( 0.778279, 191.179, -50.5074, 0.07 ) }
    dend_4 { pt3dadd( 0.700307, 192.96, -51.0798, 0.07 ) }
    dend_4 { pt3dadd( 0.663126, 194.361, -51.4646, 0.07 ) }
    dend_4 { pt3dadd( 0.648901, 196.217, -51.9914, 0.07 ) }
    dend_4 { pt3dadd( 0.646347, 198.86, -52.759, 0.07 ) }
    dend_4 { pt3dadd( 0.733592, 200.921, -53.3197, 0.07 ) }
    dend_4 { pt3dadd( 0.941385, 203.086, -53.8448, 0.07 ) }
    dend_4 { pt3dadd( 1.46863, 206.404, -54.5491, 0.07 ) }
    dend_4 { pt3dadd( 2.04845, 209.024, -55.0024, 0.07 ) }
    dend_4 { pt3dadd( 2.77375, 211.676, -55.3442, 0.07 ) }
    dend_4 { pt3dadd( 3.6349, 214.182, -55.625, 0.07 ) }
    dend_4 { pt3dadd( 4.54687, 216.298, -55.9274, 0.07 ) }
    dend_4 { pt3dadd( 5.87535, 218.795, -56.5133, 0.07 ) }
    dend_4 { pt3dadd( 6.95343, 220.307, -57.076, 0.07 ) }
    dend_4 { pt3dadd( 7.43207, 220.843, -57.4333, 0.07 ) }
    dend_4 { pt3dadd( 8.81584, 222.15, -58.8516, 0.07 ) }
    dend_4 { pt3dadd( 10.521, 223.642, -61.1437, 0.07 ) }
    dend_4 { pt3dadd( 11.5853, 224.542, -62.9019, 0.07 ) }
    dend_4 { pt3dadd( 12.6436, 225.461, -65.0095, 0.07 ) }
    dend_4 { pt3dadd( 14.413, 227.185, -69.125, 0.07 ) }
    dend_4 { pt3dadd( 15.039, 227.924, -70.817, 0.07 ) }
    dend_4 { pt3dadd( 15.2964, 228.291, -71.637, 0.07 ) }
    dend_4 { pt3dadd( 15.7344, 229.155, -73.4744, 0.07 ) }
    dend_4 { pt3dadd( 15.9937, 229.965, -75.1434, 0.07 ) }
    dend_4 { pt3dadd( 16.0575, 230.562, -76.278, 0.07 ) }
    dend_4 { pt3dadd( 16.1185, 231.196, -77.1404, 0.07 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -22.2227, 131.792, -21.2581, 0.07 ) }
    dend_1 { pt3dadd( -22.4451, 133.878, -21.407, 0.07 ) }
    dend_1 { pt3dadd( -22.609, 135.336, -21.4756, 0.15 ) }
    dend_1 { pt3dadd( -22.7587, 137.044, -21.5295, 0.15 ) }
    dend_1 { pt3dadd( -23.0544, 140.052, -21.5961, 0.15 ) }
    dend_1 { pt3dadd( -23.2105, 141.414, -21.6014, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -23.4408, 143.382, -21.5677, 0.07 ) }
    dend_1 { pt3dadd( -23.4952, 143.873, -21.53, 0.07 ) }
    dend_1 { pt3dadd( -23.8725, 146.518, -21.133, 0.07 ) }
    dend_1 { pt3dadd( -24.1955, 148.672, -20.7572, 0.07 ) }
    dend_1 { pt3dadd( -24.5011, 150.692, -20.3402, 0.07 ) }
    dend_1 { pt3dadd( -24.7235, 152.06, -20.0323, 0.07 ) }
    dend_1 { pt3dadd( -25.05, 153.943, -19.5722, 0.07 ) }
    dend_1 { pt3dadd( -25.4683, 156.111, -18.9443, 0.07 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 20.0449, -42.9357, -2.55963, 0.287701 ) }
    axon_1 { pt3dadd( 26.5004, -56.4755, -2.55963, 0.287701 ) }
    axon_1 { pt3dadd( 32.9559, -70.0153, -2.55963, 0.287701 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 11/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 52.337, -53.093, -3.74263, 0.29 ) }
    dend_76 { pt3dadd( 53.1178, -53.4264, -4.51064, 0.29 ) }
    dend_76 { pt3dadd( 53.8014, -53.7098, -5.16533, 0.44 ) }
    dend_76 { pt3dadd( 54.4452, -53.9971, -5.73267, 0.44 ) }
    dend_76 { pt3dadd( 55.7853, -54.6655, -6.79444, 0.44 ) }
    dend_76 { pt3dadd( 56.0372, -54.8088, -6.99682, 0.44 ) }
    dend_76 { pt3dadd( 56.6569, -55.2024, -7.47685, 0.44 ) }
    dend_76 { pt3dadd( 57.0651, -55.5036, -7.7919, 0.44 ) }
    dend_76 { pt3dadd( 58.0187, -56.2884, -8.43322, 0.44 ) }
    dend_76 { pt3dadd( 58.784, -56.959, -8.86294, 0.44 ) }
    dend_76 { pt3dadd( 59.5651, -57.6829, -9.22828, 0.29 ) }
    dend_76 { pt3dadd( 60.531, -58.6354, -9.66016, 0.29 ) }
    dend_76 { pt3dadd( 61.1231, -59.2517, -9.9075, 0.29 ) }
    dend_76 { pt3dadd( 62.4184, -60.6199, -10.3879, 0.29 ) }
    dend_76 { pt3dadd( 63.161, -61.4071, -10.6403, 0.29 ) }
    dend_76 { pt3dadd( 63.7794, -62.0406, -10.8351, 0.22 ) }
    dend_76 { pt3dadd( 64.3482, -62.5913, -10.9918, 0.22 ) }
    dend_76 { pt3dadd( 64.9755, -63.1606, -11.168, 0.22 ) }
    dend_76 { pt3dadd( 66.017, -64.0491, -11.4644, 0.22 ) }
    dend_76 { pt3dadd( 66.8241, -64.6627, -11.7084, 0.22 ) }
    dend_76 { pt3dadd( 67.2426, -64.9481, -11.8315, 0.22 ) }
    dend_76 { pt3dadd( 67.5936, -65.1644, -11.9491, 0.22 ) }
    dend_76 { pt3dadd( 68.2722, -65.5394, -12.1909, 0.22 ) }
    dend_76 { pt3dadd( 68.5396, -65.6767, -12.2849, 0.07 ) }
    dend_76 { pt3dadd( 68.8601, -65.8512, -12.4117, 0.07 ) }
    dend_76 { pt3dadd( 69.3106, -66.1206, -12.6199, 0.07 ) }
    dend_76 { pt3dadd( 70.3037, -66.7597, -13.1168, 0.07 ) }
    dend_76 { pt3dadd( 70.6882, -67.028, -13.3249, 0.07 ) }
    dend_76 { pt3dadd( 72.3017, -68.2371, -14.3256, 0.07 ) }
    dend_76 { pt3dadd( 73.173, -68.9329, -14.9397, 0.07 ) }
    dend_76 { pt3dadd( 74.0793, -69.713, -15.6532, 0.07 ) }
    dend_76 { pt3dadd( 74.4558, -70.0697, -15.9871, 0.07 ) }
    dend_76 { pt3dadd( 75.023, -70.6982, -16.5782, 0.07 ) }
    dend_76 { pt3dadd( 75.5082, -71.352, -17.1936, 0.15 ) }
    dend_76 { pt3dadd( 75.8315, -71.9266, -17.7134, 0.15 ) }
    dend_76 { pt3dadd( 75.9681, -72.1969, -17.9281, 0.15 ) }
    dend_76 { pt3dadd( 76.0504, -72.3606, -18.0392, 0.15 ) }
    dend_76 { pt3dadd( 76.553, -73.2724, -18.6737, 0.15 ) }
    dend_76 { pt3dadd( 77.0767, -74.1073, -19.2897, 0.15 ) }
    dend_76 { pt3dadd( 77.463, -74.6394, -19.7036, 0.15 ) }
    dend_76 { pt3dadd( 77.7795, -74.9826, -20.0003, 0.15 ) }
    dend_76 { pt3dadd( 79.1319, -76.23, -21.2431, 0.07 ) }
    dend_76 { pt3dadd( 80.1514, -77.0174, -22.1607, 0.07 ) }
    dend_76 { pt3dadd( 80.642, -77.3222, -22.5953, 0.07 ) }
    dend_76 { pt3dadd( 81.1267, -77.5828, -23.0057, 0.07 ) }
    dend_76 { pt3dadd( 82.5866, -78.2852, -24.246, 0.07 ) }
    dend_76 { pt3dadd( 83.2682, -78.5786, -24.8061, 0.07 ) }
    dend_76 { pt3dadd( 83.7049, -78.7556, -25.1307, 0.07 ) }
    dend_76 { pt3dadd( 84.4979, -79.1203, -25.648, 0.07 ) }
    dend_76 { pt3dadd( 85.0797, -79.4286, -25.9925, 0.07 ) }
    dend_76 { pt3dadd( 85.8159, -79.8602, -26.372, 0.07 ) }
    dend_76 { pt3dadd( 86.4464, -80.2465, -26.6128, 0.07 ) }
    dend_76 { pt3dadd( 88.0712, -81.2427, -27.0363, 0.07 ) }
    dend_76 { pt3dadd( 89.3548, -82.0368, -27.2824, 0.07 ) }
    dend_76 { pt3dadd( 90.1664, -82.5471, -27.3864, 0.07 ) }
    dend_76 { pt3dadd( 91.6626, -83.5066, -27.4942, 0.07 ) }
    dend_76 { pt3dadd( 93.8129, -84.9139, -27.5172, 0.07 ) }
    dend_76 { pt3dadd( 95.1433, -85.7741, -27.4787, 0.07 ) }
    dend_76 { pt3dadd( 96.3689, -86.5236, -27.3974, 0.07 ) }
    dend_76 { pt3dadd( 97.5704, -87.192, -27.301, 0.07 ) }
    dend_76 { pt3dadd( 98.8283, -87.8165, -27.2184, 0.07 ) }
    dend_76 { pt3dadd( 99.9072, -88.2785, -27.1846, 0.07 ) }
    dend_76 { pt3dadd( 101.038, -88.6763, -27.2065, 0.07 ) }
    dend_76 { pt3dadd( 101.974, -88.9266, -27.2657, 0.07 ) }
    dend_76 { pt3dadd( 103.014, -89.0997, -27.3758, 0.07 ) }
    dend_76 { pt3dadd( 103.901, -89.1596, -27.5226, 0.07 ) }
    dend_76 { pt3dadd( 105.628, -89.1543, -27.8581, 0.07 ) }
    dend_76 { pt3dadd( 105.999, -89.1428, -27.9287, 0.07 ) }
    dend_76 { pt3dadd( 106.719, -89.1401, -28.0458, 0.07 ) }
    dend_76 { pt3dadd( 108.171, -89.1914, -28.2273, 0.07 ) }
    dend_76 { pt3dadd( 109.565, -89.2925, -28.2942, 0.07 ) }
    dend_76 { pt3dadd( 111.08, -89.3821, -28.2182, 0.07 ) }
    dend_76 { pt3dadd( 111.622, -89.4068, -28.1373, 0.07 ) }
    dend_76 { pt3dadd( 113.127, -89.5033, -27.803, 0.07 ) }
    dend_76 { pt3dadd( 114.343, -89.5935, -27.4503, 0.07 ) }
    dend_76 { pt3dadd( 116.112, -89.7133, -26.7939, 0.07 ) }
    dend_76 { pt3dadd( 117.648, -89.8024, -26.16, 0.07 ) }
    dend_76 { pt3dadd( 118.451, -89.8383, -25.809, 0.07 ) }
    dend_76 { pt3dadd( 119.146, -89.8455, -25.4961, 0.07 ) }
    dend_76 { pt3dadd( 120.651, -89.7719, -24.7767, 0.07 ) }
    dend_76 { pt3dadd( 122.179, -89.6592, -24.0405, 0.07 ) }
    dend_76 { pt3dadd( 122.909, -89.5989, -23.733, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 93/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 52.337, -53.093, -3.74263, 2.5 ) }
    dend_75 { pt3dadd( 52.0993, -53.8434, -3.60606, 2.5 ) }
    dend_75 { pt3dadd( 51.3989, -56.2455, -3.12617, 0.52 ) }
    dend_75 { pt3dadd( 51.238, -57.0848, -2.90166, 0.52 ) }
    dend_75 { pt3dadd( 51.0543, -58.2973, -2.58028, 0.52 ) }
    dend_75 { pt3dadd( 50.9346, -59.2019, -2.29729, 0.52 ) }
    dend_75 { pt3dadd( 50.7679, -60.3611, -1.88377, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_75 { pt3dadd( 50.6896, -60.9311, -1.65404, 0.52 ) }
    dend_75 { pt3dadd( 50.3576, -63.6983, -0.411113, 0.52 ) }
    dend_75 { pt3dadd( 50.2718, -65.0796, 0.298422, 0.37 ) }
    dend_75 { pt3dadd( 50.2315, -66.7699, 1.22454, 0.52 ) }
    dend_75 { pt3dadd( 50.2338, -68.1625, 1.99154, 0.52 ) }
    dend_75 { pt3dadd( 50.2437, -69.675, 2.86018, 0.52 ) }
    dend_75 { pt3dadd( 50.2331, -70.7536, 3.47592, 0.52 ) }
    dend_75 { pt3dadd( 50.1214, -74.4314, 5.58682, 0.37 ) }
    dend_75 { pt3dadd( 50.0888, -75.3593, 6.11651, 0.37 ) }
    dend_75 { pt3dadd( 50.0489, -76.2976, 6.60126, 0.07 ) }
    dend_75 { pt3dadd( 49.9992, -77.3497, 7.10818, 0.22 ) }
    dend_75 { pt3dadd( 49.786, -79.3302, 8.03443, 0.22 ) }
    dend_75 { pt3dadd( 49.5562, -80.5819, 8.60873, 0.07 ) }
    dend_75 { pt3dadd( 49.4287, -81.1448, 8.85404, 0.07 ) }
    dend_75 { pt3dadd( 49.1839, -82.353, 9.36252, 0.22 ) }
    dend_75 { pt3dadd( 49.0783, -82.9981, 9.62527, 0.22 ) }
    dend_75 { pt3dadd( 48.8667, -84.9305, 10.3856, 0.22 ) }
    dend_75 { pt3dadd( 48.7943, -86.705, 11.0945, 0.22 ) }
    dend_75 { pt3dadd( 48.7998, -89.0347, 11.9929, 0.44 ) }
    dend_75 { pt3dadd( 48.8211, -90.2235, 12.4587, 0.44 ) }
    dend_75 { pt3dadd( 48.8474, -91.0626, 12.7912, 0.44 ) }
    dend_75 { pt3dadd( 48.8768, -91.7535, 13.0532, 0.44 ) }
    dend_75 { pt3dadd( 48.9512, -92.5815, 13.3551, 0.44 ) }
    dend_75 { pt3dadd( 49.0176, -93.4161, 13.6595, 0.44 ) }
    dend_75 { pt3dadd( 49.0628, -94.245, 13.9914, 0.44 ) }
    dend_75 { pt3dadd( 49.1083, -95.1587, 14.3836, 0.44 ) }
    dend_75 { pt3dadd( 49.1659, -96.3292, 14.8969, 0.44 ) }
    dend_75 { pt3dadd( 49.3693, -100.305, 16.668, 0.37 ) }
    dend_75 { pt3dadd( 49.42, -101.042, 16.9971, 0.15 ) }
    dend_75 { pt3dadd( 49.5062, -101.863, 17.3578, 0.15 ) }
    dend_75 { pt3dadd( 49.6469, -102.762, 17.7432, 0.15 ) }
    dend_75 { pt3dadd( 49.7924, -103.368, 18.0087, 0.15 ) }
    dend_75 { pt3dadd( 49.8872, -103.679, 18.1453, 0.15 ) }
    dend_75 { pt3dadd( 50.3876, -105.092, 18.7751, 0.15 ) }
    dend_75 { pt3dadd( 50.6422, -105.787, 19.0826, 0.15 ) }
    dend_75 { pt3dadd( 51.2805, -107.383, 19.8372, 0.15 ) }
    dend_75 { pt3dadd( 52.1819, -109.436, 20.9299, 0.15 ) }
    dend_75 { pt3dadd( 52.7355, -110.677, 21.6096, 0.15 ) }
    dend_75 { pt3dadd( 53.1662, -111.609, 22.1375, 0.15 ) }
    dend_75 { pt3dadd( 53.5762, -112.447, 22.644, 0.15 ) }
    dend_75 { pt3dadd( 54.2912, -113.831, 23.5339, 0.15 ) }
    dend_75 { pt3dadd( 54.9074, -114.946, 24.3513, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 42/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 153.37, -94.1745, 122.695, 0.29 ) }
    dend_73 { pt3dadd( 161.643, -93.4177, 127.58, 0.29 ) }
    dend_73 { pt3dadd( 170.294, -94.1867, 131.757, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 45/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 153.37, -94.1745, 122.695, 0.07 ) }
    dend_72 { pt3dadd( 155.543, -103.921, 123.685, 0.29 ) }
    dend_72 { pt3dadd( 156.352, -113.644, 126.026, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_61 (entry count 48/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 3.03769, -38.9308, -15.5672, 0.66 ) }
    dend_67 { pt3dadd( 0.596382, -40.2403, -13.7441, 0.66 ) }
    dend_67 { pt3dadd( 0.426221, -40.3476, -13.6348, 0.66 ) }
    dend_67 { pt3dadd( -0.468643, -41.0587, -13.0276, 0.37 ) }
    dend_67 { pt3dadd( -1.39915, -42.0117, -12.3549, 0.37 ) }
    dend_67 { pt3dadd( -2.30328, -43.1776, -11.6502, 0.37 ) }
    dend_67 { pt3dadd( -2.82959, -44.0107, -11.2038, 0.37 ) }
    dend_67 { pt3dadd( -3.30189, -45.0141, -10.8487, 0.37 ) }
    dend_67 { pt3dadd( -3.63538, -46.3305, -10.4222, 0.37 ) }
    dend_67 { pt3dadd( -3.74543, -47.6377, -10.0052, 0.59 ) }
    dend_67 { pt3dadd( -3.69464, -48.6732, -9.66768, 0.59 ) }
    dend_67 { pt3dadd( -3.55124, -49.6958, -9.3077, 0.59 ) }
    dend_67 { pt3dadd( -3.36248, -50.718, -8.92431, 0.59 ) }
    dend_67 { pt3dadd( -2.85556, -53.3115, -7.9172, 0.59 ) }
    dend_67 { pt3dadd( -2.6726, -54.3998, -7.49659, 0.44 ) }
    dend_67 { pt3dadd( -2.53508, -55.286, -7.14686, 0.44 ) }
    dend_67 { pt3dadd( -2.40275, -56.198, -6.79002, 0.44 ) }
    dend_67 { pt3dadd( -2.23363, -57.2028, -6.42049, 0.44 ) }
    dend_67 { pt3dadd( -2.02995, -58.3515, -6.01421, 0.44 ) }
    dend_67 { pt3dadd( -1.81906, -59.7078, -5.57102, 0.44 ) }
    dend_67 { pt3dadd( -1.71245, -60.5298, -5.31194, 0.44 ) }
    dend_67 { pt3dadd( -1.63003, -61.3234, -5.06658, 0.44 ) }
    dend_67 { pt3dadd( -1.48201, -63.0149, -4.50759, 0.44 ) }
    dend_67 { pt3dadd( -1.38318, -64.2266, -4.01695, 0.59 ) }
    dend_67 { pt3dadd( -1.27708, -65.5339, -3.41058, 0.59 ) }
    dend_67 { pt3dadd( -1.17502, -66.8552, -2.74983, 0.59 ) }
    dend_67 { pt3dadd( -1.03282, -68.9523, -1.66483, 0.44 ) }
    dend_67 { pt3dadd( -0.949693, -70.4735, -0.883924, 0.15 ) }
    dend_67 { pt3dadd( -0.884073, -72.1426, -0.0640894, 0.15 ) }
    dend_67 { pt3dadd( -0.823833, -72.9758, 0.299697, 0.37 ) }
    dend_67 { pt3dadd( -0.736213, -73.8638, 0.636684, 0.37 ) }
    dend_67 { pt3dadd( -0.637493, -74.8361, 0.935564, 0.37 ) }
    dend_67 { pt3dadd( -0.492953, -76.3699, 1.26235, 0.37 ) }
    dend_67 { pt3dadd( -0.347668, -78.074, 1.42483, 0.37 ) }
    dend_67 { pt3dadd( -0.259145, -79.7258, 1.47234, 0.37 ) }
    dend_67 { pt3dadd( -0.21953, -81.3704, 1.48321, 0.37 ) }
    dend_67 { pt3dadd( -0.261039, -82.4068, 1.48054, 0.37 ) }
    dend_67 { pt3dadd( -0.498343, -84.9423, 1.46058, 0.37 ) }
    dend_67 { pt3dadd( -0.751963, -86.9083, 1.4308, 0.07 ) }
    dend_67 { pt3dadd( -0.933973, -88.013, 1.40579, 0.07 ) }
    dend_67 { pt3dadd( -1.1908, -89.278, 1.37815, 0.07 ) }
    dend_67 { pt3dadd( -1.76971, -91.7963, 1.35453, 0.07 ) }
    dend_67 { pt3dadd( -1.9396, -92.496, 1.35287, 0.22 ) }
    dend_67 { pt3dadd( -2.12965, -93.1904, 1.35305, 0.22 ) }
    dend_67 { pt3dadd( -2.39791, -94.1917, 1.33891, 0.22 ) }
    dend_67 { pt3dadd( -2.56209, -94.9463, 1.2933, 0.22 ) }
    dend_67 { pt3dadd( -2.80708, -96.4764, 1.14009, 0.22 ) }
    dend_67 { pt3dadd( -2.99819, -98.9513, 0.898124, 0.22 ) }
    dend_67 { pt3dadd( -3.03943, -99.8087, 0.832064, 0.22 ) }
    dend_67 { pt3dadd( -3.0461, -100.829, 0.797544, 0.22 ) }
    dend_67 { pt3dadd( -2.99676, -101.65, 0.823413, 0.22 ) }
    dend_67 { pt3dadd( -2.87942, -102.569, 0.933544, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_67 { pt3dadd( -2.61817, -103.967, 1.26999, 0.29 ) }
    dend_67 { pt3dadd( -2.45521, -104.744, 1.58581, 0.29 ) }
    dend_67 { pt3dadd( -2.19906, -106.162, 2.35212, 0.29 ) }
    dend_67 { pt3dadd( -2.09176, -107.074, 2.90874, 0.29 ) }
    dend_67 { pt3dadd( -2.0131, -108.245, 3.6536, 0.29 ) }
    dend_67 { pt3dadd( -1.98574, -109.107, 4.21286, 0.29 ) }
    dend_67 { pt3dadd( -1.98398, -110.557, 5.10859, 0.29 ) }
    dend_67 { pt3dadd( -2.04197, -112.403, 6.18497, 0.29 ) }
    dend_67 { pt3dadd( -2.15863, -113.889, 6.98968, 0.15 ) }
    dend_67 { pt3dadd( -2.22921, -114.544, 7.30287, 0.15 ) }
    dend_67 { pt3dadd( -2.30015, -115.177, 7.56892, 0.15 ) }
    dend_67 { pt3dadd( -2.48729, -116.872, 8.12028, 0.15 ) }
    dend_67 { pt3dadd( -2.6805, -118.605, 8.58275, 0.15 ) }
    dend_67 { pt3dadd( -2.80726, -119.819, 8.84108, 0.15 ) }
    dend_67 { pt3dadd( -2.9435, -121.226, 9.12318, 0.15 ) }
    dend_67 { pt3dadd( -3.05697, -122.352, 9.33399, 0.15 ) }
    dend_67 { pt3dadd( -3.26861, -124.392, 9.67876, 0.15 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 17/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 3.03769, -38.9308, -15.5672, 0.52 ) }
    dend_62 { pt3dadd( 2.74508, -39.5632, -16.212, 0.52 ) }
    dend_62 { pt3dadd( 2.62161, -40.0199, -16.6505, 0.52 ) }
    dend_62 { pt3dadd( 2.43262, -41.0528, -17.6344, 0.74 ) }
    dend_62 { pt3dadd( 2.25682, -41.9502, -18.5172, 0.74 ) }
    dend_62 { pt3dadd( 2.12985, -42.4441, -19.0179, 0.74 ) }
    dend_62 { pt3dadd( 1.7559, -43.5372, -20.1621, 0.74 ) }
    dend_62 { pt3dadd( 1.49382, -44.2694, -20.8652, 0.74 ) }
    dend_62 { pt3dadd( 1.25842, -44.8127, -21.3551, 0.74 ) }
    dend_62 { pt3dadd( 0.911296, -45.3419, -21.8013, 0.74 ) }
    dend_62 { pt3dadd( 0.260178, -45.9678, -22.3331, 1.4 ) }
    dend_62 { pt3dadd( -0.363682, -46.4211, -22.712, 1.4 ) }
    dend_62 { pt3dadd( -1.12785, -46.875, -23.0456, 1.4 ) }
    dend_62 { pt3dadd( -1.82264, -47.2642, -23.3005, 1.69 ) }
    dend_62 { pt3dadd( -3.48204, -48.1674, -23.8437, 1.69 ) }
    dend_62 { pt3dadd( -4.95767, -49.0199, -24.2901, 1.69 ) }
    dend_62 { pt3dadd( -5.81717, -49.5538, -24.5385, 1.69 ) }
    dend_62 { pt3dadd( -7.13706, -50.472, -24.946, 1.11 ) }
    dend_62 { pt3dadd( -8.05195, -51.1932, -25.2663, 0.88 ) }
    dend_62 { pt3dadd( -8.44041, -51.5738, -25.4213, 0.88 ) }
    dend_62 { pt3dadd( -9.18216, -52.5623, -25.8194, 0.88 ) }
    dend_62 { pt3dadd( -9.48445, -53.1287, -26.0756, 0.88 ) }
    dend_62 { pt3dadd( -9.86025, -54.0006, -26.5232, 0.88 ) }
    dend_62 { pt3dadd( -10.1536, -54.7513, -26.9537, 1.18 ) }
    dend_62 { pt3dadd( -10.4741, -55.4792, -27.4075, 1.18 ) }
    dend_62 { pt3dadd( -11.1623, -56.6654, -28.2837, 1.47 ) }
    dend_62 { pt3dadd( -11.5481, -57.1402, -28.6902, 1.47 ) }
    dend_62 { pt3dadd( -11.9307, -57.4891, -29.0432, 1.47 ) }
    dend_62 { pt3dadd( -12.7119, -58.0203, -29.671, 1.18 ) }
    dend_62 { pt3dadd( -13.4151, -58.4417, -30.2171, 1.18 ) }
    dend_62 { pt3dadd( -14.2298, -58.9488, -30.8771, 1.18 ) }
    dend_62 { pt3dadd( -14.8585, -59.3616, -31.4009, 0.74 ) }
    dend_62 { pt3dadd( -15.653, -59.9381, -32.094, 0.74 ) }
    dend_62 { pt3dadd( -16.0046, -60.2155, -32.4318, 0.74 ) }
    dend_62 { pt3dadd( -17.216, -61.2046, -33.6682, 0.74 ) }
    dend_62 { pt3dadd( -18.2088, -62.0628, -34.6861, 0.74 ) }
    dend_62 { pt3dadd( -18.4146, -62.2533, -34.8932, 0.74 ) }
    dend_62 { pt3dadd( -19.4021, -63.182, -35.8481, 0.74 ) }
    dend_62 { pt3dadd( -20.3184, -64.0929, -36.6587, 0.74 ) }
    dend_62 { pt3dadd( -21.2429, -65.0438, -37.4436, 0.74 ) }
    dend_62 { pt3dadd( -21.9059, -65.6774, -37.9079, 0.74 ) }
    dend_62 { pt3dadd( -22.4899, -66.2345, -38.2416, 0.15 ) }
    dend_62 { pt3dadd( -22.9693, -66.7148, -38.5205, 0.15 ) }
    dend_62 { pt3dadd( -23.5234, -67.3456, -38.8701, 0.15 ) }
    dend_62 { pt3dadd( -23.9737, -67.9022, -39.144, 0.15 ) }
    dend_62 { pt3dadd( -24.7593, -68.9147, -39.687, 0.15 ) }
    dend_62 { pt3dadd( -25.3127, -69.5886, -40.1203, 0.15 ) }
    dend_62 { pt3dadd( -26.5887, -71.0371, -41.1285, 0.52 ) }
    dend_62 { pt3dadd( -27.4228, -71.9212, -41.7502, 0.52 ) }
    dend_62 { pt3dadd( -27.8626, -72.3431, -42.0769, 0.52 ) }
    dend_62 { pt3dadd( -28.5246, -72.9214, -42.5588, 0.52 ) }
    dend_62 { pt3dadd( -29.3586, -73.5355, -43.1484, 0.52 ) }
    dend_62 { pt3dadd( -30.4052, -74.1193, -43.812, 0.52 ) }
    dend_62 { pt3dadd( -31.1135, -74.4033, -44.1863, 0.52 ) }
    dend_62 { pt3dadd( -32.1709, -74.7137, -44.7169, 0.52 ) }
    dend_62 { pt3dadd( -33.0754, -74.9446, -45.1707, 0.44 ) }
    dend_62 { pt3dadd( -34.3433, -75.239, -45.7508, 0.44 ) }
    dend_62 { pt3dadd( -35.5578, -75.527, -46.2797, 0.44 ) }
    dend_62 { pt3dadd( -36.2326, -75.6934, -46.5583, 0.44 ) }
    dend_62 { pt3dadd( -37.6592, -76.1372, -47.1123, 0.44 ) }
    dend_62 { pt3dadd( -38.566, -76.4921, -47.4317, 0.44 ) }
    dend_62 { pt3dadd( -39.9099, -77.1554, -47.8729, 0.29 ) }
    dend_62 { pt3dadd( -40.8229, -77.7047, -48.1582, 0.29 ) }
    dend_62 { pt3dadd( -41.7998, -78.357, -48.4466, 0.29 ) }
    dend_62 { pt3dadd( -42.968, -79.208, -48.773, 0.29 ) }
    dend_62 { pt3dadd( -43.698, -79.7669, -48.9618, 0.29 ) }
    dend_62 { pt3dadd( -44.6, -80.4917, -49.2044, 0.29 ) }
    dend_62 { pt3dadd( -45.3621, -81.1057, -49.4145, 0.29 ) }
    dend_62 { pt3dadd( -45.8029, -81.4568, -49.5263, 0.29 ) }
    dend_62 { pt3dadd( -46.4644, -81.9728, -49.6993, 0.29 ) }
    dend_62 { pt3dadd( -47.4406, -82.7084, -50.0059, 0.29 ) }
    dend_62 { pt3dadd( -48.0509, -83.1676, -50.2287, 0.29 ) }
    dend_62 { pt3dadd( -49.2623, -84.1016, -50.7245, 0.29 ) }
    dend_62 { pt3dadd( -50.3614, -84.9896, -51.1992, 0.29 ) }
    dend_62 { pt3dadd( -51.3288, -85.8562, -51.6215, 0.29 ) }
    dend_62 { pt3dadd( -52.434, -86.9125, -52.1048, 0.07 ) }
    dend_62 { pt3dadd( -52.8256, -87.321, -52.3127, 0.07 ) }
    dend_62 { pt3dadd( -53.2312, -87.772, -52.5544, 0.07 ) }
    dend_62 { pt3dadd( -53.5726, -88.1977, -52.7777, 0.07 ) }
    dend_62 { pt3dadd( -54.8284, -89.8399, -53.5674, 0.07 ) }
    dend_62 { pt3dadd( -55.7648, -91.124, -54.0726, 0.22 ) }
    dend_62 { pt3dadd( -56.7957, -92.5719, -54.5473, 0.22 ) }
    dend_62 { pt3dadd( -57.2557, -93.2514, -54.8018, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( -57.7953, -94.0917, -55.1827, 0.22 ) }
    dend_62 { pt3dadd( -58.1669, -94.7345, -55.5104, 0.22 ) }
    dend_62 { pt3dadd( -58.4993, -95.4108, -55.9014, 0.22 ) }
    dend_62 { pt3dadd( -58.7641, -96.0249, -56.2683, 0.22 ) }
    dend_62 { pt3dadd( -59.4601, -97.6154, -57.1791, 0.22 ) }
    dend_62 { pt3dadd( -59.8527, -98.4471, -57.7539, 0.22 ) }
    dend_62 { pt3dadd( -60.012, -98.7461, -57.9904, 0.22 ) }
    dend_62 { pt3dadd( -60.2948, -99.2209, -58.386, 0.22 ) }
    dend_62 { pt3dadd( -60.6958, -99.7941, -58.8632, 0.22 ) }
    dend_62 { pt3dadd( -61.1707, -100.376, -59.3273, 0.22 ) }
    dend_62 { pt3dadd( -61.8456, -101.12, -59.8485, 0.22 ) }
    dend_62 { pt3dadd( -62.1977, -101.507, -60.0883, 0.22 ) }
    dend_62 { pt3dadd( -62.7352, -102.115, -60.4414, 0.22 ) }
    dend_62 { pt3dadd( -63.5466, -103.097, -60.9592, 0.22 ) }
    dend_62 { pt3dadd( -63.9949, -103.65, -61.2225, 0.22 ) }
    dend_62 { pt3dadd( -64.4043, -104.158, -61.4564, 0.22 ) }
    dend_62 { pt3dadd( -65.2505, -105.196, -61.8943, 0.22 ) }
    dend_62 { pt3dadd( -65.9619, -105.967, -62.2308, 0.22 ) }
    dend_62 { pt3dadd( -66.6119, -106.586, -62.4958, 0.22 ) }
    dend_62 { pt3dadd( -67.5145, -107.365, -62.8347, 0.22 ) }
    dend_62 { pt3dadd( -68.2366, -107.921, -63.0827, 0.22 ) }
    dend_62 { pt3dadd( -68.7713, -108.295, -63.2636, 0.22 ) }
    dend_62 { pt3dadd( -71.5933, -110.126, -64.2425, 0.22 ) }
    dend_62 { pt3dadd( -72.4879, -110.695, -64.5399, 0.22 ) }
    dend_62 { pt3dadd( -73.9519, -111.618, -65.034, 0.22 ) }
    dend_62 { pt3dadd( -75.3745, -112.558, -65.5434, 0.22 ) }
    dend_62 { pt3dadd( -76.4863, -113.318, -65.9458, 0.22 ) }
    dend_62 { pt3dadd( -77.4293, -114.007, -66.3166, 0.22 ) }
    dend_62 { pt3dadd( -78.5125, -114.875, -66.8208, 0.22 ) }
    dend_62 { pt3dadd( -79.2336, -115.501, -67.2181, 0.22 ) }
    dend_62 { pt3dadd( -80.2271, -116.411, -67.803, 0.22 ) }
    dend_62 { pt3dadd( -80.6228, -116.787, -68.0441, 0.22 ) }
    dend_62 { pt3dadd( -81.4398, -117.572, -68.5537, 0.22 ) }
    dend_62 { pt3dadd( -82.3195, -118.365, -69.1227, 0.22 ) }
    dend_62 { pt3dadd( -82.9563, -118.889, -69.5646, 0.22 ) }
    dend_62 { pt3dadd( -84.1589, -119.763, -70.3317, 0.22 ) }
    dend_62 { pt3dadd( -84.8854, -120.24, -70.8045, 0.22 ) }
    dend_62 { pt3dadd( -85.8171, -120.809, -71.3732, 0.22 ) }
    dend_62 { pt3dadd( -87.1394, -121.605, -72.1276, 0.22 ) }
    dend_62 { pt3dadd( -88.3321, -122.353, -72.8213, 0.22 ) }
    dend_62 { pt3dadd( -89.5563, -123.18, -73.545, 0.07 ) }
    dend_62 { pt3dadd( -90.5461, -123.912, -74.1366, 0.07 ) }
    dend_62 { pt3dadd( -91.4984, -124.684, -74.6817, 0.07 ) }
    dend_62 { pt3dadd( -92.2773, -125.375, -75.0736, 0.07 ) }
    dend_62 { pt3dadd( -93.1796, -126.341, -75.4849, 0.07 ) }
    dend_62 { pt3dadd( -94.0481, -127.4, -75.8218, 0.07 ) }
    dend_62 { pt3dadd( -94.6027, -128.134, -76.0245, 0.07 ) }
    dend_62 { pt3dadd( -95.2567, -129.052, -76.2229, 0.07 ) }
    dend_62 { pt3dadd( -95.7518, -129.785, -76.3748, 0.07 ) }
    dend_62 { pt3dadd( -96.5471, -130.933, -76.5538, 0.07 ) }
    dend_62 { pt3dadd( -97.3764, -132.145, -76.7416, 0.07 ) }
    dend_62 { pt3dadd( -97.9488, -132.969, -76.9488, 0.07 ) }
    dend_62 { pt3dadd( -98.521, -133.786, -77.1957, 0.07 ) }
    dend_62 { pt3dadd( -99.2816, -134.864, -77.5464, 0.07 ) }
    dend_62 { pt3dadd( -100.379, -136.44, -78.0738, 0.07 ) }
    dend_62 { pt3dadd( -101.461, -138.027, -78.6155, 0.07 ) }
    dend_62 { pt3dadd( -102.528, -139.605, -79.1894, 0.07 ) }
    dend_62 { pt3dadd( -103.14, -140.509, -79.5327, 0.07 ) }
    dend_62 { pt3dadd( -103.605, -141.187, -79.792, 0.07 ) }
    dend_62 { pt3dadd( -104.45, -142.537, -80.2964, 0.07 ) }
    dend_62 { pt3dadd( -104.719, -142.988, -80.4521, 0.07 ) }
    dend_62 { pt3dadd( -105.351, -144.021, -80.7873, 0.07 ) }
    dend_62 { pt3dadd( -105.815, -144.747, -81.0151, 0.07 ) }
    dend_62 { pt3dadd( -106.529, -145.838, -81.3931, 0.07 ) }
    dend_62 { pt3dadd( -107.881, -147.842, -82.1485, 0.07 ) }
    dend_62 { pt3dadd( -108.588, -148.833, -82.559, 0.07 ) }
    dend_62 { pt3dadd( -109.853, -150.595, -83.2927, 0.15 ) }
    dend_62 { pt3dadd( -110.862, -152.023, -83.856, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 21.1673, -37.3484, -5.49369, 0.52 ) }
    dend_56 { pt3dadd( 23.1213, -37.5342, -3.49368, 0.52 ) }
    dend_56 { pt3dadd( 25.8883, -37.6426, -0.44691, 1.25 ) }
    dend_56 { pt3dadd( 28.0308, -37.655, 1.9696, 1.33 ) }
    dend_56 { pt3dadd( 29.1897, -37.6366, 3.29047, 1.11 ) }
    dend_56 { pt3dadd( 30.2932, -37.5994, 4.52383, 1.11 ) }
    dend_56 { pt3dadd( 31.6906, -37.5561, 6.03245, 1.11 ) }
    dend_56 { pt3dadd( 32.4986, -37.4388, 6.94345, 1.11 ) }
    dend_56 { pt3dadd( 33.019, -37.3607, 7.48429, 1.11 ) }
    dend_56 { pt3dadd( 33.3572, -37.4091, 7.79842, 1.11 ) }
    dend_56 { pt3dadd( 34.1822, -37.8067, 8.30564, 0.81 ) }
    dend_56 { pt3dadd( 34.9395, -38.4016, 8.58733, 0.81 ) }
    dend_56 { pt3dadd( 35.5275, -38.93, 8.70404, 0.96 ) }
    dend_56 { pt3dadd( 36.8714, -40.1389, 8.88612, 0.96 ) }
    dend_56 { pt3dadd( 37.5484, -40.7051, 8.96442, 0.96 ) }
    dend_56 { pt3dadd( 38.4775, -41.3374, 9.13902, 0.81 ) }
    dend_56 { pt3dadd( 38.7943, -41.4659, 9.23626, 0.81 ) }
    dend_56 { pt3dadd( 39.5478, -41.6081, 9.55374, 0.81 ) }
    dend_56 { pt3dadd( 40.9023, -41.7404, 10.2717, 0.81 ) }
    dend_56 { pt3dadd( 41.459, -41.7654, 10.6026, 0.81 ) }
    dend_56 { pt3dadd( 42.9643, -41.8007, 11.5761, 0.81 ) }
    dend_56 { pt3dadd( 44.718, -41.8304, 12.8027, 0.81 ) }
    dend_56 { pt3dadd( 46.7324, -41.8975, 14.2283, 0.96 ) }
    dend_56 { pt3dadd( 48.5043, -42.0162, 15.4821, 0.96 ) }
    dend_56 { pt3dadd( 50.0643, -42.1545, 16.6143, 1.11 ) }
    dend_56 { pt3dadd( 50.8622, -42.2228, 17.2025, 1.11 ) }
    dend_56 { pt3dadd( 51.2792, -42.2442, 17.5176, 1.11 ) }
    dend_56 { pt3dadd( 52.1086, -42.2462, 18.2222, 0.37 ) }
    dend_56 { pt3dadd( 52.742, -42.1714, 18.8548, 0.37 ) }
    dend_56 { pt3dadd( 53.1048, -42.0645, 19.2981, 0.37 ) }
    dend_56 { pt3dadd( 53.3948, -41.9034, 19.7975, 0.37 ) }
    dend_56 { pt3dadd( 53.6925, -41.7026, 20.3772, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_56 { pt3dadd( 53.9795, -41.5118, 20.9036, 0.52 ) }
    dend_56 { pt3dadd( 54.6047, -41.2462, 21.8053, 0.52 ) }
    dend_56 { pt3dadd( 54.8356, -41.2147, 22.0427, 0.52 ) }
    dend_56 { pt3dadd( 55.3929, -41.289, 22.4251, 0.52 ) }
    dend_56 { pt3dadd( 55.9319, -41.5927, 22.6624, 0.52 ) }
    dend_56 { pt3dadd( 56.7436, -42.3516, 22.8966, 0.52 ) }
    dend_56 { pt3dadd( 57.9521, -43.7381, 23.2055, 0.52 ) }
    dend_56 { pt3dadd( 58.6488, -44.6179, 23.3886, 1.11 ) }
    dend_56 { pt3dadd( 59.0046, -45.1182, 23.5358, 1.11 ) }
    dend_56 { pt3dadd( 60.1159, -47.004, 24.5073, 1.11 ) }
    dend_56 { pt3dadd( 60.5096, -47.8645, 25.2104, 0.66 ) }
    dend_56 { pt3dadd( 60.6814, -48.392, 25.811, 0.66 ) }
    dend_56 { pt3dadd( 60.8274, -49.0693, 26.7937, 0.66 ) }
    dend_56 { pt3dadd( 60.9979, -50.0598, 28.4538, 0.81 ) }
    dend_56 { pt3dadd( 61.2326, -51.5408, 31.188, 1.11 ) }
    dend_56 { pt3dadd( 61.3554, -52.3366, 32.8049, 1.11 ) }
    dend_56 { pt3dadd( 61.4277, -52.84, 33.7695, 1.11 ) }
    dend_56 { pt3dadd( 61.5058, -53.2002, 34.3562, 1.11 ) }
    dend_56 { pt3dadd( 61.6565, -53.6807, 35.0014, 1.11 ) }
    dend_56 { pt3dadd( 62.0454, -54.1655, 35.5099, 1.11 ) }
    dend_56 { pt3dadd( 62.714, -54.5349, 35.8843, 0.66 ) }
    dend_56 { pt3dadd( 63.6744, -54.7615, 36.3006, 0.37 ) }
    dend_56 { pt3dadd( 65.0473, -54.8599, 36.8436, 0.37 ) }
    dend_56 { pt3dadd( 65.4174, -54.8558, 36.9726, 0.37 ) }
    dend_56 { pt3dadd( 67.7805, -54.7624, 37.7369, 0.74 ) }
    dend_56 { pt3dadd( 69.0099, -54.7316, 38.1549, 0.37 ) }
    dend_56 { pt3dadd( 70.3763, -54.7209, 38.6428, 0.37 ) }
    dend_56 { pt3dadd( 71.947, -54.7038, 39.2346, 0.37 ) }
    dend_56 { pt3dadd( 73.639, -54.7328, 39.866, 0.44 ) }
    dend_56 { pt3dadd( 74.5568, -54.8319, 40.1864, 0.44 ) }
    dend_56 { pt3dadd( 76.3014, -55.2137, 40.7425, 0.44 ) }
    dend_56 { pt3dadd( 77.4027, -55.4776, 41.0276, 0.44 ) }
    dend_56 { pt3dadd( 78.8456, -55.8174, 41.357, 0.44 ) }
    dend_56 { pt3dadd( 79.7933, -56.0109, 41.584, 0.22 ) }
    dend_56 { pt3dadd( 81.3011, -56.2776, 41.9518, 0.22 ) }
    dend_56 { pt3dadd( 82.0452, -56.3753, 42.1057, 0.22 ) }
    dend_56 { pt3dadd( 83.8709, -56.562, 42.3432, 0.07 ) }
    dend_56 { pt3dadd( 85.3787, -56.7481, 42.4911, 0.07 ) }
    dend_56 { pt3dadd( 88.1204, -57.1762, 42.7124, 0.07 ) }
    dend_56 { pt3dadd( 95.8448, -59.4538, 50.0361, 0.07 ) }
    dend_56 { pt3dadd( 102.943, -62.9793, 57.4974, 0.07 ) }
    dend_56 { pt3dadd( 110.758, -67.4969, 63.5812, 0.07 ) }
    dend_56 { pt3dadd( 119.692, -70.984, 68.7295, 0.07 ) }
    dend_56 { pt3dadd( 127.796, -76.092, 73.8996, 0.07 ) }
    dend_56 { pt3dadd( 137.25, -79.376, 78.1798, 0.07 ) }
    dend_56 { pt3dadd( 147.03, -80.8968, 82.7117, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 46/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 21.1673, -37.3484, -5.49369, 1.4 ) }
    dend_53 { pt3dadd( 20.713, -39.9159, -6.32869, 1.4 ) }
    dend_53 { pt3dadd( 20.4027, -41.6366, -6.83274, 1.25 ) }
    dend_53 { pt3dadd( 19.9096, -43.905, -7.4678, 0.88 ) }
    dend_53 { pt3dadd( 19.6039, -45.1128, -7.78097, 0.88 ) }
    dend_53 { pt3dadd( 19.0633, -46.8823, -8.21655, 1.18 ) }
    dend_53 { pt3dadd( 18.5532, -48.365, -8.57018, 1.69 ) }
    dend_53 { pt3dadd( 17.9963, -49.8164, -8.87658, 2.14 ) }
    dend_53 { pt3dadd( 17.4923, -50.9309, -9.08097, 2.14 ) }
    dend_53 { pt3dadd( 16.2136, -53.3597, -9.54377, 2.43 ) }
    dend_53 { pt3dadd( 14.9099, -55.5464, -9.97539, 2.06 ) }
    dend_53 { pt3dadd( 14.1677, -56.6564, -10.1997, 2.06 ) }
    dend_53 { pt3dadd( 12.8209, -58.567, -10.5674, 2.28 ) }
    dend_53 { pt3dadd( 11.6133, -60.2361, -10.8691, 2.28 ) }
    dend_53 { pt3dadd( 10.7003, -61.5505, -11.0804, 2.28 ) }
    dend_53 { pt3dadd( 9.7924, -62.8656, -11.2622, 1.69 ) }
    dend_53 { pt3dadd( 8.70833, -64.5497, -11.4516, 1.55 ) }
    dend_53 { pt3dadd( 7.92898, -65.8358, -11.5714, 1.55 ) }
    dend_53 { pt3dadd( 6.96891, -67.5068, -11.697, 1.33 ) }
    dend_53 { pt3dadd( 6.08472, -69.1744, -11.7448, 1.33 ) }
    dend_53 { pt3dadd( 5.54243, -70.2468, -11.7456, 0.44 ) }
    dend_53 { pt3dadd( 5.25557, -70.8553, -11.7327, 0.44 ) }
    dend_53 { pt3dadd( 4.83403, -71.8073, -11.6824, 0.44 ) }
    dend_53 { pt3dadd( 4.10265, -73.6299, -11.5207, 0.44 ) }
    dend_53 { pt3dadd( 3.14231, -76.4582, -11.1593, 0.44 ) }
    dend_53 { pt3dadd( 2.9044, -77.2021, -11.0515, 0.44 ) }
    dend_53 { pt3dadd( 2.50376, -78.4626, -10.8622, 0.37 ) }
    dend_53 { pt3dadd( 2.16471, -79.4137, -10.7296, 0.37 ) }
    dend_53 { pt3dadd( 1.51633, -81.1671, -10.5477, 0.37 ) }
    dend_53 { pt3dadd( 0.9313, -82.6023, -10.4857, 0.37 ) }
    dend_53 { pt3dadd( 0.1453, -84.2561, -10.5414, 0.37 ) }
    dend_53 { pt3dadd( -0.454602, -85.4542, -10.6218, 0.37 ) }
    dend_53 { pt3dadd( -1.45631, -87.3948, -10.8021, 0.37 ) }
    dend_53 { pt3dadd( -2.84069, -89.9259, -11.0816, 0.37 ) }
    dend_53 { pt3dadd( -4.1373, -92.0944, -11.3315, 0.37 ) }
    dend_53 { pt3dadd( -5.39784, -94.2229, -11.5119, 0.44 ) }
    dend_53 { pt3dadd( -6.27601, -95.892, -11.6009, 0.44 ) }
    dend_53 { pt3dadd( -6.88492, -97.23, -11.6269, 0.44 ) }
    dend_53 { pt3dadd( -7.20201, -98.0416, -11.6007, 0.44 ) }
    dend_53 { pt3dadd( -7.85368, -99.9398, -11.4473, 0.44 ) }
    dend_53 { pt3dadd( -8.68316, -102.686, -11.1284, 0.44 ) }
    dend_53 { pt3dadd( -9.63365, -105.932, -10.663, 0.44 ) }
    dend_53 { pt3dadd( -10.089, -107.422, -10.4423, 0.44 ) }
    dend_53 { pt3dadd( -10.7241, -109.392, -10.1697, 0.37 ) }
    dend_53 { pt3dadd( -11.1082, -110.564, -10.0241, 0.37 ) }
    dend_53 { pt3dadd( -11.6318, -112.108, -9.84725, 0.37 ) }
    dend_53 { pt3dadd( -12.3497, -113.977, -9.63953, 0.66 ) }
    dend_53 { pt3dadd( -12.8526, -115.049, -9.5131, 0.66 ) }
    dend_53 { pt3dadd( -13.6096, -116.379, -9.38957, 1.11 ) }
    dend_53 { pt3dadd( -13.9545, -116.89, -9.35996, 0.52 ) }
    dend_53 { pt3dadd( -14.3114, -117.389, -9.34101, 0.52 ) }
    dend_53 { pt3dadd( -15.2234, -118.804, -9.36625, 0.52 ) }
    dend_53 { pt3dadd( -15.5716, -119.399, -9.39575, 0.52 ) }
    dend_53 { pt3dadd( -15.8668, -119.924, -9.42582, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -16.8988, -121.834, -9.55385, 0.59 ) }
    dend_53 { pt3dadd( -17.6044, -123.199, -9.66246, 0.59 ) }
    dend_53 { pt3dadd( -19.42, -126.815, -10.001, 0.59 ) }
    dend_53 { pt3dadd( -21.5207, -131.102, -10.4793, 0.37 ) }
    dend_53 { pt3dadd( -21.976, -132.074, -10.5915, 0.37 ) }
    dend_53 { pt3dadd( -22.5852, -133.366, -10.7449, 0.37 ) }
    dend_53 { pt3dadd( -23.4839, -135.212, -10.964, 0.37 ) }
    dend_53 { pt3dadd( -24.3751, -136.883, -11.1507, 0.37 ) }
    dend_53 { pt3dadd( -25.1776, -138.28, -11.2908, 0.37 ) }
    dend_53 { pt3dadd( -25.6079, -139.002, -11.3598, 0.37 ) }
    dend_53 { pt3dadd( -26.3858, -140.239, -11.4648, 0.37 ) }
    dend_53 { pt3dadd( -27.5189, -141.879, -11.5809, 0.37 ) }
    dend_53 { pt3dadd( -28.553, -143.234, -11.6585, 0.37 ) }
    dend_53 { pt3dadd( -30.0111, -145.093, -11.746, 0.37 ) }
    dend_53 { pt3dadd( -30.7495, -146.103, -11.8147, 0.37 ) }
    dend_53 { pt3dadd( -31.0321, -146.539, -11.8581, 0.37 ) }
    dend_53 { pt3dadd( -31.3447, -147.129, -11.9346, 0.37 ) }
    dend_53 { pt3dadd( -31.8799, -148.271, -12.1064, 0.37 ) }
    dend_53 { pt3dadd( -32.412, -149.577, -12.3174, 0.37 ) }
    dend_53 { pt3dadd( -33.411, -152.319, -12.7813, 0.37 ) }
    dend_53 { pt3dadd( -33.9505, -153.996, -13.0653, 0.37 ) }
    dend_53 { pt3dadd( -34.9954, -157.441, -13.5485, 0.37 ) }
    dend_53 { pt3dadd( -35.5836, -159.508, -13.796, 0.37 ) }
    dend_53 { pt3dadd( -36.0564, -161.266, -13.9592, 0.37 ) }
    dend_53 { pt3dadd( -36.8952, -164.479, -14.2138, 0.07 ) }
    dend_53 { pt3dadd( -37.3015, -166.061, -14.3013, 0.07 ) }
    dend_53 { pt3dadd( -38.0585, -168.953, -14.4123, 0.07 ) }
    dend_53 { pt3dadd( -38.2917, -169.784, -14.4194, 0.07 ) }
    dend_53 { pt3dadd( -38.6283, -170.942, -14.3833, 0.07 ) }
    dend_53 { pt3dadd( -42.0222, -182.093, -13.316, 0.07 ) }
    dend_53 { pt3dadd( -44.3958, -193.513, -12.3321, 0.07 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 31/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 38.8656, -147.255, -8.49078, 0.22 ) }
    dend_50 { pt3dadd( 40.222, -158.608, -11.3048, 0.22 ) }
    dend_50 { pt3dadd( 41.8385, -169.493, -15.4921, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 34/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 38.8656, -147.255, -8.49078, 0.07 ) }
    dend_49 { pt3dadd( 42.7674, -154.732, -9.58519, 0.22 ) }
    dend_49 { pt3dadd( 45.027, -162.854, -10.7088, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_25 (entry count 37/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -17.9173, -5.38051, 19.2628, 0.29 ) }
    dend_43 { pt3dadd( -19.2737, -6.32149, 19.7004, 0.29 ) }
    dend_43 { pt3dadd( -19.8773, -6.56053, 20.0203, 0.66 ) }
    dend_43 { pt3dadd( -20.4469, -6.74312, 20.3449, 0.66 ) }
    dend_43 { pt3dadd( -21.3594, -6.97148, 20.8676, 0.66 ) }
    dend_43 { pt3dadd( -21.8088, -7.04516, 21.1341, 0.66 ) }
    dend_43 { pt3dadd( -23.1594, -7.12371, 22.0165, 0.66 ) }
    dend_43 { pt3dadd( -23.795, -7.14043, 22.498, 0.44 ) }
    dend_43 { pt3dadd( -24.0654, -7.1239, 22.7508, 0.44 ) }
    dend_43 { pt3dadd( -24.2972, -7.0417, 23.069, 0.44 ) }
    dend_43 { pt3dadd( -24.4872, -6.80219, 23.5334, 0.44 ) }
    dend_43 { pt3dadd( -24.674, -6.42738, 24.1457, 0.44 ) }
    dend_43 { pt3dadd( -24.8544, -5.79106, 25.0996, 0.52 ) }
    dend_43 { pt3dadd( -24.9255, -5.32196, 25.7552, 0.52 ) }
    dend_43 { pt3dadd( -24.9532, -4.86389, 26.3624, 0.52 ) }
    dend_43 { pt3dadd( -24.9767, -3.22761, 28.4449, 0.66 ) }
    dend_43 { pt3dadd( -24.9906, -2.58134, 29.2655, 0.66 ) }
    dend_43 { pt3dadd( -25.0383, -2.06793, 29.9033, 0.66 ) }
    dend_43 { pt3dadd( -25.1103, -1.41117, 30.6712, 0.66 ) }
    dend_43 { pt3dadd( -25.1588, -0.89855, 31.2511, 0.52 ) }
    dend_43 { pt3dadd( -25.1703, -0.549109, 31.6252, 0.29 ) }
    dend_43 { pt3dadd( -24.9675, 0.22484, 32.2298, 0.29 ) }
    dend_43 { pt3dadd( -24.8497, 1.11477, 32.9361, 0.29 ) }
    dend_43 { pt3dadd( -27.7852, 6.37973, 39.9923, 0.29 ) }
    dend_43 { pt3dadd( -31.283, 11.1967, 47.1119, 0.29 ) }
    dend_43 { pt3dadd( -34.7005, 15.2048, 54.7528, 0.29 ) }
    dend_43 { pt3dadd( -37.5553, 20.8948, 61.5056, 0.29 ) }
    dend_43 { pt3dadd( -39.4895, 25.9764, 69.0265, 0.29 ) }
    dend_43 { pt3dadd( -40.7611, 31.0131, 76.7168, 0.29 ) }
    dend_43 { pt3dadd( -43.4209, 35.9771, 84.0933, 0.29 ) }
    dend_43 { pt3dadd( -48.4014, 40.9658, 90.1293, 0.29 ) }
    dend_43 { pt3dadd( -52.3499, 46.1281, 96.7541, 0.29 ) }
    dend_43 { pt3dadd( -57.2567, 50.9106, 103.013, 0.29 ) }
    dend_43 { pt3dadd( -61.5975, 57.432, 107.989, 0.29 ) }
    dend_43 { pt3dadd( -64.5891, 63.4721, 114.368, 0.29 ) }
    dend_43 { pt3dadd( -67.4875, 68.2739, 121.762, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -17.9173, -5.38051, 19.2628, 1.11 ) }
    dend_26 { pt3dadd( -20.1236, -7.34471, 17.57, 1.11 ) }
    dend_26 { pt3dadd( -21.8597, -8.53914, 16.5193, 1.11 ) }
    dend_26 { pt3dadd( -23.0382, -9.19313, 15.9578, 1.25 ) }
    dend_26 { pt3dadd( -25.4874, -10.3362, 15.0368, 1.25 ) }
    dend_26 { pt3dadd( -27.3987, -11.0737, 14.5224, 1.25 ) }
    dend_26 { pt3dadd( -29.4184, -11.7763, 14.1665, 1.11 ) }
    dend_26 { pt3dadd( -31.5344, -12.2811, 14.0609, 0.88 ) }
    dend_26 { pt3dadd( -32.9707, -12.4973, 14.1336, 0.88 ) }
    dend_26 { pt3dadd( -34.0683, -12.5653, 14.2726, 0.88 ) }
    dend_26 { pt3dadd( -36.0232, -12.4979, 14.7883, 0.88 ) }
    dend_26 { pt3dadd( -37.6196, -12.4001, 15.4157, 0.88 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 25.992, 29.5961, 17.8144, 1.55 ) }
    dend_19 { pt3dadd( 26.3772, 33.088, 17.3612, 1.55 ) }
    dend_19 { pt3dadd( 26.5076, 34.4859, 17.1366, 1.55 ) }
    dend_19 { pt3dadd( 26.7673, 37.6955, 16.5844, 1.77 ) }
    dend_19 { pt3dadd( 26.9017, 39.4605, 16.2852, 1.77 ) }
    dend_19 { pt3dadd( 27.0683, 41.9733, 15.8683, 2.06 ) }
    dend_19 { pt3dadd( 27.1473, 43.5004, 15.6329, 2.06 ) }
    dend_19 { pt3dadd( 27.2068, 45.4606, 15.3091, 1.55 ) }
    dend_19 { pt3dadd( 27.2443, 47.5544, 14.9423, 1.55 ) }
    dend_19 { pt3dadd( 27.2704, 49.3521, 14.5898, 1.84 ) }
    dend_19 { pt3dadd( 27.312, 50.3577, 14.3499, 1.84 ) }
    dend_19 { pt3dadd( 27.4668, 53.4683, 13.6203, 1.92 ) }
    dend_19 { pt3dadd( 27.6082, 55.9153, 13.0777, 1.92 ) }
    dend_19 { pt3dadd( 27.6872, 57.1647, 12.8358, 1.92 ) }
    dend_19 { pt3dadd( 27.825, 59.0081, 12.5472, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( 28.0609, 61.4901, 12.3176, 1.4 ) }
    dend_19 { pt3dadd( 28.2644, 63.1297, 12.3085, 1.4 ) }
    dend_19 { pt3dadd( 28.4903, 64.7243, 12.4856, 1.55 ) }
    dend_19 { pt3dadd( 28.7104, 66.5089, 12.9042, 1.55 ) }
    dend_19 { pt3dadd( 28.7949, 67.5892, 13.2347, 1.55 ) }
    dend_19 { pt3dadd( 28.8419, 69.0357, 13.706, 1.25 ) }
    dend_19 { pt3dadd( 28.8227, 70.5036, 14.1089, 0.59 ) }
    dend_19 { pt3dadd( 28.7953, 71.4264, 14.1796, 0.88 ) }
    dend_19 { pt3dadd( 28.7519, 72.463, 14.0836, 1.25 ) }
    dend_19 { pt3dadd( 28.6515, 74.0847, 13.715, 1.25 ) }
    dend_19 { pt3dadd( 28.4181, 76.5769, 12.9444, 1.62 ) }
    dend_19 { pt3dadd( 28.0955, 79.4346, 11.8886, 1.62 ) }
    dend_19 { pt3dadd( 27.7172, 82.6713, 10.5879, 1.18 ) }
    dend_19 { pt3dadd( 27.4969, 84.5184, 9.81212, 1.18 ) }
    dend_19 { pt3dadd( 27.3604, 85.8404, 9.23866, 0.74 ) }
    dend_19 { pt3dadd( 27.2433, 87.3419, 8.58782, 1.03 ) }
    dend_19 { pt3dadd( 27.2111, 88.2592, 8.2294, 1.84 ) }
    dend_19 { pt3dadd( 27.2523, 89.5045, 7.91066, 2.21 ) }
    dend_19 { pt3dadd( 27.344, 90.7546, 7.80848, 2.21 ) }
    dend_19 { pt3dadd( 27.4318, 91.951, 7.78852, 2.21 ) }
    dend_19 { pt3dadd( 27.5127, 93.3425, 7.79595, 2.21 ) }
    dend_19 { pt3dadd( 27.5882, 95.6551, 7.77455, 2.21 ) }
    dend_19 { pt3dadd( 27.5948, 98.2367, 7.71185, 1.99 ) }
    dend_19 { pt3dadd( 27.5121, 100.986, 7.57453, 1.11 ) }
    dend_19 { pt3dadd( 27.3518, 103.424, 7.36388, 1.33 ) }
    dend_19 { pt3dadd( 27.1833, 104.812, 7.19761, 1.33 ) }
    dend_19 { pt3dadd( 26.8967, 106.601, 6.92082, 1.33 ) }
    dend_19 { pt3dadd( 26.7738, 107.269, 6.78809, 1.33 ) }
    dend_19 { pt3dadd( 26.6322, 108.247, 6.54053, 0.96 ) }
    dend_19 { pt3dadd( 26.6465, 109.39, 6.19861, 0.74 ) }
    dend_19 { pt3dadd( 26.8055, 110.052, 6.00547, 0.59 ) }
    dend_19 { pt3dadd( 27.1001, 110.941, 5.7906, 0.66 ) }
    dend_19 { pt3dadd( 27.492, 112.314, 5.513, 0.66 ) }
    dend_19 { pt3dadd( 27.6248, 113.339, 5.30321, 0.66 ) }
    dend_19 { pt3dadd( 27.6119, 114.625, 5.06259, 0.66 ) }
    dend_19 { pt3dadd( 27.4096, 116.258, 4.71467, 0.96 ) }
    dend_19 { pt3dadd( 27.1867, 117.419, 4.45353, 0.96 ) }
    dend_19 { pt3dadd( 26.7608, 119.218, 4.0527, 1.25 ) }
    dend_19 { pt3dadd( 26.221, 121.374, 3.61114, 1.25 ) }
    dend_19 { pt3dadd( 25.7604, 123.229, 3.2783, 1.4 ) }
    dend_19 { pt3dadd( 25.4298, 124.742, 3.04944, 1.4 ) }
    dend_19 { pt3dadd( 24.9955, 126.955, 2.76617, 1.18 ) }
    dend_19 { pt3dadd( 24.776, 128.227, 2.62788, 1.18 ) }
    dend_19 { pt3dadd( 24.4139, 130.766, 2.41527, 1.55 ) }
    dend_19 { pt3dadd( 24.1209, 133.579, 2.23331, 1.55 ) }
    dend_19 { pt3dadd( 23.9649, 135.697, 2.11945, 0.81 ) }
    dend_19 { pt3dadd( 23.8791, 137.482, 2.03456, 0.66 ) }
    dend_19 { pt3dadd( 23.8678, 138.035, 1.99833, 0.66 ) }
    dend_19 { pt3dadd( 23.9015, 138.88, 1.92434, 0.66 ) }
    dend_19 { pt3dadd( 23.9913, 139.856, 1.7696, 0.66 ) }
    dend_19 { pt3dadd( 24.0475, 140.395, 1.65908, 0.66 ) }
    dend_19 { pt3dadd( 24.119, 141.413, 1.42325, 0.66 ) }
    dend_19 { pt3dadd( 24.1825, 143.402, 0.931244, 0.66 ) }
    dend_19 { pt3dadd( 24.0923, 148.344, -0.389997, 0.81 ) }
    dend_19 { pt3dadd( 23.9645, 150.37, -0.964159, 1.03 ) }
    dend_19 { pt3dadd( 23.7873, 152.17, -1.49658, 1.18 ) }
    dend_19 { pt3dadd( 23.6384, 153.522, -1.9095, 1.18 ) }
    dend_19 { pt3dadd( 23.4868, 154.816, -2.2987, 1.18 ) }
    dend_19 { pt3dadd( 23.3514, 155.849, -2.62447, 1.03 ) }
    dend_19 { pt3dadd( 23.2581, 156.529, -2.83113, 1.03 ) }
    dend_19 { pt3dadd( 23.2849, 158.09, -3.11802, 0.96 ) }
    dend_19 { pt3dadd( 23.4084, 158.801, -3.24964, 0.59 ) }
    dend_19 { pt3dadd( 23.6607, 159.69, -3.43971, 0.59 ) }
    dend_19 { pt3dadd( 23.8742, 160.322, -3.59465, 0.59 ) }
    dend_19 { pt3dadd( 24.0777, 160.867, -3.75498, 0.59 ) }
    dend_19 { pt3dadd( 25.0207, 163.329, -4.58773, 0.59 ) }
    dend_19 { pt3dadd( 25.4008, 164.425, -5.03893, 0.66 ) }
    dend_19 { pt3dadd( 25.7168, 165.561, -5.56773, 0.81 ) }
    dend_19 { pt3dadd( 25.919, 166.577, -6.08632, 0.81 ) }
    dend_19 { pt3dadd( 26.0184, 167.341, -6.48562, 0.81 ) }
    dend_19 { pt3dadd( 26.0446, 167.924, -6.76572, 0.81 ) }
    dend_19 { pt3dadd( 26.0713, 169.413, -7.32449, 0.81 ) }
    dend_19 { pt3dadd( 26.096, 170.14, -7.52464, 0.81 ) }
    dend_19 { pt3dadd( 26.1216, 171.239, -7.82663, 0.66 ) }
    dend_19 { pt3dadd( 26.1277, 172.193, -8.08692, 0.44 ) }
    dend_19 { pt3dadd( 26.1046, 174.024, -8.56713, 0.44 ) }
    dend_19 { pt3dadd( 26.1174, 177.163, -9.31332, 0.52 ) }
    dend_19 { pt3dadd( 26.1478, 177.909, -9.46676, 0.52 ) }
    dend_19 { pt3dadd( 26.2595, 179.699, -9.80719, 0.52 ) }
    dend_19 { pt3dadd( 26.3136, 180.554, -9.95595, 0.59 ) }
    dend_19 { pt3dadd( 26.2993, 181.5, -10.09, 0.59 ) }
    dend_19 { pt3dadd( 26.1408, 183.088, -10.2543, 0.59 ) }
    dend_19 { pt3dadd( 26.0669, 183.56, -10.2792, 0.59 ) }
    dend_19 { pt3dadd( 25.9099, 184.841, -10.3055, 0.59 ) }
    dend_19 { pt3dadd( 25.8574, 185.87, -10.3117, 0.59 ) }
    dend_19 { pt3dadd( 25.9098, 188.443, -10.4957, 0.59 ) }
    dend_19 { pt3dadd( 26.0403, 190.338, -10.7501, 0.37 ) }
    dend_19 { pt3dadd( 26.1717, 191.678, -11.0078, 0.37 ) }
    dend_19 { pt3dadd( 26.3008, 192.733, -11.2514, 0.37 ) }
    dend_19 { pt3dadd( 26.6019, 194.702, -11.7697, 0.37 ) }
    dend_19 { pt3dadd( 26.9713, 196.694, -12.3271, 0.37 ) }
    dend_19 { pt3dadd( 27.2328, 197.92, -12.6725, 0.37 ) }
    dend_19 { pt3dadd( 27.3688, 198.659, -12.9007, 0.37 ) }
    dend_19 { pt3dadd( 27.4458, 199.34, -13.1249, 0.37 ) }
    dend_19 { pt3dadd( 27.4691, 199.936, -13.3149, 0.37 ) }
    dend_19 { pt3dadd( 27.4492, 200.793, -13.5595, 0.37 ) }
    dend_19 { pt3dadd( 27.374, 202.637, -14.0031, 0.37 ) }
    dend_19 { pt3dadd( 27.3192, 205.281, -14.6189, 0.52 ) }
    dend_19 { pt3dadd( 27.3196, 206.896, -14.9897, 0.52 ) }
    dend_19 { pt3dadd( 27.3274, 207.779, -15.1873, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( 27.3374, 208.614, -15.373, 0.52 ) }
    dend_19 { pt3dadd( 27.308, 210.325, -15.7091, 0.44 ) }
    dend_19 { pt3dadd( 27.2678, 211.167, -15.8229, 0.44 ) }
    dend_19 { pt3dadd( 27.2292, 211.85, -15.8434, 0.44 ) }
    dend_19 { pt3dadd( 27.1865, 213.177, -15.8324, 0.44 ) }
    dend_19 { pt3dadd( 27.1741, 214.661, -15.8853, 0.44 ) }
    dend_19 { pt3dadd( 27.1417, 216.66, -16.0361, 0.44 ) }
    dend_19 { pt3dadd( 27.1153, 217.752, -16.1925, 0.44 ) }
    dend_19 { pt3dadd( 27.0782, 219.341, -16.4883, 0.44 ) }
    dend_19 { pt3dadd( 27.0662, 221.352, -16.9185, 0.44 ) }
    dend_19 { pt3dadd( 27.1165, 224.035, -17.5769, 0.44 ) }
    dend_19 { pt3dadd( 27.2583, 227.33, -18.4628, 0.44 ) }
    dend_19 { pt3dadd( 27.4836, 229.968, -19.2568, 0.44 ) }
    dend_19 { pt3dadd( 27.6789, 231.653, -19.8027, 0.44 ) }
    dend_19 { pt3dadd( 27.8567, 232.851, -20.2081, 0.44 ) }
    dend_19 { pt3dadd( 28.1601, 234.508, -20.7539, 0.44 ) }
    dend_19 { pt3dadd( 28.3304, 235.321, -20.9971, 0.44 ) }
    dend_19 { pt3dadd( 28.6788, 236.8, -21.4291, 0.44 ) }
    dend_19 { pt3dadd( 28.9151, 237.801, -21.5832, 0.44 ) }
    dend_19 { pt3dadd( 29.1164, 238.764, -21.6406, 0.44 ) }
    dend_19 { pt3dadd( 29.3013, 239.871, -21.6335, 0.44 ) }
    dend_19 { pt3dadd( 29.4531, 241.133, -21.6383, 0.44 ) }
    dend_19 { pt3dadd( 29.7169, 243.873, -21.6917, 0.44 ) }
    dend_19 { pt3dadd( 29.9982, 247.115, -21.7256, 0.59 ) }
    dend_19 { pt3dadd( 30.1461, 248.59, -21.7358, 0.59 ) }
    dend_19 { pt3dadd( 30.541, 251.875, -21.7665, 0.59 ) }
    dend_19 { pt3dadd( 31.0804, 255.906, -21.8055, 0.44 ) }
    dend_19 { pt3dadd( 31.3188, 257.659, -21.8328, 0.37 ) }
    dend_19 { pt3dadd( 31.4183, 258.659, -21.8819, 0.37 ) }
    dend_19 { pt3dadd( 31.486, 260.04, -22.0651, 0.29 ) }
    dend_19 { pt3dadd( 31.5098, 260.708, -22.1668, 0.29 ) }
    dend_19 { pt3dadd( 31.5304, 261.33, -22.2726, 0.29 ) }
    dend_19 { pt3dadd( 31.5525, 262.231, -22.4261, 0.29 ) }
    dend_19 { pt3dadd( 31.5167, 264.199, -22.8235, 0.29 ) }
    dend_19 { pt3dadd( 31.3899, 266.828, -23.4909, 0.52 ) }
    dend_19 { pt3dadd( 31.3437, 267.716, -23.7419, 0.52 ) }
    dend_19 { pt3dadd( 31.3125, 268.922, -24.0835, 0.52 ) }
    dend_19 { pt3dadd( 31.3023, 270.143, -24.4427, 0.52 ) }
    dend_19 { pt3dadd( 31.2933, 271.552, -24.8864, 0.52 ) }
    dend_19 { pt3dadd( 31.2947, 273.165, -25.4257, 0.44 ) }
    dend_19 { pt3dadd( 31.2542, 273.944, -25.6686, 0.37 ) }
    dend_19 { pt3dadd( 31.11, 275.912, -26.3158, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 42/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 25.992, 29.5961, 17.8144, 1.55 ) }
    dend_10 { pt3dadd( 27.8496, 30.5939, 19.9113, 1.55 ) }
    dend_10 { pt3dadd( 28.5599, 30.9755, 20.7132, 1.55 ) }
    dend_10 { pt3dadd( 28.8759, 31.1452, 21.0699, 1.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 146.516, 128.166, 80.7217, 0.29 ) }
    dend_8 { pt3dadd( 157.44, 137.023, 85.9193, 0.29 ) }
    dend_8 { pt3dadd( 169.857, 144.308, 90.1067, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 146.516, 128.166, 80.7217, 0.07 ) }
    dend_7 { pt3dadd( 156.041, 135.734, 85.7546, 0.29 ) }
    dend_7 { pt3dadd( 164.505, 143.845, 91.7459, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 52/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -25.4683, 156.111, -18.9443, 0.22 ) }
    dend_3 { pt3dadd( -26.6814, 156.34, -17.5611, 0.22 ) }
    dend_3 { pt3dadd( -27.6164, 156.54, -16.5695, 0.22 ) }
    dend_3 { pt3dadd( -28.508, 156.746, -15.6578, 0.22 ) }
    dend_3 { pt3dadd( -29.2735, 156.923, -14.8751, 0.22 ) }
    dend_3 { pt3dadd( -30.3383, 157.169, -13.7865, 0.22 ) }
    dend_3 { pt3dadd( -32.0082, 157.554, -12.0791, 0.07 ) }
    dend_3 { pt3dadd( -33.6038, 157.976, -10.5899, 0.07 ) }
    dend_3 { pt3dadd( -34.295, 158.16, -9.96222, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 61/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -25.4683, 156.111, -18.9443, 0.07 ) }
    dend_2 { pt3dadd( -25.8022, 157.22, -18.8887, 0.07 ) }
    dend_2 { pt3dadd( -26.0874, 158.095, -18.8377, 0.07 ) }
    dend_2 { pt3dadd( -27.0786, 161.119, -18.8148, 0.07 ) }
    dend_2 { pt3dadd( -27.7904, 163.293, -18.8565, 0.07 ) }
    dend_2 { pt3dadd( -28.2124, 164.643, -18.9058, 0.07 ) }
    dend_2 { pt3dadd( -28.9431, 167.211, -19.0801, 0.07 ) }
    dend_2 { pt3dadd( -29.2664, 168.5, -19.2245, 0.07 ) }
    dend_2 { pt3dadd( -29.6492, 170.437, -19.5206, 0.07 ) }
    dend_2 { pt3dadd( -29.845, 171.747, -19.7852, 0.07 ) }
    dend_2 { pt3dadd( -29.9976, 173.182, -20.1407, 0.07 ) }
    dend_2 { pt3dadd( -30.0693, 174.778, -20.6099, 0.07 ) }
    dend_2 { pt3dadd( -29.9724, 176.263, -21.1398, 0.07 ) }
    dend_2 { pt3dadd( -29.7809, 177.604, -21.6307, 0.07 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 75/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.26861, -124.392, 9.67876, 0.07 ) }
    dend_69 { pt3dadd( -3.59561, -126.001, 9.53169, 0.07 ) }
    dend_69 { pt3dadd( -3.78254, -127.444, 9.42889, 0.07 ) }
    dend_69 { pt3dadd( -3.97296, -128.915, 9.32417, 0.07 ) }
    dend_69 { pt3dadd( -4.23837, -130.966, 9.17821, 0.07 ) }
    dend_69 { pt3dadd( -4.53581, -133.263, 9.01464, 0.07 ) }
    dend_69 { pt3dadd( -4.79147, -135.238, 8.87404, 0.07 ) }
    dend_69 { pt3dadd( -4.91377, -136.854, 8.76066, 0.07 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 83/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -3.26861, -124.392, 9.67876, 0.07 ) }
    dend_68 { pt3dadd( -1.55725, -125.717, 9.27203, 0.07 ) }
    dend_68 { pt3dadd( -0.418462, -126.599, 9.00137, 0.07 ) }
    dend_68 { pt3dadd( -0.0228751, -126.905, 8.90735, 0.07 ) }
    dend_68 { pt3dadd( 1.01446, -127.708, 8.66081, 0.07 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 88/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -110.862, -152.023, -83.856, 0.15 ) }
    dend_66 { pt3dadd( -111.45, -153.016, -83.8394, 0.15 ) }
    dend_66 { pt3dadd( -112.011, -153.986, -83.8769, 0.15 ) }
    dend_66 { pt3dadd( -112.678, -155.139, -83.9483, 0.15 ) }
    dend_66 { pt3dadd( -113.623, -156.804, -84.1362, 0.15 ) }
    dend_66 { pt3dadd( -114.137, -157.664, -84.2874, 0.15 ) }
    dend_66 { pt3dadd( -114.958, -158.989, -84.5579, 0.15 ) }
    dend_66 { pt3dadd( -115.436, -159.724, -84.7263, 0.15 ) }
    dend_66 { pt3dadd( -115.645, -160.029, -84.7987, 0.15 ) }
    dend_66 { pt3dadd( -117.715, -162.915, -85.4794, 0.15 ) }
    dend_66 { pt3dadd( -118.847, -164.438, -85.8024, 0.15 ) }
    dend_66 { pt3dadd( -119.412, -165.183, -85.9332, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_66 { pt3dadd( -120.739, -166.932, -86.2373, 0.15 ) }
    dend_66 { pt3dadd( -121.169, -167.513, -86.3373, 0.15 ) }
    dend_66 { pt3dadd( -121.834, -168.45, -86.5028, 0.07 ) }
    dend_66 { pt3dadd( -122.563, -169.531, -86.7029, 0.07 ) }
    dend_66 { pt3dadd( -123.14, -170.494, -86.9235, 0.07 ) }
    dend_66 { pt3dadd( -123.924, -171.925, -87.4076, 0.07 ) }
    dend_66 { pt3dadd( -124.252, -172.594, -87.7067, 0.07 ) }
    dend_66 { pt3dadd( -124.692, -173.568, -88.1739, 0.07 ) }
    dend_66 { pt3dadd( -124.969, -174.218, -88.5226, 0.07 ) }
    dend_66 { pt3dadd( -125.356, -175.071, -89.0592, 0.22 ) }
    dend_66 { pt3dadd( -125.608, -175.588, -89.4076, 0.22 ) }
    dend_66 { pt3dadd( -126.104, -176.539, -90.0227, 0.22 ) }
    dend_66 { pt3dadd( -126.375, -177.057, -90.3736, 0.22 ) }
    dend_66 { pt3dadd( -126.755, -177.85, -90.9033, 0.22 ) }
    dend_66 { pt3dadd( -127.119, -178.576, -91.4234, 0.22 ) }
    dend_66 { pt3dadd( -127.359, -179.065, -91.7878, 0.22 ) }
    dend_66 { pt3dadd( -127.551, -179.465, -92.1006, 0.22 ) }
    dend_66 { pt3dadd( -127.818, -180.063, -92.6049, 0.22 ) }
    dend_66 { pt3dadd( -128.077, -180.703, -93.1369, 0.22 ) }
    dend_66 { pt3dadd( -128.561, -182.095, -94.1669, 0.22 ) }
    dend_66 { pt3dadd( -128.727, -182.654, -94.5423, 0.22 ) }
    dend_66 { pt3dadd( -128.838, -183.04, -94.81, 0.22 ) }
    dend_66 { pt3dadd( -128.918, -183.337, -95.0218, 0.22 ) }
    dend_66 { pt3dadd( -129.001, -183.656, -95.2892, 0.22 ) }
    dend_66 { pt3dadd( -129.139, -184.248, -95.8146, 0.22 ) }
    dend_66 { pt3dadd( -129.228, -184.767, -96.2375, 0.22 ) }
    dend_66 { pt3dadd( -129.294, -185.252, -96.6144, 0.22 ) }
    dend_66 { pt3dadd( -129.343, -185.626, -96.9153, 0.22 ) }
    dend_66 { pt3dadd( -129.572, -187.22, -98.2288, 0.07 ) }
    dend_66 { pt3dadd( -129.693, -188.027, -98.9133, 0.07 ) }
    dend_66 { pt3dadd( -129.801, -188.871, -99.5996, 0.07 ) }
    dend_66 { pt3dadd( -129.91, -189.846, -100.385, 0.07 ) }
    dend_66 { pt3dadd( -130.064, -191.417, -101.609, 0.07 ) }
    dend_66 { pt3dadd( -130.17, -192.475, -102.398, 0.07 ) }
    dend_66 { pt3dadd( -130.249, -193.244, -102.913, 0.07 ) }
    dend_66 { pt3dadd( -130.371, -194.156, -103.56, 0.07 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 36/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -110.862, -152.023, -83.856, 0.15 ) }
    dend_63 { pt3dadd( -112.159, -151.914, -84.7483, 0.15 ) }
    dend_63 { pt3dadd( -113.442, -151.777, -85.5539, 0.15 ) }
    dend_63 { pt3dadd( -114.361, -151.652, -86.0533, 0.15 ) }
    dend_63 { pt3dadd( -115.206, -151.516, -86.472, 0.07 ) }
    dend_63 { pt3dadd( -116.045, -151.368, -86.8858, 0.07 ) }
    dend_63 { pt3dadd( -116.525, -151.279, -87.1266, 0.07 ) }
    dend_63 { pt3dadd( -117.165, -151.14, -87.4233, 0.07 ) }
    dend_63 { pt3dadd( -118.365, -150.895, -87.9275, 0.07 ) }
    dend_63 { pt3dadd( -118.952, -150.798, -88.1869, 0.15 ) }
    dend_63 { pt3dadd( -119.675, -150.699, -88.5114, 0.15 ) }
    dend_63 { pt3dadd( -120.53, -150.631, -88.9861, 0.15 ) }
    dend_63 { pt3dadd( -120.905, -150.63, -89.2285, 0.15 ) }
    dend_63 { pt3dadd( -121.337, -150.68, -89.5514, 0.15 ) }
    dend_63 { pt3dadd( -121.857, -150.843, -89.9691, 0.15 ) }
    dend_63 { pt3dadd( -122.055, -150.92, -90.1301, 0.15 ) }
    dend_63 { pt3dadd( -123.149, -151.422, -91.0009, 0.15 ) }
    dend_63 { pt3dadd( -123.569, -151.644, -91.3459, 0.15 ) }
    dend_63 { pt3dadd( -124.169, -151.96, -91.8597, 0.15 ) }
    dend_63 { pt3dadd( -124.906, -152.426, -92.5559, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 56/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 147.03, -80.8968, 82.7117, 0.22 ) }
    dend_60 { pt3dadd( 153.907, -83.2521, 87.4866, 0.22 ) }
    dend_60 { pt3dadd( 160.276, -85.2869, 93.0497, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 59/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 147.03, -80.8968, 82.7117, 0.07 ) }
    dend_57 { pt3dadd( 155.411, -83.5108, 88.1617, 0.22 ) }
    dend_57 { pt3dadd( 164.035, -84.313, 93.7961, 0.22 ) }
    dend_57 { pt3dadd( 172.324, -83.9522, 99.9563, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 63/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -44.3958, -193.513, -12.3321, 0.22 ) }
    dend_55 { pt3dadd( -48.2548, -202.641, -13.2316, 0.22 ) }
    dend_55 { pt3dadd( -52.0245, -211.416, -16.0253, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 66/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -44.3958, -193.513, -12.3321, 0.07 ) }
    dend_54 { pt3dadd( -48.4006, -202.918, -12.3516, 0.22 ) }
    dend_54 { pt3dadd( -52.7514, -212.144, -11.7011, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 69/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -67.4875, 68.2739, 121.762, 0.29 ) }
    dend_45 { pt3dadd( -69.993, 72.0774, 127.285, 0.29 ) }
    dend_45 { pt3dadd( -73.62, 76.5457, 131.542, 0.29 ) }
    dend_45 { pt3dadd( -77.4952, 81.1434, 135.427, 0.29 ) }
    dend_45 { pt3dadd( -81.2309, 86.1253, 138.959, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -67.4875, 68.2739, 121.762, 0.07 ) }
    dend_44 { pt3dadd( -70.8439, 73.3917, 129.378, 0.29 ) }
    dend_44 { pt3dadd( -73.394, 77.8037, 137.715, 0.29 ) }
    dend_44 { pt3dadd( -76.6894, 83.5072, 144.932, 0.29 ) }
    dend_44 { pt3dadd( -79.7812, 91.245, 150.035, 0.29 ) }
    dend_44 { pt3dadd( -84.7761, 98.2679, 154.639, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -37.6196, -12.4001, 15.4157, 0.74 ) }
    dend_30 { pt3dadd( -39.9338, -13.5146, 15.5631, 0.74 ) }
    dend_30 { pt3dadd( -42.0477, -14.5327, 15.6977, 0.74 ) }
    dend_30 { pt3dadd( -43.6822, -15.3199, 15.8018, 0.74 ) }
    dend_30 { pt3dadd( -46.1953, -16.5301, 15.9619, 0.74 ) }
    dend_30 { pt3dadd( -48.7576, -17.7641, 16.1251, 0.74 ) }
    dend_30 { pt3dadd( -50.5495, -18.627, 16.2392, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 87/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -37.6196, -12.4001, 15.4157, 0.81 ) }
    dend_27 { pt3dadd( -36.3401, -14.4465, 16.4896, 0.81 ) }
    dend_27 { pt3dadd( -35.2563, -16.2303, 17.3425, 0.59 ) }
    dend_27 { pt3dadd( -34.5438, -17.4759, 17.9497, 0.59 ) }
    dend_27 { pt3dadd( -33.5177, -19.4465, 18.9609, 0.44 ) }
    dend_27 { pt3dadd( -32.8648, -20.8259, 19.7116, 0.44 ) }
    dend_27 { pt3dadd( -32.2752, -22.2791, 20.5167, 0.44 ) }
    dend_27 { pt3dadd( -31.8827, -23.6665, 21.277, 0.44 ) }
    dend_27 { pt3dadd( -31.7374, -24.6786, 21.8092, 0.44 ) }
    dend_27 { pt3dadd( -31.6944, -25.8095, 22.4298, 0.44 ) }
    dend_27 { pt3dadd( -31.7222, -26.7259, 22.942, 0.44 ) }
    dend_27 { pt3dadd( -31.7807, -28.5273, 23.9321, 0.44 ) }
    dend_27 { pt3dadd( -31.8141, -30.2076, 24.82, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( -31.7528, -31.625, 25.5308, 0.44 ) }
    dend_27 { pt3dadd( -31.5182, -33.1518, 26.2257, 0.44 ) }
    dend_27 { pt3dadd( -31.2106, -34.3954, 26.7642, 0.59 ) }
    dend_27 { pt3dadd( -30.8111, -35.561, 27.2884, 0.59 ) }
    dend_27 { pt3dadd( -30.3172, -36.6882, 27.8341, 0.59 ) }
    dend_27 { pt3dadd( -29.4759, -38.3901, 28.6876, 0.59 ) }
    dend_27 { pt3dadd( -28.1594, -41.0178, 30.0515, 0.29 ) }
    dend_27 { pt3dadd( -27.5978, -42.2613, 30.7264, 0.29 ) }
    dend_27 { pt3dadd( -27.1487, -43.4367, 31.4073, 0.29 ) }
    dend_27 { pt3dadd( -26.8148, -44.4891, 32.2123, 0.44 ) }
    dend_27 { pt3dadd( -26.6319, -45.2252, 32.8331, 0.44 ) }
    dend_27 { pt3dadd( -26.5366, -45.794, 33.3623, 0.44 ) }
    dend_27 { pt3dadd( -26.4177, -46.8085, 34.3867, 0.44 ) }
    dend_27 { pt3dadd( -26.2824, -48.0955, 35.6525, 0.44 ) }
    dend_27 { pt3dadd( -25.9123, -51.4538, 38.8126, 0.15 ) }
    dend_27 { pt3dadd( -25.6358, -52.921, 40.1929, 0.07 ) }
    dend_27 { pt3dadd( -25.4083, -53.6737, 40.8848, 0.07 ) }
    dend_27 { pt3dadd( -25.0867, -54.3974, 41.5156, 0.22 ) }
    dend_27 { pt3dadd( -24.4375, -55.4995, 42.4201, 0.22 ) }
    dend_27 { pt3dadd( -24.2447, -55.7906, 42.6229, 0.22 ) }
    dend_27 { pt3dadd( -23.6156, -56.7312, 43.1579, 0.22 ) }
    dend_27 { pt3dadd( -23.2354, -57.4491, 43.6639, 0.22 ) }
    dend_27 { pt3dadd( -23.0962, -58.0536, 44.0725, 0.22 ) }
    dend_27 { pt3dadd( -23.1781, -59.3569, 44.9544, 0.22 ) }
    dend_27 { pt3dadd( -23.6204, -60.669, 45.8505, 0.22 ) }
    dend_27 { pt3dadd( -23.9942, -61.227, 46.2101, 0.22 ) }
    dend_27 { pt3dadd( -25.1933, -62.3222, 46.882, 0.22 ) }
    dend_27 { pt3dadd( -26.5928, -63.1503, 47.3684, 0.22 ) }
    dend_27 { pt3dadd( -27.4391, -63.4198, 47.5084, 0.22 ) }
    dend_27 { pt3dadd( -28.1508, -63.4929, 47.5124, 0.22 ) }
    dend_27 { pt3dadd( -30.1323, -63.2654, 47.2957, 0.22 ) }
    dend_27 { pt3dadd( -31.2258, -62.8818, 47.0496, 0.22 ) }
    dend_27 { pt3dadd( -32.1526, -62.1619, 46.6892, 0.22 ) }
    dend_27 { pt3dadd( -33.0816, -61.0864, 46.197, 0.22 ) }
    dend_27 { pt3dadd( -30.7155, -70.9416, 52.6985, 0.22 ) }
    dend_27 { pt3dadd( -29.5127, -81.2546, 58.7967, 0.22 ) }
    dend_27 { pt3dadd( -29.5548, -91.5999, 64.9583, 0.22 ) }
    dend_27 { pt3dadd( -29.0317, -100.713, 72.8117, 0.22 ) }
    dend_27 { pt3dadd( -28.1065, -110.549, 79.6958, 0.22 ) }
    dend_27 { pt3dadd( -26.5483, -119.891, 87.1322, 0.22 ) }
    dend_27 { pt3dadd( -23.1265, -130.189, 92.3508, 0.22 ) }
    dend_27 { pt3dadd( -18.649, -140.504, 96.6578, 0.22 ) }
    dend_27 { pt3dadd( -13.484, -150.56, 100.803, 0.22 ) }
    dend_27 { pt3dadd( -8.13584, -160.362, 105.309, 0.22 ) }
    dend_27 { pt3dadd( -2.90523, -169.773, 110.701, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 45/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 31.11, 275.912, -26.3158, 0.59 ) }
    dend_23 { pt3dadd( 31.8221, 279.224, -28.3913, 0.59 ) }
    dend_23 { pt3dadd( 32.0067, 280.111, -28.8424, 0.59 ) }
    dend_23 { pt3dadd( 32.2299, 281.149, -29.3513, 0.37 ) }
    dend_23 { pt3dadd( 32.3257, 281.613, -29.571, 0.15 ) }
    dend_23 { pt3dadd( 32.4563, 282.263, -29.8636, 0.15 ) }
    dend_23 { pt3dadd( 32.804, 284.104, -30.6326, 0.15 ) }
    dend_23 { pt3dadd( 33.2147, 286.823, -31.553, 0.07 ) }
    dend_23 { pt3dadd( 33.4037, 288.125, -31.9655, 0.07 ) }
    dend_23 { pt3dadd( 33.5505, 289.031, -32.237, 0.07 ) }
    dend_23 { pt3dadd( 33.7211, 290.158, -32.5661, 0.07 ) }
    dend_23 { pt3dadd( 33.9002, 291.596, -32.9718, 0.07 ) }
    dend_23 { pt3dadd( 34.0622, 293.141, -33.4043, 0.07 ) }
    dend_23 { pt3dadd( 34.3359, 295.624, -34.1597, 0.07 ) }
    dend_23 { pt3dadd( 34.4527, 296.671, -34.4791, 0.07 ) }
    dend_23 { pt3dadd( 34.5846, 297.728, -34.8179, 0.07 ) }
    dend_23 { pt3dadd( 34.6638, 298.345, -35.0201, 0.15 ) }
    dend_23 { pt3dadd( 34.8096, 299.41, -35.3911, 0.15 ) }
    dend_23 { pt3dadd( 34.9008, 300.258, -35.6795, 0.15 ) }
    dend_23 { pt3dadd( 34.9493, 300.935, -35.9239, 0.15 ) }
    dend_23 { pt3dadd( 34.961, 301.616, -36.1941, 0.15 ) }
    dend_23 { pt3dadd( 34.9391, 302.952, -36.7228, 0.15 ) }
    dend_23 { pt3dadd( 34.9112, 303.874, -37.0745, 0.15 ) }
    dend_23 { pt3dadd( 34.8574, 305.211, -37.5323, 0.15 ) }
    dend_23 { pt3dadd( 34.7992, 306.873, -38.0741, 0.15 ) }
    dend_23 { pt3dadd( 34.7397, 308.045, -38.4391, 0.15 ) }
    dend_23 { pt3dadd( 34.6946, 308.74, -38.6394, 0.15 ) }
    dend_23 { pt3dadd( 34.5978, 310.392, -39.0787, 0.15 ) }
    dend_23 { pt3dadd( 34.5366, 311.747, -39.3831, 0.15 ) }
    dend_23 { pt3dadd( 34.487, 313.099, -39.6271, 0.15 ) }
    dend_23 { pt3dadd( 34.4343, 314.299, -39.7961, 0.15 ) }
    dend_23 { pt3dadd( 34.4232, 315.093, -39.8961, 0.15 ) }
    dend_23 { pt3dadd( 34.4108, 317.326, -40.161, 0.22 ) }
    dend_23 { pt3dadd( 34.402, 318.326, -40.2732, 0.22 ) }
    dend_23 { pt3dadd( 34.3701, 320.993, -40.5594, 0.22 ) }
    dend_23 { pt3dadd( 34.3746, 321.35, -40.6106, 0.22 ) }
    dend_23 { pt3dadd( 34.4084, 322.227, -40.7593, 0.22 ) }
    dend_23 { pt3dadd( 34.4304, 322.719, -40.8534, 0.22 ) }
    dend_23 { pt3dadd( 34.4657, 323.426, -40.9975, 0.22 ) }
    dend_23 { pt3dadd( 34.5762, 325.626, -41.5262, 0.22 ) }
    dend_23 { pt3dadd( 34.8014, 328.917, -42.5957, 0.29 ) }
    dend_23 { pt3dadd( 34.8983, 330.213, -43.0578, 0.22 ) }
    dend_23 { pt3dadd( 35.0307, 331.791, -43.6453, 0.22 ) }
    dend_23 { pt3dadd( 35.2017, 333.484, -44.292, 0.22 ) }
    dend_23 { pt3dadd( 35.5452, 336.396, -45.4097, 0.22 ) }
    dend_23 { pt3dadd( 36.0431, 339.658, -46.6545, 0.15 ) }
    dend_23 { pt3dadd( 36.223, 340.724, -47.045, 0.15 ) }
    dend_23 { pt3dadd( 36.4333, 341.884, -47.49, 0.15 ) }
    dend_23 { pt3dadd( 36.6577, 343.125, -47.9685, 0.15 ) }
    dend_23 { pt3dadd( 37.0422, 345.361, -48.8144, 0.15 ) }
    dend_23 { pt3dadd( 37.6751, 349.206, -50.2011, 0.15 ) }
    dend_23 { pt3dadd( 37.9463, 350.915, -50.765, 0.15 ) }
    dend_23 { pt3dadd( 38.36, 353.411, -51.6066, 0.15 ) }
    dend_23 { pt3dadd( 38.6339, 354.984, -52.1252, 0.15 ) }
    dend_23 { pt3dadd( 38.9113, 356.466, -52.5944, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_23 { pt3dadd( 39.2224, 357.921, -53.0408, 0.15 ) }
    dend_23 { pt3dadd( 39.7415, 360.173, -53.6838, 0.15 ) }
    dend_23 { pt3dadd( 40.1206, 361.742, -54.1071, 0.15 ) }
    dend_23 { pt3dadd( 40.5038, 363.652, -54.6215, 0.15 ) }
    dend_23 { pt3dadd( 40.5804, 364.1, -54.7625, 0.15 ) }
    dend_23 { pt3dadd( 40.8457, 366.26, -55.5203, 0.15 ) }
    dend_23 { pt3dadd( 40.9265, 367.647, -56.0606, 0.15 ) }
    dend_23 { pt3dadd( 40.8899, 369.396, -56.8081, 0.15 ) }
    dend_23 { pt3dadd( 40.6034, 372.475, -58.1911, 0.15 ) }
    dend_23 { pt3dadd( 40.2345, 374.413, -59.1063, 0.15 ) }
    dend_23 { pt3dadd( 39.6394, 376.423, -60.0811, 0.15 ) }
    dend_23 { pt3dadd( 39.0975, 377.688, -60.6868, 0.15 ) }
    dend_23 { pt3dadd( 38.4333, 378.974, -61.256, 0.15 ) }
    dend_23 { pt3dadd( 37.6867, 380.223, -61.7499, 0.15 ) }
    dend_23 { pt3dadd( 36.2247, 382.384, -62.4114, 0.15 ) }
    dend_23 { pt3dadd( 35.0505, 384.026, -62.771, 0.15 ) }
    dend_23 { pt3dadd( 33.7159, 385.978, -63.073, 0.15 ) }
    dend_23 { pt3dadd( 32.2666, 388.375, -63.2683, 0.15 ) }
    dend_23 { pt3dadd( 31.6866, 389.463, -63.3011, 0.15 ) }
    dend_23 { pt3dadd( 30.735, 391.552, -63.2697, 0.15 ) }
    dend_23 { pt3dadd( 30.0859, 393.255, -63.2088, 0.15 ) }
    dend_23 { pt3dadd( 29.0179, 396.388, -63.1222, 0.15 ) }
    dend_23 { pt3dadd( 28.07, 399.303, -63.1296, 0.15 ) }
    dend_23 { pt3dadd( 27.8441, 400.001, -63.1533, 0.15 ) }
    dend_23 { pt3dadd( 27.3438, 401.625, -63.2524, 0.15 ) }
    dend_23 { pt3dadd( 26.2931, 405.398, -63.5623, 0.15 ) }
    dend_23 { pt3dadd( 25.6388, 407.946, -63.7854, 0.15 ) }
    dend_23 { pt3dadd( 24.9444, 411.151, -64.0625, 0.15 ) }
    dend_23 { pt3dadd( 24.6163, 413.051, -64.2532, 0.15 ) }
    dend_23 { pt3dadd( 24.2224, 416.41, -64.5714, 0.07 ) }
    dend_23 { pt3dadd( 24.1461, 418.744, -64.7796, 0.07 ) }
    dend_23 { pt3dadd( 24.2627, 420.087, -64.8877, 0.07 ) }
    dend_23 { pt3dadd( 24.9101, 423.11, -65.1423, 0.07 ) }
    dend_23 { pt3dadd( 25.3351, 424.324, -65.2593, 0.07 ) }
    dend_23 { pt3dadd( 25.943, 425.63, -65.4324, 0.07 ) }
    dend_23 { pt3dadd( 26.7956, 427.06, -65.7601, 0.07 ) }
    dend_23 { pt3dadd( 27.4905, 428.106, -66.0881, 0.07 ) }
    dend_23 { pt3dadd( 28.5482, 429.542, -66.6695, 0.07 ) }
    dend_23 { pt3dadd( 29.2149, 430.354, -67.0408, 0.07 ) }
    dend_23 { pt3dadd( 30.08, 431.49, -67.53, 0.07 ) }
    dend_23 { pt3dadd( 31.4277, 433.427, -68.3216, 0.07 ) }
    dend_23 { pt3dadd( 32.166, 434.551, -68.7406, 0.07 ) }
    dend_23 { pt3dadd( 33.2936, 436.319, -69.3433, 0.07 ) }
    dend_23 { pt3dadd( 34.3156, 438.012, -69.8643, 0.07 ) }
    dend_23 { pt3dadd( 35.6181, 440.34, -70.53, 0.07 ) }
    dend_23 { pt3dadd( 36.3754, 441.85, -70.9613, 0.07 ) }
    dend_23 { pt3dadd( 37.3044, 444.201, -71.6344, 0.07 ) }
    dend_23 { pt3dadd( 37.7087, 445.529, -72.0116, 0.07 ) }
    dend_23 { pt3dadd( 38.0984, 447.621, -72.5746, 0.07 ) }
    dend_23 { pt3dadd( 38.3037, 449.683, -73.1524, 0.07 ) }
    dend_23 { pt3dadd( 38.3816, 452.181, -73.8474, 0.07 ) }
    dend_23 { pt3dadd( 38.3091, 455.403, -74.7553, 0.07 ) }
    dend_23 { pt3dadd( 38.2185, 456.989, -75.224, 0.07 ) }
    dend_23 { pt3dadd( 38.1356, 459.947, -76.141, 0.07 ) }
    dend_23 { pt3dadd( 38.1598, 461.55, -76.6509, 0.07 ) }
    dend_23 { pt3dadd( 38.3043, 463.124, -77.1228, 0.07 ) }
    dend_23 { pt3dadd( 38.5821, 464.812, -77.6394, 0.07 ) }
    dend_23 { pt3dadd( 38.942, 466.365, -78.1536, 0.07 ) }
    dend_23 { pt3dadd( 39.7567, 469.256, -79.2092, 0.07 ) }
    dend_23 { pt3dadd( 40.1907, 470.512, -79.6807, 0.07 ) }
    dend_23 { pt3dadd( 41.858, 475.071, -81.3315, 0.07 ) }
    dend_23 { pt3dadd( 42.243, 476.08, -81.6857, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 62/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 31.11, 275.912, -26.3158, 0.07 ) }
    dend_20 { pt3dadd( 31.8409, 279.526, -25.5267, 0.07 ) }
    dend_20 { pt3dadd( 32.0601, 280.823, -25.2785, 0.07 ) }
    dend_20 { pt3dadd( 32.3873, 282.853, -24.9623, 0.07 ) }
    dend_20 { pt3dadd( 32.7235, 284.942, -24.6515, 0.07 ) }
    dend_20 { pt3dadd( 33.2564, 288.335, -24.168, 0.22 ) }
    dend_20 { pt3dadd( 33.5361, 290.173, -23.9166, 0.22 ) }
    dend_20 { pt3dadd( 33.8356, 292.567, -23.6178, 0.22 ) }
    dend_20 { pt3dadd( 34.2036, 295.621, -23.304, 0.07 ) }
    dend_20 { pt3dadd( 34.438, 297.564, -23.1039, 0.07 ) }
    dend_20 { pt3dadd( 34.5912, 298.692, -22.9877, 0.07 ) }
    dend_20 { pt3dadd( 34.6695, 299.332, -22.9162, 0.07 ) }
    dend_20 { pt3dadd( 34.8758, 301.437, -22.5979, 0.15 ) }
    dend_20 { pt3dadd( 35.0315, 303.387, -22.2745, 0.15 ) }
    dend_20 { pt3dadd( 35.1137, 304.947, -22.0101, 0.15 ) }
    dend_20 { pt3dadd( 35.1657, 306.91, -21.7223, 0.15 ) }
    dend_20 { pt3dadd( 35.1892, 309.732, -21.3645, 0.15 ) }
    dend_20 { pt3dadd( 35.149, 310.862, -21.2697, 0.15 ) }
    dend_20 { pt3dadd( 35.0364, 312.293, -21.2449, 0.15 ) }
    dend_20 { pt3dadd( 34.9312, 313.419, -21.278, 0.15 ) }
    dend_20 { pt3dadd( 34.8119, 314.761, -21.3683, 0.15 ) }
    dend_20 { pt3dadd( 34.7109, 316.861, -21.5369, 0.15 ) }
    dend_20 { pt3dadd( 34.7592, 320.411, -21.8664, 0.07 ) }
    dend_20 { pt3dadd( 34.9659, 323.629, -22.1515, 0.07 ) }
    dend_20 { pt3dadd( 35.186, 325.685, -22.2909, 0.07 ) }
    dend_20 { pt3dadd( 35.3519, 326.753, -22.3537, 0.07 ) }
    dend_20 { pt3dadd( 35.8772, 329.384, -22.4755, 0.07 ) }
    dend_20 { pt3dadd( 36.6111, 332.444, -22.5778, 0.07 ) }
    dend_20 { pt3dadd( 37.5182, 335.679, -22.6307, 0.07 ) }
    dend_20 { pt3dadd( 37.9359, 337.136, -22.6348, 0.07 ) }
    dend_20 { pt3dadd( 38.6379, 339.922, -22.6479, 0.07 ) }
    dend_20 { pt3dadd( 38.8532, 341.14, -22.6378, 0.07 ) }
    dend_20 { pt3dadd( 38.9081, 341.738, -22.6253, 0.07 ) }
    dend_20 { pt3dadd( 38.9146, 343.035, -22.5634, 0.07 ) }
    dend_20 { pt3dadd( 38.8779, 344.013, -22.504, 0.07 ) }
    dend_20 { pt3dadd( 38.7309, 347.331, -22.2799, 0.07 ) }
    dend_20 { pt3dadd( 38.6233, 350.49, -22.031, 0.07 ) }
    dend_20 { pt3dadd( 38.5974, 352.369, -21.8768, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( 38.5529, 356.636, -21.5174, 0.07 ) }
    dend_20 { pt3dadd( 38.5474, 359.767, -21.2344, 0.07 ) }
    dend_20 { pt3dadd( 38.566, 361.046, -21.1101, 0.07 ) }
    dend_20 { pt3dadd( 38.6215, 362.172, -20.9907, 0.07 ) }
    dend_20 { pt3dadd( 38.8493, 364.042, -20.8082, 0.07 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 5/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 28.8759, 31.1452, 21.0699, 0.37 ) }
    dend_16 { pt3dadd( 30.369, 31.245, 20.9517, 0.37 ) }
    dend_16 { pt3dadd( 31.8743, 31.4239, 20.8933, 0.37 ) }
    dend_16 { pt3dadd( 32.6976, 31.5575, 20.9073, 0.52 ) }
    dend_16 { pt3dadd( 34.1189, 31.8163, 20.9783, 0.96 ) }
    dend_16 { pt3dadd( 35.3351, 32.044, 21.102, 0.96 ) }
    dend_16 { pt3dadd( 36.4895, 32.2195, 21.2488, 0.96 ) }
    dend_16 { pt3dadd( 37.3016, 32.3449, 21.3881, 0.74 ) }
    dend_16 { pt3dadd( 38.0514, 32.4424, 21.5572, 0.44 ) }
    dend_16 { pt3dadd( 38.7568, 32.5146, 21.7228, 0.44 ) }
    dend_16 { pt3dadd( 39.6985, 32.6183, 21.9363, 0.44 ) }
    dend_16 { pt3dadd( 40.7323, 32.7609, 22.1054, 0.44 ) }
    dend_16 { pt3dadd( 41.757, 32.9265, 22.1997, 0.52 ) }
    dend_16 { pt3dadd( 42.9244, 33.1732, 22.2233, 0.52 ) }
    dend_16 { pt3dadd( 45.0449, 33.7521, 22.1215, 0.96 ) }
    dend_16 { pt3dadd( 46.271, 34.165, 22.0068, 1.18 ) }
    dend_16 { pt3dadd( 47.297, 34.5483, 21.8638, 0.59 ) }
    dend_16 { pt3dadd( 47.8402, 34.7664, 21.7743, 0.59 ) }
    dend_16 { pt3dadd( 48.7343, 35.1206, 21.6002, 0.59 ) }
    dend_16 { pt3dadd( 49.6165, 35.439, 21.3949, 0.59 ) }
    dend_16 { pt3dadd( 50.059, 35.5575, 21.2809, 0.59 ) }
    dend_16 { pt3dadd( 51.0871, 35.7549, 21.0534, 0.29 ) }
    dend_16 { pt3dadd( 52.2257, 35.927, 20.8783, 0.29 ) }
    dend_16 { pt3dadd( 52.6969, 35.9834, 20.8303, 0.22 ) }
    dend_16 { pt3dadd( 53.4458, 36.0566, 20.7945, 0.22 ) }
    dend_16 { pt3dadd( 54.4276, 36.1833, 20.7908, 0.22 ) }
    dend_16 { pt3dadd( 55.5501, 36.4375, 20.7574, 0.22 ) }
    dend_16 { pt3dadd( 57.3111, 36.8822, 20.7229, 0.07 ) }
    dend_16 { pt3dadd( 58.3693, 37.1624, 20.716, 0.07 ) }
    dend_16 { pt3dadd( 59.3715, 37.435, 20.712, 0.07 ) }
    dend_16 { pt3dadd( 61.5998, 38.0726, 20.7123, 0.07 ) }
    dend_16 { pt3dadd( 64.3769, 39.0062, 20.6843, 0.07 ) }
    dend_16 { pt3dadd( 72.6395, 42.4626, 20.1479, 0.07 ) }
    dend_16 { pt3dadd( 81.4227, 44.2749, 20.4239, 0.07 ) }
    dend_16 { pt3dadd( 90.2583, 44.7322, 21.9164, 0.07 ) }
    dend_16 { pt3dadd( 98.5639, 44.8814, 25.3077, 0.07 ) }
    dend_16 { pt3dadd( 106.164, 44.8094, 30.0763, 0.07 ) }
    dend_16 { pt3dadd( 113.575, 44.2899, 35.1074, 0.07 ) }
    dend_16 { pt3dadd( 121.853, 42.555, 38.1014, 0.07 ) }
    dend_16 { pt3dadd( 129.966, 41.7475, 41.8472, 0.07 ) }
    dend_16 { pt3dadd( 137.63, 41.0717, 46.4645, 0.07 ) }
    dend_16 { pt3dadd( 145.656, 39.9553, 50.3172, 0.07 ) }
    dend_16 { pt3dadd( 154.286, 38.9876, 52.5712, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 48/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 28.8759, 31.1452, 21.0699, 1.55 ) }
    dend_11 { pt3dadd( 29.488, 31.7032, 21.3367, 1.55 ) }
    dend_11 { pt3dadd( 30.1924, 32.4921, 21.7468, 1.33 ) }
    dend_11 { pt3dadd( 30.7731, 33.3013, 22.3321, 1.11 ) }
    dend_11 { pt3dadd( 31.1845, 33.9837, 22.9364, 0.81 ) }
    dend_11 { pt3dadd( 31.6611, 34.8529, 23.7942, 0.81 ) }
    dend_11 { pt3dadd( 32.0099, 35.5211, 24.5113, 0.81 ) }
    dend_11 { pt3dadd( 32.3133, 36.1553, 25.3746, 0.74 ) }
    dend_11 { pt3dadd( 32.7074, 37.0833, 26.9719, 0.88 ) }
    dend_11 { pt3dadd( 32.8409, 37.441, 27.718, 0.88 ) }
    dend_11 { pt3dadd( 32.8754, 37.5276, 27.9285, 0.88 ) }
    dend_11 { pt3dadd( 32.9587, 37.6528, 28.2774, 0.74 ) }
    dend_11 { pt3dadd( 33.2729, 37.8937, 28.9696, 0.52 ) }
    dend_11 { pt3dadd( 33.5987, 38.1096, 29.3997, 0.37 ) }
    dend_11 { pt3dadd( 33.8425, 38.399, 29.5623, 0.37 ) }
    dend_11 { pt3dadd( 34.2492, 38.9548, 29.7911, 0.37 ) }
    dend_11 { pt3dadd( 34.7203, 39.565, 30.0784, 0.59 ) }
    dend_11 { pt3dadd( 35.0083, 39.925, 30.2635, 0.59 ) }
    dend_11 { pt3dadd( 35.6305, 40.6895, 30.6965, 0.59 ) }
    dend_11 { pt3dadd( 36.2742, 41.4006, 31.1682, 0.59 ) }
    dend_11 { pt3dadd( 36.6974, 41.7342, 31.4807, 0.29 ) }
    dend_11 { pt3dadd( 37.5645, 42.0409, 32.1064, 0.15 ) }
    dend_11 { pt3dadd( 37.9168, 42.0836, 32.355, 0.15 ) }
    dend_11 { pt3dadd( 38.1995, 42.06, 32.5418, 0.15 ) }
    dend_11 { pt3dadd( 38.5509, 41.9475, 32.7689, 0.15 ) }
    dend_11 { pt3dadd( 39.2179, 41.6046, 33.1695, 0.15 ) }
    dend_11 { pt3dadd( 39.7845, 41.2523, 33.5155, 0.15 ) }
    dend_11 { pt3dadd( 43.318, 45.7712, 37.4482, 0.15 ) }
    dend_11 { pt3dadd( 47.7129, 48.5076, 42.0926, 0.15 ) }
    dend_11 { pt3dadd( 51.029, 51.0668, 47.6448, 0.15 ) }
    dend_11 { pt3dadd( 55.2744, 54.2006, 52.1756, 0.15 ) }
    dend_11 { pt3dadd( 58.6407, 57.6263, 57.2061, 0.15 ) }
    dend_11 { pt3dadd( 62.4555, 59.874, 62.5697, 0.15 ) }
    dend_11 { pt3dadd( 65.2569, 62.8226, 68.2116, 0.15 ) }
    dend_11 { pt3dadd( 68.7261, 65.4576, 73.6333, 0.15 ) }
    dend_11 { pt3dadd( 71.5735, 69.0308, 78.877, 0.15 ) }
    dend_11 { pt3dadd( 75.3998, 72.495, 83.5387, 0.15 ) }
    dend_11 { pt3dadd( 79.813, 76.5234, 87.098, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 86/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -124.906, -152.426, -92.5559, 0.07 ) }
    dend_65 { pt3dadd( -124.886, -153.662, -91.5446, 0.07 ) }
    dend_65 { pt3dadd( -124.783, -154.955, -90.6273, 0.07 ) }
    dend_65 { pt3dadd( -124.662, -155.942, -90.0904, 0.07 ) }
    dend_65 { pt3dadd( -124.507, -156.9, -89.7012, 0.07 ) }
    dend_65 { pt3dadd( -124.198, -158.352, -89.2316, 0.07 ) }
    dend_65 { pt3dadd( -123.751, -159.996, -88.7914, 0.07 ) }
    dend_65 { pt3dadd( -123.29, -161.335, -88.5908, 0.07 ) }
    dend_65 { pt3dadd( -122.728, -163.017, -88.4507, 0.07 ) }
    dend_65 { pt3dadd( -122.377, -164.36, -88.3673, 0.07 ) }
    dend_65 { pt3dadd( -122.165, -165.532, -88.3426, 0.07 ) }
    dend_65 { pt3dadd( -122.095, -167.093, -88.3429, 0.07 ) }
    dend_65 { pt3dadd( -122.314, -169.043, -88.3549, 0.07 ) }
    dend_65 { pt3dadd( -122.821, -171.025, -88.3913, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_65 { pt3dadd( -123.651, -173.366, -88.4412, 0.07 ) }
    dend_65 { pt3dadd( -124.44, -175.172, -88.5292, 0.07 ) }
    dend_65 { pt3dadd( -125.739, -177.693, -88.7279, 0.07 ) }
    dend_65 { pt3dadd( -126.888, -179.686, -88.9573, 0.07 ) }
    dend_65 { pt3dadd( -127.783, -181.179, -89.1883, 0.07 ) }
    dend_65 { pt3dadd( -128.496, -182.379, -89.4093, 0.07 ) }
    dend_65 { pt3dadd( -128.867, -183.004, -89.5276, 0.07 ) }
    dend_65 { pt3dadd( -129.626, -184.34, -89.7572, 0.07 ) }
    dend_65 { pt3dadd( -130.494, -186.004, -90.0874, 0.07 ) }
    dend_65 { pt3dadd( -131.076, -187.196, -90.326, 0.07 ) }
    dend_65 { pt3dadd( -131.658, -188.352, -90.4979, 0.07 ) }
    dend_65 { pt3dadd( -132.143, -189.255, -90.6025, 0.07 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 12/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -124.906, -152.426, -92.5559, 0.07 ) }
    dend_64 { pt3dadd( -126.123, -151.878, -93.2958, 0.07 ) }
    dend_64 { pt3dadd( -127.391, -151.229, -94.1913, 0.07 ) }
    dend_64 { pt3dadd( -128.076, -150.856, -94.7156, 0.07 ) }
    dend_64 { pt3dadd( -129.078, -150.271, -95.5282, 0.07 ) }
    dend_64 { pt3dadd( -129.969, -149.715, -96.4273, 0.07 ) }
    dend_64 { pt3dadd( -130.76, -149.189, -97.3792, 0.07 ) }
    dend_64 { pt3dadd( -131.46, -148.654, -98.4564, 0.07 ) }
    dend_64 { pt3dadd( -131.785, -148.386, -99.0289, 0.07 ) }
    dend_64 { pt3dadd( -131.987, -148.218, -99.4132, 0.07 ) }
    dend_64 { pt3dadd( -133.119, -147.311, -101.621, 0.07 ) }
    dend_64 { pt3dadd( -133.708, -146.869, -102.637, 0.07 ) }
    dend_64 { pt3dadd( -134.354, -146.414, -103.619, 0.07 ) }
    dend_64 { pt3dadd( -134.87, -146.086, -104.302, 0.07 ) }
    dend_64 { pt3dadd( -135.577, -145.69, -105.208, 0.07 ) }
    dend_64 { pt3dadd( -136.051, -145.434, -105.747, 0.07 ) }
    dend_64 { pt3dadd( -137.069, -144.897, -106.872, 0.07 ) }
    dend_64 { pt3dadd( -137.83, -144.502, -107.899, 0.07 ) }
    dend_64 { pt3dadd( -138.793, -143.98, -109.59, 0.07 ) }
    dend_64 { pt3dadd( -139.622, -143.498, -111.444, 0.07 ) }
    dend_64 { pt3dadd( -140.184, -143.113, -113.131, 0.07 ) }
    dend_64 { pt3dadd( -140.745, -142.6, -115.569, 0.07 ) }
    dend_64 { pt3dadd( -141.006, -142.296, -117.23, 0.07 ) }
    dend_64 { pt3dadd( -141.075, -142.169, -117.908, 0.07 ) }
    dend_64 { pt3dadd( -141.123, -141.934, -119.061, 0.07 ) }
    dend_64 { pt3dadd( -141.158, -141.588, -120.593, 0.07 ) }
    dend_64 { pt3dadd( -141.192, -141.396, -121.54, 0.07 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 39/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 172.324, -83.9522, 99.9563, 0.29 ) }
    dend_59 { pt3dadd( 183.715, -85.5138, 108.261, 0.29 ) }
    dend_59 { pt3dadd( 195.148, -86.502, 116.596, 0.29 ) }
    dend_59 { pt3dadd( 207.451, -85.5106, 123.583, 0.29 ) }
    dend_59 { pt3dadd( 219.064, -86.6051, 131.653, 0.29 ) }
    dend_59 { pt3dadd( 231.282, -86.5738, 138.855, 0.29 ) }
    dend_59 { pt3dadd( 243.401, -85.7744, 146.181, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 46/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 172.324, -83.9522, 99.9563, 0.07 ) }
    dend_58 { pt3dadd( 181.666, -84.9256, 105.691, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 48/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -81.2309, 86.1253, 138.959, 0.29 ) }
    dend_47 { pt3dadd( -84.1883, 94.4933, 146.181, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 50/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -81.2309, 86.1253, 138.959, 0.07 ) }
    dend_46 { pt3dadd( -85.0701, 90.015, 142.996, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_30 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -50.5495, -18.627, 16.2392, 0.22 ) }
    dend_40 { pt3dadd( -52.4918, -18.5814, 14.6392, 0.22 ) }
    dend_40 { pt3dadd( -53.8787, -18.4219, 14.1706, 0.29 ) }
    dend_40 { pt3dadd( -54.4088, -18.342, 14.0717, 0.29 ) }
    dend_40 { pt3dadd( -55.003, -18.2423, 14.001, 0.29 ) }
    dend_40 { pt3dadd( -55.9836, -18.0608, 13.9411, 0.29 ) }
    dend_40 { pt3dadd( -58.3428, -17.5555, 13.8679, 0.29 ) }
    dend_40 { pt3dadd( -60.7587, -16.9519, 13.9772, 0.29 ) }
    dend_40 { pt3dadd( -62.5416, -16.4931, 14.1228, 0.29 ) }
    dend_40 { pt3dadd( -63.9196, -16.1422, 14.2386, 0.29 ) }
    dend_40 { pt3dadd( -65.9416, -15.6869, 14.3847, 0.29 ) }
    dend_40 { pt3dadd( -67.5061, -15.3905, 14.4425, 0.29 ) }
    dend_40 { pt3dadd( -68.6771, -15.2053, 14.4053, 0.29 ) }
    dend_40 { pt3dadd( -70.2215, -15.0169, 14.2462, 0.29 ) }
    dend_40 { pt3dadd( -71.9977, -14.8696, 13.9751, 0.29 ) }
    dend_40 { pt3dadd( -73.2897, -14.813, 13.7139, 0.29 ) }
    dend_40 { pt3dadd( -74.8871, -14.8385, 13.2831, 0.07 ) }
    dend_40 { pt3dadd( -75.5723, -14.8926, 13.0668, 0.07 ) }
    dend_40 { pt3dadd( -76.0974, -14.946, 12.8741, 0.07 ) }
    dend_40 { pt3dadd( -76.8568, -15.0011, 12.4909, 0.07 ) }
    dend_40 { pt3dadd( -86.1183, -12.2949, 12.1304, 0.07 ) }
    dend_40 { pt3dadd( -95.1095, -9.06423, 10.7335, 0.07 ) }
    dend_40 { pt3dadd( -104.437, -6.5701, 10.7189, 0.07 ) }
    dend_40 { pt3dadd( -113.745, -4.99568, 8.68773, 0.07 ) }
    dend_40 { pt3dadd( -122.514, -1.58063, 6.52965, 0.07 ) }
    dend_40 { pt3dadd( -130.596, 3.20826, 4.29608, 0.07 ) }
    dend_40 { pt3dadd( -138.481, 8.75414, 3.75025, 0.07 ) }
    dend_40 { pt3dadd( -147.054, 13.074, 4.78589, 0.07 ) }
    dend_40 { pt3dadd( -155.61, 17.3074, 6.23441, 0.07 ) }
    dend_40 { pt3dadd( -164.71, 20.4124, 7.11666, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 82/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -50.5495, -18.627, 16.2392, 0.88 ) }
    dend_31 { pt3dadd( -50.5052, -19.2752, 16.9636, 0.88 ) }
    dend_31 { pt3dadd( -50.4713, -20.4933, 18.2959, 0.88 ) }
    dend_31 { pt3dadd( -50.5997, -21.2557, 19.2023, 0.88 ) }
    dend_31 { pt3dadd( -50.8467, -21.7709, 19.9034, 1.11 ) }
    dend_31 { pt3dadd( -51.3503, -22.283, 20.7306, 1.11 ) }
    dend_31 { pt3dadd( -51.9045, -22.6899, 21.4521, 1.11 ) }
    dend_31 { pt3dadd( -52.22, -22.8451, 21.7694, 0.74 ) }
    dend_31 { pt3dadd( -53.7673, -23.4354, 23.0822, 0.88 ) }
    dend_31 { pt3dadd( -55.2542, -23.8807, 24.2108, 0.88 ) }
    dend_31 { pt3dadd( -57.2085, -24.3421, 25.5678, 1.03 ) }
    dend_31 { pt3dadd( -58.5134, -24.5821, 26.3977, 0.81 ) }
    dend_31 { pt3dadd( -59.5186, -24.7319, 27.0017, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.90523, -169.773, 110.701, 0.29 ) }
    dend_29 { pt3dadd( -1.03572, -176.722, 113.878, 0.29 ) }
    dend_29 { pt3dadd( 1.91147, -182.873, 117.796, 0.29 ) }
    dend_29 { pt3dadd( 4.96722, -189.443, 120.858, 0.29 ) }
    dend_29 { pt3dadd( 8.55502, -196.175, 122.78, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_29 { pt3dadd( 11.7651, -203.047, 124.865, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.90523, -169.773, 110.701, 0.07 ) }
    dend_28 { pt3dadd( -0.694472, -177.696, 117.371, 0.29 ) }
    dend_28 { pt3dadd( 2.30324, -185.609, 123.739, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 4/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 38.8493, 364.042, -20.8082, 0.15 ) }
    dend_22 { pt3dadd( 38.5318, 367.058, -21.3654, 0.15 ) }
    dend_22 { pt3dadd( 38.3219, 368.684, -21.6947, 0.15 ) }
    dend_22 { pt3dadd( 38.1023, 370.549, -22.0516, 0.15 ) }
    dend_22 { pt3dadd( 37.8965, 372.398, -22.4155, 0.15 ) }
    dend_22 { pt3dadd( 37.6937, 374.655, -22.9016, 0.15 ) }
    dend_22 { pt3dadd( 37.4619, 377.944, -23.7005, 0.15 ) }
    dend_22 { pt3dadd( 37.2854, 380.886, -24.4944, 0.15 ) }
    dend_22 { pt3dadd( 37.2257, 382.694, -25.0232, 0.15 ) }
    dend_22 { pt3dadd( 37.2194, 383.898, -25.4031, 0.15 ) }
    dend_22 { pt3dadd( 37.3361, 386.333, -26.2777, 0.15 ) }
    dend_22 { pt3dadd( 37.5383, 387.85, -26.8835, 0.15 ) }
    dend_22 { pt3dadd( 37.716, 388.526, -27.1795, 0.15 ) }
    dend_22 { pt3dadd( 38.3185, 390.099, -27.912, 0.15 ) }
    dend_22 { pt3dadd( 38.8802, 391.295, -28.4916, 0.15 ) }
    dend_22 { pt3dadd( 39.5159, 392.429, -29.0574, 0.15 ) }
    dend_22 { pt3dadd( 40.0021, 393.211, -29.4496, 0.15 ) }
    dend_22 { pt3dadd( 40.8656, 394.732, -30.2156, 0.15 ) }
    dend_22 { pt3dadd( 41.3763, 395.808, -30.803, 0.15 ) }
    dend_22 { pt3dadd( 41.6268, 396.539, -31.2204, 0.15 ) }
    dend_22 { pt3dadd( 41.997, 398.303, -32.1522, 0.15 ) }
    dend_22 { pt3dadd( 42.0775, 398.97, -32.4477, 0.15 ) }
    dend_22 { pt3dadd( 42.248, 401.303, -33.3298, 0.15 ) }
    dend_22 { pt3dadd( 42.3603, 402.85, -33.8344, 0.15 ) }
    dend_22 { pt3dadd( 42.5746, 404.407, -34.3255, 0.15 ) }
    dend_22 { pt3dadd( 42.9568, 405.984, -34.7898, 0.15 ) }
    dend_22 { pt3dadd( 43.8405, 408.311, -35.4576, 0.15 ) }
    dend_22 { pt3dadd( 44.1963, 408.994, -35.6683, 0.15 ) }
    dend_22 { pt3dadd( 45.3358, 410.709, -36.2386, 0.15 ) }
    dend_22 { pt3dadd( 46.4213, 412.196, -36.8362, 0.15 ) }
    dend_22 { pt3dadd( 47.5939, 413.785, -37.6056, 0.15 ) }
    dend_22 { pt3dadd( 48.5571, 415.219, -38.4123, 0.15 ) }
    dend_22 { pt3dadd( 49.3102, 416.595, -39.2468, 0.15 ) }
    dend_22 { pt3dadd( 49.6144, 417.223, -39.6326, 0.15 ) }
    dend_22 { pt3dadd( 50.1705, 418.798, -40.5663, 0.15 ) }
    dend_22 { pt3dadd( 50.3868, 419.895, -41.1646, 0.15 ) }
    dend_22 { pt3dadd( 50.462, 421.287, -41.9214, 0.15 ) }
    dend_22 { pt3dadd( 50.4223, 423.178, -42.8897, 0.15 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 38.8493, 364.042, -20.8082, 0.07 ) }
    dend_21 { pt3dadd( 40.4182, 366.773, -20.6457, 0.07 ) }
    dend_21 { pt3dadd( 40.9812, 367.855, -20.6802, 0.07 ) }
    dend_21 { pt3dadd( 41.7154, 369.447, -20.8958, 0.07 ) }
    dend_21 { pt3dadd( 42.301, 370.873, -21.2244, 0.07 ) }
    dend_21 { pt3dadd( 42.8575, 372.461, -21.7769, 0.07 ) }
    dend_21 { pt3dadd( 43.2085, 373.547, -22.2375, 0.07 ) }
    dend_21 { pt3dadd( 43.4787, 374.674, -22.8535, 0.07 ) }
    dend_21 { pt3dadd( 43.7373, 375.936, -23.6654, 0.07 ) }
    dend_21 { pt3dadd( 43.9052, 376.984, -24.454, 0.07 ) }
    dend_21 { pt3dadd( 44.2257, 379.152, -26.2736, 0.07 ) }
    dend_21 { pt3dadd( 44.2947, 379.759, -26.7941, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 54/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 154.286, 38.9876, 52.5712, 0.22 ) }
    dend_18 { pt3dadd( 160.871, 39.3032, 54.9389, 0.22 ) }
    dend_18 { pt3dadd( 167.824, 39.576, 55.7483, 0.22 ) }
    dend_18 { pt3dadd( 174.614, 40.3471, 57.2882, 0.22 ) }
    dend_18 { pt3dadd( 181.257, 40.5702, 59.4977, 0.22 ) }
    dend_18 { pt3dadd( 187.758, 41.6316, 61.8805, 0.22 ) }
    dend_18 { pt3dadd( 194.287, 42.2238, 64.3488, 0.22 ) }
    dend_18 { pt3dadd( 201.073, 42.7013, 66.017, 0.22 ) }
    dend_18 { pt3dadd( 207.846, 43.028, 67.7764, 0.22 ) }
    dend_18 { pt3dadd( 214.487, 42.7555, 69.9864, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 154.286, 38.9876, 52.5712, 0.07 ) }
    dend_17 { pt3dadd( 163.522, 39.6888, 54.5547, 0.22 ) }
    dend_17 { pt3dadd( 172.722, 41.8357, 55.2566, 0.22 ) }
    dend_17 { pt3dadd( 182.164, 42.4833, 55.6532, 0.22 ) }
    dend_17 { pt3dadd( 191.631, 42.3365, 55.365, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 79.813, 76.5234, 87.098, 0.22 ) }
    dend_13 { pt3dadd( 82.849, 79.5025, 91.2914, 0.22 ) }
    dend_13 { pt3dadd( 85.4561, 82.3387, 95.856, 0.22 ) }
    dend_13 { pt3dadd( 88.1254, 84.9526, 100.516, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 73/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 79.813, 76.5234, 87.098, 0.07 ) }
    dend_12 { pt3dadd( 84.9418, 80.7676, 93.4588, 0.22 ) }
    dend_12 { pt3dadd( 89.3266, 84.6563, 100.56, 0.22 ) }
    dend_12 { pt3dadd( 92.9408, 88.7408, 107.978, 0.22 ) }
    dend_12 { pt3dadd( 97.022, 92.4613, 115.345, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -164.71, 20.4124, 7.11666, 0.22 ) }
    dend_42 { pt3dadd( -173.941, 23.1141, 5.87969, 0.22 ) }
    dend_42 { pt3dadd( -182.804, 26.1263, 3.34309, 0.22 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 81/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -164.71, 20.4124, 7.11666, 0.07 ) }
    dend_41 { pt3dadd( -175.053, 23.7388, 5.92894, 0.22 ) }
    dend_41 { pt3dadd( -184.982, 28.1766, 4.85083, 0.22 ) }
    dend_41 { pt3dadd( -194.216, 33.9902, 5.47121, 0.22 ) }
    dend_41 { pt3dadd( -201.923, 41.5664, 7.0977, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 86/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -59.5186, -24.7319, 27.0017, 0.74 ) }
    dend_35 { pt3dadd( -61.1333, -24.4609, 27.357, 0.74 ) }
    dend_35 { pt3dadd( -62.8724, -24.068, 27.6608, 0.74 ) }
    dend_35 { pt3dadd( -64.3028, -23.6725, 27.8556, 0.74 ) }
    dend_35 { pt3dadd( -65.3235, -23.3298, 27.9583, 0.37 ) }
    dend_35 { pt3dadd( -66.5672, -22.8963, 28.0548, 0.37 ) }
    dend_35 { pt3dadd( -68.2177, -22.3399, 28.1593, 0.52 ) }
    dend_35 { pt3dadd( -69.2481, -21.9907, 28.19, 0.52 ) }
    dend_35 { pt3dadd( -70.4501, -21.6627, 28.2197, 0.66 ) }
    dend_35 { pt3dadd( -72.1609, -21.3675, 28.2818, 0.66 ) }
    dend_35 { pt3dadd( -73.3876, -21.308, 28.382, 0.66 ) }
    dend_35 { pt3dadd( -74.4642, -21.4046, 28.5268, 0.66 ) }
    dend_35 { pt3dadd( -76.1897, -21.7377, 28.8308, 0.66 ) }
    dend_35 { pt3dadd( -77.7826, -22.122, 29.1384, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_35 { pt3dadd( -78.6517, -22.3439, 29.3116, 0.66 ) }
    dend_35 { pt3dadd( -79.6558, -22.646, 29.519, 0.81 ) }
    dend_35 { pt3dadd( -81.4539, -23.2679, 29.8371, 0.44 ) }
    dend_35 { pt3dadd( -82.6064, -23.722, 29.9734, 0.44 ) }
    dend_35 { pt3dadd( -83.9918, -24.3712, 30.0269, 0.44 ) }
    dend_35 { pt3dadd( -84.783, -24.7965, 29.969, 0.44 ) }
    dend_35 { pt3dadd( -86.2424, -25.6865, 29.7598, 0.44 ) }
    dend_35 { pt3dadd( -87.7355, -26.7796, 29.431, 0.44 ) }
    dend_35 { pt3dadd( -88.5208, -27.5009, 29.1646, 0.44 ) }
    dend_35 { pt3dadd( -89.3166, -28.3358, 28.8195, 0.44 ) }
    dend_35 { pt3dadd( -89.929, -29.0202, 28.4895, 0.44 ) }
    dend_35 { pt3dadd( -90.6092, -29.6471, 28.0609, 0.44 ) }
    dend_35 { pt3dadd( -91.67, -30.3026, 27.2888, 0.37 ) }
    dend_35 { pt3dadd( -92.5096, -30.6405, 26.706, 0.37 ) }
    dend_35 { pt3dadd( -93.2006, -30.8398, 26.2006, 0.37 ) }
    dend_35 { pt3dadd( -93.8109, -30.9634, 25.7116, 0.37 ) }
    dend_35 { pt3dadd( -95.5786, -31.1723, 24.149, 0.22 ) }
    dend_35 { pt3dadd( -96.6119, -31.2593, 23.1895, 0.22 ) }
    dend_35 { pt3dadd( -97.9408, -31.2417, 21.9238, 0.07 ) }
    dend_35 { pt3dadd( -98.9536, -31.1529, 20.9856, 0.07 ) }
    dend_35 { pt3dadd( -99.5518, -31.0649, 20.4226, 0.07 ) }
    dend_35 { pt3dadd( -100.464, -30.8974, 19.5829, 0.07 ) }
    dend_35 { pt3dadd( -111.264, -33.1147, 18.7096, 0.07 ) }
    dend_35 { pt3dadd( -122.019, -35.656, 19.1404, 0.07 ) }
    dend_35 { pt3dadd( -132.716, -38.2741, 20.1628, 0.07 ) }
    dend_35 { pt3dadd( -143.459, -38.7274, 22.7535, 0.07 ) }
    dend_35 { pt3dadd( -153.799, -40.6819, 26.1546, 0.07 ) }
    dend_35 { pt3dadd( -163.556, -43.6691, 30.4216, 0.07 ) }
    dend_35 { pt3dadd( -173.854, -47.043, 32.6339, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -59.5186, -24.7319, 27.0017, 0.37 ) }
    dend_32 { pt3dadd( -61.5267, -27.366, 28.315, 0.37 ) }
    dend_32 { pt3dadd( -62.209, -28.261, 28.7612, 0.37 ) }
    dend_32 { pt3dadd( -63.3258, -29.7259, 29.4916, 0.37 ) }
    dend_32 { pt3dadd( -64.2506, -30.9391, 30.0964, 0.37 ) }
    dend_32 { pt3dadd( -65.0252, -31.955, 30.603, 0.37 ) }
    dend_32 { pt3dadd( -73.037, -41.6504, 36.068, 0.37 ) }
    dend_32 { pt3dadd( -79.7233, -50.8155, 43.7723, 0.37 ) }
    dend_32 { pt3dadd( -85.7139, -60.3609, 51.5862, 0.37 ) }
    dend_32 { pt3dadd( -92.4244, -68.6913, 60.1671, 0.37 ) }
    dend_32 { pt3dadd( -98.8083, -76.7511, 69.2415, 0.37 ) }
    dend_32 { pt3dadd( -104.71, -83.1204, 79.8557, 0.37 ) }
    dend_32 { pt3dadd( -110.246, -88.1508, 91.3496, 0.37 ) }
    dend_32 { pt3dadd( -116.068, -91.2732, 103.366, 0.37 ) }
    dend_32 { pt3dadd( -121.076, -95.1183, 115.54, 0.37 ) }
    dend_32 { pt3dadd( -127.474, -96.5503, 127.585, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 88.1254, 84.9526, 100.516, 0.29 ) }
    dend_15 { pt3dadd( 92.4569, 88.5684, 106.789, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 88.1254, 84.9526, 100.516, 0.07 ) }
    dend_14 { pt3dadd( 92.6364, 89.1898, 107.546, 0.29 ) }
    dend_14 { pt3dadd( 97.1553, 92.3086, 115.134, 0.29 ) }
    dend_14 { pt3dadd( 101.868, 94.4326, 122.945, 0.29 ) }
    dend_14 { pt3dadd( 106.191, 95.1055, 131.227, 0.29 ) }
    dend_14 { pt3dadd( 110.573, 94.6806, 139.493, 0.29 ) }
    dend_14 { pt3dadd( 116.325, 93.9782, 146.852, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 54/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -173.854, -47.043, 32.6339, 0.22 ) }
    dend_39 { pt3dadd( -183.566, -48.9538, 33.0914, 0.22 ) }
    dend_39 { pt3dadd( -193.342, -50.5664, 32.9844, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 57/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -173.854, -47.043, 32.6339, 0.07 ) }
    dend_36 { pt3dadd( -184.412, -49.3085, 33.0838, 0.22 ) }
    dend_36 { pt3dadd( -194.953, -51.6811, 32.7899, 0.22 ) }
    dend_36 { pt3dadd( -205.515, -53.3375, 34.3763, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -127.474, -96.5503, 127.585, 0.29 ) }
    dend_34 { pt3dadd( -132.085, -101.221, 134.515, 0.29 ) }
    dend_34 { pt3dadd( -136.95, -105.849, 141.299, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -127.474, -96.5503, 127.585, 0.07 ) }
    dend_33 { pt3dadd( -131.343, -99.6028, 133.382, 0.29 ) }
    dend_33 { pt3dadd( -135.661, -103.283, 138.453, 0.29 ) }
    dend_33 { pt3dadd( -140.513, -106.957, 143.021, 0.29 ) }
    dend_33 { pt3dadd( -144.006, -112.082, 147.43, 0.29 ) }
    dend_33 { pt3dadd( -147.559, -115.755, 153.067, 0.29 ) }
    dend_33 { pt3dadd( -151.793, -119.125, 158.417, 0.29 ) }
    dend_33 { pt3dadd( -156.782, -122.732, 162.889, 0.29 ) }
    dend_33 { pt3dadd( -160.73, -126.554, 168.153, 0.29 ) }
    dend_33 { pt3dadd( -163.557, -130.268, 174.162, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 74/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -205.515, -53.3375, 34.3763, 0.29 ) }
    dend_38 { pt3dadd( -214.464, -55.1932, 34.793, 0.29 ) }
    dend_38 { pt3dadd( -223.114, -58.1639, 35.0419, 0.29 ) }
    dend_38 { pt3dadd( -230.915, -62.3715, 37.312, 0.29 ) }
    dend_38 { pt3dadd( -238.537, -66.7387, 39.8712, 0.29 ) }
    dend_38 { pt3dadd( -245.624, -72.4683, 40.6819, 0.29 ) }
    dend_38 { pt3dadd( -252.774, -77.6493, 43.077, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -205.515, -53.3375, 34.3763, 0.07 ) }
    dend_37 { pt3dadd( -216.968, -54.7236, 35.7226, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_70 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_71 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_76 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_75 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_67 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_62 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_56 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_66 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_44 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_20 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_11 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_65 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_59 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_40 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_22 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_18 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_35 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_32 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_33 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_38 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_51 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_70 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_9 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_26 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_30 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_74 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_68 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_69 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_13 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_12 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_49 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_50 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_46 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_42 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_17 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_39 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_60 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_55 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_54 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_36 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_57 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_63 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_34 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_37 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_58 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_73 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_28 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_29 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_21 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_8, dend_8, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_57, dend_57, dend_57, dend_55, dend_55, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_47, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_39, dend_39, dend_36, dend_36, dend_36, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_71 nseg = 9
    dend_48 nseg = 7
    dend_6 nseg = 11
    dend_4 nseg = 7
    dend_76 nseg = 5
    dend_75 nseg = 3
    dend_67 nseg = 5
    dend_62 nseg = 9
    dend_56 nseg = 9
    dend_53 nseg = 9
    dend_43 nseg = 7
    dend_19 nseg = 13
    dend_66 nseg = 3
    dend_44 nseg = 3
    dend_27 nseg = 11
    dend_23 nseg = 11
    dend_20 nseg = 5
    dend_16 nseg = 7
    dend_11 nseg = 5
    dend_65 nseg = 3
    dend_59 nseg = 5
    dend_40 nseg = 7
    dend_22 nseg = 3
    dend_18 nseg = 3
    dend_41 nseg = 3
    dend_35 nseg = 7
    dend_32 nseg = 7
    dend_14 nseg = 3
    dend_33 nseg = 3
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_LBC_6e6465f06a_0_0


