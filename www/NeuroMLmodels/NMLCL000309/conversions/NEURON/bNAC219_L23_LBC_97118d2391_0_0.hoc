// Cell: bNAC219_L23_LBC_97118d2391_0_0
/*
{
  "id" : "bNAC219_L23_LBC_97118d2391_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.94076, -9.8712, -1.65398, 2.77643", "-2.68752, -8.89837, -1.49144, 3.78775", "-2.43427, -7.92553, -1.32889, 4.91862", "-2.18103, -6.95269, -1.16635, 5.95702", "-1.92778, -5.97986, -1.00381, 6.99541", "-1.67453, -5.00702, -0.841265, 8.01733", "-1.42129, -4.03418, -0.678723, 8.72435", "-1.16804, -3.06135, -0.516181, 9.35315", "-0.914798, -2.08851, -0.353638, 9.98195", "-0.661552, -1.11567, -0.191096, 10.5", "-0.408307, -0.142835, -0.0285532, 10.7936", "-0.155061, 0.830002, 0.133989, 11.1592", "0.0981843, 1.80284, 0.296532, 11.5247", "0.35143, 2.77568, 0.459074, 11.423", "0.604675, 3.74851, 0.621617, 11.7952", "0.857921, 4.72135, 0.784159, 12.2515", "1.11117, 5.69419, 0.946702, 11.9034", "1.36441, 6.66702, 1.10924, 10.4337", "1.61766, 7.63986, 1.27179, 8.34249", "1.8709, 8.6127, 1.43433, 5.63558", "2.12415, 9.58553, 1.59687, 3.26719" ]
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.931045, 7.27809, 20.757, 0.83", "0.581993, 11.2515, 20.7912, 0.83", "0.421472, 14.7682, 20.8138, 0.83", "0.392058, 17.4222, 20.8261, 1.11", "0.410379, 19.8611, 20.8351, 0.83", "0.445865, 22.9226, 20.8458, 0.83", "0.505179, 24.6564, 20.8498, 0.83", "0.651662, 26.004, 20.8951, 0.83", "0.780895, 27.1939, 21.0221, 1.11", "0.975785, 28.7685, 21.2817, 0.83", "1.11282, 29.857, 21.504, 1.11", "1.26728, 31.6967, 21.9269, 0.83", "1.53305, 34.2083, 22.4874, 1.11", "1.8218, 36.9735, 23.0707, 0.83", "2.03236, 39.1012, 23.4663, 0.55", "2.23765, 41.1704, 23.7677, 0.55", "2.33554, 42.547, 23.9127, 0.83", "2.4407, 45.6931, 24.1205, 0.83", "2.50571, 47.6345, 24.1598, 0.83", "2.55167, 50.4056, 24.1601, 0.55", "2.59616, 54.5529, 24.1613, 1.11", "2.5561, 57.3714, 24.3137, 0.83", "2.47926, 59.2713, 24.4996, 1.11", "2.26623, 62.5029, 24.9449, 0.55", "2.16679, 63.9243, 25.2083, 0.55", "1.75485, 67.6713, 26.0878, 0.55", "1.20054, 71.6875, 27.275, 0.83", "0.909075, 73.522, 27.9155, 0.55", "0.723796, 74.7672, 28.3813, 0.83", "0.452771, 76.5259, 29.0624, 0.83", "0.138004, 78.9079, 29.935, 0.83", "-0.293523, 83.0268, 31.3418, 1.11", "-0.481251, 85.8983, 32.1737, 0.55", "-0.619078, 89.5765, 33.2484, 0.83", "-0.623394, 91.2066, 33.704, 0.55", "-0.569022, 93.5682, 34.3358, 0.83", "-0.461755, 95.3323, 34.8007, 0.28", "-0.345739, 96.6424, 35.0883, 0.55", "-0.204745, 97.8034, 35.2855, 0.28", "-0.019392, 100.467, 35.7107, 0.83", "-0.0551769, 110.054, 37.5326, 0.83", "-1.61142, 118.926, 41.1668, 0.83", "-3.12186, 127.08, 46.1081, 0.83", "-5.14793, 135.724, 50.011, 0.83", "-6.74635, 144.455, 53.9274, 0.83", "-7.95981, 153.691, 56.7705, 0.83", "-10.3705, 163.055, 58.1172, 0.83", "-11.8003, 172.729, 58.2133, 0.83", "-13.9651, 182.217, 57.3484, 0.83", "-16.1486, 191.704, 56.5269, 0.83", "-18.8353, 200.951, 54.9832, 0.83", "-22.2138, 210.011, 53.7894, 0.83", "-24.7583, 219.435, 53.4204, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "1.84105, 8.76909, 11.867, 1.38", "2.73893, 9.98793, 12.1895, 1.38", "3.58544, 11.137, 12.4936, 1.38", "4.98775, 13.0405, 12.9974, 1.11", "6.1539, 14.6235, 13.4163, 1.11", "8.56295, 17.8936, 14.2817, 0.83", "11.1205, 21.3654, 15.2004, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.61104, 4.27509, -0.263001, 2.77", "6.99708, 4.97327, -0.416387, 2.77", "11.1092, 7.04472, -0.871464, 1.66", "17.6623, 10.3457, -1.59666, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.58105, 7.33059, -5.263, 0.83", "5.05949, 8.5505, -5.39717, 0.83", "6.90207, 10.3377, -5.4013, 0.83", "9.65699, 13.372, -5.86846, 0.83", "11.8918, 15.9266, -6.58805, 0.83", "13.572, 17.7681, -7.20942, 0.83", "15.8376, 20.1528, -8.09289, 0.83", "17.4887, 21.9516, -8.78552, 0.83", "21.5659, 26.8905, -10.679, 1.11", "23.1758, 29.0411, -11.4459, 0.55", "24.4027, 30.722, -11.9802, 0.55", "25.5358, 32.2515, -12.3895, 0.55", "27.6815, 35.1275, -13.0184, 1.11", "29.9616, 38.2965, -13.4048, 0.83", "32.0618, 41.3605, -13.4076, 0.83", "33.7814, 44.0612, -13.3744, 0.55", "35.5389, 47.0071, -13.3714, 0.55", "36.2245, 48.1932, -13.3641, 0.83", "38.3518, 51.9331, -13.3626, 0.55", "38.9639, 53.0271, -13.3632, 0.55", "40.1017, 55.2339, -13.4105, 1.11", "40.8133, 56.6359, -13.4446, 1.11", "41.5019, 58.045, -13.5112, 0.28", "42.3155, 59.8163, -13.7372, 0.55", "42.8492, 61.1792, -14.0547, 0.28", "43.33, 62.5923, -14.4781, 0.83", "44.6148, 66.6161, -15.8317, 0.55", "45.3404, 68.7325, -16.603, 0.55", "46.3739, 71.6842, -17.7108, 0.83", "47.2502, 74.237, -18.6418, 0.83", "47.9419, 76.2487, -19.3316, 0.55", "48.8751, 78.8318, -20.2088, 0.55", "49.8237, 81.3692, -21.0345, 0.55", "50.2124, 82.2307, -21.2482, 0.55", "51.4722, 84.426, -21.6083, 1.38", "52.8749, 86.4419, -21.861, 0.55", "53.8116, 87.6284, -21.9029, 0.83", "54.2465, 88.1492, -21.8777, 0.28", "55.5364, 89.6484, -21.6893, 0.83", "56.7276, 90.9336, -21.4856, 0.28", "57.8711, 92.0554, -21.1845, 0.28", "60.2017, 94.4438, -20.5082, 0.55", "61.2507, 95.5448, -20.1739, 0.55", "63.0696, 97.4655, -19.5603, 0.55", "64.7682, 99.3294, -18.9533, 0.55", "66.6557, 101.466, -18.3, 0.83", "68.1625, 103.243, -17.8563, 0.83", "69.2046, 104.595, -17.6104, 0.28", "69.7141, 105.346, -17.4441, 0.83", "70.9447, 107.297, -17.0439, 0.28", "71.0967, 107.576, -16.996, 0.83", "72.1983, 109.85, -16.7844, 0.28", "72.9176, 111.374, -16.6332, 0.83", "73.9252, 113.666, -16.5178, 0.28", "74.9507, 116.034, -16.4376, 1.11", "75.6096, 117.455, -16.4067, 1.11", "76.2959, 118.778, -16.4436, 0.55", "77.2215, 120.311, -16.5872, 0.28", "77.8755, 121.31, -16.7382, 0.55", "78.76, 122.645, -17.0533, 0.28", "79.6146, 123.889, -17.2941, 0.83", "81.4338, 126.151, -17.7356, 0.55", "82.0974, 126.901, -17.8769, 0.55", "84.0087, 128.917, -18.2245, 1.11", "86.7962, 131.76, -18.6149, 0.28", "88.5374, 133.341, -18.814, 0.83", "90.4705, 134.969, -18.9076, 0.28", "91.4538, 135.785, -18.881, 0.83", "93.0877, 137.131, -18.7814, 0.28", "93.9381, 137.82, -18.6935, 0.83", "96.6155, 140.096, -18.3277, 0.83", "97.7219, 141.133, -18.2012, 0.28", "100.391, 143.882, -17.8813, 0.28", "101.719, 145.301, -17.736, 1.11", "104.703, 148.659, -17.4364, 0.28", "106.121, 150.315, -17.2944, 1.11", "107.489, 152.043, -17.1618, 0.28", "108.283, 153.03, -17.1035, 0.83", "109.913, 155.029, -16.9705, 0.28", "110.341, 155.572, -16.9252, 0.55", "111.18, 156.658, -16.8506, 0.28", "111.619, 157.185, -16.8004, 0.55", "112.805, 158.465, -16.6764, 0.28", "113.515, 159.066, -16.6071, 0.55", "114.909, 160.045, -16.5609, 0.28", "115.704, 160.549, -16.6213, 0.55", "117.461, 161.559, -16.888, 0.28", "118.002, 161.826, -16.9627, 0.83", "120.16, 162.786, -17.3095, 0.28", "121.268, 163.238, -17.4865, 0.83", "123.622, 164.275, -17.8344, 0.28", "125.997, 165.419, -18.1081, 0.28", "128.242, 166.695, -18.4591, 1.11", "129.688, 167.627, -18.7143, 0.28", "130.98, 168.565, -18.9332, 0.55", "132.41, 169.722, -19.1436, 0.28", "133.646, 170.886, -19.3297, 0.83", "136.255, 173.788, -19.5982, 0.28", "136.674, 174.34, -19.6224, 0.55", "138.048, 176.273, -19.5701, 0.55", "139.518, 178.516, -19.4112, 0.28", "140.506, 180.161, -19.1118, 1.11", "141.662, 182.57, -18.4188, 0.28", "142.273, 184.272, -17.919, 0.55", "143.019, 187.401, -17.2544, 0.28", "143.149, 188.702, -17.0942, 0.83", "143.268, 192.606, -16.4476, 0.28", "143.222, 195.42, -16.0577, 0.28", "142.931, 199.716, -15.6863, 0.55", "142.649, 202.266, -15.5243, 0.28", "141.981, 205.957, -15.4431, 0.28", "141.171, 210.83, -15.7191, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.11895, -10.8449, -2.573, 2.22", "-1.18086, -12.2044, -1.88068, 2.22", "-1.29193, -14.6434, -0.638625, 2.77", "-1.47766, -18.7217, 1.43829, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.67895, -9.21741, -5.133, 1.94", "-6.54989, -10.1123, -5.133, 1.94", "-9.82133, -11.1321, -5.133, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-5.96896, 2.12259, 10.787, 1.11", "-7.91705, 3.47171, 11.7666, 0.83", "-11.5413, 5.77974, 13.2102, 0.55", "-12.4959, 6.41683, 13.5358, 0.83", "-14.4605, 7.71229, 14.1875, 0.55", "-16.6497, 9.15583, 14.9135, 0.83", "-19.1473, 10.8027, 15.742, 0.55", "-22.2415, 12.7912, 16.7227, 0.55", "-25.6196, 14.8213, 17.5277, 0.55", "-27.5161, 15.9702, 17.965, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.12895, -1.72041, 5.667, 2.49", "-0.884978, -5.77045, 5.667, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.12415, 9.58553, 1.59687, 1.11", "5.90296, 24.1017, 1.59687, 1.11", "9.68178, 38.618, 1.59687, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "11.1205, 21.3654, 15.2004, 0.55", "13.1058, 22.4015, 14.9468, 0.55", "15.9012, 23.8408, 14.5595, 0.55", "18.3816, 25.0224, 14.3817, 0.83", "20.6977, 26.0515, 14.3428, 0.83", "23.7414, 27.337, 14.4064, 0.55", "25.921, 28.222, 14.5121, 0.55", "28.0966, 29.0476, 14.7255, 0.83", "30.7741, 30.1068, 15.1184, 0.55", "32.9463, 31.0655, 15.7499, 0.55", "34.3154, 31.7732, 16.3096, 0.28", "35.5926, 32.5581, 16.9941, 0.28", "37.383, 33.8512, 18.2653, 0.55", "39.8012, 35.8969, 20.2075, 0.55", "42.4783, 38.3892, 22.5151, 0.28", "42.9752, 38.8449, 23.0021, 0.28", "44.0917, 39.8442, 24.1535, 0.55", "45.5869, 40.9361, 25.5531, 0.28", "47.5186, 41.9615, 27.0037, 0.55", "48.8132, 42.4897, 27.7586, 0.28", "50.5357, 43.0854, 28.5384, 0.83", "52.8567, 43.792, 29.4949, 0.55", "55.866, 44.6603, 30.6276, 0.55", "58.8722, 45.5425, 31.5694, 0.55", "62.2415, 46.573, 32.5315, 0.55", "62.7287, 46.7199, 32.6541, 0.28", "64.4892, 47.193, 33.0446, 0.28", "66.5826, 47.6159, 33.3642, 0.55", "68.3215, 47.927, 33.5024, 0.28", "69.0383, 48.0301, 33.4974, 0.55", "70.8134, 48.1374, 33.1156, 0.55", "72.2136, 48.2671, 32.721, 0.55", "74.9679, 48.647, 31.8796, 0.55", "76.8296, 48.9285, 31.3527, 0.28", "80.6296, 49.5915, 30.456, 0.83", "87.6802, 51.0936, 29.0498, 0.55", "90.2214, 51.7343, 28.6272, 0.55", "92.9447, 52.4241, 28.1583, 0.83", "95.1595, 53.0547, 27.9315, 0.28", "96.7201, 53.5448, 27.8866, 0.83", "98.4501, 54.1662, 28.0356, 0.28", "100.009, 54.9095, 28.428, 0.83", "104.793, 57.373, 30.2061, 0.28", "108.177, 59.4839, 31.7427, 0.55", "110.449, 61.1615, 32.9981, 0.28", "111.607, 62.0425, 33.5584, 0.28", "113.651, 63.5685, 34.479, 0.83", "117.24, 66.1217, 36.0494, 0.28", "118.888, 67.1423, 36.7055, 0.83", "121.751, 68.4153, 37.2943, 0.28", "127.639, 70.705, 37.9567, 0.55", "130.307, 71.5238, 38.1294, 0.28", "131.787, 71.8027, 38.101, 0.28", "133.999, 72.027, 37.713, 0.55", "136.786, 72.0322, 37.2692, 0.83", "148.639, 77.9092, 38.7708, 0.83", "160.183, 84.0324, 41.3448, 0.83", "171.67, 88.428, 46.2047, 0.83", "182.696, 90.6873, 52.9952, 0.83", "192.384, 91.4975, 61.7884, 0.83", "199.64, 92.8401, 72.6215, 0.83", "207.274, 92.363, 83.2549, 0.83", "213.479, 89.9159, 94.5513, 0.83", "221.8, 88.6997, 104.596, 0.83", "227.999, 87.7829, 116.101, 0.83", "235.959, 85.9834, 126.354, 0.83" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "11.1205, 21.3654, 15.2004, 0.55", "13.2434, 21.7679, 16.5614, 0.55", "14.5278, 22.165, 17.5629, 0.55", "16.9138, 22.8055, 19.5077, 0.55", "20.6147, 23.7161, 22.5362, 0.55", "21.9163, 23.9752, 23.5586, 0.83", "23.1119, 24.1984, 24.3781, 0.83", "25.8804, 24.6521, 26.3429, 0.83", "27.7244, 24.8741, 27.4869, 0.55", "29.9569, 24.9435, 28.5382, 0.83", "31.7669, 24.8092, 29.103, 0.55", "34.492, 24.4973, 29.792, 0.55", "38.1937, 23.9285, 30.503, 0.83", "41.7158, 23.2783, 30.9097, 0.83", "43.8331, 22.8254, 31.0913, 0.55", "45.9042, 22.2433, 31.2099, 0.83", "48.2104, 21.5001, 31.3311, 0.55", "49.6773, 20.9158, 31.4144, 0.83", "51.2711, 20.203, 31.4108, 0.83", "53.0189, 19.4474, 31.4393, 0.83", "56.1187, 18.0553, 31.4906, 0.83", "57.4363, 17.3107, 31.4746, 0.55", "58.4647, 16.6128, 31.4439, 0.83", "59.4514, 15.8635, 31.3785, 0.83", "61.7279, 13.814, 31.1558, 0.83", "63.2732, 12.109, 31.0035, 0.83", "65.0925, 9.66773, 31.0902, 0.83", "66.5182, 7.64281, 31.1828, 0.83", "68.1228, 5.28082, 31.3257, 0.55", "69.3801, 3.18491, 31.4977, 0.55", "70.7849, 0.430861, 31.8229, 0.55", "72.9027, -3.60055, 32.631, 0.55", "82.5401, -6.38923, 36.322, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "17.6623, 10.3457, -1.59666, 0.83", "18.4272, 14.1259, -0.630769, 0.83", "18.8422, 16.1988, -0.30153, 0.83", "19.3046, 18.0305, 0.310998, 0.83", "20.4635, 21.759, 1.78478, 0.83", "21.1353, 23.6109, 2.51215, 0.83", "22.1462, 26.2425, 3.51778, 0.28", "22.8941, 27.9318, 4.3227, 0.83", "25.6849, 33.2229, 7.14254, 0.55", "26.7383, 35.0167, 8.17, 0.55", "28.451, 37.6596, 9.75972, 0.55", "29.0147, 38.4289, 10.3254, 0.55", "30.8574, 40.7342, 12.3323, 0.55", "31.4502, 41.4, 12.9441, 0.28", "32.1364, 42.1208, 13.5582, 0.55", "33.4434, 43.3418, 14.8125, 0.55", "34.6477, 44.3351, 15.9853, 0.28", "35.1289, 44.7337, 16.4346, 0.28", "35.5423, 45.0708, 16.7434, 0.55", "36.248, 45.5731, 17.2428, 0.28", "37.4879, 46.3371, 18.0084, 0.55", "37.8417, 46.5363, 18.182, 0.55", "38.7717, 47.0671, 18.5983, 0.55", "40.7526, 48.1258, 19.4994, 0.28", "41.9418, 48.7242, 20.0401, 0.55", "43.1185, 49.2733, 20.557, 0.28", "43.8681, 49.6063, 20.897, 0.28", "45.1412, 50.1251, 21.423, 0.55", "49.2504, 55.8286, 24.956, 0.55", "54.3823, 61.2844, 27.3076, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "17.6623, 10.3457, -1.59666, 1.11", "22.2793, 8.24707, -2.66434, 1.11", "25.537, 6.86709, -3.77544, 1.11", "27.7624, 6.19438, -4.63658, 1.11", "30.1861, 5.6891, -5.65689, 1.38", "34.3894, 4.81282, -7.42632, 2.22", "38.0778, 4.04387, -8.97903, 1.38", "41.5491, 3.23514, -10.6796, 0.83", "45.0738, 2.55529, -12.8028, 1.38", "47.3424, 2.39048, -14.2781, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.47766, -18.7217, 1.43829, 1.38", "-2.19474, -19.7652, 1.36626, 1.38", "-3.57456, -21.7729, 1.22764, 0.83", "-4.06737, -22.49, 1.17814, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.47766, -18.7217, 1.43829, 1.38", "0.366099, -23.7566, 1.56314, 1.38" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.82133, -11.1321, -5.133, 1.38", "-12.3313, -13.7706, -5.13291, 1.38", "-15.7405, -17.3545, -5.13279, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.82133, -11.1321, -5.133, 0.55", "-10.4735, -10.1771, -5.21273, 0.55", "-11.3944, -8.5661, -5.48256, 0.55", "-11.9486, -7.49522, -5.6867, 0.55", "-12.612, -5.99892, -5.92641, 0.55", "-12.942, -5.15653, -6.05465, 0.55", "-13.3657, -3.90393, -6.27286, 0.55", "-13.6537, -2.58042, -6.51326, 0.28", "-13.7052, -2.09461, -6.5979, 0.55", "-13.7054, -0.892814, -6.86582, 0.28", "-13.6264, -0.0988648, -7.00035, 0.55", "-13.4355, 1.08227, -7.09178, 0.28", "-13.2619, 1.90305, -7.08867, 0.55", "-13.0019, 3.03148, -7.03686, 0.28", "-12.8786, 3.57958, -7.01711, 0.55", "-12.5653, 5.03509, -6.99578, 0.28", "-12.3898, 5.90349, -6.99156, 0.55", "-12.0252, 7.91526, -7.05261, 0.28", "-11.9203, 8.52947, -7.10612, 0.55", "-11.7723, 9.29163, -7.19402, 0.28", "-11.6511, 9.91503, -7.2783, 0.55", "-11.3709, 11.3057, -7.54624, 0.28", "-11.1687, 12.3259, -7.73177, 0.55", "-10.9888, 13.3442, -7.88782, 0.28", "-10.7317, 14.7655, -8.136, 0.28", "-10.548, 15.6952, -8.29606, 0.55", "-10.2, 17.6494, -8.65662, 0.28", "-10.1138, 18.1863, -8.76883, 1.11", "-9.94697, 19.5505, -9.07198, 0.55", "-9.83122, 20.9128, -9.4073, 0.28", "-9.76519, 21.8719, -9.6566, 0.83", "-9.68989, 22.9748, -9.96869, 0.28", "-9.65981, 23.4956, -10.168, 0.55", "-9.58055, 24.1419, -10.4737, 0.28", "-9.5013, 24.6895, -10.7892, 0.83", "-9.3896, 25.5075, -11.3141, 0.28", "-9.19895, 26.739, -12.0936, 0.55", "-8.80762, 28.8955, -13.5288, 0.28", "-8.60425, 29.9544, -14.28, 0.55", "-8.29527, 31.4577, -15.4319, 0.28", "-7.99647, 32.9507, -16.6396, 0.28", "-7.78541, 34.082, -17.5742, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-27.5161, 15.9702, 17.965, 0.55", "-29.3513, 18.4894, 16.0046, 0.55", "-30.3809, 19.9603, 15.0574, 0.55", "-31.3933, 21.3167, 14.2941, 0.55", "-33.943, 24.4928, 12.6166, 0.55", "-35.5119, 26.2551, 11.6075, 0.28", "-37.336, 28.2495, 10.4631, 0.55", "-38.1584, 29.1289, 10.0061, 0.28", "-39.6521, 30.6817, 9.18908, 0.55", "-41.3651, 32.4557, 8.30565, 0.55", "-43.8817, 35.0591, 7.20527, 0.28", "-45.0555, 36.2945, 6.64055, 0.55", "-46.3841, 37.7412, 6.02228, 0.28", "-47.2872, 38.79, 5.63987, 0.55", "-48.0076, 39.6798, 5.34526, 0.55", "-49.0469, 40.9912, 4.98129, 0.28", "-50.3867, 42.6517, 4.52908, 0.55", "-51.5551, 44.0305, 4.17071, 0.28", "-52.5174, 45.0263, 3.86363, 0.55", "-54.9929, 47.2654, 3.05637, 0.28", "-55.6141, 47.7382, 2.86694, 0.55", "-57.4998, 48.9844, 2.32484, 0.28", "-59.4583, 50.1761, 1.80816, 0.55", "-62.6411, 52.0597, 1.04048, 0.28", "-64.2362, 53.0144, 0.678361, 0.55", "-66.0228, 54.1404, 0.310971, 0.28", "-67.3627, 55.0433, 0.0013029, 0.55", "-68.2856, 55.7162, -0.229941, 0.28", "-68.4961, 55.8924, -0.313787, 0.83", "-70.1575, 57.6756, -1.11516, 0.28", "-70.9474, 58.6968, -1.53035, 0.83", "-71.8392, 59.9964, -1.9916, 0.28", "-72.1802, 60.5319, -2.13521, 0.83", "-73.7583, 63.1603, -2.63009, 0.28", "-74.5558, 64.6498, -2.7013, 0.55", "-75.7028, 67.0746, -2.50352, 0.28", "-76.326, 68.5677, -2.2603, 0.55", "-76.9977, 70.3896, -1.85657, 0.28", "-77.4569, 71.7128, -1.5346, 0.55", "-78.2643, 74.3056, -0.854464, 0.28", "-78.4336, 74.9205, -0.713063, 0.55", "-78.7425, 76.0346, -0.528951, 0.28", "-78.9919, 76.9103, -0.404542, 0.55", "-79.5245, 78.5633, -0.224695, 0.28", "-80.1425, 80.199, -0.0776596, 0.55", "-81.1003, 82.279, 0.0339179, 0.28", "-81.7489, 83.5784, 0.120348, 0.55", "-82.742, 85.3784, 0.258905, 0.28", "-82.9568, 85.7189, 0.288779, 0.55", "-83.9265, 87.1746, 0.412659, 0.28", "-84.8167, 88.4279, 0.456375, 0.55", "-85.3525, 89.1772, 0.428894, 0.28", "-85.942, 90.0249, 0.394634, 0.55", "-87.195, 91.8862, 0.30406, 0.55", "-88.1523, 93.356, 0.211266, 0.83", "-89.0426, 94.7944, 0.0804629, 0.55", "-90.1806, 96.7977, -0.108956, 0.83", "-97.1537, 104.389, -0.442511, 0.83", "-105.256, 110.251, 1.50653, 0.83", "-112.597, 115.904, 5.67051, 0.83", "-120.436, 121.273, 9.23777, 0.83", "-128.996, 125.839, 12.1115, 0.83", "-136.752, 131.383, 15.6204, 0.83", "-144.38, 137.271, 18.8967, 0.83", "-152.198, 142.427, 22.7762, 0.83", "-158.345, 148.565, 28.0623, 0.83", "-164.102, 153.318, 34.853, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-27.5161, 15.9702, 17.965, 0.55", "-29.0453, 15.7059, 18.2621, 0.55", "-30.3189, 15.4067, 18.8042, 0.55", "-32.9161, 14.742, 20.0191, 0.55", "-34.9638, 14.2277, 21.018, 0.55", "-37.4854, 13.5241, 22.2823, 0.55", "-41.6624, 12.2363, 24.2023, 0.55", "-46.0611, 10.7095, 26.2487, 0.55", "-48.5929, 9.70893, 27.4797, 0.55", "-51.3135, 8.39753, 28.8453, 0.55", "-53.1946, 7.32402, 29.7949, 0.55", "-55.9272, 5.47187, 30.9507, 0.55", "-56.6915, 4.84851, 31.1369, 0.83", "-58.4877, 3.23974, 31.2729, 0.83", "-60.6595, 1.06603, 31.2352, 0.55", "-62.5849, -1.00432, 30.9824, 0.55", "-64.5576, -3.02689, 30.612, 0.83", "-66.1718, -4.6707, 30.3006, 0.28", "-67.7174, -6.21274, 29.9186, 0.55", "-69.9297, -8.43667, 29.4805, 0.55", "-70.923, -9.49219, 29.3687, 0.55", "-72.17, -10.7955, 29.3012, 0.55", "-73.9282, -12.6568, 29.4555, 0.28", "-74.9793, -13.8035, 29.6576, 0.83", "-77.5157, -16.8155, 30.2966, 0.28", "-78.3681, -17.9311, 30.6927, 0.55", "-85.7171, -22.7905, 34.3964, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.884978, -5.77045, 5.667, 2.22", "-1.29646, -7.80657, 3.97003, 2.22", "-1.67509, -9.68008, 2.40859, 1.38", "-2.28182, -12.6823, -0.0935245, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.884978, -5.77045, 5.667, 1.66", "2.11471, -6.10785, 4.11453, 1.66", "6.41317, -6.59132, 1.88989, 1.66", "13.6513, -7.40545, -1.85617, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.68178, 38.618, 1.59687, 1.11", "13.4606, 53.1342, 1.59687, 1.11", "17.2394, 67.6504, 1.59687, 1.11" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "47.3424, 2.39048, -14.2781, 0.83", "46.1017, 3.62981, -14.3604, 0.83", "44.7894, 4.55095, -14.3774, 0.83", "43.9364, 5.0744, -14.5124, 0.83", "42.6455, 5.97193, -14.8466, 0.83", "41.6295, 6.71141, -15.1441, 0.55", "40.8838, 7.25236, -15.4408, 0.83", "40.0887, 7.82754, -15.7495, 0.83", "38.7587, 8.88001, -16.357, 0.55", "37.2881, 10.0992, -17.1098, 0.55", "36.5221, 10.815, -17.5733, 0.55", "35.1782, 12.281, -18.5251, 0.83", "34.3173, 13.3502, -19.1807, 1.11", "33.1146, 14.9919, -20.1281, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "47.3424, 2.39048, -14.2781, 0.55", "52.5512, 5.19142, -3.87527, 0.55", "53.1872, 5.49557, -2.7605, 0.55", "54.6733, 6.25698, -0.544578, 1.11", "56.7981, 7.34568, 2.62387, 0.55", "58.084, 8.00456, 4.54139, 0.55", "58.4045, 8.16879, 5.01935, 0.83", "60.4826, 8.79197, 6.21904, 0.55", "62.449, 9.59803, 7.63467, 1.11", "68.6317, 13.8542, 15.2752, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.06737, -22.49, 1.17814, 0.83", "-3.16317, -23.6317, 0.967419, 0.83", "-2.23484, -24.7738, 0.678711, 0.83", "-1.50833, -25.7304, 0.339246, 0.83", "-0.202937, -27.7009, -0.391695, 0.28", "0.626016, -29.0353, -0.893348, 0.83", "1.95684, -31.1402, -1.67934, 0.28", "2.41759, -31.8202, -1.945, 0.83", "3.71526, -33.6556, -2.62558, 0.28", "4.74136, -35.2098, -3.16836, 0.55", "5.10279, -35.7722, -3.35391, 0.28", "6.06765, -37.3194, -3.73093, 0.55", "6.95922, -38.776, -3.97167, 0.55", "8.07431, -40.5799, -4.22608, 0.55", "9.33395, -42.5439, -4.43333, 0.28", "9.80035, -43.2787, -4.51436, 0.83", "10.4553, -44.438, -4.61415, 0.28", "11.0541, -45.6171, -4.68979, 0.55", "11.698, -46.9141, -4.84895, 0.55", "12.3106, -48.1383, -5.03404, 0.55", "13.0917, -49.5549, -5.26013, 0.83", "13.7968, -50.7942, -5.46964, 0.55", "15.3839, -53.4412, -5.93583, 0.55", "16.9842, -56.0548, -6.38516, 2.22", "18.2185, -58.0189, -6.7185, 0.55", "19.2493, -59.6007, -6.99022, 0.55", "20.4453, -61.3905, -7.29265, 0.28", "21.3257, -62.6521, -7.53849, 0.55", "22.3902, -64.1395, -7.81275, 0.28", "23.081, -65.1201, -7.95758, 0.83", "23.7606, -66.1255, -8.13679, 0.28", "24.6709, -67.6167, -8.40915, 0.55", "25.6929, -69.5731, -8.73169, 0.28", "26.1936, -70.6717, -8.89098, 0.55", "26.6551, -71.8293, -9.07841, 0.55", "27.1607, -73.3004, -9.32052, 0.28", "27.5349, -74.4644, -9.49429, 0.55", "28.3312, -77.0708, -9.83054, 0.28", "28.5777, -77.9203, -9.9111, 0.55", "29.2448, -80.0645, -10.1761, 0.28", "29.5083, -80.7906, -10.2707, 0.55", "30.3132, -82.751, -10.5852, 0.28", "30.616, -83.415, -10.7252, 0.55", "31.6597, -85.5107, -11.2491, 0.28", "32.3152, -86.6985, -11.587, 0.83", "33.3008, -88.4436, -12.1141, 0.28", "34.0737, -89.8325, -12.5855, 0.55", "35.0451, -91.5686, -13.2309, 0.28", "35.5382, -92.4209, -13.521, 0.55", "37.127, -95.1519, -14.303, 0.28", "37.956, -96.5884, -14.6754, 0.55", "38.5923, -97.7112, -14.9066, 0.55", "39.4258, -99.2014, -15.1258, 0.55", "41.0588, -102.103, -15.3897, 0.28", "41.5399, -102.97, -15.4481, 0.55", "43.2205, -105.972, -15.5173, 0.28", "44.1156, -107.394, -15.5608, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.06737, -22.49, 1.17814, 0.55", "-5.86188, -23.729, 1.99282, 0.55", "-7.60927, -24.9018, 2.88538, 0.55", "-9.47361, -26.0386, 3.87395, 0.55", "-11.8469, -27.3309, 5.07322, 0.55", "-13.2717, -28.0302, 5.76629, 0.55", "-13.8961, -28.3215, 6.07424, 0.55", "-15.0113, -28.8213, 6.61463, 0.83", "-16.2858, -29.3053, 7.27651, 0.83", "-17.9845, -29.9353, 8.15123, 0.55", "-18.6111, -30.2094, 8.49788, 0.55", "-20.1375, -30.9634, 9.3994, 0.55", "-21.839, -31.961, 10.418, 0.83", "-24.1455, -33.5265, 11.7616, 0.28", "-25.1892, -34.3538, 12.4027, 1.11", "-26.6978, -35.7338, 13.4089, 0.55", "-27.4729, -36.5193, 13.9255, 0.55", "-28.1679, -37.2711, 14.3657, 0.83", "-28.7828, -37.9904, 14.756, 0.28", "-29.0404, -38.3131, 14.8602, 0.55", "-29.8434, -39.3203, 15.1141, 0.28", "-30.2737, -39.8579, 15.1775, 0.55", "-31.1844, -40.9252, 15.2646, 0.28", "-31.9506, -41.7651, 15.3186, 0.55", "-32.9511, -42.7859, 15.4034, 0.28", "-33.4675, -43.2485, 15.4501, 0.55", "-34.6433, -44.1798, 15.5485, 0.28", "-36.2815, -45.3761, 15.7111, 0.83", "-38.271, -46.712, 15.9461, 0.55", "-39.3646, -47.3877, 16.1039, 0.55", "-40.8415, -48.1831, 16.349, 0.55", "-42.4466, -48.9445, 16.6459, 0.28", "-42.9871, -49.1706, 16.7586, 0.55", "-44.3116, -49.6456, 17.0412, 0.28", "-44.7071, -49.7671, 17.1243, 0.83", "-46.6226, -50.347, 17.5625, 0.28", "-47.8948, -50.71, 17.9361, 0.83", "-49.1399, -50.9973, 18.3806, 0.28", "-49.8627, -51.1194, 18.6502, 0.83", "-51.0948, -51.2367, 19.1411, 0.28", "-52.0858, -51.2495, 19.5582, 0.55", "-53.3035, -51.1245, 20.1133, 0.28", "-53.822, -50.9715, 20.3788, 0.83", "-54.7358, -50.5315, 20.9423, 0.28", "-55.0158, -50.3719, 21.1357, 0.55", "-55.5299, -50.0894, 21.4916, 0.28", "-55.9841, -49.8801, 21.8071, 0.55", "-57.7762, -49.6369, 22.9814, 0.28", "-58.1277, -49.6594, 23.2048, 0.83", "-58.7035, -49.7727, 23.525, 0.83", "-60.4934, -50.2993, 24.4804, 0.28", "-61.4963, -50.7103, 24.9278, 0.83", "-64.129, -52.0442, 25.9167, 0.28", "-64.7035, -52.3633, 26.1001, 0.83", "-65.9291, -53.0816, 26.4844, 0.28", "-67.4308, -54.0113, 26.9372, 0.83", "-69.6015, -55.521, 27.5189, 0.28", "-70.2281, -55.976, 27.6393, 0.83", "-75.5406, -58.125, 31.2782, 0.83", "-80.6332, -59.1217, 35.6159, 0.83", "-85.323, -60.8407, 40.1941, 0.83", "-90.609, -61.8498, 44.2914, 0.83", "-95.7353, -63.8701, 48.2493, 0.83", "-100.026, -65.8709, 53.1052, 0.83", "-104.969, -67.3701, 57.4835, 0.83", "-109.961, -67.6664, 62.0282, 0.83", "-115.413, -68.1746, 65.9907, 0.83", "-121.154, -67.7012, 69.5271, 0.83", "-127.154, -67.2384, 72.603, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "0.366099, -23.7566, 1.56314, 0.55", "-0.758768, -26.9544, 2.44107, 0.55", "-1.32245, -28.7281, 2.85064, 0.55", "-2.00358, -31.0196, 3.29311, 1.11", "-2.61947, -33.1352, 3.6842, 0.83", "-3.28295, -35.4006, 4.08523, 1.66", "-3.91194, -37.5635, 4.55597, 0.83", "-4.16408, -38.4789, 4.78534, 0.55", "-4.64801, -40.0874, 5.20026, 1.11", "-5.03402, -41.2359, 5.47461, 0.55", "-5.61789, -42.8974, 5.84668, 1.11", "-6.73984, -45.8943, 6.58268, 0.55", "-7.42032, -47.5045, 7.01423, 0.55", "-7.76671, -48.2631, 7.20645, 0.83", "-8.68458, -50.179, 7.57635, 0.55", "-9.21591, -51.2389, 7.68519, 0.83", "-9.87638, -52.5706, 7.79407, 0.28", "-10.3334, -53.5257, 7.83366, 1.11", "-10.7446, -54.4409, 7.90831, 1.11", "-11.4041, -56.1348, 8.09248, 0.55", "-11.7865, -57.2624, 8.24023, 0.55", "-12.6183, -59.8618, 8.62322, 0.55", "-13.0967, -61.5063, 8.94835, 0.55", "-13.5013, -63.1096, 9.32091, 0.55", "-13.759, -64.316, 9.61797, 0.55", "-13.9586, -65.3149, 9.8788, 0.83", "-14.1432, -66.2355, 10.0997, 0.83", "-14.5715, -68.0395, 10.418, 0.28", "-14.7202, -68.5406, 10.4574, 0.55", "-15.2442, -69.9261, 10.4015, 0.28", "-15.5128, -70.5178, 10.2403, 0.55", "-16.0045, -71.5091, 9.8393, 0.28", "-16.3986, -72.1887, 9.53747, 0.83", "-18.1607, -75.0567, 8.21852, 0.28", "-18.829, -76.1269, 7.74898, 0.83", "-20.6521, -78.979, 6.564, 0.55", "-21.4157, -80.1882, 6.11184, 1.38", "-22.5956, -82.0717, 5.48547, 0.55", "-23.3305, -83.2537, 5.19977, 0.55", "-24.3007, -84.8175, 5.10836, 0.28", "-24.7775, -85.5407, 5.12722, 0.83", "-25.3344, -86.3085, 5.24811, 0.28", "-25.4748, -86.4977, 5.2659, 0.83", "-26.3843, -87.7046, 5.27804, 0.28", "-27.3285, -88.9186, 5.25166, 0.55", "-28.0769, -89.9334, 5.11593, 0.28", "-28.3595, -90.361, 5.0008, 0.55", "-29.2313, -91.8289, 4.51398, 0.28", "-29.453, -92.2789, 4.36405, 0.55", "-29.8765, -93.3707, 3.87251, 0.55", "-30.3952, -94.8123, 3.1735, 0.28", "-30.7102, -95.6586, 2.75529, 0.55", "-31.107, -96.6326, 2.26998, 0.28", "-31.5928, -97.8521, 1.71657, 1.11", "-32.6969, -100.248, 0.554357, 0.55", "-33.2016, -101.197, 0.194143, 0.83", "-34.0272, -102.817, -0.0776921, 0.28", "-34.2366, -103.241, -0.132715, 0.83", "-34.8961, -104.678, -0.252511, 0.28", "-35.3405, -105.879, -0.225344, 0.55", "-36.1956, -108.591, -0.123444, 0.55", "-36.707, -110.33, -0.209808, 0.55", "-37.3908, -112.976, -0.368668, 0.28", "-37.5797, -113.801, -0.374926, 0.28", "-37.8939, -115.212, -0.4275, 0.83", "-38.2752, -117.103, -0.618723, 0.28", "-38.6242, -118.636, -0.893869, 0.28", "-38.9543, -119.794, -1.0807, 0.83", "-39.9262, -122.731, -1.32554, 0.28", "-40.6286, -124.451, -1.28609, 0.55", "-41.5797, -126.64, -1.16439, 0.28", "-42.1878, -128.018, -1.01806, 0.83", "-43.151, -129.979, -0.807007, 1.38", "-43.762, -131.016, -0.706077, 0.55", "-45.7105, -133.684, -0.491397, 1.66", "-49.7083, -141.148, -1.19655, 1.66", "-53.8929, -148.529, -0.960022, 1.66", "-58.2818, -155.741, -0.224916, 1.66", "-62.6903, -162.936, -1.00784, 1.66", "-66.5164, -170.38, -2.46158, 1.66", "-71.2147, -177.416, -2.34578, 1.66", "-76.6069, -183.8, -1.37361, 1.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.366099, -23.7566, 1.56314, 0.83", "1.72768, -26.2574, 0.315267, 0.83", "3.39218, -29.3144, -1.21022, 0.83", "4.16931, -30.7417, -1.92245, 0.83", "5.71198, -33.5751, -3.33629, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-15.7405, -17.3545, -5.13279, 0.83", "-17.2202, -19.4399, -6.2276, 0.83", "-17.7205, -20.4384, -6.53818, 0.83", "-18.1225, -21.5179, -6.75677, 0.83", "-18.7826, -23.2906, -7.11573, 1.94", "-19.5737, -25.4152, -7.54595, 0.55", "-20.4905, -27.8774, -8.04452, 0.55", "-20.8053, -28.9827, -8.12298, 0.55", "-21.3069, -31.1396, -8.20589, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.7405, -17.3545, -5.13279, 0.83", "-16.4925, -18.7598, -5.48207, 0.83", "-17.4156, -20.097, -5.64092, 0.55", "-18.8302, -21.9554, -5.67352, 0.55", "-20.3877, -23.7915, -5.61008, 0.55", "-21.9012, -25.4077, -5.44263, 0.55", "-23.4485, -26.9442, -5.21779, 0.55", "-26.388, -29.2862, -4.74202, 0.55", "-27.5738, -30.0463, -4.49099, 0.28", "-28.9967, -30.8029, -4.0893, 0.55", "-30.3458, -31.3315, -3.62808, 0.55", "-31.1265, -31.5579, -3.36986, 0.55", "-32.5205, -31.8254, -2.94544, 0.55", "-33.8406, -32.0097, -2.74248, 0.28", "-34.266, -32.0345, -2.70063, 0.28", "-35.7555, -32.0673, -2.62841, 0.83", "-37.8956, -32.1409, -2.85525, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.28182, -12.6823, -0.0935245, 1.11", "-4.85739, -11.9152, 1.15609, 1.11", "-5.98628, -11.579, 1.70381, 0.83", "-7.97042, -10.988, 2.66648, 1.38", "-11.8382, -9.83607, 4.54302, 0.83", "-13.1774, -9.43721, 5.19277, 0.83", "-15.6217, -8.70922, 6.37868, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.28182, -12.6823, -0.0935245, 1.11", "-2.02953, -14.8737, -0.290452, 1.11", "-1.54318, -18.7899, -0.723245, 1.11", "-1.00674, -23.4385, -1.2594, 1.11", "-0.430294, -28.4338, -1.83554, 1.11", "-0.0524459, -31.7081, -2.21318, 1.11", "0.365384, -35.3289, -2.63079, 1.11", "0.597101, -37.3384, -2.87995, 1.11", "1.11758, -41.624, -3.48217, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "13.6513, -7.40545, -1.85617, 0.55", "15.837, -6.90613, 0.196829, 0.55", "18.7841, -6.48465, 3.16887, 0.55", "21.3678, -6.3517, 5.64076, 0.83", "22.8364, -6.34831, 6.93864, 0.83", "25.2684, -6.36028, 8.98969, 0.83", "27.8332, -6.29477, 11.1832, 0.55", "29.4497, -6.18845, 12.7366, 0.55", "32.3629, -5.47993, 15.1245, 0.83", "33.1115, -4.51326, 16.0858, 0.83", "33.6197, -2.83853, 17.1249, 0.28", "34.1176, -0.942884, 18.064, 0.83", "34.6956, 0.841291, 18.8801, 0.55", "35.0954, 1.83246, 19.3456, 0.55", "36.4511, 5.03671, 20.7882, 0.55", "37.964, 8.20894, 22.0418, 0.55", "38.7819, 9.61923, 22.4586, 0.55", "40.1838, 11.7603, 23.0211, 0.55", "41.4582, 13.648, 23.4501, 0.55", "42.9569, 15.721, 23.8524, 0.55", "44.2195, 17.2861, 24.0837, 0.55", "45.65, 19.0793, 24.3093, 0.55", "48.0547, 22.2971, 24.7165, 0.55", "49.3897, 24.1858, 24.9185, 0.55", "50.2826, 25.4784, 25.1082, 0.55", "51.717, 27.3314, 25.6873, 0.55", "58.6468, 35.2313, 29.7508, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "13.6513, -7.40545, -1.85617, 0.55", "14.5528, -8.94793, -1.79257, 0.55", "15.5186, -10.4519, -1.67481, 0.55", "16.6973, -12.3565, -1.42839, 0.55", "18.5881, -15.5346, -0.981177, 0.55", "19.6942, -17.3637, -0.717912, 0.55", "21.6934, -20.7137, -0.127554, 0.55", "22.7918, -22.66, 0.3083, 0.55", "24.1323, -25.2417, 1.02287, 0.55", "25.1258, -27.1887, 1.60943, 0.55", "26.0971, -29.1495, 2.264, 0.28", "27.3157, -31.6585, 3.08121, 0.83", "28.469, -34.3353, 4.0273, 0.83", "29.4685, -36.7893, 4.94521, 1.11", "30.4573, -39.0552, 5.80255, 0.83", "32.0459, -42.7545, 7.25632, 0.83", "33.1559, -45.4244, 8.29774, 0.83", "34.7046, -48.9897, 9.60949, 0.55", "35.5801, -50.9186, 10.3381, 0.55", "36.8364, -53.5172, 11.3939, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "68.6317, 13.8542, 15.2752, 0.55", "75.0629, 17.2225, 24.0901, 0.55", "80.9492, 22.1159, 32.6049, 0.55", "87.5423, 26.0086, 41.0889, 0.55", "95.1183, 29.6002, 48.8488, 0.55", "101.733, 31.7472, 57.8945, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "68.6317, 13.8542, 15.2752, 0.55", "73.2108, 16.9711, 21.6998, 0.55", "77.1701, 19.1943, 28.8549, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "44.1156, -107.394, -15.5608, 0.28", "45.3005, -109.383, -15.2946, 0.28", "46.1017, -110.692, -15.1765, 0.28", "46.9694, -112.089, -15.0357, 0.83", "47.7646, -113.384, -14.8989, 0.28", "48.3898, -114.438, -14.7974, 0.55", "49.7353, -116.707, -14.6047, 0.28", "49.9462, -117.049, -14.5824, 0.55", "50.6339, -118.304, -14.7182, 0.28", "50.8232, -118.696, -14.8196, 0.55", "51.6146, -120.589, -15.3722, 0.28", "51.8523, -121.305, -15.6028, 0.28", "52.0617, -122.044, -15.7965, 0.55", "53.0174, -125.904, -16.6794, 0.28", "53.2992, -127.174, -16.9451, 0.28", "53.6717, -129.184, -17.3907, 0.83", "54.1458, -132.787, -18.1776, 0.28", "54.4258, -135.409, -18.7269, 0.55", "54.5393, -136.709, -18.9672, 0.55", "54.583, -137.196, -19.0213, 0.55", "54.7645, -140.027, -19.5259, 0.28", "54.7756, -140.619, -19.7062, 0.55", "54.8098, -142.723, -20.6591, 0.28", "54.8147, -142.986, -20.8204, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "44.1156, -107.394, -15.5608, 0.28", "45.6609, -109.081, -22.3835, 0.28", "45.9803, -109.43, -23.7935, 0.28", "46.3602, -109.845, -25.4708, 0.55", "47.5487, -111.142, -30.7182, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "5.71198, -33.5751, -3.33629, 0.83", "6.80819, -37.4235, -3.20211, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.71198, -33.5751, -3.33629, 0.83", "8.00898, -33.5827, -5.39114, 0.83", "9.72491, -33.4887, -6.86692, 0.83", "12.7895, -33.3295, -9.18381, 1.11", "16.7949, -33.1308, -12.8195, 0.83", "18.8883, -33.1311, -14.8385, 0.83", "20.9133, -33.1354, -16.8779, 0.83", "22.484, -33.2104, -18.7259, 0.55", "24.1891, -33.4198, -20.8627, 0.83", "28.1825, -33.9163, -25.8247, 0.55", "29.7645, -33.9495, -27.5909, 0.55", "32.2217, -33.9694, -30.3417, 0.55", "33.7107, -34.0188, -32.0276, 0.55", "35.4517, -34.1167, -33.9724, 0.83", "37.4645, -34.166, -36.0971, 0.83", "39.0398, -34.1902, -37.477, 0.55", "41.0362, -34.1743, -39.2448, 0.55", "43.0937, -34.2292, -40.9646, 0.55", "44.1563, -34.2413, -41.8117, 0.83", "45.6911, -34.2938, -43.1755, 0.28", "46.9017, -34.4252, -44.4965, 0.83", "47.8011, -34.5326, -45.5609, 0.28", "48.8403, -34.6509, -46.876, 0.83", "50.0267, -34.8099, -48.6412, 0.28", "51.2826, -34.9829, -50.7417, 0.28", "52.8376, -35.1832, -53.492, 1.11", "54.291, -35.4145, -56.2101, 0.28", "54.8925, -35.5307, -57.5094, 0.83", "57.2585, -35.8782, -62.6904, 0.28", "57.555, -35.9253, -63.3835, 0.83", "58.5125, -36.0371, -65.3435, 0.28", "59.9474, -36.2713, -68.0811, 0.55", "62.0888, -36.707, -71.9081, 0.83", "64.2436, -37.167, -75.2308, 0.28", "66.7991, -37.8116, -78.9457, 0.55", "68.8619, -38.3282, -81.8788, 0.28", "70.5971, -38.8088, -84.1376, 0.83", "71.7285, -39.1298, -85.5396, 0.28", "72.8195, -39.4619, -86.7776, 0.83", "76.2371, -40.5707, -90.3666, 0.28", "77.3596, -40.8946, -91.5035, 0.28", "78.8932, -41.3411, -93.2937, 0.83", "82.5743, -42.1432, -97.4766, 0.28", "84.4955, -42.5555, -99.7789, 0.28", "86.3522, -43.0278, -102.013, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-21.3069, -31.1396, -8.20589, 0.55", "-23.5677, -31.3113, -8.91211, 0.55", "-26.2565, -31.3898, -9.75744, 0.83", "-29.0077, -31.403, -10.5851, 0.28", "-31.35, -31.4392, -11.2538, 0.55", "-33.6712, -31.5099, -11.9348, 0.28", "-34.4375, -31.5381, -12.1597, 0.55", "-35.6284, -31.6183, -12.5376, 0.55", "-37.5413, -31.7846, -13.0937, 0.55", "-38.7083, -31.9, -13.3592, 0.55", "-41.4204, -32.2229, -13.9366, 0.55", "-42.5118, -32.4318, -14.1532, 0.55", "-44.9139, -33.0894, -14.577, 0.55", "-48.4617, -34.2667, -15.1216, 1.11", "-50.4668, -35.0378, -15.3742, 0.28", "-51.2045, -35.3292, -15.4565, 0.55", "-52.6481, -35.8915, -15.5766, 0.28", "-54.6865, -36.6087, -15.7523, 0.83", "-56.5894, -37.1053, -15.8929, 0.55", "-58.3745, -37.3447, -15.9909, 0.83", "-60.5171, -37.2116, -16.1788, 0.55", "-62.0358, -36.9202, -16.7866, 0.28", "-63.0112, -36.6619, -17.3864, 0.55", "-64.002, -36.5117, -18.4752, 0.28", "-64.4454, -36.5266, -19.1139, 0.83", "-65.217, -36.638, -20.3243, 0.83", "-69.0329, -37.656, -26.318, 0.28", "-69.6056, -37.9041, -27.6577, 0.55", "-69.3825, -37.1681, -22.1146, 0.28", "-69.8639, -37.1129, -20.6833, 0.55", "-71.0099, -37.1957, -18.4942, 0.28", "-71.7625, -37.2559, -17.2664, 0.55", "-81.7032, -37.842, -2.30262, 0.55", "-82.6607, -37.8629, -0.907837, 0.28", "-83.3731, -37.8586, 0.0702179, 0.55", "-84.488, -37.8824, 1.53439, 0.28", "-86.1916, -37.9857, 3.68674, 0.83", "-88.1329, -38.1258, 5.72397, 0.28", "-90.0591, -38.3586, 6.22654, 0.55", "-93.049, -38.6934, 7.07538, 0.55", "-94.4981, -38.8068, 7.49172, 0.83", "-95.599, -38.8824, 7.7936, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-21.3069, -31.1396, -8.20589, 0.55", "-21.321, -32.6189, -8.00372, 0.55", "-21.3793, -34.6176, -7.76207, 0.83", "-21.5443, -37.0212, -7.42448, 0.55", "-21.8995, -39.9867, -6.95587, 0.83", "-22.5738, -44.0478, -6.22476, 0.55", "-22.8292, -45.2461, -5.98784, 0.28", "-23.2311, -46.6692, -5.7163, 0.28", "-23.7986, -48.3502, -5.38596, 0.28", "-24.6865, -50.6098, -4.85942, 0.83", "-25.4332, -52.2677, -4.40334, 0.28", "-26.6289, -54.6491, -3.61682, 2.22", "-28.1004, -57.5701, -2.71559, 0.28", "-28.7655, -58.8913, -2.33742, 0.83", "-29.6245, -60.6088, -1.90183, 0.28", "-30.1735, -61.7153, -1.64568, 0.28", "-30.5968, -62.5381, -1.48519, 0.55", "-31.5311, -64.3578, -1.24316, 0.28", "-31.8042, -64.8918, -1.19724, 0.55", "-32.84, -66.939, -1.10998, 0.28", "-33.4446, -68.4042, -1.20329, 0.55", "-34.0801, -70.2119, -1.39407, 0.55", "-34.9236, -72.9475, -1.74544, 0.28", "-35.1658, -73.8004, -1.87108, 0.28", "-35.7237, -75.8568, -2.18765, 0.83", "-36.9719, -80.3335, -2.76619, 0.28", "-37.3812, -81.7709, -2.91671, 0.83", "-37.9898, -83.9013, -3.0776, 0.28", "-38.2445, -84.7182, -3.1281, 0.55", "-39.2521, -87.7244, -3.28301, 0.28", "-39.8511, -89.8406, -3.47528, 0.55", "-40.8417, -92.6913, -3.67547, 0.28", "-41.026, -93.349, -3.77734, 0.55", "-41.447, -95.2395, -4.17145, 0.28", "-41.6133, -96.1505, -4.36312, 0.55", "-42.2978, -101.336, -5.53086, 0.28", "-42.5875, -104.362, -6.2841, 0.55", "-42.9187, -107.743, -7.02749, 0.28", "-43.0093, -108.949, -7.26845, 0.55", "-43.1848, -110.895, -7.47781, 0.28", "-43.2882, -111.567, -7.47765, 0.55", "-43.6884, -112.983, -7.2337, 0.28", "-43.8479, -113.62, -7.11494, 0.55", "-44.5861, -115.762, -6.51277, 0.28", "-45.2957, -117.453, -6.03016, 0.55", "-46.1033, -119.051, -5.58341, 0.28", "-46.5517, -119.824, -5.31873, 0.55", "-47.0885, -120.735, -4.99557, 0.28", "-47.3714, -121.232, -4.82012, 0.55", "-48.473, -123.104, -4.18465, 0.28", "-49.4338, -125.031, -3.74029, 0.55", "-50.3777, -127.257, -3.28729, 0.28", "-50.9741, -128.725, -3.01855, 0.55", "-51.4917, -130.139, -2.88472, 0.55", "-51.8371, -131.15, -2.8354, 0.55", "-52.9803, -134.807, -2.92796, 0.28", "-54.2998, -138.772, -3.20373, 0.28", "-55.1535, -141.026, -3.3632, 0.83", "-57.183, -145.793, -3.64784, 0.28", "-57.7544, -147.023, -3.7278, 0.55", "-59.1346, -149.78, -3.90264, 0.28", "-60.2447, -151.731, -4.01128, 1.11", "-61.9134, -154.394, -4.10265, 0.28", "-62.2947, -154.927, -4.02731, 0.55", "-63.2479, -156.035, -3.58013, 0.28", "-63.9055, -156.793, -3.20496, 0.55", "-65.0302, -158.06, -2.46685, 0.28", "-65.7536, -158.927, -2.00928, 0.55", "-67.8138, -161.498, -0.79622, 0.28", "-68.3243, -162.225, -0.475534, 0.55", "-69.0891, -163.475, 0.0678189, 0.28", "-69.6262, -164.524, 0.542665, 0.55", "-71.0341, -167.791, 2.01212, 0.28", "-71.1852, -168.356, 2.2254, 0.83", "-71.8354, -171.855, 3.35981, 0.28", "-72.0152, -173.073, 3.74392, 0.55", "-72.3148, -175.414, 4.46852, 0.28", "-72.4694, -176.885, 4.88413, 0.55", "-73.078, -183.15, 6.424, 0.28", "-73.3037, -185.291, 6.81782, 0.83", "-73.6536, -188.212, 7.17481, 0.28", "-73.7694, -189.063, 7.2267, 0.55", "-74.0628, -191.229, 7.19268, 0.28", "-74.2234, -192.305, 7.14103, 0.55", "-74.8429, -195.726, 6.86393, 0.28", "-74.8709, -196.021, 6.81063, 0.55", "-74.9949, -197.86, 6.48594, 0.28", "-75.0896, -199.518, 6.24229, 0.83", "-75.2868, -201.956, 6.07655, 0.28", "-75.3624, -202.621, 6.1049, 0.55", "-76.2219, -208.393, 6.85081, 0.28", "-76.7094, -211.623, 7.33666, 0.28", "-76.8834, -212.691, 7.56319, 0.55", "-77.4922, -215.346, 8.48898, 0.28", "-77.7473, -216.07, 8.94685, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-37.8956, -32.1409, -2.85525, 0.55", "-39.882, -32.0789, -5.13951, 0.55", "-40.9187, -32.1156, -6.33995, 0.55", "-42.8054, -32.2838, -8.36125, 0.55", "-45.8284, -32.4886, -11.2624, 0.55", "-49.8912, -32.6133, -14.8917, 0.55", "-54.0743, -32.5575, -18.3809, 0.28", "-56.0155, -32.4377, -20.0144, 0.28", "-58.4485, -32.2348, -21.7654, 0.55", "-61.3874, -31.9297, -23.3425, 0.28", "-62.7189, -31.8241, -24.1889, 0.55", "-64.2221, -31.757, -25.288, 0.28", "-65.7502, -31.7344, -26.6022, 0.83", "-68.6991, -31.7379, -29.629, 0.28", "-69.9851, -31.8122, -31.1895, 0.55", "-77.4686, -33.0152, -41.5982, 0.55", "-78.1558, -33.1794, -42.6457, 0.55", "-79.2657, -33.5255, -44.5719, 0.55", "-80.1045, -33.8218, -46.3259, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-37.8956, -32.1409, -2.85525, 0.83", "-38.7556, -31.5862, -2.72161, 0.83", "-39.8772, -30.8628, -2.54733, 1.11", "-41.216, -29.9993, -2.3393, 1.11", "-42.9173, -28.9019, -2.07493, 0.28", "-44.4224, -27.9311, -1.84107, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.6217, -8.70922, 6.37868, 0.83", "-15.6993, -6.88548, 7.08257, 0.83", "-15.8735, -5.27845, 7.67206, 0.83", "-16.5136, -2.20854, 8.84457, 0.83", "-17.2036, 0.341561, 9.9918, 0.83", "-17.9884, 2.69072, 11.1564, 0.83", "-18.5985, 4.27629, 11.9722, 0.83", "-19.3501, 5.61308, 12.7578, 0.83", "-20.7824, 7.46857, 14.0094, 0.83", "-22.3074, 8.92856, 15.1176, 0.83", "-23.102, 9.58533, 15.6125, 0.83", "-24.5581, 10.7423, 16.5417, 0.83", "-26.1752, 12.1231, 17.6133, 0.55", "-26.9507, 12.8183, 18.1133, 0.83", "-28.1411, 13.9676, 18.8185, 0.83", "-28.8666, 14.7013, 19.1862, 0.28", "-29.9742, 15.9518, 19.8013, 0.55", "-30.8817, 17.0752, 20.3608, 0.28", "-31.823, 18.7141, 21.0483, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-15.6217, -8.70922, 6.37868, 0.83", "-17.6546, -8.9961, 5.38303, 0.83", "-20.1301, -9.44819, 4.37528, 0.83", "-21.8782, -9.97232, 3.4888, 0.83", "-25.4639, -11.4059, 1.51359, 0.83", "-28.9601, -12.9115, -0.437048, 0.83", "-30.4581, -13.5565, -1.27281, 0.83", "-32.9307, -14.5784, -2.8075, 0.83", "-36.9065, -16.142, -5.44287, 0.55", "-38.0234, -16.7614, -6.26575, 0.55", "-39.1644, -17.8705, -7.16361, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.11758, -41.624, -3.48217, 0.83", "1.51142, -44.0055, -3.56017, 0.83", "1.9187, -46.5685, -3.61459, 1.11", "2.15536, -48.6052, -3.62766, 0.83", "2.3321, -50.0512, -3.64783, 0.55", "2.437, -50.8122, -3.66868, 0.83", "2.79852, -53.771, -3.74864, 0.83", "2.99507, -55.3778, -3.76278, 0.83", "3.31445, -58.2809, -3.76866, 0.83", "3.47898, -60.0939, -3.741, 0.55", "3.65492, -62.532, -3.71104, 0.55", "3.81622, -65.0566, -3.67463, 0.55", "3.94752, -68.1394, -3.62309, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.11758, -41.624, -3.48217, 0.83", "2.4015, -43.5696, -4.90082, 0.83", "3.05629, -44.9788, -5.91234, 0.83", "3.63634, -46.5733, -6.97247, 0.55", "4.05034, -47.9508, -7.83709, 0.83", "4.46734, -49.825, -8.89799, 0.83", "4.78726, -51.5254, -9.76864, 0.83", "4.98788, -53.8016, -10.9022, 0.55", "5.11533, -55.4788, -11.6472, 0.55", "5.11149, -55.9641, -11.8678, 0.83", "4.96489, -57.3934, -12.4368, 0.55", "4.802, -58.2969, -12.7722, 0.55", "4.49281, -59.8714, -13.3817, 1.11", "4.21719, -61.2576, -13.9692, 1.11", "3.62306, -63.8172, -15.1639, 0.55", "3.30361, -65.29, -15.939, 1.11", "2.89245, -67.3407, -17.1129, 0.55", "2.82808, -67.6306, -17.2716, 0.83", "2.29211, -70.0306, -18.4956, 0.28", "2.23452, -70.3247, -18.6499, 0.55", "2.11439, -71.7297, -19.3669, 0.28", "2.10739, -72.5062, -19.7387, 0.83", "2.19544, -73.9653, -20.3401, 0.55", "2.28447, -75.2024, -20.7471, 0.83", "2.42642, -76.8372, -21.1704, 0.28", "2.51673, -78.2046, -21.5037, 0.83", "2.73535, -80.4525, -21.972, 0.28", "3.02594, -82.4277, -22.4075, 0.83", "3.31814, -83.7423, -22.6792, 0.28", "3.56223, -84.628, -22.8374, 0.28", "3.97818, -85.9577, -23.0939, 0.83", "4.7228, -88.2072, -23.6389, 0.28", "5.39275, -90.0213, -24.1821, 0.55", "6.04769, -91.5503, -24.6216, 0.28", "6.89882, -93.3866, -25.1493, 0.28", "7.49665, -94.6804, -25.504, 0.55", "7.91325, -95.6217, -25.7493, 0.28", "8.29778, -96.6143, -25.9869, 0.55", "8.93832, -98.2819, -26.3299, 0.28", "9.37333, -99.5159, -26.5521, 1.38", "10.1118, -102.201, -27.1349, 0.28", "10.2918, -103.04, -27.3435, 0.55", "10.5517, -104.594, -27.7828, 0.28", "10.6949, -106.059, -28.2681, 0.28", "10.7825, -107.891, -28.9263, 1.11", "10.9863, -111.6, -30.1503, 0.28", "11.1256, -114.004, -30.9009, 0.28", "11.2285, -114.967, -31.1373, 0.83", "11.5214, -117.926, -31.8717, 0.28", "11.6583, -119.133, -32.1475, 0.55", "12.1507, -122.14, -32.7576, 0.28", "12.2548, -122.623, -32.8258, 0.83", "12.9027, -125.974, -33.326, 0.28", "13.6131, -129.629, -33.9394, 0.55", "13.8897, -130.681, -34.023, 0.28", "14.0466, -131.196, -34.061, 0.55", "14.43, -132.336, -34.1297, 0.55", "14.9157, -133.609, -34.1703, 0.55", "15.7072, -135.393, -34.1812, 0.55", "17.4326, -138.87, -33.9865, 0.28", "18.3318, -140.639, -33.9176, 0.28", "18.5774, -141.106, -33.9016, 0.83", "19.5435, -142.788, -33.8796, 0.28", "19.9987, -143.523, -33.9044, 0.55", "21.0841, -145.472, -34.1211, 0.28", "21.1719, -145.679, -34.1878, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "58.6468, 35.2313, 29.7508, 0.55", "67.1695, 43.6656, 35.0711, 0.55", "74.6715, 52.0843, 41.7731, 0.55", "82.6991, 59.0872, 49.3237, 0.55", "89.8681, 64.3353, 58.8274, 0.55", "99.0527, 68.8103, 66.8573, 0.55", "108.034, 74.8837, 74.0797, 0.55", "115.699, 82.2578, 81.6784, 0.55", "123.163, 90.3484, 88.7842, 0.55", "131.714, 98.5479, 94.3901, 0.55", "140.297, 107.558, 98.6401, 0.55", "147.954, 115.921, 105.229, 0.55", "154.704, 125.524, 111.232, 0.55", "159.614, 135.617, 118.22, 0.55", "164.654, 144.948, 126.033, 0.55", "168.719, 153.49, 135.148, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "58.6468, 35.2313, 29.7508, 0.55", "66.7878, 42.7214, 37.5148, 0.55", "73.349, 51.0598, 45.9206, 0.55", "79.4474, 60.9509, 53.0135, 0.55", "86.4913, 71.2966, 58.4818, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "36.8364, -53.5172, 11.3939, 0.55", "37.6976, -54.4399, 11.2433, 0.55", "38.146, -54.9232, 11.1505, 0.55", "39.2937, -56.1922, 10.8979, 0.55", "41.1631, -58.181, 10.4869, 0.55", "42.071, -59.1195, 10.2987, 0.55", "43.2697, -60.4004, 10.0533, 0.28", "43.8848, -61.0918, 9.9311, 0.83", "44.5681, -61.8431, 9.82295, 0.83", "45.8236, -63.1873, 9.62823, 0.55", "46.9083, -64.3637, 9.46717, 0.55", "47.9567, -65.5656, 9.34077, 0.55", "48.6368, -66.3735, 9.31376, 0.28", "49.1679, -66.9828, 9.30256, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "36.8364, -53.5172, 11.3939, 0.55", "37.3719, -55.9763, 11.1212, 0.55", "37.9272, -58.1823, 10.9039, 0.55", "38.3813, -60.5761, 11.2703, 0.55", "38.719, -62.5344, 11.7708, 0.55", "39.0266, -64.6581, 12.4522, 0.28", "39.2163, -66.1923, 12.9792, 0.55", "39.342, -67.2244, 13.4447, 0.55", "39.9513, -73.5602, 16.6292, 0.28", "39.968, -73.9678, 16.8303, 0.55", "39.9764, -75.6131, 17.5414, 0.28", "40.0165, -76.5517, 17.8825, 0.55", "40.0799, -78.713, 18.5923, 0.28", "40.1282, -80.579, 19.0119, 0.28", "40.3046, -82.7606, 18.9791, 0.55", "40.4977, -85.0329, 18.8845, 0.55", "40.758, -87.2906, 18.6694, 0.55", "42.6072, -98.2734, 21.8241, 0.55", "45.2338, -109.299, 24.296, 0.55", "49.4577, -120.028, 25.6805, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "101.733, 31.7472, 57.8945, 0.55", "106.744, 32.9263, 64.9931, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "101.733, 31.7472, 57.8945, 0.55", "106.326, 37.1042, 60.209, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "77.1701, 19.1943, 28.8549, 0.55", "81.5965, 22.2342, 35.8084, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "77.1701, 19.1943, 28.8549, 0.55", "81.8327, 21.423, 36.2906, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "6.80819, -37.4235, -3.20211, 0.83", "8.95829, -39.4932, -4.06132, 0.83", "11.6239, -42.0388, -4.99341, 0.83", "12.8842, -43.3053, -5.46603, 0.28", "14.637, -45.2836, -6.14784, 0.55", "15.7456, -46.6071, -6.58462, 0.83", "17.0127, -48.176, -7.11486, 0.28", "17.6871, -49.0591, -7.36637, 0.55", "19.2895, -51.1771, -7.85972, 0.28", "20.5617, -52.9905, -8.25507, 1.11", "21.5505, -54.5396, -8.61825, 1.11", "22.9054, -56.7109, -9.18154, 0.28", "23.9943, -58.4423, -9.71834, 0.83", "25.1323, -60.233, -10.264, 0.28", "25.5899, -60.9077, -10.4641, 0.55", "27.2061, -63.2248, -11.1013, 0.28", "27.996, -64.3697, -11.3853, 0.55", "31.1705, -69.0139, -12.4399, 0.83", "33.2549, -72.0489, -13.0956, 0.28", "34.8389, -74.2647, -13.5215, 0.55", "35.9783, -75.8206, -13.7754, 0.28", "37.4519, -77.8008, -13.9808, 0.55", "38.0593, -78.6164, -14.0339, 0.55", "38.9681, -79.7978, -14.0498, 0.28", "39.6606, -80.7217, -14.0657, 0.55", "41.2605, -83.0853, -14.2205, 0.28", "42.7301, -85.4076, -14.5026, 0.55", "43.4443, -86.6624, -14.6496, 0.28", "43.8691, -87.4602, -14.7409, 0.83", "44.6629, -89.1996, -14.9706, 0.83", "45.5085, -91.4837, -15.2541, 0.28", "45.6321, -91.9017, -15.3031, 0.55", "46.1377, -93.9962, -15.5798, 0.28", "46.3213, -94.7863, -15.67, 0.55", "46.9396, -97.2298, -15.9225, 0.28", "47.4978, -99.0748, -16.092, 0.55", "47.9937, -100.599, -16.2738, 0.28", "48.9045, -103.159, -16.637, 1.38", "49.9226, -105.71, -16.9272, 0.28", "50.2778, -106.547, -16.9995, 0.55", "51.3525, -108.978, -17.1325, 0.55", "53.1355, -112.949, -17.2909, 0.55", "54.3908, -115.766, -17.4413, 0.55", "56.5688, -120.664, -17.7419, 0.28", "57.4093, -122.499, -17.7933, 1.11", "58.2545, -124.296, -17.7848, 0.28", "58.7097, -125.191, -17.7477, 0.83", "60.0007, -127.44, -17.5144, 0.28", "60.1625, -127.706, -17.4933, 0.55", "62.513, -131.28, -17.4567, 0.28", "62.8918, -131.787, -17.4459, 0.83", "63.9508, -133.144, -17.4327, 0.28", "64.3184, -133.645, -17.4461, 0.83", "65.1, -134.722, -17.4491, 0.28", "66.5924, -136.827, -17.5257, 0.83", "69.7757, -141.357, -17.9187, 0.28", "71.1878, -143.384, -18.1494, 0.83", "72.8476, -145.767, -18.4722, 0.28", "74.3688, -147.85, -18.8172, 0.55", "75.3587, -149.116, -19.033, 0.28", "77.3446, -151.536, -19.4372, 1.11", "79.0059, -153.486, -19.7749, 0.28", "80.098, -154.615, -19.9915, 0.55", "81.7443, -156.16, -20.3607, 0.55", "83.3624, -157.609, -20.7974, 0.55", "84.8257, -158.845, -21.2124, 0.28", "85.0587, -159.033, -21.2786, 0.83", "88.4918, -161.658, -22.2451, 0.28", "90.326, -163.039, -22.8705, 0.55", "92.5943, -164.725, -23.7743, 0.28", "94.4467, -166.107, -24.6053, 0.83", "96.1895, -167.383, -25.4195, 0.28", "96.9193, -167.926, -25.757, 0.55", "99.78, -170.095, -27.0355, 0.28", "101.321, -171.191, -27.6996, 1.11", "107.917, -180.195, -30.3885, 1.11", "113.495, -190.251, -31.6098, 1.11", "119.535, -200.092, -31.8829, 1.11", "125.838, -209.735, -32.4256, 1.11", "132.182, -219.34, -31.7234, 1.11", "140.142, -227.46, -30.5879, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "6.80819, -37.4235, -3.20211, 0.28", "6.88475, -38.3493, -3.02537, 0.28", "6.95255, -39.0322, -2.90837, 0.83", "7.0273, -39.9187, -2.82402, 0.28", "7.09383, -41.1115, -2.74795, 0.83", "7.09444, -42.8193, -2.70122, 0.55", "7.07156, -43.5386, -2.68973, 0.28", "7.07122, -44.4347, -2.65785, 0.83", "7.07055, -45.9703, -2.59724, 0.28", "7.12194, -47.5366, -2.41101, 0.83", "7.225, -49.4819, -2.01887, 0.28", "7.26027, -50.1642, -1.86354, 0.83", "7.40587, -52.2954, -1.34942, 0.28", "7.56601, -54.0636, -0.85573, 0.83", "7.94194, -57.0195, 0.150195, 0.28", "8.1342, -58.1079, 0.571266, 0.83", "8.52861, -59.7913, 1.32366, 0.28", "8.71584, -60.6066, 1.68786, 0.55", "7.75235, -68.5414, 2.72639, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-80.1045, -33.8218, -46.3259, 0.28", "-88.2591, -31.1996, -48.3864, 0.28", "-89.7191, -30.7301, -48.7553, 0.55", "-94.5217, -29.1857, -49.9688, 0.28", "-97.5277, -28.2191, -50.7284, 0.55", "-99.3119, -27.6453, -51.1792, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-80.1045, -33.8218, -46.3259, 0.28", "-80.9393, -35.1627, -47.1916, 0.28", "-81.5565, -35.9664, -47.3611, 0.55", "-83.1254, -37.9121, -47.3144, 0.28", "-83.7989, -38.7055, -47.4397, 0.55", "-85.4054, -40.6066, -47.8636, 0.28", "-85.96, -41.2628, -48.0099, 0.55", "-87.4641, -42.9074, -48.1832, 0.28", "-88.3555, -43.8349, -48.1777, 0.83", "-90.8656, -46.3595, -47.8609, 0.28", "-91.4965, -47.0297, -47.9153, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-44.4224, -27.9311, -1.84107, 0.28", "-45.3539, -26.8181, 0.0267479, 0.28", "-45.8042, -26.2797, 0.673964, 0.55", "-46.8296, -25.1293, 1.83853, 0.28", "-47.4076, -24.5244, 2.46773, 0.83", "-48.8555, -23.0442, 4.042, 0.28", "-49.1733, -22.7187, 4.38746, 0.55", "-51.1195, -20.8646, 6.44808, 0.28", "-51.8963, -20.1376, 7.20046, 0.55", "-52.8823, -19.1649, 8.07962, 0.28", "-53.5459, -18.5049, 8.63049, 0.55", "-53.9527, -18.068, 8.92317, 0.28", "-54.727, -17.2542, 9.56946, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-44.4224, -27.9311, -1.84107, 0.55", "-46.1176, -27.497, -0.709938, 0.55", "-46.7938, -27.4083, -0.311399, 0.55", "-47.8553, -27.3531, 0.168926, 0.83", "-49.5627, -27.3657, 0.80807, 0.28", "-50.1514, -27.4053, 0.969299, 0.55", "-51.1072, -27.494, 1.18531, 0.55", "-52.3374, -27.7966, 1.3823, 0.83", "-53.9513, -28.29, 1.53715, 0.28", "-54.4563, -28.4686, 1.55318, 0.55", "-55.7424, -28.9707, 1.4998, 0.28", "-55.9967, -29.0657, 1.49254, 0.55", "-57.8261, -29.7941, 1.4404, 0.28", "-58.9167, -30.1864, 1.49507, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-31.823, 18.7141, 21.0483, 0.83", "-32.8605, 22.2045, 24.1881, 0.83", "-33.484, 24.0561, 25.6406, 0.55", "-33.7502, 24.832, 26.2256, 0.55", "-34.555, 27.3307, 28.0899, 0.83", "-35.1601, 29.4659, 29.6658, 0.55", "-35.5177, 30.8545, 30.7411, 0.55", "-35.9647, 33.4888, 32.7608, 0.55", "-36.0922, 34.2327, 33.3551, 0.83", "-36.4081, 36.3796, 35.0611, 0.28", "-36.54, 37.7636, 36.1875, 0.83", "-36.5915, 39.4848, 37.6516, 0.28", "-36.4986, 40.8064, 38.8354, 0.83", "-37.716, 48.0767, 46.3866, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-31.823, 18.7141, 21.0483, 0.55", "-33.7698, 18.7095, 20.6821, 0.55", "-38.4299, 18.6983, 19.8056, 0.55", "-48.191, 19.0826, 18.144, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-39.1644, -17.8705, -7.16361, 0.83", "-42.147, -18.2774, -6.59629, 0.83", "-44.2888, -18.2965, -6.20513, 0.83", "-46.3458, -18.2602, -5.82407, 0.55", "-48.191, -18.2182, -5.48311, 0.55", "-50.5335, -18.117, -4.98987, 0.55", "-52.6967, -18.0017, -4.51237, 0.83", "-55.8421, -17.8021, -3.82873, 0.83", "-57.3271, -17.6747, -3.56151, 0.55", "-58.2614, -17.5798, -3.43741, 0.83", "-61.4215, -17.2587, -3.08889, 0.28", "-62.6188, -17.2024, -3.09413, 0.83", "-63.5766, -17.2212, -3.18402, 0.83", "-66.1508, -17.4015, -3.657, 0.28", "-67.0697, -17.4769, -3.88026, 0.83", "-68.2274, -17.6104, -4.20335, 0.83", "-71.8032, -18.2303, -5.26459, 0.55", "-74.3159, -18.7594, -5.90508, 0.28", "-75.4268, -19.1083, -6.1981, 0.83", "-77.1282, -19.8917, -6.60489, 0.28", "-78.3787, -20.7379, -6.90099, 0.55", "-79.4084, -21.7267, -7.1187, 0.28", "-79.9505, -22.4102, -7.20548, 0.55", "-82.2165, -25.9151, -7.6969, 0.28", "-83.193, -27.624, -7.90182, 0.28", "-84.3858, -29.9745, -8.09578, 0.83", "-85.1832, -31.6515, -8.19514, 0.28", "-85.4835, -32.2842, -8.21645, 0.83", "-86.097, -33.5191, -8.15379, 0.28", "-86.6004, -34.4847, -7.98752, 0.55", "-87.2575, -35.6885, -7.77641, 0.28", "-87.8292, -36.6239, -7.59306, 0.83", "-88.8829, -38.0862, -7.26547, 0.28", "-89.525, -38.974, -7.09626, 0.55", "-90.5078, -40.3042, -6.86938, 0.28", "-91.0152, -40.9754, -6.76376, 0.55", "-92.5206, -42.8971, -6.49126, 0.28", "-94.5798, -45.3249, -6.36433, 0.55", "-96.1486, -46.9954, -6.41139, 0.28", "-96.7763, -47.5725, -6.47464, 0.83", "-97.7242, -48.2897, -6.60009, 0.28", "-98.6028, -48.9056, -6.75869, 0.83", "-101.679, -50.7568, -7.57657, 0.28", "-102.202, -51.0116, -7.75164, 0.83", "-104.117, -51.6652, -8.35767, 0.28", "-104.947, -51.8933, -8.65257, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-39.1644, -17.8705, -7.16361, 0.55", "-38.6757, -19.6109, -7.92891, 0.55", "-37.8694, -22.5404, -9.19973, 0.55", "-37.4798, -24.2369, -9.85008, 1.11", "-37.1925, -25.8595, -10.6679, 0.55", "-36.9208, -27.7733, -11.7428, 0.55", "-36.7401, -29.4638, -12.754, 0.55", "-36.661, -30.8243, -13.64, 0.28", "-36.7453, -33.0776, -15.2015, 1.11", "-36.9665, -36.9137, -17.9882, 0.28", "-37.1194, -38.3931, -19.0472, 0.28", "-37.2152, -39.0614, -19.5194, 0.55", "-37.4069, -40.0383, -20.1809, 0.28", "-37.6517, -41.3163, -21.046, 0.28", "-37.9249, -42.6448, -21.8936, 0.55", "-38.3173, -44.661, -22.954, 0.28", "-38.6022, -46.0735, -23.7248, 0.55", "-38.9623, -47.9513, -24.7684, 0.28", "-39.433, -50.1333, -26.0573, 0.28", "-39.7959, -51.5375, -26.898, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "3.94752, -68.1394, -3.62309, 0.55", "1.90124, -71.1617, -2.22652, 0.55", "0.514981, -73.3347, -1.26496, 0.55", "-0.235119, -74.4934, -0.744071, 0.28", "-1.4116, -76.3348, 0.0728479, 0.55", "-2.19557, -77.5724, 0.620542, 0.28", "-2.97225, -78.813, 1.16393, 0.55", "-3.80096, -80.2255, 1.77419, 0.55", "-4.4774, -81.513, 2.32572, 0.28", "-4.68761, -82.0298, 2.51627, 0.55", "-4.92983, -82.7807, 2.74962, 0.28", "-5.18928, -83.7892, 3.00774, 0.55", "-5.44654, -85.0843, 3.30244, 0.28", "-5.70356, -86.4832, 3.6527, 0.55", "-5.83617, -87.3286, 3.86592, 0.28", "-5.9775, -88.1859, 4.06886, 0.83", "-6.24613, -89.8113, 4.42068, 0.28", "-6.34381, -90.3814, 4.50967, 0.55", "-6.62737, -91.9509, 4.66554, 0.28", "-6.68414, -92.2565, 4.68843, 0.83", "-7.02484, -94.0578, 4.79542, 0.28", "-7.19018, -94.9854, 4.85002, 0.83", "-7.69128, -97.3973, 4.79197, 0.28", "-8.21993, -99.4075, 4.76139, 0.28", "-8.6924, -100.925, 4.76489, 0.55", "-9.43139, -103.019, 4.83755, 0.55", "-10.215, -105.07, 5.05104, 1.11", "-11.8863, -109.108, 5.68761, 0.28", "-13.208, -112.05, 6.33626, 0.83", "-14.2272, -114.017, 6.82221, 0.28", "-14.8436, -115.071, 7.08051, 0.55", "-16.2898, -117.532, 7.71146, 0.28", "-16.562, -118.01, 7.8487, 0.28", "-17.1013, -119.136, 8.20608, 0.55", "-17.995, -121.67, 8.87919, 0.28", "-18.5556, -123.906, 9.42886, 0.83", "-19.1279, -127.622, 10.2969, 0.28", "-19.2022, -128.603, 10.5067, 0.83", "-19.1722, -130.913, 11.0623, 0.83", "-18.9681, -133.617, 11.8144, 0.28", "-18.7889, -135.009, 12.24, 0.83", "-18.5405, -136.812, 12.8039, 0.28", "-18.4248, -137.952, 13.1278, 0.55", "-18.2381, -140.507, 13.7753, 0.28", "-18.1851, -141.571, 13.9808, 0.55", "-18.1479, -143.641, 14.2474, 0.83", "-18.1086, -144.522, 14.3376, 0.83", "-17.9862, -146.397, 14.4622, 0.28", "-17.8955, -147.618, 14.4288, 0.55", "-17.5935, -150.902, 13.9867, 0.28", "-17.5586, -151.191, 13.9186, 0.55", "-17.2648, -153.399, 13.1837, 0.28", "-17.191, -153.939, 12.9708, 0.55", "-16.8191, -156.626, 11.6208, 0.28", "-16.7749, -156.97, 11.4136, 0.55", "-16.6172, -158.177, 10.4488, 0.28", "-16.6027, -158.407, 10.2491, 0.55", "-16.3447, -168.864, 12.2766, 0.55", "-16.9226, -179.043, 15.2539, 0.55", "-18.8351, -189.46, 16.3254, 0.55", "-20.6563, -199.38, 19.561, 0.55", "-21.108, -209.718, 22.031, 0.55", "-20.3055, -220.031, 24.5313, 0.55", "-20.1023, -229.59, 29.0297, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.94752, -68.1394, -3.62309, 0.55", "4.19145, -69.7858, -3.72866, 0.55", "4.3965, -71.2253, -3.82238, 0.55", "4.60527, -72.8557, -3.92269, 0.28", "4.66875, -73.4553, -3.95591, 0.55", "4.80274, -75.8592, -4.05156, 0.55", "4.84955, -77.5692, -4.10551, 0.28", "4.88065, -79.4439, -4.13332, 0.28", "4.88899, -80.0424, -4.10522, 0.55", "4.91281, -81.6836, -3.95447, 0.55", "4.94524, -84.5367, -3.57811, 0.55", "4.98403, -86.6607, -3.23134, 0.55", "5.04689, -87.7026, -3.0628, 0.55", "5.31968, -90.8891, -2.61433, 0.28", "5.4055, -91.7305, -2.50566, 0.83", "5.62891, -93.5836, -2.28577, 0.55", "5.87093, -95.1978, -2.1466, 0.55", "6.25362, -97.8498, -2.00818, 0.55", "6.49672, -99.7226, -1.97399, 0.83", "6.67457, -101.064, -2.00923, 0.28", "6.74932, -101.6, -2.01579, 0.55", "7.04831, -103.381, -1.94094, 0.28", "7.05938, -103.448, -1.93419, 0.55", "7.47459, -105.341, -1.37715, 0.28", "7.72866, -106.339, -0.980777, 0.83", "7.91302, -107.093, -0.647205, 0.83", "8.43651, -109.712, 0.502514, 0.28", "8.55474, -110.406, 0.794486, 0.55", "9.25405, -114.773, 2.46105, 0.28", "9.52657, -116.445, 3.0378, 0.28", "9.65374, -117.234, 3.27761, 0.83", "9.98464, -119.649, 3.87484, 0.28", "10.1934, -121.304, 4.1425, 0.28", "10.3278, -122.153, 4.208, 0.55", "10.6886, -124.218, 4.07185, 0.55", "10.934, -125.263, 3.9859, 0.55", "11.2438, -126.605, 3.88287, 0.28", "11.4496, -127.436, 3.87426, 0.28", "11.6521, -128.26, 3.90249, 0.55", "12.2794, -130.895, 4.05904, 0.28", "12.6147, -132.474, 4.18429, 0.83", "12.9196, -134.248, 4.25191, 0.83", "13.1809, -136.268, 4.26262, 0.55", "13.3674, -138.323, 4.27255, 0.28", "13.4468, -139.408, 4.26669, 0.28", "13.5068, -140.162, 4.27613, 0.55", "13.7488, -142.967, 4.29605, 0.28", "13.8172, -143.783, 4.28521, 0.55", "13.93, -145.779, 4.22381, 0.28", "13.991, -147.159, 4.22532, 0.83", "14.1445, -149.615, 4.28746, 0.28", "14.1881, -150.147, 4.31463, 0.55", "14.4523, -152.808, 4.61252, 0.28", "14.5242, -153.616, 4.6952, 0.55", "14.6719, -154.961, 4.85027, 0.55", "14.8186, -156.05, 5.03679, 0.28", "14.9104, -156.566, 5.12761, 0.55", "15.3302, -158.404, 5.49593, 0.28", "15.466, -158.903, 5.62114, 0.55", "16.3273, -161.752, 6.4119, 0.28", "16.6364, -162.657, 6.69069, 0.55", "17.2539, -164.377, 7.26154, 0.28", "17.52, -165.073, 7.4884, 0.55", "16.9774, -174.766, 7.41688, 0.55", "17.3721, -184.439, 6.61776, 0.55", "15.726, -193.905, 5.38181, 0.55", "14.9655, -203.257, 2.97326, 0.55", "14.8775, -212.935, 2.16242, 0.55", "16.073, -222.57, 1.95048, 0.55", "18.2409, -231.948, 0.768961, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "86.4913, 71.2966, 58.4818, 0.55", "92.2054, 79.3903, 65.1802, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "86.4913, 71.2966, 58.4818, 0.55", "90.8644, 75.7473, 63.6058, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "49.1679, -66.9828, 9.30256, 0.55", "49.3901, -68.0199, 10.7754, 0.55", "49.8902, -69.7274, 12.9473, 0.55", "50.1605, -70.3713, 13.6817, 0.55", "54.0642, -78.3664, 21.8471, 0.28", "54.5537, -79.254, 22.596, 0.83", "56.0818, -81.8861, 24.4456, 0.28", "56.9543, -83.4008, 25.2191, 0.28", "58.6723, -86.0608, 25.7745, 0.28", "59.3299, -86.8568, 25.7029, 0.55", "61.2197, -88.7189, 24.7834, 0.28", "61.8097, -89.373, 24.5175, 0.28", "62.6856, -90.5302, 24.2633, 0.55", "63.7366, -92.0361, 24.02, 0.55", "65.3863, -94.9221, 23.9145, 0.55", "71.1679, -102.835, 27.1093, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "49.1679, -66.9828, 9.30256, 0.55", "50.583, -69.3602, 9.41302, 0.55", "51.8661, -71.5464, 9.49646, 0.55", "52.8598, -73.2445, 9.5378, 0.55", "54.1328, -75.3846, 9.57881, 0.28", "55.1855, -77.0751, 9.59758, 0.55", "56.7474, -79.437, 9.61937, 0.55", "57.619, -80.6412, 9.66189, 0.28", "58.3476, -81.6239, 9.70154, 0.28", "58.737, -82.1008, 9.74154, 0.28", "59.9015, -83.4335, 9.866, 0.55", "61.026, -84.5486, 9.9663, 0.55", "62.6147, -85.9632, 10.0706, 0.28", "63.0842, -86.3609, 10.106, 0.55", "65.0346, -87.9877, 10.2753, 0.28", "65.8255, -88.6613, 10.3369, 0.55", "67.8422, -90.3996, 10.4586, 0.28", "68.3071, -90.7768, 10.429, 0.55", "74.6292, -98.1315, 11.9795, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "49.4577, -120.028, 25.6805, 0.55", "51.5146, -130.07, 27.1499, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "49.4577, -120.028, 25.6805, 0.55", "50.7257, -126.777, 27.422, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "axon_0", "axon_0", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_44", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_LBC_97118d2391_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_71, id: dend_71, parent: soma_0
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: soma_0
create dend_68
public dend_68
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_67, id: dend_67, parent: dend_57
create dend_67
public dend_67
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_58
create dend_66
public dend_66
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_71(0), soma_0(0.4999999896865996)
    connect dend_68(0), soma_0(0.4999999896865996)
    connect dend_57(0), soma_0(0.4999999896865996)
    connect dend_56(0), soma_0(0.4999999896865996)
    connect dend_43(0), soma_0(0.4999999896865996)
    connect dend_30(0), soma_0(0.4999999896865996)
    connect dend_27(0), soma_0(0.4999999896865996)
    connect dend_0(0), soma_0(0.4999999896865996)
    connect axon_0(0), soma_0(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_67(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.94076, -9.8712, -1.65398, 2.77643 ) }
    soma_0 { pt3dadd( -2.68752, -8.89837, -1.49144, 3.78775 ) }
    soma_0 { pt3dadd( -2.43427, -7.92553, -1.32889, 4.91862 ) }
    soma_0 { pt3dadd( -2.18103, -6.95269, -1.16635, 5.95702 ) }
    soma_0 { pt3dadd( -1.92778, -5.97986, -1.00381, 6.99541 ) }
    soma_0 { pt3dadd( -1.67453, -5.00702, -0.841265, 8.01733 ) }
    soma_0 { pt3dadd( -1.42129, -4.03418, -0.678723, 8.72435 ) }
    soma_0 { pt3dadd( -1.16804, -3.06135, -0.516181, 9.35315 ) }
    soma_0 { pt3dadd( -0.914798, -2.08851, -0.353638, 9.98195 ) }
    soma_0 { pt3dadd( -0.661552, -1.11567, -0.191096, 10.5 ) }
    soma_0 { pt3dadd( -0.408307, -0.142835, -0.0285532, 10.7936 ) }
    soma_0 { pt3dadd( -0.155061, 0.830002, 0.133989, 11.1592 ) }
    soma_0 { pt3dadd( 0.0981843, 1.80284, 0.296532, 11.5247 ) }
    soma_0 { pt3dadd( 0.35143, 2.77568, 0.459074, 11.423 ) }
    soma_0 { pt3dadd( 0.604675, 3.74851, 0.621617, 11.7952 ) }
    soma_0 { pt3dadd( 0.857921, 4.72135, 0.784159, 12.2515 ) }
    soma_0 { pt3dadd( 1.11117, 5.69419, 0.946702, 11.9034 ) }
    soma_0 { pt3dadd( 1.36441, 6.66702, 1.10924, 10.4337 ) }
    soma_0 { pt3dadd( 1.61766, 7.63986, 1.27179, 8.34249 ) }
    soma_0 { pt3dadd( 1.8709, 8.6127, 1.43433, 5.63558 ) }
    soma_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 3.26719 ) }
    // Section: dend_71, id: dend_71, parent: soma_0 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.931045, 7.27809, 20.757, 0.83 ) }
    dend_71 { pt3dadd( 0.581993, 11.2515, 20.7912, 0.83 ) }
    dend_71 { pt3dadd( 0.421472, 14.7682, 20.8138, 0.83 ) }
    dend_71 { pt3dadd( 0.392058, 17.4222, 20.8261, 1.11 ) }
    dend_71 { pt3dadd( 0.410379, 19.8611, 20.8351, 0.83 ) }
    dend_71 { pt3dadd( 0.445865, 22.9226, 20.8458, 0.83 ) }
    dend_71 { pt3dadd( 0.505179, 24.6564, 20.8498, 0.83 ) }
    dend_71 { pt3dadd( 0.651662, 26.004, 20.8951, 0.83 ) }
    dend_71 { pt3dadd( 0.780895, 27.1939, 21.0221, 1.11 ) }
    dend_71 { pt3dadd( 0.975785, 28.7685, 21.2817, 0.83 ) }
    dend_71 { pt3dadd( 1.11282, 29.857, 21.504, 1.11 ) }
    dend_71 { pt3dadd( 1.26728, 31.6967, 21.9269, 0.83 ) }
    dend_71 { pt3dadd( 1.53305, 34.2083, 22.4874, 1.11 ) }
    dend_71 { pt3dadd( 1.8218, 36.9735, 23.0707, 0.83 ) }
    dend_71 { pt3dadd( 2.03236, 39.1012, 23.4663, 0.55 ) }
    dend_71 { pt3dadd( 2.23765, 41.1704, 23.7677, 0.55 ) }
    dend_71 { pt3dadd( 2.33554, 42.547, 23.9127, 0.83 ) }
    dend_71 { pt3dadd( 2.4407, 45.6931, 24.1205, 0.83 ) }
    dend_71 { pt3dadd( 2.50571, 47.6345, 24.1598, 0.83 ) }
    dend_71 { pt3dadd( 2.55167, 50.4056, 24.1601, 0.55 ) }
    dend_71 { pt3dadd( 2.59616, 54.5529, 24.1613, 1.11 ) }
    dend_71 { pt3dadd( 2.5561, 57.3714, 24.3137, 0.83 ) }
    dend_71 { pt3dadd( 2.47926, 59.2713, 24.4996, 1.11 ) }
    dend_71 { pt3dadd( 2.26623, 62.5029, 24.9449, 0.55 ) }
    dend_71 { pt3dadd( 2.16679, 63.9243, 25.2083, 0.55 ) }
    dend_71 { pt3dadd( 1.75485, 67.6713, 26.0878, 0.55 ) }
    dend_71 { pt3dadd( 1.20054, 71.6875, 27.275, 0.83 ) }
    dend_71 { pt3dadd( 0.909075, 73.522, 27.9155, 0.55 ) }
    dend_71 { pt3dadd( 0.723796, 74.7672, 28.3813, 0.83 ) }
    dend_71 { pt3dadd( 0.452771, 76.5259, 29.0624, 0.83 ) }
    dend_71 { pt3dadd( 0.138004, 78.9079, 29.935, 0.83 ) }
    dend_71 { pt3dadd( -0.293523, 83.0268, 31.3418, 1.11 ) }
    dend_71 { pt3dadd( -0.481251, 85.8983, 32.1737, 0.55 ) }
    dend_71 { pt3dadd( -0.619078, 89.5765, 33.2484, 0.83 ) }
    dend_71 { pt3dadd( -0.623394, 91.2066, 33.704, 0.55 ) }
    dend_71 { pt3dadd( -0.569022, 93.5682, 34.3358, 0.83 ) }
    dend_71 { pt3dadd( -0.461755, 95.3323, 34.8007, 0.28 ) }
    dend_71 { pt3dadd( -0.345739, 96.6424, 35.0883, 0.55 ) }
    dend_71 { pt3dadd( -0.204745, 97.8034, 35.2855, 0.28 ) }
    dend_71 { pt3dadd( -0.019392, 100.467, 35.7107, 0.83 ) }
    dend_71 { pt3dadd( -0.0551769, 110.054, 37.5326, 0.83 ) }
    dend_71 { pt3dadd( -1.61142, 118.926, 41.1668, 0.83 ) }
    dend_71 { pt3dadd( -3.12186, 127.08, 46.1081, 0.83 ) }
    dend_71 { pt3dadd( -5.14793, 135.724, 50.011, 0.83 ) }
    dend_71 { pt3dadd( -6.74635, 144.455, 53.9274, 0.83 ) }
    dend_71 { pt3dadd( -7.95981, 153.691, 56.7705, 0.83 ) }
    dend_71 { pt3dadd( -10.3705, 163.055, 58.1172, 0.83 ) }
    dend_71 { pt3dadd( -11.8003, 172.729, 58.2133, 0.83 ) }
    dend_71 { pt3dadd( -13.9651, 182.217, 57.3484, 0.83 ) }
    dend_71 { pt3dadd( -16.1486, 191.704, 56.5269, 0.83 ) }
    dend_71 { pt3dadd( -18.8353, 200.951, 54.9832, 0.83 ) }
    dend_71 { pt3dadd( -22.2138, 210.011, 53.7894, 0.83 ) }
    dend_71 { pt3dadd( -24.7583, 219.435, 53.4204, 0.83 ) }
    // Section: dend_68, id: dend_68, parent: soma_0 (entry count 74/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 1.84105, 8.76909, 11.867, 1.38 ) }
    dend_68 { pt3dadd( 2.73893, 9.98793, 12.1895, 1.38 ) }
    dend_68 { pt3dadd( 3.58544, 11.137, 12.4936, 1.38 ) }
    dend_68 { pt3dadd( 4.98775, 13.0405, 12.9974, 1.11 ) }
    dend_68 { pt3dadd( 6.1539, 14.6235, 13.4163, 1.11 ) }
    dend_68 { pt3dadd( 8.56295, 17.8936, 14.2817, 0.83 ) }
    dend_68 { pt3dadd( 11.1205, 21.3654, 15.2004, 1.11 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 81/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.61104, 4.27509, -0.263001, 2.77 ) }
    dend_57 { pt3dadd( 6.99708, 4.97327, -0.416387, 2.77 ) }
    dend_57 { pt3dadd( 11.1092, 7.04472, -0.871464, 1.66 ) }
    dend_57 { pt3dadd( 17.6623, 10.3457, -1.59666, 1.66 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 85/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.58105, 7.33059, -5.263, 0.83 ) }
    dend_56 { pt3dadd( 5.05949, 8.5505, -5.39717, 0.83 ) }
    dend_56 { pt3dadd( 6.90207, 10.3377, -5.4013, 0.83 ) }
    dend_56 { pt3dadd( 9.65699, 13.372, -5.86846, 0.83 ) }
    dend_56 { pt3dadd( 11.8918, 15.9266, -6.58805, 0.83 ) }
    dend_56 { pt3dadd( 13.572, 17.7681, -7.20942, 0.83 ) }
    dend_56 { pt3dadd( 15.8376, 20.1528, -8.09289, 0.83 ) }
    dend_56 { pt3dadd( 17.4887, 21.9516, -8.78552, 0.83 ) }
    dend_56 { pt3dadd( 21.5659, 26.8905, -10.679, 1.11 ) }
    dend_56 { pt3dadd( 23.1758, 29.0411, -11.4459, 0.55 ) }
    dend_56 { pt3dadd( 24.4027, 30.722, -11.9802, 0.55 ) }
    dend_56 { pt3dadd( 25.5358, 32.2515, -12.3895, 0.55 ) }
    dend_56 { pt3dadd( 27.6815, 35.1275, -13.0184, 1.11 ) }
    dend_56 { pt3dadd( 29.9616, 38.2965, -13.4048, 0.83 ) }
    dend_56 { pt3dadd( 32.0618, 41.3605, -13.4076, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 33.7814, 44.0612, -13.3744, 0.55 ) }
    dend_56 { pt3dadd( 35.5389, 47.0071, -13.3714, 0.55 ) }
    dend_56 { pt3dadd( 36.2245, 48.1932, -13.3641, 0.83 ) }
    dend_56 { pt3dadd( 38.3518, 51.9331, -13.3626, 0.55 ) }
    dend_56 { pt3dadd( 38.9639, 53.0271, -13.3632, 0.55 ) }
    dend_56 { pt3dadd( 40.1017, 55.2339, -13.4105, 1.11 ) }
    dend_56 { pt3dadd( 40.8133, 56.6359, -13.4446, 1.11 ) }
    dend_56 { pt3dadd( 41.5019, 58.045, -13.5112, 0.28 ) }
    dend_56 { pt3dadd( 42.3155, 59.8163, -13.7372, 0.55 ) }
    dend_56 { pt3dadd( 42.8492, 61.1792, -14.0547, 0.28 ) }
    dend_56 { pt3dadd( 43.33, 62.5923, -14.4781, 0.83 ) }
    dend_56 { pt3dadd( 44.6148, 66.6161, -15.8317, 0.55 ) }
    dend_56 { pt3dadd( 45.3404, 68.7325, -16.603, 0.55 ) }
    dend_56 { pt3dadd( 46.3739, 71.6842, -17.7108, 0.83 ) }
    dend_56 { pt3dadd( 47.2502, 74.237, -18.6418, 0.83 ) }
    dend_56 { pt3dadd( 47.9419, 76.2487, -19.3316, 0.55 ) }
    dend_56 { pt3dadd( 48.8751, 78.8318, -20.2088, 0.55 ) }
    dend_56 { pt3dadd( 49.8237, 81.3692, -21.0345, 0.55 ) }
    dend_56 { pt3dadd( 50.2124, 82.2307, -21.2482, 0.55 ) }
    dend_56 { pt3dadd( 51.4722, 84.426, -21.6083, 1.38 ) }
    dend_56 { pt3dadd( 52.8749, 86.4419, -21.861, 0.55 ) }
    dend_56 { pt3dadd( 53.8116, 87.6284, -21.9029, 0.83 ) }
    dend_56 { pt3dadd( 54.2465, 88.1492, -21.8777, 0.28 ) }
    dend_56 { pt3dadd( 55.5364, 89.6484, -21.6893, 0.83 ) }
    dend_56 { pt3dadd( 56.7276, 90.9336, -21.4856, 0.28 ) }
    dend_56 { pt3dadd( 57.8711, 92.0554, -21.1845, 0.28 ) }
    dend_56 { pt3dadd( 60.2017, 94.4438, -20.5082, 0.55 ) }
    dend_56 { pt3dadd( 61.2507, 95.5448, -20.1739, 0.55 ) }
    dend_56 { pt3dadd( 63.0696, 97.4655, -19.5603, 0.55 ) }
    dend_56 { pt3dadd( 64.7682, 99.3294, -18.9533, 0.55 ) }
    dend_56 { pt3dadd( 66.6557, 101.466, -18.3, 0.83 ) }
    dend_56 { pt3dadd( 68.1625, 103.243, -17.8563, 0.83 ) }
    dend_56 { pt3dadd( 69.2046, 104.595, -17.6104, 0.28 ) }
    dend_56 { pt3dadd( 69.7141, 105.346, -17.4441, 0.83 ) }
    dend_56 { pt3dadd( 70.9447, 107.297, -17.0439, 0.28 ) }
    dend_56 { pt3dadd( 71.0967, 107.576, -16.996, 0.83 ) }
    dend_56 { pt3dadd( 72.1983, 109.85, -16.7844, 0.28 ) }
    dend_56 { pt3dadd( 72.9176, 111.374, -16.6332, 0.83 ) }
    dend_56 { pt3dadd( 73.9252, 113.666, -16.5178, 0.28 ) }
    dend_56 { pt3dadd( 74.9507, 116.034, -16.4376, 1.11 ) }
    dend_56 { pt3dadd( 75.6096, 117.455, -16.4067, 1.11 ) }
    dend_56 { pt3dadd( 76.2959, 118.778, -16.4436, 0.55 ) }
    dend_56 { pt3dadd( 77.2215, 120.311, -16.5872, 0.28 ) }
    dend_56 { pt3dadd( 77.8755, 121.31, -16.7382, 0.55 ) }
    dend_56 { pt3dadd( 78.76, 122.645, -17.0533, 0.28 ) }
    dend_56 { pt3dadd( 79.6146, 123.889, -17.2941, 0.83 ) }
    dend_56 { pt3dadd( 81.4338, 126.151, -17.7356, 0.55 ) }
    dend_56 { pt3dadd( 82.0974, 126.901, -17.8769, 0.55 ) }
    dend_56 { pt3dadd( 84.0087, 128.917, -18.2245, 1.11 ) }
    dend_56 { pt3dadd( 86.7962, 131.76, -18.6149, 0.28 ) }
    dend_56 { pt3dadd( 88.5374, 133.341, -18.814, 0.83 ) }
    dend_56 { pt3dadd( 90.4705, 134.969, -18.9076, 0.28 ) }
    dend_56 { pt3dadd( 91.4538, 135.785, -18.881, 0.83 ) }
    dend_56 { pt3dadd( 93.0877, 137.131, -18.7814, 0.28 ) }
    dend_56 { pt3dadd( 93.9381, 137.82, -18.6935, 0.83 ) }
    dend_56 { pt3dadd( 96.6155, 140.096, -18.3277, 0.83 ) }
    dend_56 { pt3dadd( 97.7219, 141.133, -18.2012, 0.28 ) }
    dend_56 { pt3dadd( 100.391, 143.882, -17.8813, 0.28 ) }
    dend_56 { pt3dadd( 101.719, 145.301, -17.736, 1.11 ) }
    dend_56 { pt3dadd( 104.703, 148.659, -17.4364, 0.28 ) }
    dend_56 { pt3dadd( 106.121, 150.315, -17.2944, 1.11 ) }
    dend_56 { pt3dadd( 107.489, 152.043, -17.1618, 0.28 ) }
    dend_56 { pt3dadd( 108.283, 153.03, -17.1035, 0.83 ) }
    dend_56 { pt3dadd( 109.913, 155.029, -16.9705, 0.28 ) }
    dend_56 { pt3dadd( 110.341, 155.572, -16.9252, 0.55 ) }
    dend_56 { pt3dadd( 111.18, 156.658, -16.8506, 0.28 ) }
    dend_56 { pt3dadd( 111.619, 157.185, -16.8004, 0.55 ) }
    dend_56 { pt3dadd( 112.805, 158.465, -16.6764, 0.28 ) }
    dend_56 { pt3dadd( 113.515, 159.066, -16.6071, 0.55 ) }
    dend_56 { pt3dadd( 114.909, 160.045, -16.5609, 0.28 ) }
    dend_56 { pt3dadd( 115.704, 160.549, -16.6213, 0.55 ) }
    dend_56 { pt3dadd( 117.461, 161.559, -16.888, 0.28 ) }
    dend_56 { pt3dadd( 118.002, 161.826, -16.9627, 0.83 ) }
    dend_56 { pt3dadd( 120.16, 162.786, -17.3095, 0.28 ) }
    dend_56 { pt3dadd( 121.268, 163.238, -17.4865, 0.83 ) }
    dend_56 { pt3dadd( 123.622, 164.275, -17.8344, 0.28 ) }
    dend_56 { pt3dadd( 125.997, 165.419, -18.1081, 0.28 ) }
    dend_56 { pt3dadd( 128.242, 166.695, -18.4591, 1.11 ) }
    dend_56 { pt3dadd( 129.688, 167.627, -18.7143, 0.28 ) }
    dend_56 { pt3dadd( 130.98, 168.565, -18.9332, 0.55 ) }
    dend_56 { pt3dadd( 132.41, 169.722, -19.1436, 0.28 ) }
    dend_56 { pt3dadd( 133.646, 170.886, -19.3297, 0.83 ) }
    dend_56 { pt3dadd( 136.255, 173.788, -19.5982, 0.28 ) }
    dend_56 { pt3dadd( 136.674, 174.34, -19.6224, 0.55 ) }
    dend_56 { pt3dadd( 138.048, 176.273, -19.5701, 0.55 ) }
    dend_56 { pt3dadd( 139.518, 178.516, -19.4112, 0.28 ) }
    dend_56 { pt3dadd( 140.506, 180.161, -19.1118, 1.11 ) }
    dend_56 { pt3dadd( 141.662, 182.57, -18.4188, 0.28 ) }
    dend_56 { pt3dadd( 142.273, 184.272, -17.919, 0.55 ) }
    dend_56 { pt3dadd( 143.019, 187.401, -17.2544, 0.28 ) }
    dend_56 { pt3dadd( 143.149, 188.702, -17.0942, 0.83 ) }
    dend_56 { pt3dadd( 143.268, 192.606, -16.4476, 0.28 ) }
    dend_56 { pt3dadd( 143.222, 195.42, -16.0577, 0.28 ) }
    dend_56 { pt3dadd( 142.931, 199.716, -15.6863, 0.55 ) }
    dend_56 { pt3dadd( 142.649, 202.266, -15.5243, 0.28 ) }
    dend_56 { pt3dadd( 141.981, 205.957, -15.4431, 0.28 ) }
    dend_56 { pt3dadd( 141.171, 210.83, -15.7191, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 97/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.11895, -10.8449, -2.573, 2.22 ) }
    dend_43 { pt3dadd( -1.18086, -12.2044, -1.88068, 2.22 ) }
    dend_43 { pt3dadd( -1.29193, -14.6434, -0.638625, 2.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( -1.47766, -18.7217, 1.43829, 2.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.67895, -9.21741, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -6.54989, -10.1123, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -9.82133, -11.1321, -5.133, 2.49 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -5.96896, 2.12259, 10.787, 1.11 ) }
    dend_27 { pt3dadd( -7.91705, 3.47171, 11.7666, 0.83 ) }
    dend_27 { pt3dadd( -11.5413, 5.77974, 13.2102, 0.55 ) }
    dend_27 { pt3dadd( -12.4959, 6.41683, 13.5358, 0.83 ) }
    dend_27 { pt3dadd( -14.4605, 7.71229, 14.1875, 0.55 ) }
    dend_27 { pt3dadd( -16.6497, 9.15583, 14.9135, 0.83 ) }
    dend_27 { pt3dadd( -19.1473, 10.8027, 15.742, 0.55 ) }
    dend_27 { pt3dadd( -22.2415, 12.7912, 16.7227, 0.55 ) }
    dend_27 { pt3dadd( -25.6196, 14.8213, 17.5277, 0.55 ) }
    dend_27 { pt3dadd( -27.5161, 15.9702, 17.965, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.12895, -1.72041, 5.667, 2.49 ) }
    dend_0 { pt3dadd( -0.884978, -5.77045, 5.667, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 5.90296, 24.1017, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 9.68178, 38.618, 1.59687, 1.11 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 19/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 11.1205, 21.3654, 15.2004, 0.55 ) }
    dend_70 { pt3dadd( 13.1058, 22.4015, 14.9468, 0.55 ) }
    dend_70 { pt3dadd( 15.9012, 23.8408, 14.5595, 0.55 ) }
    dend_70 { pt3dadd( 18.3816, 25.0224, 14.3817, 0.83 ) }
    dend_70 { pt3dadd( 20.6977, 26.0515, 14.3428, 0.83 ) }
    dend_70 { pt3dadd( 23.7414, 27.337, 14.4064, 0.55 ) }
    dend_70 { pt3dadd( 25.921, 28.222, 14.5121, 0.55 ) }
    dend_70 { pt3dadd( 28.0966, 29.0476, 14.7255, 0.83 ) }
    dend_70 { pt3dadd( 30.7741, 30.1068, 15.1184, 0.55 ) }
    dend_70 { pt3dadd( 32.9463, 31.0655, 15.7499, 0.55 ) }
    dend_70 { pt3dadd( 34.3154, 31.7732, 16.3096, 0.28 ) }
    dend_70 { pt3dadd( 35.5926, 32.5581, 16.9941, 0.28 ) }
    dend_70 { pt3dadd( 37.383, 33.8512, 18.2653, 0.55 ) }
    dend_70 { pt3dadd( 39.8012, 35.8969, 20.2075, 0.55 ) }
    dend_70 { pt3dadd( 42.4783, 38.3892, 22.5151, 0.28 ) }
    dend_70 { pt3dadd( 42.9752, 38.8449, 23.0021, 0.28 ) }
    dend_70 { pt3dadd( 44.0917, 39.8442, 24.1535, 0.55 ) }
    dend_70 { pt3dadd( 45.5869, 40.9361, 25.5531, 0.28 ) }
    dend_70 { pt3dadd( 47.5186, 41.9615, 27.0037, 0.55 ) }
    dend_70 { pt3dadd( 48.8132, 42.4897, 27.7586, 0.28 ) }
    dend_70 { pt3dadd( 50.5357, 43.0854, 28.5384, 0.83 ) }
    dend_70 { pt3dadd( 52.8567, 43.792, 29.4949, 0.55 ) }
    dend_70 { pt3dadd( 55.866, 44.6603, 30.6276, 0.55 ) }
    dend_70 { pt3dadd( 58.8722, 45.5425, 31.5694, 0.55 ) }
    dend_70 { pt3dadd( 62.2415, 46.573, 32.5315, 0.55 ) }
    dend_70 { pt3dadd( 62.7287, 46.7199, 32.6541, 0.28 ) }
    dend_70 { pt3dadd( 64.4892, 47.193, 33.0446, 0.28 ) }
    dend_70 { pt3dadd( 66.5826, 47.6159, 33.3642, 0.55 ) }
    dend_70 { pt3dadd( 68.3215, 47.927, 33.5024, 0.28 ) }
    dend_70 { pt3dadd( 69.0383, 48.0301, 33.4974, 0.55 ) }
    dend_70 { pt3dadd( 70.8134, 48.1374, 33.1156, 0.55 ) }
    dend_70 { pt3dadd( 72.2136, 48.2671, 32.721, 0.55 ) }
    dend_70 { pt3dadd( 74.9679, 48.647, 31.8796, 0.55 ) }
    dend_70 { pt3dadd( 76.8296, 48.9285, 31.3527, 0.28 ) }
    dend_70 { pt3dadd( 80.6296, 49.5915, 30.456, 0.83 ) }
    dend_70 { pt3dadd( 87.6802, 51.0936, 29.0498, 0.55 ) }
    dend_70 { pt3dadd( 90.2214, 51.7343, 28.6272, 0.55 ) }
    dend_70 { pt3dadd( 92.9447, 52.4241, 28.1583, 0.83 ) }
    dend_70 { pt3dadd( 95.1595, 53.0547, 27.9315, 0.28 ) }
    dend_70 { pt3dadd( 96.7201, 53.5448, 27.8866, 0.83 ) }
    dend_70 { pt3dadd( 98.4501, 54.1662, 28.0356, 0.28 ) }
    dend_70 { pt3dadd( 100.009, 54.9095, 28.428, 0.83 ) }
    dend_70 { pt3dadd( 104.793, 57.373, 30.2061, 0.28 ) }
    dend_70 { pt3dadd( 108.177, 59.4839, 31.7427, 0.55 ) }
    dend_70 { pt3dadd( 110.449, 61.1615, 32.9981, 0.28 ) }
    dend_70 { pt3dadd( 111.607, 62.0425, 33.5584, 0.28 ) }
    dend_70 { pt3dadd( 113.651, 63.5685, 34.479, 0.83 ) }
    dend_70 { pt3dadd( 117.24, 66.1217, 36.0494, 0.28 ) }
    dend_70 { pt3dadd( 118.888, 67.1423, 36.7055, 0.83 ) }
    dend_70 { pt3dadd( 121.751, 68.4153, 37.2943, 0.28 ) }
    dend_70 { pt3dadd( 127.639, 70.705, 37.9567, 0.55 ) }
    dend_70 { pt3dadd( 130.307, 71.5238, 38.1294, 0.28 ) }
    dend_70 { pt3dadd( 131.787, 71.8027, 38.101, 0.28 ) }
    dend_70 { pt3dadd( 133.999, 72.027, 37.713, 0.55 ) }
    dend_70 { pt3dadd( 136.786, 72.0322, 37.2692, 0.83 ) }
    dend_70 { pt3dadd( 148.639, 77.9092, 38.7708, 0.83 ) }
    dend_70 { pt3dadd( 160.183, 84.0324, 41.3448, 0.83 ) }
    dend_70 { pt3dadd( 171.67, 88.428, 46.2047, 0.83 ) }
    dend_70 { pt3dadd( 182.696, 90.6873, 52.9952, 0.83 ) }
    dend_70 { pt3dadd( 192.384, 91.4975, 61.7884, 0.83 ) }
    dend_70 { pt3dadd( 199.64, 92.8401, 72.6215, 0.83 ) }
    dend_70 { pt3dadd( 207.274, 92.363, 83.2549, 0.83 ) }
    dend_70 { pt3dadd( 213.479, 89.9159, 94.5513, 0.83 ) }
    dend_70 { pt3dadd( 221.8, 88.6997, 104.596, 0.83 ) }
    dend_70 { pt3dadd( 227.999, 87.7829, 116.101, 0.83 ) }
    dend_70 { pt3dadd( 235.959, 85.9834, 126.354, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 11.1205, 21.3654, 15.2004, 0.55 ) }
    dend_69 { pt3dadd( 13.2434, 21.7679, 16.5614, 0.55 ) }
    dend_69 { pt3dadd( 14.5278, 22.165, 17.5629, 0.55 ) }
    dend_69 { pt3dadd( 16.9138, 22.8055, 19.5077, 0.55 ) }
    dend_69 { pt3dadd( 20.6147, 23.7161, 22.5362, 0.55 ) }
    dend_69 { pt3dadd( 21.9163, 23.9752, 23.5586, 0.83 ) }
    dend_69 { pt3dadd( 23.1119, 24.1984, 24.3781, 0.83 ) }
    dend_69 { pt3dadd( 25.8804, 24.6521, 26.3429, 0.83 ) }
    dend_69 { pt3dadd( 27.7244, 24.8741, 27.4869, 0.55 ) }
    dend_69 { pt3dadd( 29.9569, 24.9435, 28.5382, 0.83 ) }
    dend_69 { pt3dadd( 31.7669, 24.8092, 29.103, 0.55 ) }
    dend_69 { pt3dadd( 34.492, 24.4973, 29.792, 0.55 ) }
    dend_69 { pt3dadd( 38.1937, 23.9285, 30.503, 0.83 ) }
    dend_69 { pt3dadd( 41.7158, 23.2783, 30.9097, 0.83 ) }
    dend_69 { pt3dadd( 43.8331, 22.8254, 31.0913, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_69 { pt3dadd( 45.9042, 22.2433, 31.2099, 0.83 ) }
    dend_69 { pt3dadd( 48.2104, 21.5001, 31.3311, 0.55 ) }
    dend_69 { pt3dadd( 49.6773, 20.9158, 31.4144, 0.83 ) }
    dend_69 { pt3dadd( 51.2711, 20.203, 31.4108, 0.83 ) }
    dend_69 { pt3dadd( 53.0189, 19.4474, 31.4393, 0.83 ) }
    dend_69 { pt3dadd( 56.1187, 18.0553, 31.4906, 0.83 ) }
    dend_69 { pt3dadd( 57.4363, 17.3107, 31.4746, 0.55 ) }
    dend_69 { pt3dadd( 58.4647, 16.6128, 31.4439, 0.83 ) }
    dend_69 { pt3dadd( 59.4514, 15.8635, 31.3785, 0.83 ) }
    dend_69 { pt3dadd( 61.7279, 13.814, 31.1558, 0.83 ) }
    dend_69 { pt3dadd( 63.2732, 12.109, 31.0035, 0.83 ) }
    dend_69 { pt3dadd( 65.0925, 9.66773, 31.0902, 0.83 ) }
    dend_69 { pt3dadd( 66.5182, 7.64281, 31.1828, 0.83 ) }
    dend_69 { pt3dadd( 68.1228, 5.28082, 31.3257, 0.55 ) }
    dend_69 { pt3dadd( 69.3801, 3.18491, 31.4977, 0.55 ) }
    dend_69 { pt3dadd( 70.7849, 0.430861, 31.8229, 0.55 ) }
    dend_69 { pt3dadd( 72.9027, -3.60055, 32.631, 0.55 ) }
    dend_69 { pt3dadd( 82.5401, -6.38923, 36.322, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_57 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 17.6623, 10.3457, -1.59666, 0.83 ) }
    dend_67 { pt3dadd( 18.4272, 14.1259, -0.630769, 0.83 ) }
    dend_67 { pt3dadd( 18.8422, 16.1988, -0.30153, 0.83 ) }
    dend_67 { pt3dadd( 19.3046, 18.0305, 0.310998, 0.83 ) }
    dend_67 { pt3dadd( 20.4635, 21.759, 1.78478, 0.83 ) }
    dend_67 { pt3dadd( 21.1353, 23.6109, 2.51215, 0.83 ) }
    dend_67 { pt3dadd( 22.1462, 26.2425, 3.51778, 0.28 ) }
    dend_67 { pt3dadd( 22.8941, 27.9318, 4.3227, 0.83 ) }
    dend_67 { pt3dadd( 25.6849, 33.2229, 7.14254, 0.55 ) }
    dend_67 { pt3dadd( 26.7383, 35.0167, 8.17, 0.55 ) }
    dend_67 { pt3dadd( 28.451, 37.6596, 9.75972, 0.55 ) }
    dend_67 { pt3dadd( 29.0147, 38.4289, 10.3254, 0.55 ) }
    dend_67 { pt3dadd( 30.8574, 40.7342, 12.3323, 0.55 ) }
    dend_67 { pt3dadd( 31.4502, 41.4, 12.9441, 0.28 ) }
    dend_67 { pt3dadd( 32.1364, 42.1208, 13.5582, 0.55 ) }
    dend_67 { pt3dadd( 33.4434, 43.3418, 14.8125, 0.55 ) }
    dend_67 { pt3dadd( 34.6477, 44.3351, 15.9853, 0.28 ) }
    dend_67 { pt3dadd( 35.1289, 44.7337, 16.4346, 0.28 ) }
    dend_67 { pt3dadd( 35.5423, 45.0708, 16.7434, 0.55 ) }
    dend_67 { pt3dadd( 36.248, 45.5731, 17.2428, 0.28 ) }
    dend_67 { pt3dadd( 37.4879, 46.3371, 18.0084, 0.55 ) }
    dend_67 { pt3dadd( 37.8417, 46.5363, 18.182, 0.55 ) }
    dend_67 { pt3dadd( 38.7717, 47.0671, 18.5983, 0.55 ) }
    dend_67 { pt3dadd( 40.7526, 48.1258, 19.4994, 0.28 ) }
    dend_67 { pt3dadd( 41.9418, 48.7242, 20.0401, 0.55 ) }
    dend_67 { pt3dadd( 43.1185, 49.2733, 20.557, 0.28 ) }
    dend_67 { pt3dadd( 43.8681, 49.6063, 20.897, 0.28 ) }
    dend_67 { pt3dadd( 45.1412, 50.1251, 21.423, 0.55 ) }
    dend_67 { pt3dadd( 49.2504, 55.8286, 24.956, 0.55 ) }
    dend_67 { pt3dadd( 54.3823, 61.2844, 27.3076, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 17.6623, 10.3457, -1.59666, 1.11 ) }
    dend_58 { pt3dadd( 22.2793, 8.24707, -2.66434, 1.11 ) }
    dend_58 { pt3dadd( 25.537, 6.86709, -3.77544, 1.11 ) }
    dend_58 { pt3dadd( 27.7624, 6.19438, -4.63658, 1.11 ) }
    dend_58 { pt3dadd( 30.1861, 5.6891, -5.65689, 1.38 ) }
    dend_58 { pt3dadd( 34.3894, 4.81282, -7.42632, 2.22 ) }
    dend_58 { pt3dadd( 38.0778, 4.04387, -8.97903, 1.38 ) }
    dend_58 { pt3dadd( 41.5491, 3.23514, -10.6796, 0.83 ) }
    dend_58 { pt3dadd( 45.0738, 2.55529, -12.8028, 1.38 ) }
    dend_58 { pt3dadd( 47.3424, 2.39048, -14.2781, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.47766, -18.7217, 1.43829, 1.38 ) }
    dend_51 { pt3dadd( -2.19474, -19.7652, 1.36626, 1.38 ) }
    dend_51 { pt3dadd( -3.57456, -21.7729, 1.22764, 0.83 ) }
    dend_51 { pt3dadd( -4.06737, -22.49, 1.17814, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.47766, -18.7217, 1.43829, 1.38 ) }
    dend_44 { pt3dadd( 0.366099, -23.7566, 1.56314, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.82133, -11.1321, -5.133, 1.38 ) }
    dend_32 { pt3dadd( -12.3313, -13.7706, -5.13291, 1.38 ) }
    dend_32 { pt3dadd( -15.7405, -17.3545, -5.13279, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 67/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.82133, -11.1321, -5.133, 0.55 ) }
    dend_31 { pt3dadd( -10.4735, -10.1771, -5.21273, 0.55 ) }
    dend_31 { pt3dadd( -11.3944, -8.5661, -5.48256, 0.55 ) }
    dend_31 { pt3dadd( -11.9486, -7.49522, -5.6867, 0.55 ) }
    dend_31 { pt3dadd( -12.612, -5.99892, -5.92641, 0.55 ) }
    dend_31 { pt3dadd( -12.942, -5.15653, -6.05465, 0.55 ) }
    dend_31 { pt3dadd( -13.3657, -3.90393, -6.27286, 0.55 ) }
    dend_31 { pt3dadd( -13.6537, -2.58042, -6.51326, 0.28 ) }
    dend_31 { pt3dadd( -13.7052, -2.09461, -6.5979, 0.55 ) }
    dend_31 { pt3dadd( -13.7054, -0.892814, -6.86582, 0.28 ) }
    dend_31 { pt3dadd( -13.6264, -0.0988648, -7.00035, 0.55 ) }
    dend_31 { pt3dadd( -13.4355, 1.08227, -7.09178, 0.28 ) }
    dend_31 { pt3dadd( -13.2619, 1.90305, -7.08867, 0.55 ) }
    dend_31 { pt3dadd( -13.0019, 3.03148, -7.03686, 0.28 ) }
    dend_31 { pt3dadd( -12.8786, 3.57958, -7.01711, 0.55 ) }
    dend_31 { pt3dadd( -12.5653, 5.03509, -6.99578, 0.28 ) }
    dend_31 { pt3dadd( -12.3898, 5.90349, -6.99156, 0.55 ) }
    dend_31 { pt3dadd( -12.0252, 7.91526, -7.05261, 0.28 ) }
    dend_31 { pt3dadd( -11.9203, 8.52947, -7.10612, 0.55 ) }
    dend_31 { pt3dadd( -11.7723, 9.29163, -7.19402, 0.28 ) }
    dend_31 { pt3dadd( -11.6511, 9.91503, -7.2783, 0.55 ) }
    dend_31 { pt3dadd( -11.3709, 11.3057, -7.54624, 0.28 ) }
    dend_31 { pt3dadd( -11.1687, 12.3259, -7.73177, 0.55 ) }
    dend_31 { pt3dadd( -10.9888, 13.3442, -7.88782, 0.28 ) }
    dend_31 { pt3dadd( -10.7317, 14.7655, -8.136, 0.28 ) }
    dend_31 { pt3dadd( -10.548, 15.6952, -8.29606, 0.55 ) }
    dend_31 { pt3dadd( -10.2, 17.6494, -8.65662, 0.28 ) }
    dend_31 { pt3dadd( -10.1138, 18.1863, -8.76883, 1.11 ) }
    dend_31 { pt3dadd( -9.94697, 19.5505, -9.07198, 0.55 ) }
    dend_31 { pt3dadd( -9.83122, 20.9128, -9.4073, 0.28 ) }
    dend_31 { pt3dadd( -9.76519, 21.8719, -9.6566, 0.83 ) }
    dend_31 { pt3dadd( -9.68989, 22.9748, -9.96869, 0.28 ) }
    dend_31 { pt3dadd( -9.65981, 23.4956, -10.168, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( -9.58055, 24.1419, -10.4737, 0.28 ) }
    dend_31 { pt3dadd( -9.5013, 24.6895, -10.7892, 0.83 ) }
    dend_31 { pt3dadd( -9.3896, 25.5075, -11.3141, 0.28 ) }
    dend_31 { pt3dadd( -9.19895, 26.739, -12.0936, 0.55 ) }
    dend_31 { pt3dadd( -8.80762, 28.8955, -13.5288, 0.28 ) }
    dend_31 { pt3dadd( -8.60425, 29.9544, -14.28, 0.55 ) }
    dend_31 { pt3dadd( -8.29527, 31.4577, -15.4319, 0.28 ) }
    dend_31 { pt3dadd( -7.99647, 32.9507, -16.6396, 0.28 ) }
    dend_31 { pt3dadd( -7.78541, 34.082, -17.5742, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -27.5161, 15.9702, 17.965, 0.55 ) }
    dend_29 { pt3dadd( -29.3513, 18.4894, 16.0046, 0.55 ) }
    dend_29 { pt3dadd( -30.3809, 19.9603, 15.0574, 0.55 ) }
    dend_29 { pt3dadd( -31.3933, 21.3167, 14.2941, 0.55 ) }
    dend_29 { pt3dadd( -33.943, 24.4928, 12.6166, 0.55 ) }
    dend_29 { pt3dadd( -35.5119, 26.2551, 11.6075, 0.28 ) }
    dend_29 { pt3dadd( -37.336, 28.2495, 10.4631, 0.55 ) }
    dend_29 { pt3dadd( -38.1584, 29.1289, 10.0061, 0.28 ) }
    dend_29 { pt3dadd( -39.6521, 30.6817, 9.18908, 0.55 ) }
    dend_29 { pt3dadd( -41.3651, 32.4557, 8.30565, 0.55 ) }
    dend_29 { pt3dadd( -43.8817, 35.0591, 7.20527, 0.28 ) }
    dend_29 { pt3dadd( -45.0555, 36.2945, 6.64055, 0.55 ) }
    dend_29 { pt3dadd( -46.3841, 37.7412, 6.02228, 0.28 ) }
    dend_29 { pt3dadd( -47.2872, 38.79, 5.63987, 0.55 ) }
    dend_29 { pt3dadd( -48.0076, 39.6798, 5.34526, 0.55 ) }
    dend_29 { pt3dadd( -49.0469, 40.9912, 4.98129, 0.28 ) }
    dend_29 { pt3dadd( -50.3867, 42.6517, 4.52908, 0.55 ) }
    dend_29 { pt3dadd( -51.5551, 44.0305, 4.17071, 0.28 ) }
    dend_29 { pt3dadd( -52.5174, 45.0263, 3.86363, 0.55 ) }
    dend_29 { pt3dadd( -54.9929, 47.2654, 3.05637, 0.28 ) }
    dend_29 { pt3dadd( -55.6141, 47.7382, 2.86694, 0.55 ) }
    dend_29 { pt3dadd( -57.4998, 48.9844, 2.32484, 0.28 ) }
    dend_29 { pt3dadd( -59.4583, 50.1761, 1.80816, 0.55 ) }
    dend_29 { pt3dadd( -62.6411, 52.0597, 1.04048, 0.28 ) }
    dend_29 { pt3dadd( -64.2362, 53.0144, 0.678361, 0.55 ) }
    dend_29 { pt3dadd( -66.0228, 54.1404, 0.310971, 0.28 ) }
    dend_29 { pt3dadd( -67.3627, 55.0433, 0.0013029, 0.55 ) }
    dend_29 { pt3dadd( -68.2856, 55.7162, -0.229941, 0.28 ) }
    dend_29 { pt3dadd( -68.4961, 55.8924, -0.313787, 0.83 ) }
    dend_29 { pt3dadd( -70.1575, 57.6756, -1.11516, 0.28 ) }
    dend_29 { pt3dadd( -70.9474, 58.6968, -1.53035, 0.83 ) }
    dend_29 { pt3dadd( -71.8392, 59.9964, -1.9916, 0.28 ) }
    dend_29 { pt3dadd( -72.1802, 60.5319, -2.13521, 0.83 ) }
    dend_29 { pt3dadd( -73.7583, 63.1603, -2.63009, 0.28 ) }
    dend_29 { pt3dadd( -74.5558, 64.6498, -2.7013, 0.55 ) }
    dend_29 { pt3dadd( -75.7028, 67.0746, -2.50352, 0.28 ) }
    dend_29 { pt3dadd( -76.326, 68.5677, -2.2603, 0.55 ) }
    dend_29 { pt3dadd( -76.9977, 70.3896, -1.85657, 0.28 ) }
    dend_29 { pt3dadd( -77.4569, 71.7128, -1.5346, 0.55 ) }
    dend_29 { pt3dadd( -78.2643, 74.3056, -0.854464, 0.28 ) }
    dend_29 { pt3dadd( -78.4336, 74.9205, -0.713063, 0.55 ) }
    dend_29 { pt3dadd( -78.7425, 76.0346, -0.528951, 0.28 ) }
    dend_29 { pt3dadd( -78.9919, 76.9103, -0.404542, 0.55 ) }
    dend_29 { pt3dadd( -79.5245, 78.5633, -0.224695, 0.28 ) }
    dend_29 { pt3dadd( -80.1425, 80.199, -0.0776596, 0.55 ) }
    dend_29 { pt3dadd( -81.1003, 82.279, 0.0339179, 0.28 ) }
    dend_29 { pt3dadd( -81.7489, 83.5784, 0.120348, 0.55 ) }
    dend_29 { pt3dadd( -82.742, 85.3784, 0.258905, 0.28 ) }
    dend_29 { pt3dadd( -82.9568, 85.7189, 0.288779, 0.55 ) }
    dend_29 { pt3dadd( -83.9265, 87.1746, 0.412659, 0.28 ) }
    dend_29 { pt3dadd( -84.8167, 88.4279, 0.456375, 0.55 ) }
    dend_29 { pt3dadd( -85.3525, 89.1772, 0.428894, 0.28 ) }
    dend_29 { pt3dadd( -85.942, 90.0249, 0.394634, 0.55 ) }
    dend_29 { pt3dadd( -87.195, 91.8862, 0.30406, 0.55 ) }
    dend_29 { pt3dadd( -88.1523, 93.356, 0.211266, 0.83 ) }
    dend_29 { pt3dadd( -89.0426, 94.7944, 0.0804629, 0.55 ) }
    dend_29 { pt3dadd( -90.1806, 96.7977, -0.108956, 0.83 ) }
    dend_29 { pt3dadd( -97.1537, 104.389, -0.442511, 0.83 ) }
    dend_29 { pt3dadd( -105.256, 110.251, 1.50653, 0.83 ) }
    dend_29 { pt3dadd( -112.597, 115.904, 5.67051, 0.83 ) }
    dend_29 { pt3dadd( -120.436, 121.273, 9.23777, 0.83 ) }
    dend_29 { pt3dadd( -128.996, 125.839, 12.1115, 0.83 ) }
    dend_29 { pt3dadd( -136.752, 131.383, 15.6204, 0.83 ) }
    dend_29 { pt3dadd( -144.38, 137.271, 18.8967, 0.83 ) }
    dend_29 { pt3dadd( -152.198, 142.427, 22.7762, 0.83 ) }
    dend_29 { pt3dadd( -158.345, 148.565, 28.0623, 0.83 ) }
    dend_29 { pt3dadd( -164.102, 153.318, 34.853, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -27.5161, 15.9702, 17.965, 0.55 ) }
    dend_28 { pt3dadd( -29.0453, 15.7059, 18.2621, 0.55 ) }
    dend_28 { pt3dadd( -30.3189, 15.4067, 18.8042, 0.55 ) }
    dend_28 { pt3dadd( -32.9161, 14.742, 20.0191, 0.55 ) }
    dend_28 { pt3dadd( -34.9638, 14.2277, 21.018, 0.55 ) }
    dend_28 { pt3dadd( -37.4854, 13.5241, 22.2823, 0.55 ) }
    dend_28 { pt3dadd( -41.6624, 12.2363, 24.2023, 0.55 ) }
    dend_28 { pt3dadd( -46.0611, 10.7095, 26.2487, 0.55 ) }
    dend_28 { pt3dadd( -48.5929, 9.70893, 27.4797, 0.55 ) }
    dend_28 { pt3dadd( -51.3135, 8.39753, 28.8453, 0.55 ) }
    dend_28 { pt3dadd( -53.1946, 7.32402, 29.7949, 0.55 ) }
    dend_28 { pt3dadd( -55.9272, 5.47187, 30.9507, 0.55 ) }
    dend_28 { pt3dadd( -56.6915, 4.84851, 31.1369, 0.83 ) }
    dend_28 { pt3dadd( -58.4877, 3.23974, 31.2729, 0.83 ) }
    dend_28 { pt3dadd( -60.6595, 1.06603, 31.2352, 0.55 ) }
    dend_28 { pt3dadd( -62.5849, -1.00432, 30.9824, 0.55 ) }
    dend_28 { pt3dadd( -64.5576, -3.02689, 30.612, 0.83 ) }
    dend_28 { pt3dadd( -66.1718, -4.6707, 30.3006, 0.28 ) }
    dend_28 { pt3dadd( -67.7174, -6.21274, 29.9186, 0.55 ) }
    dend_28 { pt3dadd( -69.9297, -8.43667, 29.4805, 0.55 ) }
    dend_28 { pt3dadd( -70.923, -9.49219, 29.3687, 0.55 ) }
    dend_28 { pt3dadd( -72.17, -10.7955, 29.3012, 0.55 ) }
    dend_28 { pt3dadd( -73.9282, -12.6568, 29.4555, 0.28 ) }
    dend_28 { pt3dadd( -74.9793, -13.8035, 29.6576, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( -77.5157, -16.8155, 30.2966, 0.28 ) }
    dend_28 { pt3dadd( -78.3681, -17.9311, 30.6927, 0.55 ) }
    dend_28 { pt3dadd( -85.7171, -22.7905, 34.3964, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 3/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.884978, -5.77045, 5.667, 2.22 ) }
    dend_14 { pt3dadd( -1.29646, -7.80657, 3.97003, 2.22 ) }
    dend_14 { pt3dadd( -1.67509, -9.68008, 2.40859, 1.38 ) }
    dend_14 { pt3dadd( -2.28182, -12.6823, -0.0935245, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.884978, -5.77045, 5.667, 1.66 ) }
    dend_1 { pt3dadd( 2.11471, -6.10785, 4.11453, 1.66 ) }
    dend_1 { pt3dadd( 6.41317, -6.59132, 1.88989, 1.66 ) }
    dend_1 { pt3dadd( 13.6513, -7.40545, -1.85617, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.68178, 38.618, 1.59687, 1.11 ) }
    axon_1 { pt3dadd( 13.4606, 53.1342, 1.59687, 1.11 ) }
    axon_1 { pt3dadd( 17.2394, 67.6504, 1.59687, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_58 (entry count 14/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 47.3424, 2.39048, -14.2781, 0.83 ) }
    dend_66 { pt3dadd( 46.1017, 3.62981, -14.3604, 0.83 ) }
    dend_66 { pt3dadd( 44.7894, 4.55095, -14.3774, 0.83 ) }
    dend_66 { pt3dadd( 43.9364, 5.0744, -14.5124, 0.83 ) }
    dend_66 { pt3dadd( 42.6455, 5.97193, -14.8466, 0.83 ) }
    dend_66 { pt3dadd( 41.6295, 6.71141, -15.1441, 0.55 ) }
    dend_66 { pt3dadd( 40.8838, 7.25236, -15.4408, 0.83 ) }
    dend_66 { pt3dadd( 40.0887, 7.82754, -15.7495, 0.83 ) }
    dend_66 { pt3dadd( 38.7587, 8.88001, -16.357, 0.55 ) }
    dend_66 { pt3dadd( 37.2881, 10.0992, -17.1098, 0.55 ) }
    dend_66 { pt3dadd( 36.5221, 10.815, -17.5733, 0.55 ) }
    dend_66 { pt3dadd( 35.1782, 12.281, -18.5251, 0.83 ) }
    dend_66 { pt3dadd( 34.3173, 13.3502, -19.1807, 1.11 ) }
    dend_66 { pt3dadd( 33.1146, 14.9919, -20.1281, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 28/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 47.3424, 2.39048, -14.2781, 0.55 ) }
    dend_59 { pt3dadd( 52.5512, 5.19142, -3.87527, 0.55 ) }
    dend_59 { pt3dadd( 53.1872, 5.49557, -2.7605, 0.55 ) }
    dend_59 { pt3dadd( 54.6733, 6.25698, -0.544578, 1.11 ) }
    dend_59 { pt3dadd( 56.7981, 7.34568, 2.62387, 0.55 ) }
    dend_59 { pt3dadd( 58.084, 8.00456, 4.54139, 0.55 ) }
    dend_59 { pt3dadd( 58.4045, 8.16879, 5.01935, 0.83 ) }
    dend_59 { pt3dadd( 60.4826, 8.79197, 6.21904, 0.55 ) }
    dend_59 { pt3dadd( 62.449, 9.59803, 7.63467, 1.11 ) }
    dend_59 { pt3dadd( 68.6317, 13.8542, 15.2752, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.06737, -22.49, 1.17814, 0.83 ) }
    dend_53 { pt3dadd( -3.16317, -23.6317, 0.967419, 0.83 ) }
    dend_53 { pt3dadd( -2.23484, -24.7738, 0.678711, 0.83 ) }
    dend_53 { pt3dadd( -1.50833, -25.7304, 0.339246, 0.83 ) }
    dend_53 { pt3dadd( -0.202937, -27.7009, -0.391695, 0.28 ) }
    dend_53 { pt3dadd( 0.626016, -29.0353, -0.893348, 0.83 ) }
    dend_53 { pt3dadd( 1.95684, -31.1402, -1.67934, 0.28 ) }
    dend_53 { pt3dadd( 2.41759, -31.8202, -1.945, 0.83 ) }
    dend_53 { pt3dadd( 3.71526, -33.6556, -2.62558, 0.28 ) }
    dend_53 { pt3dadd( 4.74136, -35.2098, -3.16836, 0.55 ) }
    dend_53 { pt3dadd( 5.10279, -35.7722, -3.35391, 0.28 ) }
    dend_53 { pt3dadd( 6.06765, -37.3194, -3.73093, 0.55 ) }
    dend_53 { pt3dadd( 6.95922, -38.776, -3.97167, 0.55 ) }
    dend_53 { pt3dadd( 8.07431, -40.5799, -4.22608, 0.55 ) }
    dend_53 { pt3dadd( 9.33395, -42.5439, -4.43333, 0.28 ) }
    dend_53 { pt3dadd( 9.80035, -43.2787, -4.51436, 0.83 ) }
    dend_53 { pt3dadd( 10.4553, -44.438, -4.61415, 0.28 ) }
    dend_53 { pt3dadd( 11.0541, -45.6171, -4.68979, 0.55 ) }
    dend_53 { pt3dadd( 11.698, -46.9141, -4.84895, 0.55 ) }
    dend_53 { pt3dadd( 12.3106, -48.1383, -5.03404, 0.55 ) }
    dend_53 { pt3dadd( 13.0917, -49.5549, -5.26013, 0.83 ) }
    dend_53 { pt3dadd( 13.7968, -50.7942, -5.46964, 0.55 ) }
    dend_53 { pt3dadd( 15.3839, -53.4412, -5.93583, 0.55 ) }
    dend_53 { pt3dadd( 16.9842, -56.0548, -6.38516, 2.22 ) }
    dend_53 { pt3dadd( 18.2185, -58.0189, -6.7185, 0.55 ) }
    dend_53 { pt3dadd( 19.2493, -59.6007, -6.99022, 0.55 ) }
    dend_53 { pt3dadd( 20.4453, -61.3905, -7.29265, 0.28 ) }
    dend_53 { pt3dadd( 21.3257, -62.6521, -7.53849, 0.55 ) }
    dend_53 { pt3dadd( 22.3902, -64.1395, -7.81275, 0.28 ) }
    dend_53 { pt3dadd( 23.081, -65.1201, -7.95758, 0.83 ) }
    dend_53 { pt3dadd( 23.7606, -66.1255, -8.13679, 0.28 ) }
    dend_53 { pt3dadd( 24.6709, -67.6167, -8.40915, 0.55 ) }
    dend_53 { pt3dadd( 25.6929, -69.5731, -8.73169, 0.28 ) }
    dend_53 { pt3dadd( 26.1936, -70.6717, -8.89098, 0.55 ) }
    dend_53 { pt3dadd( 26.6551, -71.8293, -9.07841, 0.55 ) }
    dend_53 { pt3dadd( 27.1607, -73.3004, -9.32052, 0.28 ) }
    dend_53 { pt3dadd( 27.5349, -74.4644, -9.49429, 0.55 ) }
    dend_53 { pt3dadd( 28.3312, -77.0708, -9.83054, 0.28 ) }
    dend_53 { pt3dadd( 28.5777, -77.9203, -9.9111, 0.55 ) }
    dend_53 { pt3dadd( 29.2448, -80.0645, -10.1761, 0.28 ) }
    dend_53 { pt3dadd( 29.5083, -80.7906, -10.2707, 0.55 ) }
    dend_53 { pt3dadd( 30.3132, -82.751, -10.5852, 0.28 ) }
    dend_53 { pt3dadd( 30.616, -83.415, -10.7252, 0.55 ) }
    dend_53 { pt3dadd( 31.6597, -85.5107, -11.2491, 0.28 ) }
    dend_53 { pt3dadd( 32.3152, -86.6985, -11.587, 0.83 ) }
    dend_53 { pt3dadd( 33.3008, -88.4436, -12.1141, 0.28 ) }
    dend_53 { pt3dadd( 34.0737, -89.8325, -12.5855, 0.55 ) }
    dend_53 { pt3dadd( 35.0451, -91.5686, -13.2309, 0.28 ) }
    dend_53 { pt3dadd( 35.5382, -92.4209, -13.521, 0.55 ) }
    dend_53 { pt3dadd( 37.127, -95.1519, -14.303, 0.28 ) }
    dend_53 { pt3dadd( 37.956, -96.5884, -14.6754, 0.55 ) }
    dend_53 { pt3dadd( 38.5923, -97.7112, -14.9066, 0.55 ) }
    dend_53 { pt3dadd( 39.4258, -99.2014, -15.1258, 0.55 ) }
    dend_53 { pt3dadd( 41.0588, -102.103, -15.3897, 0.28 ) }
    dend_53 { pt3dadd( 41.5399, -102.97, -15.4481, 0.55 ) }
    dend_53 { pt3dadd( 43.2205, -105.972, -15.5173, 0.28 ) }
    dend_53 { pt3dadd( 44.1156, -107.394, -15.5608, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 95/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.06737, -22.49, 1.17814, 0.55 ) }
    dend_52 { pt3dadd( -5.86188, -23.729, 1.99282, 0.55 ) }
    dend_52 { pt3dadd( -7.60927, -24.9018, 2.88538, 0.55 ) }
    dend_52 { pt3dadd( -9.47361, -26.0386, 3.87395, 0.55 ) }
    dend_52 { pt3dadd( -11.8469, -27.3309, 5.07322, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( -13.2717, -28.0302, 5.76629, 0.55 ) }
    dend_52 { pt3dadd( -13.8961, -28.3215, 6.07424, 0.55 ) }
    dend_52 { pt3dadd( -15.0113, -28.8213, 6.61463, 0.83 ) }
    dend_52 { pt3dadd( -16.2858, -29.3053, 7.27651, 0.83 ) }
    dend_52 { pt3dadd( -17.9845, -29.9353, 8.15123, 0.55 ) }
    dend_52 { pt3dadd( -18.6111, -30.2094, 8.49788, 0.55 ) }
    dend_52 { pt3dadd( -20.1375, -30.9634, 9.3994, 0.55 ) }
    dend_52 { pt3dadd( -21.839, -31.961, 10.418, 0.83 ) }
    dend_52 { pt3dadd( -24.1455, -33.5265, 11.7616, 0.28 ) }
    dend_52 { pt3dadd( -25.1892, -34.3538, 12.4027, 1.11 ) }
    dend_52 { pt3dadd( -26.6978, -35.7338, 13.4089, 0.55 ) }
    dend_52 { pt3dadd( -27.4729, -36.5193, 13.9255, 0.55 ) }
    dend_52 { pt3dadd( -28.1679, -37.2711, 14.3657, 0.83 ) }
    dend_52 { pt3dadd( -28.7828, -37.9904, 14.756, 0.28 ) }
    dend_52 { pt3dadd( -29.0404, -38.3131, 14.8602, 0.55 ) }
    dend_52 { pt3dadd( -29.8434, -39.3203, 15.1141, 0.28 ) }
    dend_52 { pt3dadd( -30.2737, -39.8579, 15.1775, 0.55 ) }
    dend_52 { pt3dadd( -31.1844, -40.9252, 15.2646, 0.28 ) }
    dend_52 { pt3dadd( -31.9506, -41.7651, 15.3186, 0.55 ) }
    dend_52 { pt3dadd( -32.9511, -42.7859, 15.4034, 0.28 ) }
    dend_52 { pt3dadd( -33.4675, -43.2485, 15.4501, 0.55 ) }
    dend_52 { pt3dadd( -34.6433, -44.1798, 15.5485, 0.28 ) }
    dend_52 { pt3dadd( -36.2815, -45.3761, 15.7111, 0.83 ) }
    dend_52 { pt3dadd( -38.271, -46.712, 15.9461, 0.55 ) }
    dend_52 { pt3dadd( -39.3646, -47.3877, 16.1039, 0.55 ) }
    dend_52 { pt3dadd( -40.8415, -48.1831, 16.349, 0.55 ) }
    dend_52 { pt3dadd( -42.4466, -48.9445, 16.6459, 0.28 ) }
    dend_52 { pt3dadd( -42.9871, -49.1706, 16.7586, 0.55 ) }
    dend_52 { pt3dadd( -44.3116, -49.6456, 17.0412, 0.28 ) }
    dend_52 { pt3dadd( -44.7071, -49.7671, 17.1243, 0.83 ) }
    dend_52 { pt3dadd( -46.6226, -50.347, 17.5625, 0.28 ) }
    dend_52 { pt3dadd( -47.8948, -50.71, 17.9361, 0.83 ) }
    dend_52 { pt3dadd( -49.1399, -50.9973, 18.3806, 0.28 ) }
    dend_52 { pt3dadd( -49.8627, -51.1194, 18.6502, 0.83 ) }
    dend_52 { pt3dadd( -51.0948, -51.2367, 19.1411, 0.28 ) }
    dend_52 { pt3dadd( -52.0858, -51.2495, 19.5582, 0.55 ) }
    dend_52 { pt3dadd( -53.3035, -51.1245, 20.1133, 0.28 ) }
    dend_52 { pt3dadd( -53.822, -50.9715, 20.3788, 0.83 ) }
    dend_52 { pt3dadd( -54.7358, -50.5315, 20.9423, 0.28 ) }
    dend_52 { pt3dadd( -55.0158, -50.3719, 21.1357, 0.55 ) }
    dend_52 { pt3dadd( -55.5299, -50.0894, 21.4916, 0.28 ) }
    dend_52 { pt3dadd( -55.9841, -49.8801, 21.8071, 0.55 ) }
    dend_52 { pt3dadd( -57.7762, -49.6369, 22.9814, 0.28 ) }
    dend_52 { pt3dadd( -58.1277, -49.6594, 23.2048, 0.83 ) }
    dend_52 { pt3dadd( -58.7035, -49.7727, 23.525, 0.83 ) }
    dend_52 { pt3dadd( -60.4934, -50.2993, 24.4804, 0.28 ) }
    dend_52 { pt3dadd( -61.4963, -50.7103, 24.9278, 0.83 ) }
    dend_52 { pt3dadd( -64.129, -52.0442, 25.9167, 0.28 ) }
    dend_52 { pt3dadd( -64.7035, -52.3633, 26.1001, 0.83 ) }
    dend_52 { pt3dadd( -65.9291, -53.0816, 26.4844, 0.28 ) }
    dend_52 { pt3dadd( -67.4308, -54.0113, 26.9372, 0.83 ) }
    dend_52 { pt3dadd( -69.6015, -55.521, 27.5189, 0.28 ) }
    dend_52 { pt3dadd( -70.2281, -55.976, 27.6393, 0.83 ) }
    dend_52 { pt3dadd( -75.5406, -58.125, 31.2782, 0.83 ) }
    dend_52 { pt3dadd( -80.6332, -59.1217, 35.6159, 0.83 ) }
    dend_52 { pt3dadd( -85.323, -60.8407, 40.1941, 0.83 ) }
    dend_52 { pt3dadd( -90.609, -61.8498, 44.2914, 0.83 ) }
    dend_52 { pt3dadd( -95.7353, -63.8701, 48.2493, 0.83 ) }
    dend_52 { pt3dadd( -100.026, -65.8709, 53.1052, 0.83 ) }
    dend_52 { pt3dadd( -104.969, -67.3701, 57.4835, 0.83 ) }
    dend_52 { pt3dadd( -109.961, -67.6664, 62.0282, 0.83 ) }
    dend_52 { pt3dadd( -115.413, -68.1746, 65.9907, 0.83 ) }
    dend_52 { pt3dadd( -121.154, -67.7012, 69.5271, 0.83 ) }
    dend_52 { pt3dadd( -127.154, -67.2384, 72.603, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 0.366099, -23.7566, 1.56314, 0.55 ) }
    dend_50 { pt3dadd( -0.758768, -26.9544, 2.44107, 0.55 ) }
    dend_50 { pt3dadd( -1.32245, -28.7281, 2.85064, 0.55 ) }
    dend_50 { pt3dadd( -2.00358, -31.0196, 3.29311, 1.11 ) }
    dend_50 { pt3dadd( -2.61947, -33.1352, 3.6842, 0.83 ) }
    dend_50 { pt3dadd( -3.28295, -35.4006, 4.08523, 1.66 ) }
    dend_50 { pt3dadd( -3.91194, -37.5635, 4.55597, 0.83 ) }
    dend_50 { pt3dadd( -4.16408, -38.4789, 4.78534, 0.55 ) }
    dend_50 { pt3dadd( -4.64801, -40.0874, 5.20026, 1.11 ) }
    dend_50 { pt3dadd( -5.03402, -41.2359, 5.47461, 0.55 ) }
    dend_50 { pt3dadd( -5.61789, -42.8974, 5.84668, 1.11 ) }
    dend_50 { pt3dadd( -6.73984, -45.8943, 6.58268, 0.55 ) }
    dend_50 { pt3dadd( -7.42032, -47.5045, 7.01423, 0.55 ) }
    dend_50 { pt3dadd( -7.76671, -48.2631, 7.20645, 0.83 ) }
    dend_50 { pt3dadd( -8.68458, -50.179, 7.57635, 0.55 ) }
    dend_50 { pt3dadd( -9.21591, -51.2389, 7.68519, 0.83 ) }
    dend_50 { pt3dadd( -9.87638, -52.5706, 7.79407, 0.28 ) }
    dend_50 { pt3dadd( -10.3334, -53.5257, 7.83366, 1.11 ) }
    dend_50 { pt3dadd( -10.7446, -54.4409, 7.90831, 1.11 ) }
    dend_50 { pt3dadd( -11.4041, -56.1348, 8.09248, 0.55 ) }
    dend_50 { pt3dadd( -11.7865, -57.2624, 8.24023, 0.55 ) }
    dend_50 { pt3dadd( -12.6183, -59.8618, 8.62322, 0.55 ) }
    dend_50 { pt3dadd( -13.0967, -61.5063, 8.94835, 0.55 ) }
    dend_50 { pt3dadd( -13.5013, -63.1096, 9.32091, 0.55 ) }
    dend_50 { pt3dadd( -13.759, -64.316, 9.61797, 0.55 ) }
    dend_50 { pt3dadd( -13.9586, -65.3149, 9.8788, 0.83 ) }
    dend_50 { pt3dadd( -14.1432, -66.2355, 10.0997, 0.83 ) }
    dend_50 { pt3dadd( -14.5715, -68.0395, 10.418, 0.28 ) }
    dend_50 { pt3dadd( -14.7202, -68.5406, 10.4574, 0.55 ) }
    dend_50 { pt3dadd( -15.2442, -69.9261, 10.4015, 0.28 ) }
    dend_50 { pt3dadd( -15.5128, -70.5178, 10.2403, 0.55 ) }
    dend_50 { pt3dadd( -16.0045, -71.5091, 9.8393, 0.28 ) }
    dend_50 { pt3dadd( -16.3986, -72.1887, 9.53747, 0.83 ) }
    dend_50 { pt3dadd( -18.1607, -75.0567, 8.21852, 0.28 ) }
    dend_50 { pt3dadd( -18.829, -76.1269, 7.74898, 0.83 ) }
    dend_50 { pt3dadd( -20.6521, -78.979, 6.564, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_50 { pt3dadd( -21.4157, -80.1882, 6.11184, 1.38 ) }
    dend_50 { pt3dadd( -22.5956, -82.0717, 5.48547, 0.55 ) }
    dend_50 { pt3dadd( -23.3305, -83.2537, 5.19977, 0.55 ) }
    dend_50 { pt3dadd( -24.3007, -84.8175, 5.10836, 0.28 ) }
    dend_50 { pt3dadd( -24.7775, -85.5407, 5.12722, 0.83 ) }
    dend_50 { pt3dadd( -25.3344, -86.3085, 5.24811, 0.28 ) }
    dend_50 { pt3dadd( -25.4748, -86.4977, 5.2659, 0.83 ) }
    dend_50 { pt3dadd( -26.3843, -87.7046, 5.27804, 0.28 ) }
    dend_50 { pt3dadd( -27.3285, -88.9186, 5.25166, 0.55 ) }
    dend_50 { pt3dadd( -28.0769, -89.9334, 5.11593, 0.28 ) }
    dend_50 { pt3dadd( -28.3595, -90.361, 5.0008, 0.55 ) }
    dend_50 { pt3dadd( -29.2313, -91.8289, 4.51398, 0.28 ) }
    dend_50 { pt3dadd( -29.453, -92.2789, 4.36405, 0.55 ) }
    dend_50 { pt3dadd( -29.8765, -93.3707, 3.87251, 0.55 ) }
    dend_50 { pt3dadd( -30.3952, -94.8123, 3.1735, 0.28 ) }
    dend_50 { pt3dadd( -30.7102, -95.6586, 2.75529, 0.55 ) }
    dend_50 { pt3dadd( -31.107, -96.6326, 2.26998, 0.28 ) }
    dend_50 { pt3dadd( -31.5928, -97.8521, 1.71657, 1.11 ) }
    dend_50 { pt3dadd( -32.6969, -100.248, 0.554357, 0.55 ) }
    dend_50 { pt3dadd( -33.2016, -101.197, 0.194143, 0.83 ) }
    dend_50 { pt3dadd( -34.0272, -102.817, -0.0776921, 0.28 ) }
    dend_50 { pt3dadd( -34.2366, -103.241, -0.132715, 0.83 ) }
    dend_50 { pt3dadd( -34.8961, -104.678, -0.252511, 0.28 ) }
    dend_50 { pt3dadd( -35.3405, -105.879, -0.225344, 0.55 ) }
    dend_50 { pt3dadd( -36.1956, -108.591, -0.123444, 0.55 ) }
    dend_50 { pt3dadd( -36.707, -110.33, -0.209808, 0.55 ) }
    dend_50 { pt3dadd( -37.3908, -112.976, -0.368668, 0.28 ) }
    dend_50 { pt3dadd( -37.5797, -113.801, -0.374926, 0.28 ) }
    dend_50 { pt3dadd( -37.8939, -115.212, -0.4275, 0.83 ) }
    dend_50 { pt3dadd( -38.2752, -117.103, -0.618723, 0.28 ) }
    dend_50 { pt3dadd( -38.6242, -118.636, -0.893869, 0.28 ) }
    dend_50 { pt3dadd( -38.9543, -119.794, -1.0807, 0.83 ) }
    dend_50 { pt3dadd( -39.9262, -122.731, -1.32554, 0.28 ) }
    dend_50 { pt3dadd( -40.6286, -124.451, -1.28609, 0.55 ) }
    dend_50 { pt3dadd( -41.5797, -126.64, -1.16439, 0.28 ) }
    dend_50 { pt3dadd( -42.1878, -128.018, -1.01806, 0.83 ) }
    dend_50 { pt3dadd( -43.151, -129.979, -0.807007, 1.38 ) }
    dend_50 { pt3dadd( -43.762, -131.016, -0.706077, 0.55 ) }
    dend_50 { pt3dadd( -45.7105, -133.684, -0.491397, 1.66 ) }
    dend_50 { pt3dadd( -49.7083, -141.148, -1.19655, 1.66 ) }
    dend_50 { pt3dadd( -53.8929, -148.529, -0.960022, 1.66 ) }
    dend_50 { pt3dadd( -58.2818, -155.741, -0.224916, 1.66 ) }
    dend_50 { pt3dadd( -62.6903, -162.936, -1.00784, 1.66 ) }
    dend_50 { pt3dadd( -66.5164, -170.38, -2.46158, 1.66 ) }
    dend_50 { pt3dadd( -71.2147, -177.416, -2.34578, 1.66 ) }
    dend_50 { pt3dadd( -76.6069, -183.8, -1.37361, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.366099, -23.7566, 1.56314, 0.83 ) }
    dend_45 { pt3dadd( 1.72768, -26.2574, 0.315267, 0.83 ) }
    dend_45 { pt3dadd( 3.39218, -29.3144, -1.21022, 0.83 ) }
    dend_45 { pt3dadd( 4.16931, -30.7417, -1.92245, 0.83 ) }
    dend_45 { pt3dadd( 5.71198, -33.5751, -3.33629, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -15.7405, -17.3545, -5.13279, 0.83 ) }
    dend_40 { pt3dadd( -17.2202, -19.4399, -6.2276, 0.83 ) }
    dend_40 { pt3dadd( -17.7205, -20.4384, -6.53818, 0.83 ) }
    dend_40 { pt3dadd( -18.1225, -21.5179, -6.75677, 0.83 ) }
    dend_40 { pt3dadd( -18.7826, -23.2906, -7.11573, 1.94 ) }
    dend_40 { pt3dadd( -19.5737, -25.4152, -7.54595, 0.55 ) }
    dend_40 { pt3dadd( -20.4905, -27.8774, -8.04452, 0.55 ) }
    dend_40 { pt3dadd( -20.8053, -28.9827, -8.12298, 0.55 ) }
    dend_40 { pt3dadd( -21.3069, -31.1396, -8.20589, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 60/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.7405, -17.3545, -5.13279, 0.83 ) }
    dend_33 { pt3dadd( -16.4925, -18.7598, -5.48207, 0.83 ) }
    dend_33 { pt3dadd( -17.4156, -20.097, -5.64092, 0.55 ) }
    dend_33 { pt3dadd( -18.8302, -21.9554, -5.67352, 0.55 ) }
    dend_33 { pt3dadd( -20.3877, -23.7915, -5.61008, 0.55 ) }
    dend_33 { pt3dadd( -21.9012, -25.4077, -5.44263, 0.55 ) }
    dend_33 { pt3dadd( -23.4485, -26.9442, -5.21779, 0.55 ) }
    dend_33 { pt3dadd( -26.388, -29.2862, -4.74202, 0.55 ) }
    dend_33 { pt3dadd( -27.5738, -30.0463, -4.49099, 0.28 ) }
    dend_33 { pt3dadd( -28.9967, -30.8029, -4.0893, 0.55 ) }
    dend_33 { pt3dadd( -30.3458, -31.3315, -3.62808, 0.55 ) }
    dend_33 { pt3dadd( -31.1265, -31.5579, -3.36986, 0.55 ) }
    dend_33 { pt3dadd( -32.5205, -31.8254, -2.94544, 0.55 ) }
    dend_33 { pt3dadd( -33.8406, -32.0097, -2.74248, 0.28 ) }
    dend_33 { pt3dadd( -34.266, -32.0345, -2.70063, 0.28 ) }
    dend_33 { pt3dadd( -35.7555, -32.0673, -2.62841, 0.83 ) }
    dend_33 { pt3dadd( -37.8956, -32.1409, -2.85525, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 77/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.28182, -12.6823, -0.0935245, 1.11 ) }
    dend_20 { pt3dadd( -4.85739, -11.9152, 1.15609, 1.11 ) }
    dend_20 { pt3dadd( -5.98628, -11.579, 1.70381, 0.83 ) }
    dend_20 { pt3dadd( -7.97042, -10.988, 2.66648, 1.38 ) }
    dend_20 { pt3dadd( -11.8382, -9.83607, 4.54302, 0.83 ) }
    dend_20 { pt3dadd( -13.1774, -9.43721, 5.19277, 0.83 ) }
    dend_20 { pt3dadd( -15.6217, -8.70922, 6.37868, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.28182, -12.6823, -0.0935245, 1.11 ) }
    dend_15 { pt3dadd( -2.02953, -14.8737, -0.290452, 1.11 ) }
    dend_15 { pt3dadd( -1.54318, -18.7899, -0.723245, 1.11 ) }
    dend_15 { pt3dadd( -1.00674, -23.4385, -1.2594, 1.11 ) }
    dend_15 { pt3dadd( -0.430294, -28.4338, -1.83554, 1.11 ) }
    dend_15 { pt3dadd( -0.0524459, -31.7081, -2.21318, 1.11 ) }
    dend_15 { pt3dadd( 0.365384, -35.3289, -2.63079, 1.11 ) }
    dend_15 { pt3dadd( 0.597101, -37.3384, -2.87995, 1.11 ) }
    dend_15 { pt3dadd( 1.11758, -41.624, -3.48217, 1.38 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 13.6513, -7.40545, -1.85617, 0.55 ) }
    dend_9 { pt3dadd( 15.837, -6.90613, 0.196829, 0.55 ) }
    dend_9 { pt3dadd( 18.7841, -6.48465, 3.16887, 0.55 ) }
    dend_9 { pt3dadd( 21.3678, -6.3517, 5.64076, 0.83 ) }
    dend_9 { pt3dadd( 22.8364, -6.34831, 6.93864, 0.83 ) }
    dend_9 { pt3dadd( 25.2684, -6.36028, 8.98969, 0.83 ) }
    dend_9 { pt3dadd( 27.8332, -6.29477, 11.1832, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( 29.4497, -6.18845, 12.7366, 0.55 ) }
    dend_9 { pt3dadd( 32.3629, -5.47993, 15.1245, 0.83 ) }
    dend_9 { pt3dadd( 33.1115, -4.51326, 16.0858, 0.83 ) }
    dend_9 { pt3dadd( 33.6197, -2.83853, 17.1249, 0.28 ) }
    dend_9 { pt3dadd( 34.1176, -0.942884, 18.064, 0.83 ) }
    dend_9 { pt3dadd( 34.6956, 0.841291, 18.8801, 0.55 ) }
    dend_9 { pt3dadd( 35.0954, 1.83246, 19.3456, 0.55 ) }
    dend_9 { pt3dadd( 36.4511, 5.03671, 20.7882, 0.55 ) }
    dend_9 { pt3dadd( 37.964, 8.20894, 22.0418, 0.55 ) }
    dend_9 { pt3dadd( 38.7819, 9.61923, 22.4586, 0.55 ) }
    dend_9 { pt3dadd( 40.1838, 11.7603, 23.0211, 0.55 ) }
    dend_9 { pt3dadd( 41.4582, 13.648, 23.4501, 0.55 ) }
    dend_9 { pt3dadd( 42.9569, 15.721, 23.8524, 0.55 ) }
    dend_9 { pt3dadd( 44.2195, 17.2861, 24.0837, 0.55 ) }
    dend_9 { pt3dadd( 45.65, 19.0793, 24.3093, 0.55 ) }
    dend_9 { pt3dadd( 48.0547, 22.2971, 24.7165, 0.55 ) }
    dend_9 { pt3dadd( 49.3897, 24.1858, 24.9185, 0.55 ) }
    dend_9 { pt3dadd( 50.2826, 25.4784, 25.1082, 0.55 ) }
    dend_9 { pt3dadd( 51.717, 27.3314, 25.6873, 0.55 ) }
    dend_9 { pt3dadd( 58.6468, 35.2313, 29.7508, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 13.6513, -7.40545, -1.85617, 0.55 ) }
    dend_2 { pt3dadd( 14.5528, -8.94793, -1.79257, 0.55 ) }
    dend_2 { pt3dadd( 15.5186, -10.4519, -1.67481, 0.55 ) }
    dend_2 { pt3dadd( 16.6973, -12.3565, -1.42839, 0.55 ) }
    dend_2 { pt3dadd( 18.5881, -15.5346, -0.981177, 0.55 ) }
    dend_2 { pt3dadd( 19.6942, -17.3637, -0.717912, 0.55 ) }
    dend_2 { pt3dadd( 21.6934, -20.7137, -0.127554, 0.55 ) }
    dend_2 { pt3dadd( 22.7918, -22.66, 0.3083, 0.55 ) }
    dend_2 { pt3dadd( 24.1323, -25.2417, 1.02287, 0.55 ) }
    dend_2 { pt3dadd( 25.1258, -27.1887, 1.60943, 0.55 ) }
    dend_2 { pt3dadd( 26.0971, -29.1495, 2.264, 0.28 ) }
    dend_2 { pt3dadd( 27.3157, -31.6585, 3.08121, 0.83 ) }
    dend_2 { pt3dadd( 28.469, -34.3353, 4.0273, 0.83 ) }
    dend_2 { pt3dadd( 29.4685, -36.7893, 4.94521, 1.11 ) }
    dend_2 { pt3dadd( 30.4573, -39.0552, 5.80255, 0.83 ) }
    dend_2 { pt3dadd( 32.0459, -42.7545, 7.25632, 0.83 ) }
    dend_2 { pt3dadd( 33.1559, -45.4244, 8.29774, 0.83 ) }
    dend_2 { pt3dadd( 34.7046, -48.9897, 9.60949, 0.55 ) }
    dend_2 { pt3dadd( 35.5801, -50.9186, 10.3381, 0.55 ) }
    dend_2 { pt3dadd( 36.8364, -53.5172, 11.3939, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 40/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 68.6317, 13.8542, 15.2752, 0.55 ) }
    dend_63 { pt3dadd( 75.0629, 17.2225, 24.0901, 0.55 ) }
    dend_63 { pt3dadd( 80.9492, 22.1159, 32.6049, 0.55 ) }
    dend_63 { pt3dadd( 87.5423, 26.0086, 41.0889, 0.55 ) }
    dend_63 { pt3dadd( 95.1183, 29.6002, 48.8488, 0.55 ) }
    dend_63 { pt3dadd( 101.733, 31.7472, 57.8945, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 46/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 68.6317, 13.8542, 15.2752, 0.55 ) }
    dend_60 { pt3dadd( 73.2108, 16.9711, 21.6998, 0.55 ) }
    dend_60 { pt3dadd( 77.1701, 19.1943, 28.8549, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 44.1156, -107.394, -15.5608, 0.28 ) }
    dend_55 { pt3dadd( 45.3005, -109.383, -15.2946, 0.28 ) }
    dend_55 { pt3dadd( 46.1017, -110.692, -15.1765, 0.28 ) }
    dend_55 { pt3dadd( 46.9694, -112.089, -15.0357, 0.83 ) }
    dend_55 { pt3dadd( 47.7646, -113.384, -14.8989, 0.28 ) }
    dend_55 { pt3dadd( 48.3898, -114.438, -14.7974, 0.55 ) }
    dend_55 { pt3dadd( 49.7353, -116.707, -14.6047, 0.28 ) }
    dend_55 { pt3dadd( 49.9462, -117.049, -14.5824, 0.55 ) }
    dend_55 { pt3dadd( 50.6339, -118.304, -14.7182, 0.28 ) }
    dend_55 { pt3dadd( 50.8232, -118.696, -14.8196, 0.55 ) }
    dend_55 { pt3dadd( 51.6146, -120.589, -15.3722, 0.28 ) }
    dend_55 { pt3dadd( 51.8523, -121.305, -15.6028, 0.28 ) }
    dend_55 { pt3dadd( 52.0617, -122.044, -15.7965, 0.55 ) }
    dend_55 { pt3dadd( 53.0174, -125.904, -16.6794, 0.28 ) }
    dend_55 { pt3dadd( 53.2992, -127.174, -16.9451, 0.28 ) }
    dend_55 { pt3dadd( 53.6717, -129.184, -17.3907, 0.83 ) }
    dend_55 { pt3dadd( 54.1458, -132.787, -18.1776, 0.28 ) }
    dend_55 { pt3dadd( 54.4258, -135.409, -18.7269, 0.55 ) }
    dend_55 { pt3dadd( 54.5393, -136.709, -18.9672, 0.55 ) }
    dend_55 { pt3dadd( 54.583, -137.196, -19.0213, 0.55 ) }
    dend_55 { pt3dadd( 54.7645, -140.027, -19.5259, 0.28 ) }
    dend_55 { pt3dadd( 54.7756, -140.619, -19.7062, 0.55 ) }
    dend_55 { pt3dadd( 54.8098, -142.723, -20.6591, 0.28 ) }
    dend_55 { pt3dadd( 54.8147, -142.986, -20.8204, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 73/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 44.1156, -107.394, -15.5608, 0.28 ) }
    dend_54 { pt3dadd( 45.6609, -109.081, -22.3835, 0.28 ) }
    dend_54 { pt3dadd( 45.9803, -109.43, -23.7935, 0.28 ) }
    dend_54 { pt3dadd( 46.3602, -109.845, -25.4708, 0.55 ) }
    dend_54 { pt3dadd( 47.5487, -111.142, -30.7182, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 5.71198, -33.5751, -3.33629, 0.83 ) }
    dend_47 { pt3dadd( 6.80819, -37.4235, -3.20211, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.71198, -33.5751, -3.33629, 0.83 ) }
    dend_46 { pt3dadd( 8.00898, -33.5827, -5.39114, 0.83 ) }
    dend_46 { pt3dadd( 9.72491, -33.4887, -6.86692, 0.83 ) }
    dend_46 { pt3dadd( 12.7895, -33.3295, -9.18381, 1.11 ) }
    dend_46 { pt3dadd( 16.7949, -33.1308, -12.8195, 0.83 ) }
    dend_46 { pt3dadd( 18.8883, -33.1311, -14.8385, 0.83 ) }
    dend_46 { pt3dadd( 20.9133, -33.1354, -16.8779, 0.83 ) }
    dend_46 { pt3dadd( 22.484, -33.2104, -18.7259, 0.55 ) }
    dend_46 { pt3dadd( 24.1891, -33.4198, -20.8627, 0.83 ) }
    dend_46 { pt3dadd( 28.1825, -33.9163, -25.8247, 0.55 ) }
    dend_46 { pt3dadd( 29.7645, -33.9495, -27.5909, 0.55 ) }
    dend_46 { pt3dadd( 32.2217, -33.9694, -30.3417, 0.55 ) }
    dend_46 { pt3dadd( 33.7107, -34.0188, -32.0276, 0.55 ) }
    dend_46 { pt3dadd( 35.4517, -34.1167, -33.9724, 0.83 ) }
    dend_46 { pt3dadd( 37.4645, -34.166, -36.0971, 0.83 ) }
    dend_46 { pt3dadd( 39.0398, -34.1902, -37.477, 0.55 ) }
    dend_46 { pt3dadd( 41.0362, -34.1743, -39.2448, 0.55 ) }
    dend_46 { pt3dadd( 43.0937, -34.2292, -40.9646, 0.55 ) }
    dend_46 { pt3dadd( 44.1563, -34.2413, -41.8117, 0.83 ) }
    dend_46 { pt3dadd( 45.6911, -34.2938, -43.1755, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_46 { pt3dadd( 46.9017, -34.4252, -44.4965, 0.83 ) }
    dend_46 { pt3dadd( 47.8011, -34.5326, -45.5609, 0.28 ) }
    dend_46 { pt3dadd( 48.8403, -34.6509, -46.876, 0.83 ) }
    dend_46 { pt3dadd( 50.0267, -34.8099, -48.6412, 0.28 ) }
    dend_46 { pt3dadd( 51.2826, -34.9829, -50.7417, 0.28 ) }
    dend_46 { pt3dadd( 52.8376, -35.1832, -53.492, 1.11 ) }
    dend_46 { pt3dadd( 54.291, -35.4145, -56.2101, 0.28 ) }
    dend_46 { pt3dadd( 54.8925, -35.5307, -57.5094, 0.83 ) }
    dend_46 { pt3dadd( 57.2585, -35.8782, -62.6904, 0.28 ) }
    dend_46 { pt3dadd( 57.555, -35.9253, -63.3835, 0.83 ) }
    dend_46 { pt3dadd( 58.5125, -36.0371, -65.3435, 0.28 ) }
    dend_46 { pt3dadd( 59.9474, -36.2713, -68.0811, 0.55 ) }
    dend_46 { pt3dadd( 62.0888, -36.707, -71.9081, 0.83 ) }
    dend_46 { pt3dadd( 64.2436, -37.167, -75.2308, 0.28 ) }
    dend_46 { pt3dadd( 66.7991, -37.8116, -78.9457, 0.55 ) }
    dend_46 { pt3dadd( 68.8619, -38.3282, -81.8788, 0.28 ) }
    dend_46 { pt3dadd( 70.5971, -38.8088, -84.1376, 0.83 ) }
    dend_46 { pt3dadd( 71.7285, -39.1298, -85.5396, 0.28 ) }
    dend_46 { pt3dadd( 72.8195, -39.4619, -86.7776, 0.83 ) }
    dend_46 { pt3dadd( 76.2371, -40.5707, -90.3666, 0.28 ) }
    dend_46 { pt3dadd( 77.3596, -40.8946, -91.5035, 0.28 ) }
    dend_46 { pt3dadd( 78.8932, -41.3411, -93.2937, 0.83 ) }
    dend_46 { pt3dadd( 82.5743, -42.1432, -97.4766, 0.28 ) }
    dend_46 { pt3dadd( 84.4955, -42.5555, -99.7789, 0.28 ) }
    dend_46 { pt3dadd( 86.3522, -43.0278, -102.013, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -21.3069, -31.1396, -8.20589, 0.55 ) }
    dend_42 { pt3dadd( -23.5677, -31.3113, -8.91211, 0.55 ) }
    dend_42 { pt3dadd( -26.2565, -31.3898, -9.75744, 0.83 ) }
    dend_42 { pt3dadd( -29.0077, -31.403, -10.5851, 0.28 ) }
    dend_42 { pt3dadd( -31.35, -31.4392, -11.2538, 0.55 ) }
    dend_42 { pt3dadd( -33.6712, -31.5099, -11.9348, 0.28 ) }
    dend_42 { pt3dadd( -34.4375, -31.5381, -12.1597, 0.55 ) }
    dend_42 { pt3dadd( -35.6284, -31.6183, -12.5376, 0.55 ) }
    dend_42 { pt3dadd( -37.5413, -31.7846, -13.0937, 0.55 ) }
    dend_42 { pt3dadd( -38.7083, -31.9, -13.3592, 0.55 ) }
    dend_42 { pt3dadd( -41.4204, -32.2229, -13.9366, 0.55 ) }
    dend_42 { pt3dadd( -42.5118, -32.4318, -14.1532, 0.55 ) }
    dend_42 { pt3dadd( -44.9139, -33.0894, -14.577, 0.55 ) }
    dend_42 { pt3dadd( -48.4617, -34.2667, -15.1216, 1.11 ) }
    dend_42 { pt3dadd( -50.4668, -35.0378, -15.3742, 0.28 ) }
    dend_42 { pt3dadd( -51.2045, -35.3292, -15.4565, 0.55 ) }
    dend_42 { pt3dadd( -52.6481, -35.8915, -15.5766, 0.28 ) }
    dend_42 { pt3dadd( -54.6865, -36.6087, -15.7523, 0.83 ) }
    dend_42 { pt3dadd( -56.5894, -37.1053, -15.8929, 0.55 ) }
    dend_42 { pt3dadd( -58.3745, -37.3447, -15.9909, 0.83 ) }
    dend_42 { pt3dadd( -60.5171, -37.2116, -16.1788, 0.55 ) }
    dend_42 { pt3dadd( -62.0358, -36.9202, -16.7866, 0.28 ) }
    dend_42 { pt3dadd( -63.0112, -36.6619, -17.3864, 0.55 ) }
    dend_42 { pt3dadd( -64.002, -36.5117, -18.4752, 0.28 ) }
    dend_42 { pt3dadd( -64.4454, -36.5266, -19.1139, 0.83 ) }
    dend_42 { pt3dadd( -65.217, -36.638, -20.3243, 0.83 ) }
    dend_42 { pt3dadd( -69.0329, -37.656, -26.318, 0.28 ) }
    dend_42 { pt3dadd( -69.6056, -37.9041, -27.6577, 0.55 ) }
    dend_42 { pt3dadd( -69.3825, -37.1681, -22.1146, 0.28 ) }
    dend_42 { pt3dadd( -69.8639, -37.1129, -20.6833, 0.55 ) }
    dend_42 { pt3dadd( -71.0099, -37.1957, -18.4942, 0.28 ) }
    dend_42 { pt3dadd( -71.7625, -37.2559, -17.2664, 0.55 ) }
    dend_42 { pt3dadd( -81.7032, -37.842, -2.30262, 0.55 ) }
    dend_42 { pt3dadd( -82.6607, -37.8629, -0.907837, 0.28 ) }
    dend_42 { pt3dadd( -83.3731, -37.8586, 0.0702179, 0.55 ) }
    dend_42 { pt3dadd( -84.488, -37.8824, 1.53439, 0.28 ) }
    dend_42 { pt3dadd( -86.1916, -37.9857, 3.68674, 0.83 ) }
    dend_42 { pt3dadd( -88.1329, -38.1258, 5.72397, 0.28 ) }
    dend_42 { pt3dadd( -90.0591, -38.3586, 6.22654, 0.55 ) }
    dend_42 { pt3dadd( -93.049, -38.6934, 7.07538, 0.55 ) }
    dend_42 { pt3dadd( -94.4981, -38.8068, 7.49172, 0.83 ) }
    dend_42 { pt3dadd( -95.599, -38.8824, 7.7936, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -21.3069, -31.1396, -8.20589, 0.55 ) }
    dend_41 { pt3dadd( -21.321, -32.6189, -8.00372, 0.55 ) }
    dend_41 { pt3dadd( -21.3793, -34.6176, -7.76207, 0.83 ) }
    dend_41 { pt3dadd( -21.5443, -37.0212, -7.42448, 0.55 ) }
    dend_41 { pt3dadd( -21.8995, -39.9867, -6.95587, 0.83 ) }
    dend_41 { pt3dadd( -22.5738, -44.0478, -6.22476, 0.55 ) }
    dend_41 { pt3dadd( -22.8292, -45.2461, -5.98784, 0.28 ) }
    dend_41 { pt3dadd( -23.2311, -46.6692, -5.7163, 0.28 ) }
    dend_41 { pt3dadd( -23.7986, -48.3502, -5.38596, 0.28 ) }
    dend_41 { pt3dadd( -24.6865, -50.6098, -4.85942, 0.83 ) }
    dend_41 { pt3dadd( -25.4332, -52.2677, -4.40334, 0.28 ) }
    dend_41 { pt3dadd( -26.6289, -54.6491, -3.61682, 2.22 ) }
    dend_41 { pt3dadd( -28.1004, -57.5701, -2.71559, 0.28 ) }
    dend_41 { pt3dadd( -28.7655, -58.8913, -2.33742, 0.83 ) }
    dend_41 { pt3dadd( -29.6245, -60.6088, -1.90183, 0.28 ) }
    dend_41 { pt3dadd( -30.1735, -61.7153, -1.64568, 0.28 ) }
    dend_41 { pt3dadd( -30.5968, -62.5381, -1.48519, 0.55 ) }
    dend_41 { pt3dadd( -31.5311, -64.3578, -1.24316, 0.28 ) }
    dend_41 { pt3dadd( -31.8042, -64.8918, -1.19724, 0.55 ) }
    dend_41 { pt3dadd( -32.84, -66.939, -1.10998, 0.28 ) }
    dend_41 { pt3dadd( -33.4446, -68.4042, -1.20329, 0.55 ) }
    dend_41 { pt3dadd( -34.0801, -70.2119, -1.39407, 0.55 ) }
    dend_41 { pt3dadd( -34.9236, -72.9475, -1.74544, 0.28 ) }
    dend_41 { pt3dadd( -35.1658, -73.8004, -1.87108, 0.28 ) }
    dend_41 { pt3dadd( -35.7237, -75.8568, -2.18765, 0.83 ) }
    dend_41 { pt3dadd( -36.9719, -80.3335, -2.76619, 0.28 ) }
    dend_41 { pt3dadd( -37.3812, -81.7709, -2.91671, 0.83 ) }
    dend_41 { pt3dadd( -37.9898, -83.9013, -3.0776, 0.28 ) }
    dend_41 { pt3dadd( -38.2445, -84.7182, -3.1281, 0.55 ) }
    dend_41 { pt3dadd( -39.2521, -87.7244, -3.28301, 0.28 ) }
    dend_41 { pt3dadd( -39.8511, -89.8406, -3.47528, 0.55 ) }
    dend_41 { pt3dadd( -40.8417, -92.6913, -3.67547, 0.28 ) }
    dend_41 { pt3dadd( -41.026, -93.349, -3.77734, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( -41.447, -95.2395, -4.17145, 0.28 ) }
    dend_41 { pt3dadd( -41.6133, -96.1505, -4.36312, 0.55 ) }
    dend_41 { pt3dadd( -42.2978, -101.336, -5.53086, 0.28 ) }
    dend_41 { pt3dadd( -42.5875, -104.362, -6.2841, 0.55 ) }
    dend_41 { pt3dadd( -42.9187, -107.743, -7.02749, 0.28 ) }
    dend_41 { pt3dadd( -43.0093, -108.949, -7.26845, 0.55 ) }
    dend_41 { pt3dadd( -43.1848, -110.895, -7.47781, 0.28 ) }
    dend_41 { pt3dadd( -43.2882, -111.567, -7.47765, 0.55 ) }
    dend_41 { pt3dadd( -43.6884, -112.983, -7.2337, 0.28 ) }
    dend_41 { pt3dadd( -43.8479, -113.62, -7.11494, 0.55 ) }
    dend_41 { pt3dadd( -44.5861, -115.762, -6.51277, 0.28 ) }
    dend_41 { pt3dadd( -45.2957, -117.453, -6.03016, 0.55 ) }
    dend_41 { pt3dadd( -46.1033, -119.051, -5.58341, 0.28 ) }
    dend_41 { pt3dadd( -46.5517, -119.824, -5.31873, 0.55 ) }
    dend_41 { pt3dadd( -47.0885, -120.735, -4.99557, 0.28 ) }
    dend_41 { pt3dadd( -47.3714, -121.232, -4.82012, 0.55 ) }
    dend_41 { pt3dadd( -48.473, -123.104, -4.18465, 0.28 ) }
    dend_41 { pt3dadd( -49.4338, -125.031, -3.74029, 0.55 ) }
    dend_41 { pt3dadd( -50.3777, -127.257, -3.28729, 0.28 ) }
    dend_41 { pt3dadd( -50.9741, -128.725, -3.01855, 0.55 ) }
    dend_41 { pt3dadd( -51.4917, -130.139, -2.88472, 0.55 ) }
    dend_41 { pt3dadd( -51.8371, -131.15, -2.8354, 0.55 ) }
    dend_41 { pt3dadd( -52.9803, -134.807, -2.92796, 0.28 ) }
    dend_41 { pt3dadd( -54.2998, -138.772, -3.20373, 0.28 ) }
    dend_41 { pt3dadd( -55.1535, -141.026, -3.3632, 0.83 ) }
    dend_41 { pt3dadd( -57.183, -145.793, -3.64784, 0.28 ) }
    dend_41 { pt3dadd( -57.7544, -147.023, -3.7278, 0.55 ) }
    dend_41 { pt3dadd( -59.1346, -149.78, -3.90264, 0.28 ) }
    dend_41 { pt3dadd( -60.2447, -151.731, -4.01128, 1.11 ) }
    dend_41 { pt3dadd( -61.9134, -154.394, -4.10265, 0.28 ) }
    dend_41 { pt3dadd( -62.2947, -154.927, -4.02731, 0.55 ) }
    dend_41 { pt3dadd( -63.2479, -156.035, -3.58013, 0.28 ) }
    dend_41 { pt3dadd( -63.9055, -156.793, -3.20496, 0.55 ) }
    dend_41 { pt3dadd( -65.0302, -158.06, -2.46685, 0.28 ) }
    dend_41 { pt3dadd( -65.7536, -158.927, -2.00928, 0.55 ) }
    dend_41 { pt3dadd( -67.8138, -161.498, -0.79622, 0.28 ) }
    dend_41 { pt3dadd( -68.3243, -162.225, -0.475534, 0.55 ) }
    dend_41 { pt3dadd( -69.0891, -163.475, 0.0678189, 0.28 ) }
    dend_41 { pt3dadd( -69.6262, -164.524, 0.542665, 0.55 ) }
    dend_41 { pt3dadd( -71.0341, -167.791, 2.01212, 0.28 ) }
    dend_41 { pt3dadd( -71.1852, -168.356, 2.2254, 0.83 ) }
    dend_41 { pt3dadd( -71.8354, -171.855, 3.35981, 0.28 ) }
    dend_41 { pt3dadd( -72.0152, -173.073, 3.74392, 0.55 ) }
    dend_41 { pt3dadd( -72.3148, -175.414, 4.46852, 0.28 ) }
    dend_41 { pt3dadd( -72.4694, -176.885, 4.88413, 0.55 ) }
    dend_41 { pt3dadd( -73.078, -183.15, 6.424, 0.28 ) }
    dend_41 { pt3dadd( -73.3037, -185.291, 6.81782, 0.83 ) }
    dend_41 { pt3dadd( -73.6536, -188.212, 7.17481, 0.28 ) }
    dend_41 { pt3dadd( -73.7694, -189.063, 7.2267, 0.55 ) }
    dend_41 { pt3dadd( -74.0628, -191.229, 7.19268, 0.28 ) }
    dend_41 { pt3dadd( -74.2234, -192.305, 7.14103, 0.55 ) }
    dend_41 { pt3dadd( -74.8429, -195.726, 6.86393, 0.28 ) }
    dend_41 { pt3dadd( -74.8709, -196.021, 6.81063, 0.55 ) }
    dend_41 { pt3dadd( -74.9949, -197.86, 6.48594, 0.28 ) }
    dend_41 { pt3dadd( -75.0896, -199.518, 6.24229, 0.83 ) }
    dend_41 { pt3dadd( -75.2868, -201.956, 6.07655, 0.28 ) }
    dend_41 { pt3dadd( -75.3624, -202.621, 6.1049, 0.55 ) }
    dend_41 { pt3dadd( -76.2219, -208.393, 6.85081, 0.28 ) }
    dend_41 { pt3dadd( -76.7094, -211.623, 7.33666, 0.28 ) }
    dend_41 { pt3dadd( -76.8834, -212.691, 7.56319, 0.55 ) }
    dend_41 { pt3dadd( -77.4922, -215.346, 8.48898, 0.28 ) }
    dend_41 { pt3dadd( -77.7473, -216.07, 8.94685, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -37.8956, -32.1409, -2.85525, 0.55 ) }
    dend_37 { pt3dadd( -39.882, -32.0789, -5.13951, 0.55 ) }
    dend_37 { pt3dadd( -40.9187, -32.1156, -6.33995, 0.55 ) }
    dend_37 { pt3dadd( -42.8054, -32.2838, -8.36125, 0.55 ) }
    dend_37 { pt3dadd( -45.8284, -32.4886, -11.2624, 0.55 ) }
    dend_37 { pt3dadd( -49.8912, -32.6133, -14.8917, 0.55 ) }
    dend_37 { pt3dadd( -54.0743, -32.5575, -18.3809, 0.28 ) }
    dend_37 { pt3dadd( -56.0155, -32.4377, -20.0144, 0.28 ) }
    dend_37 { pt3dadd( -58.4485, -32.2348, -21.7654, 0.55 ) }
    dend_37 { pt3dadd( -61.3874, -31.9297, -23.3425, 0.28 ) }
    dend_37 { pt3dadd( -62.7189, -31.8241, -24.1889, 0.55 ) }
    dend_37 { pt3dadd( -64.2221, -31.757, -25.288, 0.28 ) }
    dend_37 { pt3dadd( -65.7502, -31.7344, -26.6022, 0.83 ) }
    dend_37 { pt3dadd( -68.6991, -31.7379, -29.629, 0.28 ) }
    dend_37 { pt3dadd( -69.9851, -31.8122, -31.1895, 0.55 ) }
    dend_37 { pt3dadd( -77.4686, -33.0152, -41.5982, 0.55 ) }
    dend_37 { pt3dadd( -78.1558, -33.1794, -42.6457, 0.55 ) }
    dend_37 { pt3dadd( -79.2657, -33.5255, -44.5719, 0.55 ) }
    dend_37 { pt3dadd( -80.1045, -33.8218, -46.3259, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -37.8956, -32.1409, -2.85525, 0.83 ) }
    dend_34 { pt3dadd( -38.7556, -31.5862, -2.72161, 0.83 ) }
    dend_34 { pt3dadd( -39.8772, -30.8628, -2.54733, 1.11 ) }
    dend_34 { pt3dadd( -41.216, -29.9993, -2.3393, 1.11 ) }
    dend_34 { pt3dadd( -42.9173, -28.9019, -2.07493, 0.28 ) }
    dend_34 { pt3dadd( -44.4224, -27.9311, -1.84107, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.6217, -8.70922, 6.37868, 0.83 ) }
    dend_24 { pt3dadd( -15.6993, -6.88548, 7.08257, 0.83 ) }
    dend_24 { pt3dadd( -15.8735, -5.27845, 7.67206, 0.83 ) }
    dend_24 { pt3dadd( -16.5136, -2.20854, 8.84457, 0.83 ) }
    dend_24 { pt3dadd( -17.2036, 0.341561, 9.9918, 0.83 ) }
    dend_24 { pt3dadd( -17.9884, 2.69072, 11.1564, 0.83 ) }
    dend_24 { pt3dadd( -18.5985, 4.27629, 11.9722, 0.83 ) }
    dend_24 { pt3dadd( -19.3501, 5.61308, 12.7578, 0.83 ) }
    dend_24 { pt3dadd( -20.7824, 7.46857, 14.0094, 0.83 ) }
    dend_24 { pt3dadd( -22.3074, 8.92856, 15.1176, 0.83 ) }
    dend_24 { pt3dadd( -23.102, 9.58533, 15.6125, 0.83 ) }
    dend_24 { pt3dadd( -24.5581, 10.7423, 16.5417, 0.83 ) }
    dend_24 { pt3dadd( -26.1752, 12.1231, 17.6133, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_24 { pt3dadd( -26.9507, 12.8183, 18.1133, 0.83 ) }
    dend_24 { pt3dadd( -28.1411, 13.9676, 18.8185, 0.83 ) }
    dend_24 { pt3dadd( -28.8666, 14.7013, 19.1862, 0.28 ) }
    dend_24 { pt3dadd( -29.9742, 15.9518, 19.8013, 0.55 ) }
    dend_24 { pt3dadd( -30.8817, 17.0752, 20.3608, 0.28 ) }
    dend_24 { pt3dadd( -31.823, 18.7141, 21.0483, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 6/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -15.6217, -8.70922, 6.37868, 0.83 ) }
    dend_21 { pt3dadd( -17.6546, -8.9961, 5.38303, 0.83 ) }
    dend_21 { pt3dadd( -20.1301, -9.44819, 4.37528, 0.83 ) }
    dend_21 { pt3dadd( -21.8782, -9.97232, 3.4888, 0.83 ) }
    dend_21 { pt3dadd( -25.4639, -11.4059, 1.51359, 0.83 ) }
    dend_21 { pt3dadd( -28.9601, -12.9115, -0.437048, 0.83 ) }
    dend_21 { pt3dadd( -30.4581, -13.5565, -1.27281, 0.83 ) }
    dend_21 { pt3dadd( -32.9307, -14.5784, -2.8075, 0.83 ) }
    dend_21 { pt3dadd( -36.9065, -16.142, -5.44287, 0.55 ) }
    dend_21 { pt3dadd( -38.0234, -16.7614, -6.26575, 0.55 ) }
    dend_21 { pt3dadd( -39.1644, -17.8705, -7.16361, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.11758, -41.624, -3.48217, 0.83 ) }
    dend_17 { pt3dadd( 1.51142, -44.0055, -3.56017, 0.83 ) }
    dend_17 { pt3dadd( 1.9187, -46.5685, -3.61459, 1.11 ) }
    dend_17 { pt3dadd( 2.15536, -48.6052, -3.62766, 0.83 ) }
    dend_17 { pt3dadd( 2.3321, -50.0512, -3.64783, 0.55 ) }
    dend_17 { pt3dadd( 2.437, -50.8122, -3.66868, 0.83 ) }
    dend_17 { pt3dadd( 2.79852, -53.771, -3.74864, 0.83 ) }
    dend_17 { pt3dadd( 2.99507, -55.3778, -3.76278, 0.83 ) }
    dend_17 { pt3dadd( 3.31445, -58.2809, -3.76866, 0.83 ) }
    dend_17 { pt3dadd( 3.47898, -60.0939, -3.741, 0.55 ) }
    dend_17 { pt3dadd( 3.65492, -62.532, -3.71104, 0.55 ) }
    dend_17 { pt3dadd( 3.81622, -65.0566, -3.67463, 0.55 ) }
    dend_17 { pt3dadd( 3.94752, -68.1394, -3.62309, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.11758, -41.624, -3.48217, 0.83 ) }
    dend_16 { pt3dadd( 2.4015, -43.5696, -4.90082, 0.83 ) }
    dend_16 { pt3dadd( 3.05629, -44.9788, -5.91234, 0.83 ) }
    dend_16 { pt3dadd( 3.63634, -46.5733, -6.97247, 0.55 ) }
    dend_16 { pt3dadd( 4.05034, -47.9508, -7.83709, 0.83 ) }
    dend_16 { pt3dadd( 4.46734, -49.825, -8.89799, 0.83 ) }
    dend_16 { pt3dadd( 4.78726, -51.5254, -9.76864, 0.83 ) }
    dend_16 { pt3dadd( 4.98788, -53.8016, -10.9022, 0.55 ) }
    dend_16 { pt3dadd( 5.11533, -55.4788, -11.6472, 0.55 ) }
    dend_16 { pt3dadd( 5.11149, -55.9641, -11.8678, 0.83 ) }
    dend_16 { pt3dadd( 4.96489, -57.3934, -12.4368, 0.55 ) }
    dend_16 { pt3dadd( 4.802, -58.2969, -12.7722, 0.55 ) }
    dend_16 { pt3dadd( 4.49281, -59.8714, -13.3817, 1.11 ) }
    dend_16 { pt3dadd( 4.21719, -61.2576, -13.9692, 1.11 ) }
    dend_16 { pt3dadd( 3.62306, -63.8172, -15.1639, 0.55 ) }
    dend_16 { pt3dadd( 3.30361, -65.29, -15.939, 1.11 ) }
    dend_16 { pt3dadd( 2.89245, -67.3407, -17.1129, 0.55 ) }
    dend_16 { pt3dadd( 2.82808, -67.6306, -17.2716, 0.83 ) }
    dend_16 { pt3dadd( 2.29211, -70.0306, -18.4956, 0.28 ) }
    dend_16 { pt3dadd( 2.23452, -70.3247, -18.6499, 0.55 ) }
    dend_16 { pt3dadd( 2.11439, -71.7297, -19.3669, 0.28 ) }
    dend_16 { pt3dadd( 2.10739, -72.5062, -19.7387, 0.83 ) }
    dend_16 { pt3dadd( 2.19544, -73.9653, -20.3401, 0.55 ) }
    dend_16 { pt3dadd( 2.28447, -75.2024, -20.7471, 0.83 ) }
    dend_16 { pt3dadd( 2.42642, -76.8372, -21.1704, 0.28 ) }
    dend_16 { pt3dadd( 2.51673, -78.2046, -21.5037, 0.83 ) }
    dend_16 { pt3dadd( 2.73535, -80.4525, -21.972, 0.28 ) }
    dend_16 { pt3dadd( 3.02594, -82.4277, -22.4075, 0.83 ) }
    dend_16 { pt3dadd( 3.31814, -83.7423, -22.6792, 0.28 ) }
    dend_16 { pt3dadd( 3.56223, -84.628, -22.8374, 0.28 ) }
    dend_16 { pt3dadd( 3.97818, -85.9577, -23.0939, 0.83 ) }
    dend_16 { pt3dadd( 4.7228, -88.2072, -23.6389, 0.28 ) }
    dend_16 { pt3dadd( 5.39275, -90.0213, -24.1821, 0.55 ) }
    dend_16 { pt3dadd( 6.04769, -91.5503, -24.6216, 0.28 ) }
    dend_16 { pt3dadd( 6.89882, -93.3866, -25.1493, 0.28 ) }
    dend_16 { pt3dadd( 7.49665, -94.6804, -25.504, 0.55 ) }
    dend_16 { pt3dadd( 7.91325, -95.6217, -25.7493, 0.28 ) }
    dend_16 { pt3dadd( 8.29778, -96.6143, -25.9869, 0.55 ) }
    dend_16 { pt3dadd( 8.93832, -98.2819, -26.3299, 0.28 ) }
    dend_16 { pt3dadd( 9.37333, -99.5159, -26.5521, 1.38 ) }
    dend_16 { pt3dadd( 10.1118, -102.201, -27.1349, 0.28 ) }
    dend_16 { pt3dadd( 10.2918, -103.04, -27.3435, 0.55 ) }
    dend_16 { pt3dadd( 10.5517, -104.594, -27.7828, 0.28 ) }
    dend_16 { pt3dadd( 10.6949, -106.059, -28.2681, 0.28 ) }
    dend_16 { pt3dadd( 10.7825, -107.891, -28.9263, 1.11 ) }
    dend_16 { pt3dadd( 10.9863, -111.6, -30.1503, 0.28 ) }
    dend_16 { pt3dadd( 11.1256, -114.004, -30.9009, 0.28 ) }
    dend_16 { pt3dadd( 11.2285, -114.967, -31.1373, 0.83 ) }
    dend_16 { pt3dadd( 11.5214, -117.926, -31.8717, 0.28 ) }
    dend_16 { pt3dadd( 11.6583, -119.133, -32.1475, 0.55 ) }
    dend_16 { pt3dadd( 12.1507, -122.14, -32.7576, 0.28 ) }
    dend_16 { pt3dadd( 12.2548, -122.623, -32.8258, 0.83 ) }
    dend_16 { pt3dadd( 12.9027, -125.974, -33.326, 0.28 ) }
    dend_16 { pt3dadd( 13.6131, -129.629, -33.9394, 0.55 ) }
    dend_16 { pt3dadd( 13.8897, -130.681, -34.023, 0.28 ) }
    dend_16 { pt3dadd( 14.0466, -131.196, -34.061, 0.55 ) }
    dend_16 { pt3dadd( 14.43, -132.336, -34.1297, 0.55 ) }
    dend_16 { pt3dadd( 14.9157, -133.609, -34.1703, 0.55 ) }
    dend_16 { pt3dadd( 15.7072, -135.393, -34.1812, 0.55 ) }
    dend_16 { pt3dadd( 17.4326, -138.87, -33.9865, 0.28 ) }
    dend_16 { pt3dadd( 18.3318, -140.639, -33.9176, 0.28 ) }
    dend_16 { pt3dadd( 18.5774, -141.106, -33.9016, 0.83 ) }
    dend_16 { pt3dadd( 19.5435, -142.788, -33.8796, 0.28 ) }
    dend_16 { pt3dadd( 19.9987, -143.523, -33.9044, 0.55 ) }
    dend_16 { pt3dadd( 21.0841, -145.472, -34.1211, 0.28 ) }
    dend_16 { pt3dadd( 21.1719, -145.679, -34.1878, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 58.6468, 35.2313, 29.7508, 0.55 ) }
    dend_13 { pt3dadd( 67.1695, 43.6656, 35.0711, 0.55 ) }
    dend_13 { pt3dadd( 74.6715, 52.0843, 41.7731, 0.55 ) }
    dend_13 { pt3dadd( 82.6991, 59.0872, 49.3237, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( 89.8681, 64.3353, 58.8274, 0.55 ) }
    dend_13 { pt3dadd( 99.0527, 68.8103, 66.8573, 0.55 ) }
    dend_13 { pt3dadd( 108.034, 74.8837, 74.0797, 0.55 ) }
    dend_13 { pt3dadd( 115.699, 82.2578, 81.6784, 0.55 ) }
    dend_13 { pt3dadd( 123.163, 90.3484, 88.7842, 0.55 ) }
    dend_13 { pt3dadd( 131.714, 98.5479, 94.3901, 0.55 ) }
    dend_13 { pt3dadd( 140.297, 107.558, 98.6401, 0.55 ) }
    dend_13 { pt3dadd( 147.954, 115.921, 105.229, 0.55 ) }
    dend_13 { pt3dadd( 154.704, 125.524, 111.232, 0.55 ) }
    dend_13 { pt3dadd( 159.614, 135.617, 118.22, 0.55 ) }
    dend_13 { pt3dadd( 164.654, 144.948, 126.033, 0.55 ) }
    dend_13 { pt3dadd( 168.719, 153.49, 135.148, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 12/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 58.6468, 35.2313, 29.7508, 0.55 ) }
    dend_10 { pt3dadd( 66.7878, 42.7214, 37.5148, 0.55 ) }
    dend_10 { pt3dadd( 73.349, 51.0598, 45.9206, 0.55 ) }
    dend_10 { pt3dadd( 79.4474, 60.9509, 53.0135, 0.55 ) }
    dend_10 { pt3dadd( 86.4913, 71.2966, 58.4818, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 36.8364, -53.5172, 11.3939, 0.55 ) }
    dend_6 { pt3dadd( 37.6976, -54.4399, 11.2433, 0.55 ) }
    dend_6 { pt3dadd( 38.146, -54.9232, 11.1505, 0.55 ) }
    dend_6 { pt3dadd( 39.2937, -56.1922, 10.8979, 0.55 ) }
    dend_6 { pt3dadd( 41.1631, -58.181, 10.4869, 0.55 ) }
    dend_6 { pt3dadd( 42.071, -59.1195, 10.2987, 0.55 ) }
    dend_6 { pt3dadd( 43.2697, -60.4004, 10.0533, 0.28 ) }
    dend_6 { pt3dadd( 43.8848, -61.0918, 9.9311, 0.83 ) }
    dend_6 { pt3dadd( 44.5681, -61.8431, 9.82295, 0.83 ) }
    dend_6 { pt3dadd( 45.8236, -63.1873, 9.62823, 0.55 ) }
    dend_6 { pt3dadd( 46.9083, -64.3637, 9.46717, 0.55 ) }
    dend_6 { pt3dadd( 47.9567, -65.5656, 9.34077, 0.55 ) }
    dend_6 { pt3dadd( 48.6368, -66.3735, 9.31376, 0.28 ) }
    dend_6 { pt3dadd( 49.1679, -66.9828, 9.30256, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 36.8364, -53.5172, 11.3939, 0.55 ) }
    dend_3 { pt3dadd( 37.3719, -55.9763, 11.1212, 0.55 ) }
    dend_3 { pt3dadd( 37.9272, -58.1823, 10.9039, 0.55 ) }
    dend_3 { pt3dadd( 38.3813, -60.5761, 11.2703, 0.55 ) }
    dend_3 { pt3dadd( 38.719, -62.5344, 11.7708, 0.55 ) }
    dend_3 { pt3dadd( 39.0266, -64.6581, 12.4522, 0.28 ) }
    dend_3 { pt3dadd( 39.2163, -66.1923, 12.9792, 0.55 ) }
    dend_3 { pt3dadd( 39.342, -67.2244, 13.4447, 0.55 ) }
    dend_3 { pt3dadd( 39.9513, -73.5602, 16.6292, 0.28 ) }
    dend_3 { pt3dadd( 39.968, -73.9678, 16.8303, 0.55 ) }
    dend_3 { pt3dadd( 39.9764, -75.6131, 17.5414, 0.28 ) }
    dend_3 { pt3dadd( 40.0165, -76.5517, 17.8825, 0.55 ) }
    dend_3 { pt3dadd( 40.0799, -78.713, 18.5923, 0.28 ) }
    dend_3 { pt3dadd( 40.1282, -80.579, 19.0119, 0.28 ) }
    dend_3 { pt3dadd( 40.3046, -82.7606, 18.9791, 0.55 ) }
    dend_3 { pt3dadd( 40.4977, -85.0329, 18.8845, 0.55 ) }
    dend_3 { pt3dadd( 40.758, -87.2906, 18.6694, 0.55 ) }
    dend_3 { pt3dadd( 42.6072, -98.2734, 21.8241, 0.55 ) }
    dend_3 { pt3dadd( 45.2338, -109.299, 24.296, 0.55 ) }
    dend_3 { pt3dadd( 49.4577, -120.028, 25.6805, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 51/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 101.733, 31.7472, 57.8945, 0.55 ) }
    dend_65 { pt3dadd( 106.744, 32.9263, 64.9931, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 53/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 101.733, 31.7472, 57.8945, 0.55 ) }
    dend_64 { pt3dadd( 106.326, 37.1042, 60.209, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 55/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 77.1701, 19.1943, 28.8549, 0.55 ) }
    dend_62 { pt3dadd( 81.5965, 22.2342, 35.8084, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 77.1701, 19.1943, 28.8549, 0.55 ) }
    dend_61 { pt3dadd( 81.8327, 21.423, 36.2906, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 6.80819, -37.4235, -3.20211, 0.83 ) }
    dend_49 { pt3dadd( 8.95829, -39.4932, -4.06132, 0.83 ) }
    dend_49 { pt3dadd( 11.6239, -42.0388, -4.99341, 0.83 ) }
    dend_49 { pt3dadd( 12.8842, -43.3053, -5.46603, 0.28 ) }
    dend_49 { pt3dadd( 14.637, -45.2836, -6.14784, 0.55 ) }
    dend_49 { pt3dadd( 15.7456, -46.6071, -6.58462, 0.83 ) }
    dend_49 { pt3dadd( 17.0127, -48.176, -7.11486, 0.28 ) }
    dend_49 { pt3dadd( 17.6871, -49.0591, -7.36637, 0.55 ) }
    dend_49 { pt3dadd( 19.2895, -51.1771, -7.85972, 0.28 ) }
    dend_49 { pt3dadd( 20.5617, -52.9905, -8.25507, 1.11 ) }
    dend_49 { pt3dadd( 21.5505, -54.5396, -8.61825, 1.11 ) }
    dend_49 { pt3dadd( 22.9054, -56.7109, -9.18154, 0.28 ) }
    dend_49 { pt3dadd( 23.9943, -58.4423, -9.71834, 0.83 ) }
    dend_49 { pt3dadd( 25.1323, -60.233, -10.264, 0.28 ) }
    dend_49 { pt3dadd( 25.5899, -60.9077, -10.4641, 0.55 ) }
    dend_49 { pt3dadd( 27.2061, -63.2248, -11.1013, 0.28 ) }
    dend_49 { pt3dadd( 27.996, -64.3697, -11.3853, 0.55 ) }
    dend_49 { pt3dadd( 31.1705, -69.0139, -12.4399, 0.83 ) }
    dend_49 { pt3dadd( 33.2549, -72.0489, -13.0956, 0.28 ) }
    dend_49 { pt3dadd( 34.8389, -74.2647, -13.5215, 0.55 ) }
    dend_49 { pt3dadd( 35.9783, -75.8206, -13.7754, 0.28 ) }
    dend_49 { pt3dadd( 37.4519, -77.8008, -13.9808, 0.55 ) }
    dend_49 { pt3dadd( 38.0593, -78.6164, -14.0339, 0.55 ) }
    dend_49 { pt3dadd( 38.9681, -79.7978, -14.0498, 0.28 ) }
    dend_49 { pt3dadd( 39.6606, -80.7217, -14.0657, 0.55 ) }
    dend_49 { pt3dadd( 41.2605, -83.0853, -14.2205, 0.28 ) }
    dend_49 { pt3dadd( 42.7301, -85.4076, -14.5026, 0.55 ) }
    dend_49 { pt3dadd( 43.4443, -86.6624, -14.6496, 0.28 ) }
    dend_49 { pt3dadd( 43.8691, -87.4602, -14.7409, 0.83 ) }
    dend_49 { pt3dadd( 44.6629, -89.1996, -14.9706, 0.83 ) }
    dend_49 { pt3dadd( 45.5085, -91.4837, -15.2541, 0.28 ) }
    dend_49 { pt3dadd( 45.6321, -91.9017, -15.3031, 0.55 ) }
    dend_49 { pt3dadd( 46.1377, -93.9962, -15.5798, 0.28 ) }
    dend_49 { pt3dadd( 46.3213, -94.7863, -15.67, 0.55 ) }
    dend_49 { pt3dadd( 46.9396, -97.2298, -15.9225, 0.28 ) }
    dend_49 { pt3dadd( 47.4978, -99.0748, -16.092, 0.55 ) }
    dend_49 { pt3dadd( 47.9937, -100.599, -16.2738, 0.28 ) }
    dend_49 { pt3dadd( 48.9045, -103.159, -16.637, 1.38 ) }
    dend_49 { pt3dadd( 49.9226, -105.71, -16.9272, 0.28 ) }
    dend_49 { pt3dadd( 50.2778, -106.547, -16.9995, 0.55 ) }
    dend_49 { pt3dadd( 51.3525, -108.978, -17.1325, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_49 { pt3dadd( 53.1355, -112.949, -17.2909, 0.55 ) }
    dend_49 { pt3dadd( 54.3908, -115.766, -17.4413, 0.55 ) }
    dend_49 { pt3dadd( 56.5688, -120.664, -17.7419, 0.28 ) }
    dend_49 { pt3dadd( 57.4093, -122.499, -17.7933, 1.11 ) }
    dend_49 { pt3dadd( 58.2545, -124.296, -17.7848, 0.28 ) }
    dend_49 { pt3dadd( 58.7097, -125.191, -17.7477, 0.83 ) }
    dend_49 { pt3dadd( 60.0007, -127.44, -17.5144, 0.28 ) }
    dend_49 { pt3dadd( 60.1625, -127.706, -17.4933, 0.55 ) }
    dend_49 { pt3dadd( 62.513, -131.28, -17.4567, 0.28 ) }
    dend_49 { pt3dadd( 62.8918, -131.787, -17.4459, 0.83 ) }
    dend_49 { pt3dadd( 63.9508, -133.144, -17.4327, 0.28 ) }
    dend_49 { pt3dadd( 64.3184, -133.645, -17.4461, 0.83 ) }
    dend_49 { pt3dadd( 65.1, -134.722, -17.4491, 0.28 ) }
    dend_49 { pt3dadd( 66.5924, -136.827, -17.5257, 0.83 ) }
    dend_49 { pt3dadd( 69.7757, -141.357, -17.9187, 0.28 ) }
    dend_49 { pt3dadd( 71.1878, -143.384, -18.1494, 0.83 ) }
    dend_49 { pt3dadd( 72.8476, -145.767, -18.4722, 0.28 ) }
    dend_49 { pt3dadd( 74.3688, -147.85, -18.8172, 0.55 ) }
    dend_49 { pt3dadd( 75.3587, -149.116, -19.033, 0.28 ) }
    dend_49 { pt3dadd( 77.3446, -151.536, -19.4372, 1.11 ) }
    dend_49 { pt3dadd( 79.0059, -153.486, -19.7749, 0.28 ) }
    dend_49 { pt3dadd( 80.098, -154.615, -19.9915, 0.55 ) }
    dend_49 { pt3dadd( 81.7443, -156.16, -20.3607, 0.55 ) }
    dend_49 { pt3dadd( 83.3624, -157.609, -20.7974, 0.55 ) }
    dend_49 { pt3dadd( 84.8257, -158.845, -21.2124, 0.28 ) }
    dend_49 { pt3dadd( 85.0587, -159.033, -21.2786, 0.83 ) }
    dend_49 { pt3dadd( 88.4918, -161.658, -22.2451, 0.28 ) }
    dend_49 { pt3dadd( 90.326, -163.039, -22.8705, 0.55 ) }
    dend_49 { pt3dadd( 92.5943, -164.725, -23.7743, 0.28 ) }
    dend_49 { pt3dadd( 94.4467, -166.107, -24.6053, 0.83 ) }
    dend_49 { pt3dadd( 96.1895, -167.383, -25.4195, 0.28 ) }
    dend_49 { pt3dadd( 96.9193, -167.926, -25.757, 0.55 ) }
    dend_49 { pt3dadd( 99.78, -170.095, -27.0355, 0.28 ) }
    dend_49 { pt3dadd( 101.321, -171.191, -27.6996, 1.11 ) }
    dend_49 { pt3dadd( 107.917, -180.195, -30.3885, 1.11 ) }
    dend_49 { pt3dadd( 113.495, -190.251, -31.6098, 1.11 ) }
    dend_49 { pt3dadd( 119.535, -200.092, -31.8829, 1.11 ) }
    dend_49 { pt3dadd( 125.838, -209.735, -32.4256, 1.11 ) }
    dend_49 { pt3dadd( 132.182, -219.34, -31.7234, 1.11 ) }
    dend_49 { pt3dadd( 140.142, -227.46, -30.5879, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 6.80819, -37.4235, -3.20211, 0.28 ) }
    dend_48 { pt3dadd( 6.88475, -38.3493, -3.02537, 0.28 ) }
    dend_48 { pt3dadd( 6.95255, -39.0322, -2.90837, 0.83 ) }
    dend_48 { pt3dadd( 7.0273, -39.9187, -2.82402, 0.28 ) }
    dend_48 { pt3dadd( 7.09383, -41.1115, -2.74795, 0.83 ) }
    dend_48 { pt3dadd( 7.09444, -42.8193, -2.70122, 0.55 ) }
    dend_48 { pt3dadd( 7.07156, -43.5386, -2.68973, 0.28 ) }
    dend_48 { pt3dadd( 7.07122, -44.4347, -2.65785, 0.83 ) }
    dend_48 { pt3dadd( 7.07055, -45.9703, -2.59724, 0.28 ) }
    dend_48 { pt3dadd( 7.12194, -47.5366, -2.41101, 0.83 ) }
    dend_48 { pt3dadd( 7.225, -49.4819, -2.01887, 0.28 ) }
    dend_48 { pt3dadd( 7.26027, -50.1642, -1.86354, 0.83 ) }
    dend_48 { pt3dadd( 7.40587, -52.2954, -1.34942, 0.28 ) }
    dend_48 { pt3dadd( 7.56601, -54.0636, -0.85573, 0.83 ) }
    dend_48 { pt3dadd( 7.94194, -57.0195, 0.150195, 0.28 ) }
    dend_48 { pt3dadd( 8.1342, -58.1079, 0.571266, 0.83 ) }
    dend_48 { pt3dadd( 8.52861, -59.7913, 1.32366, 0.28 ) }
    dend_48 { pt3dadd( 8.71584, -60.6066, 1.68786, 0.55 ) }
    dend_48 { pt3dadd( 7.75235, -68.5414, 2.72639, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -80.1045, -33.8218, -46.3259, 0.28 ) }
    dend_39 { pt3dadd( -88.2591, -31.1996, -48.3864, 0.28 ) }
    dend_39 { pt3dadd( -89.7191, -30.7301, -48.7553, 0.55 ) }
    dend_39 { pt3dadd( -94.5217, -29.1857, -49.9688, 0.28 ) }
    dend_39 { pt3dadd( -97.5277, -28.2191, -50.7284, 0.55 ) }
    dend_39 { pt3dadd( -99.3119, -27.6453, -51.1792, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 65/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -80.1045, -33.8218, -46.3259, 0.28 ) }
    dend_38 { pt3dadd( -80.9393, -35.1627, -47.1916, 0.28 ) }
    dend_38 { pt3dadd( -81.5565, -35.9664, -47.3611, 0.55 ) }
    dend_38 { pt3dadd( -83.1254, -37.9121, -47.3144, 0.28 ) }
    dend_38 { pt3dadd( -83.7989, -38.7055, -47.4397, 0.55 ) }
    dend_38 { pt3dadd( -85.4054, -40.6066, -47.8636, 0.28 ) }
    dend_38 { pt3dadd( -85.96, -41.2628, -48.0099, 0.55 ) }
    dend_38 { pt3dadd( -87.4641, -42.9074, -48.1832, 0.28 ) }
    dend_38 { pt3dadd( -88.3555, -43.8349, -48.1777, 0.83 ) }
    dend_38 { pt3dadd( -90.8656, -46.3595, -47.8609, 0.28 ) }
    dend_38 { pt3dadd( -91.4965, -47.0297, -47.9153, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -44.4224, -27.9311, -1.84107, 0.28 ) }
    dend_36 { pt3dadd( -45.3539, -26.8181, 0.0267479, 0.28 ) }
    dend_36 { pt3dadd( -45.8042, -26.2797, 0.673964, 0.55 ) }
    dend_36 { pt3dadd( -46.8296, -25.1293, 1.83853, 0.28 ) }
    dend_36 { pt3dadd( -47.4076, -24.5244, 2.46773, 0.83 ) }
    dend_36 { pt3dadd( -48.8555, -23.0442, 4.042, 0.28 ) }
    dend_36 { pt3dadd( -49.1733, -22.7187, 4.38746, 0.55 ) }
    dend_36 { pt3dadd( -51.1195, -20.8646, 6.44808, 0.28 ) }
    dend_36 { pt3dadd( -51.8963, -20.1376, 7.20046, 0.55 ) }
    dend_36 { pt3dadd( -52.8823, -19.1649, 8.07962, 0.28 ) }
    dend_36 { pt3dadd( -53.5459, -18.5049, 8.63049, 0.55 ) }
    dend_36 { pt3dadd( -53.9527, -18.068, 8.92317, 0.28 ) }
    dend_36 { pt3dadd( -54.727, -17.2542, 9.56946, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -44.4224, -27.9311, -1.84107, 0.55 ) }
    dend_35 { pt3dadd( -46.1176, -27.497, -0.709938, 0.55 ) }
    dend_35 { pt3dadd( -46.7938, -27.4083, -0.311399, 0.55 ) }
    dend_35 { pt3dadd( -47.8553, -27.3531, 0.168926, 0.83 ) }
    dend_35 { pt3dadd( -49.5627, -27.3657, 0.80807, 0.28 ) }
    dend_35 { pt3dadd( -50.1514, -27.4053, 0.969299, 0.55 ) }
    dend_35 { pt3dadd( -51.1072, -27.494, 1.18531, 0.55 ) }
    dend_35 { pt3dadd( -52.3374, -27.7966, 1.3823, 0.83 ) }
    dend_35 { pt3dadd( -53.9513, -28.29, 1.53715, 0.28 ) }
    dend_35 { pt3dadd( -54.4563, -28.4686, 1.55318, 0.55 ) }
    dend_35 { pt3dadd( -55.7424, -28.9707, 1.4998, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_35 { pt3dadd( -55.9967, -29.0657, 1.49254, 0.55 ) }
    dend_35 { pt3dadd( -57.8261, -29.7941, 1.4404, 0.28 ) }
    dend_35 { pt3dadd( -58.9167, -30.1864, 1.49507, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -31.823, 18.7141, 21.0483, 0.83 ) }
    dend_26 { pt3dadd( -32.8605, 22.2045, 24.1881, 0.83 ) }
    dend_26 { pt3dadd( -33.484, 24.0561, 25.6406, 0.55 ) }
    dend_26 { pt3dadd( -33.7502, 24.832, 26.2256, 0.55 ) }
    dend_26 { pt3dadd( -34.555, 27.3307, 28.0899, 0.83 ) }
    dend_26 { pt3dadd( -35.1601, 29.4659, 29.6658, 0.55 ) }
    dend_26 { pt3dadd( -35.5177, 30.8545, 30.7411, 0.55 ) }
    dend_26 { pt3dadd( -35.9647, 33.4888, 32.7608, 0.55 ) }
    dend_26 { pt3dadd( -36.0922, 34.2327, 33.3551, 0.83 ) }
    dend_26 { pt3dadd( -36.4081, 36.3796, 35.0611, 0.28 ) }
    dend_26 { pt3dadd( -36.54, 37.7636, 36.1875, 0.83 ) }
    dend_26 { pt3dadd( -36.5915, 39.4848, 37.6516, 0.28 ) }
    dend_26 { pt3dadd( -36.4986, 40.8064, 38.8354, 0.83 ) }
    dend_26 { pt3dadd( -37.716, 48.0767, 46.3866, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 17/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -31.823, 18.7141, 21.0483, 0.55 ) }
    dend_25 { pt3dadd( -33.7698, 18.7095, 20.6821, 0.55 ) }
    dend_25 { pt3dadd( -38.4299, 18.6983, 19.8056, 0.55 ) }
    dend_25 { pt3dadd( -48.191, 19.0826, 18.144, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -39.1644, -17.8705, -7.16361, 0.83 ) }
    dend_23 { pt3dadd( -42.147, -18.2774, -6.59629, 0.83 ) }
    dend_23 { pt3dadd( -44.2888, -18.2965, -6.20513, 0.83 ) }
    dend_23 { pt3dadd( -46.3458, -18.2602, -5.82407, 0.55 ) }
    dend_23 { pt3dadd( -48.191, -18.2182, -5.48311, 0.55 ) }
    dend_23 { pt3dadd( -50.5335, -18.117, -4.98987, 0.55 ) }
    dend_23 { pt3dadd( -52.6967, -18.0017, -4.51237, 0.83 ) }
    dend_23 { pt3dadd( -55.8421, -17.8021, -3.82873, 0.83 ) }
    dend_23 { pt3dadd( -57.3271, -17.6747, -3.56151, 0.55 ) }
    dend_23 { pt3dadd( -58.2614, -17.5798, -3.43741, 0.83 ) }
    dend_23 { pt3dadd( -61.4215, -17.2587, -3.08889, 0.28 ) }
    dend_23 { pt3dadd( -62.6188, -17.2024, -3.09413, 0.83 ) }
    dend_23 { pt3dadd( -63.5766, -17.2212, -3.18402, 0.83 ) }
    dend_23 { pt3dadd( -66.1508, -17.4015, -3.657, 0.28 ) }
    dend_23 { pt3dadd( -67.0697, -17.4769, -3.88026, 0.83 ) }
    dend_23 { pt3dadd( -68.2274, -17.6104, -4.20335, 0.83 ) }
    dend_23 { pt3dadd( -71.8032, -18.2303, -5.26459, 0.55 ) }
    dend_23 { pt3dadd( -74.3159, -18.7594, -5.90508, 0.28 ) }
    dend_23 { pt3dadd( -75.4268, -19.1083, -6.1981, 0.83 ) }
    dend_23 { pt3dadd( -77.1282, -19.8917, -6.60489, 0.28 ) }
    dend_23 { pt3dadd( -78.3787, -20.7379, -6.90099, 0.55 ) }
    dend_23 { pt3dadd( -79.4084, -21.7267, -7.1187, 0.28 ) }
    dend_23 { pt3dadd( -79.9505, -22.4102, -7.20548, 0.55 ) }
    dend_23 { pt3dadd( -82.2165, -25.9151, -7.6969, 0.28 ) }
    dend_23 { pt3dadd( -83.193, -27.624, -7.90182, 0.28 ) }
    dend_23 { pt3dadd( -84.3858, -29.9745, -8.09578, 0.83 ) }
    dend_23 { pt3dadd( -85.1832, -31.6515, -8.19514, 0.28 ) }
    dend_23 { pt3dadd( -85.4835, -32.2842, -8.21645, 0.83 ) }
    dend_23 { pt3dadd( -86.097, -33.5191, -8.15379, 0.28 ) }
    dend_23 { pt3dadd( -86.6004, -34.4847, -7.98752, 0.55 ) }
    dend_23 { pt3dadd( -87.2575, -35.6885, -7.77641, 0.28 ) }
    dend_23 { pt3dadd( -87.8292, -36.6239, -7.59306, 0.83 ) }
    dend_23 { pt3dadd( -88.8829, -38.0862, -7.26547, 0.28 ) }
    dend_23 { pt3dadd( -89.525, -38.974, -7.09626, 0.55 ) }
    dend_23 { pt3dadd( -90.5078, -40.3042, -6.86938, 0.28 ) }
    dend_23 { pt3dadd( -91.0152, -40.9754, -6.76376, 0.55 ) }
    dend_23 { pt3dadd( -92.5206, -42.8971, -6.49126, 0.28 ) }
    dend_23 { pt3dadd( -94.5798, -45.3249, -6.36433, 0.55 ) }
    dend_23 { pt3dadd( -96.1486, -46.9954, -6.41139, 0.28 ) }
    dend_23 { pt3dadd( -96.7763, -47.5725, -6.47464, 0.83 ) }
    dend_23 { pt3dadd( -97.7242, -48.2897, -6.60009, 0.28 ) }
    dend_23 { pt3dadd( -98.6028, -48.9056, -6.75869, 0.83 ) }
    dend_23 { pt3dadd( -101.679, -50.7568, -7.57657, 0.28 ) }
    dend_23 { pt3dadd( -102.202, -51.0116, -7.75164, 0.83 ) }
    dend_23 { pt3dadd( -104.117, -51.6652, -8.35767, 0.28 ) }
    dend_23 { pt3dadd( -104.947, -51.8933, -8.65257, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 67/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -39.1644, -17.8705, -7.16361, 0.55 ) }
    dend_22 { pt3dadd( -38.6757, -19.6109, -7.92891, 0.55 ) }
    dend_22 { pt3dadd( -37.8694, -22.5404, -9.19973, 0.55 ) }
    dend_22 { pt3dadd( -37.4798, -24.2369, -9.85008, 1.11 ) }
    dend_22 { pt3dadd( -37.1925, -25.8595, -10.6679, 0.55 ) }
    dend_22 { pt3dadd( -36.9208, -27.7733, -11.7428, 0.55 ) }
    dend_22 { pt3dadd( -36.7401, -29.4638, -12.754, 0.55 ) }
    dend_22 { pt3dadd( -36.661, -30.8243, -13.64, 0.28 ) }
    dend_22 { pt3dadd( -36.7453, -33.0776, -15.2015, 1.11 ) }
    dend_22 { pt3dadd( -36.9665, -36.9137, -17.9882, 0.28 ) }
    dend_22 { pt3dadd( -37.1194, -38.3931, -19.0472, 0.28 ) }
    dend_22 { pt3dadd( -37.2152, -39.0614, -19.5194, 0.55 ) }
    dend_22 { pt3dadd( -37.4069, -40.0383, -20.1809, 0.28 ) }
    dend_22 { pt3dadd( -37.6517, -41.3163, -21.046, 0.28 ) }
    dend_22 { pt3dadd( -37.9249, -42.6448, -21.8936, 0.55 ) }
    dend_22 { pt3dadd( -38.3173, -44.661, -22.954, 0.28 ) }
    dend_22 { pt3dadd( -38.6022, -46.0735, -23.7248, 0.55 ) }
    dend_22 { pt3dadd( -38.9623, -47.9513, -24.7684, 0.28 ) }
    dend_22 { pt3dadd( -39.433, -50.1333, -26.0573, 0.28 ) }
    dend_22 { pt3dadd( -39.7959, -51.5375, -26.898, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 3.94752, -68.1394, -3.62309, 0.55 ) }
    dend_19 { pt3dadd( 1.90124, -71.1617, -2.22652, 0.55 ) }
    dend_19 { pt3dadd( 0.514981, -73.3347, -1.26496, 0.55 ) }
    dend_19 { pt3dadd( -0.235119, -74.4934, -0.744071, 0.28 ) }
    dend_19 { pt3dadd( -1.4116, -76.3348, 0.0728479, 0.55 ) }
    dend_19 { pt3dadd( -2.19557, -77.5724, 0.620542, 0.28 ) }
    dend_19 { pt3dadd( -2.97225, -78.813, 1.16393, 0.55 ) }
    dend_19 { pt3dadd( -3.80096, -80.2255, 1.77419, 0.55 ) }
    dend_19 { pt3dadd( -4.4774, -81.513, 2.32572, 0.28 ) }
    dend_19 { pt3dadd( -4.68761, -82.0298, 2.51627, 0.55 ) }
    dend_19 { pt3dadd( -4.92983, -82.7807, 2.74962, 0.28 ) }
    dend_19 { pt3dadd( -5.18928, -83.7892, 3.00774, 0.55 ) }
    dend_19 { pt3dadd( -5.44654, -85.0843, 3.30244, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( -5.70356, -86.4832, 3.6527, 0.55 ) }
    dend_19 { pt3dadd( -5.83617, -87.3286, 3.86592, 0.28 ) }
    dend_19 { pt3dadd( -5.9775, -88.1859, 4.06886, 0.83 ) }
    dend_19 { pt3dadd( -6.24613, -89.8113, 4.42068, 0.28 ) }
    dend_19 { pt3dadd( -6.34381, -90.3814, 4.50967, 0.55 ) }
    dend_19 { pt3dadd( -6.62737, -91.9509, 4.66554, 0.28 ) }
    dend_19 { pt3dadd( -6.68414, -92.2565, 4.68843, 0.83 ) }
    dend_19 { pt3dadd( -7.02484, -94.0578, 4.79542, 0.28 ) }
    dend_19 { pt3dadd( -7.19018, -94.9854, 4.85002, 0.83 ) }
    dend_19 { pt3dadd( -7.69128, -97.3973, 4.79197, 0.28 ) }
    dend_19 { pt3dadd( -8.21993, -99.4075, 4.76139, 0.28 ) }
    dend_19 { pt3dadd( -8.6924, -100.925, 4.76489, 0.55 ) }
    dend_19 { pt3dadd( -9.43139, -103.019, 4.83755, 0.55 ) }
    dend_19 { pt3dadd( -10.215, -105.07, 5.05104, 1.11 ) }
    dend_19 { pt3dadd( -11.8863, -109.108, 5.68761, 0.28 ) }
    dend_19 { pt3dadd( -13.208, -112.05, 6.33626, 0.83 ) }
    dend_19 { pt3dadd( -14.2272, -114.017, 6.82221, 0.28 ) }
    dend_19 { pt3dadd( -14.8436, -115.071, 7.08051, 0.55 ) }
    dend_19 { pt3dadd( -16.2898, -117.532, 7.71146, 0.28 ) }
    dend_19 { pt3dadd( -16.562, -118.01, 7.8487, 0.28 ) }
    dend_19 { pt3dadd( -17.1013, -119.136, 8.20608, 0.55 ) }
    dend_19 { pt3dadd( -17.995, -121.67, 8.87919, 0.28 ) }
    dend_19 { pt3dadd( -18.5556, -123.906, 9.42886, 0.83 ) }
    dend_19 { pt3dadd( -19.1279, -127.622, 10.2969, 0.28 ) }
    dend_19 { pt3dadd( -19.2022, -128.603, 10.5067, 0.83 ) }
    dend_19 { pt3dadd( -19.1722, -130.913, 11.0623, 0.83 ) }
    dend_19 { pt3dadd( -18.9681, -133.617, 11.8144, 0.28 ) }
    dend_19 { pt3dadd( -18.7889, -135.009, 12.24, 0.83 ) }
    dend_19 { pt3dadd( -18.5405, -136.812, 12.8039, 0.28 ) }
    dend_19 { pt3dadd( -18.4248, -137.952, 13.1278, 0.55 ) }
    dend_19 { pt3dadd( -18.2381, -140.507, 13.7753, 0.28 ) }
    dend_19 { pt3dadd( -18.1851, -141.571, 13.9808, 0.55 ) }
    dend_19 { pt3dadd( -18.1479, -143.641, 14.2474, 0.83 ) }
    dend_19 { pt3dadd( -18.1086, -144.522, 14.3376, 0.83 ) }
    dend_19 { pt3dadd( -17.9862, -146.397, 14.4622, 0.28 ) }
    dend_19 { pt3dadd( -17.8955, -147.618, 14.4288, 0.55 ) }
    dend_19 { pt3dadd( -17.5935, -150.902, 13.9867, 0.28 ) }
    dend_19 { pt3dadd( -17.5586, -151.191, 13.9186, 0.55 ) }
    dend_19 { pt3dadd( -17.2648, -153.399, 13.1837, 0.28 ) }
    dend_19 { pt3dadd( -17.191, -153.939, 12.9708, 0.55 ) }
    dend_19 { pt3dadd( -16.8191, -156.626, 11.6208, 0.28 ) }
    dend_19 { pt3dadd( -16.7749, -156.97, 11.4136, 0.55 ) }
    dend_19 { pt3dadd( -16.6172, -158.177, 10.4488, 0.28 ) }
    dend_19 { pt3dadd( -16.6027, -158.407, 10.2491, 0.55 ) }
    dend_19 { pt3dadd( -16.3447, -168.864, 12.2766, 0.55 ) }
    dend_19 { pt3dadd( -16.9226, -179.043, 15.2539, 0.55 ) }
    dend_19 { pt3dadd( -18.8351, -189.46, 16.3254, 0.55 ) }
    dend_19 { pt3dadd( -20.6563, -199.38, 19.561, 0.55 ) }
    dend_19 { pt3dadd( -21.108, -209.718, 22.031, 0.55 ) }
    dend_19 { pt3dadd( -20.3055, -220.031, 24.5313, 0.55 ) }
    dend_19 { pt3dadd( -20.1023, -229.59, 29.0297, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.94752, -68.1394, -3.62309, 0.55 ) }
    dend_18 { pt3dadd( 4.19145, -69.7858, -3.72866, 0.55 ) }
    dend_18 { pt3dadd( 4.3965, -71.2253, -3.82238, 0.55 ) }
    dend_18 { pt3dadd( 4.60527, -72.8557, -3.92269, 0.28 ) }
    dend_18 { pt3dadd( 4.66875, -73.4553, -3.95591, 0.55 ) }
    dend_18 { pt3dadd( 4.80274, -75.8592, -4.05156, 0.55 ) }
    dend_18 { pt3dadd( 4.84955, -77.5692, -4.10551, 0.28 ) }
    dend_18 { pt3dadd( 4.88065, -79.4439, -4.13332, 0.28 ) }
    dend_18 { pt3dadd( 4.88899, -80.0424, -4.10522, 0.55 ) }
    dend_18 { pt3dadd( 4.91281, -81.6836, -3.95447, 0.55 ) }
    dend_18 { pt3dadd( 4.94524, -84.5367, -3.57811, 0.55 ) }
    dend_18 { pt3dadd( 4.98403, -86.6607, -3.23134, 0.55 ) }
    dend_18 { pt3dadd( 5.04689, -87.7026, -3.0628, 0.55 ) }
    dend_18 { pt3dadd( 5.31968, -90.8891, -2.61433, 0.28 ) }
    dend_18 { pt3dadd( 5.4055, -91.7305, -2.50566, 0.83 ) }
    dend_18 { pt3dadd( 5.62891, -93.5836, -2.28577, 0.55 ) }
    dend_18 { pt3dadd( 5.87093, -95.1978, -2.1466, 0.55 ) }
    dend_18 { pt3dadd( 6.25362, -97.8498, -2.00818, 0.55 ) }
    dend_18 { pt3dadd( 6.49672, -99.7226, -1.97399, 0.83 ) }
    dend_18 { pt3dadd( 6.67457, -101.064, -2.00923, 0.28 ) }
    dend_18 { pt3dadd( 6.74932, -101.6, -2.01579, 0.55 ) }
    dend_18 { pt3dadd( 7.04831, -103.381, -1.94094, 0.28 ) }
    dend_18 { pt3dadd( 7.05938, -103.448, -1.93419, 0.55 ) }
    dend_18 { pt3dadd( 7.47459, -105.341, -1.37715, 0.28 ) }
    dend_18 { pt3dadd( 7.72866, -106.339, -0.980777, 0.83 ) }
    dend_18 { pt3dadd( 7.91302, -107.093, -0.647205, 0.83 ) }
    dend_18 { pt3dadd( 8.43651, -109.712, 0.502514, 0.28 ) }
    dend_18 { pt3dadd( 8.55474, -110.406, 0.794486, 0.55 ) }
    dend_18 { pt3dadd( 9.25405, -114.773, 2.46105, 0.28 ) }
    dend_18 { pt3dadd( 9.52657, -116.445, 3.0378, 0.28 ) }
    dend_18 { pt3dadd( 9.65374, -117.234, 3.27761, 0.83 ) }
    dend_18 { pt3dadd( 9.98464, -119.649, 3.87484, 0.28 ) }
    dend_18 { pt3dadd( 10.1934, -121.304, 4.1425, 0.28 ) }
    dend_18 { pt3dadd( 10.3278, -122.153, 4.208, 0.55 ) }
    dend_18 { pt3dadd( 10.6886, -124.218, 4.07185, 0.55 ) }
    dend_18 { pt3dadd( 10.934, -125.263, 3.9859, 0.55 ) }
    dend_18 { pt3dadd( 11.2438, -126.605, 3.88287, 0.28 ) }
    dend_18 { pt3dadd( 11.4496, -127.436, 3.87426, 0.28 ) }
    dend_18 { pt3dadd( 11.6521, -128.26, 3.90249, 0.55 ) }
    dend_18 { pt3dadd( 12.2794, -130.895, 4.05904, 0.28 ) }
    dend_18 { pt3dadd( 12.6147, -132.474, 4.18429, 0.83 ) }
    dend_18 { pt3dadd( 12.9196, -134.248, 4.25191, 0.83 ) }
    dend_18 { pt3dadd( 13.1809, -136.268, 4.26262, 0.55 ) }
    dend_18 { pt3dadd( 13.3674, -138.323, 4.27255, 0.28 ) }
    dend_18 { pt3dadd( 13.4468, -139.408, 4.26669, 0.28 ) }
    dend_18 { pt3dadd( 13.5068, -140.162, 4.27613, 0.55 ) }
    dend_18 { pt3dadd( 13.7488, -142.967, 4.29605, 0.28 ) }
    dend_18 { pt3dadd( 13.8172, -143.783, 4.28521, 0.55 ) }
    dend_18 { pt3dadd( 13.93, -145.779, 4.22381, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( 13.991, -147.159, 4.22532, 0.83 ) }
    dend_18 { pt3dadd( 14.1445, -149.615, 4.28746, 0.28 ) }
    dend_18 { pt3dadd( 14.1881, -150.147, 4.31463, 0.55 ) }
    dend_18 { pt3dadd( 14.4523, -152.808, 4.61252, 0.28 ) }
    dend_18 { pt3dadd( 14.5242, -153.616, 4.6952, 0.55 ) }
    dend_18 { pt3dadd( 14.6719, -154.961, 4.85027, 0.55 ) }
    dend_18 { pt3dadd( 14.8186, -156.05, 5.03679, 0.28 ) }
    dend_18 { pt3dadd( 14.9104, -156.566, 5.12761, 0.55 ) }
    dend_18 { pt3dadd( 15.3302, -158.404, 5.49593, 0.28 ) }
    dend_18 { pt3dadd( 15.466, -158.903, 5.62114, 0.55 ) }
    dend_18 { pt3dadd( 16.3273, -161.752, 6.4119, 0.28 ) }
    dend_18 { pt3dadd( 16.6364, -162.657, 6.69069, 0.55 ) }
    dend_18 { pt3dadd( 17.2539, -164.377, 7.26154, 0.28 ) }
    dend_18 { pt3dadd( 17.52, -165.073, 7.4884, 0.55 ) }
    dend_18 { pt3dadd( 16.9774, -174.766, 7.41688, 0.55 ) }
    dend_18 { pt3dadd( 17.3721, -184.439, 6.61776, 0.55 ) }
    dend_18 { pt3dadd( 15.726, -193.905, 5.38181, 0.55 ) }
    dend_18 { pt3dadd( 14.9655, -203.257, 2.97326, 0.55 ) }
    dend_18 { pt3dadd( 14.8775, -212.935, 2.16242, 0.55 ) }
    dend_18 { pt3dadd( 16.073, -222.57, 1.95048, 0.55 ) }
    dend_18 { pt3dadd( 18.2409, -231.948, 0.768961, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 86.4913, 71.2966, 58.4818, 0.55 ) }
    dend_12 { pt3dadd( 92.2054, 79.3903, 65.1802, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 86.4913, 71.2966, 58.4818, 0.55 ) }
    dend_11 { pt3dadd( 90.8644, 75.7473, 63.6058, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 49.1679, -66.9828, 9.30256, 0.55 ) }
    dend_8 { pt3dadd( 49.3901, -68.0199, 10.7754, 0.55 ) }
    dend_8 { pt3dadd( 49.8902, -69.7274, 12.9473, 0.55 ) }
    dend_8 { pt3dadd( 50.1605, -70.3713, 13.6817, 0.55 ) }
    dend_8 { pt3dadd( 54.0642, -78.3664, 21.8471, 0.28 ) }
    dend_8 { pt3dadd( 54.5537, -79.254, 22.596, 0.83 ) }
    dend_8 { pt3dadd( 56.0818, -81.8861, 24.4456, 0.28 ) }
    dend_8 { pt3dadd( 56.9543, -83.4008, 25.2191, 0.28 ) }
    dend_8 { pt3dadd( 58.6723, -86.0608, 25.7745, 0.28 ) }
    dend_8 { pt3dadd( 59.3299, -86.8568, 25.7029, 0.55 ) }
    dend_8 { pt3dadd( 61.2197, -88.7189, 24.7834, 0.28 ) }
    dend_8 { pt3dadd( 61.8097, -89.373, 24.5175, 0.28 ) }
    dend_8 { pt3dadd( 62.6856, -90.5302, 24.2633, 0.55 ) }
    dend_8 { pt3dadd( 63.7366, -92.0361, 24.02, 0.55 ) }
    dend_8 { pt3dadd( 65.3863, -94.9221, 23.9145, 0.55 ) }
    dend_8 { pt3dadd( 71.1679, -102.835, 27.1093, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 49.1679, -66.9828, 9.30256, 0.55 ) }
    dend_7 { pt3dadd( 50.583, -69.3602, 9.41302, 0.55 ) }
    dend_7 { pt3dadd( 51.8661, -71.5464, 9.49646, 0.55 ) }
    dend_7 { pt3dadd( 52.8598, -73.2445, 9.5378, 0.55 ) }
    dend_7 { pt3dadd( 54.1328, -75.3846, 9.57881, 0.28 ) }
    dend_7 { pt3dadd( 55.1855, -77.0751, 9.59758, 0.55 ) }
    dend_7 { pt3dadd( 56.7474, -79.437, 9.61937, 0.55 ) }
    dend_7 { pt3dadd( 57.619, -80.6412, 9.66189, 0.28 ) }
    dend_7 { pt3dadd( 58.3476, -81.6239, 9.70154, 0.28 ) }
    dend_7 { pt3dadd( 58.737, -82.1008, 9.74154, 0.28 ) }
    dend_7 { pt3dadd( 59.9015, -83.4335, 9.866, 0.55 ) }
    dend_7 { pt3dadd( 61.026, -84.5486, 9.9663, 0.55 ) }
    dend_7 { pt3dadd( 62.6147, -85.9632, 10.0706, 0.28 ) }
    dend_7 { pt3dadd( 63.0842, -86.3609, 10.106, 0.55 ) }
    dend_7 { pt3dadd( 65.0346, -87.9877, 10.2753, 0.28 ) }
    dend_7 { pt3dadd( 65.8255, -88.6613, 10.3369, 0.55 ) }
    dend_7 { pt3dadd( 67.8422, -90.3996, 10.4586, 0.28 ) }
    dend_7 { pt3dadd( 68.3071, -90.7768, 10.429, 0.55 ) }
    dend_7 { pt3dadd( 74.6292, -98.1315, 11.9795, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 49.4577, -120.028, 25.6805, 0.55 ) }
    dend_5 { pt3dadd( 51.5146, -130.07, 27.1499, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 49.4577, -120.028, 25.6805, 0.55 ) }
    dend_4 { pt3dadd( 50.7257, -126.777, 27.422, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_71 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_56 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_63 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_46 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_19 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_18 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_8 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_7 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_43 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_57 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_68 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_58 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_34 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_25 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_59 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_60 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_62 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_61 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_38 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_4 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_65 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_55 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_5 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_11 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_66 all.append()
    dend_66 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_71 nseg = 11
    dend_56 nseg = 13
    dend_70 nseg = 15
    dend_69 nseg = 5
    dend_67 nseg = 3
    dend_31 nseg = 3
    dend_29 nseg = 11
    dend_28 nseg = 3
    dend_53 nseg = 5
    dend_52 nseg = 7
    dend_50 nseg = 9
    dend_9 nseg = 3
    dend_2 nseg = 3
    dend_63 nseg = 3
    dend_46 nseg = 7
    dend_42 nseg = 5
    dend_41 nseg = 11
    dend_37 nseg = 3
    dend_16 nseg = 5
    dend_13 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_49 nseg = 11
    dend_23 nseg = 5
    dend_19 nseg = 9
    dend_18 nseg = 9
    dend_8 nseg = 3
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_LBC_97118d2391_0_0


