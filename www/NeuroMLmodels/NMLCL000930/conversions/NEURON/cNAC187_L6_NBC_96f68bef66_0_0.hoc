// Cell: cNAC187_L6_NBC_96f68bef66_0_0
/*
{
  "id" : "cNAC187_L6_NBC_96f68bef66_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.94345, -11.2623, 0.984599, 4.09477", "-6.27697, -10.213, 0.889449, 7.03886", "-5.61048, -9.16359, 0.794299, 9.0513", "-4.94399, -8.11421, 0.699149, 10.7049", "-4.2775, -7.06483, 0.603999, 12.1545", "-3.61101, -6.01545, 0.508849, 13.4148", "-2.94452, -4.96607, 0.413699, 14.3077", "-2.27803, -3.91669, 0.318549, 14.7157", "-1.61155, -2.86731, 0.223399, 14.8034", "-0.945058, -1.81793, 0.128249, 14.7825", "-0.278569, -0.768556, 0.0330986, 14.484", "0.387919, 0.280823, -0.0620515, 14.2451", "1.05441, 1.3302, -0.157201, 13.4939", "1.7209, 2.37958, -0.252352, 12.4612", "2.38738, 3.42896, -0.347502, 11.3514", "3.05387, 4.47834, -0.442652, 10.0759", "3.72036, 5.52772, -0.537802, 8.68542", "4.38685, 6.5771, -0.632952, 7.03735", "5.05334, 7.62648, -0.728102, 5.61823", "5.71983, 8.67585, -0.823252, 4.41136", "6.38632, 9.72523, -0.918402, 2.8094" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.13964, -5.50144, -15.1942, 1.03", "-2.13964, -5.50144, -15.1942, 1.03", "-1.56779, -6.3009, -15.1942, 1.03", "-1.04086, -7.26566, -15.2302, 0.88", "-0.639321, -8.29177, -15.2921, 0.96", "-0.281848, -9.61188, -15.3898, 0.52", "-0.174207, -10.2724, -15.4441, 0.44", "-0.220841, -11.3635, -15.5505, 0.37", "-0.591847, -12.3323, -15.6651, 0.96", "-1.01186, -12.8942, -15.7378, 1.18", "-1.32035, -13.1869, -15.7996, 1.18", "-1.73735, -13.5339, -15.9207, 0.88", "-2.24784, -13.9841, -16.1322, 0.66", "-2.74773, -14.5099, -16.4525, 0.52", "-3.17477, -15.1421, -16.9653, 0.37", "-3.49532, -15.917, -17.7736, 0.37", "-3.67827, -16.6246, -18.6504, 1.11", "-3.76069, -17.0689, -19.2629, 1.33", "-3.81679, -17.4252, -19.7809, 1.4", "-3.95319, -18.1759, -20.9442, 0.66", "-4.13222, -18.6685, -21.7814, 0.52", "-4.49284, -19.1617, -22.6126, 0.59", "-4.80008, -19.4405, -23.0486, 0.66", "-5.23193, -19.7946, -23.5635, 0.66", "-5.59488, -20.0984, -23.9554, 0.37", "-6.2294, -20.7699, -24.7277, 0.29", "-6.44345, -21.1105, -25.1524, 0.29", "-6.76223, -21.9315, -26.2228, 1.4", "-6.8906, -22.4206, -26.8372, 1.84", "-6.95922, -22.8253, -27.3384, 1.84", "-7.08374, -23.9931, -28.7898, 0.81", "-7.15654, -25.0912, -30.1708, 0.37", "-7.19117, -25.6357, -30.9207, 0.37", "-7.23639, -26.2912, -31.8736, 1.55", "-7.28053, -26.9139, -32.8723, 2.06", "-7.32877, -27.4299, -33.7526, 2.21", "-7.44414, -28.6458, -35.8855, 0.66", "-7.55772, -29.9121, -38.1512, 0.66", "-7.59918, -30.4898, -39.2523, 0.88", "-7.67337, -31.8359, -42.0489, 1.77", "-7.71992, -32.5464, -43.5767, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.29965, -7.64844, 0.925891, 1.25", "-8.29965, -7.64844, 0.925891, 1.25", "-8.80418, -8.42686, 1.11922, 1.25", "-9.72377, -9.94899, 1.50406, 1.11", "-10.453, -11.1562, 1.80928, 1.55", "-11.008, -12.0748, 2.04153, 1.92", "-11.6704, -13.1711, 2.31872, 2.14", "-12.2105, -14.0997, 2.56217, 2.14", "-12.6458, -14.9247, 2.79698, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.83964, -10.831, -0.944109, 1.62", "-5.06872, -11.3914, -0.853087, 1.62", "-5.43042, -12.28, -0.695882, 1.47", "-5.73478, -13.0407, -0.55799, 1.18", "-6.0713, -13.891, -0.405584, 1.18", "-6.37518, -14.6736, -0.275703, 1.77", "-6.5362, -15.1057, -0.21238, 2.14", "-6.75099, -15.706, -0.115313, 2.65", "-6.92535, -16.1852, -0.0366286, 2.73", "-7.18615, -16.8525, 0.0636391, 2.5", "-7.59079, -17.7962, 0.18577, 1.92", "-8.09072, -18.8821, 0.313007, 1.47", "-8.70017, -20.0895, 0.444787, 1.18", "-9.10863, -20.8225, 0.523231, 1.03", "-9.77064, -21.8766, 0.629527, 1.47", "-10.1261, -22.376, 0.673129, 1.99", "-10.3978, -22.7331, 0.697684, 2.43", "-10.6992, -23.1412, 0.717288, 2.65", "-11.029, -23.6721, 0.727597, 2.36", "-11.4566, -24.6259, 0.717244, 1.77", "-11.8646, -26.0834, 0.676498, 1.33", "-12.0314, -27.1258, 0.636374, 1.33", "-12.1052, -28.1914, 0.59338, 1.55", "-12.0795, -29.4524, 0.554312, 1.25", "-11.9361, -30.7863, 0.543651, 1.11", "-11.7013, -31.9597, 0.560723, 1.55", "-11.5264, -32.5789, 0.574157, 2.06", "-11.4025, -32.9637, 0.587096, 2.43", "-11.2231, -33.4962, 0.617353, 2.8", "-11.0212, -34.1136, 0.701389, 2.95", "-10.8895, -34.5983, 0.856652, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.93036, 9.68906, -0.514109, 3.54", "5.93036, 9.68906, -0.514109, 3.54", "6.58817, 11.0983, -0.415211, 3.54", "7.32692, 12.6808, -0.304146, 3.54", "7.80023, 13.6948, -0.232987, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.38632, 9.72523, -0.918402, 0.715641", "14.4283, 22.3872, -0.918402, 0.715641", "22.4703, 35.0492, -0.918402, 0.715641" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-7.71992, -32.5464, -43.5767, 0.88", "-6.85671, -33.1654, -44.2999, 0.88", "-6.0458, -33.7351, -44.9115, 0.52", "-5.43003, -34.1512, -45.335, 0.29", "-4.65567, -34.6639, -45.8854, 0.22", "-3.86915, -35.1895, -46.4497, 1.33", "-3.20014, -35.6303, -46.9576, 1.47", "-2.50721, -36.0886, -47.4951, 0.15", "-1.99667, -36.4302, -47.8726, 0.15", "-0.859353, -37.1878, -48.7447, 0.81", "-0.658852, -37.3192, -48.9036, 0.96", "1.13304, -38.4767, -50.3542, 0.22", "1.35746, -38.6211, -50.5517, 0.74", "1.75497, -38.887, -50.9359, 0.74", "3.09783, -39.7912, -52.3372, 0.22", "3.4575, -40.038, -52.7295, 0.88", "3.65438, -40.175, -52.9596, 1.11", "5.12389, -41.2102, -54.8291, 0.22", "6.01576, -41.8238, -56.0103, 1.62", "6.57466, -42.209, -56.7724, 2.06", "7.55536, -42.9299, -58.1633, 0.81", "8.28703, -43.5071, -59.2517, 1.33", "9.40738, -44.4738, -60.983, 0.22", "10.1448, -45.1689, -62.1279, 1.33", "10.457, -45.4848, -62.6526, 1.62", "11.5937, -46.7528, -64.7066, 0.59", "12.3417, -47.6853, -66.2252, 0.22", "12.7099, -48.2417, -67.149, 0.74", "12.8548, -48.516, -67.5928, 0.96", "13.4051, -49.7798, -69.6423, 0.29", "13.6024, -50.3391, -70.6285, 1.18", "13.693, -50.6865, -71.2866, 1.4", "13.9667, -52.0841, -73.9782, 0.22", "14.0216, -52.4943, -74.8106, 1.03", "14.0346, -52.7494, -75.3387, 1.18", "13.9586, -54.4828, -78.9892, 0.44", "13.8772, -55.1825, -80.5696, 0.22", "13.8378, -55.4269, -81.1325, 1.18", "13.7139, -56.1035, -82.7352, 1.18", "13.6163, -56.5877, -83.9476, 1.62", "13.4821, -57.3754, -85.9495, 1.84", "13.4489, -57.6988, -86.7713, 1.99", "13.4449, -58.905, -89.9067, 0.22", "13.5016, -59.6727, -91.9401, 1.47", "13.5956, -60.3135, -93.5825, 1.69", "13.6775, -60.7145, -94.6281, 1.4", "13.8969, -61.5271, -96.7508, 0.81", "14.2697, -62.6319, -99.6659, 1.03", "14.7541, -63.888, -103.119, 0.22", "14.9193, -64.2582, -104.122, 1.47", "15.405, -65.22, -106.571, 1.62", "15.7806, -65.9044, -108.24, 0.29", "16.2966, -66.6924, -110.084, 1.18", "16.8378, -67.3665, -111.563, 1.47", "17.6382, -68.2117, -113.313, 0.15", "18.1895, -68.7706, -114.427, 0.15", "18.7626, -69.3368, -115.417, 1.18", "19.7157, -70.337, -116.973, 0.22", "20.0846, -70.7514, -117.58, 0.22", "20.7715, -71.5445, -118.779, 0.88", "21.1303, -71.988, -119.478, 0.88", "21.5796, -72.5384, -120.406, 1.11", "22.0635, -73.0999, -121.389, 1.33", "23.6335, -74.8254, -124.577, 0.22", "24.4043, -75.6413, -126.186, 1.03", "24.5198, -75.7571, -126.429, 1.25", "25.8094, -76.9997, -129.095, 0.22", "26.4467, -77.5865, -130.407, 1.33", "26.8341, -77.9339, -131.181, 1.4", "28.0447, -79.0914, -133.677, 0.22", "28.6264, -79.6761, -134.952, 0.74", "29.5478, -80.6475, -137.137, 0.22", "30.4106, -81.6233, -139.312, 1.4", "30.7016, -81.9737, -140.081, 1.47", "31.7408, -83.2387, -142.862, 0.15", "32.5373, -84.1781, -144.994, 1.25", "32.8429, -84.5409, -145.855, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-7.71992, -32.5464, -43.5767, 1.92", "-8.56199, -33.0136, -44.7641, 1.92", "-9.30794, -33.4468, -45.8457, 1.77", "-10.2278, -34.0068, -47.169, 2.21", "-10.9101, -34.4656, -48.2051, 0.22", "-11.1379, -34.6299, -48.5756, 0.22", "-11.6014, -34.983, -49.362, 0.22", "-12.1287, -35.4295, -50.3511, 1.47", "-12.2789, -35.5694, -50.6625, 1.77", "-12.8965, -36.1853, -52.0464, 0.52", "-13.3561, -36.6569, -53.1515, 1.25", "-13.5234, -36.8355, -53.5742, 1.4", "-13.9979, -37.4221, -54.9194, 0.29", "-14.3844, -37.9573, -56.0973, 1.62", "-14.5285, -38.1734, -56.5889, 1.84", "-14.8298, -38.678, -57.7028, 0.52", "-15.1262, -39.2397, -58.9022, 1.69", "-15.2954, -39.6011, -59.6338, 2.06", "-15.4019, -39.8713, -60.1362, 2.21", "-15.9556, -41.3528, -62.7915, 0.44", "-16.0876, -41.754, -63.5112, 0.81", "-16.127, -41.9046, -63.7673, 0.81", "-16.2069, -42.2203, -64.2738, 0.59", "-16.2522, -42.4114, -64.5585, 0.88", "-16.3657, -43.0351, -65.4038, 0.37", "-16.6019, -44.5463, -67.2337, 1.4", "-16.6628, -44.9259, -67.6894, 1.92", "-16.861, -45.9896, -69.1097, 0.22", "-16.9398, -46.3625, -69.6432, 0.22", "-17.0054, -46.6182, -70.0178, 0.22", "-17.1903, -47.1983, -70.8569, 1.84", "-17.2397, -47.3188, -71.0551, 2.06", "-17.9061, -48.7265, -73.6735, 0.22", "-18.0268, -48.9391, -74.1136, 0.22", "-18.1336, -49.0926, -74.4602, 0.96", "-18.2614, -49.2524, -74.837, 1.18", "-19.2088, -50.3273, -77.4551, 0.44", "-19.3768, -50.5098, -77.8802, 1.18", "-19.5967, -50.7338, -78.3735, 1.18", "-20.1077, -51.2475, -79.5451, 1.33", "-20.3544, -51.5043, -80.1103, 1.47", "-21.0628, -52.276, -81.6624, 0.29", "-21.4242, -52.6856, -82.3866, 1.4", "-21.6182, -52.9226, -82.8237, 1.62", "-22.3832, -53.9864, -84.8731, 0.22", "-22.5272, -54.2074, -85.2955, 0.81", "-22.696, -54.4776, -85.8072, 0.29", "-22.9249, -54.8586, -86.4989, 1.11", "-23.6599, -56.0876, -88.7336, 0.59", "-24.4224, -57.2988, -90.8404, 0.22", "-24.6555, -57.645, -91.4208, 0.22", "-24.9767, -58.079, -92.1636, 1.69", "-25.1681, -58.3085, -92.5848, 2.14", "-26.0508, -59.2692, -94.3413, 0.22", "-26.4436, -59.6533, -95.0069, 1.92", "-26.6731, -59.8595, -95.3712, 2.21", "-26.9736, -60.1188, -95.8578, 2.21", "-28.4232, -61.3645, -98.2123, 0.22", "-28.5601, -61.4843, -98.436, 0.44", "-28.904, -61.8103, -98.9957, 0.29", "-29.3378, -62.2576, -99.7279, 1.03", "-29.4685, -62.4002, -99.9489, 0.81", "-29.7856, -62.7744, -100.435, 0.29", "-30.1525, -63.2238, -100.919, 1.11", "-30.2924, -63.3945, -101.141, 1.33", "-30.4623, -63.6082, -101.437, 1.33", "-31.5635, -65.017, -103.403, 0.22", "-31.9637, -65.528, -104.155, 1.99", "-32.1385, -65.7441, -104.481, 2.43", "-33.4806, -67.38, -106.991, 0.22", "-33.6632, -67.5953, -107.356, 0.59", "-33.7929, -67.7568, -107.626, 0.59", "-34.2774, -68.3725, -108.644, 0.22", "-34.4774, -68.6329, -109.079, 1.25", "-34.7414, -69.0066, -109.69, 1.62", "-35.6833, -70.4444, -111.856, 0.22", "-36.0402, -71.0165, -112.72, 0.22", "-36.1854, -71.2755, -113.09, 0.96", "-36.2698, -71.4528, -113.325, 1.33", "-36.7955, -72.7709, -115.032, 0.22", "-36.8764, -73.0197, -115.361, 0.74", "-36.9396, -73.2765, -115.693, 0.74", "-37.0089, -73.6163, -116.155, 0.22", "-37.1298, -74.3395, -117.125, 1.84", "-37.1889, -74.7462, -117.669, 2.14", "-37.3849, -76.3365, -119.743, 0.22", "-37.4164, -76.6114, -120.104, 0.22", "-37.4803, -77.1706, -120.829, 1.55", "-37.5233, -77.5143, -121.268, 1.84", "-37.6757, -78.5283, -122.571, 0.22", "-37.7399, -78.8887, -123.038, 0.52", "-37.8575, -79.3721, -123.773, 0.22", "-38.0425, -79.9367, -124.79, 1.03", "-38.0859, -80.0467, -125.006, 1.18", "-38.5375, -81.0699, -127.133, 1.25", "-38.6851, -81.3659, -127.782, 1.62", "-39.3512, -82.6192, -130.548, 0.22", "-39.5651, -82.9888, -131.408, 0.22", "-39.7488, -83.2932, -132.101, 1.47", "-39.9986, -83.6982, -133.01, 1.62", "-40.3971, -84.3388, -134.445, 0.22", "-40.5198, -84.5432, -134.937, 0.96", "-41.1705, -85.6975, -137.7, 0.22", "-41.3156, -85.9572, -138.369, 1.18", "-41.5416, -86.3374, -139.392, 1.4", "-42.0108, -87.0695, -141.362, 1.03", "-42.7408, -88.1236, -144.212, 0.22", "-42.9297, -88.3764, -144.902, 1.47", "-43.2417, -88.7546, -145.958, 1.55", "-43.6036, -89.1556, -147.11, 0.22", "-43.9404, -89.5009, -148.053, 0.22", "-44.1218, -89.664, -148.479, 1.11", "-44.4394, -89.9059, -149.199, 1.33", "-45.5971, -90.6821, -151.87, 0.22", "-45.7592, -90.784, -152.246, 1.18", "-45.965, -90.904, -152.749, 1.18", "-46.4486, -91.1795, -153.969, 0.66", "-47.8135, -91.9387, -157.411, 0.22", "-48.1046, -92.0915, -158.11, 0.22", "-48.556, -92.3088, -159.129, 1.18", "-48.9497, -92.4826, -160.047, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.6458, -14.9247, 2.79698, 0.59", "-14.1752, -15.3962, 2.99739, 0.59", "-14.8341, -15.5321, 3.05747, 0.66", "-15.3529, -15.5862, 3.10653, 0.81", "-15.6643, -15.5905, 3.14175, 0.81", "-16.2784, -15.5832, 3.23008, 0.81", "-17.0785, -15.5805, 3.40905, 0.96", "-17.537, -15.5417, 3.54009, 0.66", "-18.1064, -15.4779, 3.73917, 0.37", "-18.6597, -15.4012, 3.97062, 0.37", "-19.3494, -15.3038, 4.32065, 1.18", "-20.1514, -15.2117, 4.86006, 1.69", "-20.386, -15.2195, 5.07568, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.6458, -14.9247, 2.79698, 1.25", "-13.0016, -16.142, 2.5704, 1.25", "-13.4459, -17.3926, 2.34381, 0.74", "-13.7842, -18.2067, 2.20472, 0.96", "-14.2545, -19.1812, 2.05106, 1.18", "-14.6534, -19.9065, 1.97999, 1.47", "-15.077, -20.6361, 1.94367, 1.47", "-15.4542, -21.2019, 1.94955, 1.55", "-15.9252, -21.8466, 2.01646, 1.55", "-16.4193, -22.5312, 2.12766, 1.33", "-17.1973, -23.6342, 2.36707, 1.11", "-17.6446, -24.3388, 2.50191, 0.96", "-17.9816, -24.9879, 2.55968, 0.81", "-18.285, -25.9418, 2.32895, 0.66", "-18.4071, -26.6714, 1.95415, 0.52", "-18.4581, -27.1668, 1.61785, 0.52", "-18.5424, -28.0181, 0.955921, 1.11", "-18.7049, -29.3368, -0.131507, 1.55", "-19.1049, -31.9851, -2.37222, 1.33", "-19.2896, -32.9527, -3.20228, 0.88", "-19.5121, -33.8024, -3.90122, 1.18", "-19.813, -34.637, -4.49625, 1.84", "-20.0827, -35.1524, -4.75645, 2.21", "-20.4462, -35.6695, -4.88053, 2.36", "-20.8224, -36.1132, -4.88934, 2.5", "-21.3177, -36.6712, -4.88751, 2.28", "-21.9887, -37.4471, -4.88398, 1.92", "-22.7738, -38.3969, -4.91988, 1.18", "-23.2962, -39.052, -4.98203, 0.96", "-23.8107, -39.7226, -5.10096, 0.66", "-24.4464, -40.6067, -5.35318, 0.44", "-25.1893, -41.7387, -5.81693, 1.77", "-25.6177, -42.4514, -6.17639, 2.28", "-25.9009, -42.9782, -6.48555, 2.28", "-26.23, -43.6691, -6.91496, 2.43", "-26.6057, -44.5437, -7.44548, 1.92", "-27.0759, -45.7468, -8.12544, 0.81", "-27.4232, -46.6707, -8.58475, 0.96", "-27.8079, -47.6607, -8.98063, 1.18", "-28.0627, -48.2589, -9.16433, 0.96", "-28.4979, -49.1063, -9.32293, 0.44", "-28.8698, -49.6842, -9.37275, 0.96", "-29.0912, -49.992, -9.37935, 1.11", "-29.7252, -50.7725, -9.36041, 0.52", "-30.2875, -51.3622, -9.30563, 0.44", "-31.2928, -52.2611, -9.21811, 1.03", "-31.9486, -52.7533, -9.16257, 1.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.8895, -34.5983, 0.856652, 0.81", "-12.3532, -35.6058, -2.8316, 0.81", "-13.0996, -35.9898, -4.4623, 1.18", "-13.5679, -36.2354, -5.42571, 1.25", "-14.3249, -36.6606, -7.03387, 0.66", "-14.5726, -36.8185, -7.58656, 0.52", "-15.0281, -37.1532, -8.6453, 0.66", "-15.2933, -37.3653, -9.22504, 0.88", "-15.5663, -37.8763, -10.2081, 1.11", "-15.6992, -38.5234, -11.49, 1.25", "-15.7312, -38.769, -12.0097, 1.25", "-15.7561, -39.0008, -12.5153, 0.96", "-15.7846, -39.3843, -13.3532, 0.59", "-15.8631, -40.0568, -14.9536, 1.18", "-16.0556, -41.2361, -17.8603, 1.25", "-16.217, -42.1133, -19.9135, 1.25", "-16.2943, -42.5492, -20.8773, 1.69", "-16.3474, -42.8455, -21.4698, 1.77", "-16.6492, -44.4916, -24.1733, 0.81", "-16.7774, -45.2206, -25.1433, 1.11", "-16.8485, -45.8538, -25.8169, 0.96", "-16.9538, -46.6374, -26.5291, 0.52", "-17.1752, -47.7284, -27.3985, 0.52", "-17.6641, -49.595, -28.6675, 2.21", "-17.9528, -50.4702, -29.1206, 2.5", "-18.0907, -50.7999, -29.2882, 2.5", "-18.5924, -51.7924, -29.7898, 0.66", "-19.0757, -52.5758, -30.1963, 1.25", "-19.3546, -52.9706, -30.3914, 1.47", "-19.6937, -53.3843, -30.5717, 1.47", "-20.3233, -54.1194, -30.8423, 1.33", "-20.7118, -54.537, -30.9972, 0.74", "-21.3165, -55.1517, -31.2257, 0.29", "-21.6191, -55.4596, -31.3515, 0.22", "-22.0151, -55.8905, -31.5298, 0.22", "-22.4775, -56.4796, -31.7489, 0.96", "-22.7343, -56.8837, -31.8722, 1.18", "-22.9216, -57.2746, -32.0016, 0.96", "-23.3321, -58.4262, -32.4447, 0.22", "-23.4544, -58.8369, -32.6312, 0.22", "-23.6434, -59.4916, -32.9946, 0.88", "-23.751, -59.8797, -33.2353, 1.11", "-24.0453, -60.8958, -33.8797, 0.22", "-24.4244, -61.9381, -34.6598, 1.77", "-24.614, -62.3435, -35.0612, 2.28", "-24.9679, -62.9607, -35.8624, 2.28", "-25.6289, -63.8796, -37.344, 0.15", "-25.9203, -64.2461, -38.0339, 0.74", "-26.6579, -65.1375, -39.9139, 0.44", "-27.5063, -66.233, -42.299, 1.69", "-28.0657, -66.993, -44.0131, 2.28", "-28.3491, -67.3972, -44.9337, 2.58", "-29.018, -68.3632, -47.123, 0.52", "-29.4333, -69.0227, -48.5065, 0.29", "-30.0526, -70.1586, -50.5469, 2.21", "-30.5351, -71.1165, -52.0408, 2.58", "-31.3685, -72.7771, -54.3584, 0.29", "-31.6227, -73.2766, -54.9856, 0.22", "-31.8154, -73.6158, -55.3665, 0.22", "-32.1536, -74.1599, -55.9135, 1.33", "-32.4359, -74.5803, -56.27, 1.55", "-33.7086, -76.4381, -57.63, 0.22", "-34.0492, -76.9142, -57.9555, 0.96", "-34.2705, -77.2016, -58.1777, 1.25", "-34.5274, -77.501, -58.4584, 1.25", "-35.4412, -78.4753, -59.4877, 0.22", "-36.0561, -79.0862, -60.1623, 0.88", "-36.2776, -79.2965, -60.4069, 1.11", "-36.7276, -79.7371, -60.9296, 1.11", "-38.1583, -81.2299, -62.5917, 0.22", "-38.6552, -81.7774, -63.1551, 1.77", "-38.9613, -82.1317, -63.4945, 2.28", "-39.3599, -82.6233, -63.9158, 2.14", "-40.4553, -84.0528, -65.0604, 0.22", "-40.9641, -84.7809, -65.5747, 1.03", "-41.2079, -85.163, -65.8323, 1.33", "-42.0186, -86.4088, -66.7594, 0.22", "-42.3163, -86.8507, -67.113, 0.96", "-42.642, -87.3012, -67.5103, 1.25", "-42.8375, -87.5574, -67.7563, 1.33", "-44.0954, -89.1654, -69.4, 0.15", "-44.6155, -89.8503, -70.1244, 1.18", "-44.965, -90.3284, -70.6291, 1.55", "-45.8361, -91.5949, -71.9139, 0.22", "-46.0598, -91.9419, -72.2376, 0.96", "-46.3563, -92.42, -72.659, 0.96", "-46.9454, -93.4705, -73.4933, 0.22", "-47.1162, -93.8309, -73.7484, 0.66", "-47.5553, -94.8368, -74.4549, 0.22", "-47.8084, -95.4604, -74.872, 1.4", "-48.0385, -96.0415, -75.2705, 1.84", "-48.1797, -96.3824, -75.5101, 1.62", "-48.8924, -97.9745, -76.6295, 0.15", "-49.4073, -99.095, -77.4438, 1.03", "-49.5939, -99.4727, -77.7525, 1.55", "-49.8139, -99.9083, -78.1202, 1.55", "-50.5421, -101.33, -79.3355, 0.22", "-50.7401, -101.716, -79.6846, 0.88", "-50.9877, -102.158, -80.1004, 0.88", "-51.9142, -103.807, -81.5389, 0.22", "-52.2609, -104.419, -82.0381, 1.18", "-52.503, -104.84, -82.3513, 1.33", "-53.3328, -106.282, -83.3873, 0.22", "-53.7094, -106.932, -83.8333, 0.22", "-54.2091, -107.732, -84.3625, 0.22", "-54.6682, -108.466, -84.793, 0.22", "-55.2965, -109.458, -85.3831, 1.55", "-55.7705, -110.229, -85.8467, 1.92", "-56.0167, -110.669, -86.1032, 1.77", "-56.9143, -112.483, -87.2188, 0.22", "-57.237, -113.161, -87.6602, 0.96", "-57.4132, -113.557, -87.9226, 1.11", "-57.9777, -114.929, -88.8528, 0.22", "-58.3192, -115.809, -89.4379, 0.22", "-58.6068, -116.596, -89.9828, 1.03", "-58.7683, -117.073, -90.3167, 1.33", "-58.953, -117.594, -90.7044, 1.33", "-59.6161, -119.336, -92.0169, 0.15", "-59.9076, -120.074, -92.5568, 0.15", "-60.3386, -121.104, -93.2897, 1.55", "-60.5322, -121.571, -93.5932, 1.84", "-60.7359, -122.062, -93.8842, 1.77", "-61.2293, -123.171, -94.4678, 0.22", "-61.5505, -123.831, -94.7518, 0.22", "-61.8898, -124.466, -94.9979, 0.96", "-62.1165, -124.86, -95.121, 1.11", "-62.8118, -125.966, -95.432, 0.22", "-63.1589, -126.434, -95.5805, 0.22", "-63.5917, -126.914, -95.7554, 0.22", "-63.939, -127.237, -95.8927, 0.96", "-64.1742, -127.425, -95.9784, 1.25", "-64.675, -127.77, -96.1456, 1.25", "-65.9488, -128.551, -96.6132, 0.15", "-66.6657, -128.988, -96.9369, 0.15", "-66.9375, -129.165, -97.0966, 0.44", "-67.223, -129.365, -97.3051, 0.44", "-67.7814, -129.764, -97.7567, 0.15", "-68.6544, -130.458, -98.5787, 1.33", "-69.0375, -130.79, -99.0168, 1.4", "-69.8656, -131.641, -100.308, 0.22", "-70.2577, -132.109, -101.066, 0.44", "-70.4639, -132.402, -101.537, 0.22", "-70.8359, -133.015, -102.559, 1.33", "-71.1601, -133.643, -103.624, 1.62", "-71.7756, -135.01, -105.93, 0.22", "-71.9553, -135.487, -106.718, 0.22", "-72.1044, -135.953, -107.468, 0.96", "-72.3104, -136.824, -108.812, 1.18", "-72.536, -138.086, -110.668, 0.22", "-72.5708, -138.428, -111.111, 0.22", "-72.5822, -138.655, -111.368, 0.66", "-72.6058, -139.833, -112.593, 0.22", "-72.5939, -140.857, -113.573, 2.06", "-72.59, -141.135, -113.821, 2.28", "-72.548, -142.808, -115.243, 0.22", "-72.5329, -143.273, -115.645, 0.22", "-72.5123, -144.254, -116.534, 1.33", "-72.5106, -144.598, -116.86, 1.62", "-72.5871, -146.597, -118.798, 0.37", "-72.6412, -147.27, -119.447, 0.22", "-72.7306, -147.933, -120.093, 0.22", "-72.9244, -149.073, -121.196, 1.03", "-73.1237, -149.864, -121.964, 1.4", "-73.5682, -151.137, -123.204, 0.22", "-73.9689, -152.043, -124.044, 1.25", "-74.2771, -152.637, -124.588, 1.55", "-74.4067, -152.852, -124.77, 1.55", "-75.5365, -154.516, -126.022, 0.29", "-75.9198, -155.015, -126.375, 0.52", "-76.1032, -155.218, -126.52, 0.52", "-76.6114, -155.746, -126.855, 0.22", "-77.3141, -156.462, -127.219, 0.22", "-77.8418, -156.983, -127.438, 1.25", "-78.2506, -157.369, -127.554, 1.4", "-78.7781, -157.844, -127.695, 1.11", "-79.6047, -158.524, -127.946, 0.15", "-80.2709, -159.047, -128.23, 0.15", "-80.983, -159.613, -128.626, 0.88", "-81.3406, -159.882, -128.842, 1.11", "-81.6367, -160.091, -129.012, 1.11", "-82.7506, -160.846, -129.61, 0.22", "-83.8796, -161.597, -130.216, 0.22", "-84.3266, -161.894, -130.537, 0.22", "-85.2366, -162.53, -131.28, 0.22", "-85.9587, -163.07, -131.925, 1.25", "-86.4087, -163.445, -132.352, 1.55", "-86.9825, -163.968, -132.94, 1.55", "-89.0465, -165.886, -135.103, 0.22", "-89.3233, -166.145, -135.43, 0.66", "-89.5697, -166.357, -135.77, 0.66", "-90.066, -166.741, -136.486, 0.22", "-90.5577, -167.074, -137.157, 0.22", "-90.9153, -167.288, -137.571, 0.66", "-91.4539, -167.601, -138.051, 0.74", "-92.8957, -168.464, -139.246, 0.22", "-93.4038, -168.783, -139.635, 0.44", "-93.7291, -169.004, -139.864, 0.44", "-94.3491, -169.524, -140.395, 0.22", "-94.8568, -170.0, -140.939, 1.33", "-95.1567, -170.295, -141.312, 1.69", "-95.2888, -170.412, -141.488, 1.92", "-95.7275, -170.762, -142.155, 1.69", "-97.109, -171.854, -144.48, 0.59", "-97.8209, -172.423, -145.832, 0.96", "-98.3734, -172.893, -146.962, 0.44", "-98.8345, -173.318, -147.946, 0.29", "-99.2977, -173.78, -148.983, 0.29", "-99.538, -174.055, -149.558, 0.29", "-100.189, -174.855, -151.045, 0.88", "-100.509, -175.222, -151.74, 1.55", "-100.63, -175.34, -151.974, 2.06", "-101.798, -176.326, -154.055, 1.69", "-101.886, -176.371, -154.199, 1.84", "-103.079, -176.807, -156.057, 0.37", "-104.027, -177.094, -157.488, 0.22", "-104.771, -177.303, -158.659, 1.84", "-105.388, -177.48, -159.638, 2.06", "-107.705, -178.132, -163.487, 0.22", "-108.12, -178.248, -164.192, 0.22", "-108.664, -178.412, -165.165, 1.55", "-109.547, -178.729, -166.782, 1.69", "-109.812, -178.844, -167.332, 1.69", "-111.675, -179.824, -171.495, 0.52", "-111.948, -180.0, -172.136, 1.92", "-112.308, -180.23, -172.985, 1.92", "-114.196, -181.39, -177.286, 1.92", "-116.461, -182.772, -182.162, 0.66", "-116.751, -182.958, -182.793, 0.66", "-117.173, -183.268, -183.731, 0.29", "-117.486, -183.52, -184.458, 0.29", "-117.757, -183.749, -185.084, 1.11", "-117.984, -183.984, -185.606, 1.62", "-119.624, -185.469, -188.999, 0.22", "-119.777, -185.588, -189.307, 0.22", "-120.142, -185.853, -190.019, 1.47", "-120.663, -186.214, -191.035, 1.77", "-120.983, -186.411, -191.67, 1.77", "-123.172, -187.642, -195.826, 0.22", "-123.697, -187.914, -196.784, 1.33", "-124.147, -188.153, -197.698, 1.62", "-124.782, -188.514, -199.098, 1.62", "-126.398, -189.461, -202.923, 0.22", "-126.648, -189.611, -203.583, 1.18", "-127.242, -189.979, -205.215, 1.33", "-128.483, -190.789, -208.651, 0.15", "-128.784, -190.995, -209.459, 1.25", "-129.707, -191.644, -211.754, 1.62", "-131.628, -192.913, -216.073, 0.22", "-132.36, -193.354, -217.59, 0.22", "-132.825, -193.624, -218.457, 0.44", "-133.37, -193.944, -219.426, 0.88", "-133.62, -194.106, -219.902, 1.47", "-134.226, -194.614, -221.249, 1.62", "-135.524, -195.93, -224.614, 0.22", "-135.635, -196.058, -224.955, 1.03", "-136.289, -196.841, -227.07, 1.11", "-136.624, -197.263, -228.176, 0.96", "-137.726, -198.774, -231.955, 0.22", "-137.864, -198.949, -232.384, 0.81", "-138.147, -199.28, -233.16, 0.81", "-138.69, -199.859, -234.465, 0.22", "-139.292, -200.462, -235.747, 1.47", "-139.998, -201.147, -237.102, 1.62", "-141.881, -202.97, -240.312, 0.15", "-142.333, -203.405, -241.065, 0.15", "-142.777, -203.86, -241.8, 0.96", "-143.012, -204.113, -242.19, 0.96", "-143.362, -204.52, -242.753, 0.22", "-143.645, -204.893, -243.167, 1.11", "-144.08, -205.699, -243.792, 1.11", "-145.021, -207.262, -245.299, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-10.8895, -34.5983, 0.856652, 2.8", "-10.7677, -35.0234, 1.0249, 2.8", "-10.378, -36.3835, 1.56316, 1.84", "-9.98904, -37.7413, 2.10052, 1.03", "-9.80304, -38.3904, 2.35743, 1.03", "-9.56356, -39.2262, 2.68819, 1.18", "-9.35129, -39.9671, 2.98139, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.80023, 13.6948, -0.232987, 0.81", "8.57961, 13.9479, 0.325031, 0.81", "9.01282, 14.1165, 0.709798, 0.37", "9.68786, 14.4069, 1.34554, 0.88", "10.2642, 14.6816, 1.89467, 1.25", "11.0391, 15.0878, 2.62752, 1.25", "11.4031, 15.297, 2.95995, 1.11", "12.4144, 16.0035, 3.91394, 1.11", "12.7143, 16.2353, 4.17186, 1.11", "13.0877, 16.5321, 4.42866, 0.96", "13.9182, 17.1715, 4.83335, 0.66", "14.5778, 17.636, 5.05, 0.74", "15.2852, 18.069, 5.20519, 0.88", "16.0823, 18.4683, 5.29002, 0.96", "16.8732, 18.7725, 5.30412, 0.74", "17.7552, 19.0082, 5.24836, 1.62", "18.5685, 19.1368, 5.13356, 1.84", "19.24, 19.1793, 5.00526, 1.69", "20.0143, 19.188, 4.81805, 1.62", "21.2296, 19.1841, 4.52126, 0.88", "21.883, 19.2208, 4.37255, 0.74", "22.6891, 19.3202, 4.22061, 0.74", "23.5206, 19.4959, 4.10348, 0.96", "24.2276, 19.7107, 4.06404, 0.81", "25.1429, 20.0738, 4.10923, 0.74", "26.323, 20.6203, 4.39509, 1.25", "26.8206, 20.8721, 4.60243, 1.47", "27.3028, 21.1299, 4.94868, 1.77", "27.657, 21.3339, 5.29502, 1.77", "28.1053, 21.5915, 5.86426, 1.11", "29.0195, 22.0407, 7.16909, 1.03", "29.5711, 22.2649, 8.00106, 1.18", "30.6929, 22.6634, 9.69884, 1.4", "31.0173, 22.758, 10.1814, 1.55", "32.1305, 22.9714, 11.7324, 1.4", "32.8611, 23.0377, 12.6292, 1.84", "33.2422, 23.0356, 13.0024, 2.43", "33.6847, 23.0036, 13.333, 2.43", "34.2561, 22.935, 13.6384, 2.21", "35.781, 22.724, 14.3039, 0.96", "36.5835, 22.6393, 14.5817, 0.66", "37.168, 22.6174, 14.7737, 0.66", "37.8116, 22.6204, 14.9859, 0.66", "38.452, 22.6593, 15.182, 0.66", "39.327, 22.7803, 15.4378, 0.66", "40.2602, 23.0077, 15.6809, 1.03", "41.0547, 23.2839, 15.8915, 0.59", "41.9073, 23.6391, 16.104, 0.59", "42.4918, 23.9231, 16.2413, 0.96", "43.2388, 24.3393, 16.4048, 0.66", "43.9315, 24.7887, 16.5274, 0.66", "44.851, 25.4547, 16.6569, 1.33", "45.0206, 25.5917, 16.6772, 1.55", "45.3286, 25.8679, 16.7001, 1.69", "45.6996, 26.2199, 16.7226, 1.4", "46.1632, 26.6775, 16.7277, 1.11", "46.4769, 26.9914, 16.7383, 1.11", "54.1731, 30.6255, 22.1318, 1.11", "61.9874, 33.8174, 27.6672, 1.11", "69.9698, 37.6664, 32.4474, 1.11", "77.1757, 41.8509, 38.064, 1.11", "84.9905, 44.8403, 43.7239, 1.11", "92.8705, 47.8101, 49.305, 1.11", "100.795, 52.0931, 53.7601, 1.11", "108.935, 56.1897, 58.0203, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.80023, 13.6948, -0.232987, 2.95", "7.86664, 15.4233, -0.121417, 2.95", "7.92891, 17.0443, -0.0167955, 2.95", "7.97855, 18.3363, 0.0665983, 2.95", "8.00855, 19.1172, 0.117001, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.4703, 35.0492, -0.918402, 0.37", "30.5123, 47.7112, -0.918402, 0.37", "38.5543, 60.3732, -0.918402, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-20.386, -15.2195, 5.07568, 0.59", "-20.369, -16.3475, 5.67021, 0.59", "-20.3901, -17.0998, 6.18921, 0.52", "-20.4262, -17.6429, 6.60495, 0.88", "-20.4814, -18.2306, 7.07784, 1.03", "-20.5231, -18.6736, 7.43426, 1.03", "-20.5828, -19.3095, 7.94593, 0.52", "-20.716, -20.1637, 8.73802, 1.11", "-20.7794, -20.4566, 9.0596, 1.4", "-20.8626, -20.7706, 9.45116, 1.4", "-20.9043, -28.5137, 16.4086, 1.4", "-21.5665, -35.3594, 24.308, 1.4", "-22.3982, -41.6405, 32.6962, 1.4" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.386, -15.2195, 5.07568, 0.29", "-21.7892, -14.88, 5.00124, 0.29", "-22.9884, -14.5899, 4.93762, 0.59", "-23.4122, -14.4873, 4.91513, 0.81", "-23.9775, -14.3506, 4.88515, 0.81", "-24.8596, -14.1372, 4.83835, 0.29", "-25.3913, -14.0085, 4.81014, 0.59", "-35.2781, -9.61254, 5.88273, 0.59", "-43.9248, -3.84885, 8.83108, 0.59", "-52.5125, 2.42974, 10.5256, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.35129, -39.9671, 2.98139, 0.59", "-8.92001, -40.8515, 4.11528, 0.59", "-8.53548, -41.6866, 5.14165, 0.44", "-8.36907, -41.9963, 5.54304, 0.44", "-8.00281, -42.6036, 6.38452, 0.81", "-7.71782, -43.0239, 6.98577, 1.25", "-7.50181, -43.3077, 7.4192, 1.47", "-7.27828, -43.5657, 7.8614, 1.47", "-6.36631, -44.5785, 9.61567, 0.74", "-5.39273, -45.5248, 11.3984, 0.37", "-5.113, -45.7537, 11.8698, 0.37", "-4.70985, -46.0393, 12.523, 0.81", "-4.32174, -46.2886, 13.143, 0.96", "0.436461, -49.888, 20.9405, 0.96", "4.8305, -55.1965, 27.8279, 0.96", "10.7655, -58.6352, 34.8588, 0.96", "16.4707, -62.2095, 42.0054, 0.96", "23.2176, -66.0487, 47.9994, 0.96", "30.9437, -67.9607, 53.813, 0.96", "38.1074, -69.0716, 60.5034, 0.96", "45.612, -71.3843, 66.449, 0.96", "53.9355, -74.2721, 70.8196, 0.96", "61.6072, -76.449, 76.6049, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-9.35129, -39.9671, 2.98139, 1.11", "-9.74197, -40.7595, 2.98187, 1.11", "-10.1145, -41.711, 3.10357, 1.11", "-10.485, -42.9088, 3.35243, 1.11", "-10.6526, -43.6271, 3.54669, 0.96", "-10.747, -44.1518, 3.71605, 0.96", "-10.9151, -45.5185, 4.23058, 1.11", "-10.9277, -46.2258, 4.55769, 1.25", "-10.877, -46.8679, 4.90117, 1.25", "-10.7608, -47.6281, 5.34443, 1.03", "-10.639, -48.35, 5.7506, 1.03", "-10.5227, -49.2931, 6.22025, 1.18", "-10.5064, -49.7717, 6.4004, 1.77", "-10.5397, -50.2308, 6.53956, 2.28", "-10.6261, -50.7132, 6.6525, 2.14", "-10.8364, -51.4765, 6.77645, 1.62", "-11.098, -52.2645, 6.86237, 1.03", "-11.4267, -53.1437, 6.93083, 0.74", "-11.7707, -54.0387, 7.01376, 0.96", "-12.1701, -55.0893, 7.12915, 1.25", "-12.567, -56.1688, 7.29684, 1.62", "-12.7665, -56.7516, 7.40879, 1.55", "-12.919, -57.2226, 7.51583, 1.69", "-13.2773, -58.3135, 7.81127, 1.18", "-13.5311, -59.0843, 8.06109, 1.03", "-13.7765, -59.7907, 8.32861, 1.33", "-13.9703, -60.3201, 8.54658, 1.62", "-14.1359, -60.7464, 8.72034, 1.62", "-14.3596, -61.3406, 8.94656, 1.77", "-14.5108, -61.7831, 9.08782, 1.77", "-14.7098, -62.4866, 9.29288, 1.55", "-14.8645, -63.141, 9.47966, 1.25", "-15.0179, -63.967, 9.67183, 0.81", "-15.1655, -65.0599, 9.84468, 0.81", "-15.245, -65.9042, 9.95932, 1.03", "-15.3069, -66.9244, 10.1051, 1.03", "-15.3137, -67.5288, 10.1981, 1.18", "-15.2784, -68.7665, 10.4013, 0.29", "-15.2441, -69.4454, 10.5126, 0.37", "-15.2074, -70.5695, 10.6916, 0.37", "-15.1837, -71.3567, 10.8283, 0.29", "-15.1691, -71.9096, 10.9217, 0.29", "-15.1533, -72.4496, 11.042, 0.29", "-15.1495, -72.9427, 11.2384, 0.29", "-15.1639, -73.5559, 11.4973, 0.22", "-15.1356, -81.5759, 14.0172, 0.22", "-15.7886, -89.2938, 17.369, 0.22", "-16.1271, -96.9165, 21.0028, 0.22", "-16.0301, -103.617, 26.2989, 0.22", "-15.2246, -110.62, 31.0776, 0.22", "-15.0317, -117.487, 36.13, 0.22", "-15.6117, -125.174, 39.5747, 0.22", "-16.7157, -132.294, 44.0832, 0.22", "-18.5005, -139.05, 48.9773, 0.22", "-18.444, -145.998, 53.9087, 0.22", "-17.2457, -152.573, 59.2485, 0.22", "-16.1815, -158.022, 65.8666, 0.22", "-13.6613, -164.101, 71.3958, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.00855, 19.1172, 0.117001, 0.66", "7.44881, 19.7953, 0.202231, 0.66", "7.12549, 20.2726, 0.26067, 0.29", "6.99255, 20.4966, 0.289323, 0.44", "6.61852, 21.2133, 0.381952, 0.44", "6.22567, 22.0302, 0.489477, 0.81", "6.07023, 22.3711, 0.535322, 0.96", "5.88711, 22.8323, 0.599666, 0.81", "5.76036, 23.1297, 0.647454, 1.03", "5.53045, 23.571, 0.72399, 1.18", "5.20555, 24.0287, 0.815792, 0.66", "4.6439, 24.5399, 0.947072, 0.22", "4.22367, 24.7938, 1.03256, 0.22", "3.76608, 24.9682, 1.11582, 0.22", "3.17509, 25.1278, 1.21687, 0.66", "2.78632, 25.2061, 1.28218, 0.81", "2.47356, 25.2625, 1.3319, 0.66", "2.02242, 25.351, 1.39822, 0.52", "1.31958, 25.54, 1.49863, 0.44", "0.687815, 25.7494, 1.57057, 0.52", "0.220022, 25.9295, 1.59835, 0.88", "-0.22477, 26.1267, 1.58928, 1.11", "-0.578999, 26.3016, 1.56022, 1.11", "-0.953563, 26.5053, 1.49229, 0.96", "-1.52094, 26.8362, 1.33496, 0.37", "-2.14866, 27.2283, 1.1079, 0.29", "-2.66174, 27.574, 0.899847, 0.88", "-2.91232, 27.7597, 0.798363, 1.03", "-3.37629, 28.1393, 0.596009, 1.03", "-3.50715, 28.2595, 0.535588, 1.03", "-4.06067, 28.8449, 0.288878, 0.29", "-4.30707, 29.1476, 0.163734, 0.29", "-4.69984, 29.6673, -0.0592526, 0.96", "-4.97213, 30.0265, -0.22396, 1.11", "-5.12922, 30.2311, -0.314881, 1.11", "-5.36288, 30.5226, -0.450023, 0.66", "-5.90253, 31.1782, -0.753183, 0.29", "-6.23178, 31.5539, -0.935729, 0.29", "-6.61096, 31.9627, -1.11596, 0.66", "-6.85447, 32.2069, -1.21587, 0.88", "-7.07808, 32.4187, -1.29876, 1.03", "-7.42897, 32.7405, -1.41642, 0.74", "-7.87935, 33.1402, -1.5326, 0.44", "-8.42375, 33.6214, -1.66432, 0.22", "-8.94038, 34.0779, -1.78953, 0.44", "-9.20735, 34.3115, -1.84832, 0.59", "-9.41382, 34.5018, -1.86224, 0.59", "-9.82394, 34.9132, -1.79778, 0.29", "-10.2369, 35.3808, -1.61906, 0.59", "-10.4706, 35.6742, -1.45639, 0.59", "-10.6354, 35.878, -1.30355, 0.59", "-11.3809, 36.7259, -0.543452, 1.69", "-11.7408, 37.1156, -0.139757, 2.14", "-11.9617, 37.3495, 0.121999, 2.36", "-12.1334, 37.5233, 0.329412, 2.36", "-12.9073, 38.2526, 1.22765, 0.29", "-13.3586, 38.6397, 1.71374, 0.22", "-13.9826, 39.1227, 2.3235, 0.74", "-14.2495, 39.3215, 2.57472, 0.96", "-14.4051, 39.44, 2.72522, 0.96", "-14.9442, 39.8795, 3.24421, 0.22", "-15.4485, 40.3463, 3.73234, 0.81", "-15.537, 40.4341, 3.81401, 1.18", "-15.8601, 40.7476, 4.09391, 1.18", "-15.9875, 40.8722, 4.20334, 1.18", "-16.3797, 41.2699, 4.52106, 0.15", "-16.5511, 41.465, 4.64764, 0.37", "-16.7064, 41.6793, 4.74824, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.00855, 19.1172, 0.117001, 2.8", "8.98793, 20.5753, 0.464995, 2.8", "9.60073, 21.4877, 0.682733, 2.8", "10.1239, 22.2666, 0.868626, 2.95", "10.6912, 23.1112, 1.07019, 3.68", "11.0818, 23.6927, 1.20896, 3.9", "11.4523, 24.2443, 1.3406, 4.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-22.3982, -41.6405, 32.6962, 0.66", "-22.679, -48.0189, 37.8499, 0.66", "-21.6068, -54.2847, 43.0717, 0.66", "-22.1033, -59.6604, 49.3478, 0.66", "-23.4356, -64.3808, 56.0645, 0.66", "-25.1692, -68.7741, 62.9325, 0.66", "-26.281, -73.9601, 69.3003, 0.66", "-28.0305, -77.8265, 76.5099, 0.66", "-29.2462, -82.3124, 83.4257, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-22.3982, -41.6405, 32.6962, 0.59", "-23.144, -47.7971, 40.1451, 0.66", "-24.0545, -54.3067, 47.2399, 0.66", "-25.4502, -61.6114, 53.3541, 0.66", "-27.6918, -69.0702, 59.0195, 0.66", "-27.7994, -77.4928, 63.5186, 0.66", "-27.3634, -84.6055, 69.9842, 0.66", "-27.3331, -91.7917, 76.38, 0.66", "-28.1681, -99.5892, 81.902, 0.66", "-28.3031, -106.943, 88.0884, 0.66", "-27.974, -113.573, 95.0973, 0.66", "-27.2118, -121.133, 100.952, 0.66", "-26.1006, -127.351, 108.283, 0.66", "-23.6571, -134.614, 114.078, 0.66", "-22.4809, -143.122, 118.227, 0.66", "-20.3799, -150.849, 123.485, 0.66", "-19.2565, -159.1, 128.165, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-52.5125, 2.42974, 10.5256, 0.59", "-60.1243, 6.64197, 11.82, 0.59", "-67.5162, 11.3438, 12.2847, 0.59", "-75.4102, 14.7379, 14.3193, 0.59", "-83.413, 18.249, 15.572, 0.59", "-90.2386, 23.1693, 17.9704, 0.59", "-97.28, 28.0854, 19.6667, 0.59", "-102.743, 34.0788, 22.7328, 0.59", "-107.509, 40.766, 25.3416, 0.59", "-110.659, 48.2627, 27.9509, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-52.5125, 2.42974, 10.5256, 0.59", "-59.9364, 6.5517, 13.4427, 0.59", "-67.5837, 10.9181, 15.1654, 0.59", "-75.7294, 14.7084, 15.7989, 0.59", "-83.894, 18.499, 15.3727, 0.59", "-91.2491, 23.5047, 14.3601, 0.59", "-98.9539, 27.9061, 12.9246, 0.59", "-106.055, 32.8897, 10.6721, 0.59", "-113.793, 36.3602, 7.55567, 0.59", "-121.676, 39.4519, 4.36897, 0.59", "-130.004, 41.892, 1.75247, 0.59", "-138.422, 42.9088, -1.5077, 0.59", "-146.489, 44.4661, -5.37428, 0.59", "-154.725, 46.482, -8.60447, 0.59", "-163.446, 47.5556, -10.9084, 0.59", "-172.196, 47.8377, -13.3391, 0.59", "-181.035, 49.346, -14.7612, 0.59", "-190.021, 50.1875, -15.7944, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.4523, 24.2443, 1.3406, 2.36", "11.5674, 24.4395, 1.81797, 2.36", "11.612, 24.5649, 2.19344, 1.99", "11.6232, 24.6299, 2.40459, 1.84", "11.619, 24.8303, 3.07932, 1.55", "11.5722, 25.0384, 3.80897, 2.06", "11.4785, 25.2588, 4.57685, 2.43", "11.3443, 25.3929, 5.12985, 2.58", "11.2861, 25.4278, 5.30641, 2.36", "11.1897, 25.4673, 5.54807, 2.21", "11.0129, 25.5216, 5.91399, 2.06", "10.8646, 25.5641, 6.19495, 1.25", "10.4885, 25.6998, 6.93494, 1.55", "10.2676, 25.8162, 7.42126, 1.18", "10.1655, 25.8938, 7.70594, 1.47", "10.093, 25.981, 7.98104, 2.14", "10.0538, 26.0801, 8.23654, 1.84", "10.0552, 26.2146, 8.50903, 1.47", "10.1247, 26.4132, 8.7595, 0.88", "10.2541, 26.6549, 8.97617, 0.52", "10.3358, 26.7801, 9.06448, 0.22", "10.4424, 26.9176, 9.15007, 0.22", "10.5386, 27.0285, 9.20926, 0.59", "10.6004, 27.0909, 9.23994, 0.66", "10.7133, 27.2029, 9.29189, 0.22", "10.8203, 27.348, 9.32705, 0.44", "10.2841, 28.0395, 12.0398, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.4523, 24.2443, 1.3406, 0.96", "10.7497, 26.5782, -0.607123, 0.96", "10.5675, 27.2268, -1.17622, 1.33", "10.4798, 27.5643, -1.47213, 1.55", "10.4029, 27.8601, -1.73144, 1.77", "10.2852, 28.3128, -2.12835, 1.92", "10.1114, 28.9807, -2.71401, 0.96", "9.93252, 30.0151, -3.46174, 1.11", "9.89675, 30.2115, -3.61837, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.2841, 28.0395, 12.0398, 0.44", "11.0003, 30.123, 19.3609, 0.44", "12.3211, 33.6629, 25.9495, 0.44", "14.5993, 38.3732, 31.3977, 0.44", "18.5261, 42.9773, 35.9836, 0.44", "21.7573, 47.4064, 41.228, 0.44", "24.4515, 50.7333, 47.5382, 0.44", "27.7917, 54.5592, 53.2126, 0.44", "31.2459, 58.3534, 58.8441, 0.44", "33.7024, 62.8224, 64.4385, 0.44", "36.4009, 67.2125, 69.9955, 0.44", "37.7859, 72.6877, 74.9133, 0.44", "40.7789, 77.8425, 79.5398, 0.44", "44.863, 82.8382, 83.5138, 0.44", "48.129, 88.088, 87.8413, 0.44", "50.4502, 93.4873, 92.5262, 0.44", "52.5841, 98.8872, 97.2915, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.2841, 28.0395, 12.0398, 0.44", "9.99245, 30.2192, 18.9051, 0.44", "8.94247, 32.4756, 25.6643, 0.44", "8.36468, 34.494, 32.5655, 0.44", "6.95312, 35.6216, 39.5724, 0.44", "4.42904, 36.2473, 46.3331, 0.44", "3.22413, 37.2424, 53.4019, 0.44", "2.8461, 38.4592, 60.5257, 0.44", "2.80451, 40.201, 67.5368, 0.44", "1.77413, 40.6527, 74.6977, 0.44", "-0.213912, 40.5741, 81.6722, 0.44", "-1.18905, 40.934, 88.8472, 0.44", "-1.57861, 41.4579, 96.0666, 0.44", "-1.72601, 42.1828, 103.275, 0.44", "-2.23575, 43.8102, 110.297, 0.44", "-3.18434, 45.8095, 117.162, 0.44", "-4.94666, 49.0436, 123.295, 0.44", "-7.53596, 52.1903, 129.175, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.89675, 30.2115, -3.61837, 0.66", "10.0913, 30.0371, -4.81961, 0.66", "10.5128, 29.7708, -6.49174, 0.88", "10.9192, 29.6104, -7.78849, 1.11", "11.279, 29.5301, -8.78073, 1.25", "11.4634, 29.5134, -9.24732, 1.47", "11.7754, 29.5252, -9.9892, 1.18", "12.0741, 29.5921, -10.5237, 0.66", "12.6987, 29.9921, -11.3343, 0.52", "12.9685, 30.26, -11.6337, 0.66", "13.1887, 30.5107, -11.8821, 0.66", "13.4515, 30.8373, -12.2199, 0.37", "13.8643, 31.2965, -12.7548, 0.37", "14.2189, 31.5572, -13.1987, 1.18", "14.6282, 31.6855, -13.6281, 1.77", "15.2162, 31.753, -14.2054, 1.92", "15.5745, 31.7529, -14.5295, 1.69", "16.2032, 31.7153, -15.0479, 0.66", "16.9152, 31.6832, -15.613, 0.52", "17.4332, 31.6947, -16.0475, 0.37", "17.8586, 31.7473, -16.4217, 0.37", "18.4004, 31.8801, -16.9342, 0.29", "18.7442, 32.0122, -17.3057, 0.29", "19.4212, 32.3988, -18.1275, 0.59", "19.7779, 32.7009, -18.6683, 1.55", "19.9348, 32.8616, -18.9563, 1.77", "20.2219, 33.1518, -19.5237, 1.92", "20.3801, 33.2925, -19.8436, 2.06", "20.4946, 33.3682, -20.0761, 2.06", "21.3659, 33.7853, -21.9345, 0.29", "21.562, 33.862, -22.3659, 0.29", "21.8767, 33.9675, -23.0644, 0.29", "22.0953, 34.0292, -23.5339, 0.29", "22.729, 34.1985, -24.91, 1.18", "23.2324, 34.3536, -26.0306, 1.47", "23.3994, 34.4449, -26.4605, 1.69", "23.5144, 34.5366, -26.7956, 1.92", "23.587, 34.5999, -27.0283, 2.14", "23.6983, 34.6823, -27.3727, 2.14", "23.9432, 34.8058, -28.0754, 2.14", "24.6834, 35.0242, -30.0348, 1.03", "25.0867, 35.107, -31.1216, 0.29", "25.4833, 35.1621, -32.2212, 0.52", "25.6969, 35.1768, -32.7868, 0.81", "25.9013, 35.1792, -33.321, 0.81", "26.1287, 35.1698, -33.8859, 0.52", "26.4351, 35.1645, -34.6012, 0.74", "26.73, 35.2141, -35.304, 0.81", "27.0241, 35.3285, -36.0128, 1.69", "27.4785, 35.559, -37.0201, 2.06", "27.724, 35.6857, -37.4972, 2.43", "28.3673, 35.983, -38.5923, 1.11", "28.8352, 36.1583, -39.2607, 0.96", "29.3157, 36.3226, -39.844, 1.03", "30.0338, 36.573, -40.634, 0.29", "30.4943, 36.7325, -41.0758, 0.37", "30.9062, 36.8859, -41.4407, 0.37", "31.3027, 37.0577, -41.7725, 0.22", "31.6062, 37.2102, -42.048, 0.22", "32.0745, 37.4773, -42.5249, 0.22", "32.3382, 37.67, -42.855, 0.22", "32.5552, 37.8578, -43.1679, 0.22", "33.0906, 38.3412, -43.9624, 1.62", "33.5104, 38.698, -44.5613, 2.5", "33.7118, 38.8515, -44.8278, 2.73", "34.1253, 39.1336, -45.3334, 2.14", "35.2598, 39.8717, -46.6946, 0.22", "35.5354, 40.0448, -47.0274, 0.22", "35.8611, 40.2517, -47.4307, 0.44", "36.0074, 40.3487, -47.6141, 0.44", "36.448, 40.6693, -48.179, 0.29", "36.7654, 40.9085, -48.5981, 0.74", "37.0369, 41.1113, -48.9752, 0.74", "37.6217, 41.5348, -49.8079, 0.22", "37.9874, 41.7951, -50.3331, 0.22", "38.6488, 42.255, -51.3088, 1.84", "38.9632, 42.4608, -51.7629, 2.14", "39.7294, 42.9342, -52.9029, 0.29", "39.9774, 43.0668, -53.3016, 0.44", "40.189, 43.1655, -53.6735, 0.44", "40.6462, 43.3603, -54.5806, 0.29", "41.0585, 43.5179, -55.5036, 1.84", "41.4299, 43.6891, -56.5, 2.14", "41.9725, 43.9952, -58.2744, 0.29", "42.2894, 44.2006, -59.3507, 0.81", "42.5456, 44.3662, -60.1866, 0.81", "42.7515, 44.4977, -60.817, 0.52", "43.3044, 44.8734, -62.448, 0.52", "43.5349, 45.0369, -63.043, 0.81", "44.2022, 45.5268, -64.516, 2.14", "44.4332, 45.6829, -64.9531, 2.65", "44.5881, 45.7801, -65.2048, 2.65", "45.7552, 46.4475, -66.8256, 0.29", "46.1164, 46.648, -67.2608, 0.22", "46.5252, 46.8974, -67.7363, 0.96", "46.808, 47.0925, -68.067, 1.18", "47.176, 47.3649, -68.4946, 0.96", "47.6511, 47.7212, -69.0, 0.22", "48.0995, 48.0494, -69.3828, 0.22", "48.4161, 48.2727, -69.6405, 0.22", "49.0848, 48.6817, -70.1829, 1.4", "49.4847, 48.915, -70.5037, 1.84", "49.576, 48.9686, -70.577, 2.06", "49.9104, 49.1542, -70.8459, 1.99", "50.4258, 49.4137, -71.255, 0.88", "51.2439, 49.8245, -71.8859, 0.22", "51.604, 50.0083, -72.14, 0.29", "51.9869, 50.1908, -72.3767, 0.29", "52.3593, 50.3495, -72.595, 0.29", "52.5824, 50.4329, -72.7208, 0.66", "52.8965, 50.5304, -72.8833, 0.66", "53.1687, 50.599, -73.0178, 0.66", "53.6545, 50.6914, -73.2688, 0.22", "54.0875, 50.7585, -73.4974, 0.22", "54.7421, 50.8615, -73.8499, 1.33", "55.3722, 50.9645, -74.2058, 2.14", "55.6855, 51.0239, -74.3929, 2.28", "56.0621, 51.1074, -74.6258, 1.99" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.89675, 30.2115, -3.61837, 0.59", "8.31092, 31.2709, -4.61219, 0.59", "7.88089, 31.5275, -4.94834, 0.96", "7.46762, 31.7412, -5.26558, 0.96", "7.04154, 31.9248, -5.65441, 0.81", "6.15236, 32.2884, -6.62323, 0.59", "5.81615, 32.4503, -7.02743, 0.81", "5.44727, 32.6577, -7.55401, 0.81", "5.22489, 32.8201, -7.90768, 0.74", "4.62746, 33.4306, -8.96891, 0.74", "4.26617, 34.0036, -9.69956, 0.74", "4.01104, 34.7499, -10.3396, 0.52", "3.94212, 35.2807, -10.6658, 0.66", "3.96242, 36.1214, -10.9644, 0.96", "4.04621, 36.7116, -11.0666, 0.88", "4.17288, 37.2507, -11.0558, 0.44", "4.34145, 37.8026, -10.9738, 0.29", "4.57746, 38.4277, -10.8021, 0.29", "4.85537, 39.1224, -10.5661, 0.88", "5.01392, 39.5284, -10.4129, 1.11", "5.1602, 39.9484, -10.2478, 1.18", "5.27452, 40.3621, -10.0944, 0.88", "5.47346, 41.3766, -9.78589, 0.37", "5.54566, 41.9773, -9.65412, 0.29", "5.59157, 42.7935, -9.58216, 0.29", "5.57733, 43.3457, -9.57865, 0.29", "5.49389, 44.3017, -9.74761, 1.25", "5.42217, 44.9235, -9.9555, 1.77", "5.39127, 45.2162, -10.0968, 1.92", "5.35083, 45.7978, -10.4092, 1.92", "5.34008, 46.3629, -10.729, 1.11", "5.40666, 47.7004, -11.5179, 0.44", "5.46297, 48.3076, -11.8633, 0.66", "5.52815, 48.9492, -12.1672, 0.88", "5.58392, 49.4633, -12.3749, 1.11", "5.62967, 49.8778, -12.5158, 1.11", "5.6973, 50.4967, -12.7236, 0.66", "5.77064, 51.3945, -12.9743, 0.37", "5.85909, 52.5154, -13.278, 0.88", "5.91259, 53.0578, -13.4423, 1.47", "5.98988, 53.5693, -13.6075, 1.77", "6.12682, 54.1955, -13.8395, 1.92", "6.25434, 54.6004, -14.0261, 2.14", "6.50566, 55.1572, -14.3793, 2.14", "6.82136, 55.7547, -15.031, 1.62", "7.01739, 56.1417, -15.5938, 1.11", "7.22386, 56.627, -16.3971, 0.66", "7.3541, 57.0905, -17.2508, 0.81", "7.39993, 57.5069, -18.1039, 0.66", "7.31607, 58.6289, -20.6194, 0.81", "7.21106, 59.014, -21.4639, 0.74", "7.08128, 59.3107, -22.0952, 1.11", "6.74983, 59.8813, -23.218, 1.62", "6.40948, 60.3759, -24.1035, 1.69", "5.9891, 60.9307, -24.9629, 1.55", "5.55511, 61.5615, -25.7218, 0.37", "5.4184, 61.8332, -25.9937, 0.52", "5.28024, 62.2468, -26.3322, 0.66", "5.19265, 62.6355, -26.5815, 0.66", "5.10812, 63.1524, -26.8773, 0.22", "5.00785, 63.9076, -27.3596, 0.22", "4.86356, 65.038, -28.2076, 1.99", "4.77208, 65.6448, -28.6919, 2.43", "4.68179, 66.1579, -29.1158, 2.73", "4.58935, 66.5804, -29.4878, 2.95", "4.04537, 68.441, -31.2113, 0.52", "3.80523, 69.0263, -31.7907, 0.59", "3.62805, 69.3911, -32.1726, 1.11", "3.51061, 69.6286, -32.419, 1.25", "3.3121, 70.0524, -32.8136, 1.25", "3.03599, 70.6565, -33.3351, 0.22", "2.78834, 71.1873, -33.7759, 0.22", "2.56895, 71.6938, -34.2209, 0.37", "2.36936, 72.1673, -34.7012, 0.37", "2.04682, 72.9804, -35.534, 1.69", "1.80533, 73.5938, -36.1469, 2.28", "1.65311, 73.9603, -36.5161, 2.65", "1.44837, 74.4536, -36.9847, 2.65", "1.13667, 75.2161, -37.6816, 2.5", "0.661812, 76.4858, -38.7708, 0.29", "0.514875, 76.9777, -39.1704, 0.29", "0.418386, 77.4652, -39.543, 0.29", "0.342133, 78.047, -39.9739, 0.74", "0.291858, 78.6111, -40.3834, 0.96", "0.252822, 79.2709, -40.8813, 0.96", "0.207356, 79.7806, -41.3553, 0.29", "0.0849839, 80.5091, -42.0923, 0.22", "0.0239769, 80.7152, -42.3126, 0.22", "-0.0978491, 80.9857, -42.6321, 0.22", "-0.302384, 81.358, -43.0782, 0.22", "-0.885453, 82.3121, -44.3039, 2.28", "-1.12793, 82.7181, -44.8793, 2.43", "-1.30282, 83.0306, -45.3422, 2.65", "-1.97668, 84.4203, -47.4496, 0.59", "-2.15347, 84.8341, -48.0894, 0.52", "-2.44799, 85.5992, -49.2713, 0.59", "-2.73107, 86.4149, -50.4896, 0.37", "-2.83266, 86.7482, -50.9512, 0.52", "-2.92468, 87.1154, -51.4139, 0.66", "-2.99848, 87.4463, -51.7775, 0.66", "-3.08872, 87.8787, -52.189, 0.44", "-3.30044, 88.8969, -53.0261, 2.14", "-3.47711, 89.6898, -53.6366, 2.5", "-3.61911, 90.3252, -54.1264, 1.92", "-3.94096, 91.7698, -55.2278, 0.22", "-4.07382, 92.3832, -55.6773, 0.22", "-4.36889, 93.8137, -56.6767, 1.69", "-4.42552, 94.0885, -56.8491, 2.06", "-4.53918, 94.6679, -57.1611, 2.14", "-4.59968, 94.9825, -57.3078, 1.62", "-4.82718, 96.2965, -57.8676, 0.37", "-4.94858, 97.0064, -58.1706, 0.37", "-5.12873, 98.0907, -58.6207, 0.37", "-5.26607, 98.8658, -58.9573, 0.37", "-5.56027, 100.508, -59.6952, 1.69", "-5.65158, 101.001, -59.9246, 1.92", "-5.70629, 101.299, -60.0659, 1.92", "-5.88956, 102.314, -60.5588, 0.22", "-6.01059, 103.082, -60.9358, 0.22", "-6.08703, 103.742, -61.2299, 0.37", "-6.12408, 104.242, -61.4433, 0.37", "-6.15228, 104.823, -61.6757, 1.33", "-6.1554, 105.249, -61.8424, 1.84", "-6.14466, 105.715, -62.0125, 1.84", "-6.1022, 106.884, -62.4082, 0.29", "-6.09347, 107.609, -62.6383, 0.44", "-6.09618, 107.948, -62.7401, 0.59", "-6.1142, 108.49, -62.8855, 0.59", "-6.17684, 109.501, -63.1679, 0.22", "-6.2411, 110.226, -63.3905, 1.33", "-6.2865, 110.556, -63.5049, 1.77", "-6.34047, 110.889, -63.6177, 1.92", "-6.40119, 111.22, -63.7378, 1.4", "-6.73898, 112.786, -64.4652, 0.22", "-6.89067, 113.437, -64.8134, 0.22", "-7.11264, 114.408, -65.3716, 1.11", "-7.21219, 114.882, -65.6531, 1.55", "-7.30666, 115.376, -65.9451, 1.4", "-7.63886, 117.216, -67.0377, 0.29", "-7.72432, 117.702, -67.3066, 0.37", "-7.79557, 118.135, -67.5484, 0.44", "-7.87016, 118.656, -67.8379, 0.44", "-7.93461, 119.147, -68.0943, 0.22", "-7.97447, 119.596, -68.3074, 0.22", "-8.02233, 120.586, -68.7281, 1.33", "-8.04941, 121.128, -69.0387, 1.55", "-8.06912, 121.43, -69.2488, 1.55", "-8.17729, 122.745, -70.3507, 0.22", "-8.26041, 123.538, -71.167, 0.22", "-8.31164, 123.96, -71.6519, 0.66", "-8.51466, 125.332, -73.4607, 0.44", "-8.61659, 126.032, -74.544, 1.4", "-8.71294, 126.625, -75.5218, 1.77", "-8.90801, 127.647, -77.3685, 1.33", "-9.00116, 128.062, -78.1577, 1.62", "-9.26093, 129.19, -80.3559, 0.74", "-9.66691, 131.161, -84.157, 2.58" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "56.0621, 51.1074, -74.6258, 0.44", "57.0287, 51.125, -75.4039, 0.44", "57.6141, 51.161, -75.8979, 0.37", "58.333, 51.219, -76.5154, 0.29", "58.7662, 51.2529, -76.9183, 0.59", "59.5687, 51.2908, -77.7716, 0.29", "60.1137, 51.3223, -78.3668, 0.96", "60.5072, 51.3815, -78.8156, 1.25", "60.8329, 51.4435, -79.1878, 1.33", "61.6334, 51.6039, -80.0978, 0.22", "62.6145, 51.8186, -81.2436, 0.22", "63.1294, 51.9344, -81.8439, 0.37", "63.8489, 52.1033, -82.6648, 0.22", "64.4498, 52.26, -83.3002, 1.18", "64.8745, 52.3852, -83.7193, 1.4", "65.2665, 52.5117, -84.0578, 1.4", "65.8352, 52.6986, -84.488, 0.44", "66.5437, 52.8965, -84.998, 0.22", "66.9492, 52.9997, -85.2865, 0.52", "67.2645, 53.0827, -85.5201, 0.52", "68.2729, 53.3701, -86.2542, 0.22", "68.8987, 53.5448, -86.7059, 0.81", "69.5112, 53.7026, -87.1898, 1.25", "70.2286, 53.8605, -87.7774, 1.25", "71.3353, 54.0514, -88.686, 0.22", "71.8557, 54.13, -89.1226, 0.59", "72.2617, 54.1803, -89.4689, 0.74", "73.5848, 54.2579, -90.63, 0.22", "74.2496, 54.2613, -91.2167, 0.22", "75.2364, 54.2132, -92.0408, 1.25", "75.7684, 54.1671, -92.4828, 1.62", "75.9581, 54.1523, -92.6461, 1.62", "77.6844, 54.0303, -94.1244, 0.22", "78.1683, 53.9901, -94.5343, 0.22", "78.9455, 53.9134, -95.225, 1.03", "79.4552, 53.8456, -95.6958, 1.25", "80.614, 53.6624, -96.7707, 0.22", "81.0801, 53.5846, -97.2288, 0.22", "81.4268, 53.5271, -97.5965, 0.66", "82.2664, 53.3596, -98.5793, 0.22", "82.7927, 53.2374, -99.2839, 0.22", "83.2083, 53.1273, -99.8839, 0.74", "83.5837, 53.0378, -100.452, 0.96", "84.2441, 52.9245, -101.459, 0.22", "85.0329, 52.8359, -102.613, 1.33", "85.4683, 52.8062, -103.215, 1.77", "85.7101, 52.8008, -103.528, 1.77", "87.1601, 52.7873, -105.281, 0.22", "87.4768, 52.7854, -105.639, 0.22", "87.8581, 52.7914, -106.056, 0.74", "88.2005, 52.8054, -106.414, 0.74", "89.097, 52.8438, -107.333, 0.22", "89.5444, 52.8703, -107.802, 1.03", "89.8725, 52.9016, -108.154, 1.33", "90.2572, 52.955, -108.551, 1.47", "91.4598, 53.1525, -109.722, 0.15", "91.8188, 53.2185, -110.041, 0.29", "92.1833, 53.2925, -110.311, 0.29", "93.0656, 53.4624, -110.794, 0.15", "93.8235, 53.6167, -111.082, 0.66", "94.1326, 53.6822, -111.16, 0.74", "94.3776, 53.7372, -111.191, 0.74", "95.5967, 53.9773, -111.299, 0.15", "96.8678, 54.2099, -111.395, 0.15", "97.755, 54.3618, -111.458, 1.03", "98.1753, 54.4333, -111.497, 1.18", "98.4777, 54.4807, -111.534, 1.18", "100.124, 54.7125, -111.786, 0.15", "100.747, 54.7986, -111.911, 0.81", "101.162, 54.8646, -112.019, 1.11", "101.523, 54.9251, -112.121, 1.11", "104.093, 55.4076, -112.94, 0.22", "104.93, 55.5708, -113.201, 0.88", "105.444, 55.6802, -113.353, 0.74", "106.773, 55.9516, -113.697, 0.22", "107.288, 56.0526, -113.814, 0.59", "107.884, 56.175, -113.925, 0.74", "109.406, 56.5295, -114.114, 0.22", "110.107, 56.6784, -114.18, 1.47", "110.824, 56.8048, -114.226, 1.77", "111.305, 56.8705, -114.254, 1.77", "113.246, 57.1091, -114.335, 0.22", "114.11, 57.2124, -114.367, 0.66", "114.685, 57.2857, -114.407, 0.88", "115.873, 57.4177, -114.457, 0.22", "116.455, 57.487, -114.475, 0.44", "117.655, 57.6321, -114.47, 0.22", "117.833, 57.6524, -114.46, 0.81", "118.18, 57.7144, -114.438, 0.81", "119.849, 58.1912, -114.332, 0.22", "120.655, 58.4691, -114.304, 1.03", "120.923, 58.5684, -114.303, 1.33", "121.336, 58.7239, -114.319, 1.33", "123.385, 59.4849, -114.589, 0.22", "124.353, 59.8227, -114.818, 0.22", "125.361, 60.1306, -115.174, 1.03", "125.787, 60.2335, -115.361, 1.33", "126.141, 60.2904, -115.541, 1.33", "127.679, 60.4048, -116.407, 0.22", "128.699, 60.3839, -117.034, 0.22", "129.66, 60.3166, -117.615, 0.74", "130.219, 60.2667, -117.917, 0.88", "131.46, 60.1327, -118.48, 0.22", "132.075, 60.0524, -118.701, 0.22", "132.393, 60.0012, -118.772, 0.66", "132.659, 59.9478, -118.831, 0.66", "133.756, 59.7015, -119.104, 0.22", "134.439, 59.5392, -119.296, 0.88", "134.61, 59.4969, -119.352, 1.18", "134.806, 59.4459, -119.425, 1.18", "136.578, 58.9568, -120.099, 0.22", "137.355, 58.7385, -120.4, 0.44", "137.662, 58.654, -120.519, 0.29", "138.175, 58.5531, -120.779, 0.29", "139.035, 58.4729, -121.292, 0.96", "139.451, 58.4734, -121.591, 1.18", "139.784, 58.5003, -121.856, 1.18", "140.076, 58.5264, -122.094, 0.88", "142.075, 58.7609, -123.838, 0.22", "142.444, 58.8188, -124.186, 0.81", "142.781, 58.8807, -124.522, 0.81", "143.824, 59.0041, -125.542, 0.22", "144.297, 59.046, -126.001, 0.22", "145.093, 59.0899, -126.753, 1.03", "145.567, 59.104, -127.175, 1.11", "146.841, 59.1728, -128.395, 0.22", "147.639, 59.2569, -129.198, 0.22", "148.428, 59.3788, -130.075, 0.96", "148.841, 59.4472, -130.556, 1.18", "150.157, 59.7008, -132.142, 0.22", "150.77, 59.8486, -132.918, 0.22", "151.334, 60.0221, -133.675, 1.11", "151.723, 60.1775, -134.253, 1.33", "151.821, 60.218, -134.417, 1.47", "152.267, 60.4298, -135.248, 1.18", "152.884, 60.793, -136.589, 0.15", "153.142, 60.9517, -137.192, 0.59", "153.534, 61.1854, -138.15, 0.81", "154.073, 61.5037, -139.457, 0.22", "154.401, 61.7245, -140.282, 1.03", "154.659, 61.9299, -140.974, 1.25", "155.219, 62.6219, -142.786, 0.22", "155.457, 62.9703, -143.572, 0.37", "155.671, 63.3308, -144.292, 0.15", "155.944, 63.8687, -145.277, 0.59", "156.077, 64.2137, -145.929, 0.59", "156.402, 65.1931, -147.921, 0.22", "156.507, 65.4942, -148.566, 0.22", "156.791, 66.1881, -150.197, 1.25", "156.869, 66.334, -150.594, 1.92", "157.639, 67.6486, -154.637, 0.52", "157.942, 68.1713, -156.363, 0.29", "158.09, 68.4457, -157.277, 0.96", "158.242, 68.7634, -158.258, 1.18", "158.523, 69.3509, -159.9, 0.81", "159.012, 70.4549, -162.655, 1.69", "159.254, 71.0458, -163.882, 1.92", "159.761, 72.5051, -166.483, 0.22", "159.883, 72.9299, -167.135, 0.22", "160.038, 73.5377, -167.924, 1.33", "160.263, 74.5412, -169.013, 1.33", "160.563, 76.1587, -170.513, 0.22", "160.634, 76.8791, -171.121, 0.22", "160.598, 77.9069, -172.002, 0.22", "160.46, 78.9359, -172.989, 1.4", "160.365, 79.3682, -173.446, 1.62", "159.847, 81.2016, -175.641, 0.22", "159.561, 82.0971, -176.791, 0.96", "159.059, 83.6453, -178.91, 1.55", "158.661, 84.9424, -180.796, 2.21", "158.405, 85.8466, -182.172, 2.43", "157.869, 88.1681, -185.841, 0.81", "157.783, 88.7009, -186.707, 0.29", "157.715, 89.5051, -188.024, 0.74", "157.758, 91.031, -190.491, 0.81", "157.813, 91.4012, -191.1, 0.96", "158.108, 92.4717, -192.971, 0.22", "158.247, 92.7885, -193.579, 0.52", "158.361, 93.0028, -194.018, 0.59", "158.702, 93.5168, -195.117, 0.22", "159.172, 94.1492, -196.567, 1.47", "159.396, 94.5034, -197.339, 1.69", "159.844, 95.435, -199.242, 0.37", "159.959, 95.7779, -199.894, 0.88", "160.037, 96.1669, -200.588, 1.11", "160.107, 97.5589, -202.958, 0.22", "160.11, 98.0119, -203.744, 0.37", "160.081, 99.0722, -205.548, 0.22", "159.993, 100.062, -207.25, 1.47", "159.909, 100.733, -208.418, 1.69", "159.751, 101.92, -210.425, 1.77", "159.645, 102.594, -211.59, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "56.0621, 51.1074, -74.6258, 0.29", "57.5712, 52.2224, -75.4764, 0.29", "58.3276, 52.7444, -75.8778, 0.29", "59.206, 53.3387, -76.3368, 0.81", "59.788, 53.713, -76.6316, 0.96", "60.845, 54.3559, -77.1564, 0.22", "61.5401, 54.7583, -77.4959, 0.44", "61.8849, 54.933, -77.6653, 0.44", "62.6398, 55.2403, -78.0128, 0.22", "63.4026, 55.4662, -78.3668, 1.03", "63.775, 55.5431, -78.5228, 1.33", "64.0917, 55.5826, -78.6479, 1.55", "64.8401, 55.6162, -78.8989, 1.25", "66.0451, 55.5987, -79.2333, 0.15", "66.7777, 55.5554, -79.3816, 0.74", "67.7634, 55.4838, -79.5061, 1.11", "68.3199, 55.4647, -79.5968, 1.18", "69.0093, 55.4708, -79.7463, 0.88", "70.2215, 55.5281, -80.0416, 0.15", "70.9038, 55.5945, -80.2635, 0.37", "71.398, 55.6671, -80.4775, 0.52", "73.1183, 56.0038, -81.4792, 0.22", "73.9016, 56.179, -82.0017, 1.25", "74.3988, 56.2956, -82.3722, 1.77", "74.7974, 56.3896, -82.6985, 1.77", "75.1466, 56.4726, -82.9915, 1.55", "76.4349, 56.7703, -84.0318, 0.22", "76.929, 56.8769, -84.3809, 0.37", "77.4055, 57.008, -84.7305, 0.37", "78.2975, 57.2893, -85.3898, 0.15", "78.9471, 57.5443, -85.8369, 0.96", "79.2107, 57.6723, -86.0108, 1.11", "79.4381, 57.8073, -86.154, 1.11", "80.8399, 58.7179, -86.976, 0.22", "81.4629, 59.1494, -87.3295, 0.22", "82.2508, 59.7124, -87.7555, 0.22", "82.7669, 60.0965, -88.045, 0.22", "83.5305, 60.6954, -88.4618, 1.18", "83.858, 60.958, -88.6324, 1.84", "84.22, 61.2715, -88.8156, 1.84", "84.4327, 61.4614, -88.9281, 1.84", "85.7552, 62.6497, -89.6965, 0.22", "86.4204, 63.2934, -90.0875, 0.81", "86.6717, 63.5625, -90.2327, 1.11", "87.0745, 64.0162, -90.451, 1.11", "87.2829, 64.2584, -90.5546, 0.74", "87.921, 64.9865, -90.8546, 0.29", "88.3104, 65.4156, -91.0148, 0.44", "88.6821, 65.7937, -91.173, 0.44", "89.122, 66.201, -91.3482, 0.22", "89.4813, 66.5032, -91.4738, 0.22", "90.3857, 67.2313, -91.7717, 1.18", "90.6924, 67.4644, -91.865, 1.4", "91.0217, 67.722, -91.9737, 1.4", "91.4962, 68.0957, -92.1384, 0.88", "91.8884, 68.3972, -92.2436, 0.37", "92.614, 68.9474, -92.3804, 0.22", "93.1174, 69.3183, -92.4284, 0.29", "93.6138, 69.676, -92.4539, 0.29", "94.6444, 70.4051, -92.4769, 0.22", "95.5347, 71.0353, -92.4865, 0.22", "96.3122, 71.6064, -92.4833, 1.33", "96.8111, 71.982, -92.4743, 1.55", "98.3723, 73.203, -92.4386, 0.22", "98.9791, 73.7157, -92.4533, 0.22", "99.7755, 74.4554, -92.5022, 0.22", "100.705, 75.3895, -92.6143, 1.55", "100.981, 75.677, -92.6598, 1.84", "101.267, 75.988, -92.719, 1.84", "102.492, 77.3732, -93.0257, 0.22", "102.935, 77.8875, -93.1677, 0.44", "103.399, 78.3957, -93.3467, 0.59", "104.337, 79.375, -93.7379, 0.29", "104.741, 79.7955, -93.9021, 1.18", "105.147, 80.206, -94.0505, 1.4", "105.518, 80.559, -94.166, 1.4", "106.723, 81.6349, -94.5121, 0.22", "107.174, 81.9961, -94.6159, 0.22", "107.557, 82.2671, -94.673, 0.44", "108.077, 82.624, -94.7045, 0.22", "108.333, 82.8056, -94.694, 0.22", "108.996, 83.2879, -94.628, 1.11", "109.423, 83.6163, -94.5722, 1.33", "109.484, 83.6608, -94.568, 1.55", "110.578, 84.4067, -94.5954, 0.22", "110.98, 84.6661, -94.6025, 0.22", "111.419, 84.9289, -94.5941, 0.44", "111.772, 85.1245, -94.5694, 0.44", "112.679, 85.6306, -94.4839, 0.22", "113.424, 86.0437, -94.4071, 0.22", "114.437, 86.6039, -94.2926, 1.18", "114.896, 86.892, -94.2349, 1.33", "115.431, 87.2427, -94.1162, 1.11", "116.324, 87.8719, -93.8469, 0.22", "116.572, 88.0605, -93.7553, 0.44", "117.003, 88.3813, -93.591, 0.44", "117.604, 88.7943, -93.4064, 0.22", "118.87, 89.5246, -93.119, 0.22", "119.446, 89.7937, -93.0365, 1.11", "119.976, 90.0124, -92.978, 1.55", "120.586, 90.2695, -92.9376, 1.62", "121.102, 90.4786, -92.9233, 1.25", "122.496, 91.0169, -92.9408, 0.22", "123.454, 91.4106, -93.0119, 0.22", "124.06, 91.6628, -93.0573, 0.22", "124.998, 92.084, -93.1261, 0.44", "125.551, 92.3627, -93.1663, 0.44", "126.213, 92.7133, -93.2101, 0.22", "126.767, 93.0059, -93.2447, 0.22", "127.375, 93.3038, -93.2968, 0.59", "127.681, 93.4444, -93.3428, 0.59", "128.338, 93.7578, -93.474, 0.22", "129.135, 94.1706, -93.6592, 0.74", "129.487, 94.3508, -93.7495, 0.88", "130.056, 94.6225, -93.9162, 0.52", "131.013, 95.0492, -94.2332, 0.22", "131.831, 95.4486, -94.5589, 0.22", "132.722, 95.9325, -94.9597, 1.11", "133.177, 96.2148, -95.1932, 1.47", "133.629, 96.5381, -95.4536, 1.55", "134.828, 97.5604, -96.2571, 0.22", "135.772, 98.486, -96.9642, 0.96", "136.041, 98.7734, -97.1818, 1.4", "136.46, 99.2784, -97.5532, 1.25", "136.774, 99.6822, -97.8335, 0.88", "137.54, 100.696, -98.4909, 0.22", "137.931, 101.251, -98.8279, 0.37", "138.334, 101.802, -99.1411, 0.22", "138.955, 102.637, -99.6344, 0.52", "139.293, 103.095, -99.8922, 0.66", "139.901, 103.973, -100.382, 0.22", "140.311, 104.623, -100.729, 0.66", "140.422, 104.82, -100.829, 0.66", "141.066, 106.108, -101.42, 0.22", "141.35, 106.709, -101.64, 0.59", "141.971, 108.139, -102.035, 0.22", "142.18, 108.642, -102.127, 0.22", "142.525, 109.487, -102.229, 1.47", "142.673, 109.889, -102.25, 1.69", "143.221, 111.575, -102.189, 0.22", "143.557, 112.692, -102.117, 0.22", "143.782, 113.511, -102.028, 0.74", "143.903, 113.967, -101.976, 0.88", "144.271, 115.42, -101.812, 0.22", "144.558, 116.623, -101.692, 1.25", "144.673, 117.147, -101.657, 1.25", "144.794, 117.675, -101.636, 0.74", "145.026, 118.636, -101.606, 0.22", "145.329, 119.733, -101.569, 1.4", "145.453, 120.136, -101.558, 1.62", "145.877, 121.463, -101.512, 0.22", "146.159, 122.266, -101.469, 0.59", "146.278, 122.559, -101.432, 0.59", "146.821, 123.778, -101.193, 0.15", "147.158, 124.454, -101.006, 0.15", "147.475, 125.05, -100.8, 0.15", "147.885, 125.807, -100.511, 0.15", "148.724, 127.335, -99.9256, 1.18", "148.857, 127.611, -99.8366, 1.47", "149.03, 128.051, -99.7325, 1.11", "149.371, 129.165, -99.5517, 0.22", "149.566, 130.016, -99.4743, 0.96", "149.653, 130.601, -99.4712, 0.96", "149.838, 132.198, -99.736, 0.22", "150.001, 133.374, -100.006, 0.22", "150.16, 134.377, -100.281, 1.18", "150.222, 134.732, -100.389, 1.4", "150.369, 135.402, -100.593, 1.55", "151.067, 138.099, -101.434, 0.22", "151.489, 139.449, -101.877, 0.22", "151.805, 140.355, -102.197, 0.81", "151.884, 140.565, -102.276, 1.03", "152.369, 141.854, -102.754, 0.22", "152.591, 142.421, -102.95, 0.66", "152.771, 142.9, -103.102, 0.66", "153.071, 143.75, -103.407, 0.15", "153.428, 144.744, -103.73, 1.25", "153.612, 145.258, -103.865, 1.4", "154.024, 146.402, -104.11, 0.15", "154.282, 147.091, -104.221, 0.37", "154.41, 147.412, -104.258, 0.37", "155.126, 149.136, -104.417, 0.22", "155.531, 150.062, -104.486, 1.03", "155.715, 150.465, -104.508, 1.18", "155.816, 150.686, -104.517, 1.18", "156.524, 152.184, -104.547, 0.22", "156.82, 152.8, -104.57, 0.52", "156.965, 153.085, -104.583, 0.52", "157.6, 154.268, -104.622, 0.22", "157.985, 154.949, -104.627, 0.22", "158.447, 155.705, -104.626, 1.11", "158.823, 156.287, -104.615, 1.11", "159.814, 157.733, -104.588, 0.22", "160.424, 158.58, -104.589, 0.22", "160.985, 159.307, -104.606, 1.03", "161.365, 159.792, -104.628, 1.47", "161.661, 160.172, -104.649, 1.11", "162.458, 161.193, -104.644, 0.15", "162.746, 161.561, -104.644, 0.37", "163.4, 162.401, -104.649, 0.22", "163.746, 162.842, -104.637, 0.37", "163.935, 163.088, -104.633, 0.37", "164.858, 164.247, -104.646, 0.22", "165.424, 164.946, -104.664, 0.81", "165.769, 165.361, -104.681, 1.03", "166.679, 166.42, -104.749, 0.15", "167.21, 167.018, -104.802, 0.29", "167.69, 167.576, -104.867, 0.22", "168.116, 168.102, -104.942, 0.88", "168.355, 168.411, -104.968, 1.11", "168.582, 168.735, -104.977, 1.11", "169.336, 169.963, -104.948, 0.22", "169.711, 170.645, -104.883, 1.03", "169.883, 170.996, -104.839, 1.25", "170.44, 172.192, -104.671, 0.22", "170.879, 173.197, -104.511, 0.88", "171.297, 174.181, -104.338, 0.29", "171.622, 174.978, -104.185, 0.96", "171.774, 175.356, -104.11, 0.96", "172.046, 176.057, -103.966, 0.22", "172.254, 176.634, -103.839, 0.37", "172.538, 177.451, -103.662, 0.22", "172.78, 178.17, -103.507, 0.52", "173.28, 179.609, -103.216, 0.22", "173.498, 180.268, -103.094, 0.81", "173.754, 181.07, -102.957, 0.22", "173.947, 181.675, -102.865, 0.88", "174.121, 182.184, -102.804, 1.03", "174.829, 184.094, -102.636, 0.22", "175.095, 184.744, -102.597, 0.22", "175.412, 185.46, -102.566, 0.81", "175.551, 185.757, -102.555, 1.03", "176.273, 187.257, -102.534, 0.22", "176.44, 187.602, -102.524, 0.29", "176.899, 188.553, -102.472, 0.15", "177.149, 189.058, -102.43, 0.29", "177.485, 189.762, -102.364, 0.88", "177.747, 190.367, -102.303, 0.88", "178.269, 191.512, -102.088, 0.22", "178.497, 191.995, -101.971, 0.22", "178.754, 192.571, -101.815, 0.88", "178.93, 192.946, -101.692, 1.11", "179.149, 193.368, -101.534, 1.11", "179.987, 194.694, -100.97, 0.22", "180.547, 195.449, -100.661, 0.22", "181.0, 195.972, -100.424, 0.22", "181.653, 196.62, -100.108, 0.81", "181.937, 196.872, -99.983, 1.03", "183.016, 197.209, -99.1978, 0.22", "183.475, 197.239, -98.7898, 0.22", "184.292, 197.175, -98.058, 1.11", "184.639, 197.125, -97.7547, 1.25", "185.006, 197.056, -97.4433, 1.25", "190.299, 195.937, -93.0368, 0.66", "191.039, 195.768, -92.4288, 0.88", "192.244, 195.449, -91.424, 0.29", "192.909, 195.252, -90.8642, 0.22", "193.397, 195.105, -90.4537, 0.44", "193.846, 194.975, -90.1043, 0.22", "194.65, 195.061, -90.0707, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.66691, 131.161, -84.157, 1.77", "-9.60466, 131.383, -86.2986, 1.77", "-9.52817, 131.734, -88.3009, 1.47", "-9.49201, 131.996, -89.425, 1.18", "-9.47293, 132.319, -90.6024, 1.11", "-9.47304, 132.668, -91.7579, 0.88", "-9.48435, 132.817, -92.2205, 0.66", "-9.53927, 133.165, -93.0992, 0.96", "-9.64667, 133.615, -94.0521, 1.11", "-9.78264, 134.0, -94.8792, 1.33", "-9.87184, 134.188, -95.3264, 1.62", "-10.146, 134.636, -96.4826, 1.47", "-10.7187, 135.413, -98.6377, 0.96", "-11.0279, 135.786, -99.6832, 0.96", "-11.4597, 136.287, -101.051, 1.55", "-11.8702, 136.765, -102.349, 1.33", "-12.1916, 137.152, -103.393, 1.62", "-12.61, 137.669, -104.759, 1.11", "-12.7544, 137.848, -105.218, 0.59", "-13.2294, 138.445, -106.729, 0.88", "-13.5861, 138.919, -107.859, 1.25", "-13.8907, 139.341, -108.812, 1.4", "-14.2524, 139.858, -109.945, 0.52", "-14.593, 140.363, -110.987, 0.59", "-14.7973, 140.653, -111.605, 0.37", "-14.9171, 140.81, -111.927, 0.59", "-15.1711, 141.123, -112.554, 0.44", "-15.5373, 141.568, -113.423, 0.37", "-15.9528, 142.094, -114.416, 1.47", "-16.5042, 142.811, -115.722, 1.84", "-17.0706, 143.556, -117.024, 0.52", "-17.4398, 144.045, -117.825, 0.52", "-17.6546, 144.326, -118.248, 1.18", "-17.8614, 144.576, -118.592, 1.18", "-18.6043, 145.421, -119.622, 0.22", "-18.777, 145.618, -119.819, 0.37", "-19.1012, 145.971, -120.158, 0.96", "-19.5218, 146.41, -120.583, 1.25", "-20.3896, 147.263, -121.456, 0.22", "-20.5963, 147.454, -121.683, 0.37", "-20.7792, 147.621, -121.9, 0.37", "-21.4325, 148.242, -122.806, 1.11", "-21.5976, 148.405, -123.061, 1.55", "-21.7302, 148.544, -123.281, 1.69", "-22.6822, 149.593, -125.039, 0.29", "-22.874, 149.816, -125.457, 0.29", "-23.2727, 150.348, -126.493, 1.03", "-23.3962, 150.546, -126.894, 0.81", "-23.5001, 150.774, -127.374, 1.11", "-23.6466, 151.252, -128.383, 1.33", "-23.8015, 152.164, -130.334, 0.59", "-23.846, 152.486, -131.033, 1.18", "-23.8923, 152.881, -131.899, 1.33", "-23.9653, 153.714, -133.711, 0.52", "-23.9802, 154.031, -134.374, 0.81", "-23.9968, 154.408, -135.12, 0.81", "-24.02, 154.967, -136.157, 0.37", "-24.044, 155.246, -136.683, 0.37", "-24.0691, 155.471, -137.105, 0.22", "-24.1264, 155.959, -138.004, 1.18", "-24.2091, 156.803, -139.523, 1.33", "-24.2422, 157.327, -140.441, 0.44", "-24.234, 157.973, -141.61, 0.74", "-24.1778, 158.676, -142.901, 0.52", "-24.1234, 159.015, -143.564, 0.66", "-24.0556, 159.247, -144.047, 1.47", "-23.9062, 159.576, -144.756, 1.55", "-23.4489, 160.362, -146.602, 0.96", "-23.2004, 160.669, -147.346, 0.37", "-22.7081, 161.193, -148.698, 0.29", "-22.4577, 161.464, -149.42, 0.81", "-22.312, 161.644, -149.895, 1.25", "-22.0825, 162.005, -150.766, 1.25", "-21.9438, 162.273, -151.467, 0.59", "-21.7405, 162.647, -152.77, 0.44", "-21.5773, 162.879, -153.961, 0.74", "-21.4072, 163.039, -155.292, 1.03", "-21.2961, 163.058, -156.024, 1.25", "-20.8424, 162.874, -158.5, 0.74", "-20.527, 162.597, -159.987, 0.22", "-20.2264, 162.251, -160.996, 0.96", "-20.1449, 162.144, -161.21, 0.96", "-19.7811, 161.627, -161.989, 0.29", "-19.5662, 161.325, -162.335, 0.52", "-19.2632, 160.938, -162.662, 0.22", "-18.892, 160.525, -162.987, 0.22", "-18.6391, 160.27, -163.171, 0.96", "-18.4349, 160.079, -163.298, 0.96", "-17.4286, 159.209, -163.785, 0.22", "-17.0479, 158.905, -163.921, 0.44", "-16.7322, 158.672, -163.991, 0.44", "-16.0229, 158.169, -164.054, 0.15", "-15.4486, 157.762, -164.103, 0.15", "-15.0149, 157.458, -164.16, 0.22", "-14.6936, 157.237, -164.232, 0.81", "-14.1552, 156.858, -164.343, 1.11", "-13.9328, 156.692, -164.409, 1.11", "-12.955, 155.886, -165.184, 0.15", "-12.6581, 155.608, -165.7, 0.37", "-12.5369, 155.483, -166.001, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.66691, 131.161, -84.157, 0.29", "-10.6762, 132.292, -84.0739, 0.29", "-11.3468, 133.027, -84.0526, 0.22", "-11.603, 133.304, -84.0561, 0.74", "-11.8525, 133.575, -84.0784, 0.74", "-12.3083, 134.064, -84.1419, 0.22", "-12.7859, 134.567, -84.2326, 0.37", "-13.1575, 134.945, -84.3381, 0.22", "-13.5759, 135.356, -84.4788, 0.52", "-13.9708, 135.725, -84.6412, 0.52", "-14.4528, 136.154, -84.8884, 0.22", "-14.7495, 136.392, -85.0751, 0.22", "-15.2477, 136.752, -85.3967, 1.47", "-15.522, 136.94, -85.5624, 1.92", "-15.9826, 137.24, -85.8245, 2.06", "-16.4267, 137.523, -86.0565, 1.69", "-17.4299, 138.178, -86.5669, 0.44", "-18.1111, 138.631, -86.8831, 0.22", "-18.6154, 138.978, -87.1114, 0.52", "-18.9306, 139.2, -87.2517, 0.66", "-19.6805, 139.77, -87.6541, 0.22", "-20.0184, 140.049, -87.8581, 0.22", "-20.5058, 140.5, -88.1867, 1.47", "-20.8144, 140.81, -88.432, 1.77", "-21.1783, 141.206, -88.7494, 1.99", "-22.4651, 142.716, -90.0189, 0.22", "-22.962, 143.35, -90.5612, 0.22", "-23.2773, 143.771, -90.9268, 0.96", "-23.6075, 144.229, -91.3224, 1.03", "-24.0044, 144.788, -91.7808, 0.22", "-24.4316, 145.412, -92.2517, 0.22", "-24.6522, 145.743, -92.4906, 0.81", "-24.8692, 146.062, -92.7471, 0.96", "-25.3365, 146.703, -93.3245, 0.22", "-25.6191, 147.059, -93.6654, 0.22", "-26.0664, 147.602, -94.2238, 1.11", "-26.2723, 147.847, -94.4813, 1.4", "-26.4922, 148.101, -94.7631, 1.4", "-27.2453, 148.933, -95.7301, 0.22", "-27.5865, 149.286, -96.1466, 0.22", "-28.0996, 149.773, -96.7326, 0.96", "-28.4053, 150.043, -97.0769, 1.18", "-29.1036, 150.602, -97.8593, 0.22", "-29.4002, 150.822, -98.1864, 0.22", "-29.9214, 151.182, -98.7514, 1.55", "-30.1953, 151.37, -99.045, 1.99", "-30.7513, 151.76, -99.6461, 1.99", "-31.9399, 152.665, -100.99, 0.22", "-32.164, 152.856, -101.266, 0.44", "-32.2709, 152.968, -101.41, 0.44", "-32.5965, 153.402, -101.892, 0.22", "-33.066, 154.188, -102.582, 1.25", "-33.2947, 154.658, -102.905, 1.62", "-33.4256, 155.0, -103.102, 1.62", "-33.7903, 155.955, -103.622, 0.22", "-33.981, 156.458, -103.891, 0.22", "-34.1738, 156.991, -104.168, 0.29", "-34.3982, 157.589, -104.443, 0.66", "-34.54, 157.951, -104.602, 0.66", "-34.8423, 158.656, -104.909, 0.22", "-35.313, 159.619, -105.361, 1.55", "-35.5636, 160.109, -105.603, 1.77", "-35.7802, 160.557, -105.833, 1.92" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-35.7802, 160.557, -105.833, 0.22", "-36.0011, 161.64, -106.596, 0.22", "-36.0722, 161.863, -106.739, 0.44", "-36.1176, 161.976, -106.81, 0.44", "-36.2828, 162.335, -107.038, 0.22", "-36.4145, 162.594, -107.201, 0.59", "-36.5409, 162.829, -107.351, 0.59", "-36.8516, 163.285, -107.649, 0.22", "-36.9932, 163.48, -107.79, 0.22", "-37.2868, 163.864, -108.073, 1.11", "-37.408, 164.013, -108.186, 1.33", "-37.5184, 164.156, -108.307, 1.33", "-37.9941, 164.835, -108.895, 0.22", "-38.2127, 165.202, -109.212, 0.22", "-38.4087, 165.595, -109.555, 1.33", "-38.4942, 165.818, -109.776, 1.69", "-38.6989, 166.564, -110.64, 0.22", "-38.7495, 166.828, -110.971, 0.22", "-38.7694, 167.139, -111.413, 1.11", "-38.7443, 167.406, -111.847, 1.4", "-38.5999, 167.958, -112.866, 1.11", "-38.4375, 168.368, -113.736, 1.03", "-38.3847, 168.481, -113.999, 1.55", "-38.238, 168.78, -114.731, 1.69", "-38.0441, 169.18, -115.747, 0.74", "-37.8274, 169.657, -116.934, 1.4", "-37.5667, 170.326, -118.457, 1.18", "-37.4686, 170.609, -119.078, 1.55", "-37.4037, 170.849, -119.582, 1.69", "-37.3013, 171.501, -120.803, 1.18", "-37.2824, 171.808, -121.328, 0.59", "-37.2788, 172.527, -122.397, 1.33", "-37.2804, 172.885, -122.857, 1.77", "-37.2726, 173.421, -123.491, 0.52", "-37.2602, 173.794, -123.9, 1.25", "-37.2504, 174.309, -124.424, 1.11", "-37.2566, 175.02, -125.133, 0.22", "-37.2718, 175.523, -125.643, 0.22", "-37.3078, 176.046, -126.169, 1.55", "-37.3568, 176.427, -126.557, 1.69", "-37.5125, 177.238, -127.408, 0.15", "-37.6017, 177.566, -127.755, 0.81", "-37.7272, 177.892, -128.102, 1.03", "-37.9974, 178.457, -128.681, 0.22", "-38.1947, 178.81, -129.023, 1.03", "-38.3831, 179.096, -129.265, 1.47", "-38.6273, 179.428, -129.513, 1.47", "-39.104, 180.038, -129.943, 0.22", "-39.3099, 180.289, -130.112, 0.74", "-39.458, 180.466, -130.23, 0.88", "-40.1131, 181.244, -130.733, 0.22", "-40.4721, 181.672, -130.999, 1.11", "-40.6692, 181.91, -131.146, 1.4", "-41.0904, 182.438, -131.494, 0.22", "-41.224, 182.62, -131.612, 0.52", "-41.4319, 182.943, -131.816, 0.22", "-41.5826, 183.238, -131.996, 0.52", "-41.6399, 183.366, -132.066, 0.52", "-41.8025, 183.752, -132.254, 0.22", "-41.9815, 184.202, -132.47, 1.33", "-42.0938, 184.519, -132.655, 1.55", "-42.281, 185.139, -133.034, 0.22", "-42.4161, 185.63, -133.358, 0.22", "-42.4966, 186.106, -133.764, 1.47", "-42.5254, 186.408, -134.036, 1.69", "-42.5765, 187.441, -134.942, 0.22", "-42.5805, 187.976, -135.41, 1.99", "-42.5717, 188.329, -135.726, 2.36", "-42.4813, 190.224, -137.466, 0.22", "-42.4549, 190.983, -138.15, 0.44", "-42.4518, 191.606, -138.682, 0.22", "-42.5142, 192.711, -139.546, 1.84", "-42.5504, 193.01, -139.765, 2.28", "-42.6079, 193.306, -139.954, 2.28", "-42.9457, 194.446, -140.614, 0.22", "-43.0554, 194.757, -140.806, 0.74", "-43.4543, 195.772, -141.447, 0.22", "-43.6321, 196.205, -141.684, 0.74", "-43.7278, 196.446, -141.809, 0.81", "-44.187, 197.641, -142.421, 0.15", "-44.3373, 198.06, -142.657, 1.11", "-44.4901, 198.497, -142.92, 1.11", "-44.8416, 199.534, -143.589, 0.22", "-44.945, 199.83, -143.782, 0.66", "-45.0307, 200.059, -143.925, 0.81", "-45.3378, 200.751, -144.329, 0.22", "-45.5008, 201.048, -144.533, 1.11", "-45.6349, 201.235, -144.693, 1.33", "-45.9658, 201.565, -145.097, 0.22", "-46.1243, 201.701, -145.289, 0.66", "-46.2658, 201.802, -145.456, 0.88", "-46.8887, 202.178, -146.155, 0.22", "-47.2845, 202.4, -146.617, 0.22", "-47.4793, 202.505, -146.844, 0.96", "-47.7318, 202.636, -147.139, 1.11", "-48.0612, 202.819, -147.511, 0.22", "-48.2846, 202.954, -147.734, 0.59", "-48.3688, 203.008, -147.798, 0.59", "-48.5954, 203.166, -147.935, 0.22", "-48.8286, 203.344, -148.071, 0.44", "-48.943, 203.436, -148.137, 0.52", "-49.4148, 203.844, -148.427, 0.15", "-49.5663, 203.979, -148.524, 0.44", "-50.0368, 204.408, -148.847, 0.22", "-50.2868, 204.644, -149.04, 0.44", "-50.4065, 204.761, -149.137, 0.44", "-50.6022, 204.962, -149.296, 0.22", "-50.7912, 205.163, -149.446, 0.59", "-51.0399, 205.425, -149.64, 0.59", "-51.3643, 205.768, -149.893, 0.22", "-51.647, 206.085, -150.131, 0.22", "-51.9501, 206.445, -150.405, 0.81", "-52.0249, 206.539, -150.481, 0.81", "-52.1929, 206.771, -150.675, 0.22", "-52.3667, 207.025, -150.887, 0.44", "-52.7723, 207.654, -151.415, 0.22", "-52.8729, 207.815, -151.554, 0.96", "-53.0651, 208.122, -151.827, 1.11", "-53.62, 208.987, -152.596, 0.22", "-53.8731, 209.382, -152.936, 0.22", "-53.9647, 209.525, -153.055, 0.74", "-54.0863, 209.713, -153.204, 0.96", "-54.2251, 209.928, -153.371, 1.18", "-54.3217, 210.083, -153.496, 1.18", "-54.6558, 210.662, -153.955, 0.15", "-54.7951, 210.909, -154.167, 0.52", "-54.8466, 211.006, -154.251, 0.81", "-54.9141, 211.148, -154.366, 0.81", "-55.1931, 211.779, -154.859, 0.22", "-55.3445, 212.141, -155.128, 0.96", "-55.4464, 212.401, -155.303, 1.47", "-55.7131, 213.146, -155.76, 0.22", "-55.867, 213.624, -156.033, 0.22", "-56.0171, 214.131, -156.316, 1.03", "-56.0719, 214.33, -156.422, 1.03", "-56.1648, 214.729, -156.642, 0.22", "-56.2212, 215.04, -156.82, 0.44", "-56.2671, 215.352, -157.008, 0.37", "-56.3239, 215.814, -157.297, 0.74", "-56.3431, 215.987, -157.408, 0.96", "-56.4645, 217.122, -158.168, 0.22", "-56.5252, 217.708, -158.58, 0.74", "-56.5416, 217.869, -158.691, 1.11", "-56.5577, 218.035, -158.803, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-35.7802, 160.557, -105.833, 0.22", "-37.374, 162.195, -105.84, 0.22", "-37.8179, 162.666, -105.84, 0.22", "-38.1121, 163.037, -105.834, 0.66", "-38.4006, 163.443, -105.825, 0.88", "-38.6296, 163.805, -105.793, 0.88", "-39.6472, 165.509, -105.588, 0.15", "-39.7565, 165.716, -105.557, 0.29", "-40.762, 167.57, -105.201, 0.22", "-41.0861, 168.148, -105.075, 0.37", "-41.8839, 169.515, -104.77, 0.22", "-42.567, 170.63, -104.491, 1.33", "-42.7085, 170.847, -104.428, 1.62", "-43.8684, 172.438, -103.911, 0.22", "-44.7329, 173.465, -103.507, 0.22", "-46.299, 175.114, -102.762, 0.22", "-46.9736, 175.758, -102.435, 0.96", "-47.5293, 176.247, -102.139, 1.18", "-48.7803, 177.223, -101.396, 0.22", "-49.6426, 177.783, -100.833, 0.22", "-50.5556, 178.305, -100.2, 1.11", "-50.8224, 178.442, -100.009, 1.4", "-51.2943, 178.717, -99.6833, 1.4", "-52.7386, 179.719, -98.7249, 0.22", "-53.4382, 180.326, -98.2585, 0.22", "-54.0454, 180.966, -97.8795, 0.44", "-54.2557, 181.225, -97.7545, 0.44", "-55.1961, 182.502, -97.2276, 0.22", "-55.692, 183.264, -96.9613, 0.66", "-56.0973, 183.974, -96.7557, 0.66", "-56.6004, 184.914, -96.4667, 0.22", "-56.8849, 185.429, -96.2861, 0.44", "-57.1473, 185.883, -96.1122, 0.44", "-57.6562, 186.741, -95.7525, 0.22", "-57.8531, 187.071, -95.6072, 0.37", "-58.5612, 188.266, -95.0866, 0.22", "-58.8826, 188.845, -94.8195, 0.52", "-59.0382, 189.136, -94.6755, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_NBC_96f68bef66_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.49999920512097007)
    connect dend_22(0), soma_0(0.49999920512097007)
    connect dend_17(0), soma_0(0.49999920512097007)
    connect dend_0(0), soma_0(0.49999920512097007)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.94345, -11.2623, 0.984599, 4.09477 ) }
    soma_0 { pt3dadd( -6.27697, -10.213, 0.889449, 7.03886 ) }
    soma_0 { pt3dadd( -5.61048, -9.16359, 0.794299, 9.0513 ) }
    soma_0 { pt3dadd( -4.94399, -8.11421, 0.699149, 10.7049 ) }
    soma_0 { pt3dadd( -4.2775, -7.06483, 0.603999, 12.1545 ) }
    soma_0 { pt3dadd( -3.61101, -6.01545, 0.508849, 13.4148 ) }
    soma_0 { pt3dadd( -2.94452, -4.96607, 0.413699, 14.3077 ) }
    soma_0 { pt3dadd( -2.27803, -3.91669, 0.318549, 14.7157 ) }
    soma_0 { pt3dadd( -1.61155, -2.86731, 0.223399, 14.8034 ) }
    soma_0 { pt3dadd( -0.945058, -1.81793, 0.128249, 14.7825 ) }
    soma_0 { pt3dadd( -0.278569, -0.768556, 0.0330986, 14.484 ) }
    soma_0 { pt3dadd( 0.387919, 0.280823, -0.0620515, 14.2451 ) }
    soma_0 { pt3dadd( 1.05441, 1.3302, -0.157201, 13.4939 ) }
    soma_0 { pt3dadd( 1.7209, 2.37958, -0.252352, 12.4612 ) }
    soma_0 { pt3dadd( 2.38738, 3.42896, -0.347502, 11.3514 ) }
    soma_0 { pt3dadd( 3.05387, 4.47834, -0.442652, 10.0759 ) }
    soma_0 { pt3dadd( 3.72036, 5.52772, -0.537802, 8.68542 ) }
    soma_0 { pt3dadd( 4.38685, 6.5771, -0.632952, 7.03735 ) }
    soma_0 { pt3dadd( 5.05334, 7.62648, -0.728102, 5.61823 ) }
    soma_0 { pt3dadd( 5.71983, 8.67585, -0.823252, 4.41136 ) }
    soma_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 2.8094 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.13964, -5.50144, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -2.13964, -5.50144, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.56779, -6.3009, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.04086, -7.26566, -15.2302, 0.88 ) }
    dend_31 { pt3dadd( -0.639321, -8.29177, -15.2921, 0.96 ) }
    dend_31 { pt3dadd( -0.281848, -9.61188, -15.3898, 0.52 ) }
    dend_31 { pt3dadd( -0.174207, -10.2724, -15.4441, 0.44 ) }
    dend_31 { pt3dadd( -0.220841, -11.3635, -15.5505, 0.37 ) }
    dend_31 { pt3dadd( -0.591847, -12.3323, -15.6651, 0.96 ) }
    dend_31 { pt3dadd( -1.01186, -12.8942, -15.7378, 1.18 ) }
    dend_31 { pt3dadd( -1.32035, -13.1869, -15.7996, 1.18 ) }
    dend_31 { pt3dadd( -1.73735, -13.5339, -15.9207, 0.88 ) }
    dend_31 { pt3dadd( -2.24784, -13.9841, -16.1322, 0.66 ) }
    dend_31 { pt3dadd( -2.74773, -14.5099, -16.4525, 0.52 ) }
    dend_31 { pt3dadd( -3.17477, -15.1421, -16.9653, 0.37 ) }
    dend_31 { pt3dadd( -3.49532, -15.917, -17.7736, 0.37 ) }
    dend_31 { pt3dadd( -3.67827, -16.6246, -18.6504, 1.11 ) }
    dend_31 { pt3dadd( -3.76069, -17.0689, -19.2629, 1.33 ) }
    dend_31 { pt3dadd( -3.81679, -17.4252, -19.7809, 1.4 ) }
    dend_31 { pt3dadd( -3.95319, -18.1759, -20.9442, 0.66 ) }
    dend_31 { pt3dadd( -4.13222, -18.6685, -21.7814, 0.52 ) }
    dend_31 { pt3dadd( -4.49284, -19.1617, -22.6126, 0.59 ) }
    dend_31 { pt3dadd( -4.80008, -19.4405, -23.0486, 0.66 ) }
    dend_31 { pt3dadd( -5.23193, -19.7946, -23.5635, 0.66 ) }
    dend_31 { pt3dadd( -5.59488, -20.0984, -23.9554, 0.37 ) }
    dend_31 { pt3dadd( -6.2294, -20.7699, -24.7277, 0.29 ) }
    dend_31 { pt3dadd( -6.44345, -21.1105, -25.1524, 0.29 ) }
    dend_31 { pt3dadd( -6.76223, -21.9315, -26.2228, 1.4 ) }
    dend_31 { pt3dadd( -6.8906, -22.4206, -26.8372, 1.84 ) }
    dend_31 { pt3dadd( -6.95922, -22.8253, -27.3384, 1.84 ) }
    dend_31 { pt3dadd( -7.08374, -23.9931, -28.7898, 0.81 ) }
    dend_31 { pt3dadd( -7.15654, -25.0912, -30.1708, 0.37 ) }
    dend_31 { pt3dadd( -7.19117, -25.6357, -30.9207, 0.37 ) }
    dend_31 { pt3dadd( -7.23639, -26.2912, -31.8736, 1.55 ) }
    dend_31 { pt3dadd( -7.28053, -26.9139, -32.8723, 2.06 ) }
    dend_31 { pt3dadd( -7.32877, -27.4299, -33.7526, 2.21 ) }
    dend_31 { pt3dadd( -7.44414, -28.6458, -35.8855, 0.66 ) }
    dend_31 { pt3dadd( -7.55772, -29.9121, -38.1512, 0.66 ) }
    dend_31 { pt3dadd( -7.59918, -30.4898, -39.2523, 0.88 ) }
    dend_31 { pt3dadd( -7.67337, -31.8359, -42.0489, 1.77 ) }
    dend_31 { pt3dadd( -7.71992, -32.5464, -43.5767, 3.09 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.29965, -7.64844, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.29965, -7.64844, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.80418, -8.42686, 1.11922, 1.25 ) }
    dend_22 { pt3dadd( -9.72377, -9.94899, 1.50406, 1.11 ) }
    dend_22 { pt3dadd( -10.453, -11.1562, 1.80928, 1.55 ) }
    dend_22 { pt3dadd( -11.008, -12.0748, 2.04153, 1.92 ) }
    dend_22 { pt3dadd( -11.6704, -13.1711, 2.31872, 2.14 ) }
    dend_22 { pt3dadd( -12.2105, -14.0997, 2.56217, 2.14 ) }
    dend_22 { pt3dadd( -12.6458, -14.9247, 2.79698, 2.14 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.83964, -10.831, -0.944109, 1.62 ) }
    dend_17 { pt3dadd( -5.06872, -11.3914, -0.853087, 1.62 ) }
    dend_17 { pt3dadd( -5.43042, -12.28, -0.695882, 1.47 ) }
    dend_17 { pt3dadd( -5.73478, -13.0407, -0.55799, 1.18 ) }
    dend_17 { pt3dadd( -6.0713, -13.891, -0.405584, 1.18 ) }
    dend_17 { pt3dadd( -6.37518, -14.6736, -0.275703, 1.77 ) }
    dend_17 { pt3dadd( -6.5362, -15.1057, -0.21238, 2.14 ) }
    dend_17 { pt3dadd( -6.75099, -15.706, -0.115313, 2.65 ) }
    dend_17 { pt3dadd( -6.92535, -16.1852, -0.0366286, 2.73 ) }
    dend_17 { pt3dadd( -7.18615, -16.8525, 0.0636391, 2.5 ) }
    dend_17 { pt3dadd( -7.59079, -17.7962, 0.18577, 1.92 ) }
    dend_17 { pt3dadd( -8.09072, -18.8821, 0.313007, 1.47 ) }
    dend_17 { pt3dadd( -8.70017, -20.0895, 0.444787, 1.18 ) }
    dend_17 { pt3dadd( -9.10863, -20.8225, 0.523231, 1.03 ) }
    dend_17 { pt3dadd( -9.77064, -21.8766, 0.629527, 1.47 ) }
    dend_17 { pt3dadd( -10.1261, -22.376, 0.673129, 1.99 ) }
    dend_17 { pt3dadd( -10.3978, -22.7331, 0.697684, 2.43 ) }
    dend_17 { pt3dadd( -10.6992, -23.1412, 0.717288, 2.65 ) }
    dend_17 { pt3dadd( -11.029, -23.6721, 0.727597, 2.36 ) }
    dend_17 { pt3dadd( -11.4566, -24.6259, 0.717244, 1.77 ) }
    dend_17 { pt3dadd( -11.8646, -26.0834, 0.676498, 1.33 ) }
    dend_17 { pt3dadd( -12.0314, -27.1258, 0.636374, 1.33 ) }
    dend_17 { pt3dadd( -12.1052, -28.1914, 0.59338, 1.55 ) }
    dend_17 { pt3dadd( -12.0795, -29.4524, 0.554312, 1.25 ) }
    dend_17 { pt3dadd( -11.9361, -30.7863, 0.543651, 1.11 ) }
    dend_17 { pt3dadd( -11.7013, -31.9597, 0.560723, 1.55 ) }
    dend_17 { pt3dadd( -11.5264, -32.5789, 0.574157, 2.06 ) }
    dend_17 { pt3dadd( -11.4025, -32.9637, 0.587096, 2.43 ) }
    dend_17 { pt3dadd( -11.2231, -33.4962, 0.617353, 2.8 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -11.0212, -34.1136, 0.701389, 2.95 ) }
    dend_17 { pt3dadd( -10.8895, -34.5983, 0.856652, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 2/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.93036, 9.68906, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 5.93036, 9.68906, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 6.58817, 11.0983, -0.415211, 3.54 ) }
    dend_0 { pt3dadd( 7.32692, 12.6808, -0.304146, 3.54 ) }
    dend_0 { pt3dadd( 7.80023, 13.6948, -0.232987, 2.95 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 0.715641 ) }
    axon_0 { pt3dadd( 14.4283, 22.3872, -0.918402, 0.715641 ) }
    axon_0 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.715641 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -7.71992, -32.5464, -43.5767, 0.88 ) }
    dend_33 { pt3dadd( -6.85671, -33.1654, -44.2999, 0.88 ) }
    dend_33 { pt3dadd( -6.0458, -33.7351, -44.9115, 0.52 ) }
    dend_33 { pt3dadd( -5.43003, -34.1512, -45.335, 0.29 ) }
    dend_33 { pt3dadd( -4.65567, -34.6639, -45.8854, 0.22 ) }
    dend_33 { pt3dadd( -3.86915, -35.1895, -46.4497, 1.33 ) }
    dend_33 { pt3dadd( -3.20014, -35.6303, -46.9576, 1.47 ) }
    dend_33 { pt3dadd( -2.50721, -36.0886, -47.4951, 0.15 ) }
    dend_33 { pt3dadd( -1.99667, -36.4302, -47.8726, 0.15 ) }
    dend_33 { pt3dadd( -0.859353, -37.1878, -48.7447, 0.81 ) }
    dend_33 { pt3dadd( -0.658852, -37.3192, -48.9036, 0.96 ) }
    dend_33 { pt3dadd( 1.13304, -38.4767, -50.3542, 0.22 ) }
    dend_33 { pt3dadd( 1.35746, -38.6211, -50.5517, 0.74 ) }
    dend_33 { pt3dadd( 1.75497, -38.887, -50.9359, 0.74 ) }
    dend_33 { pt3dadd( 3.09783, -39.7912, -52.3372, 0.22 ) }
    dend_33 { pt3dadd( 3.4575, -40.038, -52.7295, 0.88 ) }
    dend_33 { pt3dadd( 3.65438, -40.175, -52.9596, 1.11 ) }
    dend_33 { pt3dadd( 5.12389, -41.2102, -54.8291, 0.22 ) }
    dend_33 { pt3dadd( 6.01576, -41.8238, -56.0103, 1.62 ) }
    dend_33 { pt3dadd( 6.57466, -42.209, -56.7724, 2.06 ) }
    dend_33 { pt3dadd( 7.55536, -42.9299, -58.1633, 0.81 ) }
    dend_33 { pt3dadd( 8.28703, -43.5071, -59.2517, 1.33 ) }
    dend_33 { pt3dadd( 9.40738, -44.4738, -60.983, 0.22 ) }
    dend_33 { pt3dadd( 10.1448, -45.1689, -62.1279, 1.33 ) }
    dend_33 { pt3dadd( 10.457, -45.4848, -62.6526, 1.62 ) }
    dend_33 { pt3dadd( 11.5937, -46.7528, -64.7066, 0.59 ) }
    dend_33 { pt3dadd( 12.3417, -47.6853, -66.2252, 0.22 ) }
    dend_33 { pt3dadd( 12.7099, -48.2417, -67.149, 0.74 ) }
    dend_33 { pt3dadd( 12.8548, -48.516, -67.5928, 0.96 ) }
    dend_33 { pt3dadd( 13.4051, -49.7798, -69.6423, 0.29 ) }
    dend_33 { pt3dadd( 13.6024, -50.3391, -70.6285, 1.18 ) }
    dend_33 { pt3dadd( 13.693, -50.6865, -71.2866, 1.4 ) }
    dend_33 { pt3dadd( 13.9667, -52.0841, -73.9782, 0.22 ) }
    dend_33 { pt3dadd( 14.0216, -52.4943, -74.8106, 1.03 ) }
    dend_33 { pt3dadd( 14.0346, -52.7494, -75.3387, 1.18 ) }
    dend_33 { pt3dadd( 13.9586, -54.4828, -78.9892, 0.44 ) }
    dend_33 { pt3dadd( 13.8772, -55.1825, -80.5696, 0.22 ) }
    dend_33 { pt3dadd( 13.8378, -55.4269, -81.1325, 1.18 ) }
    dend_33 { pt3dadd( 13.7139, -56.1035, -82.7352, 1.18 ) }
    dend_33 { pt3dadd( 13.6163, -56.5877, -83.9476, 1.62 ) }
    dend_33 { pt3dadd( 13.4821, -57.3754, -85.9495, 1.84 ) }
    dend_33 { pt3dadd( 13.4489, -57.6988, -86.7713, 1.99 ) }
    dend_33 { pt3dadd( 13.4449, -58.905, -89.9067, 0.22 ) }
    dend_33 { pt3dadd( 13.5016, -59.6727, -91.9401, 1.47 ) }
    dend_33 { pt3dadd( 13.5956, -60.3135, -93.5825, 1.69 ) }
    dend_33 { pt3dadd( 13.6775, -60.7145, -94.6281, 1.4 ) }
    dend_33 { pt3dadd( 13.8969, -61.5271, -96.7508, 0.81 ) }
    dend_33 { pt3dadd( 14.2697, -62.6319, -99.6659, 1.03 ) }
    dend_33 { pt3dadd( 14.7541, -63.888, -103.119, 0.22 ) }
    dend_33 { pt3dadd( 14.9193, -64.2582, -104.122, 1.47 ) }
    dend_33 { pt3dadd( 15.405, -65.22, -106.571, 1.62 ) }
    dend_33 { pt3dadd( 15.7806, -65.9044, -108.24, 0.29 ) }
    dend_33 { pt3dadd( 16.2966, -66.6924, -110.084, 1.18 ) }
    dend_33 { pt3dadd( 16.8378, -67.3665, -111.563, 1.47 ) }
    dend_33 { pt3dadd( 17.6382, -68.2117, -113.313, 0.15 ) }
    dend_33 { pt3dadd( 18.1895, -68.7706, -114.427, 0.15 ) }
    dend_33 { pt3dadd( 18.7626, -69.3368, -115.417, 1.18 ) }
    dend_33 { pt3dadd( 19.7157, -70.337, -116.973, 0.22 ) }
    dend_33 { pt3dadd( 20.0846, -70.7514, -117.58, 0.22 ) }
    dend_33 { pt3dadd( 20.7715, -71.5445, -118.779, 0.88 ) }
    dend_33 { pt3dadd( 21.1303, -71.988, -119.478, 0.88 ) }
    dend_33 { pt3dadd( 21.5796, -72.5384, -120.406, 1.11 ) }
    dend_33 { pt3dadd( 22.0635, -73.0999, -121.389, 1.33 ) }
    dend_33 { pt3dadd( 23.6335, -74.8254, -124.577, 0.22 ) }
    dend_33 { pt3dadd( 24.4043, -75.6413, -126.186, 1.03 ) }
    dend_33 { pt3dadd( 24.5198, -75.7571, -126.429, 1.25 ) }
    dend_33 { pt3dadd( 25.8094, -76.9997, -129.095, 0.22 ) }
    dend_33 { pt3dadd( 26.4467, -77.5865, -130.407, 1.33 ) }
    dend_33 { pt3dadd( 26.8341, -77.9339, -131.181, 1.4 ) }
    dend_33 { pt3dadd( 28.0447, -79.0914, -133.677, 0.22 ) }
    dend_33 { pt3dadd( 28.6264, -79.6761, -134.952, 0.74 ) }
    dend_33 { pt3dadd( 29.5478, -80.6475, -137.137, 0.22 ) }
    dend_33 { pt3dadd( 30.4106, -81.6233, -139.312, 1.4 ) }
    dend_33 { pt3dadd( 30.7016, -81.9737, -140.081, 1.47 ) }
    dend_33 { pt3dadd( 31.7408, -83.2387, -142.862, 0.15 ) }
    dend_33 { pt3dadd( 32.5373, -84.1781, -144.994, 1.25 ) }
    dend_33 { pt3dadd( 32.8429, -84.5409, -145.855, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -7.71992, -32.5464, -43.5767, 1.92 ) }
    dend_32 { pt3dadd( -8.56199, -33.0136, -44.7641, 1.92 ) }
    dend_32 { pt3dadd( -9.30794, -33.4468, -45.8457, 1.77 ) }
    dend_32 { pt3dadd( -10.2278, -34.0068, -47.169, 2.21 ) }
    dend_32 { pt3dadd( -10.9101, -34.4656, -48.2051, 0.22 ) }
    dend_32 { pt3dadd( -11.1379, -34.6299, -48.5756, 0.22 ) }
    dend_32 { pt3dadd( -11.6014, -34.983, -49.362, 0.22 ) }
    dend_32 { pt3dadd( -12.1287, -35.4295, -50.3511, 1.47 ) }
    dend_32 { pt3dadd( -12.2789, -35.5694, -50.6625, 1.77 ) }
    dend_32 { pt3dadd( -12.8965, -36.1853, -52.0464, 0.52 ) }
    dend_32 { pt3dadd( -13.3561, -36.6569, -53.1515, 1.25 ) }
    dend_32 { pt3dadd( -13.5234, -36.8355, -53.5742, 1.4 ) }
    dend_32 { pt3dadd( -13.9979, -37.4221, -54.9194, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -14.3844, -37.9573, -56.0973, 1.62 ) }
    dend_32 { pt3dadd( -14.5285, -38.1734, -56.5889, 1.84 ) }
    dend_32 { pt3dadd( -14.8298, -38.678, -57.7028, 0.52 ) }
    dend_32 { pt3dadd( -15.1262, -39.2397, -58.9022, 1.69 ) }
    dend_32 { pt3dadd( -15.2954, -39.6011, -59.6338, 2.06 ) }
    dend_32 { pt3dadd( -15.4019, -39.8713, -60.1362, 2.21 ) }
    dend_32 { pt3dadd( -15.9556, -41.3528, -62.7915, 0.44 ) }
    dend_32 { pt3dadd( -16.0876, -41.754, -63.5112, 0.81 ) }
    dend_32 { pt3dadd( -16.127, -41.9046, -63.7673, 0.81 ) }
    dend_32 { pt3dadd( -16.2069, -42.2203, -64.2738, 0.59 ) }
    dend_32 { pt3dadd( -16.2522, -42.4114, -64.5585, 0.88 ) }
    dend_32 { pt3dadd( -16.3657, -43.0351, -65.4038, 0.37 ) }
    dend_32 { pt3dadd( -16.6019, -44.5463, -67.2337, 1.4 ) }
    dend_32 { pt3dadd( -16.6628, -44.9259, -67.6894, 1.92 ) }
    dend_32 { pt3dadd( -16.861, -45.9896, -69.1097, 0.22 ) }
    dend_32 { pt3dadd( -16.9398, -46.3625, -69.6432, 0.22 ) }
    dend_32 { pt3dadd( -17.0054, -46.6182, -70.0178, 0.22 ) }
    dend_32 { pt3dadd( -17.1903, -47.1983, -70.8569, 1.84 ) }
    dend_32 { pt3dadd( -17.2397, -47.3188, -71.0551, 2.06 ) }
    dend_32 { pt3dadd( -17.9061, -48.7265, -73.6735, 0.22 ) }
    dend_32 { pt3dadd( -18.0268, -48.9391, -74.1136, 0.22 ) }
    dend_32 { pt3dadd( -18.1336, -49.0926, -74.4602, 0.96 ) }
    dend_32 { pt3dadd( -18.2614, -49.2524, -74.837, 1.18 ) }
    dend_32 { pt3dadd( -19.2088, -50.3273, -77.4551, 0.44 ) }
    dend_32 { pt3dadd( -19.3768, -50.5098, -77.8802, 1.18 ) }
    dend_32 { pt3dadd( -19.5967, -50.7338, -78.3735, 1.18 ) }
    dend_32 { pt3dadd( -20.1077, -51.2475, -79.5451, 1.33 ) }
    dend_32 { pt3dadd( -20.3544, -51.5043, -80.1103, 1.47 ) }
    dend_32 { pt3dadd( -21.0628, -52.276, -81.6624, 0.29 ) }
    dend_32 { pt3dadd( -21.4242, -52.6856, -82.3866, 1.4 ) }
    dend_32 { pt3dadd( -21.6182, -52.9226, -82.8237, 1.62 ) }
    dend_32 { pt3dadd( -22.3832, -53.9864, -84.8731, 0.22 ) }
    dend_32 { pt3dadd( -22.5272, -54.2074, -85.2955, 0.81 ) }
    dend_32 { pt3dadd( -22.696, -54.4776, -85.8072, 0.29 ) }
    dend_32 { pt3dadd( -22.9249, -54.8586, -86.4989, 1.11 ) }
    dend_32 { pt3dadd( -23.6599, -56.0876, -88.7336, 0.59 ) }
    dend_32 { pt3dadd( -24.4224, -57.2988, -90.8404, 0.22 ) }
    dend_32 { pt3dadd( -24.6555, -57.645, -91.4208, 0.22 ) }
    dend_32 { pt3dadd( -24.9767, -58.079, -92.1636, 1.69 ) }
    dend_32 { pt3dadd( -25.1681, -58.3085, -92.5848, 2.14 ) }
    dend_32 { pt3dadd( -26.0508, -59.2692, -94.3413, 0.22 ) }
    dend_32 { pt3dadd( -26.4436, -59.6533, -95.0069, 1.92 ) }
    dend_32 { pt3dadd( -26.6731, -59.8595, -95.3712, 2.21 ) }
    dend_32 { pt3dadd( -26.9736, -60.1188, -95.8578, 2.21 ) }
    dend_32 { pt3dadd( -28.4232, -61.3645, -98.2123, 0.22 ) }
    dend_32 { pt3dadd( -28.5601, -61.4843, -98.436, 0.44 ) }
    dend_32 { pt3dadd( -28.904, -61.8103, -98.9957, 0.29 ) }
    dend_32 { pt3dadd( -29.3378, -62.2576, -99.7279, 1.03 ) }
    dend_32 { pt3dadd( -29.4685, -62.4002, -99.9489, 0.81 ) }
    dend_32 { pt3dadd( -29.7856, -62.7744, -100.435, 0.29 ) }
    dend_32 { pt3dadd( -30.1525, -63.2238, -100.919, 1.11 ) }
    dend_32 { pt3dadd( -30.2924, -63.3945, -101.141, 1.33 ) }
    dend_32 { pt3dadd( -30.4623, -63.6082, -101.437, 1.33 ) }
    dend_32 { pt3dadd( -31.5635, -65.017, -103.403, 0.22 ) }
    dend_32 { pt3dadd( -31.9637, -65.528, -104.155, 1.99 ) }
    dend_32 { pt3dadd( -32.1385, -65.7441, -104.481, 2.43 ) }
    dend_32 { pt3dadd( -33.4806, -67.38, -106.991, 0.22 ) }
    dend_32 { pt3dadd( -33.6632, -67.5953, -107.356, 0.59 ) }
    dend_32 { pt3dadd( -33.7929, -67.7568, -107.626, 0.59 ) }
    dend_32 { pt3dadd( -34.2774, -68.3725, -108.644, 0.22 ) }
    dend_32 { pt3dadd( -34.4774, -68.6329, -109.079, 1.25 ) }
    dend_32 { pt3dadd( -34.7414, -69.0066, -109.69, 1.62 ) }
    dend_32 { pt3dadd( -35.6833, -70.4444, -111.856, 0.22 ) }
    dend_32 { pt3dadd( -36.0402, -71.0165, -112.72, 0.22 ) }
    dend_32 { pt3dadd( -36.1854, -71.2755, -113.09, 0.96 ) }
    dend_32 { pt3dadd( -36.2698, -71.4528, -113.325, 1.33 ) }
    dend_32 { pt3dadd( -36.7955, -72.7709, -115.032, 0.22 ) }
    dend_32 { pt3dadd( -36.8764, -73.0197, -115.361, 0.74 ) }
    dend_32 { pt3dadd( -36.9396, -73.2765, -115.693, 0.74 ) }
    dend_32 { pt3dadd( -37.0089, -73.6163, -116.155, 0.22 ) }
    dend_32 { pt3dadd( -37.1298, -74.3395, -117.125, 1.84 ) }
    dend_32 { pt3dadd( -37.1889, -74.7462, -117.669, 2.14 ) }
    dend_32 { pt3dadd( -37.3849, -76.3365, -119.743, 0.22 ) }
    dend_32 { pt3dadd( -37.4164, -76.6114, -120.104, 0.22 ) }
    dend_32 { pt3dadd( -37.4803, -77.1706, -120.829, 1.55 ) }
    dend_32 { pt3dadd( -37.5233, -77.5143, -121.268, 1.84 ) }
    dend_32 { pt3dadd( -37.6757, -78.5283, -122.571, 0.22 ) }
    dend_32 { pt3dadd( -37.7399, -78.8887, -123.038, 0.52 ) }
    dend_32 { pt3dadd( -37.8575, -79.3721, -123.773, 0.22 ) }
    dend_32 { pt3dadd( -38.0425, -79.9367, -124.79, 1.03 ) }
    dend_32 { pt3dadd( -38.0859, -80.0467, -125.006, 1.18 ) }
    dend_32 { pt3dadd( -38.5375, -81.0699, -127.133, 1.25 ) }
    dend_32 { pt3dadd( -38.6851, -81.3659, -127.782, 1.62 ) }
    dend_32 { pt3dadd( -39.3512, -82.6192, -130.548, 0.22 ) }
    dend_32 { pt3dadd( -39.5651, -82.9888, -131.408, 0.22 ) }
    dend_32 { pt3dadd( -39.7488, -83.2932, -132.101, 1.47 ) }
    dend_32 { pt3dadd( -39.9986, -83.6982, -133.01, 1.62 ) }
    dend_32 { pt3dadd( -40.3971, -84.3388, -134.445, 0.22 ) }
    dend_32 { pt3dadd( -40.5198, -84.5432, -134.937, 0.96 ) }
    dend_32 { pt3dadd( -41.1705, -85.6975, -137.7, 0.22 ) }
    dend_32 { pt3dadd( -41.3156, -85.9572, -138.369, 1.18 ) }
    dend_32 { pt3dadd( -41.5416, -86.3374, -139.392, 1.4 ) }
    dend_32 { pt3dadd( -42.0108, -87.0695, -141.362, 1.03 ) }
    dend_32 { pt3dadd( -42.7408, -88.1236, -144.212, 0.22 ) }
    dend_32 { pt3dadd( -42.9297, -88.3764, -144.902, 1.47 ) }
    dend_32 { pt3dadd( -43.2417, -88.7546, -145.958, 1.55 ) }
    dend_32 { pt3dadd( -43.6036, -89.1556, -147.11, 0.22 ) }
    dend_32 { pt3dadd( -43.9404, -89.5009, -148.053, 0.22 ) }
    dend_32 { pt3dadd( -44.1218, -89.664, -148.479, 1.11 ) }
    dend_32 { pt3dadd( -44.4394, -89.9059, -149.199, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( -45.5971, -90.6821, -151.87, 0.22 ) }
    dend_32 { pt3dadd( -45.7592, -90.784, -152.246, 1.18 ) }
    dend_32 { pt3dadd( -45.965, -90.904, -152.749, 1.18 ) }
    dend_32 { pt3dadd( -46.4486, -91.1795, -153.969, 0.66 ) }
    dend_32 { pt3dadd( -47.8135, -91.9387, -157.411, 0.22 ) }
    dend_32 { pt3dadd( -48.1046, -92.0915, -158.11, 0.22 ) }
    dend_32 { pt3dadd( -48.556, -92.3088, -159.129, 1.18 ) }
    dend_32 { pt3dadd( -48.9497, -92.4826, -160.047, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.6458, -14.9247, 2.79698, 0.59 ) }
    dend_24 { pt3dadd( -14.1752, -15.3962, 2.99739, 0.59 ) }
    dend_24 { pt3dadd( -14.8341, -15.5321, 3.05747, 0.66 ) }
    dend_24 { pt3dadd( -15.3529, -15.5862, 3.10653, 0.81 ) }
    dend_24 { pt3dadd( -15.6643, -15.5905, 3.14175, 0.81 ) }
    dend_24 { pt3dadd( -16.2784, -15.5832, 3.23008, 0.81 ) }
    dend_24 { pt3dadd( -17.0785, -15.5805, 3.40905, 0.96 ) }
    dend_24 { pt3dadd( -17.537, -15.5417, 3.54009, 0.66 ) }
    dend_24 { pt3dadd( -18.1064, -15.4779, 3.73917, 0.37 ) }
    dend_24 { pt3dadd( -18.6597, -15.4012, 3.97062, 0.37 ) }
    dend_24 { pt3dadd( -19.3494, -15.3038, 4.32065, 1.18 ) }
    dend_24 { pt3dadd( -20.1514, -15.2117, 4.86006, 1.69 ) }
    dend_24 { pt3dadd( -20.386, -15.2195, 5.07568, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.6458, -14.9247, 2.79698, 1.25 ) }
    dend_23 { pt3dadd( -13.0016, -16.142, 2.5704, 1.25 ) }
    dend_23 { pt3dadd( -13.4459, -17.3926, 2.34381, 0.74 ) }
    dend_23 { pt3dadd( -13.7842, -18.2067, 2.20472, 0.96 ) }
    dend_23 { pt3dadd( -14.2545, -19.1812, 2.05106, 1.18 ) }
    dend_23 { pt3dadd( -14.6534, -19.9065, 1.97999, 1.47 ) }
    dend_23 { pt3dadd( -15.077, -20.6361, 1.94367, 1.47 ) }
    dend_23 { pt3dadd( -15.4542, -21.2019, 1.94955, 1.55 ) }
    dend_23 { pt3dadd( -15.9252, -21.8466, 2.01646, 1.55 ) }
    dend_23 { pt3dadd( -16.4193, -22.5312, 2.12766, 1.33 ) }
    dend_23 { pt3dadd( -17.1973, -23.6342, 2.36707, 1.11 ) }
    dend_23 { pt3dadd( -17.6446, -24.3388, 2.50191, 0.96 ) }
    dend_23 { pt3dadd( -17.9816, -24.9879, 2.55968, 0.81 ) }
    dend_23 { pt3dadd( -18.285, -25.9418, 2.32895, 0.66 ) }
    dend_23 { pt3dadd( -18.4071, -26.6714, 1.95415, 0.52 ) }
    dend_23 { pt3dadd( -18.4581, -27.1668, 1.61785, 0.52 ) }
    dend_23 { pt3dadd( -18.5424, -28.0181, 0.955921, 1.11 ) }
    dend_23 { pt3dadd( -18.7049, -29.3368, -0.131507, 1.55 ) }
    dend_23 { pt3dadd( -19.1049, -31.9851, -2.37222, 1.33 ) }
    dend_23 { pt3dadd( -19.2896, -32.9527, -3.20228, 0.88 ) }
    dend_23 { pt3dadd( -19.5121, -33.8024, -3.90122, 1.18 ) }
    dend_23 { pt3dadd( -19.813, -34.637, -4.49625, 1.84 ) }
    dend_23 { pt3dadd( -20.0827, -35.1524, -4.75645, 2.21 ) }
    dend_23 { pt3dadd( -20.4462, -35.6695, -4.88053, 2.36 ) }
    dend_23 { pt3dadd( -20.8224, -36.1132, -4.88934, 2.5 ) }
    dend_23 { pt3dadd( -21.3177, -36.6712, -4.88751, 2.28 ) }
    dend_23 { pt3dadd( -21.9887, -37.4471, -4.88398, 1.92 ) }
    dend_23 { pt3dadd( -22.7738, -38.3969, -4.91988, 1.18 ) }
    dend_23 { pt3dadd( -23.2962, -39.052, -4.98203, 0.96 ) }
    dend_23 { pt3dadd( -23.8107, -39.7226, -5.10096, 0.66 ) }
    dend_23 { pt3dadd( -24.4464, -40.6067, -5.35318, 0.44 ) }
    dend_23 { pt3dadd( -25.1893, -41.7387, -5.81693, 1.77 ) }
    dend_23 { pt3dadd( -25.6177, -42.4514, -6.17639, 2.28 ) }
    dend_23 { pt3dadd( -25.9009, -42.9782, -6.48555, 2.28 ) }
    dend_23 { pt3dadd( -26.23, -43.6691, -6.91496, 2.43 ) }
    dend_23 { pt3dadd( -26.6057, -44.5437, -7.44548, 1.92 ) }
    dend_23 { pt3dadd( -27.0759, -45.7468, -8.12544, 0.81 ) }
    dend_23 { pt3dadd( -27.4232, -46.6707, -8.58475, 0.96 ) }
    dend_23 { pt3dadd( -27.8079, -47.6607, -8.98063, 1.18 ) }
    dend_23 { pt3dadd( -28.0627, -48.2589, -9.16433, 0.96 ) }
    dend_23 { pt3dadd( -28.4979, -49.1063, -9.32293, 0.44 ) }
    dend_23 { pt3dadd( -28.8698, -49.6842, -9.37275, 0.96 ) }
    dend_23 { pt3dadd( -29.0912, -49.992, -9.37935, 1.11 ) }
    dend_23 { pt3dadd( -29.7252, -50.7725, -9.36041, 0.52 ) }
    dend_23 { pt3dadd( -30.2875, -51.3622, -9.30563, 0.44 ) }
    dend_23 { pt3dadd( -31.2928, -52.2611, -9.21811, 1.03 ) }
    dend_23 { pt3dadd( -31.9486, -52.7533, -9.16257, 1.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.8895, -34.5983, 0.856652, 0.81 ) }
    dend_21 { pt3dadd( -12.3532, -35.6058, -2.8316, 0.81 ) }
    dend_21 { pt3dadd( -13.0996, -35.9898, -4.4623, 1.18 ) }
    dend_21 { pt3dadd( -13.5679, -36.2354, -5.42571, 1.25 ) }
    dend_21 { pt3dadd( -14.3249, -36.6606, -7.03387, 0.66 ) }
    dend_21 { pt3dadd( -14.5726, -36.8185, -7.58656, 0.52 ) }
    dend_21 { pt3dadd( -15.0281, -37.1532, -8.6453, 0.66 ) }
    dend_21 { pt3dadd( -15.2933, -37.3653, -9.22504, 0.88 ) }
    dend_21 { pt3dadd( -15.5663, -37.8763, -10.2081, 1.11 ) }
    dend_21 { pt3dadd( -15.6992, -38.5234, -11.49, 1.25 ) }
    dend_21 { pt3dadd( -15.7312, -38.769, -12.0097, 1.25 ) }
    dend_21 { pt3dadd( -15.7561, -39.0008, -12.5153, 0.96 ) }
    dend_21 { pt3dadd( -15.7846, -39.3843, -13.3532, 0.59 ) }
    dend_21 { pt3dadd( -15.8631, -40.0568, -14.9536, 1.18 ) }
    dend_21 { pt3dadd( -16.0556, -41.2361, -17.8603, 1.25 ) }
    dend_21 { pt3dadd( -16.217, -42.1133, -19.9135, 1.25 ) }
    dend_21 { pt3dadd( -16.2943, -42.5492, -20.8773, 1.69 ) }
    dend_21 { pt3dadd( -16.3474, -42.8455, -21.4698, 1.77 ) }
    dend_21 { pt3dadd( -16.6492, -44.4916, -24.1733, 0.81 ) }
    dend_21 { pt3dadd( -16.7774, -45.2206, -25.1433, 1.11 ) }
    dend_21 { pt3dadd( -16.8485, -45.8538, -25.8169, 0.96 ) }
    dend_21 { pt3dadd( -16.9538, -46.6374, -26.5291, 0.52 ) }
    dend_21 { pt3dadd( -17.1752, -47.7284, -27.3985, 0.52 ) }
    dend_21 { pt3dadd( -17.6641, -49.595, -28.6675, 2.21 ) }
    dend_21 { pt3dadd( -17.9528, -50.4702, -29.1206, 2.5 ) }
    dend_21 { pt3dadd( -18.0907, -50.7999, -29.2882, 2.5 ) }
    dend_21 { pt3dadd( -18.5924, -51.7924, -29.7898, 0.66 ) }
    dend_21 { pt3dadd( -19.0757, -52.5758, -30.1963, 1.25 ) }
    dend_21 { pt3dadd( -19.3546, -52.9706, -30.3914, 1.47 ) }
    dend_21 { pt3dadd( -19.6937, -53.3843, -30.5717, 1.47 ) }
    dend_21 { pt3dadd( -20.3233, -54.1194, -30.8423, 1.33 ) }
    dend_21 { pt3dadd( -20.7118, -54.537, -30.9972, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -21.3165, -55.1517, -31.2257, 0.29 ) }
    dend_21 { pt3dadd( -21.6191, -55.4596, -31.3515, 0.22 ) }
    dend_21 { pt3dadd( -22.0151, -55.8905, -31.5298, 0.22 ) }
    dend_21 { pt3dadd( -22.4775, -56.4796, -31.7489, 0.96 ) }
    dend_21 { pt3dadd( -22.7343, -56.8837, -31.8722, 1.18 ) }
    dend_21 { pt3dadd( -22.9216, -57.2746, -32.0016, 0.96 ) }
    dend_21 { pt3dadd( -23.3321, -58.4262, -32.4447, 0.22 ) }
    dend_21 { pt3dadd( -23.4544, -58.8369, -32.6312, 0.22 ) }
    dend_21 { pt3dadd( -23.6434, -59.4916, -32.9946, 0.88 ) }
    dend_21 { pt3dadd( -23.751, -59.8797, -33.2353, 1.11 ) }
    dend_21 { pt3dadd( -24.0453, -60.8958, -33.8797, 0.22 ) }
    dend_21 { pt3dadd( -24.4244, -61.9381, -34.6598, 1.77 ) }
    dend_21 { pt3dadd( -24.614, -62.3435, -35.0612, 2.28 ) }
    dend_21 { pt3dadd( -24.9679, -62.9607, -35.8624, 2.28 ) }
    dend_21 { pt3dadd( -25.6289, -63.8796, -37.344, 0.15 ) }
    dend_21 { pt3dadd( -25.9203, -64.2461, -38.0339, 0.74 ) }
    dend_21 { pt3dadd( -26.6579, -65.1375, -39.9139, 0.44 ) }
    dend_21 { pt3dadd( -27.5063, -66.233, -42.299, 1.69 ) }
    dend_21 { pt3dadd( -28.0657, -66.993, -44.0131, 2.28 ) }
    dend_21 { pt3dadd( -28.3491, -67.3972, -44.9337, 2.58 ) }
    dend_21 { pt3dadd( -29.018, -68.3632, -47.123, 0.52 ) }
    dend_21 { pt3dadd( -29.4333, -69.0227, -48.5065, 0.29 ) }
    dend_21 { pt3dadd( -30.0526, -70.1586, -50.5469, 2.21 ) }
    dend_21 { pt3dadd( -30.5351, -71.1165, -52.0408, 2.58 ) }
    dend_21 { pt3dadd( -31.3685, -72.7771, -54.3584, 0.29 ) }
    dend_21 { pt3dadd( -31.6227, -73.2766, -54.9856, 0.22 ) }
    dend_21 { pt3dadd( -31.8154, -73.6158, -55.3665, 0.22 ) }
    dend_21 { pt3dadd( -32.1536, -74.1599, -55.9135, 1.33 ) }
    dend_21 { pt3dadd( -32.4359, -74.5803, -56.27, 1.55 ) }
    dend_21 { pt3dadd( -33.7086, -76.4381, -57.63, 0.22 ) }
    dend_21 { pt3dadd( -34.0492, -76.9142, -57.9555, 0.96 ) }
    dend_21 { pt3dadd( -34.2705, -77.2016, -58.1777, 1.25 ) }
    dend_21 { pt3dadd( -34.5274, -77.501, -58.4584, 1.25 ) }
    dend_21 { pt3dadd( -35.4412, -78.4753, -59.4877, 0.22 ) }
    dend_21 { pt3dadd( -36.0561, -79.0862, -60.1623, 0.88 ) }
    dend_21 { pt3dadd( -36.2776, -79.2965, -60.4069, 1.11 ) }
    dend_21 { pt3dadd( -36.7276, -79.7371, -60.9296, 1.11 ) }
    dend_21 { pt3dadd( -38.1583, -81.2299, -62.5917, 0.22 ) }
    dend_21 { pt3dadd( -38.6552, -81.7774, -63.1551, 1.77 ) }
    dend_21 { pt3dadd( -38.9613, -82.1317, -63.4945, 2.28 ) }
    dend_21 { pt3dadd( -39.3599, -82.6233, -63.9158, 2.14 ) }
    dend_21 { pt3dadd( -40.4553, -84.0528, -65.0604, 0.22 ) }
    dend_21 { pt3dadd( -40.9641, -84.7809, -65.5747, 1.03 ) }
    dend_21 { pt3dadd( -41.2079, -85.163, -65.8323, 1.33 ) }
    dend_21 { pt3dadd( -42.0186, -86.4088, -66.7594, 0.22 ) }
    dend_21 { pt3dadd( -42.3163, -86.8507, -67.113, 0.96 ) }
    dend_21 { pt3dadd( -42.642, -87.3012, -67.5103, 1.25 ) }
    dend_21 { pt3dadd( -42.8375, -87.5574, -67.7563, 1.33 ) }
    dend_21 { pt3dadd( -44.0954, -89.1654, -69.4, 0.15 ) }
    dend_21 { pt3dadd( -44.6155, -89.8503, -70.1244, 1.18 ) }
    dend_21 { pt3dadd( -44.965, -90.3284, -70.6291, 1.55 ) }
    dend_21 { pt3dadd( -45.8361, -91.5949, -71.9139, 0.22 ) }
    dend_21 { pt3dadd( -46.0598, -91.9419, -72.2376, 0.96 ) }
    dend_21 { pt3dadd( -46.3563, -92.42, -72.659, 0.96 ) }
    dend_21 { pt3dadd( -46.9454, -93.4705, -73.4933, 0.22 ) }
    dend_21 { pt3dadd( -47.1162, -93.8309, -73.7484, 0.66 ) }
    dend_21 { pt3dadd( -47.5553, -94.8368, -74.4549, 0.22 ) }
    dend_21 { pt3dadd( -47.8084, -95.4604, -74.872, 1.4 ) }
    dend_21 { pt3dadd( -48.0385, -96.0415, -75.2705, 1.84 ) }
    dend_21 { pt3dadd( -48.1797, -96.3824, -75.5101, 1.62 ) }
    dend_21 { pt3dadd( -48.8924, -97.9745, -76.6295, 0.15 ) }
    dend_21 { pt3dadd( -49.4073, -99.095, -77.4438, 1.03 ) }
    dend_21 { pt3dadd( -49.5939, -99.4727, -77.7525, 1.55 ) }
    dend_21 { pt3dadd( -49.8139, -99.9083, -78.1202, 1.55 ) }
    dend_21 { pt3dadd( -50.5421, -101.33, -79.3355, 0.22 ) }
    dend_21 { pt3dadd( -50.7401, -101.716, -79.6846, 0.88 ) }
    dend_21 { pt3dadd( -50.9877, -102.158, -80.1004, 0.88 ) }
    dend_21 { pt3dadd( -51.9142, -103.807, -81.5389, 0.22 ) }
    dend_21 { pt3dadd( -52.2609, -104.419, -82.0381, 1.18 ) }
    dend_21 { pt3dadd( -52.503, -104.84, -82.3513, 1.33 ) }
    dend_21 { pt3dadd( -53.3328, -106.282, -83.3873, 0.22 ) }
    dend_21 { pt3dadd( -53.7094, -106.932, -83.8333, 0.22 ) }
    dend_21 { pt3dadd( -54.2091, -107.732, -84.3625, 0.22 ) }
    dend_21 { pt3dadd( -54.6682, -108.466, -84.793, 0.22 ) }
    dend_21 { pt3dadd( -55.2965, -109.458, -85.3831, 1.55 ) }
    dend_21 { pt3dadd( -55.7705, -110.229, -85.8467, 1.92 ) }
    dend_21 { pt3dadd( -56.0167, -110.669, -86.1032, 1.77 ) }
    dend_21 { pt3dadd( -56.9143, -112.483, -87.2188, 0.22 ) }
    dend_21 { pt3dadd( -57.237, -113.161, -87.6602, 0.96 ) }
    dend_21 { pt3dadd( -57.4132, -113.557, -87.9226, 1.11 ) }
    dend_21 { pt3dadd( -57.9777, -114.929, -88.8528, 0.22 ) }
    dend_21 { pt3dadd( -58.3192, -115.809, -89.4379, 0.22 ) }
    dend_21 { pt3dadd( -58.6068, -116.596, -89.9828, 1.03 ) }
    dend_21 { pt3dadd( -58.7683, -117.073, -90.3167, 1.33 ) }
    dend_21 { pt3dadd( -58.953, -117.594, -90.7044, 1.33 ) }
    dend_21 { pt3dadd( -59.6161, -119.336, -92.0169, 0.15 ) }
    dend_21 { pt3dadd( -59.9076, -120.074, -92.5568, 0.15 ) }
    dend_21 { pt3dadd( -60.3386, -121.104, -93.2897, 1.55 ) }
    dend_21 { pt3dadd( -60.5322, -121.571, -93.5932, 1.84 ) }
    dend_21 { pt3dadd( -60.7359, -122.062, -93.8842, 1.77 ) }
    dend_21 { pt3dadd( -61.2293, -123.171, -94.4678, 0.22 ) }
    dend_21 { pt3dadd( -61.5505, -123.831, -94.7518, 0.22 ) }
    dend_21 { pt3dadd( -61.8898, -124.466, -94.9979, 0.96 ) }
    dend_21 { pt3dadd( -62.1165, -124.86, -95.121, 1.11 ) }
    dend_21 { pt3dadd( -62.8118, -125.966, -95.432, 0.22 ) }
    dend_21 { pt3dadd( -63.1589, -126.434, -95.5805, 0.22 ) }
    dend_21 { pt3dadd( -63.5917, -126.914, -95.7554, 0.22 ) }
    dend_21 { pt3dadd( -63.939, -127.237, -95.8927, 0.96 ) }
    dend_21 { pt3dadd( -64.1742, -127.425, -95.9784, 1.25 ) }
    dend_21 { pt3dadd( -64.675, -127.77, -96.1456, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_21 { pt3dadd( -65.9488, -128.551, -96.6132, 0.15 ) }
    dend_21 { pt3dadd( -66.6657, -128.988, -96.9369, 0.15 ) }
    dend_21 { pt3dadd( -66.9375, -129.165, -97.0966, 0.44 ) }
    dend_21 { pt3dadd( -67.223, -129.365, -97.3051, 0.44 ) }
    dend_21 { pt3dadd( -67.7814, -129.764, -97.7567, 0.15 ) }
    dend_21 { pt3dadd( -68.6544, -130.458, -98.5787, 1.33 ) }
    dend_21 { pt3dadd( -69.0375, -130.79, -99.0168, 1.4 ) }
    dend_21 { pt3dadd( -69.8656, -131.641, -100.308, 0.22 ) }
    dend_21 { pt3dadd( -70.2577, -132.109, -101.066, 0.44 ) }
    dend_21 { pt3dadd( -70.4639, -132.402, -101.537, 0.22 ) }
    dend_21 { pt3dadd( -70.8359, -133.015, -102.559, 1.33 ) }
    dend_21 { pt3dadd( -71.1601, -133.643, -103.624, 1.62 ) }
    dend_21 { pt3dadd( -71.7756, -135.01, -105.93, 0.22 ) }
    dend_21 { pt3dadd( -71.9553, -135.487, -106.718, 0.22 ) }
    dend_21 { pt3dadd( -72.1044, -135.953, -107.468, 0.96 ) }
    dend_21 { pt3dadd( -72.3104, -136.824, -108.812, 1.18 ) }
    dend_21 { pt3dadd( -72.536, -138.086, -110.668, 0.22 ) }
    dend_21 { pt3dadd( -72.5708, -138.428, -111.111, 0.22 ) }
    dend_21 { pt3dadd( -72.5822, -138.655, -111.368, 0.66 ) }
    dend_21 { pt3dadd( -72.6058, -139.833, -112.593, 0.22 ) }
    dend_21 { pt3dadd( -72.5939, -140.857, -113.573, 2.06 ) }
    dend_21 { pt3dadd( -72.59, -141.135, -113.821, 2.28 ) }
    dend_21 { pt3dadd( -72.548, -142.808, -115.243, 0.22 ) }
    dend_21 { pt3dadd( -72.5329, -143.273, -115.645, 0.22 ) }
    dend_21 { pt3dadd( -72.5123, -144.254, -116.534, 1.33 ) }
    dend_21 { pt3dadd( -72.5106, -144.598, -116.86, 1.62 ) }
    dend_21 { pt3dadd( -72.5871, -146.597, -118.798, 0.37 ) }
    dend_21 { pt3dadd( -72.6412, -147.27, -119.447, 0.22 ) }
    dend_21 { pt3dadd( -72.7306, -147.933, -120.093, 0.22 ) }
    dend_21 { pt3dadd( -72.9244, -149.073, -121.196, 1.03 ) }
    dend_21 { pt3dadd( -73.1237, -149.864, -121.964, 1.4 ) }
    dend_21 { pt3dadd( -73.5682, -151.137, -123.204, 0.22 ) }
    dend_21 { pt3dadd( -73.9689, -152.043, -124.044, 1.25 ) }
    dend_21 { pt3dadd( -74.2771, -152.637, -124.588, 1.55 ) }
    dend_21 { pt3dadd( -74.4067, -152.852, -124.77, 1.55 ) }
    dend_21 { pt3dadd( -75.5365, -154.516, -126.022, 0.29 ) }
    dend_21 { pt3dadd( -75.9198, -155.015, -126.375, 0.52 ) }
    dend_21 { pt3dadd( -76.1032, -155.218, -126.52, 0.52 ) }
    dend_21 { pt3dadd( -76.6114, -155.746, -126.855, 0.22 ) }
    dend_21 { pt3dadd( -77.3141, -156.462, -127.219, 0.22 ) }
    dend_21 { pt3dadd( -77.8418, -156.983, -127.438, 1.25 ) }
    dend_21 { pt3dadd( -78.2506, -157.369, -127.554, 1.4 ) }
    dend_21 { pt3dadd( -78.7781, -157.844, -127.695, 1.11 ) }
    dend_21 { pt3dadd( -79.6047, -158.524, -127.946, 0.15 ) }
    dend_21 { pt3dadd( -80.2709, -159.047, -128.23, 0.15 ) }
    dend_21 { pt3dadd( -80.983, -159.613, -128.626, 0.88 ) }
    dend_21 { pt3dadd( -81.3406, -159.882, -128.842, 1.11 ) }
    dend_21 { pt3dadd( -81.6367, -160.091, -129.012, 1.11 ) }
    dend_21 { pt3dadd( -82.7506, -160.846, -129.61, 0.22 ) }
    dend_21 { pt3dadd( -83.8796, -161.597, -130.216, 0.22 ) }
    dend_21 { pt3dadd( -84.3266, -161.894, -130.537, 0.22 ) }
    dend_21 { pt3dadd( -85.2366, -162.53, -131.28, 0.22 ) }
    dend_21 { pt3dadd( -85.9587, -163.07, -131.925, 1.25 ) }
    dend_21 { pt3dadd( -86.4087, -163.445, -132.352, 1.55 ) }
    dend_21 { pt3dadd( -86.9825, -163.968, -132.94, 1.55 ) }
    dend_21 { pt3dadd( -89.0465, -165.886, -135.103, 0.22 ) }
    dend_21 { pt3dadd( -89.3233, -166.145, -135.43, 0.66 ) }
    dend_21 { pt3dadd( -89.5697, -166.357, -135.77, 0.66 ) }
    dend_21 { pt3dadd( -90.066, -166.741, -136.486, 0.22 ) }
    dend_21 { pt3dadd( -90.5577, -167.074, -137.157, 0.22 ) }
    dend_21 { pt3dadd( -90.9153, -167.288, -137.571, 0.66 ) }
    dend_21 { pt3dadd( -91.4539, -167.601, -138.051, 0.74 ) }
    dend_21 { pt3dadd( -92.8957, -168.464, -139.246, 0.22 ) }
    dend_21 { pt3dadd( -93.4038, -168.783, -139.635, 0.44 ) }
    dend_21 { pt3dadd( -93.7291, -169.004, -139.864, 0.44 ) }
    dend_21 { pt3dadd( -94.3491, -169.524, -140.395, 0.22 ) }
    dend_21 { pt3dadd( -94.8568, -170.0, -140.939, 1.33 ) }
    dend_21 { pt3dadd( -95.1567, -170.295, -141.312, 1.69 ) }
    dend_21 { pt3dadd( -95.2888, -170.412, -141.488, 1.92 ) }
    dend_21 { pt3dadd( -95.7275, -170.762, -142.155, 1.69 ) }
    dend_21 { pt3dadd( -97.109, -171.854, -144.48, 0.59 ) }
    dend_21 { pt3dadd( -97.8209, -172.423, -145.832, 0.96 ) }
    dend_21 { pt3dadd( -98.3734, -172.893, -146.962, 0.44 ) }
    dend_21 { pt3dadd( -98.8345, -173.318, -147.946, 0.29 ) }
    dend_21 { pt3dadd( -99.2977, -173.78, -148.983, 0.29 ) }
    dend_21 { pt3dadd( -99.538, -174.055, -149.558, 0.29 ) }
    dend_21 { pt3dadd( -100.189, -174.855, -151.045, 0.88 ) }
    dend_21 { pt3dadd( -100.509, -175.222, -151.74, 1.55 ) }
    dend_21 { pt3dadd( -100.63, -175.34, -151.974, 2.06 ) }
    dend_21 { pt3dadd( -101.798, -176.326, -154.055, 1.69 ) }
    dend_21 { pt3dadd( -101.886, -176.371, -154.199, 1.84 ) }
    dend_21 { pt3dadd( -103.079, -176.807, -156.057, 0.37 ) }
    dend_21 { pt3dadd( -104.027, -177.094, -157.488, 0.22 ) }
    dend_21 { pt3dadd( -104.771, -177.303, -158.659, 1.84 ) }
    dend_21 { pt3dadd( -105.388, -177.48, -159.638, 2.06 ) }
    dend_21 { pt3dadd( -107.705, -178.132, -163.487, 0.22 ) }
    dend_21 { pt3dadd( -108.12, -178.248, -164.192, 0.22 ) }
    dend_21 { pt3dadd( -108.664, -178.412, -165.165, 1.55 ) }
    dend_21 { pt3dadd( -109.547, -178.729, -166.782, 1.69 ) }
    dend_21 { pt3dadd( -109.812, -178.844, -167.332, 1.69 ) }
    dend_21 { pt3dadd( -111.675, -179.824, -171.495, 0.52 ) }
    dend_21 { pt3dadd( -111.948, -180.0, -172.136, 1.92 ) }
    dend_21 { pt3dadd( -112.308, -180.23, -172.985, 1.92 ) }
    dend_21 { pt3dadd( -114.196, -181.39, -177.286, 1.92 ) }
    dend_21 { pt3dadd( -116.461, -182.772, -182.162, 0.66 ) }
    dend_21 { pt3dadd( -116.751, -182.958, -182.793, 0.66 ) }
    dend_21 { pt3dadd( -117.173, -183.268, -183.731, 0.29 ) }
    dend_21 { pt3dadd( -117.486, -183.52, -184.458, 0.29 ) }
    dend_21 { pt3dadd( -117.757, -183.749, -185.084, 1.11 ) }
    dend_21 { pt3dadd( -117.984, -183.984, -185.606, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -119.624, -185.469, -188.999, 0.22 ) }
    dend_21 { pt3dadd( -119.777, -185.588, -189.307, 0.22 ) }
    dend_21 { pt3dadd( -120.142, -185.853, -190.019, 1.47 ) }
    dend_21 { pt3dadd( -120.663, -186.214, -191.035, 1.77 ) }
    dend_21 { pt3dadd( -120.983, -186.411, -191.67, 1.77 ) }
    dend_21 { pt3dadd( -123.172, -187.642, -195.826, 0.22 ) }
    dend_21 { pt3dadd( -123.697, -187.914, -196.784, 1.33 ) }
    dend_21 { pt3dadd( -124.147, -188.153, -197.698, 1.62 ) }
    dend_21 { pt3dadd( -124.782, -188.514, -199.098, 1.62 ) }
    dend_21 { pt3dadd( -126.398, -189.461, -202.923, 0.22 ) }
    dend_21 { pt3dadd( -126.648, -189.611, -203.583, 1.18 ) }
    dend_21 { pt3dadd( -127.242, -189.979, -205.215, 1.33 ) }
    dend_21 { pt3dadd( -128.483, -190.789, -208.651, 0.15 ) }
    dend_21 { pt3dadd( -128.784, -190.995, -209.459, 1.25 ) }
    dend_21 { pt3dadd( -129.707, -191.644, -211.754, 1.62 ) }
    dend_21 { pt3dadd( -131.628, -192.913, -216.073, 0.22 ) }
    dend_21 { pt3dadd( -132.36, -193.354, -217.59, 0.22 ) }
    dend_21 { pt3dadd( -132.825, -193.624, -218.457, 0.44 ) }
    dend_21 { pt3dadd( -133.37, -193.944, -219.426, 0.88 ) }
    dend_21 { pt3dadd( -133.62, -194.106, -219.902, 1.47 ) }
    dend_21 { pt3dadd( -134.226, -194.614, -221.249, 1.62 ) }
    dend_21 { pt3dadd( -135.524, -195.93, -224.614, 0.22 ) }
    dend_21 { pt3dadd( -135.635, -196.058, -224.955, 1.03 ) }
    dend_21 { pt3dadd( -136.289, -196.841, -227.07, 1.11 ) }
    dend_21 { pt3dadd( -136.624, -197.263, -228.176, 0.96 ) }
    dend_21 { pt3dadd( -137.726, -198.774, -231.955, 0.22 ) }
    dend_21 { pt3dadd( -137.864, -198.949, -232.384, 0.81 ) }
    dend_21 { pt3dadd( -138.147, -199.28, -233.16, 0.81 ) }
    dend_21 { pt3dadd( -138.69, -199.859, -234.465, 0.22 ) }
    dend_21 { pt3dadd( -139.292, -200.462, -235.747, 1.47 ) }
    dend_21 { pt3dadd( -139.998, -201.147, -237.102, 1.62 ) }
    dend_21 { pt3dadd( -141.881, -202.97, -240.312, 0.15 ) }
    dend_21 { pt3dadd( -142.333, -203.405, -241.065, 0.15 ) }
    dend_21 { pt3dadd( -142.777, -203.86, -241.8, 0.96 ) }
    dend_21 { pt3dadd( -143.012, -204.113, -242.19, 0.96 ) }
    dend_21 { pt3dadd( -143.362, -204.52, -242.753, 0.22 ) }
    dend_21 { pt3dadd( -143.645, -204.893, -243.167, 1.11 ) }
    dend_21 { pt3dadd( -144.08, -205.699, -243.792, 1.11 ) }
    dend_21 { pt3dadd( -145.021, -207.262, -245.299, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 39/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -10.8895, -34.5983, 0.856652, 2.8 ) }
    dend_18 { pt3dadd( -10.7677, -35.0234, 1.0249, 2.8 ) }
    dend_18 { pt3dadd( -10.378, -36.3835, 1.56316, 1.84 ) }
    dend_18 { pt3dadd( -9.98904, -37.7413, 2.10052, 1.03 ) }
    dend_18 { pt3dadd( -9.80304, -38.3904, 2.35743, 1.03 ) }
    dend_18 { pt3dadd( -9.56356, -39.2262, 2.68819, 1.18 ) }
    dend_18 { pt3dadd( -9.35129, -39.9671, 2.98139, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 46/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.80023, 13.6948, -0.232987, 0.81 ) }
    dend_16 { pt3dadd( 8.57961, 13.9479, 0.325031, 0.81 ) }
    dend_16 { pt3dadd( 9.01282, 14.1165, 0.709798, 0.37 ) }
    dend_16 { pt3dadd( 9.68786, 14.4069, 1.34554, 0.88 ) }
    dend_16 { pt3dadd( 10.2642, 14.6816, 1.89467, 1.25 ) }
    dend_16 { pt3dadd( 11.0391, 15.0878, 2.62752, 1.25 ) }
    dend_16 { pt3dadd( 11.4031, 15.297, 2.95995, 1.11 ) }
    dend_16 { pt3dadd( 12.4144, 16.0035, 3.91394, 1.11 ) }
    dend_16 { pt3dadd( 12.7143, 16.2353, 4.17186, 1.11 ) }
    dend_16 { pt3dadd( 13.0877, 16.5321, 4.42866, 0.96 ) }
    dend_16 { pt3dadd( 13.9182, 17.1715, 4.83335, 0.66 ) }
    dend_16 { pt3dadd( 14.5778, 17.636, 5.05, 0.74 ) }
    dend_16 { pt3dadd( 15.2852, 18.069, 5.20519, 0.88 ) }
    dend_16 { pt3dadd( 16.0823, 18.4683, 5.29002, 0.96 ) }
    dend_16 { pt3dadd( 16.8732, 18.7725, 5.30412, 0.74 ) }
    dend_16 { pt3dadd( 17.7552, 19.0082, 5.24836, 1.62 ) }
    dend_16 { pt3dadd( 18.5685, 19.1368, 5.13356, 1.84 ) }
    dend_16 { pt3dadd( 19.24, 19.1793, 5.00526, 1.69 ) }
    dend_16 { pt3dadd( 20.0143, 19.188, 4.81805, 1.62 ) }
    dend_16 { pt3dadd( 21.2296, 19.1841, 4.52126, 0.88 ) }
    dend_16 { pt3dadd( 21.883, 19.2208, 4.37255, 0.74 ) }
    dend_16 { pt3dadd( 22.6891, 19.3202, 4.22061, 0.74 ) }
    dend_16 { pt3dadd( 23.5206, 19.4959, 4.10348, 0.96 ) }
    dend_16 { pt3dadd( 24.2276, 19.7107, 4.06404, 0.81 ) }
    dend_16 { pt3dadd( 25.1429, 20.0738, 4.10923, 0.74 ) }
    dend_16 { pt3dadd( 26.323, 20.6203, 4.39509, 1.25 ) }
    dend_16 { pt3dadd( 26.8206, 20.8721, 4.60243, 1.47 ) }
    dend_16 { pt3dadd( 27.3028, 21.1299, 4.94868, 1.77 ) }
    dend_16 { pt3dadd( 27.657, 21.3339, 5.29502, 1.77 ) }
    dend_16 { pt3dadd( 28.1053, 21.5915, 5.86426, 1.11 ) }
    dend_16 { pt3dadd( 29.0195, 22.0407, 7.16909, 1.03 ) }
    dend_16 { pt3dadd( 29.5711, 22.2649, 8.00106, 1.18 ) }
    dend_16 { pt3dadd( 30.6929, 22.6634, 9.69884, 1.4 ) }
    dend_16 { pt3dadd( 31.0173, 22.758, 10.1814, 1.55 ) }
    dend_16 { pt3dadd( 32.1305, 22.9714, 11.7324, 1.4 ) }
    dend_16 { pt3dadd( 32.8611, 23.0377, 12.6292, 1.84 ) }
    dend_16 { pt3dadd( 33.2422, 23.0356, 13.0024, 2.43 ) }
    dend_16 { pt3dadd( 33.6847, 23.0036, 13.333, 2.43 ) }
    dend_16 { pt3dadd( 34.2561, 22.935, 13.6384, 2.21 ) }
    dend_16 { pt3dadd( 35.781, 22.724, 14.3039, 0.96 ) }
    dend_16 { pt3dadd( 36.5835, 22.6393, 14.5817, 0.66 ) }
    dend_16 { pt3dadd( 37.168, 22.6174, 14.7737, 0.66 ) }
    dend_16 { pt3dadd( 37.8116, 22.6204, 14.9859, 0.66 ) }
    dend_16 { pt3dadd( 38.452, 22.6593, 15.182, 0.66 ) }
    dend_16 { pt3dadd( 39.327, 22.7803, 15.4378, 0.66 ) }
    dend_16 { pt3dadd( 40.2602, 23.0077, 15.6809, 1.03 ) }
    dend_16 { pt3dadd( 41.0547, 23.2839, 15.8915, 0.59 ) }
    dend_16 { pt3dadd( 41.9073, 23.6391, 16.104, 0.59 ) }
    dend_16 { pt3dadd( 42.4918, 23.9231, 16.2413, 0.96 ) }
    dend_16 { pt3dadd( 43.2388, 24.3393, 16.4048, 0.66 ) }
    dend_16 { pt3dadd( 43.9315, 24.7887, 16.5274, 0.66 ) }
    dend_16 { pt3dadd( 44.851, 25.4547, 16.6569, 1.33 ) }
    dend_16 { pt3dadd( 45.0206, 25.5917, 16.6772, 1.55 ) }
    dend_16 { pt3dadd( 45.3286, 25.8679, 16.7001, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 45.6996, 26.2199, 16.7226, 1.4 ) }
    dend_16 { pt3dadd( 46.1632, 26.6775, 16.7277, 1.11 ) }
    dend_16 { pt3dadd( 46.4769, 26.9914, 16.7383, 1.11 ) }
    dend_16 { pt3dadd( 54.1731, 30.6255, 22.1318, 1.11 ) }
    dend_16 { pt3dadd( 61.9874, 33.8174, 27.6672, 1.11 ) }
    dend_16 { pt3dadd( 69.9698, 37.6664, 32.4474, 1.11 ) }
    dend_16 { pt3dadd( 77.1757, 41.8509, 38.064, 1.11 ) }
    dend_16 { pt3dadd( 84.9905, 44.8403, 43.7239, 1.11 ) }
    dend_16 { pt3dadd( 92.8705, 47.8101, 49.305, 1.11 ) }
    dend_16 { pt3dadd( 100.795, 52.0931, 53.7601, 1.11 ) }
    dend_16 { pt3dadd( 108.935, 56.1897, 58.0203, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.80023, 13.6948, -0.232987, 2.95 ) }
    dend_1 { pt3dadd( 7.86664, 15.4233, -0.121417, 2.95 ) }
    dend_1 { pt3dadd( 7.92891, 17.0443, -0.0167955, 2.95 ) }
    dend_1 { pt3dadd( 7.97855, 18.3363, 0.0665983, 2.95 ) }
    dend_1 { pt3dadd( 8.00855, 19.1172, 0.117001, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 30.5123, 47.7112, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 38.5543, 60.3732, -0.918402, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -20.386, -15.2195, 5.07568, 0.59 ) }
    dend_28 { pt3dadd( -20.369, -16.3475, 5.67021, 0.59 ) }
    dend_28 { pt3dadd( -20.3901, -17.0998, 6.18921, 0.52 ) }
    dend_28 { pt3dadd( -20.4262, -17.6429, 6.60495, 0.88 ) }
    dend_28 { pt3dadd( -20.4814, -18.2306, 7.07784, 1.03 ) }
    dend_28 { pt3dadd( -20.5231, -18.6736, 7.43426, 1.03 ) }
    dend_28 { pt3dadd( -20.5828, -19.3095, 7.94593, 0.52 ) }
    dend_28 { pt3dadd( -20.716, -20.1637, 8.73802, 1.11 ) }
    dend_28 { pt3dadd( -20.7794, -20.4566, 9.0596, 1.4 ) }
    dend_28 { pt3dadd( -20.8626, -20.7706, 9.45116, 1.4 ) }
    dend_28 { pt3dadd( -20.9043, -28.5137, 16.4086, 1.4 ) }
    dend_28 { pt3dadd( -21.5665, -35.3594, 24.308, 1.4 ) }
    dend_28 { pt3dadd( -22.3982, -41.6405, 32.6962, 1.4 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.386, -15.2195, 5.07568, 0.29 ) }
    dend_25 { pt3dadd( -21.7892, -14.88, 5.00124, 0.29 ) }
    dend_25 { pt3dadd( -22.9884, -14.5899, 4.93762, 0.59 ) }
    dend_25 { pt3dadd( -23.4122, -14.4873, 4.91513, 0.81 ) }
    dend_25 { pt3dadd( -23.9775, -14.3506, 4.88515, 0.81 ) }
    dend_25 { pt3dadd( -24.8596, -14.1372, 4.83835, 0.29 ) }
    dend_25 { pt3dadd( -25.3913, -14.0085, 4.81014, 0.59 ) }
    dend_25 { pt3dadd( -35.2781, -9.61254, 5.88273, 0.59 ) }
    dend_25 { pt3dadd( -43.9248, -3.84885, 8.83108, 0.59 ) }
    dend_25 { pt3dadd( -52.5125, 2.42974, 10.5256, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.35129, -39.9671, 2.98139, 0.59 ) }
    dend_20 { pt3dadd( -8.92001, -40.8515, 4.11528, 0.59 ) }
    dend_20 { pt3dadd( -8.53548, -41.6866, 5.14165, 0.44 ) }
    dend_20 { pt3dadd( -8.36907, -41.9963, 5.54304, 0.44 ) }
    dend_20 { pt3dadd( -8.00281, -42.6036, 6.38452, 0.81 ) }
    dend_20 { pt3dadd( -7.71782, -43.0239, 6.98577, 1.25 ) }
    dend_20 { pt3dadd( -7.50181, -43.3077, 7.4192, 1.47 ) }
    dend_20 { pt3dadd( -7.27828, -43.5657, 7.8614, 1.47 ) }
    dend_20 { pt3dadd( -6.36631, -44.5785, 9.61567, 0.74 ) }
    dend_20 { pt3dadd( -5.39273, -45.5248, 11.3984, 0.37 ) }
    dend_20 { pt3dadd( -5.113, -45.7537, 11.8698, 0.37 ) }
    dend_20 { pt3dadd( -4.70985, -46.0393, 12.523, 0.81 ) }
    dend_20 { pt3dadd( -4.32174, -46.2886, 13.143, 0.96 ) }
    dend_20 { pt3dadd( 0.436461, -49.888, 20.9405, 0.96 ) }
    dend_20 { pt3dadd( 4.8305, -55.1965, 27.8279, 0.96 ) }
    dend_20 { pt3dadd( 10.7655, -58.6352, 34.8588, 0.96 ) }
    dend_20 { pt3dadd( 16.4707, -62.2095, 42.0054, 0.96 ) }
    dend_20 { pt3dadd( 23.2176, -66.0487, 47.9994, 0.96 ) }
    dend_20 { pt3dadd( 30.9437, -67.9607, 53.813, 0.96 ) }
    dend_20 { pt3dadd( 38.1074, -69.0716, 60.5034, 0.96 ) }
    dend_20 { pt3dadd( 45.612, -71.3843, 66.449, 0.96 ) }
    dend_20 { pt3dadd( 53.9355, -74.2721, 70.8196, 0.96 ) }
    dend_20 { pt3dadd( 61.6072, -76.449, 76.6049, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -9.35129, -39.9671, 2.98139, 1.11 ) }
    dend_19 { pt3dadd( -9.74197, -40.7595, 2.98187, 1.11 ) }
    dend_19 { pt3dadd( -10.1145, -41.711, 3.10357, 1.11 ) }
    dend_19 { pt3dadd( -10.485, -42.9088, 3.35243, 1.11 ) }
    dend_19 { pt3dadd( -10.6526, -43.6271, 3.54669, 0.96 ) }
    dend_19 { pt3dadd( -10.747, -44.1518, 3.71605, 0.96 ) }
    dend_19 { pt3dadd( -10.9151, -45.5185, 4.23058, 1.11 ) }
    dend_19 { pt3dadd( -10.9277, -46.2258, 4.55769, 1.25 ) }
    dend_19 { pt3dadd( -10.877, -46.8679, 4.90117, 1.25 ) }
    dend_19 { pt3dadd( -10.7608, -47.6281, 5.34443, 1.03 ) }
    dend_19 { pt3dadd( -10.639, -48.35, 5.7506, 1.03 ) }
    dend_19 { pt3dadd( -10.5227, -49.2931, 6.22025, 1.18 ) }
    dend_19 { pt3dadd( -10.5064, -49.7717, 6.4004, 1.77 ) }
    dend_19 { pt3dadd( -10.5397, -50.2308, 6.53956, 2.28 ) }
    dend_19 { pt3dadd( -10.6261, -50.7132, 6.6525, 2.14 ) }
    dend_19 { pt3dadd( -10.8364, -51.4765, 6.77645, 1.62 ) }
    dend_19 { pt3dadd( -11.098, -52.2645, 6.86237, 1.03 ) }
    dend_19 { pt3dadd( -11.4267, -53.1437, 6.93083, 0.74 ) }
    dend_19 { pt3dadd( -11.7707, -54.0387, 7.01376, 0.96 ) }
    dend_19 { pt3dadd( -12.1701, -55.0893, 7.12915, 1.25 ) }
    dend_19 { pt3dadd( -12.567, -56.1688, 7.29684, 1.62 ) }
    dend_19 { pt3dadd( -12.7665, -56.7516, 7.40879, 1.55 ) }
    dend_19 { pt3dadd( -12.919, -57.2226, 7.51583, 1.69 ) }
    dend_19 { pt3dadd( -13.2773, -58.3135, 7.81127, 1.18 ) }
    dend_19 { pt3dadd( -13.5311, -59.0843, 8.06109, 1.03 ) }
    dend_19 { pt3dadd( -13.7765, -59.7907, 8.32861, 1.33 ) }
    dend_19 { pt3dadd( -13.9703, -60.3201, 8.54658, 1.62 ) }
    dend_19 { pt3dadd( -14.1359, -60.7464, 8.72034, 1.62 ) }
    dend_19 { pt3dadd( -14.3596, -61.3406, 8.94656, 1.77 ) }
    dend_19 { pt3dadd( -14.5108, -61.7831, 9.08782, 1.77 ) }
    dend_19 { pt3dadd( -14.7098, -62.4866, 9.29288, 1.55 ) }
    dend_19 { pt3dadd( -14.8645, -63.141, 9.47966, 1.25 ) }
    dend_19 { pt3dadd( -15.0179, -63.967, 9.67183, 0.81 ) }
    dend_19 { pt3dadd( -15.1655, -65.0599, 9.84468, 0.81 ) }
    dend_19 { pt3dadd( -15.245, -65.9042, 9.95932, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( -15.3069, -66.9244, 10.1051, 1.03 ) }
    dend_19 { pt3dadd( -15.3137, -67.5288, 10.1981, 1.18 ) }
    dend_19 { pt3dadd( -15.2784, -68.7665, 10.4013, 0.29 ) }
    dend_19 { pt3dadd( -15.2441, -69.4454, 10.5126, 0.37 ) }
    dend_19 { pt3dadd( -15.2074, -70.5695, 10.6916, 0.37 ) }
    dend_19 { pt3dadd( -15.1837, -71.3567, 10.8283, 0.29 ) }
    dend_19 { pt3dadd( -15.1691, -71.9096, 10.9217, 0.29 ) }
    dend_19 { pt3dadd( -15.1533, -72.4496, 11.042, 0.29 ) }
    dend_19 { pt3dadd( -15.1495, -72.9427, 11.2384, 0.29 ) }
    dend_19 { pt3dadd( -15.1639, -73.5559, 11.4973, 0.22 ) }
    dend_19 { pt3dadd( -15.1356, -81.5759, 14.0172, 0.22 ) }
    dend_19 { pt3dadd( -15.7886, -89.2938, 17.369, 0.22 ) }
    dend_19 { pt3dadd( -16.1271, -96.9165, 21.0028, 0.22 ) }
    dend_19 { pt3dadd( -16.0301, -103.617, 26.2989, 0.22 ) }
    dend_19 { pt3dadd( -15.2246, -110.62, 31.0776, 0.22 ) }
    dend_19 { pt3dadd( -15.0317, -117.487, 36.13, 0.22 ) }
    dend_19 { pt3dadd( -15.6117, -125.174, 39.5747, 0.22 ) }
    dend_19 { pt3dadd( -16.7157, -132.294, 44.0832, 0.22 ) }
    dend_19 { pt3dadd( -18.5005, -139.05, 48.9773, 0.22 ) }
    dend_19 { pt3dadd( -18.444, -145.998, 53.9087, 0.22 ) }
    dend_19 { pt3dadd( -17.2457, -152.573, 59.2485, 0.22 ) }
    dend_19 { pt3dadd( -16.1815, -158.022, 65.8666, 0.22 ) }
    dend_19 { pt3dadd( -13.6613, -164.101, 71.3958, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.00855, 19.1172, 0.117001, 0.66 ) }
    dend_15 { pt3dadd( 7.44881, 19.7953, 0.202231, 0.66 ) }
    dend_15 { pt3dadd( 7.12549, 20.2726, 0.26067, 0.29 ) }
    dend_15 { pt3dadd( 6.99255, 20.4966, 0.289323, 0.44 ) }
    dend_15 { pt3dadd( 6.61852, 21.2133, 0.381952, 0.44 ) }
    dend_15 { pt3dadd( 6.22567, 22.0302, 0.489477, 0.81 ) }
    dend_15 { pt3dadd( 6.07023, 22.3711, 0.535322, 0.96 ) }
    dend_15 { pt3dadd( 5.88711, 22.8323, 0.599666, 0.81 ) }
    dend_15 { pt3dadd( 5.76036, 23.1297, 0.647454, 1.03 ) }
    dend_15 { pt3dadd( 5.53045, 23.571, 0.72399, 1.18 ) }
    dend_15 { pt3dadd( 5.20555, 24.0287, 0.815792, 0.66 ) }
    dend_15 { pt3dadd( 4.6439, 24.5399, 0.947072, 0.22 ) }
    dend_15 { pt3dadd( 4.22367, 24.7938, 1.03256, 0.22 ) }
    dend_15 { pt3dadd( 3.76608, 24.9682, 1.11582, 0.22 ) }
    dend_15 { pt3dadd( 3.17509, 25.1278, 1.21687, 0.66 ) }
    dend_15 { pt3dadd( 2.78632, 25.2061, 1.28218, 0.81 ) }
    dend_15 { pt3dadd( 2.47356, 25.2625, 1.3319, 0.66 ) }
    dend_15 { pt3dadd( 2.02242, 25.351, 1.39822, 0.52 ) }
    dend_15 { pt3dadd( 1.31958, 25.54, 1.49863, 0.44 ) }
    dend_15 { pt3dadd( 0.687815, 25.7494, 1.57057, 0.52 ) }
    dend_15 { pt3dadd( 0.220022, 25.9295, 1.59835, 0.88 ) }
    dend_15 { pt3dadd( -0.22477, 26.1267, 1.58928, 1.11 ) }
    dend_15 { pt3dadd( -0.578999, 26.3016, 1.56022, 1.11 ) }
    dend_15 { pt3dadd( -0.953563, 26.5053, 1.49229, 0.96 ) }
    dend_15 { pt3dadd( -1.52094, 26.8362, 1.33496, 0.37 ) }
    dend_15 { pt3dadd( -2.14866, 27.2283, 1.1079, 0.29 ) }
    dend_15 { pt3dadd( -2.66174, 27.574, 0.899847, 0.88 ) }
    dend_15 { pt3dadd( -2.91232, 27.7597, 0.798363, 1.03 ) }
    dend_15 { pt3dadd( -3.37629, 28.1393, 0.596009, 1.03 ) }
    dend_15 { pt3dadd( -3.50715, 28.2595, 0.535588, 1.03 ) }
    dend_15 { pt3dadd( -4.06067, 28.8449, 0.288878, 0.29 ) }
    dend_15 { pt3dadd( -4.30707, 29.1476, 0.163734, 0.29 ) }
    dend_15 { pt3dadd( -4.69984, 29.6673, -0.0592526, 0.96 ) }
    dend_15 { pt3dadd( -4.97213, 30.0265, -0.22396, 1.11 ) }
    dend_15 { pt3dadd( -5.12922, 30.2311, -0.314881, 1.11 ) }
    dend_15 { pt3dadd( -5.36288, 30.5226, -0.450023, 0.66 ) }
    dend_15 { pt3dadd( -5.90253, 31.1782, -0.753183, 0.29 ) }
    dend_15 { pt3dadd( -6.23178, 31.5539, -0.935729, 0.29 ) }
    dend_15 { pt3dadd( -6.61096, 31.9627, -1.11596, 0.66 ) }
    dend_15 { pt3dadd( -6.85447, 32.2069, -1.21587, 0.88 ) }
    dend_15 { pt3dadd( -7.07808, 32.4187, -1.29876, 1.03 ) }
    dend_15 { pt3dadd( -7.42897, 32.7405, -1.41642, 0.74 ) }
    dend_15 { pt3dadd( -7.87935, 33.1402, -1.5326, 0.44 ) }
    dend_15 { pt3dadd( -8.42375, 33.6214, -1.66432, 0.22 ) }
    dend_15 { pt3dadd( -8.94038, 34.0779, -1.78953, 0.44 ) }
    dend_15 { pt3dadd( -9.20735, 34.3115, -1.84832, 0.59 ) }
    dend_15 { pt3dadd( -9.41382, 34.5018, -1.86224, 0.59 ) }
    dend_15 { pt3dadd( -9.82394, 34.9132, -1.79778, 0.29 ) }
    dend_15 { pt3dadd( -10.2369, 35.3808, -1.61906, 0.59 ) }
    dend_15 { pt3dadd( -10.4706, 35.6742, -1.45639, 0.59 ) }
    dend_15 { pt3dadd( -10.6354, 35.878, -1.30355, 0.59 ) }
    dend_15 { pt3dadd( -11.3809, 36.7259, -0.543452, 1.69 ) }
    dend_15 { pt3dadd( -11.7408, 37.1156, -0.139757, 2.14 ) }
    dend_15 { pt3dadd( -11.9617, 37.3495, 0.121999, 2.36 ) }
    dend_15 { pt3dadd( -12.1334, 37.5233, 0.329412, 2.36 ) }
    dend_15 { pt3dadd( -12.9073, 38.2526, 1.22765, 0.29 ) }
    dend_15 { pt3dadd( -13.3586, 38.6397, 1.71374, 0.22 ) }
    dend_15 { pt3dadd( -13.9826, 39.1227, 2.3235, 0.74 ) }
    dend_15 { pt3dadd( -14.2495, 39.3215, 2.57472, 0.96 ) }
    dend_15 { pt3dadd( -14.4051, 39.44, 2.72522, 0.96 ) }
    dend_15 { pt3dadd( -14.9442, 39.8795, 3.24421, 0.22 ) }
    dend_15 { pt3dadd( -15.4485, 40.3463, 3.73234, 0.81 ) }
    dend_15 { pt3dadd( -15.537, 40.4341, 3.81401, 1.18 ) }
    dend_15 { pt3dadd( -15.8601, 40.7476, 4.09391, 1.18 ) }
    dend_15 { pt3dadd( -15.9875, 40.8722, 4.20334, 1.18 ) }
    dend_15 { pt3dadd( -16.3797, 41.2699, 4.52106, 0.15 ) }
    dend_15 { pt3dadd( -16.5511, 41.465, 4.64764, 0.37 ) }
    dend_15 { pt3dadd( -16.7064, 41.6793, 4.74824, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.00855, 19.1172, 0.117001, 2.8 ) }
    dend_2 { pt3dadd( 8.98793, 20.5753, 0.464995, 2.8 ) }
    dend_2 { pt3dadd( 9.60073, 21.4877, 0.682733, 2.8 ) }
    dend_2 { pt3dadd( 10.1239, 22.2666, 0.868626, 2.95 ) }
    dend_2 { pt3dadd( 10.6912, 23.1112, 1.07019, 3.68 ) }
    dend_2 { pt3dadd( 11.0818, 23.6927, 1.20896, 3.9 ) }
    dend_2 { pt3dadd( 11.4523, 24.2443, 1.3406, 4.57 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -22.3982, -41.6405, 32.6962, 0.66 ) }
    dend_30 { pt3dadd( -22.679, -48.0189, 37.8499, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -21.6068, -54.2847, 43.0717, 0.66 ) }
    dend_30 { pt3dadd( -22.1033, -59.6604, 49.3478, 0.66 ) }
    dend_30 { pt3dadd( -23.4356, -64.3808, 56.0645, 0.66 ) }
    dend_30 { pt3dadd( -25.1692, -68.7741, 62.9325, 0.66 ) }
    dend_30 { pt3dadd( -26.281, -73.9601, 69.3003, 0.66 ) }
    dend_30 { pt3dadd( -28.0305, -77.8265, 76.5099, 0.66 ) }
    dend_30 { pt3dadd( -29.2462, -82.3124, 83.4257, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -22.3982, -41.6405, 32.6962, 0.59 ) }
    dend_29 { pt3dadd( -23.144, -47.7971, 40.1451, 0.66 ) }
    dend_29 { pt3dadd( -24.0545, -54.3067, 47.2399, 0.66 ) }
    dend_29 { pt3dadd( -25.4502, -61.6114, 53.3541, 0.66 ) }
    dend_29 { pt3dadd( -27.6918, -69.0702, 59.0195, 0.66 ) }
    dend_29 { pt3dadd( -27.7994, -77.4928, 63.5186, 0.66 ) }
    dend_29 { pt3dadd( -27.3634, -84.6055, 69.9842, 0.66 ) }
    dend_29 { pt3dadd( -27.3331, -91.7917, 76.38, 0.66 ) }
    dend_29 { pt3dadd( -28.1681, -99.5892, 81.902, 0.66 ) }
    dend_29 { pt3dadd( -28.3031, -106.943, 88.0884, 0.66 ) }
    dend_29 { pt3dadd( -27.974, -113.573, 95.0973, 0.66 ) }
    dend_29 { pt3dadd( -27.2118, -121.133, 100.952, 0.66 ) }
    dend_29 { pt3dadd( -26.1006, -127.351, 108.283, 0.66 ) }
    dend_29 { pt3dadd( -23.6571, -134.614, 114.078, 0.66 ) }
    dend_29 { pt3dadd( -22.4809, -143.122, 118.227, 0.66 ) }
    dend_29 { pt3dadd( -20.3799, -150.849, 123.485, 0.66 ) }
    dend_29 { pt3dadd( -19.2565, -159.1, 128.165, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -52.5125, 2.42974, 10.5256, 0.59 ) }
    dend_27 { pt3dadd( -60.1243, 6.64197, 11.82, 0.59 ) }
    dend_27 { pt3dadd( -67.5162, 11.3438, 12.2847, 0.59 ) }
    dend_27 { pt3dadd( -75.4102, 14.7379, 14.3193, 0.59 ) }
    dend_27 { pt3dadd( -83.413, 18.249, 15.572, 0.59 ) }
    dend_27 { pt3dadd( -90.2386, 23.1693, 17.9704, 0.59 ) }
    dend_27 { pt3dadd( -97.28, 28.0854, 19.6667, 0.59 ) }
    dend_27 { pt3dadd( -102.743, 34.0788, 22.7328, 0.59 ) }
    dend_27 { pt3dadd( -107.509, 40.766, 25.3416, 0.59 ) }
    dend_27 { pt3dadd( -110.659, 48.2627, 27.9509, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 34/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -52.5125, 2.42974, 10.5256, 0.59 ) }
    dend_26 { pt3dadd( -59.9364, 6.5517, 13.4427, 0.59 ) }
    dend_26 { pt3dadd( -67.5837, 10.9181, 15.1654, 0.59 ) }
    dend_26 { pt3dadd( -75.7294, 14.7084, 15.7989, 0.59 ) }
    dend_26 { pt3dadd( -83.894, 18.499, 15.3727, 0.59 ) }
    dend_26 { pt3dadd( -91.2491, 23.5047, 14.3601, 0.59 ) }
    dend_26 { pt3dadd( -98.9539, 27.9061, 12.9246, 0.59 ) }
    dend_26 { pt3dadd( -106.055, 32.8897, 10.6721, 0.59 ) }
    dend_26 { pt3dadd( -113.793, 36.3602, 7.55567, 0.59 ) }
    dend_26 { pt3dadd( -121.676, 39.4519, 4.36897, 0.59 ) }
    dend_26 { pt3dadd( -130.004, 41.892, 1.75247, 0.59 ) }
    dend_26 { pt3dadd( -138.422, 42.9088, -1.5077, 0.59 ) }
    dend_26 { pt3dadd( -146.489, 44.4661, -5.37428, 0.59 ) }
    dend_26 { pt3dadd( -154.725, 46.482, -8.60447, 0.59 ) }
    dend_26 { pt3dadd( -163.446, 47.5556, -10.9084, 0.59 ) }
    dend_26 { pt3dadd( -172.196, 47.8377, -13.3391, 0.59 ) }
    dend_26 { pt3dadd( -181.035, 49.346, -14.7612, 0.59 ) }
    dend_26 { pt3dadd( -190.021, 50.1875, -15.7944, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.4523, 24.2443, 1.3406, 2.36 ) }
    dend_12 { pt3dadd( 11.5674, 24.4395, 1.81797, 2.36 ) }
    dend_12 { pt3dadd( 11.612, 24.5649, 2.19344, 1.99 ) }
    dend_12 { pt3dadd( 11.6232, 24.6299, 2.40459, 1.84 ) }
    dend_12 { pt3dadd( 11.619, 24.8303, 3.07932, 1.55 ) }
    dend_12 { pt3dadd( 11.5722, 25.0384, 3.80897, 2.06 ) }
    dend_12 { pt3dadd( 11.4785, 25.2588, 4.57685, 2.43 ) }
    dend_12 { pt3dadd( 11.3443, 25.3929, 5.12985, 2.58 ) }
    dend_12 { pt3dadd( 11.2861, 25.4278, 5.30641, 2.36 ) }
    dend_12 { pt3dadd( 11.1897, 25.4673, 5.54807, 2.21 ) }
    dend_12 { pt3dadd( 11.0129, 25.5216, 5.91399, 2.06 ) }
    dend_12 { pt3dadd( 10.8646, 25.5641, 6.19495, 1.25 ) }
    dend_12 { pt3dadd( 10.4885, 25.6998, 6.93494, 1.55 ) }
    dend_12 { pt3dadd( 10.2676, 25.8162, 7.42126, 1.18 ) }
    dend_12 { pt3dadd( 10.1655, 25.8938, 7.70594, 1.47 ) }
    dend_12 { pt3dadd( 10.093, 25.981, 7.98104, 2.14 ) }
    dend_12 { pt3dadd( 10.0538, 26.0801, 8.23654, 1.84 ) }
    dend_12 { pt3dadd( 10.0552, 26.2146, 8.50903, 1.47 ) }
    dend_12 { pt3dadd( 10.1247, 26.4132, 8.7595, 0.88 ) }
    dend_12 { pt3dadd( 10.2541, 26.6549, 8.97617, 0.52 ) }
    dend_12 { pt3dadd( 10.3358, 26.7801, 9.06448, 0.22 ) }
    dend_12 { pt3dadd( 10.4424, 26.9176, 9.15007, 0.22 ) }
    dend_12 { pt3dadd( 10.5386, 27.0285, 9.20926, 0.59 ) }
    dend_12 { pt3dadd( 10.6004, 27.0909, 9.23994, 0.66 ) }
    dend_12 { pt3dadd( 10.7133, 27.2029, 9.29189, 0.22 ) }
    dend_12 { pt3dadd( 10.8203, 27.348, 9.32705, 0.44 ) }
    dend_12 { pt3dadd( 10.2841, 28.0395, 12.0398, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.4523, 24.2443, 1.3406, 0.96 ) }
    dend_3 { pt3dadd( 10.7497, 26.5782, -0.607123, 0.96 ) }
    dend_3 { pt3dadd( 10.5675, 27.2268, -1.17622, 1.33 ) }
    dend_3 { pt3dadd( 10.4798, 27.5643, -1.47213, 1.55 ) }
    dend_3 { pt3dadd( 10.4029, 27.8601, -1.73144, 1.77 ) }
    dend_3 { pt3dadd( 10.2852, 28.3128, -2.12835, 1.92 ) }
    dend_3 { pt3dadd( 10.1114, 28.9807, -2.71401, 0.96 ) }
    dend_3 { pt3dadd( 9.93252, 30.0151, -3.46174, 1.11 ) }
    dend_3 { pt3dadd( 9.89675, 30.2115, -3.61837, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 88/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.2841, 28.0395, 12.0398, 0.44 ) }
    dend_14 { pt3dadd( 11.0003, 30.123, 19.3609, 0.44 ) }
    dend_14 { pt3dadd( 12.3211, 33.6629, 25.9495, 0.44 ) }
    dend_14 { pt3dadd( 14.5993, 38.3732, 31.3977, 0.44 ) }
    dend_14 { pt3dadd( 18.5261, 42.9773, 35.9836, 0.44 ) }
    dend_14 { pt3dadd( 21.7573, 47.4064, 41.228, 0.44 ) }
    dend_14 { pt3dadd( 24.4515, 50.7333, 47.5382, 0.44 ) }
    dend_14 { pt3dadd( 27.7917, 54.5592, 53.2126, 0.44 ) }
    dend_14 { pt3dadd( 31.2459, 58.3534, 58.8441, 0.44 ) }
    dend_14 { pt3dadd( 33.7024, 62.8224, 64.4385, 0.44 ) }
    dend_14 { pt3dadd( 36.4009, 67.2125, 69.9955, 0.44 ) }
    dend_14 { pt3dadd( 37.7859, 72.6877, 74.9133, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 40.7789, 77.8425, 79.5398, 0.44 ) }
    dend_14 { pt3dadd( 44.863, 82.8382, 83.5138, 0.44 ) }
    dend_14 { pt3dadd( 48.129, 88.088, 87.8413, 0.44 ) }
    dend_14 { pt3dadd( 50.4502, 93.4873, 92.5262, 0.44 ) }
    dend_14 { pt3dadd( 52.5841, 98.8872, 97.2915, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.2841, 28.0395, 12.0398, 0.44 ) }
    dend_13 { pt3dadd( 9.99245, 30.2192, 18.9051, 0.44 ) }
    dend_13 { pt3dadd( 8.94247, 32.4756, 25.6643, 0.44 ) }
    dend_13 { pt3dadd( 8.36468, 34.494, 32.5655, 0.44 ) }
    dend_13 { pt3dadd( 6.95312, 35.6216, 39.5724, 0.44 ) }
    dend_13 { pt3dadd( 4.42904, 36.2473, 46.3331, 0.44 ) }
    dend_13 { pt3dadd( 3.22413, 37.2424, 53.4019, 0.44 ) }
    dend_13 { pt3dadd( 2.8461, 38.4592, 60.5257, 0.44 ) }
    dend_13 { pt3dadd( 2.80451, 40.201, 67.5368, 0.44 ) }
    dend_13 { pt3dadd( 1.77413, 40.6527, 74.6977, 0.44 ) }
    dend_13 { pt3dadd( -0.213912, 40.5741, 81.6722, 0.44 ) }
    dend_13 { pt3dadd( -1.18905, 40.934, 88.8472, 0.44 ) }
    dend_13 { pt3dadd( -1.57861, 41.4579, 96.0666, 0.44 ) }
    dend_13 { pt3dadd( -1.72601, 42.1828, 103.275, 0.44 ) }
    dend_13 { pt3dadd( -2.23575, 43.8102, 110.297, 0.44 ) }
    dend_13 { pt3dadd( -3.18434, 45.8095, 117.162, 0.44 ) }
    dend_13 { pt3dadd( -4.94666, 49.0436, 123.295, 0.44 ) }
    dend_13 { pt3dadd( -7.53596, 52.1903, 129.175, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.89675, 30.2115, -3.61837, 0.66 ) }
    dend_9 { pt3dadd( 10.0913, 30.0371, -4.81961, 0.66 ) }
    dend_9 { pt3dadd( 10.5128, 29.7708, -6.49174, 0.88 ) }
    dend_9 { pt3dadd( 10.9192, 29.6104, -7.78849, 1.11 ) }
    dend_9 { pt3dadd( 11.279, 29.5301, -8.78073, 1.25 ) }
    dend_9 { pt3dadd( 11.4634, 29.5134, -9.24732, 1.47 ) }
    dend_9 { pt3dadd( 11.7754, 29.5252, -9.9892, 1.18 ) }
    dend_9 { pt3dadd( 12.0741, 29.5921, -10.5237, 0.66 ) }
    dend_9 { pt3dadd( 12.6987, 29.9921, -11.3343, 0.52 ) }
    dend_9 { pt3dadd( 12.9685, 30.26, -11.6337, 0.66 ) }
    dend_9 { pt3dadd( 13.1887, 30.5107, -11.8821, 0.66 ) }
    dend_9 { pt3dadd( 13.4515, 30.8373, -12.2199, 0.37 ) }
    dend_9 { pt3dadd( 13.8643, 31.2965, -12.7548, 0.37 ) }
    dend_9 { pt3dadd( 14.2189, 31.5572, -13.1987, 1.18 ) }
    dend_9 { pt3dadd( 14.6282, 31.6855, -13.6281, 1.77 ) }
    dend_9 { pt3dadd( 15.2162, 31.753, -14.2054, 1.92 ) }
    dend_9 { pt3dadd( 15.5745, 31.7529, -14.5295, 1.69 ) }
    dend_9 { pt3dadd( 16.2032, 31.7153, -15.0479, 0.66 ) }
    dend_9 { pt3dadd( 16.9152, 31.6832, -15.613, 0.52 ) }
    dend_9 { pt3dadd( 17.4332, 31.6947, -16.0475, 0.37 ) }
    dend_9 { pt3dadd( 17.8586, 31.7473, -16.4217, 0.37 ) }
    dend_9 { pt3dadd( 18.4004, 31.8801, -16.9342, 0.29 ) }
    dend_9 { pt3dadd( 18.7442, 32.0122, -17.3057, 0.29 ) }
    dend_9 { pt3dadd( 19.4212, 32.3988, -18.1275, 0.59 ) }
    dend_9 { pt3dadd( 19.7779, 32.7009, -18.6683, 1.55 ) }
    dend_9 { pt3dadd( 19.9348, 32.8616, -18.9563, 1.77 ) }
    dend_9 { pt3dadd( 20.2219, 33.1518, -19.5237, 1.92 ) }
    dend_9 { pt3dadd( 20.3801, 33.2925, -19.8436, 2.06 ) }
    dend_9 { pt3dadd( 20.4946, 33.3682, -20.0761, 2.06 ) }
    dend_9 { pt3dadd( 21.3659, 33.7853, -21.9345, 0.29 ) }
    dend_9 { pt3dadd( 21.562, 33.862, -22.3659, 0.29 ) }
    dend_9 { pt3dadd( 21.8767, 33.9675, -23.0644, 0.29 ) }
    dend_9 { pt3dadd( 22.0953, 34.0292, -23.5339, 0.29 ) }
    dend_9 { pt3dadd( 22.729, 34.1985, -24.91, 1.18 ) }
    dend_9 { pt3dadd( 23.2324, 34.3536, -26.0306, 1.47 ) }
    dend_9 { pt3dadd( 23.3994, 34.4449, -26.4605, 1.69 ) }
    dend_9 { pt3dadd( 23.5144, 34.5366, -26.7956, 1.92 ) }
    dend_9 { pt3dadd( 23.587, 34.5999, -27.0283, 2.14 ) }
    dend_9 { pt3dadd( 23.6983, 34.6823, -27.3727, 2.14 ) }
    dend_9 { pt3dadd( 23.9432, 34.8058, -28.0754, 2.14 ) }
    dend_9 { pt3dadd( 24.6834, 35.0242, -30.0348, 1.03 ) }
    dend_9 { pt3dadd( 25.0867, 35.107, -31.1216, 0.29 ) }
    dend_9 { pt3dadd( 25.4833, 35.1621, -32.2212, 0.52 ) }
    dend_9 { pt3dadd( 25.6969, 35.1768, -32.7868, 0.81 ) }
    dend_9 { pt3dadd( 25.9013, 35.1792, -33.321, 0.81 ) }
    dend_9 { pt3dadd( 26.1287, 35.1698, -33.8859, 0.52 ) }
    dend_9 { pt3dadd( 26.4351, 35.1645, -34.6012, 0.74 ) }
    dend_9 { pt3dadd( 26.73, 35.2141, -35.304, 0.81 ) }
    dend_9 { pt3dadd( 27.0241, 35.3285, -36.0128, 1.69 ) }
    dend_9 { pt3dadd( 27.4785, 35.559, -37.0201, 2.06 ) }
    dend_9 { pt3dadd( 27.724, 35.6857, -37.4972, 2.43 ) }
    dend_9 { pt3dadd( 28.3673, 35.983, -38.5923, 1.11 ) }
    dend_9 { pt3dadd( 28.8352, 36.1583, -39.2607, 0.96 ) }
    dend_9 { pt3dadd( 29.3157, 36.3226, -39.844, 1.03 ) }
    dend_9 { pt3dadd( 30.0338, 36.573, -40.634, 0.29 ) }
    dend_9 { pt3dadd( 30.4943, 36.7325, -41.0758, 0.37 ) }
    dend_9 { pt3dadd( 30.9062, 36.8859, -41.4407, 0.37 ) }
    dend_9 { pt3dadd( 31.3027, 37.0577, -41.7725, 0.22 ) }
    dend_9 { pt3dadd( 31.6062, 37.2102, -42.048, 0.22 ) }
    dend_9 { pt3dadd( 32.0745, 37.4773, -42.5249, 0.22 ) }
    dend_9 { pt3dadd( 32.3382, 37.67, -42.855, 0.22 ) }
    dend_9 { pt3dadd( 32.5552, 37.8578, -43.1679, 0.22 ) }
    dend_9 { pt3dadd( 33.0906, 38.3412, -43.9624, 1.62 ) }
    dend_9 { pt3dadd( 33.5104, 38.698, -44.5613, 2.5 ) }
    dend_9 { pt3dadd( 33.7118, 38.8515, -44.8278, 2.73 ) }
    dend_9 { pt3dadd( 34.1253, 39.1336, -45.3334, 2.14 ) }
    dend_9 { pt3dadd( 35.2598, 39.8717, -46.6946, 0.22 ) }
    dend_9 { pt3dadd( 35.5354, 40.0448, -47.0274, 0.22 ) }
    dend_9 { pt3dadd( 35.8611, 40.2517, -47.4307, 0.44 ) }
    dend_9 { pt3dadd( 36.0074, 40.3487, -47.6141, 0.44 ) }
    dend_9 { pt3dadd( 36.448, 40.6693, -48.179, 0.29 ) }
    dend_9 { pt3dadd( 36.7654, 40.9085, -48.5981, 0.74 ) }
    dend_9 { pt3dadd( 37.0369, 41.1113, -48.9752, 0.74 ) }
    dend_9 { pt3dadd( 37.6217, 41.5348, -49.8079, 0.22 ) }
    dend_9 { pt3dadd( 37.9874, 41.7951, -50.3331, 0.22 ) }
    dend_9 { pt3dadd( 38.6488, 42.255, -51.3088, 1.84 ) }
    dend_9 { pt3dadd( 38.9632, 42.4608, -51.7629, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 39.7294, 42.9342, -52.9029, 0.29 ) }
    dend_9 { pt3dadd( 39.9774, 43.0668, -53.3016, 0.44 ) }
    dend_9 { pt3dadd( 40.189, 43.1655, -53.6735, 0.44 ) }
    dend_9 { pt3dadd( 40.6462, 43.3603, -54.5806, 0.29 ) }
    dend_9 { pt3dadd( 41.0585, 43.5179, -55.5036, 1.84 ) }
    dend_9 { pt3dadd( 41.4299, 43.6891, -56.5, 2.14 ) }
    dend_9 { pt3dadd( 41.9725, 43.9952, -58.2744, 0.29 ) }
    dend_9 { pt3dadd( 42.2894, 44.2006, -59.3507, 0.81 ) }
    dend_9 { pt3dadd( 42.5456, 44.3662, -60.1866, 0.81 ) }
    dend_9 { pt3dadd( 42.7515, 44.4977, -60.817, 0.52 ) }
    dend_9 { pt3dadd( 43.3044, 44.8734, -62.448, 0.52 ) }
    dend_9 { pt3dadd( 43.5349, 45.0369, -63.043, 0.81 ) }
    dend_9 { pt3dadd( 44.2022, 45.5268, -64.516, 2.14 ) }
    dend_9 { pt3dadd( 44.4332, 45.6829, -64.9531, 2.65 ) }
    dend_9 { pt3dadd( 44.5881, 45.7801, -65.2048, 2.65 ) }
    dend_9 { pt3dadd( 45.7552, 46.4475, -66.8256, 0.29 ) }
    dend_9 { pt3dadd( 46.1164, 46.648, -67.2608, 0.22 ) }
    dend_9 { pt3dadd( 46.5252, 46.8974, -67.7363, 0.96 ) }
    dend_9 { pt3dadd( 46.808, 47.0925, -68.067, 1.18 ) }
    dend_9 { pt3dadd( 47.176, 47.3649, -68.4946, 0.96 ) }
    dend_9 { pt3dadd( 47.6511, 47.7212, -69.0, 0.22 ) }
    dend_9 { pt3dadd( 48.0995, 48.0494, -69.3828, 0.22 ) }
    dend_9 { pt3dadd( 48.4161, 48.2727, -69.6405, 0.22 ) }
    dend_9 { pt3dadd( 49.0848, 48.6817, -70.1829, 1.4 ) }
    dend_9 { pt3dadd( 49.4847, 48.915, -70.5037, 1.84 ) }
    dend_9 { pt3dadd( 49.576, 48.9686, -70.577, 2.06 ) }
    dend_9 { pt3dadd( 49.9104, 49.1542, -70.8459, 1.99 ) }
    dend_9 { pt3dadd( 50.4258, 49.4137, -71.255, 0.88 ) }
    dend_9 { pt3dadd( 51.2439, 49.8245, -71.8859, 0.22 ) }
    dend_9 { pt3dadd( 51.604, 50.0083, -72.14, 0.29 ) }
    dend_9 { pt3dadd( 51.9869, 50.1908, -72.3767, 0.29 ) }
    dend_9 { pt3dadd( 52.3593, 50.3495, -72.595, 0.29 ) }
    dend_9 { pt3dadd( 52.5824, 50.4329, -72.7208, 0.66 ) }
    dend_9 { pt3dadd( 52.8965, 50.5304, -72.8833, 0.66 ) }
    dend_9 { pt3dadd( 53.1687, 50.599, -73.0178, 0.66 ) }
    dend_9 { pt3dadd( 53.6545, 50.6914, -73.2688, 0.22 ) }
    dend_9 { pt3dadd( 54.0875, 50.7585, -73.4974, 0.22 ) }
    dend_9 { pt3dadd( 54.7421, 50.8615, -73.8499, 1.33 ) }
    dend_9 { pt3dadd( 55.3722, 50.9645, -74.2058, 2.14 ) }
    dend_9 { pt3dadd( 55.6855, 51.0239, -74.3929, 2.28 ) }
    dend_9 { pt3dadd( 56.0621, 51.1074, -74.6258, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.89675, 30.2115, -3.61837, 0.59 ) }
    dend_4 { pt3dadd( 8.31092, 31.2709, -4.61219, 0.59 ) }
    dend_4 { pt3dadd( 7.88089, 31.5275, -4.94834, 0.96 ) }
    dend_4 { pt3dadd( 7.46762, 31.7412, -5.26558, 0.96 ) }
    dend_4 { pt3dadd( 7.04154, 31.9248, -5.65441, 0.81 ) }
    dend_4 { pt3dadd( 6.15236, 32.2884, -6.62323, 0.59 ) }
    dend_4 { pt3dadd( 5.81615, 32.4503, -7.02743, 0.81 ) }
    dend_4 { pt3dadd( 5.44727, 32.6577, -7.55401, 0.81 ) }
    dend_4 { pt3dadd( 5.22489, 32.8201, -7.90768, 0.74 ) }
    dend_4 { pt3dadd( 4.62746, 33.4306, -8.96891, 0.74 ) }
    dend_4 { pt3dadd( 4.26617, 34.0036, -9.69956, 0.74 ) }
    dend_4 { pt3dadd( 4.01104, 34.7499, -10.3396, 0.52 ) }
    dend_4 { pt3dadd( 3.94212, 35.2807, -10.6658, 0.66 ) }
    dend_4 { pt3dadd( 3.96242, 36.1214, -10.9644, 0.96 ) }
    dend_4 { pt3dadd( 4.04621, 36.7116, -11.0666, 0.88 ) }
    dend_4 { pt3dadd( 4.17288, 37.2507, -11.0558, 0.44 ) }
    dend_4 { pt3dadd( 4.34145, 37.8026, -10.9738, 0.29 ) }
    dend_4 { pt3dadd( 4.57746, 38.4277, -10.8021, 0.29 ) }
    dend_4 { pt3dadd( 4.85537, 39.1224, -10.5661, 0.88 ) }
    dend_4 { pt3dadd( 5.01392, 39.5284, -10.4129, 1.11 ) }
    dend_4 { pt3dadd( 5.1602, 39.9484, -10.2478, 1.18 ) }
    dend_4 { pt3dadd( 5.27452, 40.3621, -10.0944, 0.88 ) }
    dend_4 { pt3dadd( 5.47346, 41.3766, -9.78589, 0.37 ) }
    dend_4 { pt3dadd( 5.54566, 41.9773, -9.65412, 0.29 ) }
    dend_4 { pt3dadd( 5.59157, 42.7935, -9.58216, 0.29 ) }
    dend_4 { pt3dadd( 5.57733, 43.3457, -9.57865, 0.29 ) }
    dend_4 { pt3dadd( 5.49389, 44.3017, -9.74761, 1.25 ) }
    dend_4 { pt3dadd( 5.42217, 44.9235, -9.9555, 1.77 ) }
    dend_4 { pt3dadd( 5.39127, 45.2162, -10.0968, 1.92 ) }
    dend_4 { pt3dadd( 5.35083, 45.7978, -10.4092, 1.92 ) }
    dend_4 { pt3dadd( 5.34008, 46.3629, -10.729, 1.11 ) }
    dend_4 { pt3dadd( 5.40666, 47.7004, -11.5179, 0.44 ) }
    dend_4 { pt3dadd( 5.46297, 48.3076, -11.8633, 0.66 ) }
    dend_4 { pt3dadd( 5.52815, 48.9492, -12.1672, 0.88 ) }
    dend_4 { pt3dadd( 5.58392, 49.4633, -12.3749, 1.11 ) }
    dend_4 { pt3dadd( 5.62967, 49.8778, -12.5158, 1.11 ) }
    dend_4 { pt3dadd( 5.6973, 50.4967, -12.7236, 0.66 ) }
    dend_4 { pt3dadd( 5.77064, 51.3945, -12.9743, 0.37 ) }
    dend_4 { pt3dadd( 5.85909, 52.5154, -13.278, 0.88 ) }
    dend_4 { pt3dadd( 5.91259, 53.0578, -13.4423, 1.47 ) }
    dend_4 { pt3dadd( 5.98988, 53.5693, -13.6075, 1.77 ) }
    dend_4 { pt3dadd( 6.12682, 54.1955, -13.8395, 1.92 ) }
    dend_4 { pt3dadd( 6.25434, 54.6004, -14.0261, 2.14 ) }
    dend_4 { pt3dadd( 6.50566, 55.1572, -14.3793, 2.14 ) }
    dend_4 { pt3dadd( 6.82136, 55.7547, -15.031, 1.62 ) }
    dend_4 { pt3dadd( 7.01739, 56.1417, -15.5938, 1.11 ) }
    dend_4 { pt3dadd( 7.22386, 56.627, -16.3971, 0.66 ) }
    dend_4 { pt3dadd( 7.3541, 57.0905, -17.2508, 0.81 ) }
    dend_4 { pt3dadd( 7.39993, 57.5069, -18.1039, 0.66 ) }
    dend_4 { pt3dadd( 7.31607, 58.6289, -20.6194, 0.81 ) }
    dend_4 { pt3dadd( 7.21106, 59.014, -21.4639, 0.74 ) }
    dend_4 { pt3dadd( 7.08128, 59.3107, -22.0952, 1.11 ) }
    dend_4 { pt3dadd( 6.74983, 59.8813, -23.218, 1.62 ) }
    dend_4 { pt3dadd( 6.40948, 60.3759, -24.1035, 1.69 ) }
    dend_4 { pt3dadd( 5.9891, 60.9307, -24.9629, 1.55 ) }
    dend_4 { pt3dadd( 5.55511, 61.5615, -25.7218, 0.37 ) }
    dend_4 { pt3dadd( 5.4184, 61.8332, -25.9937, 0.52 ) }
    dend_4 { pt3dadd( 5.28024, 62.2468, -26.3322, 0.66 ) }
    dend_4 { pt3dadd( 5.19265, 62.6355, -26.5815, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( 5.10812, 63.1524, -26.8773, 0.22 ) }
    dend_4 { pt3dadd( 5.00785, 63.9076, -27.3596, 0.22 ) }
    dend_4 { pt3dadd( 4.86356, 65.038, -28.2076, 1.99 ) }
    dend_4 { pt3dadd( 4.77208, 65.6448, -28.6919, 2.43 ) }
    dend_4 { pt3dadd( 4.68179, 66.1579, -29.1158, 2.73 ) }
    dend_4 { pt3dadd( 4.58935, 66.5804, -29.4878, 2.95 ) }
    dend_4 { pt3dadd( 4.04537, 68.441, -31.2113, 0.52 ) }
    dend_4 { pt3dadd( 3.80523, 69.0263, -31.7907, 0.59 ) }
    dend_4 { pt3dadd( 3.62805, 69.3911, -32.1726, 1.11 ) }
    dend_4 { pt3dadd( 3.51061, 69.6286, -32.419, 1.25 ) }
    dend_4 { pt3dadd( 3.3121, 70.0524, -32.8136, 1.25 ) }
    dend_4 { pt3dadd( 3.03599, 70.6565, -33.3351, 0.22 ) }
    dend_4 { pt3dadd( 2.78834, 71.1873, -33.7759, 0.22 ) }
    dend_4 { pt3dadd( 2.56895, 71.6938, -34.2209, 0.37 ) }
    dend_4 { pt3dadd( 2.36936, 72.1673, -34.7012, 0.37 ) }
    dend_4 { pt3dadd( 2.04682, 72.9804, -35.534, 1.69 ) }
    dend_4 { pt3dadd( 1.80533, 73.5938, -36.1469, 2.28 ) }
    dend_4 { pt3dadd( 1.65311, 73.9603, -36.5161, 2.65 ) }
    dend_4 { pt3dadd( 1.44837, 74.4536, -36.9847, 2.65 ) }
    dend_4 { pt3dadd( 1.13667, 75.2161, -37.6816, 2.5 ) }
    dend_4 { pt3dadd( 0.661812, 76.4858, -38.7708, 0.29 ) }
    dend_4 { pt3dadd( 0.514875, 76.9777, -39.1704, 0.29 ) }
    dend_4 { pt3dadd( 0.418386, 77.4652, -39.543, 0.29 ) }
    dend_4 { pt3dadd( 0.342133, 78.047, -39.9739, 0.74 ) }
    dend_4 { pt3dadd( 0.291858, 78.6111, -40.3834, 0.96 ) }
    dend_4 { pt3dadd( 0.252822, 79.2709, -40.8813, 0.96 ) }
    dend_4 { pt3dadd( 0.207356, 79.7806, -41.3553, 0.29 ) }
    dend_4 { pt3dadd( 0.0849839, 80.5091, -42.0923, 0.22 ) }
    dend_4 { pt3dadd( 0.0239769, 80.7152, -42.3126, 0.22 ) }
    dend_4 { pt3dadd( -0.0978491, 80.9857, -42.6321, 0.22 ) }
    dend_4 { pt3dadd( -0.302384, 81.358, -43.0782, 0.22 ) }
    dend_4 { pt3dadd( -0.885453, 82.3121, -44.3039, 2.28 ) }
    dend_4 { pt3dadd( -1.12793, 82.7181, -44.8793, 2.43 ) }
    dend_4 { pt3dadd( -1.30282, 83.0306, -45.3422, 2.65 ) }
    dend_4 { pt3dadd( -1.97668, 84.4203, -47.4496, 0.59 ) }
    dend_4 { pt3dadd( -2.15347, 84.8341, -48.0894, 0.52 ) }
    dend_4 { pt3dadd( -2.44799, 85.5992, -49.2713, 0.59 ) }
    dend_4 { pt3dadd( -2.73107, 86.4149, -50.4896, 0.37 ) }
    dend_4 { pt3dadd( -2.83266, 86.7482, -50.9512, 0.52 ) }
    dend_4 { pt3dadd( -2.92468, 87.1154, -51.4139, 0.66 ) }
    dend_4 { pt3dadd( -2.99848, 87.4463, -51.7775, 0.66 ) }
    dend_4 { pt3dadd( -3.08872, 87.8787, -52.189, 0.44 ) }
    dend_4 { pt3dadd( -3.30044, 88.8969, -53.0261, 2.14 ) }
    dend_4 { pt3dadd( -3.47711, 89.6898, -53.6366, 2.5 ) }
    dend_4 { pt3dadd( -3.61911, 90.3252, -54.1264, 1.92 ) }
    dend_4 { pt3dadd( -3.94096, 91.7698, -55.2278, 0.22 ) }
    dend_4 { pt3dadd( -4.07382, 92.3832, -55.6773, 0.22 ) }
    dend_4 { pt3dadd( -4.36889, 93.8137, -56.6767, 1.69 ) }
    dend_4 { pt3dadd( -4.42552, 94.0885, -56.8491, 2.06 ) }
    dend_4 { pt3dadd( -4.53918, 94.6679, -57.1611, 2.14 ) }
    dend_4 { pt3dadd( -4.59968, 94.9825, -57.3078, 1.62 ) }
    dend_4 { pt3dadd( -4.82718, 96.2965, -57.8676, 0.37 ) }
    dend_4 { pt3dadd( -4.94858, 97.0064, -58.1706, 0.37 ) }
    dend_4 { pt3dadd( -5.12873, 98.0907, -58.6207, 0.37 ) }
    dend_4 { pt3dadd( -5.26607, 98.8658, -58.9573, 0.37 ) }
    dend_4 { pt3dadd( -5.56027, 100.508, -59.6952, 1.69 ) }
    dend_4 { pt3dadd( -5.65158, 101.001, -59.9246, 1.92 ) }
    dend_4 { pt3dadd( -5.70629, 101.299, -60.0659, 1.92 ) }
    dend_4 { pt3dadd( -5.88956, 102.314, -60.5588, 0.22 ) }
    dend_4 { pt3dadd( -6.01059, 103.082, -60.9358, 0.22 ) }
    dend_4 { pt3dadd( -6.08703, 103.742, -61.2299, 0.37 ) }
    dend_4 { pt3dadd( -6.12408, 104.242, -61.4433, 0.37 ) }
    dend_4 { pt3dadd( -6.15228, 104.823, -61.6757, 1.33 ) }
    dend_4 { pt3dadd( -6.1554, 105.249, -61.8424, 1.84 ) }
    dend_4 { pt3dadd( -6.14466, 105.715, -62.0125, 1.84 ) }
    dend_4 { pt3dadd( -6.1022, 106.884, -62.4082, 0.29 ) }
    dend_4 { pt3dadd( -6.09347, 107.609, -62.6383, 0.44 ) }
    dend_4 { pt3dadd( -6.09618, 107.948, -62.7401, 0.59 ) }
    dend_4 { pt3dadd( -6.1142, 108.49, -62.8855, 0.59 ) }
    dend_4 { pt3dadd( -6.17684, 109.501, -63.1679, 0.22 ) }
    dend_4 { pt3dadd( -6.2411, 110.226, -63.3905, 1.33 ) }
    dend_4 { pt3dadd( -6.2865, 110.556, -63.5049, 1.77 ) }
    dend_4 { pt3dadd( -6.34047, 110.889, -63.6177, 1.92 ) }
    dend_4 { pt3dadd( -6.40119, 111.22, -63.7378, 1.4 ) }
    dend_4 { pt3dadd( -6.73898, 112.786, -64.4652, 0.22 ) }
    dend_4 { pt3dadd( -6.89067, 113.437, -64.8134, 0.22 ) }
    dend_4 { pt3dadd( -7.11264, 114.408, -65.3716, 1.11 ) }
    dend_4 { pt3dadd( -7.21219, 114.882, -65.6531, 1.55 ) }
    dend_4 { pt3dadd( -7.30666, 115.376, -65.9451, 1.4 ) }
    dend_4 { pt3dadd( -7.63886, 117.216, -67.0377, 0.29 ) }
    dend_4 { pt3dadd( -7.72432, 117.702, -67.3066, 0.37 ) }
    dend_4 { pt3dadd( -7.79557, 118.135, -67.5484, 0.44 ) }
    dend_4 { pt3dadd( -7.87016, 118.656, -67.8379, 0.44 ) }
    dend_4 { pt3dadd( -7.93461, 119.147, -68.0943, 0.22 ) }
    dend_4 { pt3dadd( -7.97447, 119.596, -68.3074, 0.22 ) }
    dend_4 { pt3dadd( -8.02233, 120.586, -68.7281, 1.33 ) }
    dend_4 { pt3dadd( -8.04941, 121.128, -69.0387, 1.55 ) }
    dend_4 { pt3dadd( -8.06912, 121.43, -69.2488, 1.55 ) }
    dend_4 { pt3dadd( -8.17729, 122.745, -70.3507, 0.22 ) }
    dend_4 { pt3dadd( -8.26041, 123.538, -71.167, 0.22 ) }
    dend_4 { pt3dadd( -8.31164, 123.96, -71.6519, 0.66 ) }
    dend_4 { pt3dadd( -8.51466, 125.332, -73.4607, 0.44 ) }
    dend_4 { pt3dadd( -8.61659, 126.032, -74.544, 1.4 ) }
    dend_4 { pt3dadd( -8.71294, 126.625, -75.5218, 1.77 ) }
    dend_4 { pt3dadd( -8.90801, 127.647, -77.3685, 1.33 ) }
    dend_4 { pt3dadd( -9.00116, 128.062, -78.1577, 1.62 ) }
    dend_4 { pt3dadd( -9.26093, 129.19, -80.3559, 0.74 ) }
    dend_4 { pt3dadd( -9.66691, 131.161, -84.157, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 56.0621, 51.1074, -74.6258, 0.44 ) }
    dend_11 { pt3dadd( 57.0287, 51.125, -75.4039, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( 57.6141, 51.161, -75.8979, 0.37 ) }
    dend_11 { pt3dadd( 58.333, 51.219, -76.5154, 0.29 ) }
    dend_11 { pt3dadd( 58.7662, 51.2529, -76.9183, 0.59 ) }
    dend_11 { pt3dadd( 59.5687, 51.2908, -77.7716, 0.29 ) }
    dend_11 { pt3dadd( 60.1137, 51.3223, -78.3668, 0.96 ) }
    dend_11 { pt3dadd( 60.5072, 51.3815, -78.8156, 1.25 ) }
    dend_11 { pt3dadd( 60.8329, 51.4435, -79.1878, 1.33 ) }
    dend_11 { pt3dadd( 61.6334, 51.6039, -80.0978, 0.22 ) }
    dend_11 { pt3dadd( 62.6145, 51.8186, -81.2436, 0.22 ) }
    dend_11 { pt3dadd( 63.1294, 51.9344, -81.8439, 0.37 ) }
    dend_11 { pt3dadd( 63.8489, 52.1033, -82.6648, 0.22 ) }
    dend_11 { pt3dadd( 64.4498, 52.26, -83.3002, 1.18 ) }
    dend_11 { pt3dadd( 64.8745, 52.3852, -83.7193, 1.4 ) }
    dend_11 { pt3dadd( 65.2665, 52.5117, -84.0578, 1.4 ) }
    dend_11 { pt3dadd( 65.8352, 52.6986, -84.488, 0.44 ) }
    dend_11 { pt3dadd( 66.5437, 52.8965, -84.998, 0.22 ) }
    dend_11 { pt3dadd( 66.9492, 52.9997, -85.2865, 0.52 ) }
    dend_11 { pt3dadd( 67.2645, 53.0827, -85.5201, 0.52 ) }
    dend_11 { pt3dadd( 68.2729, 53.3701, -86.2542, 0.22 ) }
    dend_11 { pt3dadd( 68.8987, 53.5448, -86.7059, 0.81 ) }
    dend_11 { pt3dadd( 69.5112, 53.7026, -87.1898, 1.25 ) }
    dend_11 { pt3dadd( 70.2286, 53.8605, -87.7774, 1.25 ) }
    dend_11 { pt3dadd( 71.3353, 54.0514, -88.686, 0.22 ) }
    dend_11 { pt3dadd( 71.8557, 54.13, -89.1226, 0.59 ) }
    dend_11 { pt3dadd( 72.2617, 54.1803, -89.4689, 0.74 ) }
    dend_11 { pt3dadd( 73.5848, 54.2579, -90.63, 0.22 ) }
    dend_11 { pt3dadd( 74.2496, 54.2613, -91.2167, 0.22 ) }
    dend_11 { pt3dadd( 75.2364, 54.2132, -92.0408, 1.25 ) }
    dend_11 { pt3dadd( 75.7684, 54.1671, -92.4828, 1.62 ) }
    dend_11 { pt3dadd( 75.9581, 54.1523, -92.6461, 1.62 ) }
    dend_11 { pt3dadd( 77.6844, 54.0303, -94.1244, 0.22 ) }
    dend_11 { pt3dadd( 78.1683, 53.9901, -94.5343, 0.22 ) }
    dend_11 { pt3dadd( 78.9455, 53.9134, -95.225, 1.03 ) }
    dend_11 { pt3dadd( 79.4552, 53.8456, -95.6958, 1.25 ) }
    dend_11 { pt3dadd( 80.614, 53.6624, -96.7707, 0.22 ) }
    dend_11 { pt3dadd( 81.0801, 53.5846, -97.2288, 0.22 ) }
    dend_11 { pt3dadd( 81.4268, 53.5271, -97.5965, 0.66 ) }
    dend_11 { pt3dadd( 82.2664, 53.3596, -98.5793, 0.22 ) }
    dend_11 { pt3dadd( 82.7927, 53.2374, -99.2839, 0.22 ) }
    dend_11 { pt3dadd( 83.2083, 53.1273, -99.8839, 0.74 ) }
    dend_11 { pt3dadd( 83.5837, 53.0378, -100.452, 0.96 ) }
    dend_11 { pt3dadd( 84.2441, 52.9245, -101.459, 0.22 ) }
    dend_11 { pt3dadd( 85.0329, 52.8359, -102.613, 1.33 ) }
    dend_11 { pt3dadd( 85.4683, 52.8062, -103.215, 1.77 ) }
    dend_11 { pt3dadd( 85.7101, 52.8008, -103.528, 1.77 ) }
    dend_11 { pt3dadd( 87.1601, 52.7873, -105.281, 0.22 ) }
    dend_11 { pt3dadd( 87.4768, 52.7854, -105.639, 0.22 ) }
    dend_11 { pt3dadd( 87.8581, 52.7914, -106.056, 0.74 ) }
    dend_11 { pt3dadd( 88.2005, 52.8054, -106.414, 0.74 ) }
    dend_11 { pt3dadd( 89.097, 52.8438, -107.333, 0.22 ) }
    dend_11 { pt3dadd( 89.5444, 52.8703, -107.802, 1.03 ) }
    dend_11 { pt3dadd( 89.8725, 52.9016, -108.154, 1.33 ) }
    dend_11 { pt3dadd( 90.2572, 52.955, -108.551, 1.47 ) }
    dend_11 { pt3dadd( 91.4598, 53.1525, -109.722, 0.15 ) }
    dend_11 { pt3dadd( 91.8188, 53.2185, -110.041, 0.29 ) }
    dend_11 { pt3dadd( 92.1833, 53.2925, -110.311, 0.29 ) }
    dend_11 { pt3dadd( 93.0656, 53.4624, -110.794, 0.15 ) }
    dend_11 { pt3dadd( 93.8235, 53.6167, -111.082, 0.66 ) }
    dend_11 { pt3dadd( 94.1326, 53.6822, -111.16, 0.74 ) }
    dend_11 { pt3dadd( 94.3776, 53.7372, -111.191, 0.74 ) }
    dend_11 { pt3dadd( 95.5967, 53.9773, -111.299, 0.15 ) }
    dend_11 { pt3dadd( 96.8678, 54.2099, -111.395, 0.15 ) }
    dend_11 { pt3dadd( 97.755, 54.3618, -111.458, 1.03 ) }
    dend_11 { pt3dadd( 98.1753, 54.4333, -111.497, 1.18 ) }
    dend_11 { pt3dadd( 98.4777, 54.4807, -111.534, 1.18 ) }
    dend_11 { pt3dadd( 100.124, 54.7125, -111.786, 0.15 ) }
    dend_11 { pt3dadd( 100.747, 54.7986, -111.911, 0.81 ) }
    dend_11 { pt3dadd( 101.162, 54.8646, -112.019, 1.11 ) }
    dend_11 { pt3dadd( 101.523, 54.9251, -112.121, 1.11 ) }
    dend_11 { pt3dadd( 104.093, 55.4076, -112.94, 0.22 ) }
    dend_11 { pt3dadd( 104.93, 55.5708, -113.201, 0.88 ) }
    dend_11 { pt3dadd( 105.444, 55.6802, -113.353, 0.74 ) }
    dend_11 { pt3dadd( 106.773, 55.9516, -113.697, 0.22 ) }
    dend_11 { pt3dadd( 107.288, 56.0526, -113.814, 0.59 ) }
    dend_11 { pt3dadd( 107.884, 56.175, -113.925, 0.74 ) }
    dend_11 { pt3dadd( 109.406, 56.5295, -114.114, 0.22 ) }
    dend_11 { pt3dadd( 110.107, 56.6784, -114.18, 1.47 ) }
    dend_11 { pt3dadd( 110.824, 56.8048, -114.226, 1.77 ) }
    dend_11 { pt3dadd( 111.305, 56.8705, -114.254, 1.77 ) }
    dend_11 { pt3dadd( 113.246, 57.1091, -114.335, 0.22 ) }
    dend_11 { pt3dadd( 114.11, 57.2124, -114.367, 0.66 ) }
    dend_11 { pt3dadd( 114.685, 57.2857, -114.407, 0.88 ) }
    dend_11 { pt3dadd( 115.873, 57.4177, -114.457, 0.22 ) }
    dend_11 { pt3dadd( 116.455, 57.487, -114.475, 0.44 ) }
    dend_11 { pt3dadd( 117.655, 57.6321, -114.47, 0.22 ) }
    dend_11 { pt3dadd( 117.833, 57.6524, -114.46, 0.81 ) }
    dend_11 { pt3dadd( 118.18, 57.7144, -114.438, 0.81 ) }
    dend_11 { pt3dadd( 119.849, 58.1912, -114.332, 0.22 ) }
    dend_11 { pt3dadd( 120.655, 58.4691, -114.304, 1.03 ) }
    dend_11 { pt3dadd( 120.923, 58.5684, -114.303, 1.33 ) }
    dend_11 { pt3dadd( 121.336, 58.7239, -114.319, 1.33 ) }
    dend_11 { pt3dadd( 123.385, 59.4849, -114.589, 0.22 ) }
    dend_11 { pt3dadd( 124.353, 59.8227, -114.818, 0.22 ) }
    dend_11 { pt3dadd( 125.361, 60.1306, -115.174, 1.03 ) }
    dend_11 { pt3dadd( 125.787, 60.2335, -115.361, 1.33 ) }
    dend_11 { pt3dadd( 126.141, 60.2904, -115.541, 1.33 ) }
    dend_11 { pt3dadd( 127.679, 60.4048, -116.407, 0.22 ) }
    dend_11 { pt3dadd( 128.699, 60.3839, -117.034, 0.22 ) }
    dend_11 { pt3dadd( 129.66, 60.3166, -117.615, 0.74 ) }
    dend_11 { pt3dadd( 130.219, 60.2667, -117.917, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 131.46, 60.1327, -118.48, 0.22 ) }
    dend_11 { pt3dadd( 132.075, 60.0524, -118.701, 0.22 ) }
    dend_11 { pt3dadd( 132.393, 60.0012, -118.772, 0.66 ) }
    dend_11 { pt3dadd( 132.659, 59.9478, -118.831, 0.66 ) }
    dend_11 { pt3dadd( 133.756, 59.7015, -119.104, 0.22 ) }
    dend_11 { pt3dadd( 134.439, 59.5392, -119.296, 0.88 ) }
    dend_11 { pt3dadd( 134.61, 59.4969, -119.352, 1.18 ) }
    dend_11 { pt3dadd( 134.806, 59.4459, -119.425, 1.18 ) }
    dend_11 { pt3dadd( 136.578, 58.9568, -120.099, 0.22 ) }
    dend_11 { pt3dadd( 137.355, 58.7385, -120.4, 0.44 ) }
    dend_11 { pt3dadd( 137.662, 58.654, -120.519, 0.29 ) }
    dend_11 { pt3dadd( 138.175, 58.5531, -120.779, 0.29 ) }
    dend_11 { pt3dadd( 139.035, 58.4729, -121.292, 0.96 ) }
    dend_11 { pt3dadd( 139.451, 58.4734, -121.591, 1.18 ) }
    dend_11 { pt3dadd( 139.784, 58.5003, -121.856, 1.18 ) }
    dend_11 { pt3dadd( 140.076, 58.5264, -122.094, 0.88 ) }
    dend_11 { pt3dadd( 142.075, 58.7609, -123.838, 0.22 ) }
    dend_11 { pt3dadd( 142.444, 58.8188, -124.186, 0.81 ) }
    dend_11 { pt3dadd( 142.781, 58.8807, -124.522, 0.81 ) }
    dend_11 { pt3dadd( 143.824, 59.0041, -125.542, 0.22 ) }
    dend_11 { pt3dadd( 144.297, 59.046, -126.001, 0.22 ) }
    dend_11 { pt3dadd( 145.093, 59.0899, -126.753, 1.03 ) }
    dend_11 { pt3dadd( 145.567, 59.104, -127.175, 1.11 ) }
    dend_11 { pt3dadd( 146.841, 59.1728, -128.395, 0.22 ) }
    dend_11 { pt3dadd( 147.639, 59.2569, -129.198, 0.22 ) }
    dend_11 { pt3dadd( 148.428, 59.3788, -130.075, 0.96 ) }
    dend_11 { pt3dadd( 148.841, 59.4472, -130.556, 1.18 ) }
    dend_11 { pt3dadd( 150.157, 59.7008, -132.142, 0.22 ) }
    dend_11 { pt3dadd( 150.77, 59.8486, -132.918, 0.22 ) }
    dend_11 { pt3dadd( 151.334, 60.0221, -133.675, 1.11 ) }
    dend_11 { pt3dadd( 151.723, 60.1775, -134.253, 1.33 ) }
    dend_11 { pt3dadd( 151.821, 60.218, -134.417, 1.47 ) }
    dend_11 { pt3dadd( 152.267, 60.4298, -135.248, 1.18 ) }
    dend_11 { pt3dadd( 152.884, 60.793, -136.589, 0.15 ) }
    dend_11 { pt3dadd( 153.142, 60.9517, -137.192, 0.59 ) }
    dend_11 { pt3dadd( 153.534, 61.1854, -138.15, 0.81 ) }
    dend_11 { pt3dadd( 154.073, 61.5037, -139.457, 0.22 ) }
    dend_11 { pt3dadd( 154.401, 61.7245, -140.282, 1.03 ) }
    dend_11 { pt3dadd( 154.659, 61.9299, -140.974, 1.25 ) }
    dend_11 { pt3dadd( 155.219, 62.6219, -142.786, 0.22 ) }
    dend_11 { pt3dadd( 155.457, 62.9703, -143.572, 0.37 ) }
    dend_11 { pt3dadd( 155.671, 63.3308, -144.292, 0.15 ) }
    dend_11 { pt3dadd( 155.944, 63.8687, -145.277, 0.59 ) }
    dend_11 { pt3dadd( 156.077, 64.2137, -145.929, 0.59 ) }
    dend_11 { pt3dadd( 156.402, 65.1931, -147.921, 0.22 ) }
    dend_11 { pt3dadd( 156.507, 65.4942, -148.566, 0.22 ) }
    dend_11 { pt3dadd( 156.791, 66.1881, -150.197, 1.25 ) }
    dend_11 { pt3dadd( 156.869, 66.334, -150.594, 1.92 ) }
    dend_11 { pt3dadd( 157.639, 67.6486, -154.637, 0.52 ) }
    dend_11 { pt3dadd( 157.942, 68.1713, -156.363, 0.29 ) }
    dend_11 { pt3dadd( 158.09, 68.4457, -157.277, 0.96 ) }
    dend_11 { pt3dadd( 158.242, 68.7634, -158.258, 1.18 ) }
    dend_11 { pt3dadd( 158.523, 69.3509, -159.9, 0.81 ) }
    dend_11 { pt3dadd( 159.012, 70.4549, -162.655, 1.69 ) }
    dend_11 { pt3dadd( 159.254, 71.0458, -163.882, 1.92 ) }
    dend_11 { pt3dadd( 159.761, 72.5051, -166.483, 0.22 ) }
    dend_11 { pt3dadd( 159.883, 72.9299, -167.135, 0.22 ) }
    dend_11 { pt3dadd( 160.038, 73.5377, -167.924, 1.33 ) }
    dend_11 { pt3dadd( 160.263, 74.5412, -169.013, 1.33 ) }
    dend_11 { pt3dadd( 160.563, 76.1587, -170.513, 0.22 ) }
    dend_11 { pt3dadd( 160.634, 76.8791, -171.121, 0.22 ) }
    dend_11 { pt3dadd( 160.598, 77.9069, -172.002, 0.22 ) }
    dend_11 { pt3dadd( 160.46, 78.9359, -172.989, 1.4 ) }
    dend_11 { pt3dadd( 160.365, 79.3682, -173.446, 1.62 ) }
    dend_11 { pt3dadd( 159.847, 81.2016, -175.641, 0.22 ) }
    dend_11 { pt3dadd( 159.561, 82.0971, -176.791, 0.96 ) }
    dend_11 { pt3dadd( 159.059, 83.6453, -178.91, 1.55 ) }
    dend_11 { pt3dadd( 158.661, 84.9424, -180.796, 2.21 ) }
    dend_11 { pt3dadd( 158.405, 85.8466, -182.172, 2.43 ) }
    dend_11 { pt3dadd( 157.869, 88.1681, -185.841, 0.81 ) }
    dend_11 { pt3dadd( 157.783, 88.7009, -186.707, 0.29 ) }
    dend_11 { pt3dadd( 157.715, 89.5051, -188.024, 0.74 ) }
    dend_11 { pt3dadd( 157.758, 91.031, -190.491, 0.81 ) }
    dend_11 { pt3dadd( 157.813, 91.4012, -191.1, 0.96 ) }
    dend_11 { pt3dadd( 158.108, 92.4717, -192.971, 0.22 ) }
    dend_11 { pt3dadd( 158.247, 92.7885, -193.579, 0.52 ) }
    dend_11 { pt3dadd( 158.361, 93.0028, -194.018, 0.59 ) }
    dend_11 { pt3dadd( 158.702, 93.5168, -195.117, 0.22 ) }
    dend_11 { pt3dadd( 159.172, 94.1492, -196.567, 1.47 ) }
    dend_11 { pt3dadd( 159.396, 94.5034, -197.339, 1.69 ) }
    dend_11 { pt3dadd( 159.844, 95.435, -199.242, 0.37 ) }
    dend_11 { pt3dadd( 159.959, 95.7779, -199.894, 0.88 ) }
    dend_11 { pt3dadd( 160.037, 96.1669, -200.588, 1.11 ) }
    dend_11 { pt3dadd( 160.107, 97.5589, -202.958, 0.22 ) }
    dend_11 { pt3dadd( 160.11, 98.0119, -203.744, 0.37 ) }
    dend_11 { pt3dadd( 160.081, 99.0722, -205.548, 0.22 ) }
    dend_11 { pt3dadd( 159.993, 100.062, -207.25, 1.47 ) }
    dend_11 { pt3dadd( 159.909, 100.733, -208.418, 1.69 ) }
    dend_11 { pt3dadd( 159.751, 101.92, -210.425, 1.77 ) }
    dend_11 { pt3dadd( 159.645, 102.594, -211.59, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 56.0621, 51.1074, -74.6258, 0.29 ) }
    dend_10 { pt3dadd( 57.5712, 52.2224, -75.4764, 0.29 ) }
    dend_10 { pt3dadd( 58.3276, 52.7444, -75.8778, 0.29 ) }
    dend_10 { pt3dadd( 59.206, 53.3387, -76.3368, 0.81 ) }
    dend_10 { pt3dadd( 59.788, 53.713, -76.6316, 0.96 ) }
    dend_10 { pt3dadd( 60.845, 54.3559, -77.1564, 0.22 ) }
    dend_10 { pt3dadd( 61.5401, 54.7583, -77.4959, 0.44 ) }
    dend_10 { pt3dadd( 61.8849, 54.933, -77.6653, 0.44 ) }
    dend_10 { pt3dadd( 62.6398, 55.2403, -78.0128, 0.22 ) }
    dend_10 { pt3dadd( 63.4026, 55.4662, -78.3668, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_10 { pt3dadd( 63.775, 55.5431, -78.5228, 1.33 ) }
    dend_10 { pt3dadd( 64.0917, 55.5826, -78.6479, 1.55 ) }
    dend_10 { pt3dadd( 64.8401, 55.6162, -78.8989, 1.25 ) }
    dend_10 { pt3dadd( 66.0451, 55.5987, -79.2333, 0.15 ) }
    dend_10 { pt3dadd( 66.7777, 55.5554, -79.3816, 0.74 ) }
    dend_10 { pt3dadd( 67.7634, 55.4838, -79.5061, 1.11 ) }
    dend_10 { pt3dadd( 68.3199, 55.4647, -79.5968, 1.18 ) }
    dend_10 { pt3dadd( 69.0093, 55.4708, -79.7463, 0.88 ) }
    dend_10 { pt3dadd( 70.2215, 55.5281, -80.0416, 0.15 ) }
    dend_10 { pt3dadd( 70.9038, 55.5945, -80.2635, 0.37 ) }
    dend_10 { pt3dadd( 71.398, 55.6671, -80.4775, 0.52 ) }
    dend_10 { pt3dadd( 73.1183, 56.0038, -81.4792, 0.22 ) }
    dend_10 { pt3dadd( 73.9016, 56.179, -82.0017, 1.25 ) }
    dend_10 { pt3dadd( 74.3988, 56.2956, -82.3722, 1.77 ) }
    dend_10 { pt3dadd( 74.7974, 56.3896, -82.6985, 1.77 ) }
    dend_10 { pt3dadd( 75.1466, 56.4726, -82.9915, 1.55 ) }
    dend_10 { pt3dadd( 76.4349, 56.7703, -84.0318, 0.22 ) }
    dend_10 { pt3dadd( 76.929, 56.8769, -84.3809, 0.37 ) }
    dend_10 { pt3dadd( 77.4055, 57.008, -84.7305, 0.37 ) }
    dend_10 { pt3dadd( 78.2975, 57.2893, -85.3898, 0.15 ) }
    dend_10 { pt3dadd( 78.9471, 57.5443, -85.8369, 0.96 ) }
    dend_10 { pt3dadd( 79.2107, 57.6723, -86.0108, 1.11 ) }
    dend_10 { pt3dadd( 79.4381, 57.8073, -86.154, 1.11 ) }
    dend_10 { pt3dadd( 80.8399, 58.7179, -86.976, 0.22 ) }
    dend_10 { pt3dadd( 81.4629, 59.1494, -87.3295, 0.22 ) }
    dend_10 { pt3dadd( 82.2508, 59.7124, -87.7555, 0.22 ) }
    dend_10 { pt3dadd( 82.7669, 60.0965, -88.045, 0.22 ) }
    dend_10 { pt3dadd( 83.5305, 60.6954, -88.4618, 1.18 ) }
    dend_10 { pt3dadd( 83.858, 60.958, -88.6324, 1.84 ) }
    dend_10 { pt3dadd( 84.22, 61.2715, -88.8156, 1.84 ) }
    dend_10 { pt3dadd( 84.4327, 61.4614, -88.9281, 1.84 ) }
    dend_10 { pt3dadd( 85.7552, 62.6497, -89.6965, 0.22 ) }
    dend_10 { pt3dadd( 86.4204, 63.2934, -90.0875, 0.81 ) }
    dend_10 { pt3dadd( 86.6717, 63.5625, -90.2327, 1.11 ) }
    dend_10 { pt3dadd( 87.0745, 64.0162, -90.451, 1.11 ) }
    dend_10 { pt3dadd( 87.2829, 64.2584, -90.5546, 0.74 ) }
    dend_10 { pt3dadd( 87.921, 64.9865, -90.8546, 0.29 ) }
    dend_10 { pt3dadd( 88.3104, 65.4156, -91.0148, 0.44 ) }
    dend_10 { pt3dadd( 88.6821, 65.7937, -91.173, 0.44 ) }
    dend_10 { pt3dadd( 89.122, 66.201, -91.3482, 0.22 ) }
    dend_10 { pt3dadd( 89.4813, 66.5032, -91.4738, 0.22 ) }
    dend_10 { pt3dadd( 90.3857, 67.2313, -91.7717, 1.18 ) }
    dend_10 { pt3dadd( 90.6924, 67.4644, -91.865, 1.4 ) }
    dend_10 { pt3dadd( 91.0217, 67.722, -91.9737, 1.4 ) }
    dend_10 { pt3dadd( 91.4962, 68.0957, -92.1384, 0.88 ) }
    dend_10 { pt3dadd( 91.8884, 68.3972, -92.2436, 0.37 ) }
    dend_10 { pt3dadd( 92.614, 68.9474, -92.3804, 0.22 ) }
    dend_10 { pt3dadd( 93.1174, 69.3183, -92.4284, 0.29 ) }
    dend_10 { pt3dadd( 93.6138, 69.676, -92.4539, 0.29 ) }
    dend_10 { pt3dadd( 94.6444, 70.4051, -92.4769, 0.22 ) }
    dend_10 { pt3dadd( 95.5347, 71.0353, -92.4865, 0.22 ) }
    dend_10 { pt3dadd( 96.3122, 71.6064, -92.4833, 1.33 ) }
    dend_10 { pt3dadd( 96.8111, 71.982, -92.4743, 1.55 ) }
    dend_10 { pt3dadd( 98.3723, 73.203, -92.4386, 0.22 ) }
    dend_10 { pt3dadd( 98.9791, 73.7157, -92.4533, 0.22 ) }
    dend_10 { pt3dadd( 99.7755, 74.4554, -92.5022, 0.22 ) }
    dend_10 { pt3dadd( 100.705, 75.3895, -92.6143, 1.55 ) }
    dend_10 { pt3dadd( 100.981, 75.677, -92.6598, 1.84 ) }
    dend_10 { pt3dadd( 101.267, 75.988, -92.719, 1.84 ) }
    dend_10 { pt3dadd( 102.492, 77.3732, -93.0257, 0.22 ) }
    dend_10 { pt3dadd( 102.935, 77.8875, -93.1677, 0.44 ) }
    dend_10 { pt3dadd( 103.399, 78.3957, -93.3467, 0.59 ) }
    dend_10 { pt3dadd( 104.337, 79.375, -93.7379, 0.29 ) }
    dend_10 { pt3dadd( 104.741, 79.7955, -93.9021, 1.18 ) }
    dend_10 { pt3dadd( 105.147, 80.206, -94.0505, 1.4 ) }
    dend_10 { pt3dadd( 105.518, 80.559, -94.166, 1.4 ) }
    dend_10 { pt3dadd( 106.723, 81.6349, -94.5121, 0.22 ) }
    dend_10 { pt3dadd( 107.174, 81.9961, -94.6159, 0.22 ) }
    dend_10 { pt3dadd( 107.557, 82.2671, -94.673, 0.44 ) }
    dend_10 { pt3dadd( 108.077, 82.624, -94.7045, 0.22 ) }
    dend_10 { pt3dadd( 108.333, 82.8056, -94.694, 0.22 ) }
    dend_10 { pt3dadd( 108.996, 83.2879, -94.628, 1.11 ) }
    dend_10 { pt3dadd( 109.423, 83.6163, -94.5722, 1.33 ) }
    dend_10 { pt3dadd( 109.484, 83.6608, -94.568, 1.55 ) }
    dend_10 { pt3dadd( 110.578, 84.4067, -94.5954, 0.22 ) }
    dend_10 { pt3dadd( 110.98, 84.6661, -94.6025, 0.22 ) }
    dend_10 { pt3dadd( 111.419, 84.9289, -94.5941, 0.44 ) }
    dend_10 { pt3dadd( 111.772, 85.1245, -94.5694, 0.44 ) }
    dend_10 { pt3dadd( 112.679, 85.6306, -94.4839, 0.22 ) }
    dend_10 { pt3dadd( 113.424, 86.0437, -94.4071, 0.22 ) }
    dend_10 { pt3dadd( 114.437, 86.6039, -94.2926, 1.18 ) }
    dend_10 { pt3dadd( 114.896, 86.892, -94.2349, 1.33 ) }
    dend_10 { pt3dadd( 115.431, 87.2427, -94.1162, 1.11 ) }
    dend_10 { pt3dadd( 116.324, 87.8719, -93.8469, 0.22 ) }
    dend_10 { pt3dadd( 116.572, 88.0605, -93.7553, 0.44 ) }
    dend_10 { pt3dadd( 117.003, 88.3813, -93.591, 0.44 ) }
    dend_10 { pt3dadd( 117.604, 88.7943, -93.4064, 0.22 ) }
    dend_10 { pt3dadd( 118.87, 89.5246, -93.119, 0.22 ) }
    dend_10 { pt3dadd( 119.446, 89.7937, -93.0365, 1.11 ) }
    dend_10 { pt3dadd( 119.976, 90.0124, -92.978, 1.55 ) }
    dend_10 { pt3dadd( 120.586, 90.2695, -92.9376, 1.62 ) }
    dend_10 { pt3dadd( 121.102, 90.4786, -92.9233, 1.25 ) }
    dend_10 { pt3dadd( 122.496, 91.0169, -92.9408, 0.22 ) }
    dend_10 { pt3dadd( 123.454, 91.4106, -93.0119, 0.22 ) }
    dend_10 { pt3dadd( 124.06, 91.6628, -93.0573, 0.22 ) }
    dend_10 { pt3dadd( 124.998, 92.084, -93.1261, 0.44 ) }
    dend_10 { pt3dadd( 125.551, 92.3627, -93.1663, 0.44 ) }
    dend_10 { pt3dadd( 126.213, 92.7133, -93.2101, 0.22 ) }
    dend_10 { pt3dadd( 126.767, 93.0059, -93.2447, 0.22 ) }
    dend_10 { pt3dadd( 127.375, 93.3038, -93.2968, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_10 { pt3dadd( 127.681, 93.4444, -93.3428, 0.59 ) }
    dend_10 { pt3dadd( 128.338, 93.7578, -93.474, 0.22 ) }
    dend_10 { pt3dadd( 129.135, 94.1706, -93.6592, 0.74 ) }
    dend_10 { pt3dadd( 129.487, 94.3508, -93.7495, 0.88 ) }
    dend_10 { pt3dadd( 130.056, 94.6225, -93.9162, 0.52 ) }
    dend_10 { pt3dadd( 131.013, 95.0492, -94.2332, 0.22 ) }
    dend_10 { pt3dadd( 131.831, 95.4486, -94.5589, 0.22 ) }
    dend_10 { pt3dadd( 132.722, 95.9325, -94.9597, 1.11 ) }
    dend_10 { pt3dadd( 133.177, 96.2148, -95.1932, 1.47 ) }
    dend_10 { pt3dadd( 133.629, 96.5381, -95.4536, 1.55 ) }
    dend_10 { pt3dadd( 134.828, 97.5604, -96.2571, 0.22 ) }
    dend_10 { pt3dadd( 135.772, 98.486, -96.9642, 0.96 ) }
    dend_10 { pt3dadd( 136.041, 98.7734, -97.1818, 1.4 ) }
    dend_10 { pt3dadd( 136.46, 99.2784, -97.5532, 1.25 ) }
    dend_10 { pt3dadd( 136.774, 99.6822, -97.8335, 0.88 ) }
    dend_10 { pt3dadd( 137.54, 100.696, -98.4909, 0.22 ) }
    dend_10 { pt3dadd( 137.931, 101.251, -98.8279, 0.37 ) }
    dend_10 { pt3dadd( 138.334, 101.802, -99.1411, 0.22 ) }
    dend_10 { pt3dadd( 138.955, 102.637, -99.6344, 0.52 ) }
    dend_10 { pt3dadd( 139.293, 103.095, -99.8922, 0.66 ) }
    dend_10 { pt3dadd( 139.901, 103.973, -100.382, 0.22 ) }
    dend_10 { pt3dadd( 140.311, 104.623, -100.729, 0.66 ) }
    dend_10 { pt3dadd( 140.422, 104.82, -100.829, 0.66 ) }
    dend_10 { pt3dadd( 141.066, 106.108, -101.42, 0.22 ) }
    dend_10 { pt3dadd( 141.35, 106.709, -101.64, 0.59 ) }
    dend_10 { pt3dadd( 141.971, 108.139, -102.035, 0.22 ) }
    dend_10 { pt3dadd( 142.18, 108.642, -102.127, 0.22 ) }
    dend_10 { pt3dadd( 142.525, 109.487, -102.229, 1.47 ) }
    dend_10 { pt3dadd( 142.673, 109.889, -102.25, 1.69 ) }
    dend_10 { pt3dadd( 143.221, 111.575, -102.189, 0.22 ) }
    dend_10 { pt3dadd( 143.557, 112.692, -102.117, 0.22 ) }
    dend_10 { pt3dadd( 143.782, 113.511, -102.028, 0.74 ) }
    dend_10 { pt3dadd( 143.903, 113.967, -101.976, 0.88 ) }
    dend_10 { pt3dadd( 144.271, 115.42, -101.812, 0.22 ) }
    dend_10 { pt3dadd( 144.558, 116.623, -101.692, 1.25 ) }
    dend_10 { pt3dadd( 144.673, 117.147, -101.657, 1.25 ) }
    dend_10 { pt3dadd( 144.794, 117.675, -101.636, 0.74 ) }
    dend_10 { pt3dadd( 145.026, 118.636, -101.606, 0.22 ) }
    dend_10 { pt3dadd( 145.329, 119.733, -101.569, 1.4 ) }
    dend_10 { pt3dadd( 145.453, 120.136, -101.558, 1.62 ) }
    dend_10 { pt3dadd( 145.877, 121.463, -101.512, 0.22 ) }
    dend_10 { pt3dadd( 146.159, 122.266, -101.469, 0.59 ) }
    dend_10 { pt3dadd( 146.278, 122.559, -101.432, 0.59 ) }
    dend_10 { pt3dadd( 146.821, 123.778, -101.193, 0.15 ) }
    dend_10 { pt3dadd( 147.158, 124.454, -101.006, 0.15 ) }
    dend_10 { pt3dadd( 147.475, 125.05, -100.8, 0.15 ) }
    dend_10 { pt3dadd( 147.885, 125.807, -100.511, 0.15 ) }
    dend_10 { pt3dadd( 148.724, 127.335, -99.9256, 1.18 ) }
    dend_10 { pt3dadd( 148.857, 127.611, -99.8366, 1.47 ) }
    dend_10 { pt3dadd( 149.03, 128.051, -99.7325, 1.11 ) }
    dend_10 { pt3dadd( 149.371, 129.165, -99.5517, 0.22 ) }
    dend_10 { pt3dadd( 149.566, 130.016, -99.4743, 0.96 ) }
    dend_10 { pt3dadd( 149.653, 130.601, -99.4712, 0.96 ) }
    dend_10 { pt3dadd( 149.838, 132.198, -99.736, 0.22 ) }
    dend_10 { pt3dadd( 150.001, 133.374, -100.006, 0.22 ) }
    dend_10 { pt3dadd( 150.16, 134.377, -100.281, 1.18 ) }
    dend_10 { pt3dadd( 150.222, 134.732, -100.389, 1.4 ) }
    dend_10 { pt3dadd( 150.369, 135.402, -100.593, 1.55 ) }
    dend_10 { pt3dadd( 151.067, 138.099, -101.434, 0.22 ) }
    dend_10 { pt3dadd( 151.489, 139.449, -101.877, 0.22 ) }
    dend_10 { pt3dadd( 151.805, 140.355, -102.197, 0.81 ) }
    dend_10 { pt3dadd( 151.884, 140.565, -102.276, 1.03 ) }
    dend_10 { pt3dadd( 152.369, 141.854, -102.754, 0.22 ) }
    dend_10 { pt3dadd( 152.591, 142.421, -102.95, 0.66 ) }
    dend_10 { pt3dadd( 152.771, 142.9, -103.102, 0.66 ) }
    dend_10 { pt3dadd( 153.071, 143.75, -103.407, 0.15 ) }
    dend_10 { pt3dadd( 153.428, 144.744, -103.73, 1.25 ) }
    dend_10 { pt3dadd( 153.612, 145.258, -103.865, 1.4 ) }
    dend_10 { pt3dadd( 154.024, 146.402, -104.11, 0.15 ) }
    dend_10 { pt3dadd( 154.282, 147.091, -104.221, 0.37 ) }
    dend_10 { pt3dadd( 154.41, 147.412, -104.258, 0.37 ) }
    dend_10 { pt3dadd( 155.126, 149.136, -104.417, 0.22 ) }
    dend_10 { pt3dadd( 155.531, 150.062, -104.486, 1.03 ) }
    dend_10 { pt3dadd( 155.715, 150.465, -104.508, 1.18 ) }
    dend_10 { pt3dadd( 155.816, 150.686, -104.517, 1.18 ) }
    dend_10 { pt3dadd( 156.524, 152.184, -104.547, 0.22 ) }
    dend_10 { pt3dadd( 156.82, 152.8, -104.57, 0.52 ) }
    dend_10 { pt3dadd( 156.965, 153.085, -104.583, 0.52 ) }
    dend_10 { pt3dadd( 157.6, 154.268, -104.622, 0.22 ) }
    dend_10 { pt3dadd( 157.985, 154.949, -104.627, 0.22 ) }
    dend_10 { pt3dadd( 158.447, 155.705, -104.626, 1.11 ) }
    dend_10 { pt3dadd( 158.823, 156.287, -104.615, 1.11 ) }
    dend_10 { pt3dadd( 159.814, 157.733, -104.588, 0.22 ) }
    dend_10 { pt3dadd( 160.424, 158.58, -104.589, 0.22 ) }
    dend_10 { pt3dadd( 160.985, 159.307, -104.606, 1.03 ) }
    dend_10 { pt3dadd( 161.365, 159.792, -104.628, 1.47 ) }
    dend_10 { pt3dadd( 161.661, 160.172, -104.649, 1.11 ) }
    dend_10 { pt3dadd( 162.458, 161.193, -104.644, 0.15 ) }
    dend_10 { pt3dadd( 162.746, 161.561, -104.644, 0.37 ) }
    dend_10 { pt3dadd( 163.4, 162.401, -104.649, 0.22 ) }
    dend_10 { pt3dadd( 163.746, 162.842, -104.637, 0.37 ) }
    dend_10 { pt3dadd( 163.935, 163.088, -104.633, 0.37 ) }
    dend_10 { pt3dadd( 164.858, 164.247, -104.646, 0.22 ) }
    dend_10 { pt3dadd( 165.424, 164.946, -104.664, 0.81 ) }
    dend_10 { pt3dadd( 165.769, 165.361, -104.681, 1.03 ) }
    dend_10 { pt3dadd( 166.679, 166.42, -104.749, 0.15 ) }
    dend_10 { pt3dadd( 167.21, 167.018, -104.802, 0.29 ) }
    dend_10 { pt3dadd( 167.69, 167.576, -104.867, 0.22 ) }
    dend_10 { pt3dadd( 168.116, 168.102, -104.942, 0.88 ) }
    dend_10 { pt3dadd( 168.355, 168.411, -104.968, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 168.582, 168.735, -104.977, 1.11 ) }
    dend_10 { pt3dadd( 169.336, 169.963, -104.948, 0.22 ) }
    dend_10 { pt3dadd( 169.711, 170.645, -104.883, 1.03 ) }
    dend_10 { pt3dadd( 169.883, 170.996, -104.839, 1.25 ) }
    dend_10 { pt3dadd( 170.44, 172.192, -104.671, 0.22 ) }
    dend_10 { pt3dadd( 170.879, 173.197, -104.511, 0.88 ) }
    dend_10 { pt3dadd( 171.297, 174.181, -104.338, 0.29 ) }
    dend_10 { pt3dadd( 171.622, 174.978, -104.185, 0.96 ) }
    dend_10 { pt3dadd( 171.774, 175.356, -104.11, 0.96 ) }
    dend_10 { pt3dadd( 172.046, 176.057, -103.966, 0.22 ) }
    dend_10 { pt3dadd( 172.254, 176.634, -103.839, 0.37 ) }
    dend_10 { pt3dadd( 172.538, 177.451, -103.662, 0.22 ) }
    dend_10 { pt3dadd( 172.78, 178.17, -103.507, 0.52 ) }
    dend_10 { pt3dadd( 173.28, 179.609, -103.216, 0.22 ) }
    dend_10 { pt3dadd( 173.498, 180.268, -103.094, 0.81 ) }
    dend_10 { pt3dadd( 173.754, 181.07, -102.957, 0.22 ) }
    dend_10 { pt3dadd( 173.947, 181.675, -102.865, 0.88 ) }
    dend_10 { pt3dadd( 174.121, 182.184, -102.804, 1.03 ) }
    dend_10 { pt3dadd( 174.829, 184.094, -102.636, 0.22 ) }
    dend_10 { pt3dadd( 175.095, 184.744, -102.597, 0.22 ) }
    dend_10 { pt3dadd( 175.412, 185.46, -102.566, 0.81 ) }
    dend_10 { pt3dadd( 175.551, 185.757, -102.555, 1.03 ) }
    dend_10 { pt3dadd( 176.273, 187.257, -102.534, 0.22 ) }
    dend_10 { pt3dadd( 176.44, 187.602, -102.524, 0.29 ) }
    dend_10 { pt3dadd( 176.899, 188.553, -102.472, 0.15 ) }
    dend_10 { pt3dadd( 177.149, 189.058, -102.43, 0.29 ) }
    dend_10 { pt3dadd( 177.485, 189.762, -102.364, 0.88 ) }
    dend_10 { pt3dadd( 177.747, 190.367, -102.303, 0.88 ) }
    dend_10 { pt3dadd( 178.269, 191.512, -102.088, 0.22 ) }
    dend_10 { pt3dadd( 178.497, 191.995, -101.971, 0.22 ) }
    dend_10 { pt3dadd( 178.754, 192.571, -101.815, 0.88 ) }
    dend_10 { pt3dadd( 178.93, 192.946, -101.692, 1.11 ) }
    dend_10 { pt3dadd( 179.149, 193.368, -101.534, 1.11 ) }
    dend_10 { pt3dadd( 179.987, 194.694, -100.97, 0.22 ) }
    dend_10 { pt3dadd( 180.547, 195.449, -100.661, 0.22 ) }
    dend_10 { pt3dadd( 181.0, 195.972, -100.424, 0.22 ) }
    dend_10 { pt3dadd( 181.653, 196.62, -100.108, 0.81 ) }
    dend_10 { pt3dadd( 181.937, 196.872, -99.983, 1.03 ) }
    dend_10 { pt3dadd( 183.016, 197.209, -99.1978, 0.22 ) }
    dend_10 { pt3dadd( 183.475, 197.239, -98.7898, 0.22 ) }
    dend_10 { pt3dadd( 184.292, 197.175, -98.058, 1.11 ) }
    dend_10 { pt3dadd( 184.639, 197.125, -97.7547, 1.25 ) }
    dend_10 { pt3dadd( 185.006, 197.056, -97.4433, 1.25 ) }
    dend_10 { pt3dadd( 190.299, 195.937, -93.0368, 0.66 ) }
    dend_10 { pt3dadd( 191.039, 195.768, -92.4288, 0.88 ) }
    dend_10 { pt3dadd( 192.244, 195.449, -91.424, 0.29 ) }
    dend_10 { pt3dadd( 192.909, 195.252, -90.8642, 0.22 ) }
    dend_10 { pt3dadd( 193.397, 195.105, -90.4537, 0.44 ) }
    dend_10 { pt3dadd( 193.846, 194.975, -90.1043, 0.22 ) }
    dend_10 { pt3dadd( 194.65, 195.061, -90.0707, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.66691, 131.161, -84.157, 1.77 ) }
    dend_8 { pt3dadd( -9.60466, 131.383, -86.2986, 1.77 ) }
    dend_8 { pt3dadd( -9.52817, 131.734, -88.3009, 1.47 ) }
    dend_8 { pt3dadd( -9.49201, 131.996, -89.425, 1.18 ) }
    dend_8 { pt3dadd( -9.47293, 132.319, -90.6024, 1.11 ) }
    dend_8 { pt3dadd( -9.47304, 132.668, -91.7579, 0.88 ) }
    dend_8 { pt3dadd( -9.48435, 132.817, -92.2205, 0.66 ) }
    dend_8 { pt3dadd( -9.53927, 133.165, -93.0992, 0.96 ) }
    dend_8 { pt3dadd( -9.64667, 133.615, -94.0521, 1.11 ) }
    dend_8 { pt3dadd( -9.78264, 134.0, -94.8792, 1.33 ) }
    dend_8 { pt3dadd( -9.87184, 134.188, -95.3264, 1.62 ) }
    dend_8 { pt3dadd( -10.146, 134.636, -96.4826, 1.47 ) }
    dend_8 { pt3dadd( -10.7187, 135.413, -98.6377, 0.96 ) }
    dend_8 { pt3dadd( -11.0279, 135.786, -99.6832, 0.96 ) }
    dend_8 { pt3dadd( -11.4597, 136.287, -101.051, 1.55 ) }
    dend_8 { pt3dadd( -11.8702, 136.765, -102.349, 1.33 ) }
    dend_8 { pt3dadd( -12.1916, 137.152, -103.393, 1.62 ) }
    dend_8 { pt3dadd( -12.61, 137.669, -104.759, 1.11 ) }
    dend_8 { pt3dadd( -12.7544, 137.848, -105.218, 0.59 ) }
    dend_8 { pt3dadd( -13.2294, 138.445, -106.729, 0.88 ) }
    dend_8 { pt3dadd( -13.5861, 138.919, -107.859, 1.25 ) }
    dend_8 { pt3dadd( -13.8907, 139.341, -108.812, 1.4 ) }
    dend_8 { pt3dadd( -14.2524, 139.858, -109.945, 0.52 ) }
    dend_8 { pt3dadd( -14.593, 140.363, -110.987, 0.59 ) }
    dend_8 { pt3dadd( -14.7973, 140.653, -111.605, 0.37 ) }
    dend_8 { pt3dadd( -14.9171, 140.81, -111.927, 0.59 ) }
    dend_8 { pt3dadd( -15.1711, 141.123, -112.554, 0.44 ) }
    dend_8 { pt3dadd( -15.5373, 141.568, -113.423, 0.37 ) }
    dend_8 { pt3dadd( -15.9528, 142.094, -114.416, 1.47 ) }
    dend_8 { pt3dadd( -16.5042, 142.811, -115.722, 1.84 ) }
    dend_8 { pt3dadd( -17.0706, 143.556, -117.024, 0.52 ) }
    dend_8 { pt3dadd( -17.4398, 144.045, -117.825, 0.52 ) }
    dend_8 { pt3dadd( -17.6546, 144.326, -118.248, 1.18 ) }
    dend_8 { pt3dadd( -17.8614, 144.576, -118.592, 1.18 ) }
    dend_8 { pt3dadd( -18.6043, 145.421, -119.622, 0.22 ) }
    dend_8 { pt3dadd( -18.777, 145.618, -119.819, 0.37 ) }
    dend_8 { pt3dadd( -19.1012, 145.971, -120.158, 0.96 ) }
    dend_8 { pt3dadd( -19.5218, 146.41, -120.583, 1.25 ) }
    dend_8 { pt3dadd( -20.3896, 147.263, -121.456, 0.22 ) }
    dend_8 { pt3dadd( -20.5963, 147.454, -121.683, 0.37 ) }
    dend_8 { pt3dadd( -20.7792, 147.621, -121.9, 0.37 ) }
    dend_8 { pt3dadd( -21.4325, 148.242, -122.806, 1.11 ) }
    dend_8 { pt3dadd( -21.5976, 148.405, -123.061, 1.55 ) }
    dend_8 { pt3dadd( -21.7302, 148.544, -123.281, 1.69 ) }
    dend_8 { pt3dadd( -22.6822, 149.593, -125.039, 0.29 ) }
    dend_8 { pt3dadd( -22.874, 149.816, -125.457, 0.29 ) }
    dend_8 { pt3dadd( -23.2727, 150.348, -126.493, 1.03 ) }
    dend_8 { pt3dadd( -23.3962, 150.546, -126.894, 0.81 ) }
    dend_8 { pt3dadd( -23.5001, 150.774, -127.374, 1.11 ) }
    dend_8 { pt3dadd( -23.6466, 151.252, -128.383, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( -23.8015, 152.164, -130.334, 0.59 ) }
    dend_8 { pt3dadd( -23.846, 152.486, -131.033, 1.18 ) }
    dend_8 { pt3dadd( -23.8923, 152.881, -131.899, 1.33 ) }
    dend_8 { pt3dadd( -23.9653, 153.714, -133.711, 0.52 ) }
    dend_8 { pt3dadd( -23.9802, 154.031, -134.374, 0.81 ) }
    dend_8 { pt3dadd( -23.9968, 154.408, -135.12, 0.81 ) }
    dend_8 { pt3dadd( -24.02, 154.967, -136.157, 0.37 ) }
    dend_8 { pt3dadd( -24.044, 155.246, -136.683, 0.37 ) }
    dend_8 { pt3dadd( -24.0691, 155.471, -137.105, 0.22 ) }
    dend_8 { pt3dadd( -24.1264, 155.959, -138.004, 1.18 ) }
    dend_8 { pt3dadd( -24.2091, 156.803, -139.523, 1.33 ) }
    dend_8 { pt3dadd( -24.2422, 157.327, -140.441, 0.44 ) }
    dend_8 { pt3dadd( -24.234, 157.973, -141.61, 0.74 ) }
    dend_8 { pt3dadd( -24.1778, 158.676, -142.901, 0.52 ) }
    dend_8 { pt3dadd( -24.1234, 159.015, -143.564, 0.66 ) }
    dend_8 { pt3dadd( -24.0556, 159.247, -144.047, 1.47 ) }
    dend_8 { pt3dadd( -23.9062, 159.576, -144.756, 1.55 ) }
    dend_8 { pt3dadd( -23.4489, 160.362, -146.602, 0.96 ) }
    dend_8 { pt3dadd( -23.2004, 160.669, -147.346, 0.37 ) }
    dend_8 { pt3dadd( -22.7081, 161.193, -148.698, 0.29 ) }
    dend_8 { pt3dadd( -22.4577, 161.464, -149.42, 0.81 ) }
    dend_8 { pt3dadd( -22.312, 161.644, -149.895, 1.25 ) }
    dend_8 { pt3dadd( -22.0825, 162.005, -150.766, 1.25 ) }
    dend_8 { pt3dadd( -21.9438, 162.273, -151.467, 0.59 ) }
    dend_8 { pt3dadd( -21.7405, 162.647, -152.77, 0.44 ) }
    dend_8 { pt3dadd( -21.5773, 162.879, -153.961, 0.74 ) }
    dend_8 { pt3dadd( -21.4072, 163.039, -155.292, 1.03 ) }
    dend_8 { pt3dadd( -21.2961, 163.058, -156.024, 1.25 ) }
    dend_8 { pt3dadd( -20.8424, 162.874, -158.5, 0.74 ) }
    dend_8 { pt3dadd( -20.527, 162.597, -159.987, 0.22 ) }
    dend_8 { pt3dadd( -20.2264, 162.251, -160.996, 0.96 ) }
    dend_8 { pt3dadd( -20.1449, 162.144, -161.21, 0.96 ) }
    dend_8 { pt3dadd( -19.7811, 161.627, -161.989, 0.29 ) }
    dend_8 { pt3dadd( -19.5662, 161.325, -162.335, 0.52 ) }
    dend_8 { pt3dadd( -19.2632, 160.938, -162.662, 0.22 ) }
    dend_8 { pt3dadd( -18.892, 160.525, -162.987, 0.22 ) }
    dend_8 { pt3dadd( -18.6391, 160.27, -163.171, 0.96 ) }
    dend_8 { pt3dadd( -18.4349, 160.079, -163.298, 0.96 ) }
    dend_8 { pt3dadd( -17.4286, 159.209, -163.785, 0.22 ) }
    dend_8 { pt3dadd( -17.0479, 158.905, -163.921, 0.44 ) }
    dend_8 { pt3dadd( -16.7322, 158.672, -163.991, 0.44 ) }
    dend_8 { pt3dadd( -16.0229, 158.169, -164.054, 0.15 ) }
    dend_8 { pt3dadd( -15.4486, 157.762, -164.103, 0.15 ) }
    dend_8 { pt3dadd( -15.0149, 157.458, -164.16, 0.22 ) }
    dend_8 { pt3dadd( -14.6936, 157.237, -164.232, 0.81 ) }
    dend_8 { pt3dadd( -14.1552, 156.858, -164.343, 1.11 ) }
    dend_8 { pt3dadd( -13.9328, 156.692, -164.409, 1.11 ) }
    dend_8 { pt3dadd( -12.955, 155.886, -165.184, 0.15 ) }
    dend_8 { pt3dadd( -12.6581, 155.608, -165.7, 0.37 ) }
    dend_8 { pt3dadd( -12.5369, 155.483, -166.001, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.66691, 131.161, -84.157, 0.29 ) }
    dend_5 { pt3dadd( -10.6762, 132.292, -84.0739, 0.29 ) }
    dend_5 { pt3dadd( -11.3468, 133.027, -84.0526, 0.22 ) }
    dend_5 { pt3dadd( -11.603, 133.304, -84.0561, 0.74 ) }
    dend_5 { pt3dadd( -11.8525, 133.575, -84.0784, 0.74 ) }
    dend_5 { pt3dadd( -12.3083, 134.064, -84.1419, 0.22 ) }
    dend_5 { pt3dadd( -12.7859, 134.567, -84.2326, 0.37 ) }
    dend_5 { pt3dadd( -13.1575, 134.945, -84.3381, 0.22 ) }
    dend_5 { pt3dadd( -13.5759, 135.356, -84.4788, 0.52 ) }
    dend_5 { pt3dadd( -13.9708, 135.725, -84.6412, 0.52 ) }
    dend_5 { pt3dadd( -14.4528, 136.154, -84.8884, 0.22 ) }
    dend_5 { pt3dadd( -14.7495, 136.392, -85.0751, 0.22 ) }
    dend_5 { pt3dadd( -15.2477, 136.752, -85.3967, 1.47 ) }
    dend_5 { pt3dadd( -15.522, 136.94, -85.5624, 1.92 ) }
    dend_5 { pt3dadd( -15.9826, 137.24, -85.8245, 2.06 ) }
    dend_5 { pt3dadd( -16.4267, 137.523, -86.0565, 1.69 ) }
    dend_5 { pt3dadd( -17.4299, 138.178, -86.5669, 0.44 ) }
    dend_5 { pt3dadd( -18.1111, 138.631, -86.8831, 0.22 ) }
    dend_5 { pt3dadd( -18.6154, 138.978, -87.1114, 0.52 ) }
    dend_5 { pt3dadd( -18.9306, 139.2, -87.2517, 0.66 ) }
    dend_5 { pt3dadd( -19.6805, 139.77, -87.6541, 0.22 ) }
    dend_5 { pt3dadd( -20.0184, 140.049, -87.8581, 0.22 ) }
    dend_5 { pt3dadd( -20.5058, 140.5, -88.1867, 1.47 ) }
    dend_5 { pt3dadd( -20.8144, 140.81, -88.432, 1.77 ) }
    dend_5 { pt3dadd( -21.1783, 141.206, -88.7494, 1.99 ) }
    dend_5 { pt3dadd( -22.4651, 142.716, -90.0189, 0.22 ) }
    dend_5 { pt3dadd( -22.962, 143.35, -90.5612, 0.22 ) }
    dend_5 { pt3dadd( -23.2773, 143.771, -90.9268, 0.96 ) }
    dend_5 { pt3dadd( -23.6075, 144.229, -91.3224, 1.03 ) }
    dend_5 { pt3dadd( -24.0044, 144.788, -91.7808, 0.22 ) }
    dend_5 { pt3dadd( -24.4316, 145.412, -92.2517, 0.22 ) }
    dend_5 { pt3dadd( -24.6522, 145.743, -92.4906, 0.81 ) }
    dend_5 { pt3dadd( -24.8692, 146.062, -92.7471, 0.96 ) }
    dend_5 { pt3dadd( -25.3365, 146.703, -93.3245, 0.22 ) }
    dend_5 { pt3dadd( -25.6191, 147.059, -93.6654, 0.22 ) }
    dend_5 { pt3dadd( -26.0664, 147.602, -94.2238, 1.11 ) }
    dend_5 { pt3dadd( -26.2723, 147.847, -94.4813, 1.4 ) }
    dend_5 { pt3dadd( -26.4922, 148.101, -94.7631, 1.4 ) }
    dend_5 { pt3dadd( -27.2453, 148.933, -95.7301, 0.22 ) }
    dend_5 { pt3dadd( -27.5865, 149.286, -96.1466, 0.22 ) }
    dend_5 { pt3dadd( -28.0996, 149.773, -96.7326, 0.96 ) }
    dend_5 { pt3dadd( -28.4053, 150.043, -97.0769, 1.18 ) }
    dend_5 { pt3dadd( -29.1036, 150.602, -97.8593, 0.22 ) }
    dend_5 { pt3dadd( -29.4002, 150.822, -98.1864, 0.22 ) }
    dend_5 { pt3dadd( -29.9214, 151.182, -98.7514, 1.55 ) }
    dend_5 { pt3dadd( -30.1953, 151.37, -99.045, 1.99 ) }
    dend_5 { pt3dadd( -30.7513, 151.76, -99.6461, 1.99 ) }
    dend_5 { pt3dadd( -31.9399, 152.665, -100.99, 0.22 ) }
    dend_5 { pt3dadd( -32.164, 152.856, -101.266, 0.44 ) }
    dend_5 { pt3dadd( -32.2709, 152.968, -101.41, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( -32.5965, 153.402, -101.892, 0.22 ) }
    dend_5 { pt3dadd( -33.066, 154.188, -102.582, 1.25 ) }
    dend_5 { pt3dadd( -33.2947, 154.658, -102.905, 1.62 ) }
    dend_5 { pt3dadd( -33.4256, 155.0, -103.102, 1.62 ) }
    dend_5 { pt3dadd( -33.7903, 155.955, -103.622, 0.22 ) }
    dend_5 { pt3dadd( -33.981, 156.458, -103.891, 0.22 ) }
    dend_5 { pt3dadd( -34.1738, 156.991, -104.168, 0.29 ) }
    dend_5 { pt3dadd( -34.3982, 157.589, -104.443, 0.66 ) }
    dend_5 { pt3dadd( -34.54, 157.951, -104.602, 0.66 ) }
    dend_5 { pt3dadd( -34.8423, 158.656, -104.909, 0.22 ) }
    dend_5 { pt3dadd( -35.313, 159.619, -105.361, 1.55 ) }
    dend_5 { pt3dadd( -35.5636, 160.109, -105.603, 1.77 ) }
    dend_5 { pt3dadd( -35.7802, 160.557, -105.833, 1.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -35.7802, 160.557, -105.833, 0.22 ) }
    dend_7 { pt3dadd( -36.0011, 161.64, -106.596, 0.22 ) }
    dend_7 { pt3dadd( -36.0722, 161.863, -106.739, 0.44 ) }
    dend_7 { pt3dadd( -36.1176, 161.976, -106.81, 0.44 ) }
    dend_7 { pt3dadd( -36.2828, 162.335, -107.038, 0.22 ) }
    dend_7 { pt3dadd( -36.4145, 162.594, -107.201, 0.59 ) }
    dend_7 { pt3dadd( -36.5409, 162.829, -107.351, 0.59 ) }
    dend_7 { pt3dadd( -36.8516, 163.285, -107.649, 0.22 ) }
    dend_7 { pt3dadd( -36.9932, 163.48, -107.79, 0.22 ) }
    dend_7 { pt3dadd( -37.2868, 163.864, -108.073, 1.11 ) }
    dend_7 { pt3dadd( -37.408, 164.013, -108.186, 1.33 ) }
    dend_7 { pt3dadd( -37.5184, 164.156, -108.307, 1.33 ) }
    dend_7 { pt3dadd( -37.9941, 164.835, -108.895, 0.22 ) }
    dend_7 { pt3dadd( -38.2127, 165.202, -109.212, 0.22 ) }
    dend_7 { pt3dadd( -38.4087, 165.595, -109.555, 1.33 ) }
    dend_7 { pt3dadd( -38.4942, 165.818, -109.776, 1.69 ) }
    dend_7 { pt3dadd( -38.6989, 166.564, -110.64, 0.22 ) }
    dend_7 { pt3dadd( -38.7495, 166.828, -110.971, 0.22 ) }
    dend_7 { pt3dadd( -38.7694, 167.139, -111.413, 1.11 ) }
    dend_7 { pt3dadd( -38.7443, 167.406, -111.847, 1.4 ) }
    dend_7 { pt3dadd( -38.5999, 167.958, -112.866, 1.11 ) }
    dend_7 { pt3dadd( -38.4375, 168.368, -113.736, 1.03 ) }
    dend_7 { pt3dadd( -38.3847, 168.481, -113.999, 1.55 ) }
    dend_7 { pt3dadd( -38.238, 168.78, -114.731, 1.69 ) }
    dend_7 { pt3dadd( -38.0441, 169.18, -115.747, 0.74 ) }
    dend_7 { pt3dadd( -37.8274, 169.657, -116.934, 1.4 ) }
    dend_7 { pt3dadd( -37.5667, 170.326, -118.457, 1.18 ) }
    dend_7 { pt3dadd( -37.4686, 170.609, -119.078, 1.55 ) }
    dend_7 { pt3dadd( -37.4037, 170.849, -119.582, 1.69 ) }
    dend_7 { pt3dadd( -37.3013, 171.501, -120.803, 1.18 ) }
    dend_7 { pt3dadd( -37.2824, 171.808, -121.328, 0.59 ) }
    dend_7 { pt3dadd( -37.2788, 172.527, -122.397, 1.33 ) }
    dend_7 { pt3dadd( -37.2804, 172.885, -122.857, 1.77 ) }
    dend_7 { pt3dadd( -37.2726, 173.421, -123.491, 0.52 ) }
    dend_7 { pt3dadd( -37.2602, 173.794, -123.9, 1.25 ) }
    dend_7 { pt3dadd( -37.2504, 174.309, -124.424, 1.11 ) }
    dend_7 { pt3dadd( -37.2566, 175.02, -125.133, 0.22 ) }
    dend_7 { pt3dadd( -37.2718, 175.523, -125.643, 0.22 ) }
    dend_7 { pt3dadd( -37.3078, 176.046, -126.169, 1.55 ) }
    dend_7 { pt3dadd( -37.3568, 176.427, -126.557, 1.69 ) }
    dend_7 { pt3dadd( -37.5125, 177.238, -127.408, 0.15 ) }
    dend_7 { pt3dadd( -37.6017, 177.566, -127.755, 0.81 ) }
    dend_7 { pt3dadd( -37.7272, 177.892, -128.102, 1.03 ) }
    dend_7 { pt3dadd( -37.9974, 178.457, -128.681, 0.22 ) }
    dend_7 { pt3dadd( -38.1947, 178.81, -129.023, 1.03 ) }
    dend_7 { pt3dadd( -38.3831, 179.096, -129.265, 1.47 ) }
    dend_7 { pt3dadd( -38.6273, 179.428, -129.513, 1.47 ) }
    dend_7 { pt3dadd( -39.104, 180.038, -129.943, 0.22 ) }
    dend_7 { pt3dadd( -39.3099, 180.289, -130.112, 0.74 ) }
    dend_7 { pt3dadd( -39.458, 180.466, -130.23, 0.88 ) }
    dend_7 { pt3dadd( -40.1131, 181.244, -130.733, 0.22 ) }
    dend_7 { pt3dadd( -40.4721, 181.672, -130.999, 1.11 ) }
    dend_7 { pt3dadd( -40.6692, 181.91, -131.146, 1.4 ) }
    dend_7 { pt3dadd( -41.0904, 182.438, -131.494, 0.22 ) }
    dend_7 { pt3dadd( -41.224, 182.62, -131.612, 0.52 ) }
    dend_7 { pt3dadd( -41.4319, 182.943, -131.816, 0.22 ) }
    dend_7 { pt3dadd( -41.5826, 183.238, -131.996, 0.52 ) }
    dend_7 { pt3dadd( -41.6399, 183.366, -132.066, 0.52 ) }
    dend_7 { pt3dadd( -41.8025, 183.752, -132.254, 0.22 ) }
    dend_7 { pt3dadd( -41.9815, 184.202, -132.47, 1.33 ) }
    dend_7 { pt3dadd( -42.0938, 184.519, -132.655, 1.55 ) }
    dend_7 { pt3dadd( -42.281, 185.139, -133.034, 0.22 ) }
    dend_7 { pt3dadd( -42.4161, 185.63, -133.358, 0.22 ) }
    dend_7 { pt3dadd( -42.4966, 186.106, -133.764, 1.47 ) }
    dend_7 { pt3dadd( -42.5254, 186.408, -134.036, 1.69 ) }
    dend_7 { pt3dadd( -42.5765, 187.441, -134.942, 0.22 ) }
    dend_7 { pt3dadd( -42.5805, 187.976, -135.41, 1.99 ) }
    dend_7 { pt3dadd( -42.5717, 188.329, -135.726, 2.36 ) }
    dend_7 { pt3dadd( -42.4813, 190.224, -137.466, 0.22 ) }
    dend_7 { pt3dadd( -42.4549, 190.983, -138.15, 0.44 ) }
    dend_7 { pt3dadd( -42.4518, 191.606, -138.682, 0.22 ) }
    dend_7 { pt3dadd( -42.5142, 192.711, -139.546, 1.84 ) }
    dend_7 { pt3dadd( -42.5504, 193.01, -139.765, 2.28 ) }
    dend_7 { pt3dadd( -42.6079, 193.306, -139.954, 2.28 ) }
    dend_7 { pt3dadd( -42.9457, 194.446, -140.614, 0.22 ) }
    dend_7 { pt3dadd( -43.0554, 194.757, -140.806, 0.74 ) }
    dend_7 { pt3dadd( -43.4543, 195.772, -141.447, 0.22 ) }
    dend_7 { pt3dadd( -43.6321, 196.205, -141.684, 0.74 ) }
    dend_7 { pt3dadd( -43.7278, 196.446, -141.809, 0.81 ) }
    dend_7 { pt3dadd( -44.187, 197.641, -142.421, 0.15 ) }
    dend_7 { pt3dadd( -44.3373, 198.06, -142.657, 1.11 ) }
    dend_7 { pt3dadd( -44.4901, 198.497, -142.92, 1.11 ) }
    dend_7 { pt3dadd( -44.8416, 199.534, -143.589, 0.22 ) }
    dend_7 { pt3dadd( -44.945, 199.83, -143.782, 0.66 ) }
    dend_7 { pt3dadd( -45.0307, 200.059, -143.925, 0.81 ) }
    dend_7 { pt3dadd( -45.3378, 200.751, -144.329, 0.22 ) }
    dend_7 { pt3dadd( -45.5008, 201.048, -144.533, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -45.6349, 201.235, -144.693, 1.33 ) }
    dend_7 { pt3dadd( -45.9658, 201.565, -145.097, 0.22 ) }
    dend_7 { pt3dadd( -46.1243, 201.701, -145.289, 0.66 ) }
    dend_7 { pt3dadd( -46.2658, 201.802, -145.456, 0.88 ) }
    dend_7 { pt3dadd( -46.8887, 202.178, -146.155, 0.22 ) }
    dend_7 { pt3dadd( -47.2845, 202.4, -146.617, 0.22 ) }
    dend_7 { pt3dadd( -47.4793, 202.505, -146.844, 0.96 ) }
    dend_7 { pt3dadd( -47.7318, 202.636, -147.139, 1.11 ) }
    dend_7 { pt3dadd( -48.0612, 202.819, -147.511, 0.22 ) }
    dend_7 { pt3dadd( -48.2846, 202.954, -147.734, 0.59 ) }
    dend_7 { pt3dadd( -48.3688, 203.008, -147.798, 0.59 ) }
    dend_7 { pt3dadd( -48.5954, 203.166, -147.935, 0.22 ) }
    dend_7 { pt3dadd( -48.8286, 203.344, -148.071, 0.44 ) }
    dend_7 { pt3dadd( -48.943, 203.436, -148.137, 0.52 ) }
    dend_7 { pt3dadd( -49.4148, 203.844, -148.427, 0.15 ) }
    dend_7 { pt3dadd( -49.5663, 203.979, -148.524, 0.44 ) }
    dend_7 { pt3dadd( -50.0368, 204.408, -148.847, 0.22 ) }
    dend_7 { pt3dadd( -50.2868, 204.644, -149.04, 0.44 ) }
    dend_7 { pt3dadd( -50.4065, 204.761, -149.137, 0.44 ) }
    dend_7 { pt3dadd( -50.6022, 204.962, -149.296, 0.22 ) }
    dend_7 { pt3dadd( -50.7912, 205.163, -149.446, 0.59 ) }
    dend_7 { pt3dadd( -51.0399, 205.425, -149.64, 0.59 ) }
    dend_7 { pt3dadd( -51.3643, 205.768, -149.893, 0.22 ) }
    dend_7 { pt3dadd( -51.647, 206.085, -150.131, 0.22 ) }
    dend_7 { pt3dadd( -51.9501, 206.445, -150.405, 0.81 ) }
    dend_7 { pt3dadd( -52.0249, 206.539, -150.481, 0.81 ) }
    dend_7 { pt3dadd( -52.1929, 206.771, -150.675, 0.22 ) }
    dend_7 { pt3dadd( -52.3667, 207.025, -150.887, 0.44 ) }
    dend_7 { pt3dadd( -52.7723, 207.654, -151.415, 0.22 ) }
    dend_7 { pt3dadd( -52.8729, 207.815, -151.554, 0.96 ) }
    dend_7 { pt3dadd( -53.0651, 208.122, -151.827, 1.11 ) }
    dend_7 { pt3dadd( -53.62, 208.987, -152.596, 0.22 ) }
    dend_7 { pt3dadd( -53.8731, 209.382, -152.936, 0.22 ) }
    dend_7 { pt3dadd( -53.9647, 209.525, -153.055, 0.74 ) }
    dend_7 { pt3dadd( -54.0863, 209.713, -153.204, 0.96 ) }
    dend_7 { pt3dadd( -54.2251, 209.928, -153.371, 1.18 ) }
    dend_7 { pt3dadd( -54.3217, 210.083, -153.496, 1.18 ) }
    dend_7 { pt3dadd( -54.6558, 210.662, -153.955, 0.15 ) }
    dend_7 { pt3dadd( -54.7951, 210.909, -154.167, 0.52 ) }
    dend_7 { pt3dadd( -54.8466, 211.006, -154.251, 0.81 ) }
    dend_7 { pt3dadd( -54.9141, 211.148, -154.366, 0.81 ) }
    dend_7 { pt3dadd( -55.1931, 211.779, -154.859, 0.22 ) }
    dend_7 { pt3dadd( -55.3445, 212.141, -155.128, 0.96 ) }
    dend_7 { pt3dadd( -55.4464, 212.401, -155.303, 1.47 ) }
    dend_7 { pt3dadd( -55.7131, 213.146, -155.76, 0.22 ) }
    dend_7 { pt3dadd( -55.867, 213.624, -156.033, 0.22 ) }
    dend_7 { pt3dadd( -56.0171, 214.131, -156.316, 1.03 ) }
    dend_7 { pt3dadd( -56.0719, 214.33, -156.422, 1.03 ) }
    dend_7 { pt3dadd( -56.1648, 214.729, -156.642, 0.22 ) }
    dend_7 { pt3dadd( -56.2212, 215.04, -156.82, 0.44 ) }
    dend_7 { pt3dadd( -56.2671, 215.352, -157.008, 0.37 ) }
    dend_7 { pt3dadd( -56.3239, 215.814, -157.297, 0.74 ) }
    dend_7 { pt3dadd( -56.3431, 215.987, -157.408, 0.96 ) }
    dend_7 { pt3dadd( -56.4645, 217.122, -158.168, 0.22 ) }
    dend_7 { pt3dadd( -56.5252, 217.708, -158.58, 0.74 ) }
    dend_7 { pt3dadd( -56.5416, 217.869, -158.691, 1.11 ) }
    dend_7 { pt3dadd( -56.5577, 218.035, -158.803, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -35.7802, 160.557, -105.833, 0.22 ) }
    dend_6 { pt3dadd( -37.374, 162.195, -105.84, 0.22 ) }
    dend_6 { pt3dadd( -37.8179, 162.666, -105.84, 0.22 ) }
    dend_6 { pt3dadd( -38.1121, 163.037, -105.834, 0.66 ) }
    dend_6 { pt3dadd( -38.4006, 163.443, -105.825, 0.88 ) }
    dend_6 { pt3dadd( -38.6296, 163.805, -105.793, 0.88 ) }
    dend_6 { pt3dadd( -39.6472, 165.509, -105.588, 0.15 ) }
    dend_6 { pt3dadd( -39.7565, 165.716, -105.557, 0.29 ) }
    dend_6 { pt3dadd( -40.762, 167.57, -105.201, 0.22 ) }
    dend_6 { pt3dadd( -41.0861, 168.148, -105.075, 0.37 ) }
    dend_6 { pt3dadd( -41.8839, 169.515, -104.77, 0.22 ) }
    dend_6 { pt3dadd( -42.567, 170.63, -104.491, 1.33 ) }
    dend_6 { pt3dadd( -42.7085, 170.847, -104.428, 1.62 ) }
    dend_6 { pt3dadd( -43.8684, 172.438, -103.911, 0.22 ) }
    dend_6 { pt3dadd( -44.7329, 173.465, -103.507, 0.22 ) }
    dend_6 { pt3dadd( -46.299, 175.114, -102.762, 0.22 ) }
    dend_6 { pt3dadd( -46.9736, 175.758, -102.435, 0.96 ) }
    dend_6 { pt3dadd( -47.5293, 176.247, -102.139, 1.18 ) }
    dend_6 { pt3dadd( -48.7803, 177.223, -101.396, 0.22 ) }
    dend_6 { pt3dadd( -49.6426, 177.783, -100.833, 0.22 ) }
    dend_6 { pt3dadd( -50.5556, 178.305, -100.2, 1.11 ) }
    dend_6 { pt3dadd( -50.8224, 178.442, -100.009, 1.4 ) }
    dend_6 { pt3dadd( -51.2943, 178.717, -99.6833, 1.4 ) }
    dend_6 { pt3dadd( -52.7386, 179.719, -98.7249, 0.22 ) }
    dend_6 { pt3dadd( -53.4382, 180.326, -98.2585, 0.22 ) }
    dend_6 { pt3dadd( -54.0454, 180.966, -97.8795, 0.44 ) }
    dend_6 { pt3dadd( -54.2557, 181.225, -97.7545, 0.44 ) }
    dend_6 { pt3dadd( -55.1961, 182.502, -97.2276, 0.22 ) }
    dend_6 { pt3dadd( -55.692, 183.264, -96.9613, 0.66 ) }
    dend_6 { pt3dadd( -56.0973, 183.974, -96.7557, 0.66 ) }
    dend_6 { pt3dadd( -56.6004, 184.914, -96.4667, 0.22 ) }
    dend_6 { pt3dadd( -56.8849, 185.429, -96.2861, 0.44 ) }
    dend_6 { pt3dadd( -57.1473, 185.883, -96.1122, 0.44 ) }
    dend_6 { pt3dadd( -57.6562, 186.741, -95.7525, 0.22 ) }
    dend_6 { pt3dadd( -57.8531, 187.071, -95.6072, 0.37 ) }
    dend_6 { pt3dadd( -58.5612, 188.266, -95.0866, 0.22 ) }
    dend_6 { pt3dadd( -58.8826, 188.845, -94.8195, 0.52 ) }
    dend_6 { pt3dadd( -59.0382, 189.136, -94.6755, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_33 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_31 nseg = 3
    dend_33 nseg = 7
    dend_32 nseg = 7
    dend_23 nseg = 3
    dend_21 nseg = 17
    dend_16 nseg = 7
    dend_20 nseg = 5
    dend_19 nseg = 7
    dend_30 nseg = 3
    dend_29 nseg = 7
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_14 nseg = 7
    dend_13 nseg = 7
    dend_9 nseg = 5
    dend_4 nseg = 7
    dend_11 nseg = 11
    dend_10 nseg = 11
    dend_8 nseg = 5
    dend_5 nseg = 3
    dend_7 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_NBC_96f68bef66_0_0


