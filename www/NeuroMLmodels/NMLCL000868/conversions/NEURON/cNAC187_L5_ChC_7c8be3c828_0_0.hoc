// Cell: cNAC187_L5_ChC_7c8be3c828_0_0
/*
{
  "id" : "cNAC187_L5_ChC_7c8be3c828_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.3987, -3.45834, 0.37", "-0.159118, 13.3542, -3.59581, 0.37", "-0.247289, 13.8854, -3.69511, 0.74", "-0.190472, 14.304, -3.84746, 0.74", "0.28775, 15.5895, -4.42698, 0.37", "0.758184, 16.6174, -4.85778, 0.66", "1.30802, 17.6782, -5.31797, 1.33", "1.82594, 18.4691, -5.67688, 1.33", "2.69754, 19.7756, -6.27989, 0.74", "3.34861, 20.82, -6.734, 0.74", "4.34074, 22.5466, -7.48326, 1.25", "4.96596, 23.9348, -8.06, 2.06", "5.28312, 24.9712, -8.44522, 2.06", "5.50161, 26.3748, -8.92126, 1.4", "5.41867, 27.9957, -9.4514, 0.74", "5.05306, 29.0588, -9.80231, 1.11", "4.4169, 29.8736, -10.0739, 1.11", "3.49969, 30.5698, -10.289, 0.81", "2.29173, 31.1579, -10.5854, 0.81", "0.815648, 31.6359, -10.9753, 0.81", "-0.623498, 31.9863, -11.3967, 0.96", "-1.81163, 32.2742, -11.7584, 1.11", "-2.87897, 32.5661, -12.1444, 1.11", "-5.19761, 33.3558, -13.1571, 1.11", "-5.88269, 33.6805, -13.5295, 1.11", "-6.98777, 34.5437, -14.2947, 0.59", "-7.64081, 35.4696, -14.8477, 0.96", "-8.02704, 36.3243, -15.2136, 1.25", "-8.29964, 37.0952, -15.4644, 1.55", "-8.46501, 37.5808, -15.5723, 1.55", "-9.05555, 39.0718, -15.873, 0.74", "-9.98337, 40.875, -16.2312, 0.96", "-10.7517, 41.9682, -16.4896, 0.66", "-11.3894, 42.656, -16.6911, 0.66", "-12.4135, 43.5106, -17.0105, 0.81", "-13.2634, 44.0721, -17.2842, 0.96", "-14.3818, 44.6751, -17.6734, 1.47", "-15.4122, 45.1956, -18.052, 1.62", "-16.3852, 45.7631, -18.42, 1.47", "-17.2909, 46.3996, -18.7806, 1.11", "-18.314, 47.2749, -19.2175, 0.81", "-19.5187, 48.578, -19.8093, 0.66", "-20.166, 49.4772, -20.1687, 0.81", "-20.9984, 50.9947, -20.7064, 1.03", "-21.3202, 51.7855, -20.9781, 1.25", "-21.5494, 52.5213, -21.2426, 1.25", "-21.9635, 54.1094, -21.8703, 0.96", "-22.2721, 55.3352, -22.424, 0.81", "-22.7023, 56.8476, -23.1998, 0.59", "-23.0569, 57.8983, -23.776, 0.59", "-23.5447, 59.1433, -24.4668, 0.59", "-24.0808, 60.3656, -25.1214, 0.59", "-24.6, 61.51, -25.6292, 0.44", "-25.092, 62.7047, -26.0184, 0.66", "-25.4734, 63.9812, -26.2317, 0.74", "-25.597, 64.7823, -26.2693, 0.96", "-25.6087, 65.6787, -26.2412, 0.96", "-25.4178, 67.6682, -26.2037, 0.52", "-25.1539, 69.2815, -26.2255, 0.59", "-24.8044, 71.1111, -26.3199, 0.59", "-24.6243, 72.1334, -26.4179, 0.96", "-24.486, 73.313, -26.5887, 0.96", "-24.4427, 75.4074, -27.0198, 0.66", "-24.6622, 76.8471, -27.4636, 0.66", "-25.1461, 78.0133, -27.9255, 0.96", "-25.7058, 78.7205, -28.2324, 1.03", "-26.4202, 79.2915, -28.5238, 1.03", "-27.3698, 79.811, -28.8741, 1.03", "-28.6497, 80.299, -29.3819, 0.74", "-29.6569, 80.5993, -29.8827, 0.74", "-30.3289, 80.7608, -30.2903, 0.52", "-31.8156, 81.0504, -31.3883, 0.52", "-33.0737, 81.2444, -32.4297, 0.52", "-34.3567, 81.3981, -33.5415, 1.11", "-35.0543, 81.4642, -34.1263, 1.4", "-35.8465, 81.5159, -34.7209, 1.4", "-37.2007, 81.5523, -35.5653, 0.81", "-38.0356, 81.5705, -35.9067, 0.59", "-39.2928, 81.6333, -36.1752, 0.44", "-40.5559, 81.7563, -36.2481, 0.44", "-41.8367, 81.9624, -36.2106, 0.74", "-43.0606, 82.3063, -36.1149, 1.33", "-44.5492, 82.9836, -36.0284, 0.88", "-45.209, 83.4366, -36.1207, 0.59", "-45.6177, 83.8338, -36.2879, 0.59", "-46.1928, 84.5368, -36.7085, 0.74", "-46.9043, 85.5226, -37.4443, 0.96", "-47.8229, 86.8057, -38.5703, 0.59", "-48.7734, 88.0585, -39.8223, 0.59", "-49.2679, 88.6878, -40.4473, 0.81", "-49.8926, 89.4076, -41.1323, 0.96", "-50.4914, 89.9916, -41.6451, 1.03", "-51.5053, 90.8797, -42.2949, 0.66", "-51.8159, 91.1611, -42.4561, 0.66", "-52.6502, 92.0464, -42.8578, 0.81", "-53.3861, 93.0049, -43.2911, 0.81", "-53.9457, 93.9943, -43.717, 0.66", "-54.4016, 95.0478, -44.1517, 0.66", "-54.9692, 96.6865, -44.8156, 0.52", "-55.2939, 97.7096, -45.2436, 0.81", "-55.5327, 98.4725, -45.5764, 0.74", "-56.1103, 100.11, -46.2822, 0.59", "-56.4627, 100.91, -46.5984, 0.74", "-56.9337, 101.702, -46.8719, 0.96", "-57.661, 102.653, -47.0886, 0.96", "-58.2975, 103.387, -47.1931, 0.74", "-59.1786, 104.341, -47.2652, 1.03", "-59.8145, 105.01, -47.2083, 1.25", "-60.2606, 105.515, -47.117, 0.81", "-61.2071, 106.71, -46.8235, 0.59", "-61.7838, 107.52, -46.5807, 0.66", "-62.2625, 108.255, -46.3374, 0.66", "-63.5036, 110.289, -45.6133, 0.88", "-64.133, 111.331, -45.2135, 1.11", "-64.5655, 112.043, -44.9124, 1.03", "-65.0918, 112.903, -44.5379, 1.25", "-65.2883, 113.223, -44.386, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 10.1787, -4.39834, 1.11", "4.98774, 11.0021, -4.90292, 1.11", "5.61085, 11.6595, -5.31873, 1.11", "6.60499, 12.7592, -5.98146, 1.11", "7.28687, 13.5512, -6.48038, 0.96", "8.41629, 14.7273, -7.21761, 1.55", "9.3986, 15.6675, -7.81095, 1.62", "9.97709, 16.1614, -8.13491, 1.62", "10.8711, 16.8466, -8.52846, 1.25", "12.3699, 17.8769, -8.98855, 0.96", "14.6595, 19.2924, -9.40605, 0.88", "15.7343, 19.8676, -9.47128, 1.55", "16.9078, 20.4092, -9.44296, 1.84", "18.6679, 21.1366, -9.30508, 1.11", "19.5918, 21.5019, -9.18411, 1.03", "20.6258, 21.9528, -8.98275, 1.25", "21.6259, 22.5186, -8.77313, 0.88", "22.5481, 23.1658, -8.58063, 0.88", "23.4118, 23.8727, -8.40285, 0.88", "24.4259, 24.7523, -8.18713, 0.88", "25.293, 25.5532, -7.90785, 0.96", "26.1903, 26.4503, -7.57257, 0.96", "27.009, 27.3585, -7.20748, 0.81", "28.214, 28.7772, -6.56414, 1.11", "29.0041, 29.6762, -6.06406, 1.4", "29.9145, 30.5782, -5.38765, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.76874, 2.16166, 1.62", "4.42441, 9.14801, 2.6623, 1.62", "5.18544, 9.60221, 3.34768, 1.25", "6.56993, 10.2362, 4.73766, 1.25", "7.30206, 10.5245, 5.52201, 1.25", "8.06598, 10.7291, 6.4383, 1.92", "8.38924, 10.7853, 6.84996, 2.5", "9.09221, 10.8044, 7.823, 2.5", "10.5463, 10.6248, 9.98685, 1.77", "11.5548, 10.3096, 11.4844, 0.96", "12.9778, 9.70959, 13.5923, 0.88", "13.3845, 9.51517, 14.2044, 0.88", "13.7055, 9.3678, 14.6728, 1.4", "14.0227, 9.2467, 15.0822, 1.4", "15.1799, 8.9862, 16.2542, 0.66", "15.6706, 9.01529, 16.6457, 0.66", "16.8361, 9.48007, 17.3356, 0.88", "17.5684, 9.89263, 17.7098, 0.88", "18.4882, 10.5086, 18.0741, 0.74", "19.1737, 11.0301, 18.2795, 1.4", "19.9627, 11.6819, 18.4231, 2.06", "20.7397, 12.3036, 18.4836, 1.84", "21.6715, 13.0146, 18.4305, 1.18", "22.6409, 13.7009, 18.4012, 1.18", "23.0345, 13.9442, 18.4569, 1.03", "23.6926, 14.271, 18.7301, 1.03", "24.128, 14.4481, 19.1691, 0.59", "24.5322, 14.6356, 19.8166, 0.59", "25.3244, 15.0695, 21.4299, 0.88", "26.2458, 15.6578, 23.5521, 1.62", "26.6418, 15.9462, 24.475, 1.62", "27.5631, 16.6733, 26.6093, 0.88", "27.9923, 17.011, 27.5394, 0.88", "28.3881, 17.3331, 28.3086, 1.47", "28.6663, 17.5624, 28.7497, 1.47", "29.3818, 18.1072, 29.6098, 0.81", "29.7809, 18.3572, 29.9949, 0.59", "30.2077, 18.5599, 30.3312, 0.59", "31.249, 19.0001, 31.1611, 1.25", "32.8865, 19.7156, 32.5265, 0.74", "33.3995, 19.991, 33.0051, 0.29", "33.856, 20.2574, 33.4887, 0.29", "34.1173, 20.4104, 33.8042, 0.59", "34.8095, 20.8299, 34.6573, 1.11", "35.1593, 21.0159, 35.0758, 1.11", "35.9098, 21.6787, 35.9744, 1.11", "36.3339, 22.2818, 36.6887, 0.59", "36.3455, 20.5523, 36.8063, 0.59", "36.4907, 18.7688, 37.2436, 0.52", "36.5911, 17.5232, 37.546, 0.59", "43.044, 19.5911, 43.2978, 0.59", "49.8114, 22.4519, 48.2994, 0.59", "55.4044, 26.5927, 53.8285, 0.59", "60.9455, 31.5707, 58.6776, 0.59", "67.3885, 36.9124, 61.6697, 0.59", "73.1931, 42.5345, 65.3706, 0.59", "79.3175, 47.1662, 69.8469, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.43874, 1.60166, 1.69", "-3.56761, 6.43874, 1.60166, 1.69", "-3.99538, 6.69104, 1.86848, 1.69", "-4.52212, 6.94254, 2.22845, 1.4", "-4.89792, 7.10397, 2.56214, 1.03", "-5.4144, 7.33712, 3.07515, 0.88", "-5.77123, 7.51279, 3.45323, 0.88", "-6.22345, 7.71888, 3.99791, 0.59", "-6.63621, 7.90194, 4.54712, 0.44", "-7.39832, 8.23492, 5.63098, 0.37", "-7.66141, 8.35106, 6.01929, 0.37", "-8.09044, 8.5453, 6.66821, 0.37", "-9.10543, 9.03057, 8.27895, 1.03", "-9.33659, 9.1538, 8.65904, 1.62", "-15.2763, 9.7781, 13.0707, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.20126, -14.5883, 0.74", "-4.94394, -1.92215, -14.5811, 0.74", "-6.19813, -2.7366, -14.5744, 1.03", "-7.29512, -3.43497, -14.5912, 1.25", "-8.1723, -4.00171, -14.6142, 1.62", "-8.89112, -4.4583, -14.6368, 1.84", "-9.8337, -5.02177, -14.6431, 1.84", "-10.6686, -5.46208, -14.6052, 1.99", "-11.5459, -5.86078, -14.5216, 2.21", "-12.5709, -6.24749, -14.3733, 2.65", "-13.298, -6.47679, -14.2568, 2.5", "-14.5266, -6.81567, -14.0701, 1.77", "-15.8278, -7.15762, -13.9143, 1.33", "-16.7125, -7.39629, -13.8725, 1.18", "-17.7615, -7.69031, -13.9391, 1.11", "-18.5069, -7.9258, -14.1498, 1.11", "-19.2748, -8.20251, -14.6189, 1.11", "-20.0085, -8.4891, -15.3386, 1.4", "-20.7387, -8.75853, -16.269, 1.03", "-21.3536, -8.95965, -17.1705, 0.88", "-22.2688, -9.19023, -18.6473, 0.88", "-23.2577, -9.35041, -20.3914, 1.47", "-24.0058, -9.42185, -21.7747, 1.77", "-24.8432, -9.43592, -23.3839, 1.84", "-25.1393, -9.41799, -23.968, 2.06", "-25.6758, -9.35009, -25.0545, 1.77", "-26.5022, -9.17501, -26.687, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -2.01126, 9.10166, 2.06", "-5.36761, -2.01126, 9.10166, 2.06", "-6.39169, -1.90892, 9.64333, 2.06", "-7.16159, -1.86842, 10.0196, 2.06", "-9.15934, -1.89882, 10.9485, 1.84", "-10.2715, -2.00143, 11.4507, 1.84", "-11.1223, -2.14397, 11.8308, 1.99", "-12.6534, -2.52868, 12.5129, 1.55", "-13.899, -2.98579, 13.0537, 1.03", "-14.906, -3.47545, 13.4574, 0.88", "-15.8837, -4.08843, 13.741, 1.18", "-16.6738, -4.64692, 13.9135, 1.18", "-17.2795, -5.11458, 14.0137, 1.47", "-18.1784, -5.87884, 14.0921, 1.25", "-19.0634, -6.66292, 14.2089, 1.03", "-19.8615, -7.36152, 14.3876, 1.62", "-20.661, -8.04532, 14.6846, 1.69", "-21.2773, -8.54113, 15.0018, 1.33", "-22.3782, -9.3565, 15.7509, 1.03", "-23.7342, -10.1974, 16.9305, 0.88", "-24.6824, -10.6443, 17.9811, 1.11", "-25.5039, -10.8672, 19.0598, 1.33", "-26.0161, -10.8898, 19.818, 1.33", "-26.5211, -10.7587, 20.6012, 1.18", "-27.1221, -10.4127, 21.5065, 0.88", "-27.9767, -9.77039, 22.6111, 1.18", "-28.5097, -9.38349, 23.2108, 1.33", "-28.9794, -9.13013, 23.6788, 1.33", "-29.7894, -8.89395, 24.4374, 0.59", "-30.9004, -8.95282, 25.3816, 0.52", "-31.464, -9.29548, 25.7937, 0.59", "-32.2499, -10.3629, 26.4141, 0.59", "-33.0068, -11.8309, 27.1686, 0.59", "-33.3992, -12.706, 27.6094, 1.03", "-33.8484, -13.7989, 28.2103, 1.03", "-34.2198, -14.7078, 28.7602, 1.03", "-34.92, -16.2265, 29.8821, 1.03", "-35.5837, -17.2284, 30.9443, 0.66", "-36.1428, -17.6907, 31.7614, 0.66", "-37.1281, -18.0734, 33.0562, 0.74", "-37.8247, -18.1947, 33.9105, 0.81", "-38.4727, -18.2397, 34.6755, 0.52", "-39.647, -18.2567, 35.953, 0.52", "-40.1501, -18.2933, 36.5057, 0.44", "-40.8823, -18.6152, 37.4793, 0.37", "-41.2344, -19.1138, 38.0502, 0.37", "-41.5611, -19.8702, 38.6338, 1.11", "-41.8399, -20.6462, 39.0898, 1.4", "-42.1085, -21.6681, 39.5813, 1.4", "-42.4385, -23.2197, 40.2589, 0.81", "-42.6607, -24.388, 40.7126, 0.29", "-42.8588, -25.1607, 41.0251, 0.29", "-43.0929, -25.781, 41.2923, 0.29", "-49.5353, -30.1292, 48.4567, 0.29", "-57.3317, -34.5862, 54.0326, 0.29", "-64.4646, -39.0333, 60.4424, 0.29", "-71.0839, -42.1035, 68.0908, 0.29", "-77.719, -45.3099, 75.6693, 0.29", "-85.3529, -50.0713, 81.2183, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.76126, 6.85166, 1.77", "-2.19761, -5.76126, 6.85166, 1.77", "-2.18265, -6.7052, 6.96864, 1.77", "-2.15884, -8.32351, 7.16078, 1.47", "-2.14572, -9.95215, 7.33463, 1.25", "-2.16813, -11.1963, 7.45209, 1.62", "-2.21292, -12.2461, 7.5406, 1.92", "-2.27433, -13.1617, 7.61895, 2.14", "-2.38558, -14.3017, 7.7146, 2.14", "-2.61495, -15.8842, 7.84745, 1.55", "-2.9069, -17.3726, 7.96371, 1.33", "-3.1713, -18.5003, 8.0616, 1.55", "-3.36767, -19.2125, 8.12575, 1.92", "-3.6467, -20.0764, 8.23318, 2.21", "-3.85569, -20.6457, 8.32029, 2.5", "-4.10004, -21.3177, 8.44535, 2.5", "-4.32467, -22.0589, 8.5947, 2.36", "-4.56632, -23.0758, 8.80537, 1.69", "-4.7986, -24.4092, 9.07068, 1.25", "-4.91674, -25.6551, 9.30984, 1.4", "-4.92174, -26.7608, 9.49623, 1.62", "-4.80027, -28.1102, 9.69342, 2.06", "-4.65239, -28.9419, 9.80566, 2.36", "-4.50281, -29.4811, 9.86892, 2.36", "-4.13376, -30.5087, 9.97051, 2.14", "-3.53282, -31.9507, 10.1014, 1.62", "-3.00253, -33.1653, 10.1984, 1.25", "-2.45861, -34.4183, 10.3113, 1.03", "-1.87804, -35.8272, 10.4661, 1.03", "-1.44557, -37.007, 10.6246, 1.03", "-0.974748, -38.5342, 10.8832, 1.03", "-0.769441, -39.4436, 11.0716, 0.96", "-0.707161, -40.1622, 11.2445, 0.96", "-0.791687, -40.8027, 11.4171, 0.96", "-1.18036, -41.6462, 11.7046, 0.96", "-1.5605, -42.1047, 11.8854, 0.88", "-1.95927, -42.4435, 12.027, 1.18", "-2.60303, -42.9139, 12.2077, 1.18", "-3.22663, -43.3438, 12.3677, 1.33", "-3.94464, -43.8313, 12.5673, 1.33", "-4.56197, -44.2565, 12.7606, 1.4", "-5.22375, -44.7413, 12.9997, 1.55", "-5.85765, -45.2547, 13.281, 1.55", "-6.57514, -45.9562, 13.6851, 1.84", "-7.00963, -46.4685, 13.9717, 2.14", "-7.43519, -47.0861, 14.2792, 1.99", "-8.02874, -48.2015, 14.7708, 0.88", "-8.43405, -49.2316, 15.1572, 0.88", "-8.77575, -50.4484, 15.5427, 0.81", "-8.96699, -51.5241, 15.8044, 0.74", "-9.14452, -52.8824, 16.0917, 0.74", "-9.23153, -54.1513, 16.3208, 1.03", "-9.22813, -55.2914, 16.468, 1.4", "-9.18936, -56.0008, 16.5219, 1.69", "-9.10915, -56.796, 16.5432, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -10.0013, -2.20834, 3.39", "1.44239, -10.0013, -2.20834, 3.39", "1.79034, -11.0919, -2.30663, 3.39", "2.07129, -11.9717, -2.42686, 3.02", "2.35576, -12.8626, -2.5486, 3.02", "2.72983, -14.034, -2.70867, 3.02", "3.13165, -15.2924, -2.88063, 3.24", "3.43467, -16.2202, -3.02097, 3.54", "3.7787, -17.22, -3.20759, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-65.2883, 113.223, -44.386, 0.44", "-66.429, 114.506, -45.388, 0.44", "-66.9561, 115.131, -45.8197, 0.37", "-67.2174, 115.474, -45.9714, 0.66", "-67.6484, 116.094, -46.1572, 0.66", "-68.0874, 116.794, -46.2939, 0.59", "-68.3753, 117.323, -46.3566, 0.81", "-68.6596, 117.98, -46.3139, 0.81", "-69.0843, 119.513, -46.0914, 0.52", "-69.1597, 120.25, -45.9431, 0.52", "-69.0685, 121.41, -45.6799, 0.44", "-68.7796, 122.535, -45.4281, 0.44", "-68.3009, 123.645, -45.1962, 0.74", "-67.8364, 124.436, -45.0355, 0.74", "-67.0181, 125.55, -44.8427, 0.44", "-66.3927, 126.33, -44.6822, 0.59", "-65.7587, 127.097, -44.5277, 0.59", "-65.118, 127.894, -44.3953, 0.59", "-64.6147, 128.595, -44.3218, 0.37", "-64.2464, 129.152, -44.2877, 0.37", "-63.6884, 130.032, -44.2564, 0.59", "-63.1309, 130.88, -44.2387, 0.37", "-62.623, 131.616, -44.2249, 0.81", "-62.0857, 132.365, -44.2191, 0.81", "-61.0932, 133.746, -44.241, 0.44", "-60.328, 134.834, -44.2734, 0.44", "-59.7788, 135.595, -44.3251, 0.81", "-59.2189, 136.375, -44.3887, 0.44", "-58.9121, 136.823, -44.4407, 0.59", "-58.1669, 137.969, -44.6312, 0.59", "-57.6953, 138.797, -44.8748, 0.44", "-57.1737, 139.946, -45.316, 0.44", "-56.7994, 140.939, -45.8322, 0.96", "-56.6474, 141.412, -46.1453, 1.18", "-56.5334, 141.85, -46.4945, 1.18", "-56.2549, 143.067, -47.8697, 0.44", "-56.1144, 143.946, -49.0313, 0.37", "-55.9587, 144.695, -50.2701, 0.66", "-55.8854, 145.014, -50.8603, 0.66", "-55.772, 145.499, -51.812, 0.66", "-55.2289, 147.339, -55.6004, 0.44", "-55.1188, 147.652, -56.2752, 0.44", "-54.4869, 149.289, -59.8562, 0.29", "-54.3551, 149.659, -60.6114, 0.29", "-54.2034, 150.113, -61.4624, 0.29", "-53.8872, 151.178, -63.2405, 0.74", "-53.5569, 152.592, -65.2048, 0.44", "-53.4868, 152.948, -65.6201, 0.44", "-53.404, 153.792, -66.3528, 0.37", "-53.3586, 154.655, -66.9838, 0.88", "-53.4057, 156.05, -67.7461, 0.29", "-53.4941, 156.598, -67.9627, 0.52", "-53.7479, 157.575, -68.2881, 0.15", "-54.0079, 158.434, -68.6117, 0.22", "-54.4503, 159.773, -69.139, 0.22", "-54.8983, 160.927, -69.5927, 0.22", "-55.3378, 162.004, -69.9916, 0.22", "-56.0024, 163.586, -70.6416, 1.47", "-56.4888, 164.755, -71.1799, 0.66", "-56.7814, 165.509, -71.5361, 0.96", "-57.2246, 166.765, -72.1028, 0.22", "-57.5213, 167.606, -72.4238, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-65.2883, 113.223, -44.386, 0.37", "-65.2552, 114.893, -43.9546, 0.37", "-65.1471, 115.729, -43.8098, 0.37", "-65.0701, 116.516, -43.5986, 0.37", "-65.0519, 117.684, -43.1938, 0.74", "-65.1329, 118.665, -42.8174, 0.29", "-65.357, 119.812, -42.3608, 0.29", "-65.4869, 120.349, -42.1396, 0.52", "-65.8901, 121.515, -41.4686, 0.44", "-66.1963, 122.249, -40.962, 0.29", "-66.4676, 122.888, -40.4904, 0.29", "-66.748, 123.596, -39.9353, 0.29", "-67.129, 124.797, -39.0207, 0.44", "-67.3723, 125.776, -38.2922, 0.44", "-67.5391, 127.032, -37.4426, 0.52", "-67.5508, 128.038, -36.7746, 0.37", "-67.468, 128.846, -36.2396, 0.37", "-67.277, 129.722, -35.6907, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "29.9145, 30.5782, -5.38765, 0.29", "30.6754, 30.3166, -4.3131, 0.29", "31.3894, 30.1072, -3.43367, 0.59", "32.0897, 29.9026, -2.67727, 0.74", "32.4737, 29.7953, -2.2952, 0.37", "33.0639, 29.6476, -1.66669, 0.37", "33.3914, 29.5742, -1.29123, 0.66", "33.6354, 29.5483, -0.995021, 0.96", "33.9847, 29.5453, -0.428067, 1.25", "34.508, 29.6058, 0.652433, 0.37", "34.9789, 29.7475, 1.78961, 0.37", "35.1332, 29.8172, 2.18846, 0.37", "35.471, 29.9847, 2.99949, 0.74", "36.0804, 30.264, 4.2298, 0.66", "36.5877, 30.4739, 5.05783, 0.52", "36.9927, 30.5918, 5.52371, 0.66", "37.4979, 30.6764, 5.91635, 0.66", "38.1916, 30.743, 6.31833, 0.37", "38.9986, 30.7616, 6.65917, 0.52", "39.449, 30.7401, 6.80741, 0.52", "40.2355, 30.6742, 7.04509, 0.66", "40.6772, 30.6226, 7.1715, 0.88", "41.2657, 30.5561, 7.32599, 0.88", "41.9485, 30.5027, 7.53625, 0.66", "42.8034, 30.4813, 7.81567, 0.29", "43.5521, 30.5072, 8.05611, 0.29", "44.6859, 30.6468, 8.40742, 0.88", "44.9999, 30.6995, 8.50337, 0.88", "46.2576, 30.9575, 8.86943, 0.29", "47.2277, 31.1947, 9.12621, 0.29", "48.1552, 31.4543, 9.34665, 0.96", "49.2582, 31.7913, 9.58927, 0.29", "50.0603, 32.0422, 9.76214, 0.29", "50.8028, 32.2598, 9.90492, 0.81", "51.3864, 32.4182, 9.98334, 0.81", "51.904, 32.5503, 10.049, 0.81", "52.6884, 32.7327, 10.1441, 0.59", "53.601, 32.9085, 10.2556, 0.29", "54.4064, 33.0921, 10.3651, 0.81", "55.2016, 33.2758, 10.4804, 0.22", "55.9074, 33.4252, 10.5814, 0.22", "56.3547, 33.502, 10.6365, 0.52", "56.9717, 33.5818, 10.6743, 0.22", "63.3333, 34.6002, 14.4977, 0.22", "69.2477, 35.8157, 18.9326, 0.22", "75.998, 35.7501, 22.1817, 0.22", "82.6921, 34.3625, 25.246, 0.22", "89.3728, 33.9065, 28.6055, 0.22", "94.9313, 32.4998, 33.4274, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.9145, 30.5782, -5.38765, 0.81", "31.4129, 30.8343, -4.67367, 0.81", "32.1305, 30.8661, -4.36685, 1.03", "34.0654, 30.8365, -3.73094, 0.96", "35.1337, 30.8234, -3.44247, 0.96", "36.3843, 30.8601, -3.15506, 0.59", "37.2566, 30.9305, -2.9821, 0.66", "38.4316, 31.028, -2.7899, 0.66", "39.8421, 31.2533, -2.6624, 0.59", "40.591, 31.4826, -2.69716, 0.81", "41.5388, 31.938, -2.79194, 0.96", "42.41, 32.4674, -2.90154, 1.25", "43.0385, 32.8677, -2.97482, 1.4", "43.8245, 33.3584, -3.02961, 1.4", "45.1015, 34.0463, -3.02984, 0.59", "45.6214, 34.2363, -3.00436, 0.59", "46.7043, 34.4223, -2.89527, 0.59", "47.8881, 34.4487, -2.72511, 1.03", "48.729, 34.3817, -2.57569, 1.18", "49.4562, 34.2681, -2.39511, 1.18", "50.6233, 34.0216, -2.02388, 0.74", "51.7361, 33.767, -1.587, 0.66", "52.2619, 33.6515, -1.35633, 0.96", "52.9466, 33.5328, -1.05471, 0.96", "54.1757, 33.3811, -0.533573, 1.03", "54.7557, 33.3484, -0.295173, 1.03", "56.3694, 33.4422, 0.311703, 0.59", "57.2464, 33.5908, 0.600864, 0.59", "58.8164, 33.9707, 1.0421, 0.59", "59.5881, 34.2078, 1.21716, 0.81", "60.3134, 34.4904, 1.32957, 0.81", "61.7999, 35.1725, 1.45666, 0.37", "62.7424, 35.625, 1.47368, 0.66", "63.5803, 35.9944, 1.48578, 0.74", "64.1081, 36.1908, 1.487, 0.74", "65.1444, 36.4627, 1.4843, 0.74", "66.26, 36.6017, 1.48652, 0.52", "67.8168, 36.5913, 1.50383, 0.74", "68.9872, 36.5147, 1.55232, 0.88", "69.6242, 36.4668, 1.61485, 0.96", "70.2521, 36.4319, 1.71535, 1.18", "71.1977, 36.4194, 1.93186, 1.18", "71.9064, 36.4839, 2.15725, 0.66", "73.1407, 36.8378, 2.67338, 0.59", "73.9299, 37.2221, 3.14629, 0.59", "74.4426, 37.5448, 3.52248, 0.74", "74.8365, 37.8464, 3.85893, 0.74", "75.2193, 38.1775, 4.22675, 0.74", "75.9391, 38.8535, 4.99834, 0.59", "76.8796, 39.8023, 6.11659, 0.96", "77.3271, 40.2462, 6.6564, 1.25", "77.5677, 40.4814, 6.97134, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "79.3175, 47.1662, 69.8469, 0.29", "87.5495, 52.3724, 78.5961, 0.29", "97.1381, 56.9538, 86.2438, 0.29", "107.414, 62.0829, 92.5299, 0.29", "116.02, 67.4819, 100.789, 0.29", "124.513, 74.2313, 108.119, 0.29", "131.358, 82.3619, 115.765, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "79.3175, 47.1662, 69.8469, 0.29", "84.8265, 49.8006, 74.4842, 0.29", "89.4921, 53.8711, 79.0072, 0.29", "93.2516, 58.5316, 83.7967, 0.29", "97.4296, 61.9633, 89.2339, 0.29", "101.386, 65.8238, 94.5477, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-26.5022, -9.17501, -26.687, 0.74", "-28.3733, -11.1506, -27.4818, 0.74", "-29.4267, -12.0069, -27.8028, 0.74", "-30.3505, -12.6036, -28.0521, 0.74", "-31.8989, -13.2279, -28.5558, 0.66", "-33.0771, -13.494, -28.9965, 0.66", "-34.355, -13.6705, -29.5079, 0.59", "-35.2754, -13.6359, -29.8265, 1.25", "-36.0432, -13.5354, -30.1133, 1.25", "-38.4052, -13.1682, -31.083, 0.66", "-39.5739, -13.0167, -31.6053, 0.66", "-40.1865, -13.0137, -31.923, 0.96", "-41.0547, -13.1793, -32.4389, 0.96", "-41.6394, -13.415, -32.9778, 0.96", "-42.501, -14.0073, -34.3869, 0.74", "-42.943, -14.4566, -35.5021, 0.52", "-43.38, -14.9849, -36.9052, 0.81", "-43.6595, -15.361, -37.947, 1.03", "-44.6749, -16.8273, -42.2075, 1.25", "-45.3686, -17.8379, -45.2934, 0.66", "-45.7185, -18.3148, -46.8136, 0.66", "-45.9454, -18.5611, -47.6049, 1.11", "-46.1563, -18.7275, -48.0737, 1.33", "-46.4665, -18.9408, -48.4708, 1.18", "-46.9541, -19.2976, -48.7111, 1.18", "-48.0653, -20.1348, -49.0812, 0.59", "-49.1932, -21.0729, -49.5248, 0.52", "-50.0673, -21.888, -49.9855, 0.52", "-50.779, -22.6332, -50.5442, 0.81", "-51.4624, -23.4464, -51.3298, 0.66", "-52.0968, -24.2587, -52.2333, 0.66", "-52.551, -24.8767, -53.0143, 1.33", "-52.8539, -25.3042, -53.5795, 1.33", "-53.7996, -26.6394, -55.3714, 0.66", "-54.6376, -27.7846, -56.8932, 0.52", "-55.0418, -28.2901, -57.569, 0.52", "-55.575, -28.8929, -58.2554, 0.96", "-55.9589, -29.3057, -58.6219, 1.18", "-56.2319, -29.6092, -58.793, 1.18", "-56.7826, -30.3072, -58.9673, 0.81", "-57.5078, -31.3638, -59.0609, 0.74", "-58.3726, -32.8033, -59.0834, 0.59", "-58.8032, -33.5305, -59.0464, 0.74", "-59.3821, -34.4781, -58.9436, 0.74", "-60.0208, -35.4242, -58.7979, 0.59", "-60.632, -36.2816, -58.6359, 0.44", "-61.3181, -37.2366, -58.4409, 0.44", "-61.9851, -38.1401, -58.2907, 0.44", "-62.6745, -39.1565, -58.158, 0.44", "-63.7759, -40.9639, -57.9921, 0.44", "-64.0333, -41.4853, -57.9644, 0.96", "-64.4472, -42.6865, -58.003, 1.18", "-64.6499, -43.715, -58.118, 0.81", "-64.7693, -45.3446, -58.475, 0.59", "-64.78, -46.0327, -58.7105, 0.74", "-64.7931, -47.1261, -59.1673, 0.66", "-64.8939, -48.2008, -59.6574, 0.66", "-65.0477, -49.0014, -60.0459, 0.81", "-65.4584, -50.491, -60.7543, 0.59", "-65.895, -51.8128, -61.3508, 0.52", "-66.2922, -53.0981, -61.8942, 0.81", "-66.6128, -54.3477, -62.3734, 1.4", "-66.7153, -55.0921, -62.5774, 1.69", "-66.7426, -56.5505, -62.8217, 0.52", "-66.7143, -57.7476, -63.0316, 0.44", "-66.6596, -58.9284, -63.4068, 0.44", "-66.646, -59.7341, -63.8464, 0.29", "-66.7464, -61.2132, -64.902, 1.4", "-66.7935, -61.5083, -65.1375, 1.4", "-67.4986, -64.0992, -67.5871, 0.52", "-68.0205, -65.5293, -69.0531, 0.52", "-68.3363, -66.2715, -69.8365, 0.52", "-68.8183, -67.3794, -71.0002, 0.74", "-69.1309, -68.1247, -71.7574, 0.88", "-69.7426, -69.8441, -73.2724, 0.44", "-69.991, -70.7261, -73.8834, 0.59", "-70.2888, -71.725, -74.5206, 0.59", "-70.6579, -72.743, -75.2032, 0.37", "-70.8995, -73.3567, -75.634, 0.59", "-71.3699, -74.4581, -76.3877, 0.81", "-71.8413, -75.4838, -76.9865, 1.18", "-72.1585, -76.1174, -77.3605, 1.18", "-73.0812, -77.6977, -78.3805, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-26.5022, -9.17501, -26.687, 0.81", "-26.8309, -7.6116, -26.8315, 0.81", "-27.0215, -7.03235, -26.8384, 0.81", "-27.3583, -6.33301, -26.8061, 0.81", "-27.761, -5.78479, -26.7595, 0.88", "-28.2867, -5.34882, -26.7271, 0.66", "-29.2949, -4.74987, -26.7156, 0.59", "-30.046, -4.58103, -26.7368, 0.59", "-30.7365, -4.55727, -26.8756, 0.59", "-31.6647, -4.65506, -27.2093, 0.74", "-32.6652, -4.85993, -27.7574, 1.03", "-33.0149, -4.94489, -27.9878, 1.62", "-33.487, -5.05806, -28.3394, 1.92", "-34.975, -5.36344, -29.4327, 0.88", "-35.5443, -5.46153, -29.8452, 0.66", "-36.3801, -5.5966, -30.4232, 0.66", "-37.5083, -5.77077, -31.1608, 0.66", "-38.0085, -5.83454, -31.4741, 0.66", "-39.0907, -5.90292, -32.095, 0.66", "-39.7742, -5.89354, -32.4544, 0.44", "-40.6263, -5.82629, -32.9366, 0.44", "-41.2416, -5.73892, -33.3265, 0.44", "-41.9542, -5.59695, -33.8728, 0.66", "-42.4467, -5.48042, -34.2843, 0.66", "-43.0223, -5.30207, -34.7793, 0.66", "-43.5165, -5.11475, -35.1684, 0.66", "-44.0743, -4.84452, -35.57, 0.44", "-44.4591, -4.63016, -35.8388, 0.74", "-45.0299, -4.29144, -36.223, 0.74", "-45.5375, -3.98303, -36.5618, 0.74", "-45.9702, -3.71969, -36.8383, 0.74", "-46.4671, -3.42289, -37.1424, 0.37", "-47.219, -3.08323, -37.6127, 0.37", "-47.5545, -3.01706, -37.8323, 0.37", "-47.9208, -3.04222, -38.098, 0.88", "-48.4188, -3.14825, -38.4683, 1.18", "-48.8267, -3.26465, -38.803, 1.33", "-49.8676, -3.60473, -39.7241, 0.44", "-50.6067, -3.82866, -40.4425, 0.44", "-51.1814, -3.95193, -41.0962, 0.44", "-51.6795, -3.9696, -41.7418, 0.88", "-52.1866, -3.84165, -42.467, 1.03", "-52.3814, -3.71164, -42.7582, 1.03", "-52.858, -3.15613, -43.4045, 0.44", "-53.1417, -2.78158, -43.7584, 0.44", "-53.4892, -2.36928, -44.097, 0.44", "-53.7898, -2.09574, -44.3467, 0.59", "-54.3118, -1.75158, -44.699, 0.59", "-54.8655, -1.51573, -45.038, 0.74", "-55.9173, -1.29877, -45.6161, 0.37", "-56.5934, -1.2736, -45.9889, 0.37", "-57.6132, -1.38492, -46.5604, 0.59", "-58.0187, -1.48092, -46.7974, 0.88", "-58.8101, -1.77196, -47.2994, 0.66", "-59.3475, -2.01398, -47.6545, 0.74", "-59.9249, -2.30692, -48.029, 0.59", "-60.4221, -2.57876, -48.3725, 0.52", "-60.8871, -2.83014, -48.6943, 0.88", "-61.7328, -3.23045, -49.3102, 0.59", "-62.2192, -3.41387, -49.6792, 0.44", "-62.7512, -3.56348, -50.1003, 1.03", "-63.1192, -3.63158, -50.3942, 1.33", "-63.3455, -3.65155, -50.569, 1.4", "-64.2998, -3.67474, -51.2522, 0.44", "-64.6867, -3.67524, -51.5136, 0.44", "-65.259, -3.66117, -51.8784, 0.44", "-65.8624, -3.62575, -52.2368, 0.44", "-66.8404, -3.55992, -52.8138, 0.59", "-67.5112, -3.51778, -53.2654, 0.88", "-68.1121, -3.464, -53.7769, 1.11", "-68.8722, -3.37357, -54.5296, 0.52", "-69.406, -3.2789, -55.1208, 0.52", "-69.8441, -3.18031, -55.6407, 1.03", "-70.8074, -2.94695, -56.8677, 1.25", "-71.9554, -2.71718, -58.3152, 0.52", "-72.3536, -2.65487, -58.8014, 0.59", "-72.8941, -2.59396, -59.4194, 0.59", "-73.7598, -2.49447, -60.2887, 0.44", "-74.3645, -2.41265, -60.7881, 0.44", "-75.2605, -2.24193, -61.4042, 0.44", "-75.7355, -2.12206, -61.7222, 0.44", "-76.3611, -1.88828, -62.2728, 0.66", "-76.779, -1.65583, -62.7614, 0.88", "-76.9854, -1.4838, -63.0612, 0.88", "-77.5423, -0.858831, -63.9956, 0.52", "-77.8597, -0.400665, -64.6088, 0.52", "-78.2706, 0.31796, -65.573, 0.81", "-78.5323, 0.878692, -66.3023, 0.44", "-78.6697, 1.22465, -66.751, 0.44", "-78.8004, 1.67345, -67.3082, 0.74", "-78.8562, 2.01228, -67.6838, 0.96", "-78.8906, 2.89313, -68.4986, 0.66", "-78.8873, 3.44413, -68.9853, 0.44", "-78.8936, 4.04179, -69.5486, 0.44", "-78.9508, 4.6056, -70.1514, 0.44", "-79.0082, 4.79874, -70.3894, 0.44", "-79.2848, 5.2026, -70.9523, 0.96", "-80.0681, 5.65846, -71.7759, 0.66", "-80.6204, 5.85313, -72.2296, 0.96", "-80.8934, 5.93146, -72.4115, 1.25", "-81.2192, 6.01667, -72.6055, 1.25", "-81.7346, 6.16754, -72.9037, 1.25", "-82.6076, 6.51775, -73.4282, 0.37", "-83.1107, 6.84891, -73.7349, 0.37", "-83.4284, 7.12698, -73.9703, 0.66", "-83.6693, 7.35668, -74.149, 0.81", "-84.0463, 7.72346, -74.4027, 0.81", "-84.6361, 8.29868, -74.7236, 0.44", "-85.0521, 8.6728, -74.8752, 0.44", "-85.8354, 9.28509, -75.0682, 0.44", "-86.715, 9.93437, -75.2214, 0.44", "-87.3869, 10.4274, -75.3009, 0.66", "-88.0901, 10.9402, -75.3461, 0.96", "-88.8052, 11.4567, -75.3389, 0.59", "-89.4116, 11.9117, -75.3099, 0.44", "-90.0358, 12.3905, -75.2744, 0.44", "-90.6404, 12.8498, -75.2796, 0.44", "-91.1714, 13.2021, -75.3486, 0.44", "-91.7977, 13.5175, -75.5198, 0.74", "-92.114, 13.6328, -75.6443, 0.74", "-93.0334, 13.8665, -76.0455, 0.52", "-93.4559, 13.9479, -76.2494, 0.59", "-94.2402, 14.0806, -76.6565, 0.44", "-94.8216, 14.2028, -76.9742, 0.44", "-95.5333, 14.4215, -77.4148, 0.37", "-96.2331, 14.7124, -77.8612, 0.52", "-96.7745, 15.0043, -78.2235, 1.11", "-97.1873, 15.2668, -78.5391, 1.25", "-97.6642, 15.6043, -78.9676, 0.37", "-98.3383, 16.0894, -79.6661, 0.37", "-98.7948, 16.3922, -80.1875, 0.29", "-99.1573, 16.6093, -80.6458, 0.29", "-99.8081, 16.9828, -81.5165, 0.59", "-100.318, 17.2895, -82.2329, 0.59", "-100.604, 17.474, -82.6417, 0.29", "-100.829, 17.6405, -82.9398, 0.37", "-101.18, 17.9535, -83.3839, 0.37", "-101.661, 18.4353, -83.8991, 0.44", "-102.068, 18.8754, -84.235, 0.44", "-102.461, 19.3034, -84.4925, 0.44", "-102.944, 19.7867, -84.7737, 0.37", "-103.145, 19.9609, -84.8759, 0.37", "-103.678, 20.338, -85.0957, 0.88", "-103.995, 20.5245, -85.2088, 1.11", "-104.568, 20.8359, -85.4043, 1.11", "-105.466, 21.347, -85.7057, 0.37", "-106.156, 21.7811, -85.9358, 0.37", "-106.545, 22.0707, -86.0645, 0.66", "-107.103, 22.6189, -86.2912, 0.66", "-107.518, 23.152, -86.5045, 0.37", "-107.843, 23.7051, -86.725, 0.52", "-107.953, 23.9457, -86.8213, 0.66", "-108.106, 24.3358, -86.9731, 0.66", "-108.519, 25.414, -87.3794, 0.37", "-108.724, 25.8864, -87.534, 0.37", "-108.981, 26.2967, -87.6207, 0.37", "-109.279, 26.6358, -87.6392, 0.88", "-109.785, 27.0921, -87.603, 0.81", "-110.043, 27.2867, -87.5665, 0.81", "-110.703, 27.736, -87.4422, 0.29", "-111.573, 28.3084, -87.2698, 0.29", "-112.11, 28.6977, -87.1208, 0.52", "-112.752, 29.213, -86.9297, 0.44", "-113.062, 29.4778, -86.8369, 0.44", "-113.467, 29.8503, -86.6983, 0.81", "-113.933, 30.3399, -86.5202, 0.81", "-114.78, 31.3858, -86.1546, 0.29", "-115.113, 31.831, -86.0012, 0.44", "-115.426, 32.2601, -85.8342, 0.29", "-115.776, 32.7179, -85.6553, 0.29", "-116.244, 33.2877, -85.4468, 0.29", "-116.609, 33.7003, -85.3171, 0.29", "-117.048, 34.1523, -85.1964, 0.59", "-117.897, 35.0042, -84.9492, 0.22", "-118.446, 35.5452, -84.7908, 0.22", "-118.743, 35.813, -84.703, 0.52", "-119.025, 36.0322, -84.6112, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-85.3529, -50.0713, 81.2183, 0.29", "-92.4313, -54.8295, 88.0954, 0.29", "-97.826, -61.1093, 95.2718, 0.29", "-102.9, -67.2102, 102.826, 0.29", "-107.324, -73.912, 110.28, 0.29", "-110.192, -80.969, 118.155, 0.29", "-113.95, -88.0396, 125.632, 0.29", "-117.735, -95.134, 133.074, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-85.3529, -50.0713, 81.2183, 0.29", "-93.1983, -54.6856, 88.0953, 0.29", "-100.491, -60.7759, 94.4082, 0.29", "-106.92, -67.1609, 101.339, 0.29", "-112.417, -73.4396, 109.117, 0.29", "-117.184, -80.2908, 116.893, 0.29", "-120.474, -88.0894, 124.541, 0.29", "-124.922, -95.0141, 132.44, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.10915, -56.796, 16.5432, 0.66", "-10.0505, -59.2675, 15.6201, 0.66", "-10.29, -59.9242, 15.3992, 1.03", "-10.5259, -60.613, 15.2519, 1.03", "-10.9524, -61.9324, 15.0946, 1.03", "-11.237, -62.9346, 15.0459, 1.03", "-11.5352, -64.1621, 15.0578, 0.81", "-11.7203, -65.2665, 15.2573, 0.81", "-11.8277, -66.8941, 15.6746, 1.4", "-11.8153, -67.5944, 15.8992, 1.62", "-11.7116, -68.6434, 16.3243, 1.4", "-11.5915, -69.3368, 16.6254, 1.92", "-11.365, -70.2799, 17.042, 1.4", "-10.9396, -71.7098, 17.6774, 1.69", "-10.6259, -72.6653, 18.0528, 1.11", "-10.2078, -73.9471, 18.5234, 0.81", "-10.0243, -74.5523, 18.7285, 1.11", "-9.8321, -75.2746, 18.9481, 1.25", "-9.48635, -76.8822, 19.3906, 0.96", "-9.38149, -77.6956, 19.5824, 0.74", "-9.36026, -78.4733, 19.7356, 0.81", "-9.50648, -79.6529, 19.8973, 0.52", "-9.72576, -80.4957, 19.9644, 0.88", "-9.99722, -81.2061, 19.9492, 0.88", "-10.3727, -81.9854, 19.8158, 0.88", "-10.7228, -82.6767, 19.6333, 0.66", "-11.0673, -83.4191, 19.3478, 0.66", "-11.463, -84.4676, 18.7691, 0.88", "-11.6674, -85.1684, 18.2973, 1.33", "-11.7832, -85.7071, 17.9114, 1.47", "-11.8715, -86.2149, 17.5473, 1.62", "-12.0469, -87.2515, 16.8531, 0.74", "-12.257, -88.4296, 16.21, 0.74", "-12.466, -89.3472, 15.858, 0.74", "-12.6595, -90.078, 15.7086, 0.74", "-12.932, -91.0882, 15.6541, 0.66", "-13.1778, -92.1407, 15.7465, 0.66", "-13.4442, -93.665, 16.0807, 0.96", "-13.5157, -94.4524, 16.32, 0.88", "-13.5091, -95.1605, 16.5503, 0.88", "-13.3695, -96.4857, 16.9623, 0.52", "-13.1371, -97.7069, 17.3181, 1.18", "-13.0055, -98.3052, 17.4522, 1.62", "-12.8691, -98.9789, 17.5489, 1.62", "-12.7121, -99.9298, 17.661, 0.96", "-12.6278, -100.666, 17.7374, 0.96", "-12.5799, -101.777, 17.839, 0.66", "-12.6657, -103.234, 17.943, 0.52", "-12.8425, -104.542, 18.0637, 0.59", "-13.1677, -106.044, 18.2353, 0.74", "-13.285, -106.434, 18.2925, 1.11", "-13.5838, -107.178, 18.4569, 1.25", "-14.2041, -108.368, 18.8121, 0.88", "-14.605, -108.96, 19.0592, 0.66", "-15.036, -109.481, 19.3239, 0.66", "-15.4629, -109.941, 19.5682, 0.59", "-16.3141, -110.869, 20.0139, 0.59", "-16.7939, -111.403, 20.2293, 0.44", "-17.372, -112.095, 20.4286, 0.44", "-17.855, -112.741, 20.5289, 0.74", "-18.2476, -113.34, 20.5709, 0.74", "-18.5879, -113.912, 20.5705, 0.66", "-19.0313, -114.748, 20.5034, 1.03", "-19.3648, -115.414, 20.4522, 1.4", "-19.7229, -116.163, 20.4003, 1.4", "-20.0371, -116.812, 20.3616, 1.47", "-20.5347, -117.839, 20.3188, 0.74", "-20.921, -118.639, 20.2778, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.10915, -56.796, 16.5432, 0.44", "-8.26247, -57.552, 17.2379, 0.44", "-7.76967, -58.2045, 17.7207, 0.44", "-7.43595, -59.0482, 18.1905, 0.37", "-7.09436, -60.6927, 18.8807, 0.59", "-7.05185, -61.3337, 19.087, 0.52", "-7.08007, -62.1572, 19.3102, 0.44", "-7.35355, -63.4817, 19.6586, 0.44", "-7.74222, -64.5952, 19.9838, 0.44", "-8.07356, -65.2698, 20.2293, 0.59", "-8.57816, -66.0418, 20.642, 0.59", "-9.11533, -66.6964, 21.2828, 0.37", "-9.81947, -67.4256, 22.3796, 0.59", "-10.4225, -67.9944, 23.5092, 0.88", "-10.8005, -68.3142, 24.2549, 0.81", "-11.5688, -68.9251, 25.7607, 1.03", "-12.3485, -69.5362, 27.2478, 0.88", "-13.0681, -70.1204, 28.4837, 0.44", "-13.6714, -70.6857, 29.366, 0.44", "-14.0726, -71.1287, 29.8597, 0.66", "-14.6435, -71.7815, 30.3803, 0.66", "-15.1787, -72.3605, 30.6669, 0.66", "-15.9808, -73.174, 30.8955, 0.66", "-16.6825, -73.8713, 31.0398, 1.33", "-16.9972, -74.2, 31.0813, 1.47", "-17.6092, -74.8507, 31.152, 1.03", "-18.3759, -75.6879, 31.2468, 0.81", "-19.0223, -76.395, 31.3426, 0.74", "-19.7912, -77.2436, 31.4855, 0.52", "-20.3312, -77.8717, 31.6072, 0.44", "-23.6909, -85.5109, 37.3354, 0.44", "-25.8698, -93.7887, 42.7378, 0.44", "-28.9401, -101.998, 47.8008, 0.44", "-34.1321, -109.584, 52.038, 0.44", "-39.2093, -116.007, 57.9897, 0.44", "-43.2939, -122.53, 64.5638, 0.44", "-47.6397, -129.286, 70.7221, 0.44", "-53.8732, -135.477, 75.7497, 0.44", "-61.7962, -140.774, 79.1597, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.7787, -17.22, -3.20759, 1.47", "3.15019, -19.0292, -3.567, 1.47", "2.51945, -21.3512, -3.86566, 1.33", "2.11895, -23.1974, -3.9785, 1.55", "1.86959, -24.6915, -3.95537, 1.55", "1.67798, -26.2357, -3.75284, 1.77", "1.4786, -28.207, -3.29326, 1.77", "1.41344, -29.4178, -2.8478, 2.14", "1.37248, -30.4257, -2.36567, 2.58", "1.30863, -31.7143, -1.71184, 2.36", "1.1326, -34.0839, -0.621841, 1.77", "0.918006, -36.1361, 0.109441, 1.47", "0.714762, -37.8649, 0.49438, 1.18", "0.510158, -39.7075, 0.708728, 1.11", "0.353425, -41.351, 0.726112, 1.33", "0.196557, -43.5987, 0.499519, 1.25", "0.151703, -45.5688, 0.115139, 1.47", "0.203509, -47.3335, -0.295892, 1.62", "0.286874, -48.6572, -0.614554, 2.14", "0.3413, -49.5704, -0.81661, 2.58", "0.370163, -50.8829, -1.05034, 2.43", "0.300953, -52.996, -1.33318, 2.14", "0.133702, -54.7037, -1.5168, 1.92", "-0.161769, -56.3994, -1.66018, 1.47", "-0.699449, -58.4974, -1.81042, 1.25", "-1.2637, -60.2289, -1.86282, 1.11", "-1.77466, -61.5246, -1.83232, 1.4", "-2.14516, -62.3575, -1.77818, 1.55", "-2.72158, -63.6287, -1.63711, 1.18", "-3.25337, -64.924, -1.41803, 0.88", "-3.71867, -66.285, -1.19738, 1.18", "-4.07044, -67.6152, -1.00031, 1.03", "-4.35035, -68.8664, -0.813101, 1.03", "-4.68087, -70.7206, -0.56647, 1.47", "-4.81677, -71.898, -0.444967, 1.77", "-4.92667, -73.7507, -0.34233, 1.77", "-4.97763, -75.1787, -0.37856, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.7787, -17.22, -3.20759, 1.77", "4.27914, -19.5435, -3.76663, 1.77", "4.50429, -20.7065, -4.02473, 1.99", "4.76319, -22.0438, -4.32152, 1.99", "5.11644, -23.8685, -4.72647, 3.17", "5.27557, -24.6905, -4.90888, 3.76", "5.54785, -26.097, -5.22102, 4.2", "5.70309, -27.3418, -5.43251, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205347", "5.97663, 56.3268, -0.359339, 0.205347", "7.46769, 71.2525, -0.359339, 0.205347" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-67.277, 129.722, -35.6907, 0.29", "-67.542, 130.639, -35.7596, 0.29", "-67.7877, 132.064, -36.1168, 0.29", "-67.9182, 133.357, -36.4842, 0.29", "-67.9715, 134.761, -36.91, 0.29", "-67.9654, 135.775, -37.2419, 0.29", "-67.9315, 137.446, -37.7835, 0.29", "-67.751, 140.471, -38.885, 0.29", "-67.6758, 141.407, -39.2527, 0.37", "-67.5883, 142.538, -39.7249, 0.37", "-67.4965, 143.935, -40.3507, 0.37", "-67.4149, 145.085, -40.8712, 0.22", "-67.3484, 146.28, -41.3926, 0.22", "-67.4101, 147.551, -41.8447, 1.03", "-67.4455, 147.777, -41.9355, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-67.277, 129.722, -35.6907, 0.52", "-68.6975, 130.839, -35.293, 0.52", "-69.3578, 131.439, -35.0619, 0.52", "-70.0205, 132.145, -34.8084, 0.44", "-70.3151, 132.511, -34.6905, 0.59", "-70.6288, 132.962, -34.5574, 0.59", "-71.2036, 133.828, -34.2941, 0.37", "-71.8671, 134.97, -34.0198, 0.37", "-72.2677, 135.71, -33.8266, 0.37", "-72.6745, 136.454, -33.6243, 0.37", "-73.1308, 137.266, -33.3821, 0.29", "-73.5598, 137.989, -33.1541, 0.29", "-74.0596, 138.742, -32.9073, 0.81", "-74.296, 139.039, -32.8135, 0.81", "-74.7039, 139.48, -32.6718, 0.74", "-75.2681, 140.037, -32.536, 0.74", "-75.7632, 140.476, -32.5037, 0.96", "-76.264, 140.891, -32.5594, 0.96", "-76.5969, 141.172, -32.6488, 0.59", "-77.234, 141.776, -32.9215, 0.29", "-77.8087, 142.411, -33.2832, 0.29", "-78.417, 143.171, -33.7605, 0.29", "-78.8402, 143.748, -34.1137, 0.22", "-79.4711, 144.649, -34.6532, 0.22", "-79.9631, 145.391, -35.0811, 0.74", "-80.5228, 146.272, -35.53, 0.37", "-80.9761, 147.042, -35.8421, 0.37", "-81.3929, 147.801, -36.1016, 0.81", "-81.6912, 148.313, -36.2811, 1.18", "-81.9818, 148.71, -36.4303, 1.18", "-82.7334, 149.547, -36.8083, 0.29", "-83.5344, 150.375, -37.1982, 0.29", "-84.0437, 150.871, -37.4662, 0.29", "-84.5625, 151.346, -37.7623, 0.29", "-85.3341, 151.993, -38.2003, 0.74", "-85.894, 152.369, -38.519, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "94.9313, 32.4998, 33.4274, 0.29", "105.638, 32.9108, 39.9314, 0.29", "116.072, 33.0029, 46.8764, 0.29", "126.866, 34.509, 53.0692, 0.29", "136.931, 37.5079, 59.9108, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "94.9313, 32.4998, 33.4274, 0.29", "105.303, 32.8342, 39.7687, 0.29", "115.833, 35.1768, 45.3843, 0.29", "127.262, 37.53, 48.8097, 0.29", "137.716, 41.7326, 53.3885, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "77.5677, 40.4814, 6.97134, 0.44", "78.7063, 40.4452, 6.79842, 0.44", "79.1431, 40.4837, 6.66438, 0.37", "79.9264, 40.6235, 6.3731, 0.59", "80.3532, 40.7192, 6.20581, 0.74", "81.4442, 40.9997, 5.78704, 0.37", "82.563, 41.3208, 5.37679, 0.29", "83.2304, 41.5863, 5.09252, 0.29", "83.7029, 41.8166, 4.90462, 0.88", "83.8757, 41.9161, 4.83488, 1.11", "84.2985, 42.182, 4.68318, 1.11", "84.6808, 42.4372, 4.61538, 1.18", "85.363, 42.8243, 4.63284, 0.74", "85.8224, 43.0781, 4.66987, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "77.5677, 40.4814, 6.97134, 0.29", "78.3765, 41.4328, 7.45398, 0.29", "78.7541, 41.8824, 7.7, 0.29", "79.2377, 42.4583, 8.01511, 0.66", "79.7598, 43.0801, 8.3553, 0.29", "80.1507, 43.5456, 8.61, 0.29", "80.9341, 44.4785, 9.12048, 0.29", "81.3765, 44.9716, 9.46855, 0.29", "88.2534, 52.4896, 12.7543, 0.29", "93.9082, 60.5925, 16.874, 0.29", "98.2801, 69.8564, 19.9842, 0.29", "103.707, 78.3877, 23.5014, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.0812, -77.6977, -78.3805, 0.81", "-73.3537, -79.168, -80.1834, 0.81", "-73.4213, -79.355, -80.4214, 0.81", "-74.4357, -81.272, -82.8104, 0.37", "-74.761, -81.7802, -83.3954, 0.52", "-75.0787, -82.2651, -83.9344, 0.66", "-75.4435, -82.8427, -84.5504, 0.66", "-76.2913, -83.9952, -85.7229, 0.37", "-76.8273, -84.7095, -86.4785, 0.37", "-77.6637, -85.7724, -87.6123, 0.37", "-78.173, -86.4232, -88.3361, 0.66", "-78.9923, -87.4502, -89.479, 1.11", "-79.3851, -87.9171, -89.9834, 1.25", "-80.7029, -89.3635, -91.7302, 0.22", "-81.2514, -89.8757, -92.4489, 0.29", "-81.7326, -90.2483, -93.0563, 0.59", "-82.2867, -90.6271, -93.7014, 0.81", "-82.8718, -91.0364, -94.3966, 0.81", "-84.383, -92.2817, -96.183, 0.37", "-84.8285, -92.7164, -96.6888, 0.37", "-85.541, -93.6269, -97.5805, 0.59", "-85.7999, -94.0343, -97.9173, 0.81", "-86.7209, -95.7348, -99.0819, 0.44", "-87.3529, -97.0444, -99.7901, 0.44", "-87.8658, -98.1706, -100.264, 0.37", "-88.4856, -99.5801, -100.807, 0.37", "-88.949, -100.616, -101.206, 0.66", "-89.3273, -101.38, -101.533, 0.81", "-89.7093, -102.084, -101.822, 0.81", "-90.4282, -103.322, -102.364, 0.29", "-90.854, -104.0, -102.653, 0.96", "-91.914, -105.586, -103.242, 0.29", "-92.5949, -106.62, -103.582, 0.29", "-93.2806, -107.653, -103.854, 0.44", "-93.674, -108.224, -103.992, 0.44", "-94.322, -109.135, -104.16, 0.29", "-94.6739, -109.645, -104.28, 0.59", "-95.2076, -110.489, -104.481, 0.59", "-95.6936, -111.34, -104.723, 0.52", "-96.4607, -112.62, -105.179, 0.37", "-96.9492, -113.42, -105.503, 0.88", "-97.8594, -114.909, -106.151, 0.44", "-98.366, -115.767, -106.517, 0.59", "-98.7802, -116.473, -106.808, 0.59", "-99.2819, -117.33, -107.116, 0.59", "-99.8129, -118.199, -107.356, 0.37", "-100.25, -118.814, -107.481, 0.37", "-100.997, -119.693, -107.564, 0.29", "-101.286, -119.991, -107.562, 0.29", "-102.037, -120.735, -107.479, 0.88", "-102.55, -121.244, -107.371, 1.18", "-103.421, -122.024, -107.153, 0.29", "-104.065, -122.553, -106.999, 0.29", "-105.021, -123.345, -106.836, 0.29", "-105.453, -123.729, -106.785, 0.88", "-105.869, -124.127, -106.767, 0.88", "-107.213, -125.473, -106.854, 0.22", "-107.659, -125.941, -106.944, 0.22", "-108.637, -126.941, -107.219, 0.59", "-108.853, -127.16, -107.297, 0.59", "-109.723, -128.034, -107.632, 0.22", "-110.22, -128.544, -107.841, 0.44", "-110.905, -129.332, -108.178, 0.22", "-111.851, -130.408, -108.627, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-73.0812, -77.6977, -78.3805, 0.29", "-73.8184, -77.756, -78.4408, 0.29", "-74.2765, -77.8177, -78.4579, 0.29", "-74.7257, -77.8976, -78.4786, 0.66", "-74.9399, -77.948, -78.4905, 0.66", "-75.6949, -78.1504, -78.5273, 0.29", "-76.0202, -78.2441, -78.5461, 0.29", "-76.264, -78.3283, -78.5377, 0.66", "-76.4962, -78.4193, -78.5254, 0.66", "-77.2912, -78.7489, -78.4818, 0.29", "-77.5725, -78.8551, -78.472, 0.52", "-77.8411, -78.9415, -78.4719, 0.52", "-78.5846, -79.1224, -78.4689, 0.22", "-78.9307, -79.1836, -78.4653, 0.59", "-79.1541, -79.2112, -78.4549, 0.74", "-79.5883, -79.24, -78.4328, 0.29", "-79.8072, -79.2462, -78.4247, 0.29", "-80.0932, -79.2406, -78.4164, 0.96", "-80.3701, -79.2121, -78.4317, 0.96", "-81.1289, -79.123, -78.4503, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-20.921, -118.639, 20.2778, 0.29", "-20.6859, -118.66, 20.9032, 0.29", "-20.1322, -118.75, 22.2519, 0.29", "-19.74, -118.853, 23.2126, 0.59", "-19.2244, -119.091, 24.5512, 0.66", "-18.5006, -119.578, 26.4153, 0.59", "-18.0103, -120.049, 27.6228, 0.29", "-17.6719, -120.501, 28.3144, 0.52", "-17.4973, -121.028, 28.5423, 0.66", "-17.2863, -122.187, 28.5609, 0.37", "-17.0577, -123.676, 28.3922, 0.29", "-16.8992, -124.855, 28.1768, 0.29", "-16.7657, -126.024, 27.9065, 0.29", "-16.632, -127.087, 27.6434, 0.29", "-16.4166, -128.343, 27.3186, 0.29", "-16.1783, -129.418, 27.0364, 0.29", "-12.2029, -136.399, 32.3746, 0.29", "-8.5592, -142.173, 39.1879, 0.29", "-3.1307, -148.223, 44.3805, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-20.921, -118.639, 20.2778, 0.74", "-21.5418, -119.369, 19.9992, 0.74", "-22.0847, -120.125, 19.7569, 0.52", "-22.4978, -120.768, 19.5813, 0.52", "-23.1453, -121.945, 19.3203, 0.59", "-23.4065, -122.546, 19.2446, 0.96", "-23.6069, -123.2, 19.1888, 1.18", "-23.6767, -123.758, 19.1114, 1.18", "-23.6576, -124.287, 19.0372, 0.96", "-23.525, -125.063, 18.8785, 0.66", "-23.2019, -126.165, 18.4688, 0.52", "-22.8355, -127.151, 18.0283, 0.52", "-22.3621, -128.194, 17.459, 0.29", "-22.1479, -128.585, 17.1967, 0.37", "-21.5558, -129.491, 16.4143, 0.29", "-20.914, -130.305, 15.4172, 0.29", "-21.3237, -139.08, 13.4887, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-4.97763, -75.1787, -0.37856, 0.37", "-8.22794, -76.7504, 1.06406, 0.37", "-9.5909, -77.5354, 2.2624, 0.37", "-10.5442, -78.1382, 3.30216, 0.37", "-11.1858, -78.5581, 4.02345, 0.37", "-11.9805, -79.0995, 4.97327, 0.59", "-12.7467, -79.6389, 5.90438, 0.74", "-13.2869, -80.0458, 6.76572, 0.52", "-13.6927, -80.3591, 7.42279, 0.59", "-14.0642, -80.6965, 7.97476, 0.74", "-14.7409, -81.2857, 8.81546, 0.52", "-15.1911, -81.6453, 9.27499, 0.52", "-15.6337, -81.9571, 9.65176, 0.74", "-16.1406, -82.2883, 10.0474, 0.74", "-16.6281, -82.6144, 10.4144, 0.52", "-17.3388, -83.0826, 10.9347, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.97763, -75.1787, -0.37856, 0.88", "-5.15115, -76.1943, -0.334565, 0.88", "-5.44479, -77.4735, -0.116412, 0.66", "-5.67076, -78.3722, 0.287126, 0.74", "-5.86024, -78.9705, 0.658122, 0.88", "-6.20797, -79.8779, 1.28576, 0.88", "-6.43799, -80.4274, 1.67175, 1.03", "-6.7147, -81.0281, 2.16022, 1.03", "-7.32634, -82.4262, 3.30478, 1.03", "-7.66741, -83.304, 3.9601, 1.03", "-7.93531, -84.1885, 4.50526, 0.88", "-8.064, -84.9446, 4.82415, 0.88", "-8.05386, -85.6462, 4.99392, 0.88", "-7.79359, -87.0015, 5.03569, 1.25", "-7.63454, -87.4926, 4.99228, 1.55", "-7.32101, -88.1803, 4.92541, 1.55", "-6.77061, -89.1294, 4.8892, 1.55", "-6.35498, -89.7179, 4.92048, 1.55", "-5.50435, -90.7313, 5.08737, 1.03", "-4.77259, -91.451, 5.31033, 1.03", "-4.12797, -92.0149, 5.54207, 0.81", "-3.05224, -92.8473, 5.97679, 0.81", "-2.27755, -93.3905, 6.30213, 1.03", "-1.53295, -93.8618, 6.58648, 1.03", "-0.702455, -94.3488, 6.85344, 1.03", "-0.0438171, -94.7486, 7.00227, 0.88", "0.93871, -95.412, 7.15185, 0.88", "1.4149, -95.7706, 7.1839, 0.96", "1.95446, -96.2371, 7.19546, 0.96", "2.68023, -96.9513, 7.1886, 1.33", "3.05841, -97.3828, 7.167, 1.62", "3.37309, -97.7753, 7.14859, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.70309, -27.3418, -5.43251, 0.66", "7.03132, -30.4494, -2.82004, 0.66", "7.35134, -31.4819, -2.04327, 0.88", "7.91226, -33.5474, -0.682765, 1.03", "8.18996, -34.5345, -0.0968434, 1.03", "8.46293, -35.4037, 0.387295, 1.03", "8.84858, -36.4738, 0.959652, 0.37", "9.21814, -37.6365, 1.44491, 0.37", "9.74579, -38.7878, 1.84676, 0.59", "10.5023, -39.7569, 2.06323, 0.81", "11.1212, -40.2879, 2.18164, 0.81", "11.8358, -40.7383, 2.32563, 0.52", "12.512, -41.0917, 2.48431, 0.81", "13.521, -41.5949, 2.76292, 1.25", "13.9368, -41.8535, 2.92017, 1.69", "14.4532, -42.333, 3.20154, 1.69", "15.141, -43.5448, 3.82147, 0.96", "15.3684, -44.3562, 4.1728, 0.66", "15.4751, -44.9971, 4.42805, 0.81", "15.6601, -46.3441, 4.95526, 0.44", "15.8662, -47.4091, 5.37459, 0.44", "16.101, -48.2432, 5.69913, 0.44", "16.4586, -48.9779, 6.04048, 0.88", "17.2135, -49.9002, 6.64727, 1.25", "18.1563, -50.7322, 7.3366, 0.66", "19.009, -51.3488, 7.90559, 0.52", "19.5272, -51.7078, 8.23612, 0.52", "20.7958, -52.643, 9.06361, 0.74", "21.8227, -53.4919, 9.72754, 1.25", "22.2141, -53.8644, 9.95621, 1.25", "22.8185, -54.5187, 10.2521, 0.52", "23.5247, -55.3819, 10.4968, 0.44", "24.3993, -56.5412, 10.6649, 0.37", "24.9008, -57.2327, 10.6612, 0.37", "25.4153, -57.9297, 10.5943, 0.96", "25.8123, -58.4478, 10.5265, 1.33", "26.9946, -59.8504, 10.2927, 0.29", "27.4283, -60.2998, 10.1959, 0.29", "27.8649, -60.7016, 10.0828, 0.29", "28.0281, -60.8506, 10.0419, 0.44", "33.7841, -69.131, 12.5413, 0.44", "40.524, -76.9557, 13.6788, 0.44", "46.1415, -85.6783, 14.2307, 0.44", "52.319, -93.9889, 15.0774, 0.44", "58.2658, -102.344, 16.7422, 0.44", "63.7343, -111.117, 17.7749, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.70309, -27.3418, -5.43251, 1.03", "5.70865, -29.0908, -5.58192, 1.03", "5.89239, -30.8204, -5.76255, 1.03", "6.15996, -32.0648, -5.92129, 0.96", "6.50719, -33.2352, -6.09122, 0.96", "6.93192, -34.3619, -6.27434, 0.96", "7.28528, -35.1155, -6.38159, 1.18", "8.04664, -36.1113, -6.48622, 1.47", "8.84991, -36.8855, -6.52273, 2.21", "9.20205, -37.185, -6.50929, 2.21", "9.76839, -37.6716, -6.42182, 1.99", "10.7897, -38.6394, -6.13959, 1.33", "11.7428, -39.7331, -5.75202, 0.88", "12.3575, -40.6301, -5.39582, 0.74", "12.7672, -41.4957, -5.05258, 0.74", "13.0932, -42.5522, -4.66007, 1.33", "13.2147, -43.2032, -4.44568, 1.62", "13.2877, -43.9223, -4.24972, 1.92", "13.3348, -44.698, -4.09663, 1.69", "13.4669, -46.1752, -3.91536, 1.33", "13.6866, -47.6674, -3.84334, 1.03", "13.9093, -48.6893, -3.86714, 0.88", "14.1967, -49.6274, -3.94449, 1.03", "14.663, -50.8461, -4.10752, 1.03", "15.2106, -52.0613, -4.3392, 1.03", "15.7114, -53.0921, -4.60319, 1.33", "16.0653, -53.8704, -4.84835, 1.69", "16.426, -54.8226, -5.18, 1.47", "16.6102, -55.4961, -5.42997, 1.03", "16.7799, -56.532, -5.81895, 0.96", "16.8432, -57.4846, -6.19081, 0.96", "16.8358, -58.6581, -6.64439, 1.4", "16.7779, -59.9068, -7.10353, 1.4", "16.7226, -60.9973, -7.49415, 1.55", "16.7236, -61.5877, -7.6934, 1.77", "16.8067, -62.7148, -8.03985, 0.96", "16.9882, -63.7169, -8.30281, 0.66", "17.3006, -64.6451, -8.46891, 0.66", "17.7718, -65.5225, -8.56417, 0.96", "18.4045, -66.3742, -8.62066, 1.11", "18.7452, -66.7403, -8.64462, 1.4", "19.0562, -67.0269, -8.67007, 1.4", "19.7083, -67.6223, -8.72684, 1.4", "20.4758, -68.406, -8.81298, 0.66", "20.8084, -68.833, -8.87751, 0.52", "21.1762, -69.4506, -8.98466, 0.52", "21.6584, -70.4697, -9.1272, 0.81", "22.1068, -71.6136, -9.21082, 1.03", "22.3373, -72.3724, -9.23866, 1.03", "22.5739, -73.3992, -9.22268, 1.03", "22.7395, -74.4274, -9.23408, 1.03", "22.8625, -75.5003, -9.27104, 0.88", "22.9789, -76.8158, -9.40227, 1.03", "23.0833, -77.9911, -9.59746, 0.52", "23.1952, -79.1048, -9.87428, 0.52", "23.3484, -80.7332, -10.4436, 0.88", "23.4049, -81.4, -10.7417, 1.11", "23.4753, -82.4597, -11.289, 0.59", "23.5027, -82.9087, -11.5193, 0.59", "23.5816, -83.9125, -11.9023, 0.52", "23.6634, -84.975, -12.0884, 0.52", "23.7024, -85.8296, -11.9714, 1.11", "23.6868, -86.5489, -11.7269, 1.25", "23.6101, -87.6322, -11.1907, 1.18", "23.5166, -88.6883, -10.5882, 0.52", "23.4657, -89.4193, -10.1128, 0.52", "23.4388, -90.4199, -9.48833, 0.52", "23.4392, -90.7983, -9.29468, 0.81", "23.4574, -91.4956, -9.04745, 0.74", "23.4671, -92.4008, -8.87285, 0.74", "23.4415, -93.3041, -8.78715, 1.03", "23.33, -94.5066, -8.75441, 0.66", "23.1936, -95.3032, -8.75856, 0.52", "22.9314, -96.2288, -8.77643, 1.11", "22.6153, -97.0095, -8.8451, 1.11", "22.0776, -98.1221, -9.01238, 0.81", "21.4696, -99.2875, -9.26578, 0.66", "21.046, -100.105, -9.47111, 0.88", "20.5186, -101.22, -9.82013, 0.66", "19.8647, -102.694, -10.4345, 0.59", "19.4725, -103.66, -10.9291, 0.88", "19.1588, -104.506, -11.4182, 1.18", "18.9425, -105.118, -11.7817, 0.96", "18.6657, -105.927, -12.2673, 0.96", "18.1905, -107.398, -13.077, 0.52", "18.0361, -107.882, -13.3031, 0.81", "17.7494, -108.826, -13.6903, 0.66", "17.5701, -109.541, -13.885, 0.66", "17.415, -110.416, -13.985, 0.96", "17.3752, -111.473, -13.7927, 0.88", "17.4492, -112.387, -13.4452, 0.88", "17.5403, -113.179, -13.0942, 0.37", "17.7585, -114.625, -12.4176, 1.03", "17.8651, -115.387, -12.0785, 1.03", "18.021, -117.079, -11.356, 0.44", "18.0713, -118.316, -10.9564, 0.44", "18.0667, -119.043, -10.8852, 0.74", "18.0417, -119.805, -11.059, 0.74", "18.0021, -120.872, -11.5708, 0.44", "17.9914, -121.729, -12.0839, 0.66", "18.0097, -122.966, -12.9263, 0.44", "18.0791, -124.733, -14.1551, 0.88", "18.2057, -126.667, -15.4427, 0.52", "18.2915, -127.652, -16.0844, 0.74", "18.441, -128.97, -16.9192, 1.33", "18.5295, -129.718, -17.3572, 1.33", "18.6772, -131.256, -18.1109, 0.74", "18.7492, -132.232, -18.4681, 0.66", "18.7844, -133.616, -18.8371, 0.66", "18.7335, -134.58, -19.054, 0.81", "18.5805, -135.567, -19.2534, 0.59", "18.4169, -136.23, -19.3513, 1.18", "18.3119, -136.539, -19.3853, 1.18", "17.8927, -137.632, -19.4737, 0.44", "17.5471, -138.58, -19.4676, 0.44", "17.307, -139.375, -19.4248, 1.03", "17.2112, -139.938, -19.3673, 1.4", "17.2373, -141.117, -19.1152, 0.52", "17.34, -141.91, -18.92, 0.52", "17.6509, -142.944, -18.5987, 0.74", "17.8195, -143.314, -18.4407, 0.74", "18.2477, -144.045, -17.9943, 0.59", "18.8524, -144.859, -17.3323, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.70309, -27.3418, -5.43251, 0.88", "8.44883, -27.3131, -8.26332, 0.88", "9.2498, -27.2692, -8.97722, 0.88", "10.0661, -27.2158, -9.59878, 1.03", "10.6271, -27.176, -9.96692, 1.33", "11.1479, -27.1428, -10.2798, 1.62", "11.9041, -27.1071, -10.7075, 1.84", "12.5653, -27.0337, -10.9818, 1.47", "13.3334, -26.9586, -11.4204, 1.18", "13.8464, -26.8961, -12.008, 0.81", "14.3412, -26.8156, -12.846, 0.81", "14.6387, -26.7775, -13.4416, 1.11", "15.2439, -26.7587, -14.8128, 1.33", "15.8655, -26.7831, -16.3152, 1.77", "17.2704, -26.9361, -19.7821, 1.47", "17.7302, -27.0077, -20.8688, 1.11", "18.2157, -27.0881, -21.9135, 1.11", "18.9037, -27.1914, -23.1655, 0.81", "19.3518, -27.2546, -23.7963, 0.96", "20.1146, -27.3158, -24.5605, 0.88", "20.7646, -27.2552, -25.0706, 0.74", "21.2552, -27.0924, -25.4962, 0.59", "21.8665, -26.7298, -26.1466, 1.03", "22.315, -26.3876, -26.6583, 1.55", "22.7255, -26.0514, -27.1384, 1.69", "23.9426, -25.0364, -28.6237, 1.69", "24.3156, -24.7375, -29.0987, 1.69", "25.2542, -24.0497, -30.2774, 0.88", "25.7955, -23.7194, -30.9076, 0.81", "26.4628, -23.4126, -31.5744, 1.11", "27.3583, -23.1389, -32.3292, 1.18", "28.2003, -23.0273, -32.8852, 0.59", "28.5816, -23.0348, -33.1122, 0.59", "29.5291, -23.2231, -33.5705, 0.96", "30.2116, -23.4816, -33.8767, 1.18", "30.7992, -23.7976, -34.1005, 1.18", "31.4081, -24.1835, -34.2734, 1.4", "32.1146, -24.6659, -34.4375, 1.4", "32.7724, -25.0971, -34.5791, 1.11", "33.2395, -25.3578, -34.6674, 1.11", "33.8165, -25.586, -34.7695, 1.03", "34.5736, -25.7729, -34.8931, 1.03", "35.2351, -25.8509, -34.9919, 1.03", "35.9992, -25.8651, -35.0961, 0.96", "37.0522, -25.8002, -35.2395, 0.88", "38.2019, -25.6646, -35.3694, 0.88", "38.9662, -25.5336, -35.4406, 1.03", "39.565, -25.412, -35.5046, 1.11", "40.0536, -25.3099, -35.5771, 1.18", "40.4862, -25.2407, -35.6971, 1.18", "41.3247, -25.2035, -36.1191, 0.81", "41.9011, -25.2765, -36.5533, 0.74", "42.6358, -25.4623, -37.2222, 1.18", "43.188, -25.6412, -37.776, 1.4", "44.295, -26.0378, -38.9852, 1.18", "45.1365, -26.3358, -39.9658, 0.88", "45.7545, -26.5288, -40.7506, 0.74", "46.3809, -26.6757, -41.5389, 0.74", "46.9599, -26.7347, -42.2187, 1.11", "47.5832, -26.711, -42.9158, 1.4", "48.2085, -26.64, -43.5834, 1.4", "49.077, -26.5468, -44.5273, 1.11", "49.5825, -26.5205, -45.1073, 0.74", "50.2139, -26.5695, -45.8703, 0.66", "50.9623, -26.768, -46.8111, 0.81", "51.7268, -27.1146, -47.7179, 0.74", "52.3679, -27.4871, -48.4594, 1.25", "52.7278, -27.7122, -48.8488, 1.69", "53.2018, -27.9817, -49.3294, 1.69", "53.7072, -28.1815, -49.7571, 1.4", "54.5112, -28.3064, -50.2914, 0.88", "55.6991, -28.2206, -50.9477, 0.81", "56.2421, -28.125, -51.2158, 0.81", "57.0051, -27.98, -51.5444, 0.81", "57.9947, -27.7982, -51.8957, 0.81", "58.6182, -27.7091, -52.0712, 0.81", "59.5045, -27.654, -52.2697, 0.81", "60.1052, -27.7029, -52.3569, 0.96", "61.0225, -27.9405, -52.5125, 0.96", "61.6348, -28.2112, -52.6767, 1.18", "62.1693, -28.5257, -52.8959, 1.47", "62.7085, -28.8798, -53.1641, 1.47", "63.4893, -29.4031, -53.5908, 0.74", "64.3949, -29.9722, -54.1121, 0.74", "65.5013, -30.5867, -54.7847, 0.66", "66.5288, -31.0918, -55.4533, 0.74", "67.1699, -31.3508, -55.877, 0.81", "67.9068, -31.5643, -56.3523, 0.81", "68.2833, -31.624, -56.5811, 1.11", "69.1905, -31.6443, -57.1083, 1.25", "69.5862, -31.6031, -57.3698, 1.62", "70.0105, -31.5111, -57.7387, 1.62", "70.8214, -31.2895, -58.5708, 0.59", "71.3193, -31.1446, -59.1385, 0.59", "72.0643, -30.939, -60.0147, 0.88", "73.0639, -30.6922, -61.1979, 1.4", "74.0792, -30.4896, -62.3547, 0.74", "74.6827, -30.4033, -63.0096, 0.59", "75.2043, -30.3652, -63.5183, 0.81", "75.6827, -30.3709, -63.8758, 0.81", "76.1572, -30.4091, -64.0984, 0.96", "76.657, -30.4507, -64.2394, 0.96", "77.2582, -30.4852, -64.3719, 0.59", "78.1928, -30.4919, -64.5957, 0.59", "79.0952, -30.4459, -64.8152, 0.66", "79.6132, -30.3898, -64.99, 1.03", "80.4521, -30.2687, -65.3297, 1.03", "81.2509, -30.0879, -65.8955, 0.59", "81.6364, -29.9626, -66.2694, 0.59", "82.1306, -29.7721, -66.8429, 0.59", "82.8724, -29.5085, -67.7807, 1.11", "83.2046, -29.4198, -68.2044, 1.33", "85.0871, -29.0583, -70.4895, 1.03", "85.4312, -29.0036, -70.8709, 1.4", "86.1244, -28.904, -71.5543, 0.81", "86.8372, -28.8043, -72.1598, 0.74", "87.7617, -28.6747, -72.7923, 0.59", "88.3865, -28.5846, -73.1406, 0.59", "89.4111, -28.4401, -73.5388, 0.59", "90.6251, -28.2138, -74.0084, 0.88", "91.0563, -28.0867, -74.1707, 1.25", "91.4396, -27.9301, -74.3113, 1.55", "92.0059, -27.6549, -74.5294, 1.55", "92.463, -27.4238, -74.7197, 1.33", "93.0275, -27.1364, -74.9597, 0.66", "93.7497, -26.785, -75.2631, 0.66", "94.226, -26.5731, -75.5128, 0.66", "95.0814, -26.2023, -76.0813, 0.66", "95.438, -26.0949, -76.4999, 0.66", "95.6477, -26.0564, -76.8169, 0.96", "95.892, -26.0348, -77.2291, 0.96", "96.6229, -26.0443, -78.4949, 0.74", "97.0625, -26.0762, -79.2457, 1.62", "98.8361, -26.2505, -82.1262, 0.66", "99.1074, -26.268, -82.5439, 0.66", "99.5318, -26.2784, -83.1284, 1.11", "100.099, -26.277, -83.8105, 1.11", "100.693, -26.2433, -84.3834, 0.52", "101.297, -26.1615, -84.8308, 0.52", "102.08, -25.958, -85.2704, 1.25", "102.684, -25.7716, -85.6154, 0.88", "103.831, -25.3407, -86.2764, 0.44", "104.487, -25.0477, -86.6433, 0.44", "105.461, -24.5579, -87.1698, 0.52", "106.106, -24.2034, -87.5082, 0.88", "106.427, -24.0189, -87.6685, 1.11", "106.697, -23.8413, -87.8421, 1.11", "106.909, -23.6764, -88.0242, 1.11", "107.579, -23.0864, -88.8323, 0.52", "107.834, -22.8523, -89.2664, 0.52", "108.179, -22.5424, -89.9439, 0.81", "108.986, -21.8722, -91.5715, 0.81", "109.371, -21.5729, -92.3227, 1.11", "109.546, -21.4512, -92.6216, 1.92", "110.602, -20.8261, -94.0885, 0.59", "110.742, -20.7594, -94.2354, 0.59", "111.281, -20.5726, -94.5947, 0.88", "112.0, -20.3959, -94.8759, 0.44", "113.187, -20.1653, -95.2631, 0.44", "114.127, -20.0154, -95.5386, 0.74", "114.656, -19.9566, -95.7116, 0.74", "115.431, -19.9276, -96.1033, 0.52", "115.883, -19.9553, -96.4459, 0.52", "116.547, -20.0557, -97.1125, 0.59", "116.795, -20.0971, -97.4017, 0.59", "117.871, -20.2297, -98.739, 0.59", "118.58, -20.2624, -99.622, 0.81", "119.245, -20.2314, -100.453, 1.4", "119.601, -20.1625, -100.867, 1.55", "120.44, -19.8325, -101.687, 0.44", "120.805, -19.6115, -101.964, 0.88", "121.266, -19.2713, -102.191, 0.88", "121.77, -18.8966, -102.423, 0.59", "122.548, -18.3545, -102.792, 0.59", "123.066, -18.0547, -103.118, 0.81", "123.651, -17.7965, -103.563, 0.81", "124.416, -17.5218, -104.257, 0.52", "125.269, -17.2448, -105.171, 0.74", "125.536, -17.1531, -105.586, 0.74", "126.063, -16.8911, -106.861, 0.37", "126.255, -16.7292, -107.548, 0.37", "126.47, -16.4201, -108.656, 0.37", "126.6, -16.089, -109.633, 0.59", "126.929, -15.051, -112.31, 0.88", "127.093, -14.5501, -113.53, 0.52", "127.165, -14.3889, -113.961, 0.52", "127.357, -14.1181, -114.903, 0.52", "127.553, -13.9449, -115.599, 0.81", "127.856, -13.7587, -116.407, 0.59", "128.152, -13.6293, -117.029, 0.59", "129.169, -13.3053, -119.025, 1.18", "130.357, -13.0118, -121.508, 0.74", "130.636, -12.9604, -122.158, 0.74", "130.883, -12.9241, -122.809, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-67.4455, 147.777, -41.9355, 0.29", "-68.377, 147.631, -43.0145, 0.29", "-69.1454, 147.679, -43.8756, 0.29", "-69.5194, 147.876, -44.3626, 0.59", "-69.9385, 148.262, -44.9311, 0.59", "-70.2897, 148.648, -45.3847, 0.59", "-70.6836, 149.109, -45.8499, 0.44", "-71.004, 149.633, -46.1957, 0.59", "-71.538, 150.717, -46.8878, 0.37", "-71.7792, 151.248, -47.2525, 0.29", "-72.0247, 151.736, -47.6274, 0.59", "-72.2966, 152.23, -48.0349, 0.59", "-72.8931, 153.27, -48.9183, 0.29", "-73.4325, 154.275, -49.7575, 0.29", "-73.6647, 154.768, -50.1716, 0.29", "-74.0361, 155.755, -51.0604, 0.29", "-74.2111, 156.404, -51.7034, 0.29", "-74.3545, 157.108, -52.4392, 0.52", "-74.4659, 157.768, -53.1341, 0.66", "-74.6105, 158.814, -54.182, 0.44", "-74.6715, 159.687, -55.0824, 0.59", "-74.6441, 160.767, -56.322, 0.96", "-74.6348, 161.114, -56.8069, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-67.4455, 147.777, -41.9355, 0.66", "-66.193, 148.034, -41.5948, 0.66", "-65.1923, 148.239, -41.3226, 0.29", "-64.4658, 148.387, -41.1251, 0.44", "-63.5703, 148.571, -40.8815, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-85.894, 152.369, -38.519, 0.29", "-86.3065, 152.905, -39.0329, 0.29", "-86.8303, 153.526, -39.6933, 0.59", "-87.1725, 153.936, -40.1349, 0.44", "-87.6668, 154.572, -40.7793, 0.88", "-87.8855, 154.896, -41.0851, 1.03", "-88.373, 155.724, -41.8061, 0.52", "-88.5288, 156.027, -42.0625, 0.44", "-88.8365, 156.681, -42.5505, 0.66", "-89.0698, 157.215, -42.9162, 0.88", "-89.5209, 158.254, -43.5544, 0.59", "-89.826, 158.939, -43.9445, 0.74", "-90.1424, 159.631, -44.309, 0.74", "-90.592, 160.541, -44.7894, 0.37", "-90.8042, 160.922, -44.9949, 0.37", "-91.3166, 161.719, -45.4284, 0.66", "-91.6836, 162.188, -45.6848, 0.66", "-92.077, 162.599, -45.9182, 0.52", "-92.6576, 163.094, -46.2064, 0.88", "-93.061, 163.377, -46.3722, 0.88", "-93.6648, 163.72, -46.5656, 0.52", "-94.4015, 164.074, -46.7484, 0.52", "-95.3231, 164.495, -46.9338, 0.88", "-95.9222, 164.778, -47.0351, 0.88", "-96.6709, 165.139, -47.1394, 0.52", "-97.3127, 165.46, -47.2208, 0.44", "-98.0428, 165.833, -47.3147, 0.37", "-98.7596, 166.236, -47.4021, 0.37", "-99.4743, 166.683, -47.4932, 0.29", "-100.637, 167.479, -47.6572, 0.29", "-101.179, 167.864, -47.7393, 0.29", "-101.803, 168.295, -47.836, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-85.894, 152.369, -38.519, 0.29", "-86.4299, 152.027, -37.7092, 0.29", "-86.7215, 151.841, -37.2685, 0.29", "-86.9282, 151.709, -36.9563, 0.22", "-87.1918, 151.541, -36.5579, 0.22", "-87.4851, 151.354, -36.1146, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "136.931, 37.5079, 59.9108, 0.29", "138.846, 40.4193, 67.4273, 0.29", "141.44, 42.513, 75.0121, 0.29", "144.913, 44.4934, 82.2691, 0.29", "147.95, 44.9596, 89.9632, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "136.931, 37.5079, 59.9108, 0.29", "149.291, 35.7389, 61.764, 0.29", "161.422, 35.7435, 65.2506, 0.29", "172.694, 36.9539, 70.8005, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "85.8224, 43.0781, 4.66987, 0.37", "85.9849, 43.6119, 4.94055, 0.37", "86.196, 44.3968, 5.37959, 0.37", "86.349, 44.9655, 5.69764, 0.22", "86.6706, 46.1611, 6.36632, 0.22", "86.9157, 47.0723, 6.87597, 0.66", "87.2109, 48.1697, 7.48974, 1.11", "87.274, 48.439, 7.66119, 1.11", "89.3538, 55.4858, 10.5027, 1.11", "91.8538, 62.4648, 13.1673, 1.11", "94.8473, 69.0103, 16.3693, 1.11", "97.8747, 75.1073, 20.334, 1.11", "101.676, 81.5046, 22.9195, 1.11", "105.642, 87.723, 25.6872, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "85.8224, 43.0781, 4.66987, 0.44", "86.8442, 43.3253, 4.78104, 0.44", "87.9391, 43.5359, 4.90684, 0.44", "89.113, 43.7276, 5.12173, 0.74", "89.8269, 43.8316, 5.27983, 1.03", "90.4954, 43.9218, 5.44877, 1.03", "91.0242, 43.9892, 5.56472, 1.03", "91.9197, 44.1019, 5.67511, 0.66", "93.156, 44.3032, 5.69864, 0.66", "93.5929, 44.4146, 5.64184, 0.81", "94.2566, 44.6627, 5.47929, 0.44", "95.6053, 45.3218, 5.03368, 0.44", "97.206, 46.2616, 4.42475, 0.37", "97.7672, 46.6301, 4.17634, 0.37", "98.634, 47.2247, 3.76283, 0.37", "99.6745, 47.9651, 3.29647, 0.66", "100.281, 48.4136, 3.0596, 0.66", "101.131, 49.0433, 2.84448, 0.37", "101.64, 49.3957, 2.77954, 0.37", "102.287, 49.8299, 2.71163, 0.59", "102.862, 50.2221, 2.63365, 0.59", "103.421, 50.6054, 2.45818, 0.44", "104.37, 51.1823, 2.09077, 0.66", "104.543, 51.2733, 2.0196, 0.96", "105.207, 51.5487, 1.76933, 0.96", "106.179, 51.8414, 1.42259, 1.11", "108.419, 52.3465, 0.726286, 0.44", "109.674, 52.574, 0.396924, 0.44", "110.651, 52.7318, 0.189498, 0.37", "111.854, 52.9385, -0.0567056, 0.37", "112.585, 53.0817, -0.186622, 0.29", "113.595, 53.3561, -0.340734, 0.22", "114.278, 53.6885, -0.475063, 0.59", "114.636, 53.9973, -0.615317, 0.59", "115.669, 55.0431, -1.23555, 0.29", "116.107, 55.4937, -1.53081, 0.37", "116.627, 55.9914, -1.88241, 0.52", "117.199, 56.4208, -2.25493, 0.74", "118.009, 56.8901, -2.87868, 0.96", "119.459, 57.6062, -4.20657, 0.29", "120.017, 57.8809, -4.8153, 0.52", "120.266, 58.0169, -5.14048, 0.81", "121.078, 58.5535, -6.38045, 1.11", "122.54, 59.7021, -8.94069, 0.81", "123.171, 60.3116, -10.1824, 0.96", "123.83, 61.0987, -11.5993, 0.66", "124.321, 61.744, -12.6577, 0.52", "124.816, 62.4132, -13.597, 0.52", "125.033, 62.7, -13.8903, 0.74", "125.612, 63.2478, -14.2272, 0.74", "126.0, 63.5131, -14.3499, 0.96", "126.611, 63.8132, -14.4894, 0.96", "127.611, 64.2395, -14.7962, 0.74", "128.598, 64.6777, -15.1911, 0.44", "129.68, 65.2663, -15.822, 0.44", "130.089, 65.5454, -16.1363, 0.96", "130.82, 66.1877, -16.9098, 1.18", "131.825, 67.2947, -18.2859, 0.66", "132.184, 67.7741, -18.9071, 0.66", "132.82, 68.752, -20.2391, 0.59", "133.054, 69.1444, -20.7387, 0.52", "133.715, 70.231, -22.0143, 0.52", "133.9, 70.5572, -22.3394, 0.96", "134.295, 71.2452, -22.9264, 0.96", "135.043, 72.5644, -23.8957, 0.59", "135.685, 73.7585, -24.6025, 0.59", "136.091, 74.5449, -25.011, 0.88", "136.677, 75.7087, -25.497, 0.74", "137.203, 76.6452, -25.85, 0.74", "137.831, 77.5914, -26.1386, 0.88", "138.237, 78.05, -26.27, 0.88", "139.015, 78.6837, -26.5351, 0.37", "139.844, 79.2196, -26.8332, 0.37", "141.158, 79.9006, -27.3162, 0.37", "142.082, 80.3321, -27.6993, 0.37", "143.162, 80.8075, -28.2002, 0.37", "143.815, 81.1134, -28.5108, 0.59", "144.623, 81.5246, -28.8897, 0.74", "145.166, 81.8347, -29.154, 0.74", "146.189, 82.5135, -29.6979, 0.44", "146.734, 82.88, -29.9761, 0.37", "148.332, 83.8286, -30.6077, 0.37", "149.092, 84.1972, -30.8419, 0.74", "149.496, 84.351, -30.9394, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "103.707, 78.3877, 23.5014, 0.29", "109.882, 87.4841, 26.9613, 0.29", "117.013, 96.4534, 28.2016, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "103.707, 78.3877, 23.5014, 0.29", "108.389, 86.1196, 25.4782, 0.29", "112.859, 93.6295, 28.516, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.3237, -139.08, 13.4887, 0.29", "-17.7521, -150.658, 11.4928, 0.29", "-15.8648, -162.783, 11.0334, 0.29", "-14.3761, -174.758, 8.75494, 0.29", "-14.5104, -187.005, 7.86939, 0.29", "-15.712, -199.185, 6.87867, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-21.3237, -139.08, 13.4887, 0.29", "-23.1326, -147.471, 8.97196, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.37309, -97.7753, 7.14859, 0.37", "1.81307, -99.5321, 5.98895, 0.37", "0.883627, -100.462, 5.43995, 0.37", "-0.0271774, -101.271, 4.97723, 0.44", "-1.11643, -102.15, 4.50201, 0.74", "-2.19798, -102.96, 4.09878, 0.59", "-3.31998, -103.717, 3.75564, 0.59", "-3.98698, -104.03, 3.66543, 0.74", "-5.09134, -104.381, 3.61579, 0.88", "-5.78257, -104.525, 3.64564, 1.18", "-6.4778, -104.609, 3.72007, 0.59", "-7.53479, -104.677, 3.86185, 0.44", "-8.58467, -104.727, 3.99749, 0.52", "-9.07187, -104.768, 4.0468, 0.74", "-9.89654, -104.945, 4.1307, 0.74", "-10.4878, -105.184, 4.16056, 0.59", "-11.0845, -105.565, 4.16678, 0.59", "-11.8502, -106.264, 4.1541, 0.59", "-12.639, -107.218, 4.14376, 0.44", "-13.5097, -108.481, 4.15475, 0.37", "-13.994, -109.327, 4.17721, 1.03", "-14.3077, -109.966, 4.19296, 1.03", "-14.5498, -110.551, 4.20653, 0.96", "-14.9361, -111.762, 4.2399, 0.66", "-15.212, -112.85, 4.26555, 0.66", "-15.469, -114.092, 4.26371, 0.88", "-15.5959, -114.855, 4.25213, 1.03", "-15.7333, -115.936, 4.20715, 0.88", "-15.8671, -117.326, 4.10979, 0.52", "-15.9451, -118.411, 4.00232, 0.52", "-15.9971, -119.236, 3.89644, 0.96", "-16.0377, -119.774, 3.81746, 0.96", "-16.1982, -121.098, 3.60373, 0.59", "-16.3947, -122.152, 3.42629, 0.66", "-16.6149, -122.942, 3.29054, 0.81", "-16.9539, -123.905, 3.11247, 0.81", "-17.1863, -124.442, 3.00543, 0.81", "-17.6546, -125.424, 2.73933, 0.44", "-17.9078, -125.937, 2.56476, 0.81", "-18.2448, -126.677, 2.259, 0.81", "-18.6437, -127.733, 1.77194, 0.52", "-18.8691, -128.588, 1.34242, 0.52", "-19.1119, -130.146, 0.518234, 0.74", "-19.1692, -130.906, 0.113452, 1.11", "-19.2071, -131.607, -0.233929, 1.11", "-19.2577, -132.498, -0.620805, 0.96", "-19.3551, -133.499, -0.984831, 0.59", "-19.5608, -134.736, -1.3458, 0.44", "-19.9552, -136.108, -1.62527, 0.44", "-20.3609, -137.14, -1.78732, 0.44", "-20.8028, -138.106, -1.89294, 0.74", "-21.1338, -138.816, -1.9538, 0.74", "-21.4494, -139.503, -1.99099, 0.74", "-21.9912, -140.729, -2.02214, 0.66", "-22.373, -141.643, -2.02495, 0.44", "-22.852, -142.824, -2.0204, 0.44", "-23.5902, -144.471, -1.95138, 0.44", "-24.0028, -145.236, -1.86931, 0.88", "-24.4795, -145.95, -1.73019, 1.18", "-24.8464, -146.412, -1.58999, 1.18", "-25.306, -146.913, -1.39401, 1.03", "-26.6213, -148.141, -0.819786, 0.66", "-27.8347, -149.125, -0.270876, 0.66", "-28.8655, -149.932, 0.199617, 1.25", "-29.4119, -150.365, 0.451986, 1.55", "-30.0717, -150.9, 0.756765, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "3.37309, -97.7753, 7.14859, 0.74", "2.56596, -98.822, 6.81718, 0.74", "1.61863, -100.023, 6.43028, 0.74", "1.13346, -100.739, 6.24518, 0.74", "0.66942, -101.54, 6.06643, 0.81", "-0.18927, -103.373, 5.72823, 0.52", "-0.721363, -104.831, 5.49603, 0.74", "-0.911306, -105.605, 5.39549, 0.74", "-0.825739, -107.313, 5.24758, 0.74", "-0.510704, -108.157, 5.16931, 0.81", "0.161861, -109.173, 5.07108, 0.66", "0.59201, -109.673, 5.0242, 1.11", "1.0296, -110.16, 4.95387, 1.11", "1.54989, -110.782, 4.80491, 0.81", "2.13442, -111.629, 4.50745, 0.81", "2.6293, -112.457, 4.19671, 0.96", "3.05197, -113.229, 3.90273, 0.88", "3.55758, -114.178, 3.55922, 0.96", "3.89845, -114.886, 3.30985, 1.11", "4.24705, -115.77, 2.99932, 1.11", "4.49986, -116.599, 2.71127, 0.74", "4.77856, -117.896, 2.29308, 0.66", "4.8813, -118.574, 2.09151, 0.66", "5.02744, -120.145, 1.69937, 0.66", "5.06331, -121.795, 1.37992, 0.59", "5.00919, -122.751, 1.23819, 0.96", "4.85767, -123.943, 1.10759, 1.18", "4.6941, -124.831, 1.05467, 1.03", "4.47823, -125.875, 1.02984, 0.88", "4.22705, -127.228, 1.03935, 0.74", "4.10733, -128.401, 1.11057, 0.59", "4.06629, -129.392, 1.21478, 0.59", "4.06907, -130.212, 1.35906, 1.4", "4.08016, -130.816, 1.51927, 1.4", "4.17471, -132.356, 2.04973, 0.88", "4.43051, -134.159, 2.84339, 0.66", "4.56761, -134.913, 3.22735, 0.88", "4.75216, -135.869, 3.74774, 0.88", "5.02061, -137.359, 4.57928, 0.59", "5.15081, -138.311, 5.11814, 0.81", "5.27398, -139.887, 5.99982, 0.81", "5.27922, -140.702, 6.39305, 1.11", "5.2679, -141.373, 6.67462, 1.11", "5.22668, -142.34, 6.98468, 0.52", "5.18732, -143.256, 7.20163, 0.74", "5.13904, -144.075, 7.34778, 1.03", "5.11026, -144.76, 7.40889, 1.25", "5.15775, -145.434, 7.4693, 1.33", "5.40108, -146.534, 7.63752, 1.03", "5.80559, -147.558, 7.82523, 0.74", "6.26676, -148.385, 7.98072, 0.44", "6.79995, -149.132, 8.1159, 0.29", "7.7236, -150.153, 8.28673, 0.29", "8.98251, -151.266, 8.45732, 0.29", "9.70492, -151.76, 8.513, 0.29", "10.3583, -152.103, 8.50205, 0.88", "10.8922, -152.345, 8.46741, 0.88", "11.7616, -152.716, 8.37744, 0.52", "12.1392, -152.884, 8.29588, 0.52", "12.8162, -153.22, 8.13467, 0.52", "13.365, -153.593, 8.06227, 0.52", "14.0811, -154.297, 7.96759, 0.52", "14.4116, -154.75, 7.90819, 0.88", "14.7432, -155.315, 7.80864, 0.88", "15.1132, -156.008, 7.61805, 1.11", "15.4863, -156.654, 7.38893, 0.66", "16.1877, -157.681, 6.88625, 0.66", "16.5302, -158.047, 6.63957, 0.66", "17.1546, -158.565, 6.22896, 0.66", "17.675, -158.931, 5.91646, 0.52", "18.554, -159.551, 5.37228, 0.66", "18.853, -159.754, 5.22618, 0.66", "19.5715, -160.206, 5.01874, 0.44", "20.2161, -160.599, 4.93306, 0.44", "21.1773, -161.192, 4.93141, 0.52", "22.4017, -161.953, 5.07318, 0.66", "23.4892, -162.649, 5.26533, 0.44", "24.6845, -163.409, 5.52428, 0.81", "25.7875, -164.115, 5.74457, 0.52", "26.4961, -164.58, 5.85518, 0.74", "27.3253, -165.148, 5.92744, 0.29", "27.733, -165.462, 5.90303, 0.52", "28.259, -165.959, 5.71256, 0.59", "29.2096, -166.959, 5.25005, 0.37", "29.8583, -167.692, 4.84614, 0.66", "30.216, -168.107, 4.59509, 1.03", "30.7752, -168.768, 4.16809, 1.03", "31.4116, -169.499, 3.72992, 0.74", "32.501, -170.667, 3.13218, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "18.8524, -144.859, -17.3323, 0.44", "18.759, -146.297, -17.213, 0.44", "18.6841, -147.301, -17.13, 0.81", "18.6144, -148.072, -17.0686, 1.18", "18.5116, -149.104, -16.9921, 0.74", "18.4025, -150.176, -16.9187, 0.44", "18.3045, -151.12, -16.8584, 0.96", "18.1995, -152.097, -16.8024, 0.96", "18.0944, -153.026, -16.7562, 1.18", "17.8853, -154.411, -16.6972, 0.74", "17.6167, -155.665, -16.6892, 0.66", "17.3265, -156.684, -16.7243, 0.66", "16.8981, -157.959, -16.8399, 0.66", "16.6634, -158.588, -16.9308, 1.03", "16.3122, -159.46, -17.0998, 0.81", "15.7787, -160.846, -17.4819, 0.52", "15.5286, -161.68, -17.7185, 0.44", "15.3407, -162.733, -17.9708, 0.37", "15.3028, -163.336, -18.0715, 0.66", "15.2949, -164.0, -18.1238, 0.66", "15.3467, -165.739, -18.1909, 0.44", "15.3946, -167.487, -18.1766, 0.44", "15.3723, -168.882, -18.1298, 0.66", "15.2691, -170.111, -18.0675, 0.81", "15.0408, -171.446, -18.0235, 0.96", "14.6179, -172.85, -18.0016, 1.11", "14.1507, -173.938, -18.005, 0.81", "13.6777, -174.895, -18.0734, 0.88", "13.3093, -175.64, -18.1653, 0.66", "12.7942, -176.69, -18.3309, 0.29", "12.1525, -178.034, -18.5594, 0.29", "11.7783, -178.814, -18.6773, 0.52", "11.1939, -180.022, -18.8729, 0.52", "10.7056, -181.015, -19.0305, 0.37", "10.2393, -181.908, -19.1664, 0.29", "9.77549, -182.687, -19.2654, 0.29", "9.5683, -182.969, -19.3088, 0.88", "9.07154, -183.443, -19.4103, 1.11", "8.44248, -183.858, -19.5244, 0.44", "7.6352, -184.261, -19.6594, 0.37", "6.85035, -184.585, -19.7995, 0.59", "6.14417, -184.833, -19.9378, 0.74", "5.21236, -185.136, -20.1317, 0.44", "4.40296, -185.402, -20.296, 0.37", "3.86704, -185.599, -20.398, 0.88", "3.25386, -185.873, -20.4974, 1.11", "2.81604, -186.108, -20.5483, 1.11", "2.36799, -186.36, -20.5752, 1.11", "1.26171, -187.013, -20.6053, 0.29", "0.533471, -187.46, -20.6216, 0.59", "0.0510335, -187.765, -20.6284, 0.59", "-1.12855, -188.574, -20.6258, 0.29", "-1.84342, -189.122, -20.607, 0.29", "-2.39912, -189.603, -20.5833, 0.52", "-3.04406, -190.222, -20.551, 0.52", "-3.38379, -190.566, -20.5322, 0.81", "-3.95333, -191.243, -20.4983, 0.81", "-4.50668, -192.101, -20.4607, 0.29", "-5.13328, -193.257, -20.4052, 0.29", "-5.47435, -193.932, -20.3632, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.8524, -144.859, -17.3323, 0.22", "19.8836, -145.353, -17.6403, 0.22", "20.971, -145.875, -17.965, 0.22", "22.2838, -146.505, -18.3571, 0.22", "23.1875, -146.938, -18.627, 0.22", "24.1463, -147.398, -18.9134, 0.22", "25.1328, -147.871, -19.208, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "130.883, -12.9241, -122.809, 0.74", "134.07, -14.1432, -123.977, 0.74", "134.988, -14.489, -124.146, 0.44", "135.665, -14.7061, -124.226, 0.74", "136.715, -14.9664, -124.324, 0.52", "138.103, -15.1957, -124.437, 0.52", "139.559, -15.3538, -124.598, 0.52", "140.636, -15.3477, -124.621, 0.52", "141.72, -15.2767, -124.692, 0.52", "143.019, -15.0992, -124.931, 0.52", "144.032, -14.8567, -125.257, 0.74", "145.021, -14.5216, -125.717, 1.03", "145.37, -14.3818, -125.92, 1.4", "145.709, -14.2416, -126.141, 1.4", "147.071, -13.7235, -127.075, 0.44", "147.604, -13.5112, -127.376, 0.74", "148.428, -13.1599, -127.696, 0.74", "149.012, -12.8791, -127.817, 0.96", "149.583, -12.5792, -127.83, 0.96", "150.365, -12.1715, -127.728, 0.96", "152.321, -11.2102, -127.15, 0.66", "153.168, -10.8399, -126.804, 0.81", "153.693, -10.6361, -126.529, 0.81", "154.999, -10.173, -125.77, 0.52", "155.988, -9.85257, -125.185, 0.52", "157.082, -9.54646, -124.581, 0.52", "158.143, -9.30884, -124.114, 0.52", "159.488, -9.02467, -123.616, 0.44", "160.206, -8.88449, -123.443, 0.96", "160.95, -8.7827, -123.445, 1.11", "161.972, -8.71207, -123.682, 0.44", "162.869, -8.77631, -124.082, 0.37", "163.518, -8.94021, -124.479, 0.37", "164.566, -9.3738, -125.268, 0.66", "165.73, -9.9909, -126.268, 0.74", "166.219, -10.2847, -126.735, 0.81", "166.914, -10.7398, -127.482, 0.81", "167.791, -11.3227, -128.505, 0.66", "168.58, -11.7898, -129.432, 0.66", "169.325, -12.1649, -130.265, 0.29", "169.847, -12.3912, -130.808, 0.59", "170.405, -12.5987, -131.365, 0.74", "170.929, -12.7785, -131.893, 0.44", "171.616, -12.9835, -132.568, 0.37", "172.333, -13.1983, -133.239, 0.37", "173.049, -13.4154, -133.857, 0.59", "173.629, -13.6036, -134.321, 0.59", "175.141, -14.272, -135.609, 0.29", "176.132, -14.8382, -136.485, 0.29", "176.65, -15.2003, -136.962, 0.29", "177.107, -15.5416, -137.371, 0.74", "177.567, -15.9091, -137.78, 0.74", "179.471, -17.6113, -139.364, 0.37", "180.072, -18.2261, -139.808, 0.52", "180.549, -18.8051, -140.175, 0.81", "181.054, -19.4817, -140.61, 0.37", "181.493, -20.1061, -141.053, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "130.883, -12.9241, -122.809, 0.88", "131.248, -12.7773, -123.957, 0.88", "131.411, -12.804, -124.452, 1.25", "131.559, -12.8883, -124.948, 1.25", "131.743, -13.0225, -125.65, 0.59", "132.234, -13.3815, -127.526, 0.59", "132.727, -13.7421, -129.41, 0.96", "132.99, -14.0015, -130.415, 1.11", "133.438, -14.5649, -132.244, 1.25", "133.699, -14.9801, -133.399, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-101.803, 168.295, -47.836, 0.22", "-101.536, 167.133, -46.8888, 0.22", "-101.37, 166.409, -46.2987, 0.22", "-100.998, 164.788, -44.9773, 0.22", "-100.772, 163.799, -44.1712, 0.22", "-100.577, 162.95, -43.4783, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-101.803, 168.295, -47.836, 0.22", "-102.376, 168.775, -47.5686, 0.22", "-102.879, 169.216, -47.3392, 0.22", "-103.358, 169.636, -47.121, 0.22", "-103.816, 170.037, -46.9122, 0.22", "-104.505, 170.641, -46.5979, 0.22", "-104.857, 170.949, -46.4375, 0.37", "-105.199, 171.293, -46.2649, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "147.95, 44.9596, 89.9632, 0.29", "150.783, 45.407, 96.0767, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "147.95, 44.9596, 89.9632, 0.29", "150.643, 48.0029, 98.0408, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "172.694, 36.9539, 70.8005, 0.29", "173.238, 44.4583, 61.9578, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "172.694, 36.9539, 70.8005, 0.29", "162.793, 31.4268, 73.6796, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "149.496, 84.351, -30.9394, 0.37", "148.845, 84.6861, -31.437, 0.37", "148.021, 85.1052, -32.3991, 0.66", "147.57, 85.3345, -33.26, 0.29", "147.214, 85.523, -34.072, 0.29", "146.787, 85.7701, -35.0957, 0.29", "145.873, 86.3554, -37.3077, 0.29", "145.462, 86.5917, -38.3524, 0.81", "144.295, 87.2176, -41.5503, 0.44", "143.921, 87.4185, -42.6909, 0.96", "143.642, 87.6075, -43.6779, 1.18", "143.33, 87.8833, -44.9759, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "149.496, 84.351, -30.9394, 0.37", "150.594, 84.8309, -30.6817, 0.37", "151.859, 85.5667, -30.4974, 0.29", "152.321, 85.8765, -30.4518, 0.66", "152.766, 86.2145, -30.4163, 0.66", "153.317, 86.6883, -30.4155, 0.37", "154.088, 87.3709, -30.4454, 0.37", "154.916, 88.187, -30.5411, 0.81", "155.243, 88.5623, -30.5765, 1.11", "155.685, 89.1179, -30.6127, 1.33", "156.535, 90.3385, -30.675, 0.44", "156.995, 91.1351, -30.6883, 0.52", "157.54, 92.2897, -30.684, 1.03", "158.063, 93.6613, -30.6754, 0.52", "158.28, 94.362, -30.6575, 0.66", "158.465, 95.1473, -30.6269, 0.66", "158.648, 96.4329, -30.5675, 0.44", "158.695, 97.1232, -30.5912, 0.29", "158.744, 97.9564, -30.6861, 0.44", "158.874, 98.8874, -30.8624, 0.66", "159.05, 99.6587, -31.0278, 0.37", "159.308, 100.536, -31.2513, 0.37", "159.754, 101.935, -31.6793, 0.29", "160.028, 102.834, -31.9643, 0.29", "160.402, 104.326, -32.4855, 0.29", "160.57, 105.35, -32.8387, 0.29", "160.615, 106.15, -33.1022, 1.55", "160.567, 106.816, -33.309, 1.18", "160.367, 107.539, -33.4876, 0.96", "159.777, 108.702, -33.7548, 0.52", "158.788, 110.027, -34.0509, 0.29", "158.027, 110.822, -34.2436, 0.29", "157.631, 111.187, -34.3415, 0.29", "156.548, 112.16, -34.6438, 0.22", "156.226, 112.453, -34.7553, 0.66", "155.844, 112.817, -34.9164, 0.66", "155.234, 113.485, -35.2803, 0.37", "154.79, 114.173, -35.6468, 0.29", "154.5, 114.867, -36.0393, 0.22", "154.318, 115.515, -36.3665, 0.22", "154.099, 116.567, -36.787, 0.22", "154.036, 117.063, -36.9438, 0.29", "153.988, 117.839, -37.127, 0.29", "153.955, 119.029, -37.3499, 0.29", "153.993, 120.594, -37.6081, 0.29", "154.036, 121.579, -37.7474, 0.29", "154.107, 122.385, -37.8395, 0.29", "154.211, 123.451, -37.9371, 0.29", "154.412, 125.086, -38.0427, 0.29", "154.63, 126.357, -38.1057, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-15.712, -199.185, 6.87867, 0.29", "-16.0379, -207.275, 5.31202, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-15.712, -199.185, 6.87867, 0.29", "-8.20663, -196.744, 10.9838, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-30.0717, -150.9, 0.756765, 0.37", "-30.6052, -152.284, 0.502809, 0.37", "-30.8601, -152.945, 0.381482, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-30.0717, -150.9, 0.756765, 0.29", "-34.3471, -150.727, -1.2934, 0.29", "-35.6024, -150.676, -1.85812, 0.22", "-37.2732, -150.717, -2.53316, 0.22", "-38.2644, -150.816, -2.88113, 1.47", "-38.9993, -150.889, -3.13914, 1.69", "-39.7015, -150.959, -3.38564, 1.69", "-41.6493, -151.105, -3.64794, 0.96", "-43.0425, -151.345, -3.93463, 0.29", "-44.2257, -151.735, -4.26062, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "32.501, -170.667, 3.13218, 0.29", "32.0447, -171.474, 1.98466, 0.29", "31.6468, -172.178, 0.983885, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "32.501, -170.667, 3.13218, 0.29", "31.8536, -168.799, 2.0863, 0.29", "31.1081, -167.696, 0.969771, 0.29", "30.4466, -167.268, 0.0489356, 0.29", "29.8047, -166.852, -0.844546, 0.52", "27.9892, -165.677, -3.37169, 0.44", "27.38, -165.283, -4.21966, 0.29", "26.3489, -165.601, -5.54686, 0.29", "25.976, -165.842, -6.01231, 0.29", "19.8727, -161.514, -13.0402, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.47435, -193.932, -20.3632, 0.22", "-5.5694, -194.917, -20.2223, 0.22", "-5.66982, -196.047, -19.9946, 0.22", "-5.76388, -197.515, -19.6841, 0.22", "-5.82565, -198.72, -19.426, 0.22", "-5.87508, -200.273, -19.0995, 0.22", "-5.9143, -201.504, -18.8405, 0.22", "-5.95117, -202.942, -18.5524, 0.22", "-5.94117, -203.854, -18.3685, 0.37", "-5.92132, -204.168, -18.2962, 0.37", "-5.8403, -205.045, -18.0665, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.47435, -193.932, -20.3632, 1.55", "-6.16513, -194.335, -20.325, 1.55", "-6.56979, -194.623, -20.3151, 1.55", "-7.37025, -195.219, -20.2941, 0.29", "-8.53581, -196.088, -20.2344, 0.44", "-8.83562, -196.285, -20.241, 0.44", "-10.1118, -196.975, -20.3361, 0.29", "-10.921, -197.351, -20.4257, 0.29", "-11.7272, -197.676, -20.5114, 0.29", "-12.6209, -197.971, -20.5849, 0.29", "-14.3841, -198.389, -20.6358, 0.29", "-15.9403, -198.599, -20.628, 0.29", "-16.9213, -198.617, -20.5915, 0.22", "-17.903, -198.568, -20.5247, 0.22", "-18.6661, -198.504, -20.4502, 0.22", "-19.4955, -198.414, -20.3317, 0.22", "-20.5049, -198.304, -20.0708, 0.22", "-21.2554, -198.179, -19.8472, 0.22", "-21.782, -198.045, -19.7085, 0.52", "-22.2531, -197.886, -19.6042, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "133.699, -14.9801, -133.399, 0.81", "136.101, -14.8764, -135.263, 0.81", "137.95, -14.8986, -136.599, 0.88", "139.413, -15.0016, -137.682, 0.37", "139.837, -15.0305, -137.992, 0.37", "140.764, -15.0934, -138.668, 0.66", "141.367, -15.1344, -139.107, 0.74", "141.568, -15.1508, -139.294, 0.74", "142.74, -15.3489, -140.063, 0.37", "143.324, -15.5019, -140.444, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "133.699, -14.9801, -133.399, 0.44", "134.772, -14.0263, -135.54, 0.44", "135.529, -13.3527, -137.052, 0.44", "135.948, -12.9805, -137.888, 0.44", "136.771, -12.2492, -139.529, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "143.33, 87.8833, -44.9759, 0.96", "142.268, 88.8666, -47.9407, 0.96", "140.995, 89.8013, -50.9019, 0.59", "140.683, 90.0304, -51.6076, 0.59", "140.404, 90.2624, -52.2777, 0.37", "139.809, 90.8532, -53.8235, 0.29", "139.441, 91.2614, -54.8142, 0.29", "139.194, 91.5916, -55.4295, 0.66", "138.805, 92.3765, -56.5224, 0.22", "138.62, 92.852, -57.1958, 0.22", "138.394, 93.4404, -58.0679, 0.88", "138.245, 93.798, -58.5965, 0.88", "137.749, 94.7502, -60.0349, 0.37", "137.469, 95.1348, -60.725, 0.96", "137.16, 95.4559, -61.4326, 1.11", "136.577, 96.0021, -62.8121, 0.44", "136.249, 96.3246, -63.6651, 0.37", "136.014, 96.5857, -64.3424, 0.52", "135.075, 97.7429, -67.2276, 0.37", "134.717, 98.3331, -68.5939, 0.96", "134.484, 98.8423, -69.6406, 0.96", "134.274, 99.3803, -70.6998, 0.52", "134.13, 99.7564, -71.5046, 1.33", "133.951, 100.18, -72.4897, 1.33", "133.102, 101.872, -76.5339, 0.52", "132.999, 102.058, -76.9902, 0.52", "132.76, 102.441, -77.9715, 0.52", "131.669, 103.963, -82.1443, 0.44", "131.116, 104.646, -84.035, 0.59", "130.754, 105.079, -85.1411, 0.59", "130.348, 105.541, -86.1513, 0.88", "130.196, 105.724, -86.4828, 1.25", "129.881, 106.124, -87.0059, 1.47", "129.066, 107.183, -87.8571, 0.29", "128.304, 108.219, -88.5373, 0.29", "127.991, 108.644, -88.7938, 0.29", "127.444, 109.39, -89.1965, 0.29", "127.101, 109.889, -89.4498, 0.29", "126.288, 111.132, -90.0374, 0.29", "125.966, 111.615, -90.2708, 0.29", "125.514, 112.185, -90.5871, 0.96", "125.218, 112.579, -90.8231, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "143.33, 87.8833, -44.9759, 0.15", "143.999, 89.0716, -44.5287, 0.15", "144.366, 89.7226, -44.2837, 0.15", "144.661, 90.2458, -44.0868, 0.81", "144.917, 90.7, -43.9158, 1.03", "145.254, 91.2985, -43.6906, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-30.8601, -152.945, 0.381482, 0.52", "-31.1441, -153.615, 0.062437, 0.52", "-31.5241, -154.697, -0.351564, 0.52", "-31.9853, -156.071, -0.723566, 0.37", "-32.1969, -156.704, -0.882396, 0.52", "-32.4822, -157.555, -1.08208, 0.44", "-32.8139, -158.5, -1.30406, 0.37", "-33.1561, -159.459, -1.48458, 0.29", "-33.5126, -160.471, -1.608, 0.29", "-33.9397, -161.786, -1.73767, 1.03", "-34.0643, -162.155, -1.7755, 1.18", "-34.4604, -163.208, -1.89647, 0.88", "-34.7489, -163.962, -1.99954, 0.44", "-35.0801, -164.943, -2.17067, 0.37", "-35.2119, -165.515, -2.30551, 0.59", "-35.2707, -166.05, -2.44978, 0.44", "-35.2621, -167.131, -2.79622, 0.44", "-35.1782, -167.896, -3.06809, 0.44", "-34.9948, -169.064, -3.49622, 0.52", "-34.8282, -170.151, -3.88054, 0.66", "-34.7186, -171.051, -4.11837, 0.88", "-34.6775, -171.68, -4.19975, 0.88", "-34.7017, -172.645, -4.14401, 0.52", "-34.8654, -173.483, -3.91978, 0.29", "-35.2161, -174.489, -3.47251, 0.29", "-35.749, -175.637, -2.91932, 0.29", "-36.1706, -176.396, -2.58276, 0.96", "-36.4623, -176.904, -2.42611, 1.18", "-36.7611, -177.467, -2.3089, 1.18", "-37.2243, -178.523, -2.24092, 0.59", "-37.5587, -179.63, -2.2633, 0.52", "-37.7862, -180.706, -2.32078, 0.52", "-38.0284, -182.094, -2.44353, 0.66", "-38.1568, -183.014, -2.52847, 0.66", "-38.2492, -184.002, -2.61578, 0.81", "-38.2636, -185.429, -2.68391, 0.81", "-38.1611, -186.452, -2.59342, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.8601, -152.945, 0.381482, 0.37", "-30.8994, -152.874, 1.29415, 0.37", "-31.0055, -152.833, 2.48318, 0.37", "-31.0799, -152.816, 3.04249, 0.37", "-31.2947, -152.763, 4.2659, 0.29", "-31.4462, -152.713, 4.98608, 0.29", "-31.6257, -152.654, 5.8399, 0.29", "-31.7937, -152.616, 6.66508, 0.37", "-31.9151, -152.617, 7.05958, 0.37", "-32.0709, -152.631, 7.43263, 0.29", "-32.305, -152.627, 7.81046, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "31.6468, -172.178, 0.983885, 0.22", "30.792, -173.38, 1.38878, 0.22", "29.5604, -175.113, 1.9722, 0.22", "28.8603, -176.098, 2.30382, 0.29", "28.4787, -176.635, 2.48457, 0.29", "27.49, -178.026, 2.95294, 0.22", "26.8439, -178.935, 3.25898, 0.22", "21.1955, -190.567, 5.03726, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "31.6468, -172.178, 0.983885, 0.37", "31.7265, -173.722, 1.66799, 0.37", "31.6002, -175.126, 2.13057, 0.96", "31.239, -176.878, 2.53326, 0.59", "30.8667, -178.217, 2.70372, 0.59", "30.4719, -179.636, 2.88443, 0.22", "30.0959, -180.987, 3.05657, 0.22", "29.5169, -182.437, 3.14271, 0.22", "28.892, -183.664, 3.05679, 0.22", "28.0703, -184.927, 2.81715, 0.22", "26.8369, -197.455, 5.23113, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "136.771, -12.2492, -139.529, 0.37", "138.234, -10.3366, -147.59, 0.37", "138.482, -9.9708, -148.948, 0.66", "138.662, -9.62752, -149.993, 0.66", "138.747, -9.44231, -150.486, 0.96", "138.983, -8.89264, -151.719, 1.11", "139.299, -8.17186, -153.117, 1.11", "139.932, -6.90854, -154.612, 0.81", "140.482, -5.85601, -155.622, 1.4", "140.68, -5.49406, -155.902, 1.4", "141.517, -4.09698, -156.726, 0.37", "142.165, -3.13027, -157.089, 0.37", "143.016, -2.02497, -157.288, 0.37", "143.729, -1.17322, -157.296, 0.66", "144.305, -0.480799, -157.235, 0.66", "145.02, 0.551827, -157.129, 0.29", "145.469, 1.38976, -157.02, 0.52", "145.739, 2.02639, -156.945, 0.52", "146.145, 3.12986, -156.865, 0.29", "146.568, 4.28657, -156.835, 1.03", "147.236, 6.03223, -156.906, 0.66", "147.678, 7.14747, -156.997, 0.44", "147.842, 7.54462, -157.035, 0.66", "148.35, 8.77468, -157.174, 0.37", "148.625, 9.38541, -157.232, 0.52", "149.202, 10.5348, -157.293, 0.37", "149.646, 11.2885, -157.267, 0.37", "150.128, 12.0851, -157.232, 0.37", "150.616, 12.9971, -157.176, 0.37", "151.035, 13.8891, -157.092, 0.96", "151.211, 14.2631, -157.053, 0.96", "151.963, 15.735, -156.871, 0.29", "152.599, 16.9221, -156.74, 0.29", "153.212, 18.0201, -156.635, 0.29", "153.732, 18.94, -156.56, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "136.771, -12.2492, -139.529, 0.52", "135.364, -8.3429, -142.791, 0.52", "135.245, -8.01466, -143.041, 0.52", "134.66, -6.45103, -144.146, 0.37", "134.496, -6.01338, -144.456, 0.29", "134.0, -4.68943, -145.392, 0.29", "133.578, -3.56389, -146.187, 0.29", "133.2, -2.36175, -146.601, 0.29", "133.03, -1.8466, -146.792, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "125.218, 112.579, -90.8231, 0.29", "124.498, 114.021, -92.1203, 0.29", "124.285, 114.335, -92.5903, 0.29", "123.996, 114.706, -93.2927, 0.29", "123.487, 115.372, -94.5664, 0.29", "123.293, 115.643, -95.0393, 0.44", "123.029, 116.01, -95.6814, 0.44", "122.209, 116.987, -97.6053, 0.29", "121.831, 117.411, -98.553, 0.29", "121.627, 117.642, -99.127, 0.29", "121.322, 117.992, -100.007, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "125.218, 112.579, -90.8231, 0.22", "124.316, 111.615, -90.3838, 0.22", "123.563, 110.901, -90.0127, 0.22", "122.613, 110.097, -89.5142, 1.4", "121.548, 109.195, -88.955, 0.22", "120.359, 108.188, -88.3311, 1.84", "119.318, 107.307, -87.7846, 0.22", "118.411, 106.617, -87.2344, 0.22", "117.556, 106.024, -86.6844, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "145.254, 91.2985, -43.6906, 0.74", "145.377, 91.5755, -43.1072, 0.74", "145.54, 91.9957, -42.153, 0.22", "145.594, 92.247, -41.5651, 0.22", "145.629, 92.7233, -40.3812, 0.22", "145.644, 93.0914, -39.2965, 1.33", "145.66, 93.2486, -38.7486, 1.33", "145.688, 93.4938, -37.5988, 0.22", "145.689, 93.6189, -36.7603, 0.22", "145.67, 93.68, -36.2231, 0.22", "145.579, 93.8254, -35.0586, 0.22", "145.546, 93.8921, -34.1743, 0.22", "145.579, 93.9395, -33.6044, 0.37", "145.675, 94.0005, -33.0348, 0.37", "145.867, 94.0758, -32.403, 0.37", "146.05, 94.1597, -31.9389, 0.15", "146.528, 94.4782, -30.6853, 0.22", "146.903, 94.7789, -29.6638, 0.22", "147.155, 94.9815, -28.9377, 0.22", "147.537, 95.3665, -27.6101, 0.22", "147.737, 95.6234, -26.6621, 0.22", "147.928, 95.9245, -25.4409, 0.22", "147.976, 96.031, -24.9896, 0.74", "148.094, 96.421, -23.1197, 0.29", "148.126, 96.6544, -21.9994, 0.29", "148.145, 96.8977, -20.9087, 0.29", "148.184, 97.0432, -20.1024, 0.29", "148.305, 97.1598, -19.1135, 0.52", "148.445, 97.2293, -18.2075, 0.37", "148.67, 97.2969, -17.0172, 0.29", "148.732, 97.3068, -16.7238, 0.37", "148.976, 97.3445, -15.5794, 0.37", "149.276, 97.379, -14.0461, 0.37", "149.489, 97.3807, -12.8519, 0.22", "149.616, 97.3632, -12.1929, 0.22", "149.751, 97.3393, -11.4829, 0.74", "149.816, 97.3366, -11.0892, 0.88", "149.97, 97.4139, -9.87391, 0.59", "150.056, 97.6254, -8.48912, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "145.254, 91.2985, -43.6906, 0.29", "146.648, 92.0486, -44.4282, 0.29", "147.841, 92.6824, -45.3768, 0.29", "148.991, 93.2812, -46.4498, 1.03", "149.526, 93.56, -46.9883, 1.03", "150.856, 94.1646, -48.3215, 0.44", "151.879, 94.5709, -49.3067, 0.29", "153.225, 94.9907, -50.6733, 0.96", "153.681, 95.101, -51.1303, 0.96", "155.054, 95.3783, -52.3752, 0.22", "156.135, 95.6004, -53.2447, 0.22", "157.302, 95.8337, -53.9935, 0.22", "158.604, 96.1294, -54.701, 0.22", "160.143, 96.5452, -55.4107, 0.22", "161.117, 96.8546, -55.8109, 0.52", "161.933, 97.1795, -56.0756, 0.29", "162.984, 97.7216, -56.2981, 1.03", "163.701, 98.1514, -56.305, 1.03", "164.359, 98.6377, -56.1555, 0.88", "165.034, 99.1595, -55.8909, 0.66", "165.884, 99.8446, -55.45, 0.37", "166.756, 100.575, -54.8714, 0.59", "167.789, 101.48, -54.0371, 0.29", "168.696, 102.247, -53.2154, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-38.1611, -186.452, -2.59342, 0.74", "-38.4014, -187.489, -2.0958, 0.74", "-38.8721, -189.027, -1.26217, 0.66", "-39.3054, -190.041, -0.630263, 0.52", "-39.9933, -191.275, 0.216639, 0.37", "-40.4054, -191.951, 0.68064, 0.74", "-40.737, -192.527, 1.08096, 1.03", "-41.1941, -193.29, 1.6314, 0.74", "-41.8468, -194.39, 2.41164, 0.52", "-42.4738, -195.615, 3.18849, 0.52", "-42.8687, -196.594, 3.69289, 0.66", "-43.37, -198.295, 4.371, 0.88", "-43.5026, -198.9, 4.55511, 1.18", "-43.6548, -199.872, 4.77935, 0.81", "-43.8007, -201.25, 5.00366, 0.52", "-43.9305, -202.414, 5.1194, 0.52", "-44.1436, -203.798, 5.20341, 0.52", "-44.2854, -204.459, 5.21395, 0.52", "-44.596, -205.756, 5.23215, 0.52", "-44.9404, -207.041, 5.25927, 0.52", "-45.2728, -208.122, 5.27283, 1.03", "-45.5397, -208.91, 5.28901, 1.25", "-45.9387, -209.889, 5.32911, 0.66", "-46.4105, -210.845, 5.38691, 0.29", "-47.114, -211.788, 5.51787, 0.29", "-47.5972, -211.679, 5.69813, 0.52", "-48.8219, -210.875, 6.21496, 0.29", "-49.776, -210.113, 6.62035, 0.29", "-50.7774, -209.163, 7.05461, 0.22", "-50.9655, -208.959, 7.13506, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-38.1611, -186.452, -2.59342, 0.22", "-38.6333, -188.29, -3.05232, 0.22", "-38.8205, -189.025, -3.245, 0.22", "-39.1337, -190.49, -3.6245, 0.22", "-39.4393, -192.149, -4.03522, 0.22", "-39.687, -193.494, -4.36806, 0.22", "-40.1677, -196.104, -5.01415, 0.22", "-40.3884, -197.226, -5.25009, 0.22", "-40.8153, -199.437, -5.7569, 0.22", "-41.0123, -200.666, -6.08255, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "153.732, 18.94, -156.56, 0.29", "154.376, 18.1617, -157.232, 0.29", "154.746, 17.7141, -157.618, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "153.732, 18.94, -156.56, 0.37", "154.278, 19.851, -156.358, 0.37", "154.921, 20.9237, -156.12, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_ChC_7c8be3c828_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.3987, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.159118, 13.3542, -3.59581, 0.37 ) }
    dend_78 { pt3dadd( -0.247289, 13.8854, -3.69511, 0.74 ) }
    dend_78 { pt3dadd( -0.190472, 14.304, -3.84746, 0.74 ) }
    dend_78 { pt3dadd( 0.28775, 15.5895, -4.42698, 0.37 ) }
    dend_78 { pt3dadd( 0.758184, 16.6174, -4.85778, 0.66 ) }
    dend_78 { pt3dadd( 1.30802, 17.6782, -5.31797, 1.33 ) }
    dend_78 { pt3dadd( 1.82594, 18.4691, -5.67688, 1.33 ) }
    dend_78 { pt3dadd( 2.69754, 19.7756, -6.27989, 0.74 ) }
    dend_78 { pt3dadd( 3.34861, 20.82, -6.734, 0.74 ) }
    dend_78 { pt3dadd( 4.34074, 22.5466, -7.48326, 1.25 ) }
    dend_78 { pt3dadd( 4.96596, 23.9348, -8.06, 2.06 ) }
    dend_78 { pt3dadd( 5.28312, 24.9712, -8.44522, 2.06 ) }
    dend_78 { pt3dadd( 5.50161, 26.3748, -8.92126, 1.4 ) }
    dend_78 { pt3dadd( 5.41867, 27.9957, -9.4514, 0.74 ) }
    dend_78 { pt3dadd( 5.05306, 29.0588, -9.80231, 1.11 ) }
    dend_78 { pt3dadd( 4.4169, 29.8736, -10.0739, 1.11 ) }
    dend_78 { pt3dadd( 3.49969, 30.5698, -10.289, 0.81 ) }
    dend_78 { pt3dadd( 2.29173, 31.1579, -10.5854, 0.81 ) }
    dend_78 { pt3dadd( 0.815648, 31.6359, -10.9753, 0.81 ) }
    dend_78 { pt3dadd( -0.623498, 31.9863, -11.3967, 0.96 ) }
    dend_78 { pt3dadd( -1.81163, 32.2742, -11.7584, 1.11 ) }
    dend_78 { pt3dadd( -2.87897, 32.5661, -12.1444, 1.11 ) }
    dend_78 { pt3dadd( -5.19761, 33.3558, -13.1571, 1.11 ) }
    dend_78 { pt3dadd( -5.88269, 33.6805, -13.5295, 1.11 ) }
    dend_78 { pt3dadd( -6.98777, 34.5437, -14.2947, 0.59 ) }
    dend_78 { pt3dadd( -7.64081, 35.4696, -14.8477, 0.96 ) }
    dend_78 { pt3dadd( -8.02704, 36.3243, -15.2136, 1.25 ) }
    dend_78 { pt3dadd( -8.29964, 37.0952, -15.4644, 1.55 ) }
    dend_78 { pt3dadd( -8.46501, 37.5808, -15.5723, 1.55 ) }
    dend_78 { pt3dadd( -9.05555, 39.0718, -15.873, 0.74 ) }
    dend_78 { pt3dadd( -9.98337, 40.875, -16.2312, 0.96 ) }
    dend_78 { pt3dadd( -10.7517, 41.9682, -16.4896, 0.66 ) }
    dend_78 { pt3dadd( -11.3894, 42.656, -16.6911, 0.66 ) }
    dend_78 { pt3dadd( -12.4135, 43.5106, -17.0105, 0.81 ) }
    dend_78 { pt3dadd( -13.2634, 44.0721, -17.2842, 0.96 ) }
    dend_78 { pt3dadd( -14.3818, 44.6751, -17.6734, 1.47 ) }
    dend_78 { pt3dadd( -15.4122, 45.1956, -18.052, 1.62 ) }
    dend_78 { pt3dadd( -16.3852, 45.7631, -18.42, 1.47 ) }
    dend_78 { pt3dadd( -17.2909, 46.3996, -18.7806, 1.11 ) }
    dend_78 { pt3dadd( -18.314, 47.2749, -19.2175, 0.81 ) }
    dend_78 { pt3dadd( -19.5187, 48.578, -19.8093, 0.66 ) }
    dend_78 { pt3dadd( -20.166, 49.4772, -20.1687, 0.81 ) }
    dend_78 { pt3dadd( -20.9984, 50.9947, -20.7064, 1.03 ) }
    dend_78 { pt3dadd( -21.3202, 51.7855, -20.9781, 1.25 ) }
    dend_78 { pt3dadd( -21.5494, 52.5213, -21.2426, 1.25 ) }
    dend_78 { pt3dadd( -21.9635, 54.1094, -21.8703, 0.96 ) }
    dend_78 { pt3dadd( -22.2721, 55.3352, -22.424, 0.81 ) }
    dend_78 { pt3dadd( -22.7023, 56.8476, -23.1998, 0.59 ) }
    dend_78 { pt3dadd( -23.0569, 57.8983, -23.776, 0.59 ) }
    dend_78 { pt3dadd( -23.5447, 59.1433, -24.4668, 0.59 ) }
    dend_78 { pt3dadd( -24.0808, 60.3656, -25.1214, 0.59 ) }
    dend_78 { pt3dadd( -24.6, 61.51, -25.6292, 0.44 ) }
    dend_78 { pt3dadd( -25.092, 62.7047, -26.0184, 0.66 ) }
    dend_78 { pt3dadd( -25.4734, 63.9812, -26.2317, 0.74 ) }
    dend_78 { pt3dadd( -25.597, 64.7823, -26.2693, 0.96 ) }
    dend_78 { pt3dadd( -25.6087, 65.6787, -26.2412, 0.96 ) }
    dend_78 { pt3dadd( -25.4178, 67.6682, -26.2037, 0.52 ) }
    dend_78 { pt3dadd( -25.1539, 69.2815, -26.2255, 0.59 ) }
    dend_78 { pt3dadd( -24.8044, 71.1111, -26.3199, 0.59 ) }
    dend_78 { pt3dadd( -24.6243, 72.1334, -26.4179, 0.96 ) }
    dend_78 { pt3dadd( -24.486, 73.313, -26.5887, 0.96 ) }
    dend_78 { pt3dadd( -24.4427, 75.4074, -27.0198, 0.66 ) }
    dend_78 { pt3dadd( -24.6622, 76.8471, -27.4636, 0.66 ) }
    dend_78 { pt3dadd( -25.1461, 78.0133, -27.9255, 0.96 ) }
    dend_78 { pt3dadd( -25.7058, 78.7205, -28.2324, 1.03 ) }
    dend_78 { pt3dadd( -26.4202, 79.2915, -28.5238, 1.03 ) }
    dend_78 { pt3dadd( -27.3698, 79.811, -28.8741, 1.03 ) }
    dend_78 { pt3dadd( -28.6497, 80.299, -29.3819, 0.74 ) }
    dend_78 { pt3dadd( -29.6569, 80.5993, -29.8827, 0.74 ) }
    dend_78 { pt3dadd( -30.3289, 80.7608, -30.2903, 0.52 ) }
    dend_78 { pt3dadd( -31.8156, 81.0504, -31.3883, 0.52 ) }
    dend_78 { pt3dadd( -33.0737, 81.2444, -32.4297, 0.52 ) }
    dend_78 { pt3dadd( -34.3567, 81.3981, -33.5415, 1.11 ) }
    dend_78 { pt3dadd( -35.0543, 81.4642, -34.1263, 1.4 ) }
    dend_78 { pt3dadd( -35.8465, 81.5159, -34.7209, 1.4 ) }
    dend_78 { pt3dadd( -37.2007, 81.5523, -35.5653, 0.81 ) }
    dend_78 { pt3dadd( -38.0356, 81.5705, -35.9067, 0.59 ) }
    dend_78 { pt3dadd( -39.2928, 81.6333, -36.1752, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -40.5559, 81.7563, -36.2481, 0.44 ) }
    dend_78 { pt3dadd( -41.8367, 81.9624, -36.2106, 0.74 ) }
    dend_78 { pt3dadd( -43.0606, 82.3063, -36.1149, 1.33 ) }
    dend_78 { pt3dadd( -44.5492, 82.9836, -36.0284, 0.88 ) }
    dend_78 { pt3dadd( -45.209, 83.4366, -36.1207, 0.59 ) }
    dend_78 { pt3dadd( -45.6177, 83.8338, -36.2879, 0.59 ) }
    dend_78 { pt3dadd( -46.1928, 84.5368, -36.7085, 0.74 ) }
    dend_78 { pt3dadd( -46.9043, 85.5226, -37.4443, 0.96 ) }
    dend_78 { pt3dadd( -47.8229, 86.8057, -38.5703, 0.59 ) }
    dend_78 { pt3dadd( -48.7734, 88.0585, -39.8223, 0.59 ) }
    dend_78 { pt3dadd( -49.2679, 88.6878, -40.4473, 0.81 ) }
    dend_78 { pt3dadd( -49.8926, 89.4076, -41.1323, 0.96 ) }
    dend_78 { pt3dadd( -50.4914, 89.9916, -41.6451, 1.03 ) }
    dend_78 { pt3dadd( -51.5053, 90.8797, -42.2949, 0.66 ) }
    dend_78 { pt3dadd( -51.8159, 91.1611, -42.4561, 0.66 ) }
    dend_78 { pt3dadd( -52.6502, 92.0464, -42.8578, 0.81 ) }
    dend_78 { pt3dadd( -53.3861, 93.0049, -43.2911, 0.81 ) }
    dend_78 { pt3dadd( -53.9457, 93.9943, -43.717, 0.66 ) }
    dend_78 { pt3dadd( -54.4016, 95.0478, -44.1517, 0.66 ) }
    dend_78 { pt3dadd( -54.9692, 96.6865, -44.8156, 0.52 ) }
    dend_78 { pt3dadd( -55.2939, 97.7096, -45.2436, 0.81 ) }
    dend_78 { pt3dadd( -55.5327, 98.4725, -45.5764, 0.74 ) }
    dend_78 { pt3dadd( -56.1103, 100.11, -46.2822, 0.59 ) }
    dend_78 { pt3dadd( -56.4627, 100.91, -46.5984, 0.74 ) }
    dend_78 { pt3dadd( -56.9337, 101.702, -46.8719, 0.96 ) }
    dend_78 { pt3dadd( -57.661, 102.653, -47.0886, 0.96 ) }
    dend_78 { pt3dadd( -58.2975, 103.387, -47.1931, 0.74 ) }
    dend_78 { pt3dadd( -59.1786, 104.341, -47.2652, 1.03 ) }
    dend_78 { pt3dadd( -59.8145, 105.01, -47.2083, 1.25 ) }
    dend_78 { pt3dadd( -60.2606, 105.515, -47.117, 0.81 ) }
    dend_78 { pt3dadd( -61.2071, 106.71, -46.8235, 0.59 ) }
    dend_78 { pt3dadd( -61.7838, 107.52, -46.5807, 0.66 ) }
    dend_78 { pt3dadd( -62.2625, 108.255, -46.3374, 0.66 ) }
    dend_78 { pt3dadd( -63.5036, 110.289, -45.6133, 0.88 ) }
    dend_78 { pt3dadd( -64.133, 111.331, -45.2135, 1.11 ) }
    dend_78 { pt3dadd( -64.5655, 112.043, -44.9124, 1.03 ) }
    dend_78 { pt3dadd( -65.0918, 112.903, -44.5379, 1.25 ) }
    dend_78 { pt3dadd( -65.2883, 113.223, -44.386, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 10.1787, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.98774, 11.0021, -4.90292, 1.11 ) }
    dend_53 { pt3dadd( 5.61085, 11.6595, -5.31873, 1.11 ) }
    dend_53 { pt3dadd( 6.60499, 12.7592, -5.98146, 1.11 ) }
    dend_53 { pt3dadd( 7.28687, 13.5512, -6.48038, 0.96 ) }
    dend_53 { pt3dadd( 8.41629, 14.7273, -7.21761, 1.55 ) }
    dend_53 { pt3dadd( 9.3986, 15.6675, -7.81095, 1.62 ) }
    dend_53 { pt3dadd( 9.97709, 16.1614, -8.13491, 1.62 ) }
    dend_53 { pt3dadd( 10.8711, 16.8466, -8.52846, 1.25 ) }
    dend_53 { pt3dadd( 12.3699, 17.8769, -8.98855, 0.96 ) }
    dend_53 { pt3dadd( 14.6595, 19.2924, -9.40605, 0.88 ) }
    dend_53 { pt3dadd( 15.7343, 19.8676, -9.47128, 1.55 ) }
    dend_53 { pt3dadd( 16.9078, 20.4092, -9.44296, 1.84 ) }
    dend_53 { pt3dadd( 18.6679, 21.1366, -9.30508, 1.11 ) }
    dend_53 { pt3dadd( 19.5918, 21.5019, -9.18411, 1.03 ) }
    dend_53 { pt3dadd( 20.6258, 21.9528, -8.98275, 1.25 ) }
    dend_53 { pt3dadd( 21.6259, 22.5186, -8.77313, 0.88 ) }
    dend_53 { pt3dadd( 22.5481, 23.1658, -8.58063, 0.88 ) }
    dend_53 { pt3dadd( 23.4118, 23.8727, -8.40285, 0.88 ) }
    dend_53 { pt3dadd( 24.4259, 24.7523, -8.18713, 0.88 ) }
    dend_53 { pt3dadd( 25.293, 25.5532, -7.90785, 0.96 ) }
    dend_53 { pt3dadd( 26.1903, 26.4503, -7.57257, 0.96 ) }
    dend_53 { pt3dadd( 27.009, 27.3585, -7.20748, 0.81 ) }
    dend_53 { pt3dadd( 28.214, 28.7772, -6.56414, 1.11 ) }
    dend_53 { pt3dadd( 29.0041, 29.6762, -6.06406, 1.4 ) }
    dend_53 { pt3dadd( 29.9145, 30.5782, -5.38765, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.76874, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.42441, 9.14801, 2.6623, 1.62 ) }
    dend_50 { pt3dadd( 5.18544, 9.60221, 3.34768, 1.25 ) }
    dend_50 { pt3dadd( 6.56993, 10.2362, 4.73766, 1.25 ) }
    dend_50 { pt3dadd( 7.30206, 10.5245, 5.52201, 1.25 ) }
    dend_50 { pt3dadd( 8.06598, 10.7291, 6.4383, 1.92 ) }
    dend_50 { pt3dadd( 8.38924, 10.7853, 6.84996, 2.5 ) }
    dend_50 { pt3dadd( 9.09221, 10.8044, 7.823, 2.5 ) }
    dend_50 { pt3dadd( 10.5463, 10.6248, 9.98685, 1.77 ) }
    dend_50 { pt3dadd( 11.5548, 10.3096, 11.4844, 0.96 ) }
    dend_50 { pt3dadd( 12.9778, 9.70959, 13.5923, 0.88 ) }
    dend_50 { pt3dadd( 13.3845, 9.51517, 14.2044, 0.88 ) }
    dend_50 { pt3dadd( 13.7055, 9.3678, 14.6728, 1.4 ) }
    dend_50 { pt3dadd( 14.0227, 9.2467, 15.0822, 1.4 ) }
    dend_50 { pt3dadd( 15.1799, 8.9862, 16.2542, 0.66 ) }
    dend_50 { pt3dadd( 15.6706, 9.01529, 16.6457, 0.66 ) }
    dend_50 { pt3dadd( 16.8361, 9.48007, 17.3356, 0.88 ) }
    dend_50 { pt3dadd( 17.5684, 9.89263, 17.7098, 0.88 ) }
    dend_50 { pt3dadd( 18.4882, 10.5086, 18.0741, 0.74 ) }
    dend_50 { pt3dadd( 19.1737, 11.0301, 18.2795, 1.4 ) }
    dend_50 { pt3dadd( 19.9627, 11.6819, 18.4231, 2.06 ) }
    dend_50 { pt3dadd( 20.7397, 12.3036, 18.4836, 1.84 ) }
    dend_50 { pt3dadd( 21.6715, 13.0146, 18.4305, 1.18 ) }
    dend_50 { pt3dadd( 22.6409, 13.7009, 18.4012, 1.18 ) }
    dend_50 { pt3dadd( 23.0345, 13.9442, 18.4569, 1.03 ) }
    dend_50 { pt3dadd( 23.6926, 14.271, 18.7301, 1.03 ) }
    dend_50 { pt3dadd( 24.128, 14.4481, 19.1691, 0.59 ) }
    dend_50 { pt3dadd( 24.5322, 14.6356, 19.8166, 0.59 ) }
    dend_50 { pt3dadd( 25.3244, 15.0695, 21.4299, 0.88 ) }
    dend_50 { pt3dadd( 26.2458, 15.6578, 23.5521, 1.62 ) }
    dend_50 { pt3dadd( 26.6418, 15.9462, 24.475, 1.62 ) }
    dend_50 { pt3dadd( 27.5631, 16.6733, 26.6093, 0.88 ) }
    dend_50 { pt3dadd( 27.9923, 17.011, 27.5394, 0.88 ) }
    dend_50 { pt3dadd( 28.3881, 17.3331, 28.3086, 1.47 ) }
    dend_50 { pt3dadd( 28.6663, 17.5624, 28.7497, 1.47 ) }
    dend_50 { pt3dadd( 29.3818, 18.1072, 29.6098, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 29.7809, 18.3572, 29.9949, 0.59 ) }
    dend_50 { pt3dadd( 30.2077, 18.5599, 30.3312, 0.59 ) }
    dend_50 { pt3dadd( 31.249, 19.0001, 31.1611, 1.25 ) }
    dend_50 { pt3dadd( 32.8865, 19.7156, 32.5265, 0.74 ) }
    dend_50 { pt3dadd( 33.3995, 19.991, 33.0051, 0.29 ) }
    dend_50 { pt3dadd( 33.856, 20.2574, 33.4887, 0.29 ) }
    dend_50 { pt3dadd( 34.1173, 20.4104, 33.8042, 0.59 ) }
    dend_50 { pt3dadd( 34.8095, 20.8299, 34.6573, 1.11 ) }
    dend_50 { pt3dadd( 35.1593, 21.0159, 35.0758, 1.11 ) }
    dend_50 { pt3dadd( 35.9098, 21.6787, 35.9744, 1.11 ) }
    dend_50 { pt3dadd( 36.3339, 22.2818, 36.6887, 0.59 ) }
    dend_50 { pt3dadd( 36.3455, 20.5523, 36.8063, 0.59 ) }
    dend_50 { pt3dadd( 36.4907, 18.7688, 37.2436, 0.52 ) }
    dend_50 { pt3dadd( 36.5911, 17.5232, 37.546, 0.59 ) }
    dend_50 { pt3dadd( 43.044, 19.5911, 43.2978, 0.59 ) }
    dend_50 { pt3dadd( 49.8114, 22.4519, 48.2994, 0.59 ) }
    dend_50 { pt3dadd( 55.4044, 26.5927, 53.8285, 0.59 ) }
    dend_50 { pt3dadd( 60.9455, 31.5707, 58.6776, 0.59 ) }
    dend_50 { pt3dadd( 67.3885, 36.9124, 61.6697, 0.59 ) }
    dend_50 { pt3dadd( 73.1931, 42.5345, 65.3706, 0.59 ) }
    dend_50 { pt3dadd( 79.3175, 47.1662, 69.8469, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.43874, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.43874, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.99538, 6.69104, 1.86848, 1.69 ) }
    dend_49 { pt3dadd( -4.52212, 6.94254, 2.22845, 1.4 ) }
    dend_49 { pt3dadd( -4.89792, 7.10397, 2.56214, 1.03 ) }
    dend_49 { pt3dadd( -5.4144, 7.33712, 3.07515, 0.88 ) }
    dend_49 { pt3dadd( -5.77123, 7.51279, 3.45323, 0.88 ) }
    dend_49 { pt3dadd( -6.22345, 7.71888, 3.99791, 0.59 ) }
    dend_49 { pt3dadd( -6.63621, 7.90194, 4.54712, 0.44 ) }
    dend_49 { pt3dadd( -7.39832, 8.23492, 5.63098, 0.37 ) }
    dend_49 { pt3dadd( -7.66141, 8.35106, 6.01929, 0.37 ) }
    dend_49 { pt3dadd( -8.09044, 8.5453, 6.66821, 0.37 ) }
    dend_49 { pt3dadd( -9.10543, 9.03057, 8.27895, 1.03 ) }
    dend_49 { pt3dadd( -9.33659, 9.1538, 8.65904, 1.62 ) }
    dend_49 { pt3dadd( -15.2763, 9.7781, 13.0707, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.20126, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -4.94394, -1.92215, -14.5811, 0.74 ) }
    dend_44 { pt3dadd( -6.19813, -2.7366, -14.5744, 1.03 ) }
    dend_44 { pt3dadd( -7.29512, -3.43497, -14.5912, 1.25 ) }
    dend_44 { pt3dadd( -8.1723, -4.00171, -14.6142, 1.62 ) }
    dend_44 { pt3dadd( -8.89112, -4.4583, -14.6368, 1.84 ) }
    dend_44 { pt3dadd( -9.8337, -5.02177, -14.6431, 1.84 ) }
    dend_44 { pt3dadd( -10.6686, -5.46208, -14.6052, 1.99 ) }
    dend_44 { pt3dadd( -11.5459, -5.86078, -14.5216, 2.21 ) }
    dend_44 { pt3dadd( -12.5709, -6.24749, -14.3733, 2.65 ) }
    dend_44 { pt3dadd( -13.298, -6.47679, -14.2568, 2.5 ) }
    dend_44 { pt3dadd( -14.5266, -6.81567, -14.0701, 1.77 ) }
    dend_44 { pt3dadd( -15.8278, -7.15762, -13.9143, 1.33 ) }
    dend_44 { pt3dadd( -16.7125, -7.39629, -13.8725, 1.18 ) }
    dend_44 { pt3dadd( -17.7615, -7.69031, -13.9391, 1.11 ) }
    dend_44 { pt3dadd( -18.5069, -7.9258, -14.1498, 1.11 ) }
    dend_44 { pt3dadd( -19.2748, -8.20251, -14.6189, 1.11 ) }
    dend_44 { pt3dadd( -20.0085, -8.4891, -15.3386, 1.4 ) }
    dend_44 { pt3dadd( -20.7387, -8.75853, -16.269, 1.03 ) }
    dend_44 { pt3dadd( -21.3536, -8.95965, -17.1705, 0.88 ) }
    dend_44 { pt3dadd( -22.2688, -9.19023, -18.6473, 0.88 ) }
    dend_44 { pt3dadd( -23.2577, -9.35041, -20.3914, 1.47 ) }
    dend_44 { pt3dadd( -24.0058, -9.42185, -21.7747, 1.77 ) }
    dend_44 { pt3dadd( -24.8432, -9.43592, -23.3839, 1.84 ) }
    dend_44 { pt3dadd( -25.1393, -9.41799, -23.968, 2.06 ) }
    dend_44 { pt3dadd( -25.6758, -9.35009, -25.0545, 1.77 ) }
    dend_44 { pt3dadd( -26.5022, -9.17501, -26.687, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -2.01126, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -2.01126, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.39169, -1.90892, 9.64333, 2.06 ) }
    dend_41 { pt3dadd( -7.16159, -1.86842, 10.0196, 2.06 ) }
    dend_41 { pt3dadd( -9.15934, -1.89882, 10.9485, 1.84 ) }
    dend_41 { pt3dadd( -10.2715, -2.00143, 11.4507, 1.84 ) }
    dend_41 { pt3dadd( -11.1223, -2.14397, 11.8308, 1.99 ) }
    dend_41 { pt3dadd( -12.6534, -2.52868, 12.5129, 1.55 ) }
    dend_41 { pt3dadd( -13.899, -2.98579, 13.0537, 1.03 ) }
    dend_41 { pt3dadd( -14.906, -3.47545, 13.4574, 0.88 ) }
    dend_41 { pt3dadd( -15.8837, -4.08843, 13.741, 1.18 ) }
    dend_41 { pt3dadd( -16.6738, -4.64692, 13.9135, 1.18 ) }
    dend_41 { pt3dadd( -17.2795, -5.11458, 14.0137, 1.47 ) }
    dend_41 { pt3dadd( -18.1784, -5.87884, 14.0921, 1.25 ) }
    dend_41 { pt3dadd( -19.0634, -6.66292, 14.2089, 1.03 ) }
    dend_41 { pt3dadd( -19.8615, -7.36152, 14.3876, 1.62 ) }
    dend_41 { pt3dadd( -20.661, -8.04532, 14.6846, 1.69 ) }
    dend_41 { pt3dadd( -21.2773, -8.54113, 15.0018, 1.33 ) }
    dend_41 { pt3dadd( -22.3782, -9.3565, 15.7509, 1.03 ) }
    dend_41 { pt3dadd( -23.7342, -10.1974, 16.9305, 0.88 ) }
    dend_41 { pt3dadd( -24.6824, -10.6443, 17.9811, 1.11 ) }
    dend_41 { pt3dadd( -25.5039, -10.8672, 19.0598, 1.33 ) }
    dend_41 { pt3dadd( -26.0161, -10.8898, 19.818, 1.33 ) }
    dend_41 { pt3dadd( -26.5211, -10.7587, 20.6012, 1.18 ) }
    dend_41 { pt3dadd( -27.1221, -10.4127, 21.5065, 0.88 ) }
    dend_41 { pt3dadd( -27.9767, -9.77039, 22.6111, 1.18 ) }
    dend_41 { pt3dadd( -28.5097, -9.38349, 23.2108, 1.33 ) }
    dend_41 { pt3dadd( -28.9794, -9.13013, 23.6788, 1.33 ) }
    dend_41 { pt3dadd( -29.7894, -8.89395, 24.4374, 0.59 ) }
    dend_41 { pt3dadd( -30.9004, -8.95282, 25.3816, 0.52 ) }
    dend_41 { pt3dadd( -31.464, -9.29548, 25.7937, 0.59 ) }
    dend_41 { pt3dadd( -32.2499, -10.3629, 26.4141, 0.59 ) }
    dend_41 { pt3dadd( -33.0068, -11.8309, 27.1686, 0.59 ) }
    dend_41 { pt3dadd( -33.3992, -12.706, 27.6094, 1.03 ) }
    dend_41 { pt3dadd( -33.8484, -13.7989, 28.2103, 1.03 ) }
    dend_41 { pt3dadd( -34.2198, -14.7078, 28.7602, 1.03 ) }
    dend_41 { pt3dadd( -34.92, -16.2265, 29.8821, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -35.5837, -17.2284, 30.9443, 0.66 ) }
    dend_41 { pt3dadd( -36.1428, -17.6907, 31.7614, 0.66 ) }
    dend_41 { pt3dadd( -37.1281, -18.0734, 33.0562, 0.74 ) }
    dend_41 { pt3dadd( -37.8247, -18.1947, 33.9105, 0.81 ) }
    dend_41 { pt3dadd( -38.4727, -18.2397, 34.6755, 0.52 ) }
    dend_41 { pt3dadd( -39.647, -18.2567, 35.953, 0.52 ) }
    dend_41 { pt3dadd( -40.1501, -18.2933, 36.5057, 0.44 ) }
    dend_41 { pt3dadd( -40.8823, -18.6152, 37.4793, 0.37 ) }
    dend_41 { pt3dadd( -41.2344, -19.1138, 38.0502, 0.37 ) }
    dend_41 { pt3dadd( -41.5611, -19.8702, 38.6338, 1.11 ) }
    dend_41 { pt3dadd( -41.8399, -20.6462, 39.0898, 1.4 ) }
    dend_41 { pt3dadd( -42.1085, -21.6681, 39.5813, 1.4 ) }
    dend_41 { pt3dadd( -42.4385, -23.2197, 40.2589, 0.81 ) }
    dend_41 { pt3dadd( -42.6607, -24.388, 40.7126, 0.29 ) }
    dend_41 { pt3dadd( -42.8588, -25.1607, 41.0251, 0.29 ) }
    dend_41 { pt3dadd( -43.0929, -25.781, 41.2923, 0.29 ) }
    dend_41 { pt3dadd( -49.5353, -30.1292, 48.4567, 0.29 ) }
    dend_41 { pt3dadd( -57.3317, -34.5862, 54.0326, 0.29 ) }
    dend_41 { pt3dadd( -64.4646, -39.0333, 60.4424, 0.29 ) }
    dend_41 { pt3dadd( -71.0839, -42.1035, 68.0908, 0.29 ) }
    dend_41 { pt3dadd( -77.719, -45.3099, 75.6693, 0.29 ) }
    dend_41 { pt3dadd( -85.3529, -50.0713, 81.2183, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.76126, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.76126, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.18265, -6.7052, 6.96864, 1.77 ) }
    dend_32 { pt3dadd( -2.15884, -8.32351, 7.16078, 1.47 ) }
    dend_32 { pt3dadd( -2.14572, -9.95215, 7.33463, 1.25 ) }
    dend_32 { pt3dadd( -2.16813, -11.1963, 7.45209, 1.62 ) }
    dend_32 { pt3dadd( -2.21292, -12.2461, 7.5406, 1.92 ) }
    dend_32 { pt3dadd( -2.27433, -13.1617, 7.61895, 2.14 ) }
    dend_32 { pt3dadd( -2.38558, -14.3017, 7.7146, 2.14 ) }
    dend_32 { pt3dadd( -2.61495, -15.8842, 7.84745, 1.55 ) }
    dend_32 { pt3dadd( -2.9069, -17.3726, 7.96371, 1.33 ) }
    dend_32 { pt3dadd( -3.1713, -18.5003, 8.0616, 1.55 ) }
    dend_32 { pt3dadd( -3.36767, -19.2125, 8.12575, 1.92 ) }
    dend_32 { pt3dadd( -3.6467, -20.0764, 8.23318, 2.21 ) }
    dend_32 { pt3dadd( -3.85569, -20.6457, 8.32029, 2.5 ) }
    dend_32 { pt3dadd( -4.10004, -21.3177, 8.44535, 2.5 ) }
    dend_32 { pt3dadd( -4.32467, -22.0589, 8.5947, 2.36 ) }
    dend_32 { pt3dadd( -4.56632, -23.0758, 8.80537, 1.69 ) }
    dend_32 { pt3dadd( -4.7986, -24.4092, 9.07068, 1.25 ) }
    dend_32 { pt3dadd( -4.91674, -25.6551, 9.30984, 1.4 ) }
    dend_32 { pt3dadd( -4.92174, -26.7608, 9.49623, 1.62 ) }
    dend_32 { pt3dadd( -4.80027, -28.1102, 9.69342, 2.06 ) }
    dend_32 { pt3dadd( -4.65239, -28.9419, 9.80566, 2.36 ) }
    dend_32 { pt3dadd( -4.50281, -29.4811, 9.86892, 2.36 ) }
    dend_32 { pt3dadd( -4.13376, -30.5087, 9.97051, 2.14 ) }
    dend_32 { pt3dadd( -3.53282, -31.9507, 10.1014, 1.62 ) }
    dend_32 { pt3dadd( -3.00253, -33.1653, 10.1984, 1.25 ) }
    dend_32 { pt3dadd( -2.45861, -34.4183, 10.3113, 1.03 ) }
    dend_32 { pt3dadd( -1.87804, -35.8272, 10.4661, 1.03 ) }
    dend_32 { pt3dadd( -1.44557, -37.007, 10.6246, 1.03 ) }
    dend_32 { pt3dadd( -0.974748, -38.5342, 10.8832, 1.03 ) }
    dend_32 { pt3dadd( -0.769441, -39.4436, 11.0716, 0.96 ) }
    dend_32 { pt3dadd( -0.707161, -40.1622, 11.2445, 0.96 ) }
    dend_32 { pt3dadd( -0.791687, -40.8027, 11.4171, 0.96 ) }
    dend_32 { pt3dadd( -1.18036, -41.6462, 11.7046, 0.96 ) }
    dend_32 { pt3dadd( -1.5605, -42.1047, 11.8854, 0.88 ) }
    dend_32 { pt3dadd( -1.95927, -42.4435, 12.027, 1.18 ) }
    dend_32 { pt3dadd( -2.60303, -42.9139, 12.2077, 1.18 ) }
    dend_32 { pt3dadd( -3.22663, -43.3438, 12.3677, 1.33 ) }
    dend_32 { pt3dadd( -3.94464, -43.8313, 12.5673, 1.33 ) }
    dend_32 { pt3dadd( -4.56197, -44.2565, 12.7606, 1.4 ) }
    dend_32 { pt3dadd( -5.22375, -44.7413, 12.9997, 1.55 ) }
    dend_32 { pt3dadd( -5.85765, -45.2547, 13.281, 1.55 ) }
    dend_32 { pt3dadd( -6.57514, -45.9562, 13.6851, 1.84 ) }
    dend_32 { pt3dadd( -7.00963, -46.4685, 13.9717, 2.14 ) }
    dend_32 { pt3dadd( -7.43519, -47.0861, 14.2792, 1.99 ) }
    dend_32 { pt3dadd( -8.02874, -48.2015, 14.7708, 0.88 ) }
    dend_32 { pt3dadd( -8.43405, -49.2316, 15.1572, 0.88 ) }
    dend_32 { pt3dadd( -8.77575, -50.4484, 15.5427, 0.81 ) }
    dend_32 { pt3dadd( -8.96699, -51.5241, 15.8044, 0.74 ) }
    dend_32 { pt3dadd( -9.14452, -52.8824, 16.0917, 0.74 ) }
    dend_32 { pt3dadd( -9.23153, -54.1513, 16.3208, 1.03 ) }
    dend_32 { pt3dadd( -9.22813, -55.2914, 16.468, 1.4 ) }
    dend_32 { pt3dadd( -9.18936, -56.0008, 16.5219, 1.69 ) }
    dend_32 { pt3dadd( -9.10915, -56.796, 16.5432, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -10.0013, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -10.0013, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.79034, -11.0919, -2.30663, 3.39 ) }
    dend_0 { pt3dadd( 2.07129, -11.9717, -2.42686, 3.02 ) }
    dend_0 { pt3dadd( 2.35576, -12.8626, -2.5486, 3.02 ) }
    dend_0 { pt3dadd( 2.72983, -14.034, -2.70867, 3.02 ) }
    dend_0 { pt3dadd( 3.13165, -15.2924, -2.88063, 3.24 ) }
    dend_0 { pt3dadd( 3.43467, -16.2202, -3.02097, 3.54 ) }
    dend_0 { pt3dadd( 3.7787, -17.22, -3.20759, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -65.2883, 113.223, -44.386, 0.44 ) }
    dend_88 { pt3dadd( -66.429, 114.506, -45.388, 0.44 ) }
    dend_88 { pt3dadd( -66.9561, 115.131, -45.8197, 0.37 ) }
    dend_88 { pt3dadd( -67.2174, 115.474, -45.9714, 0.66 ) }
    dend_88 { pt3dadd( -67.6484, 116.094, -46.1572, 0.66 ) }
    dend_88 { pt3dadd( -68.0874, 116.794, -46.2939, 0.59 ) }
    dend_88 { pt3dadd( -68.3753, 117.323, -46.3566, 0.81 ) }
    dend_88 { pt3dadd( -68.6596, 117.98, -46.3139, 0.81 ) }
    dend_88 { pt3dadd( -69.0843, 119.513, -46.0914, 0.52 ) }
    dend_88 { pt3dadd( -69.1597, 120.25, -45.9431, 0.52 ) }
    dend_88 { pt3dadd( -69.0685, 121.41, -45.6799, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -68.7796, 122.535, -45.4281, 0.44 ) }
    dend_88 { pt3dadd( -68.3009, 123.645, -45.1962, 0.74 ) }
    dend_88 { pt3dadd( -67.8364, 124.436, -45.0355, 0.74 ) }
    dend_88 { pt3dadd( -67.0181, 125.55, -44.8427, 0.44 ) }
    dend_88 { pt3dadd( -66.3927, 126.33, -44.6822, 0.59 ) }
    dend_88 { pt3dadd( -65.7587, 127.097, -44.5277, 0.59 ) }
    dend_88 { pt3dadd( -65.118, 127.894, -44.3953, 0.59 ) }
    dend_88 { pt3dadd( -64.6147, 128.595, -44.3218, 0.37 ) }
    dend_88 { pt3dadd( -64.2464, 129.152, -44.2877, 0.37 ) }
    dend_88 { pt3dadd( -63.6884, 130.032, -44.2564, 0.59 ) }
    dend_88 { pt3dadd( -63.1309, 130.88, -44.2387, 0.37 ) }
    dend_88 { pt3dadd( -62.623, 131.616, -44.2249, 0.81 ) }
    dend_88 { pt3dadd( -62.0857, 132.365, -44.2191, 0.81 ) }
    dend_88 { pt3dadd( -61.0932, 133.746, -44.241, 0.44 ) }
    dend_88 { pt3dadd( -60.328, 134.834, -44.2734, 0.44 ) }
    dend_88 { pt3dadd( -59.7788, 135.595, -44.3251, 0.81 ) }
    dend_88 { pt3dadd( -59.2189, 136.375, -44.3887, 0.44 ) }
    dend_88 { pt3dadd( -58.9121, 136.823, -44.4407, 0.59 ) }
    dend_88 { pt3dadd( -58.1669, 137.969, -44.6312, 0.59 ) }
    dend_88 { pt3dadd( -57.6953, 138.797, -44.8748, 0.44 ) }
    dend_88 { pt3dadd( -57.1737, 139.946, -45.316, 0.44 ) }
    dend_88 { pt3dadd( -56.7994, 140.939, -45.8322, 0.96 ) }
    dend_88 { pt3dadd( -56.6474, 141.412, -46.1453, 1.18 ) }
    dend_88 { pt3dadd( -56.5334, 141.85, -46.4945, 1.18 ) }
    dend_88 { pt3dadd( -56.2549, 143.067, -47.8697, 0.44 ) }
    dend_88 { pt3dadd( -56.1144, 143.946, -49.0313, 0.37 ) }
    dend_88 { pt3dadd( -55.9587, 144.695, -50.2701, 0.66 ) }
    dend_88 { pt3dadd( -55.8854, 145.014, -50.8603, 0.66 ) }
    dend_88 { pt3dadd( -55.772, 145.499, -51.812, 0.66 ) }
    dend_88 { pt3dadd( -55.2289, 147.339, -55.6004, 0.44 ) }
    dend_88 { pt3dadd( -55.1188, 147.652, -56.2752, 0.44 ) }
    dend_88 { pt3dadd( -54.4869, 149.289, -59.8562, 0.29 ) }
    dend_88 { pt3dadd( -54.3551, 149.659, -60.6114, 0.29 ) }
    dend_88 { pt3dadd( -54.2034, 150.113, -61.4624, 0.29 ) }
    dend_88 { pt3dadd( -53.8872, 151.178, -63.2405, 0.74 ) }
    dend_88 { pt3dadd( -53.5569, 152.592, -65.2048, 0.44 ) }
    dend_88 { pt3dadd( -53.4868, 152.948, -65.6201, 0.44 ) }
    dend_88 { pt3dadd( -53.404, 153.792, -66.3528, 0.37 ) }
    dend_88 { pt3dadd( -53.3586, 154.655, -66.9838, 0.88 ) }
    dend_88 { pt3dadd( -53.4057, 156.05, -67.7461, 0.29 ) }
    dend_88 { pt3dadd( -53.4941, 156.598, -67.9627, 0.52 ) }
    dend_88 { pt3dadd( -53.7479, 157.575, -68.2881, 0.15 ) }
    dend_88 { pt3dadd( -54.0079, 158.434, -68.6117, 0.22 ) }
    dend_88 { pt3dadd( -54.4503, 159.773, -69.139, 0.22 ) }
    dend_88 { pt3dadd( -54.8983, 160.927, -69.5927, 0.22 ) }
    dend_88 { pt3dadd( -55.3378, 162.004, -69.9916, 0.22 ) }
    dend_88 { pt3dadd( -56.0024, 163.586, -70.6416, 1.47 ) }
    dend_88 { pt3dadd( -56.4888, 164.755, -71.1799, 0.66 ) }
    dend_88 { pt3dadd( -56.7814, 165.509, -71.5361, 0.96 ) }
    dend_88 { pt3dadd( -57.2246, 166.765, -72.1028, 0.22 ) }
    dend_88 { pt3dadd( -57.5213, 167.606, -72.4238, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -65.2883, 113.223, -44.386, 0.37 ) }
    dend_79 { pt3dadd( -65.2552, 114.893, -43.9546, 0.37 ) }
    dend_79 { pt3dadd( -65.1471, 115.729, -43.8098, 0.37 ) }
    dend_79 { pt3dadd( -65.0701, 116.516, -43.5986, 0.37 ) }
    dend_79 { pt3dadd( -65.0519, 117.684, -43.1938, 0.74 ) }
    dend_79 { pt3dadd( -65.1329, 118.665, -42.8174, 0.29 ) }
    dend_79 { pt3dadd( -65.357, 119.812, -42.3608, 0.29 ) }
    dend_79 { pt3dadd( -65.4869, 120.349, -42.1396, 0.52 ) }
    dend_79 { pt3dadd( -65.8901, 121.515, -41.4686, 0.44 ) }
    dend_79 { pt3dadd( -66.1963, 122.249, -40.962, 0.29 ) }
    dend_79 { pt3dadd( -66.4676, 122.888, -40.4904, 0.29 ) }
    dend_79 { pt3dadd( -66.748, 123.596, -39.9353, 0.29 ) }
    dend_79 { pt3dadd( -67.129, 124.797, -39.0207, 0.44 ) }
    dend_79 { pt3dadd( -67.3723, 125.776, -38.2922, 0.44 ) }
    dend_79 { pt3dadd( -67.5391, 127.032, -37.4426, 0.52 ) }
    dend_79 { pt3dadd( -67.5508, 128.038, -36.7746, 0.37 ) }
    dend_79 { pt3dadd( -67.468, 128.846, -36.2396, 0.37 ) }
    dend_79 { pt3dadd( -67.277, 129.722, -35.6907, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 29.9145, 30.5782, -5.38765, 0.29 ) }
    dend_69 { pt3dadd( 30.6754, 30.3166, -4.3131, 0.29 ) }
    dend_69 { pt3dadd( 31.3894, 30.1072, -3.43367, 0.59 ) }
    dend_69 { pt3dadd( 32.0897, 29.9026, -2.67727, 0.74 ) }
    dend_69 { pt3dadd( 32.4737, 29.7953, -2.2952, 0.37 ) }
    dend_69 { pt3dadd( 33.0639, 29.6476, -1.66669, 0.37 ) }
    dend_69 { pt3dadd( 33.3914, 29.5742, -1.29123, 0.66 ) }
    dend_69 { pt3dadd( 33.6354, 29.5483, -0.995021, 0.96 ) }
    dend_69 { pt3dadd( 33.9847, 29.5453, -0.428067, 1.25 ) }
    dend_69 { pt3dadd( 34.508, 29.6058, 0.652433, 0.37 ) }
    dend_69 { pt3dadd( 34.9789, 29.7475, 1.78961, 0.37 ) }
    dend_69 { pt3dadd( 35.1332, 29.8172, 2.18846, 0.37 ) }
    dend_69 { pt3dadd( 35.471, 29.9847, 2.99949, 0.74 ) }
    dend_69 { pt3dadd( 36.0804, 30.264, 4.2298, 0.66 ) }
    dend_69 { pt3dadd( 36.5877, 30.4739, 5.05783, 0.52 ) }
    dend_69 { pt3dadd( 36.9927, 30.5918, 5.52371, 0.66 ) }
    dend_69 { pt3dadd( 37.4979, 30.6764, 5.91635, 0.66 ) }
    dend_69 { pt3dadd( 38.1916, 30.743, 6.31833, 0.37 ) }
    dend_69 { pt3dadd( 38.9986, 30.7616, 6.65917, 0.52 ) }
    dend_69 { pt3dadd( 39.449, 30.7401, 6.80741, 0.52 ) }
    dend_69 { pt3dadd( 40.2355, 30.6742, 7.04509, 0.66 ) }
    dend_69 { pt3dadd( 40.6772, 30.6226, 7.1715, 0.88 ) }
    dend_69 { pt3dadd( 41.2657, 30.5561, 7.32599, 0.88 ) }
    dend_69 { pt3dadd( 41.9485, 30.5027, 7.53625, 0.66 ) }
    dend_69 { pt3dadd( 42.8034, 30.4813, 7.81567, 0.29 ) }
    dend_69 { pt3dadd( 43.5521, 30.5072, 8.05611, 0.29 ) }
    dend_69 { pt3dadd( 44.6859, 30.6468, 8.40742, 0.88 ) }
    dend_69 { pt3dadd( 44.9999, 30.6995, 8.50337, 0.88 ) }
    dend_69 { pt3dadd( 46.2576, 30.9575, 8.86943, 0.29 ) }
    dend_69 { pt3dadd( 47.2277, 31.1947, 9.12621, 0.29 ) }
    dend_69 { pt3dadd( 48.1552, 31.4543, 9.34665, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 49.2582, 31.7913, 9.58927, 0.29 ) }
    dend_69 { pt3dadd( 50.0603, 32.0422, 9.76214, 0.29 ) }
    dend_69 { pt3dadd( 50.8028, 32.2598, 9.90492, 0.81 ) }
    dend_69 { pt3dadd( 51.3864, 32.4182, 9.98334, 0.81 ) }
    dend_69 { pt3dadd( 51.904, 32.5503, 10.049, 0.81 ) }
    dend_69 { pt3dadd( 52.6884, 32.7327, 10.1441, 0.59 ) }
    dend_69 { pt3dadd( 53.601, 32.9085, 10.2556, 0.29 ) }
    dend_69 { pt3dadd( 54.4064, 33.0921, 10.3651, 0.81 ) }
    dend_69 { pt3dadd( 55.2016, 33.2758, 10.4804, 0.22 ) }
    dend_69 { pt3dadd( 55.9074, 33.4252, 10.5814, 0.22 ) }
    dend_69 { pt3dadd( 56.3547, 33.502, 10.6365, 0.52 ) }
    dend_69 { pt3dadd( 56.9717, 33.5818, 10.6743, 0.22 ) }
    dend_69 { pt3dadd( 63.3333, 34.6002, 14.4977, 0.22 ) }
    dend_69 { pt3dadd( 69.2477, 35.8157, 18.9326, 0.22 ) }
    dend_69 { pt3dadd( 75.998, 35.7501, 22.1817, 0.22 ) }
    dend_69 { pt3dadd( 82.6921, 34.3625, 25.246, 0.22 ) }
    dend_69 { pt3dadd( 89.3728, 33.9065, 28.6055, 0.22 ) }
    dend_69 { pt3dadd( 94.9313, 32.4998, 33.4274, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.9145, 30.5782, -5.38765, 0.81 ) }
    dend_54 { pt3dadd( 31.4129, 30.8343, -4.67367, 0.81 ) }
    dend_54 { pt3dadd( 32.1305, 30.8661, -4.36685, 1.03 ) }
    dend_54 { pt3dadd( 34.0654, 30.8365, -3.73094, 0.96 ) }
    dend_54 { pt3dadd( 35.1337, 30.8234, -3.44247, 0.96 ) }
    dend_54 { pt3dadd( 36.3843, 30.8601, -3.15506, 0.59 ) }
    dend_54 { pt3dadd( 37.2566, 30.9305, -2.9821, 0.66 ) }
    dend_54 { pt3dadd( 38.4316, 31.028, -2.7899, 0.66 ) }
    dend_54 { pt3dadd( 39.8421, 31.2533, -2.6624, 0.59 ) }
    dend_54 { pt3dadd( 40.591, 31.4826, -2.69716, 0.81 ) }
    dend_54 { pt3dadd( 41.5388, 31.938, -2.79194, 0.96 ) }
    dend_54 { pt3dadd( 42.41, 32.4674, -2.90154, 1.25 ) }
    dend_54 { pt3dadd( 43.0385, 32.8677, -2.97482, 1.4 ) }
    dend_54 { pt3dadd( 43.8245, 33.3584, -3.02961, 1.4 ) }
    dend_54 { pt3dadd( 45.1015, 34.0463, -3.02984, 0.59 ) }
    dend_54 { pt3dadd( 45.6214, 34.2363, -3.00436, 0.59 ) }
    dend_54 { pt3dadd( 46.7043, 34.4223, -2.89527, 0.59 ) }
    dend_54 { pt3dadd( 47.8881, 34.4487, -2.72511, 1.03 ) }
    dend_54 { pt3dadd( 48.729, 34.3817, -2.57569, 1.18 ) }
    dend_54 { pt3dadd( 49.4562, 34.2681, -2.39511, 1.18 ) }
    dend_54 { pt3dadd( 50.6233, 34.0216, -2.02388, 0.74 ) }
    dend_54 { pt3dadd( 51.7361, 33.767, -1.587, 0.66 ) }
    dend_54 { pt3dadd( 52.2619, 33.6515, -1.35633, 0.96 ) }
    dend_54 { pt3dadd( 52.9466, 33.5328, -1.05471, 0.96 ) }
    dend_54 { pt3dadd( 54.1757, 33.3811, -0.533573, 1.03 ) }
    dend_54 { pt3dadd( 54.7557, 33.3484, -0.295173, 1.03 ) }
    dend_54 { pt3dadd( 56.3694, 33.4422, 0.311703, 0.59 ) }
    dend_54 { pt3dadd( 57.2464, 33.5908, 0.600864, 0.59 ) }
    dend_54 { pt3dadd( 58.8164, 33.9707, 1.0421, 0.59 ) }
    dend_54 { pt3dadd( 59.5881, 34.2078, 1.21716, 0.81 ) }
    dend_54 { pt3dadd( 60.3134, 34.4904, 1.32957, 0.81 ) }
    dend_54 { pt3dadd( 61.7999, 35.1725, 1.45666, 0.37 ) }
    dend_54 { pt3dadd( 62.7424, 35.625, 1.47368, 0.66 ) }
    dend_54 { pt3dadd( 63.5803, 35.9944, 1.48578, 0.74 ) }
    dend_54 { pt3dadd( 64.1081, 36.1908, 1.487, 0.74 ) }
    dend_54 { pt3dadd( 65.1444, 36.4627, 1.4843, 0.74 ) }
    dend_54 { pt3dadd( 66.26, 36.6017, 1.48652, 0.52 ) }
    dend_54 { pt3dadd( 67.8168, 36.5913, 1.50383, 0.74 ) }
    dend_54 { pt3dadd( 68.9872, 36.5147, 1.55232, 0.88 ) }
    dend_54 { pt3dadd( 69.6242, 36.4668, 1.61485, 0.96 ) }
    dend_54 { pt3dadd( 70.2521, 36.4319, 1.71535, 1.18 ) }
    dend_54 { pt3dadd( 71.1977, 36.4194, 1.93186, 1.18 ) }
    dend_54 { pt3dadd( 71.9064, 36.4839, 2.15725, 0.66 ) }
    dend_54 { pt3dadd( 73.1407, 36.8378, 2.67338, 0.59 ) }
    dend_54 { pt3dadd( 73.9299, 37.2221, 3.14629, 0.59 ) }
    dend_54 { pt3dadd( 74.4426, 37.5448, 3.52248, 0.74 ) }
    dend_54 { pt3dadd( 74.8365, 37.8464, 3.85893, 0.74 ) }
    dend_54 { pt3dadd( 75.2193, 38.1775, 4.22675, 0.74 ) }
    dend_54 { pt3dadd( 75.9391, 38.8535, 4.99834, 0.59 ) }
    dend_54 { pt3dadd( 76.8796, 39.8023, 6.11659, 0.96 ) }
    dend_54 { pt3dadd( 77.3271, 40.2462, 6.6564, 1.25 ) }
    dend_54 { pt3dadd( 77.5677, 40.4814, 6.97134, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 79.3175, 47.1662, 69.8469, 0.29 ) }
    dend_52 { pt3dadd( 87.5495, 52.3724, 78.5961, 0.29 ) }
    dend_52 { pt3dadd( 97.1381, 56.9538, 86.2438, 0.29 ) }
    dend_52 { pt3dadd( 107.414, 62.0829, 92.5299, 0.29 ) }
    dend_52 { pt3dadd( 116.02, 67.4819, 100.789, 0.29 ) }
    dend_52 { pt3dadd( 124.513, 74.2313, 108.119, 0.29 ) }
    dend_52 { pt3dadd( 131.358, 82.3619, 115.765, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 79.3175, 47.1662, 69.8469, 0.29 ) }
    dend_51 { pt3dadd( 84.8265, 49.8006, 74.4842, 0.29 ) }
    dend_51 { pt3dadd( 89.4921, 53.8711, 79.0072, 0.29 ) }
    dend_51 { pt3dadd( 93.2516, 58.5316, 83.7967, 0.29 ) }
    dend_51 { pt3dadd( 97.4296, 61.9633, 89.2339, 0.29 ) }
    dend_51 { pt3dadd( 101.386, 65.8238, 94.5477, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -26.5022, -9.17501, -26.687, 0.74 ) }
    dend_46 { pt3dadd( -28.3733, -11.1506, -27.4818, 0.74 ) }
    dend_46 { pt3dadd( -29.4267, -12.0069, -27.8028, 0.74 ) }
    dend_46 { pt3dadd( -30.3505, -12.6036, -28.0521, 0.74 ) }
    dend_46 { pt3dadd( -31.8989, -13.2279, -28.5558, 0.66 ) }
    dend_46 { pt3dadd( -33.0771, -13.494, -28.9965, 0.66 ) }
    dend_46 { pt3dadd( -34.355, -13.6705, -29.5079, 0.59 ) }
    dend_46 { pt3dadd( -35.2754, -13.6359, -29.8265, 1.25 ) }
    dend_46 { pt3dadd( -36.0432, -13.5354, -30.1133, 1.25 ) }
    dend_46 { pt3dadd( -38.4052, -13.1682, -31.083, 0.66 ) }
    dend_46 { pt3dadd( -39.5739, -13.0167, -31.6053, 0.66 ) }
    dend_46 { pt3dadd( -40.1865, -13.0137, -31.923, 0.96 ) }
    dend_46 { pt3dadd( -41.0547, -13.1793, -32.4389, 0.96 ) }
    dend_46 { pt3dadd( -41.6394, -13.415, -32.9778, 0.96 ) }
    dend_46 { pt3dadd( -42.501, -14.0073, -34.3869, 0.74 ) }
    dend_46 { pt3dadd( -42.943, -14.4566, -35.5021, 0.52 ) }
    dend_46 { pt3dadd( -43.38, -14.9849, -36.9052, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -43.6595, -15.361, -37.947, 1.03 ) }
    dend_46 { pt3dadd( -44.6749, -16.8273, -42.2075, 1.25 ) }
    dend_46 { pt3dadd( -45.3686, -17.8379, -45.2934, 0.66 ) }
    dend_46 { pt3dadd( -45.7185, -18.3148, -46.8136, 0.66 ) }
    dend_46 { pt3dadd( -45.9454, -18.5611, -47.6049, 1.11 ) }
    dend_46 { pt3dadd( -46.1563, -18.7275, -48.0737, 1.33 ) }
    dend_46 { pt3dadd( -46.4665, -18.9408, -48.4708, 1.18 ) }
    dend_46 { pt3dadd( -46.9541, -19.2976, -48.7111, 1.18 ) }
    dend_46 { pt3dadd( -48.0653, -20.1348, -49.0812, 0.59 ) }
    dend_46 { pt3dadd( -49.1932, -21.0729, -49.5248, 0.52 ) }
    dend_46 { pt3dadd( -50.0673, -21.888, -49.9855, 0.52 ) }
    dend_46 { pt3dadd( -50.779, -22.6332, -50.5442, 0.81 ) }
    dend_46 { pt3dadd( -51.4624, -23.4464, -51.3298, 0.66 ) }
    dend_46 { pt3dadd( -52.0968, -24.2587, -52.2333, 0.66 ) }
    dend_46 { pt3dadd( -52.551, -24.8767, -53.0143, 1.33 ) }
    dend_46 { pt3dadd( -52.8539, -25.3042, -53.5795, 1.33 ) }
    dend_46 { pt3dadd( -53.7996, -26.6394, -55.3714, 0.66 ) }
    dend_46 { pt3dadd( -54.6376, -27.7846, -56.8932, 0.52 ) }
    dend_46 { pt3dadd( -55.0418, -28.2901, -57.569, 0.52 ) }
    dend_46 { pt3dadd( -55.575, -28.8929, -58.2554, 0.96 ) }
    dend_46 { pt3dadd( -55.9589, -29.3057, -58.6219, 1.18 ) }
    dend_46 { pt3dadd( -56.2319, -29.6092, -58.793, 1.18 ) }
    dend_46 { pt3dadd( -56.7826, -30.3072, -58.9673, 0.81 ) }
    dend_46 { pt3dadd( -57.5078, -31.3638, -59.0609, 0.74 ) }
    dend_46 { pt3dadd( -58.3726, -32.8033, -59.0834, 0.59 ) }
    dend_46 { pt3dadd( -58.8032, -33.5305, -59.0464, 0.74 ) }
    dend_46 { pt3dadd( -59.3821, -34.4781, -58.9436, 0.74 ) }
    dend_46 { pt3dadd( -60.0208, -35.4242, -58.7979, 0.59 ) }
    dend_46 { pt3dadd( -60.632, -36.2816, -58.6359, 0.44 ) }
    dend_46 { pt3dadd( -61.3181, -37.2366, -58.4409, 0.44 ) }
    dend_46 { pt3dadd( -61.9851, -38.1401, -58.2907, 0.44 ) }
    dend_46 { pt3dadd( -62.6745, -39.1565, -58.158, 0.44 ) }
    dend_46 { pt3dadd( -63.7759, -40.9639, -57.9921, 0.44 ) }
    dend_46 { pt3dadd( -64.0333, -41.4853, -57.9644, 0.96 ) }
    dend_46 { pt3dadd( -64.4472, -42.6865, -58.003, 1.18 ) }
    dend_46 { pt3dadd( -64.6499, -43.715, -58.118, 0.81 ) }
    dend_46 { pt3dadd( -64.7693, -45.3446, -58.475, 0.59 ) }
    dend_46 { pt3dadd( -64.78, -46.0327, -58.7105, 0.74 ) }
    dend_46 { pt3dadd( -64.7931, -47.1261, -59.1673, 0.66 ) }
    dend_46 { pt3dadd( -64.8939, -48.2008, -59.6574, 0.66 ) }
    dend_46 { pt3dadd( -65.0477, -49.0014, -60.0459, 0.81 ) }
    dend_46 { pt3dadd( -65.4584, -50.491, -60.7543, 0.59 ) }
    dend_46 { pt3dadd( -65.895, -51.8128, -61.3508, 0.52 ) }
    dend_46 { pt3dadd( -66.2922, -53.0981, -61.8942, 0.81 ) }
    dend_46 { pt3dadd( -66.6128, -54.3477, -62.3734, 1.4 ) }
    dend_46 { pt3dadd( -66.7153, -55.0921, -62.5774, 1.69 ) }
    dend_46 { pt3dadd( -66.7426, -56.5505, -62.8217, 0.52 ) }
    dend_46 { pt3dadd( -66.7143, -57.7476, -63.0316, 0.44 ) }
    dend_46 { pt3dadd( -66.6596, -58.9284, -63.4068, 0.44 ) }
    dend_46 { pt3dadd( -66.646, -59.7341, -63.8464, 0.29 ) }
    dend_46 { pt3dadd( -66.7464, -61.2132, -64.902, 1.4 ) }
    dend_46 { pt3dadd( -66.7935, -61.5083, -65.1375, 1.4 ) }
    dend_46 { pt3dadd( -67.4986, -64.0992, -67.5871, 0.52 ) }
    dend_46 { pt3dadd( -68.0205, -65.5293, -69.0531, 0.52 ) }
    dend_46 { pt3dadd( -68.3363, -66.2715, -69.8365, 0.52 ) }
    dend_46 { pt3dadd( -68.8183, -67.3794, -71.0002, 0.74 ) }
    dend_46 { pt3dadd( -69.1309, -68.1247, -71.7574, 0.88 ) }
    dend_46 { pt3dadd( -69.7426, -69.8441, -73.2724, 0.44 ) }
    dend_46 { pt3dadd( -69.991, -70.7261, -73.8834, 0.59 ) }
    dend_46 { pt3dadd( -70.2888, -71.725, -74.5206, 0.59 ) }
    dend_46 { pt3dadd( -70.6579, -72.743, -75.2032, 0.37 ) }
    dend_46 { pt3dadd( -70.8995, -73.3567, -75.634, 0.59 ) }
    dend_46 { pt3dadd( -71.3699, -74.4581, -76.3877, 0.81 ) }
    dend_46 { pt3dadd( -71.8413, -75.4838, -76.9865, 1.18 ) }
    dend_46 { pt3dadd( -72.1585, -76.1174, -77.3605, 1.18 ) }
    dend_46 { pt3dadd( -73.0812, -77.6977, -78.3805, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -26.5022, -9.17501, -26.687, 0.81 ) }
    dend_45 { pt3dadd( -26.8309, -7.6116, -26.8315, 0.81 ) }
    dend_45 { pt3dadd( -27.0215, -7.03235, -26.8384, 0.81 ) }
    dend_45 { pt3dadd( -27.3583, -6.33301, -26.8061, 0.81 ) }
    dend_45 { pt3dadd( -27.761, -5.78479, -26.7595, 0.88 ) }
    dend_45 { pt3dadd( -28.2867, -5.34882, -26.7271, 0.66 ) }
    dend_45 { pt3dadd( -29.2949, -4.74987, -26.7156, 0.59 ) }
    dend_45 { pt3dadd( -30.046, -4.58103, -26.7368, 0.59 ) }
    dend_45 { pt3dadd( -30.7365, -4.55727, -26.8756, 0.59 ) }
    dend_45 { pt3dadd( -31.6647, -4.65506, -27.2093, 0.74 ) }
    dend_45 { pt3dadd( -32.6652, -4.85993, -27.7574, 1.03 ) }
    dend_45 { pt3dadd( -33.0149, -4.94489, -27.9878, 1.62 ) }
    dend_45 { pt3dadd( -33.487, -5.05806, -28.3394, 1.92 ) }
    dend_45 { pt3dadd( -34.975, -5.36344, -29.4327, 0.88 ) }
    dend_45 { pt3dadd( -35.5443, -5.46153, -29.8452, 0.66 ) }
    dend_45 { pt3dadd( -36.3801, -5.5966, -30.4232, 0.66 ) }
    dend_45 { pt3dadd( -37.5083, -5.77077, -31.1608, 0.66 ) }
    dend_45 { pt3dadd( -38.0085, -5.83454, -31.4741, 0.66 ) }
    dend_45 { pt3dadd( -39.0907, -5.90292, -32.095, 0.66 ) }
    dend_45 { pt3dadd( -39.7742, -5.89354, -32.4544, 0.44 ) }
    dend_45 { pt3dadd( -40.6263, -5.82629, -32.9366, 0.44 ) }
    dend_45 { pt3dadd( -41.2416, -5.73892, -33.3265, 0.44 ) }
    dend_45 { pt3dadd( -41.9542, -5.59695, -33.8728, 0.66 ) }
    dend_45 { pt3dadd( -42.4467, -5.48042, -34.2843, 0.66 ) }
    dend_45 { pt3dadd( -43.0223, -5.30207, -34.7793, 0.66 ) }
    dend_45 { pt3dadd( -43.5165, -5.11475, -35.1684, 0.66 ) }
    dend_45 { pt3dadd( -44.0743, -4.84452, -35.57, 0.44 ) }
    dend_45 { pt3dadd( -44.4591, -4.63016, -35.8388, 0.74 ) }
    dend_45 { pt3dadd( -45.0299, -4.29144, -36.223, 0.74 ) }
    dend_45 { pt3dadd( -45.5375, -3.98303, -36.5618, 0.74 ) }
    dend_45 { pt3dadd( -45.9702, -3.71969, -36.8383, 0.74 ) }
    dend_45 { pt3dadd( -46.4671, -3.42289, -37.1424, 0.37 ) }
    dend_45 { pt3dadd( -47.219, -3.08323, -37.6127, 0.37 ) }
    dend_45 { pt3dadd( -47.5545, -3.01706, -37.8323, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -47.9208, -3.04222, -38.098, 0.88 ) }
    dend_45 { pt3dadd( -48.4188, -3.14825, -38.4683, 1.18 ) }
    dend_45 { pt3dadd( -48.8267, -3.26465, -38.803, 1.33 ) }
    dend_45 { pt3dadd( -49.8676, -3.60473, -39.7241, 0.44 ) }
    dend_45 { pt3dadd( -50.6067, -3.82866, -40.4425, 0.44 ) }
    dend_45 { pt3dadd( -51.1814, -3.95193, -41.0962, 0.44 ) }
    dend_45 { pt3dadd( -51.6795, -3.9696, -41.7418, 0.88 ) }
    dend_45 { pt3dadd( -52.1866, -3.84165, -42.467, 1.03 ) }
    dend_45 { pt3dadd( -52.3814, -3.71164, -42.7582, 1.03 ) }
    dend_45 { pt3dadd( -52.858, -3.15613, -43.4045, 0.44 ) }
    dend_45 { pt3dadd( -53.1417, -2.78158, -43.7584, 0.44 ) }
    dend_45 { pt3dadd( -53.4892, -2.36928, -44.097, 0.44 ) }
    dend_45 { pt3dadd( -53.7898, -2.09574, -44.3467, 0.59 ) }
    dend_45 { pt3dadd( -54.3118, -1.75158, -44.699, 0.59 ) }
    dend_45 { pt3dadd( -54.8655, -1.51573, -45.038, 0.74 ) }
    dend_45 { pt3dadd( -55.9173, -1.29877, -45.6161, 0.37 ) }
    dend_45 { pt3dadd( -56.5934, -1.2736, -45.9889, 0.37 ) }
    dend_45 { pt3dadd( -57.6132, -1.38492, -46.5604, 0.59 ) }
    dend_45 { pt3dadd( -58.0187, -1.48092, -46.7974, 0.88 ) }
    dend_45 { pt3dadd( -58.8101, -1.77196, -47.2994, 0.66 ) }
    dend_45 { pt3dadd( -59.3475, -2.01398, -47.6545, 0.74 ) }
    dend_45 { pt3dadd( -59.9249, -2.30692, -48.029, 0.59 ) }
    dend_45 { pt3dadd( -60.4221, -2.57876, -48.3725, 0.52 ) }
    dend_45 { pt3dadd( -60.8871, -2.83014, -48.6943, 0.88 ) }
    dend_45 { pt3dadd( -61.7328, -3.23045, -49.3102, 0.59 ) }
    dend_45 { pt3dadd( -62.2192, -3.41387, -49.6792, 0.44 ) }
    dend_45 { pt3dadd( -62.7512, -3.56348, -50.1003, 1.03 ) }
    dend_45 { pt3dadd( -63.1192, -3.63158, -50.3942, 1.33 ) }
    dend_45 { pt3dadd( -63.3455, -3.65155, -50.569, 1.4 ) }
    dend_45 { pt3dadd( -64.2998, -3.67474, -51.2522, 0.44 ) }
    dend_45 { pt3dadd( -64.6867, -3.67524, -51.5136, 0.44 ) }
    dend_45 { pt3dadd( -65.259, -3.66117, -51.8784, 0.44 ) }
    dend_45 { pt3dadd( -65.8624, -3.62575, -52.2368, 0.44 ) }
    dend_45 { pt3dadd( -66.8404, -3.55992, -52.8138, 0.59 ) }
    dend_45 { pt3dadd( -67.5112, -3.51778, -53.2654, 0.88 ) }
    dend_45 { pt3dadd( -68.1121, -3.464, -53.7769, 1.11 ) }
    dend_45 { pt3dadd( -68.8722, -3.37357, -54.5296, 0.52 ) }
    dend_45 { pt3dadd( -69.406, -3.2789, -55.1208, 0.52 ) }
    dend_45 { pt3dadd( -69.8441, -3.18031, -55.6407, 1.03 ) }
    dend_45 { pt3dadd( -70.8074, -2.94695, -56.8677, 1.25 ) }
    dend_45 { pt3dadd( -71.9554, -2.71718, -58.3152, 0.52 ) }
    dend_45 { pt3dadd( -72.3536, -2.65487, -58.8014, 0.59 ) }
    dend_45 { pt3dadd( -72.8941, -2.59396, -59.4194, 0.59 ) }
    dend_45 { pt3dadd( -73.7598, -2.49447, -60.2887, 0.44 ) }
    dend_45 { pt3dadd( -74.3645, -2.41265, -60.7881, 0.44 ) }
    dend_45 { pt3dadd( -75.2605, -2.24193, -61.4042, 0.44 ) }
    dend_45 { pt3dadd( -75.7355, -2.12206, -61.7222, 0.44 ) }
    dend_45 { pt3dadd( -76.3611, -1.88828, -62.2728, 0.66 ) }
    dend_45 { pt3dadd( -76.779, -1.65583, -62.7614, 0.88 ) }
    dend_45 { pt3dadd( -76.9854, -1.4838, -63.0612, 0.88 ) }
    dend_45 { pt3dadd( -77.5423, -0.858831, -63.9956, 0.52 ) }
    dend_45 { pt3dadd( -77.8597, -0.400665, -64.6088, 0.52 ) }
    dend_45 { pt3dadd( -78.2706, 0.31796, -65.573, 0.81 ) }
    dend_45 { pt3dadd( -78.5323, 0.878692, -66.3023, 0.44 ) }
    dend_45 { pt3dadd( -78.6697, 1.22465, -66.751, 0.44 ) }
    dend_45 { pt3dadd( -78.8004, 1.67345, -67.3082, 0.74 ) }
    dend_45 { pt3dadd( -78.8562, 2.01228, -67.6838, 0.96 ) }
    dend_45 { pt3dadd( -78.8906, 2.89313, -68.4986, 0.66 ) }
    dend_45 { pt3dadd( -78.8873, 3.44413, -68.9853, 0.44 ) }
    dend_45 { pt3dadd( -78.8936, 4.04179, -69.5486, 0.44 ) }
    dend_45 { pt3dadd( -78.9508, 4.6056, -70.1514, 0.44 ) }
    dend_45 { pt3dadd( -79.0082, 4.79874, -70.3894, 0.44 ) }
    dend_45 { pt3dadd( -79.2848, 5.2026, -70.9523, 0.96 ) }
    dend_45 { pt3dadd( -80.0681, 5.65846, -71.7759, 0.66 ) }
    dend_45 { pt3dadd( -80.6204, 5.85313, -72.2296, 0.96 ) }
    dend_45 { pt3dadd( -80.8934, 5.93146, -72.4115, 1.25 ) }
    dend_45 { pt3dadd( -81.2192, 6.01667, -72.6055, 1.25 ) }
    dend_45 { pt3dadd( -81.7346, 6.16754, -72.9037, 1.25 ) }
    dend_45 { pt3dadd( -82.6076, 6.51775, -73.4282, 0.37 ) }
    dend_45 { pt3dadd( -83.1107, 6.84891, -73.7349, 0.37 ) }
    dend_45 { pt3dadd( -83.4284, 7.12698, -73.9703, 0.66 ) }
    dend_45 { pt3dadd( -83.6693, 7.35668, -74.149, 0.81 ) }
    dend_45 { pt3dadd( -84.0463, 7.72346, -74.4027, 0.81 ) }
    dend_45 { pt3dadd( -84.6361, 8.29868, -74.7236, 0.44 ) }
    dend_45 { pt3dadd( -85.0521, 8.6728, -74.8752, 0.44 ) }
    dend_45 { pt3dadd( -85.8354, 9.28509, -75.0682, 0.44 ) }
    dend_45 { pt3dadd( -86.715, 9.93437, -75.2214, 0.44 ) }
    dend_45 { pt3dadd( -87.3869, 10.4274, -75.3009, 0.66 ) }
    dend_45 { pt3dadd( -88.0901, 10.9402, -75.3461, 0.96 ) }
    dend_45 { pt3dadd( -88.8052, 11.4567, -75.3389, 0.59 ) }
    dend_45 { pt3dadd( -89.4116, 11.9117, -75.3099, 0.44 ) }
    dend_45 { pt3dadd( -90.0358, 12.3905, -75.2744, 0.44 ) }
    dend_45 { pt3dadd( -90.6404, 12.8498, -75.2796, 0.44 ) }
    dend_45 { pt3dadd( -91.1714, 13.2021, -75.3486, 0.44 ) }
    dend_45 { pt3dadd( -91.7977, 13.5175, -75.5198, 0.74 ) }
    dend_45 { pt3dadd( -92.114, 13.6328, -75.6443, 0.74 ) }
    dend_45 { pt3dadd( -93.0334, 13.8665, -76.0455, 0.52 ) }
    dend_45 { pt3dadd( -93.4559, 13.9479, -76.2494, 0.59 ) }
    dend_45 { pt3dadd( -94.2402, 14.0806, -76.6565, 0.44 ) }
    dend_45 { pt3dadd( -94.8216, 14.2028, -76.9742, 0.44 ) }
    dend_45 { pt3dadd( -95.5333, 14.4215, -77.4148, 0.37 ) }
    dend_45 { pt3dadd( -96.2331, 14.7124, -77.8612, 0.52 ) }
    dend_45 { pt3dadd( -96.7745, 15.0043, -78.2235, 1.11 ) }
    dend_45 { pt3dadd( -97.1873, 15.2668, -78.5391, 1.25 ) }
    dend_45 { pt3dadd( -97.6642, 15.6043, -78.9676, 0.37 ) }
    dend_45 { pt3dadd( -98.3383, 16.0894, -79.6661, 0.37 ) }
    dend_45 { pt3dadd( -98.7948, 16.3922, -80.1875, 0.29 ) }
    dend_45 { pt3dadd( -99.1573, 16.6093, -80.6458, 0.29 ) }
    dend_45 { pt3dadd( -99.8081, 16.9828, -81.5165, 0.59 ) }
    dend_45 { pt3dadd( -100.318, 17.2895, -82.2329, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -100.604, 17.474, -82.6417, 0.29 ) }
    dend_45 { pt3dadd( -100.829, 17.6405, -82.9398, 0.37 ) }
    dend_45 { pt3dadd( -101.18, 17.9535, -83.3839, 0.37 ) }
    dend_45 { pt3dadd( -101.661, 18.4353, -83.8991, 0.44 ) }
    dend_45 { pt3dadd( -102.068, 18.8754, -84.235, 0.44 ) }
    dend_45 { pt3dadd( -102.461, 19.3034, -84.4925, 0.44 ) }
    dend_45 { pt3dadd( -102.944, 19.7867, -84.7737, 0.37 ) }
    dend_45 { pt3dadd( -103.145, 19.9609, -84.8759, 0.37 ) }
    dend_45 { pt3dadd( -103.678, 20.338, -85.0957, 0.88 ) }
    dend_45 { pt3dadd( -103.995, 20.5245, -85.2088, 1.11 ) }
    dend_45 { pt3dadd( -104.568, 20.8359, -85.4043, 1.11 ) }
    dend_45 { pt3dadd( -105.466, 21.347, -85.7057, 0.37 ) }
    dend_45 { pt3dadd( -106.156, 21.7811, -85.9358, 0.37 ) }
    dend_45 { pt3dadd( -106.545, 22.0707, -86.0645, 0.66 ) }
    dend_45 { pt3dadd( -107.103, 22.6189, -86.2912, 0.66 ) }
    dend_45 { pt3dadd( -107.518, 23.152, -86.5045, 0.37 ) }
    dend_45 { pt3dadd( -107.843, 23.7051, -86.725, 0.52 ) }
    dend_45 { pt3dadd( -107.953, 23.9457, -86.8213, 0.66 ) }
    dend_45 { pt3dadd( -108.106, 24.3358, -86.9731, 0.66 ) }
    dend_45 { pt3dadd( -108.519, 25.414, -87.3794, 0.37 ) }
    dend_45 { pt3dadd( -108.724, 25.8864, -87.534, 0.37 ) }
    dend_45 { pt3dadd( -108.981, 26.2967, -87.6207, 0.37 ) }
    dend_45 { pt3dadd( -109.279, 26.6358, -87.6392, 0.88 ) }
    dend_45 { pt3dadd( -109.785, 27.0921, -87.603, 0.81 ) }
    dend_45 { pt3dadd( -110.043, 27.2867, -87.5665, 0.81 ) }
    dend_45 { pt3dadd( -110.703, 27.736, -87.4422, 0.29 ) }
    dend_45 { pt3dadd( -111.573, 28.3084, -87.2698, 0.29 ) }
    dend_45 { pt3dadd( -112.11, 28.6977, -87.1208, 0.52 ) }
    dend_45 { pt3dadd( -112.752, 29.213, -86.9297, 0.44 ) }
    dend_45 { pt3dadd( -113.062, 29.4778, -86.8369, 0.44 ) }
    dend_45 { pt3dadd( -113.467, 29.8503, -86.6983, 0.81 ) }
    dend_45 { pt3dadd( -113.933, 30.3399, -86.5202, 0.81 ) }
    dend_45 { pt3dadd( -114.78, 31.3858, -86.1546, 0.29 ) }
    dend_45 { pt3dadd( -115.113, 31.831, -86.0012, 0.44 ) }
    dend_45 { pt3dadd( -115.426, 32.2601, -85.8342, 0.29 ) }
    dend_45 { pt3dadd( -115.776, 32.7179, -85.6553, 0.29 ) }
    dend_45 { pt3dadd( -116.244, 33.2877, -85.4468, 0.29 ) }
    dend_45 { pt3dadd( -116.609, 33.7003, -85.3171, 0.29 ) }
    dend_45 { pt3dadd( -117.048, 34.1523, -85.1964, 0.59 ) }
    dend_45 { pt3dadd( -117.897, 35.0042, -84.9492, 0.22 ) }
    dend_45 { pt3dadd( -118.446, 35.5452, -84.7908, 0.22 ) }
    dend_45 { pt3dadd( -118.743, 35.813, -84.703, 0.52 ) }
    dend_45 { pt3dadd( -119.025, 36.0322, -84.6112, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -85.3529, -50.0713, 81.2183, 0.29 ) }
    dend_43 { pt3dadd( -92.4313, -54.8295, 88.0954, 0.29 ) }
    dend_43 { pt3dadd( -97.826, -61.1093, 95.2718, 0.29 ) }
    dend_43 { pt3dadd( -102.9, -67.2102, 102.826, 0.29 ) }
    dend_43 { pt3dadd( -107.324, -73.912, 110.28, 0.29 ) }
    dend_43 { pt3dadd( -110.192, -80.969, 118.155, 0.29 ) }
    dend_43 { pt3dadd( -113.95, -88.0396, 125.632, 0.29 ) }
    dend_43 { pt3dadd( -117.735, -95.134, 133.074, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -85.3529, -50.0713, 81.2183, 0.29 ) }
    dend_42 { pt3dadd( -93.1983, -54.6856, 88.0953, 0.29 ) }
    dend_42 { pt3dadd( -100.491, -60.7759, 94.4082, 0.29 ) }
    dend_42 { pt3dadd( -106.92, -67.1609, 101.339, 0.29 ) }
    dend_42 { pt3dadd( -112.417, -73.4396, 109.117, 0.29 ) }
    dend_42 { pt3dadd( -117.184, -80.2908, 116.893, 0.29 ) }
    dend_42 { pt3dadd( -120.474, -88.0894, 124.541, 0.29 ) }
    dend_42 { pt3dadd( -124.922, -95.0141, 132.44, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.10915, -56.796, 16.5432, 0.66 ) }
    dend_34 { pt3dadd( -10.0505, -59.2675, 15.6201, 0.66 ) }
    dend_34 { pt3dadd( -10.29, -59.9242, 15.3992, 1.03 ) }
    dend_34 { pt3dadd( -10.5259, -60.613, 15.2519, 1.03 ) }
    dend_34 { pt3dadd( -10.9524, -61.9324, 15.0946, 1.03 ) }
    dend_34 { pt3dadd( -11.237, -62.9346, 15.0459, 1.03 ) }
    dend_34 { pt3dadd( -11.5352, -64.1621, 15.0578, 0.81 ) }
    dend_34 { pt3dadd( -11.7203, -65.2665, 15.2573, 0.81 ) }
    dend_34 { pt3dadd( -11.8277, -66.8941, 15.6746, 1.4 ) }
    dend_34 { pt3dadd( -11.8153, -67.5944, 15.8992, 1.62 ) }
    dend_34 { pt3dadd( -11.7116, -68.6434, 16.3243, 1.4 ) }
    dend_34 { pt3dadd( -11.5915, -69.3368, 16.6254, 1.92 ) }
    dend_34 { pt3dadd( -11.365, -70.2799, 17.042, 1.4 ) }
    dend_34 { pt3dadd( -10.9396, -71.7098, 17.6774, 1.69 ) }
    dend_34 { pt3dadd( -10.6259, -72.6653, 18.0528, 1.11 ) }
    dend_34 { pt3dadd( -10.2078, -73.9471, 18.5234, 0.81 ) }
    dend_34 { pt3dadd( -10.0243, -74.5523, 18.7285, 1.11 ) }
    dend_34 { pt3dadd( -9.8321, -75.2746, 18.9481, 1.25 ) }
    dend_34 { pt3dadd( -9.48635, -76.8822, 19.3906, 0.96 ) }
    dend_34 { pt3dadd( -9.38149, -77.6956, 19.5824, 0.74 ) }
    dend_34 { pt3dadd( -9.36026, -78.4733, 19.7356, 0.81 ) }
    dend_34 { pt3dadd( -9.50648, -79.6529, 19.8973, 0.52 ) }
    dend_34 { pt3dadd( -9.72576, -80.4957, 19.9644, 0.88 ) }
    dend_34 { pt3dadd( -9.99722, -81.2061, 19.9492, 0.88 ) }
    dend_34 { pt3dadd( -10.3727, -81.9854, 19.8158, 0.88 ) }
    dend_34 { pt3dadd( -10.7228, -82.6767, 19.6333, 0.66 ) }
    dend_34 { pt3dadd( -11.0673, -83.4191, 19.3478, 0.66 ) }
    dend_34 { pt3dadd( -11.463, -84.4676, 18.7691, 0.88 ) }
    dend_34 { pt3dadd( -11.6674, -85.1684, 18.2973, 1.33 ) }
    dend_34 { pt3dadd( -11.7832, -85.7071, 17.9114, 1.47 ) }
    dend_34 { pt3dadd( -11.8715, -86.2149, 17.5473, 1.62 ) }
    dend_34 { pt3dadd( -12.0469, -87.2515, 16.8531, 0.74 ) }
    dend_34 { pt3dadd( -12.257, -88.4296, 16.21, 0.74 ) }
    dend_34 { pt3dadd( -12.466, -89.3472, 15.858, 0.74 ) }
    dend_34 { pt3dadd( -12.6595, -90.078, 15.7086, 0.74 ) }
    dend_34 { pt3dadd( -12.932, -91.0882, 15.6541, 0.66 ) }
    dend_34 { pt3dadd( -13.1778, -92.1407, 15.7465, 0.66 ) }
    dend_34 { pt3dadd( -13.4442, -93.665, 16.0807, 0.96 ) }
    dend_34 { pt3dadd( -13.5157, -94.4524, 16.32, 0.88 ) }
    dend_34 { pt3dadd( -13.5091, -95.1605, 16.5503, 0.88 ) }
    dend_34 { pt3dadd( -13.3695, -96.4857, 16.9623, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -13.1371, -97.7069, 17.3181, 1.18 ) }
    dend_34 { pt3dadd( -13.0055, -98.3052, 17.4522, 1.62 ) }
    dend_34 { pt3dadd( -12.8691, -98.9789, 17.5489, 1.62 ) }
    dend_34 { pt3dadd( -12.7121, -99.9298, 17.661, 0.96 ) }
    dend_34 { pt3dadd( -12.6278, -100.666, 17.7374, 0.96 ) }
    dend_34 { pt3dadd( -12.5799, -101.777, 17.839, 0.66 ) }
    dend_34 { pt3dadd( -12.6657, -103.234, 17.943, 0.52 ) }
    dend_34 { pt3dadd( -12.8425, -104.542, 18.0637, 0.59 ) }
    dend_34 { pt3dadd( -13.1677, -106.044, 18.2353, 0.74 ) }
    dend_34 { pt3dadd( -13.285, -106.434, 18.2925, 1.11 ) }
    dend_34 { pt3dadd( -13.5838, -107.178, 18.4569, 1.25 ) }
    dend_34 { pt3dadd( -14.2041, -108.368, 18.8121, 0.88 ) }
    dend_34 { pt3dadd( -14.605, -108.96, 19.0592, 0.66 ) }
    dend_34 { pt3dadd( -15.036, -109.481, 19.3239, 0.66 ) }
    dend_34 { pt3dadd( -15.4629, -109.941, 19.5682, 0.59 ) }
    dend_34 { pt3dadd( -16.3141, -110.869, 20.0139, 0.59 ) }
    dend_34 { pt3dadd( -16.7939, -111.403, 20.2293, 0.44 ) }
    dend_34 { pt3dadd( -17.372, -112.095, 20.4286, 0.44 ) }
    dend_34 { pt3dadd( -17.855, -112.741, 20.5289, 0.74 ) }
    dend_34 { pt3dadd( -18.2476, -113.34, 20.5709, 0.74 ) }
    dend_34 { pt3dadd( -18.5879, -113.912, 20.5705, 0.66 ) }
    dend_34 { pt3dadd( -19.0313, -114.748, 20.5034, 1.03 ) }
    dend_34 { pt3dadd( -19.3648, -115.414, 20.4522, 1.4 ) }
    dend_34 { pt3dadd( -19.7229, -116.163, 20.4003, 1.4 ) }
    dend_34 { pt3dadd( -20.0371, -116.812, 20.3616, 1.47 ) }
    dend_34 { pt3dadd( -20.5347, -117.839, 20.3188, 0.74 ) }
    dend_34 { pt3dadd( -20.921, -118.639, 20.2778, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.10915, -56.796, 16.5432, 0.44 ) }
    dend_33 { pt3dadd( -8.26247, -57.552, 17.2379, 0.44 ) }
    dend_33 { pt3dadd( -7.76967, -58.2045, 17.7207, 0.44 ) }
    dend_33 { pt3dadd( -7.43595, -59.0482, 18.1905, 0.37 ) }
    dend_33 { pt3dadd( -7.09436, -60.6927, 18.8807, 0.59 ) }
    dend_33 { pt3dadd( -7.05185, -61.3337, 19.087, 0.52 ) }
    dend_33 { pt3dadd( -7.08007, -62.1572, 19.3102, 0.44 ) }
    dend_33 { pt3dadd( -7.35355, -63.4817, 19.6586, 0.44 ) }
    dend_33 { pt3dadd( -7.74222, -64.5952, 19.9838, 0.44 ) }
    dend_33 { pt3dadd( -8.07356, -65.2698, 20.2293, 0.59 ) }
    dend_33 { pt3dadd( -8.57816, -66.0418, 20.642, 0.59 ) }
    dend_33 { pt3dadd( -9.11533, -66.6964, 21.2828, 0.37 ) }
    dend_33 { pt3dadd( -9.81947, -67.4256, 22.3796, 0.59 ) }
    dend_33 { pt3dadd( -10.4225, -67.9944, 23.5092, 0.88 ) }
    dend_33 { pt3dadd( -10.8005, -68.3142, 24.2549, 0.81 ) }
    dend_33 { pt3dadd( -11.5688, -68.9251, 25.7607, 1.03 ) }
    dend_33 { pt3dadd( -12.3485, -69.5362, 27.2478, 0.88 ) }
    dend_33 { pt3dadd( -13.0681, -70.1204, 28.4837, 0.44 ) }
    dend_33 { pt3dadd( -13.6714, -70.6857, 29.366, 0.44 ) }
    dend_33 { pt3dadd( -14.0726, -71.1287, 29.8597, 0.66 ) }
    dend_33 { pt3dadd( -14.6435, -71.7815, 30.3803, 0.66 ) }
    dend_33 { pt3dadd( -15.1787, -72.3605, 30.6669, 0.66 ) }
    dend_33 { pt3dadd( -15.9808, -73.174, 30.8955, 0.66 ) }
    dend_33 { pt3dadd( -16.6825, -73.8713, 31.0398, 1.33 ) }
    dend_33 { pt3dadd( -16.9972, -74.2, 31.0813, 1.47 ) }
    dend_33 { pt3dadd( -17.6092, -74.8507, 31.152, 1.03 ) }
    dend_33 { pt3dadd( -18.3759, -75.6879, 31.2468, 0.81 ) }
    dend_33 { pt3dadd( -19.0223, -76.395, 31.3426, 0.74 ) }
    dend_33 { pt3dadd( -19.7912, -77.2436, 31.4855, 0.52 ) }
    dend_33 { pt3dadd( -20.3312, -77.8717, 31.6072, 0.44 ) }
    dend_33 { pt3dadd( -23.6909, -85.5109, 37.3354, 0.44 ) }
    dend_33 { pt3dadd( -25.8698, -93.7887, 42.7378, 0.44 ) }
    dend_33 { pt3dadd( -28.9401, -101.998, 47.8008, 0.44 ) }
    dend_33 { pt3dadd( -34.1321, -109.584, 52.038, 0.44 ) }
    dend_33 { pt3dadd( -39.2093, -116.007, 57.9897, 0.44 ) }
    dend_33 { pt3dadd( -43.2939, -122.53, 64.5638, 0.44 ) }
    dend_33 { pt3dadd( -47.6397, -129.286, 70.7221, 0.44 ) }
    dend_33 { pt3dadd( -53.8732, -135.477, 75.7497, 0.44 ) }
    dend_33 { pt3dadd( -61.7962, -140.774, 79.1597, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.7787, -17.22, -3.20759, 1.47 ) }
    dend_17 { pt3dadd( 3.15019, -19.0292, -3.567, 1.47 ) }
    dend_17 { pt3dadd( 2.51945, -21.3512, -3.86566, 1.33 ) }
    dend_17 { pt3dadd( 2.11895, -23.1974, -3.9785, 1.55 ) }
    dend_17 { pt3dadd( 1.86959, -24.6915, -3.95537, 1.55 ) }
    dend_17 { pt3dadd( 1.67798, -26.2357, -3.75284, 1.77 ) }
    dend_17 { pt3dadd( 1.4786, -28.207, -3.29326, 1.77 ) }
    dend_17 { pt3dadd( 1.41344, -29.4178, -2.8478, 2.14 ) }
    dend_17 { pt3dadd( 1.37248, -30.4257, -2.36567, 2.58 ) }
    dend_17 { pt3dadd( 1.30863, -31.7143, -1.71184, 2.36 ) }
    dend_17 { pt3dadd( 1.1326, -34.0839, -0.621841, 1.77 ) }
    dend_17 { pt3dadd( 0.918006, -36.1361, 0.109441, 1.47 ) }
    dend_17 { pt3dadd( 0.714762, -37.8649, 0.49438, 1.18 ) }
    dend_17 { pt3dadd( 0.510158, -39.7075, 0.708728, 1.11 ) }
    dend_17 { pt3dadd( 0.353425, -41.351, 0.726112, 1.33 ) }
    dend_17 { pt3dadd( 0.196557, -43.5987, 0.499519, 1.25 ) }
    dend_17 { pt3dadd( 0.151703, -45.5688, 0.115139, 1.47 ) }
    dend_17 { pt3dadd( 0.203509, -47.3335, -0.295892, 1.62 ) }
    dend_17 { pt3dadd( 0.286874, -48.6572, -0.614554, 2.14 ) }
    dend_17 { pt3dadd( 0.3413, -49.5704, -0.81661, 2.58 ) }
    dend_17 { pt3dadd( 0.370163, -50.8829, -1.05034, 2.43 ) }
    dend_17 { pt3dadd( 0.300953, -52.996, -1.33318, 2.14 ) }
    dend_17 { pt3dadd( 0.133702, -54.7037, -1.5168, 1.92 ) }
    dend_17 { pt3dadd( -0.161769, -56.3994, -1.66018, 1.47 ) }
    dend_17 { pt3dadd( -0.699449, -58.4974, -1.81042, 1.25 ) }
    dend_17 { pt3dadd( -1.2637, -60.2289, -1.86282, 1.11 ) }
    dend_17 { pt3dadd( -1.77466, -61.5246, -1.83232, 1.4 ) }
    dend_17 { pt3dadd( -2.14516, -62.3575, -1.77818, 1.55 ) }
    dend_17 { pt3dadd( -2.72158, -63.6287, -1.63711, 1.18 ) }
    dend_17 { pt3dadd( -3.25337, -64.924, -1.41803, 0.88 ) }
    dend_17 { pt3dadd( -3.71867, -66.285, -1.19738, 1.18 ) }
    dend_17 { pt3dadd( -4.07044, -67.6152, -1.00031, 1.03 ) }
    dend_17 { pt3dadd( -4.35035, -68.8664, -0.813101, 1.03 ) }
    dend_17 { pt3dadd( -4.68087, -70.7206, -0.56647, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -4.81677, -71.898, -0.444967, 1.77 ) }
    dend_17 { pt3dadd( -4.92667, -73.7507, -0.34233, 1.77 ) }
    dend_17 { pt3dadd( -4.97763, -75.1787, -0.37856, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.7787, -17.22, -3.20759, 1.77 ) }
    dend_1 { pt3dadd( 4.27914, -19.5435, -3.76663, 1.77 ) }
    dend_1 { pt3dadd( 4.50429, -20.7065, -4.02473, 1.99 ) }
    dend_1 { pt3dadd( 4.76319, -22.0438, -4.32152, 1.99 ) }
    dend_1 { pt3dadd( 5.11644, -23.8685, -4.72647, 3.17 ) }
    dend_1 { pt3dadd( 5.27557, -24.6905, -4.90888, 3.76 ) }
    dend_1 { pt3dadd( 5.54785, -26.097, -5.22102, 4.2 ) }
    dend_1 { pt3dadd( 5.70309, -27.3418, -5.43251, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205347 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205347 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205347 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -67.277, 129.722, -35.6907, 0.29 ) }
    dend_85 { pt3dadd( -67.542, 130.639, -35.7596, 0.29 ) }
    dend_85 { pt3dadd( -67.7877, 132.064, -36.1168, 0.29 ) }
    dend_85 { pt3dadd( -67.9182, 133.357, -36.4842, 0.29 ) }
    dend_85 { pt3dadd( -67.9715, 134.761, -36.91, 0.29 ) }
    dend_85 { pt3dadd( -67.9654, 135.775, -37.2419, 0.29 ) }
    dend_85 { pt3dadd( -67.9315, 137.446, -37.7835, 0.29 ) }
    dend_85 { pt3dadd( -67.751, 140.471, -38.885, 0.29 ) }
    dend_85 { pt3dadd( -67.6758, 141.407, -39.2527, 0.37 ) }
    dend_85 { pt3dadd( -67.5883, 142.538, -39.7249, 0.37 ) }
    dend_85 { pt3dadd( -67.4965, 143.935, -40.3507, 0.37 ) }
    dend_85 { pt3dadd( -67.4149, 145.085, -40.8712, 0.22 ) }
    dend_85 { pt3dadd( -67.3484, 146.28, -41.3926, 0.22 ) }
    dend_85 { pt3dadd( -67.4101, 147.551, -41.8447, 1.03 ) }
    dend_85 { pt3dadd( -67.4455, 147.777, -41.9355, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -67.277, 129.722, -35.6907, 0.52 ) }
    dend_80 { pt3dadd( -68.6975, 130.839, -35.293, 0.52 ) }
    dend_80 { pt3dadd( -69.3578, 131.439, -35.0619, 0.52 ) }
    dend_80 { pt3dadd( -70.0205, 132.145, -34.8084, 0.44 ) }
    dend_80 { pt3dadd( -70.3151, 132.511, -34.6905, 0.59 ) }
    dend_80 { pt3dadd( -70.6288, 132.962, -34.5574, 0.59 ) }
    dend_80 { pt3dadd( -71.2036, 133.828, -34.2941, 0.37 ) }
    dend_80 { pt3dadd( -71.8671, 134.97, -34.0198, 0.37 ) }
    dend_80 { pt3dadd( -72.2677, 135.71, -33.8266, 0.37 ) }
    dend_80 { pt3dadd( -72.6745, 136.454, -33.6243, 0.37 ) }
    dend_80 { pt3dadd( -73.1308, 137.266, -33.3821, 0.29 ) }
    dend_80 { pt3dadd( -73.5598, 137.989, -33.1541, 0.29 ) }
    dend_80 { pt3dadd( -74.0596, 138.742, -32.9073, 0.81 ) }
    dend_80 { pt3dadd( -74.296, 139.039, -32.8135, 0.81 ) }
    dend_80 { pt3dadd( -74.7039, 139.48, -32.6718, 0.74 ) }
    dend_80 { pt3dadd( -75.2681, 140.037, -32.536, 0.74 ) }
    dend_80 { pt3dadd( -75.7632, 140.476, -32.5037, 0.96 ) }
    dend_80 { pt3dadd( -76.264, 140.891, -32.5594, 0.96 ) }
    dend_80 { pt3dadd( -76.5969, 141.172, -32.6488, 0.59 ) }
    dend_80 { pt3dadd( -77.234, 141.776, -32.9215, 0.29 ) }
    dend_80 { pt3dadd( -77.8087, 142.411, -33.2832, 0.29 ) }
    dend_80 { pt3dadd( -78.417, 143.171, -33.7605, 0.29 ) }
    dend_80 { pt3dadd( -78.8402, 143.748, -34.1137, 0.22 ) }
    dend_80 { pt3dadd( -79.4711, 144.649, -34.6532, 0.22 ) }
    dend_80 { pt3dadd( -79.9631, 145.391, -35.0811, 0.74 ) }
    dend_80 { pt3dadd( -80.5228, 146.272, -35.53, 0.37 ) }
    dend_80 { pt3dadd( -80.9761, 147.042, -35.8421, 0.37 ) }
    dend_80 { pt3dadd( -81.3929, 147.801, -36.1016, 0.81 ) }
    dend_80 { pt3dadd( -81.6912, 148.313, -36.2811, 1.18 ) }
    dend_80 { pt3dadd( -81.9818, 148.71, -36.4303, 1.18 ) }
    dend_80 { pt3dadd( -82.7334, 149.547, -36.8083, 0.29 ) }
    dend_80 { pt3dadd( -83.5344, 150.375, -37.1982, 0.29 ) }
    dend_80 { pt3dadd( -84.0437, 150.871, -37.4662, 0.29 ) }
    dend_80 { pt3dadd( -84.5625, 151.346, -37.7623, 0.29 ) }
    dend_80 { pt3dadd( -85.3341, 151.993, -38.2003, 0.74 ) }
    dend_80 { pt3dadd( -85.894, 152.369, -38.519, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 94.9313, 32.4998, 33.4274, 0.29 ) }
    dend_71 { pt3dadd( 105.638, 32.9108, 39.9314, 0.29 ) }
    dend_71 { pt3dadd( 116.072, 33.0029, 46.8764, 0.29 ) }
    dend_71 { pt3dadd( 126.866, 34.509, 53.0692, 0.29 ) }
    dend_71 { pt3dadd( 136.931, 37.5079, 59.9108, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 94.9313, 32.4998, 33.4274, 0.29 ) }
    dend_70 { pt3dadd( 105.303, 32.8342, 39.7687, 0.29 ) }
    dend_70 { pt3dadd( 115.833, 35.1768, 45.3843, 0.29 ) }
    dend_70 { pt3dadd( 127.262, 37.53, 48.8097, 0.29 ) }
    dend_70 { pt3dadd( 137.716, 41.7326, 53.3885, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 77.5677, 40.4814, 6.97134, 0.44 ) }
    dend_58 { pt3dadd( 78.7063, 40.4452, 6.79842, 0.44 ) }
    dend_58 { pt3dadd( 79.1431, 40.4837, 6.66438, 0.37 ) }
    dend_58 { pt3dadd( 79.9264, 40.6235, 6.3731, 0.59 ) }
    dend_58 { pt3dadd( 80.3532, 40.7192, 6.20581, 0.74 ) }
    dend_58 { pt3dadd( 81.4442, 40.9997, 5.78704, 0.37 ) }
    dend_58 { pt3dadd( 82.563, 41.3208, 5.37679, 0.29 ) }
    dend_58 { pt3dadd( 83.2304, 41.5863, 5.09252, 0.29 ) }
    dend_58 { pt3dadd( 83.7029, 41.8166, 4.90462, 0.88 ) }
    dend_58 { pt3dadd( 83.8757, 41.9161, 4.83488, 1.11 ) }
    dend_58 { pt3dadd( 84.2985, 42.182, 4.68318, 1.11 ) }
    dend_58 { pt3dadd( 84.6808, 42.4372, 4.61538, 1.18 ) }
    dend_58 { pt3dadd( 85.363, 42.8243, 4.63284, 0.74 ) }
    dend_58 { pt3dadd( 85.8224, 43.0781, 4.66987, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 77.5677, 40.4814, 6.97134, 0.29 ) }
    dend_55 { pt3dadd( 78.3765, 41.4328, 7.45398, 0.29 ) }
    dend_55 { pt3dadd( 78.7541, 41.8824, 7.7, 0.29 ) }
    dend_55 { pt3dadd( 79.2377, 42.4583, 8.01511, 0.66 ) }
    dend_55 { pt3dadd( 79.7598, 43.0801, 8.3553, 0.29 ) }
    dend_55 { pt3dadd( 80.1507, 43.5456, 8.61, 0.29 ) }
    dend_55 { pt3dadd( 80.9341, 44.4785, 9.12048, 0.29 ) }
    dend_55 { pt3dadd( 81.3765, 44.9716, 9.46855, 0.29 ) }
    dend_55 { pt3dadd( 88.2534, 52.4896, 12.7543, 0.29 ) }
    dend_55 { pt3dadd( 93.9082, 60.5925, 16.874, 0.29 ) }
    dend_55 { pt3dadd( 98.2801, 69.8564, 19.9842, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 103.707, 78.3877, 23.5014, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.0812, -77.6977, -78.3805, 0.81 ) }
    dend_48 { pt3dadd( -73.3537, -79.168, -80.1834, 0.81 ) }
    dend_48 { pt3dadd( -73.4213, -79.355, -80.4214, 0.81 ) }
    dend_48 { pt3dadd( -74.4357, -81.272, -82.8104, 0.37 ) }
    dend_48 { pt3dadd( -74.761, -81.7802, -83.3954, 0.52 ) }
    dend_48 { pt3dadd( -75.0787, -82.2651, -83.9344, 0.66 ) }
    dend_48 { pt3dadd( -75.4435, -82.8427, -84.5504, 0.66 ) }
    dend_48 { pt3dadd( -76.2913, -83.9952, -85.7229, 0.37 ) }
    dend_48 { pt3dadd( -76.8273, -84.7095, -86.4785, 0.37 ) }
    dend_48 { pt3dadd( -77.6637, -85.7724, -87.6123, 0.37 ) }
    dend_48 { pt3dadd( -78.173, -86.4232, -88.3361, 0.66 ) }
    dend_48 { pt3dadd( -78.9923, -87.4502, -89.479, 1.11 ) }
    dend_48 { pt3dadd( -79.3851, -87.9171, -89.9834, 1.25 ) }
    dend_48 { pt3dadd( -80.7029, -89.3635, -91.7302, 0.22 ) }
    dend_48 { pt3dadd( -81.2514, -89.8757, -92.4489, 0.29 ) }
    dend_48 { pt3dadd( -81.7326, -90.2483, -93.0563, 0.59 ) }
    dend_48 { pt3dadd( -82.2867, -90.6271, -93.7014, 0.81 ) }
    dend_48 { pt3dadd( -82.8718, -91.0364, -94.3966, 0.81 ) }
    dend_48 { pt3dadd( -84.383, -92.2817, -96.183, 0.37 ) }
    dend_48 { pt3dadd( -84.8285, -92.7164, -96.6888, 0.37 ) }
    dend_48 { pt3dadd( -85.541, -93.6269, -97.5805, 0.59 ) }
    dend_48 { pt3dadd( -85.7999, -94.0343, -97.9173, 0.81 ) }
    dend_48 { pt3dadd( -86.7209, -95.7348, -99.0819, 0.44 ) }
    dend_48 { pt3dadd( -87.3529, -97.0444, -99.7901, 0.44 ) }
    dend_48 { pt3dadd( -87.8658, -98.1706, -100.264, 0.37 ) }
    dend_48 { pt3dadd( -88.4856, -99.5801, -100.807, 0.37 ) }
    dend_48 { pt3dadd( -88.949, -100.616, -101.206, 0.66 ) }
    dend_48 { pt3dadd( -89.3273, -101.38, -101.533, 0.81 ) }
    dend_48 { pt3dadd( -89.7093, -102.084, -101.822, 0.81 ) }
    dend_48 { pt3dadd( -90.4282, -103.322, -102.364, 0.29 ) }
    dend_48 { pt3dadd( -90.854, -104.0, -102.653, 0.96 ) }
    dend_48 { pt3dadd( -91.914, -105.586, -103.242, 0.29 ) }
    dend_48 { pt3dadd( -92.5949, -106.62, -103.582, 0.29 ) }
    dend_48 { pt3dadd( -93.2806, -107.653, -103.854, 0.44 ) }
    dend_48 { pt3dadd( -93.674, -108.224, -103.992, 0.44 ) }
    dend_48 { pt3dadd( -94.322, -109.135, -104.16, 0.29 ) }
    dend_48 { pt3dadd( -94.6739, -109.645, -104.28, 0.59 ) }
    dend_48 { pt3dadd( -95.2076, -110.489, -104.481, 0.59 ) }
    dend_48 { pt3dadd( -95.6936, -111.34, -104.723, 0.52 ) }
    dend_48 { pt3dadd( -96.4607, -112.62, -105.179, 0.37 ) }
    dend_48 { pt3dadd( -96.9492, -113.42, -105.503, 0.88 ) }
    dend_48 { pt3dadd( -97.8594, -114.909, -106.151, 0.44 ) }
    dend_48 { pt3dadd( -98.366, -115.767, -106.517, 0.59 ) }
    dend_48 { pt3dadd( -98.7802, -116.473, -106.808, 0.59 ) }
    dend_48 { pt3dadd( -99.2819, -117.33, -107.116, 0.59 ) }
    dend_48 { pt3dadd( -99.8129, -118.199, -107.356, 0.37 ) }
    dend_48 { pt3dadd( -100.25, -118.814, -107.481, 0.37 ) }
    dend_48 { pt3dadd( -100.997, -119.693, -107.564, 0.29 ) }
    dend_48 { pt3dadd( -101.286, -119.991, -107.562, 0.29 ) }
    dend_48 { pt3dadd( -102.037, -120.735, -107.479, 0.88 ) }
    dend_48 { pt3dadd( -102.55, -121.244, -107.371, 1.18 ) }
    dend_48 { pt3dadd( -103.421, -122.024, -107.153, 0.29 ) }
    dend_48 { pt3dadd( -104.065, -122.553, -106.999, 0.29 ) }
    dend_48 { pt3dadd( -105.021, -123.345, -106.836, 0.29 ) }
    dend_48 { pt3dadd( -105.453, -123.729, -106.785, 0.88 ) }
    dend_48 { pt3dadd( -105.869, -124.127, -106.767, 0.88 ) }
    dend_48 { pt3dadd( -107.213, -125.473, -106.854, 0.22 ) }
    dend_48 { pt3dadd( -107.659, -125.941, -106.944, 0.22 ) }
    dend_48 { pt3dadd( -108.637, -126.941, -107.219, 0.59 ) }
    dend_48 { pt3dadd( -108.853, -127.16, -107.297, 0.59 ) }
    dend_48 { pt3dadd( -109.723, -128.034, -107.632, 0.22 ) }
    dend_48 { pt3dadd( -110.22, -128.544, -107.841, 0.44 ) }
    dend_48 { pt3dadd( -110.905, -129.332, -108.178, 0.22 ) }
    dend_48 { pt3dadd( -111.851, -130.408, -108.627, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -73.0812, -77.6977, -78.3805, 0.29 ) }
    dend_47 { pt3dadd( -73.8184, -77.756, -78.4408, 0.29 ) }
    dend_47 { pt3dadd( -74.2765, -77.8177, -78.4579, 0.29 ) }
    dend_47 { pt3dadd( -74.7257, -77.8976, -78.4786, 0.66 ) }
    dend_47 { pt3dadd( -74.9399, -77.948, -78.4905, 0.66 ) }
    dend_47 { pt3dadd( -75.6949, -78.1504, -78.5273, 0.29 ) }
    dend_47 { pt3dadd( -76.0202, -78.2441, -78.5461, 0.29 ) }
    dend_47 { pt3dadd( -76.264, -78.3283, -78.5377, 0.66 ) }
    dend_47 { pt3dadd( -76.4962, -78.4193, -78.5254, 0.66 ) }
    dend_47 { pt3dadd( -77.2912, -78.7489, -78.4818, 0.29 ) }
    dend_47 { pt3dadd( -77.5725, -78.8551, -78.472, 0.52 ) }
    dend_47 { pt3dadd( -77.8411, -78.9415, -78.4719, 0.52 ) }
    dend_47 { pt3dadd( -78.5846, -79.1224, -78.4689, 0.22 ) }
    dend_47 { pt3dadd( -78.9307, -79.1836, -78.4653, 0.59 ) }
    dend_47 { pt3dadd( -79.1541, -79.2112, -78.4549, 0.74 ) }
    dend_47 { pt3dadd( -79.5883, -79.24, -78.4328, 0.29 ) }
    dend_47 { pt3dadd( -79.8072, -79.2462, -78.4247, 0.29 ) }
    dend_47 { pt3dadd( -80.0932, -79.2406, -78.4164, 0.96 ) }
    dend_47 { pt3dadd( -80.3701, -79.2121, -78.4317, 0.96 ) }
    dend_47 { pt3dadd( -81.1289, -79.123, -78.4503, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -20.921, -118.639, 20.2778, 0.29 ) }
    dend_40 { pt3dadd( -20.6859, -118.66, 20.9032, 0.29 ) }
    dend_40 { pt3dadd( -20.1322, -118.75, 22.2519, 0.29 ) }
    dend_40 { pt3dadd( -19.74, -118.853, 23.2126, 0.59 ) }
    dend_40 { pt3dadd( -19.2244, -119.091, 24.5512, 0.66 ) }
    dend_40 { pt3dadd( -18.5006, -119.578, 26.4153, 0.59 ) }
    dend_40 { pt3dadd( -18.0103, -120.049, 27.6228, 0.29 ) }
    dend_40 { pt3dadd( -17.6719, -120.501, 28.3144, 0.52 ) }
    dend_40 { pt3dadd( -17.4973, -121.028, 28.5423, 0.66 ) }
    dend_40 { pt3dadd( -17.2863, -122.187, 28.5609, 0.37 ) }
    dend_40 { pt3dadd( -17.0577, -123.676, 28.3922, 0.29 ) }
    dend_40 { pt3dadd( -16.8992, -124.855, 28.1768, 0.29 ) }
    dend_40 { pt3dadd( -16.7657, -126.024, 27.9065, 0.29 ) }
    dend_40 { pt3dadd( -16.632, -127.087, 27.6434, 0.29 ) }
    dend_40 { pt3dadd( -16.4166, -128.343, 27.3186, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -16.1783, -129.418, 27.0364, 0.29 ) }
    dend_40 { pt3dadd( -12.2029, -136.399, 32.3746, 0.29 ) }
    dend_40 { pt3dadd( -8.5592, -142.173, 39.1879, 0.29 ) }
    dend_40 { pt3dadd( -3.1307, -148.223, 44.3805, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -20.921, -118.639, 20.2778, 0.74 ) }
    dend_35 { pt3dadd( -21.5418, -119.369, 19.9992, 0.74 ) }
    dend_35 { pt3dadd( -22.0847, -120.125, 19.7569, 0.52 ) }
    dend_35 { pt3dadd( -22.4978, -120.768, 19.5813, 0.52 ) }
    dend_35 { pt3dadd( -23.1453, -121.945, 19.3203, 0.59 ) }
    dend_35 { pt3dadd( -23.4065, -122.546, 19.2446, 0.96 ) }
    dend_35 { pt3dadd( -23.6069, -123.2, 19.1888, 1.18 ) }
    dend_35 { pt3dadd( -23.6767, -123.758, 19.1114, 1.18 ) }
    dend_35 { pt3dadd( -23.6576, -124.287, 19.0372, 0.96 ) }
    dend_35 { pt3dadd( -23.525, -125.063, 18.8785, 0.66 ) }
    dend_35 { pt3dadd( -23.2019, -126.165, 18.4688, 0.52 ) }
    dend_35 { pt3dadd( -22.8355, -127.151, 18.0283, 0.52 ) }
    dend_35 { pt3dadd( -22.3621, -128.194, 17.459, 0.29 ) }
    dend_35 { pt3dadd( -22.1479, -128.585, 17.1967, 0.37 ) }
    dend_35 { pt3dadd( -21.5558, -129.491, 16.4143, 0.29 ) }
    dend_35 { pt3dadd( -20.914, -130.305, 15.4172, 0.29 ) }
    dend_35 { pt3dadd( -21.3237, -139.08, 13.4887, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -4.97763, -75.1787, -0.37856, 0.37 ) }
    dend_31 { pt3dadd( -8.22794, -76.7504, 1.06406, 0.37 ) }
    dend_31 { pt3dadd( -9.5909, -77.5354, 2.2624, 0.37 ) }
    dend_31 { pt3dadd( -10.5442, -78.1382, 3.30216, 0.37 ) }
    dend_31 { pt3dadd( -11.1858, -78.5581, 4.02345, 0.37 ) }
    dend_31 { pt3dadd( -11.9805, -79.0995, 4.97327, 0.59 ) }
    dend_31 { pt3dadd( -12.7467, -79.6389, 5.90438, 0.74 ) }
    dend_31 { pt3dadd( -13.2869, -80.0458, 6.76572, 0.52 ) }
    dend_31 { pt3dadd( -13.6927, -80.3591, 7.42279, 0.59 ) }
    dend_31 { pt3dadd( -14.0642, -80.6965, 7.97476, 0.74 ) }
    dend_31 { pt3dadd( -14.7409, -81.2857, 8.81546, 0.52 ) }
    dend_31 { pt3dadd( -15.1911, -81.6453, 9.27499, 0.52 ) }
    dend_31 { pt3dadd( -15.6337, -81.9571, 9.65176, 0.74 ) }
    dend_31 { pt3dadd( -16.1406, -82.2883, 10.0474, 0.74 ) }
    dend_31 { pt3dadd( -16.6281, -82.6144, 10.4144, 0.52 ) }
    dend_31 { pt3dadd( -17.3388, -83.0826, 10.9347, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.97763, -75.1787, -0.37856, 0.88 ) }
    dend_18 { pt3dadd( -5.15115, -76.1943, -0.334565, 0.88 ) }
    dend_18 { pt3dadd( -5.44479, -77.4735, -0.116412, 0.66 ) }
    dend_18 { pt3dadd( -5.67076, -78.3722, 0.287126, 0.74 ) }
    dend_18 { pt3dadd( -5.86024, -78.9705, 0.658122, 0.88 ) }
    dend_18 { pt3dadd( -6.20797, -79.8779, 1.28576, 0.88 ) }
    dend_18 { pt3dadd( -6.43799, -80.4274, 1.67175, 1.03 ) }
    dend_18 { pt3dadd( -6.7147, -81.0281, 2.16022, 1.03 ) }
    dend_18 { pt3dadd( -7.32634, -82.4262, 3.30478, 1.03 ) }
    dend_18 { pt3dadd( -7.66741, -83.304, 3.9601, 1.03 ) }
    dend_18 { pt3dadd( -7.93531, -84.1885, 4.50526, 0.88 ) }
    dend_18 { pt3dadd( -8.064, -84.9446, 4.82415, 0.88 ) }
    dend_18 { pt3dadd( -8.05386, -85.6462, 4.99392, 0.88 ) }
    dend_18 { pt3dadd( -7.79359, -87.0015, 5.03569, 1.25 ) }
    dend_18 { pt3dadd( -7.63454, -87.4926, 4.99228, 1.55 ) }
    dend_18 { pt3dadd( -7.32101, -88.1803, 4.92541, 1.55 ) }
    dend_18 { pt3dadd( -6.77061, -89.1294, 4.8892, 1.55 ) }
    dend_18 { pt3dadd( -6.35498, -89.7179, 4.92048, 1.55 ) }
    dend_18 { pt3dadd( -5.50435, -90.7313, 5.08737, 1.03 ) }
    dend_18 { pt3dadd( -4.77259, -91.451, 5.31033, 1.03 ) }
    dend_18 { pt3dadd( -4.12797, -92.0149, 5.54207, 0.81 ) }
    dend_18 { pt3dadd( -3.05224, -92.8473, 5.97679, 0.81 ) }
    dend_18 { pt3dadd( -2.27755, -93.3905, 6.30213, 1.03 ) }
    dend_18 { pt3dadd( -1.53295, -93.8618, 6.58648, 1.03 ) }
    dend_18 { pt3dadd( -0.702455, -94.3488, 6.85344, 1.03 ) }
    dend_18 { pt3dadd( -0.0438171, -94.7486, 7.00227, 0.88 ) }
    dend_18 { pt3dadd( 0.93871, -95.412, 7.15185, 0.88 ) }
    dend_18 { pt3dadd( 1.4149, -95.7706, 7.1839, 0.96 ) }
    dend_18 { pt3dadd( 1.95446, -96.2371, 7.19546, 0.96 ) }
    dend_18 { pt3dadd( 2.68023, -96.9513, 7.1886, 1.33 ) }
    dend_18 { pt3dadd( 3.05841, -97.3828, 7.167, 1.62 ) }
    dend_18 { pt3dadd( 3.37309, -97.7753, 7.14859, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.70309, -27.3418, -5.43251, 0.66 ) }
    dend_16 { pt3dadd( 7.03132, -30.4494, -2.82004, 0.66 ) }
    dend_16 { pt3dadd( 7.35134, -31.4819, -2.04327, 0.88 ) }
    dend_16 { pt3dadd( 7.91226, -33.5474, -0.682765, 1.03 ) }
    dend_16 { pt3dadd( 8.18996, -34.5345, -0.0968434, 1.03 ) }
    dend_16 { pt3dadd( 8.46293, -35.4037, 0.387295, 1.03 ) }
    dend_16 { pt3dadd( 8.84858, -36.4738, 0.959652, 0.37 ) }
    dend_16 { pt3dadd( 9.21814, -37.6365, 1.44491, 0.37 ) }
    dend_16 { pt3dadd( 9.74579, -38.7878, 1.84676, 0.59 ) }
    dend_16 { pt3dadd( 10.5023, -39.7569, 2.06323, 0.81 ) }
    dend_16 { pt3dadd( 11.1212, -40.2879, 2.18164, 0.81 ) }
    dend_16 { pt3dadd( 11.8358, -40.7383, 2.32563, 0.52 ) }
    dend_16 { pt3dadd( 12.512, -41.0917, 2.48431, 0.81 ) }
    dend_16 { pt3dadd( 13.521, -41.5949, 2.76292, 1.25 ) }
    dend_16 { pt3dadd( 13.9368, -41.8535, 2.92017, 1.69 ) }
    dend_16 { pt3dadd( 14.4532, -42.333, 3.20154, 1.69 ) }
    dend_16 { pt3dadd( 15.141, -43.5448, 3.82147, 0.96 ) }
    dend_16 { pt3dadd( 15.3684, -44.3562, 4.1728, 0.66 ) }
    dend_16 { pt3dadd( 15.4751, -44.9971, 4.42805, 0.81 ) }
    dend_16 { pt3dadd( 15.6601, -46.3441, 4.95526, 0.44 ) }
    dend_16 { pt3dadd( 15.8662, -47.4091, 5.37459, 0.44 ) }
    dend_16 { pt3dadd( 16.101, -48.2432, 5.69913, 0.44 ) }
    dend_16 { pt3dadd( 16.4586, -48.9779, 6.04048, 0.88 ) }
    dend_16 { pt3dadd( 17.2135, -49.9002, 6.64727, 1.25 ) }
    dend_16 { pt3dadd( 18.1563, -50.7322, 7.3366, 0.66 ) }
    dend_16 { pt3dadd( 19.009, -51.3488, 7.90559, 0.52 ) }
    dend_16 { pt3dadd( 19.5272, -51.7078, 8.23612, 0.52 ) }
    dend_16 { pt3dadd( 20.7958, -52.643, 9.06361, 0.74 ) }
    dend_16 { pt3dadd( 21.8227, -53.4919, 9.72754, 1.25 ) }
    dend_16 { pt3dadd( 22.2141, -53.8644, 9.95621, 1.25 ) }
    dend_16 { pt3dadd( 22.8185, -54.5187, 10.2521, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 23.5247, -55.3819, 10.4968, 0.44 ) }
    dend_16 { pt3dadd( 24.3993, -56.5412, 10.6649, 0.37 ) }
    dend_16 { pt3dadd( 24.9008, -57.2327, 10.6612, 0.37 ) }
    dend_16 { pt3dadd( 25.4153, -57.9297, 10.5943, 0.96 ) }
    dend_16 { pt3dadd( 25.8123, -58.4478, 10.5265, 1.33 ) }
    dend_16 { pt3dadd( 26.9946, -59.8504, 10.2927, 0.29 ) }
    dend_16 { pt3dadd( 27.4283, -60.2998, 10.1959, 0.29 ) }
    dend_16 { pt3dadd( 27.8649, -60.7016, 10.0828, 0.29 ) }
    dend_16 { pt3dadd( 28.0281, -60.8506, 10.0419, 0.44 ) }
    dend_16 { pt3dadd( 33.7841, -69.131, 12.5413, 0.44 ) }
    dend_16 { pt3dadd( 40.524, -76.9557, 13.6788, 0.44 ) }
    dend_16 { pt3dadd( 46.1415, -85.6783, 14.2307, 0.44 ) }
    dend_16 { pt3dadd( 52.319, -93.9889, 15.0774, 0.44 ) }
    dend_16 { pt3dadd( 58.2658, -102.344, 16.7422, 0.44 ) }
    dend_16 { pt3dadd( 63.7343, -111.117, 17.7749, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.70309, -27.3418, -5.43251, 1.03 ) }
    dend_11 { pt3dadd( 5.70865, -29.0908, -5.58192, 1.03 ) }
    dend_11 { pt3dadd( 5.89239, -30.8204, -5.76255, 1.03 ) }
    dend_11 { pt3dadd( 6.15996, -32.0648, -5.92129, 0.96 ) }
    dend_11 { pt3dadd( 6.50719, -33.2352, -6.09122, 0.96 ) }
    dend_11 { pt3dadd( 6.93192, -34.3619, -6.27434, 0.96 ) }
    dend_11 { pt3dadd( 7.28528, -35.1155, -6.38159, 1.18 ) }
    dend_11 { pt3dadd( 8.04664, -36.1113, -6.48622, 1.47 ) }
    dend_11 { pt3dadd( 8.84991, -36.8855, -6.52273, 2.21 ) }
    dend_11 { pt3dadd( 9.20205, -37.185, -6.50929, 2.21 ) }
    dend_11 { pt3dadd( 9.76839, -37.6716, -6.42182, 1.99 ) }
    dend_11 { pt3dadd( 10.7897, -38.6394, -6.13959, 1.33 ) }
    dend_11 { pt3dadd( 11.7428, -39.7331, -5.75202, 0.88 ) }
    dend_11 { pt3dadd( 12.3575, -40.6301, -5.39582, 0.74 ) }
    dend_11 { pt3dadd( 12.7672, -41.4957, -5.05258, 0.74 ) }
    dend_11 { pt3dadd( 13.0932, -42.5522, -4.66007, 1.33 ) }
    dend_11 { pt3dadd( 13.2147, -43.2032, -4.44568, 1.62 ) }
    dend_11 { pt3dadd( 13.2877, -43.9223, -4.24972, 1.92 ) }
    dend_11 { pt3dadd( 13.3348, -44.698, -4.09663, 1.69 ) }
    dend_11 { pt3dadd( 13.4669, -46.1752, -3.91536, 1.33 ) }
    dend_11 { pt3dadd( 13.6866, -47.6674, -3.84334, 1.03 ) }
    dend_11 { pt3dadd( 13.9093, -48.6893, -3.86714, 0.88 ) }
    dend_11 { pt3dadd( 14.1967, -49.6274, -3.94449, 1.03 ) }
    dend_11 { pt3dadd( 14.663, -50.8461, -4.10752, 1.03 ) }
    dend_11 { pt3dadd( 15.2106, -52.0613, -4.3392, 1.03 ) }
    dend_11 { pt3dadd( 15.7114, -53.0921, -4.60319, 1.33 ) }
    dend_11 { pt3dadd( 16.0653, -53.8704, -4.84835, 1.69 ) }
    dend_11 { pt3dadd( 16.426, -54.8226, -5.18, 1.47 ) }
    dend_11 { pt3dadd( 16.6102, -55.4961, -5.42997, 1.03 ) }
    dend_11 { pt3dadd( 16.7799, -56.532, -5.81895, 0.96 ) }
    dend_11 { pt3dadd( 16.8432, -57.4846, -6.19081, 0.96 ) }
    dend_11 { pt3dadd( 16.8358, -58.6581, -6.64439, 1.4 ) }
    dend_11 { pt3dadd( 16.7779, -59.9068, -7.10353, 1.4 ) }
    dend_11 { pt3dadd( 16.7226, -60.9973, -7.49415, 1.55 ) }
    dend_11 { pt3dadd( 16.7236, -61.5877, -7.6934, 1.77 ) }
    dend_11 { pt3dadd( 16.8067, -62.7148, -8.03985, 0.96 ) }
    dend_11 { pt3dadd( 16.9882, -63.7169, -8.30281, 0.66 ) }
    dend_11 { pt3dadd( 17.3006, -64.6451, -8.46891, 0.66 ) }
    dend_11 { pt3dadd( 17.7718, -65.5225, -8.56417, 0.96 ) }
    dend_11 { pt3dadd( 18.4045, -66.3742, -8.62066, 1.11 ) }
    dend_11 { pt3dadd( 18.7452, -66.7403, -8.64462, 1.4 ) }
    dend_11 { pt3dadd( 19.0562, -67.0269, -8.67007, 1.4 ) }
    dend_11 { pt3dadd( 19.7083, -67.6223, -8.72684, 1.4 ) }
    dend_11 { pt3dadd( 20.4758, -68.406, -8.81298, 0.66 ) }
    dend_11 { pt3dadd( 20.8084, -68.833, -8.87751, 0.52 ) }
    dend_11 { pt3dadd( 21.1762, -69.4506, -8.98466, 0.52 ) }
    dend_11 { pt3dadd( 21.6584, -70.4697, -9.1272, 0.81 ) }
    dend_11 { pt3dadd( 22.1068, -71.6136, -9.21082, 1.03 ) }
    dend_11 { pt3dadd( 22.3373, -72.3724, -9.23866, 1.03 ) }
    dend_11 { pt3dadd( 22.5739, -73.3992, -9.22268, 1.03 ) }
    dend_11 { pt3dadd( 22.7395, -74.4274, -9.23408, 1.03 ) }
    dend_11 { pt3dadd( 22.8625, -75.5003, -9.27104, 0.88 ) }
    dend_11 { pt3dadd( 22.9789, -76.8158, -9.40227, 1.03 ) }
    dend_11 { pt3dadd( 23.0833, -77.9911, -9.59746, 0.52 ) }
    dend_11 { pt3dadd( 23.1952, -79.1048, -9.87428, 0.52 ) }
    dend_11 { pt3dadd( 23.3484, -80.7332, -10.4436, 0.88 ) }
    dend_11 { pt3dadd( 23.4049, -81.4, -10.7417, 1.11 ) }
    dend_11 { pt3dadd( 23.4753, -82.4597, -11.289, 0.59 ) }
    dend_11 { pt3dadd( 23.5027, -82.9087, -11.5193, 0.59 ) }
    dend_11 { pt3dadd( 23.5816, -83.9125, -11.9023, 0.52 ) }
    dend_11 { pt3dadd( 23.6634, -84.975, -12.0884, 0.52 ) }
    dend_11 { pt3dadd( 23.7024, -85.8296, -11.9714, 1.11 ) }
    dend_11 { pt3dadd( 23.6868, -86.5489, -11.7269, 1.25 ) }
    dend_11 { pt3dadd( 23.6101, -87.6322, -11.1907, 1.18 ) }
    dend_11 { pt3dadd( 23.5166, -88.6883, -10.5882, 0.52 ) }
    dend_11 { pt3dadd( 23.4657, -89.4193, -10.1128, 0.52 ) }
    dend_11 { pt3dadd( 23.4388, -90.4199, -9.48833, 0.52 ) }
    dend_11 { pt3dadd( 23.4392, -90.7983, -9.29468, 0.81 ) }
    dend_11 { pt3dadd( 23.4574, -91.4956, -9.04745, 0.74 ) }
    dend_11 { pt3dadd( 23.4671, -92.4008, -8.87285, 0.74 ) }
    dend_11 { pt3dadd( 23.4415, -93.3041, -8.78715, 1.03 ) }
    dend_11 { pt3dadd( 23.33, -94.5066, -8.75441, 0.66 ) }
    dend_11 { pt3dadd( 23.1936, -95.3032, -8.75856, 0.52 ) }
    dend_11 { pt3dadd( 22.9314, -96.2288, -8.77643, 1.11 ) }
    dend_11 { pt3dadd( 22.6153, -97.0095, -8.8451, 1.11 ) }
    dend_11 { pt3dadd( 22.0776, -98.1221, -9.01238, 0.81 ) }
    dend_11 { pt3dadd( 21.4696, -99.2875, -9.26578, 0.66 ) }
    dend_11 { pt3dadd( 21.046, -100.105, -9.47111, 0.88 ) }
    dend_11 { pt3dadd( 20.5186, -101.22, -9.82013, 0.66 ) }
    dend_11 { pt3dadd( 19.8647, -102.694, -10.4345, 0.59 ) }
    dend_11 { pt3dadd( 19.4725, -103.66, -10.9291, 0.88 ) }
    dend_11 { pt3dadd( 19.1588, -104.506, -11.4182, 1.18 ) }
    dend_11 { pt3dadd( 18.9425, -105.118, -11.7817, 0.96 ) }
    dend_11 { pt3dadd( 18.6657, -105.927, -12.2673, 0.96 ) }
    dend_11 { pt3dadd( 18.1905, -107.398, -13.077, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 18.0361, -107.882, -13.3031, 0.81 ) }
    dend_11 { pt3dadd( 17.7494, -108.826, -13.6903, 0.66 ) }
    dend_11 { pt3dadd( 17.5701, -109.541, -13.885, 0.66 ) }
    dend_11 { pt3dadd( 17.415, -110.416, -13.985, 0.96 ) }
    dend_11 { pt3dadd( 17.3752, -111.473, -13.7927, 0.88 ) }
    dend_11 { pt3dadd( 17.4492, -112.387, -13.4452, 0.88 ) }
    dend_11 { pt3dadd( 17.5403, -113.179, -13.0942, 0.37 ) }
    dend_11 { pt3dadd( 17.7585, -114.625, -12.4176, 1.03 ) }
    dend_11 { pt3dadd( 17.8651, -115.387, -12.0785, 1.03 ) }
    dend_11 { pt3dadd( 18.021, -117.079, -11.356, 0.44 ) }
    dend_11 { pt3dadd( 18.0713, -118.316, -10.9564, 0.44 ) }
    dend_11 { pt3dadd( 18.0667, -119.043, -10.8852, 0.74 ) }
    dend_11 { pt3dadd( 18.0417, -119.805, -11.059, 0.74 ) }
    dend_11 { pt3dadd( 18.0021, -120.872, -11.5708, 0.44 ) }
    dend_11 { pt3dadd( 17.9914, -121.729, -12.0839, 0.66 ) }
    dend_11 { pt3dadd( 18.0097, -122.966, -12.9263, 0.44 ) }
    dend_11 { pt3dadd( 18.0791, -124.733, -14.1551, 0.88 ) }
    dend_11 { pt3dadd( 18.2057, -126.667, -15.4427, 0.52 ) }
    dend_11 { pt3dadd( 18.2915, -127.652, -16.0844, 0.74 ) }
    dend_11 { pt3dadd( 18.441, -128.97, -16.9192, 1.33 ) }
    dend_11 { pt3dadd( 18.5295, -129.718, -17.3572, 1.33 ) }
    dend_11 { pt3dadd( 18.6772, -131.256, -18.1109, 0.74 ) }
    dend_11 { pt3dadd( 18.7492, -132.232, -18.4681, 0.66 ) }
    dend_11 { pt3dadd( 18.7844, -133.616, -18.8371, 0.66 ) }
    dend_11 { pt3dadd( 18.7335, -134.58, -19.054, 0.81 ) }
    dend_11 { pt3dadd( 18.5805, -135.567, -19.2534, 0.59 ) }
    dend_11 { pt3dadd( 18.4169, -136.23, -19.3513, 1.18 ) }
    dend_11 { pt3dadd( 18.3119, -136.539, -19.3853, 1.18 ) }
    dend_11 { pt3dadd( 17.8927, -137.632, -19.4737, 0.44 ) }
    dend_11 { pt3dadd( 17.5471, -138.58, -19.4676, 0.44 ) }
    dend_11 { pt3dadd( 17.307, -139.375, -19.4248, 1.03 ) }
    dend_11 { pt3dadd( 17.2112, -139.938, -19.3673, 1.4 ) }
    dend_11 { pt3dadd( 17.2373, -141.117, -19.1152, 0.52 ) }
    dend_11 { pt3dadd( 17.34, -141.91, -18.92, 0.52 ) }
    dend_11 { pt3dadd( 17.6509, -142.944, -18.5987, 0.74 ) }
    dend_11 { pt3dadd( 17.8195, -143.314, -18.4407, 0.74 ) }
    dend_11 { pt3dadd( 18.2477, -144.045, -17.9943, 0.59 ) }
    dend_11 { pt3dadd( 18.8524, -144.859, -17.3323, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.70309, -27.3418, -5.43251, 0.88 ) }
    dend_2 { pt3dadd( 8.44883, -27.3131, -8.26332, 0.88 ) }
    dend_2 { pt3dadd( 9.2498, -27.2692, -8.97722, 0.88 ) }
    dend_2 { pt3dadd( 10.0661, -27.2158, -9.59878, 1.03 ) }
    dend_2 { pt3dadd( 10.6271, -27.176, -9.96692, 1.33 ) }
    dend_2 { pt3dadd( 11.1479, -27.1428, -10.2798, 1.62 ) }
    dend_2 { pt3dadd( 11.9041, -27.1071, -10.7075, 1.84 ) }
    dend_2 { pt3dadd( 12.5653, -27.0337, -10.9818, 1.47 ) }
    dend_2 { pt3dadd( 13.3334, -26.9586, -11.4204, 1.18 ) }
    dend_2 { pt3dadd( 13.8464, -26.8961, -12.008, 0.81 ) }
    dend_2 { pt3dadd( 14.3412, -26.8156, -12.846, 0.81 ) }
    dend_2 { pt3dadd( 14.6387, -26.7775, -13.4416, 1.11 ) }
    dend_2 { pt3dadd( 15.2439, -26.7587, -14.8128, 1.33 ) }
    dend_2 { pt3dadd( 15.8655, -26.7831, -16.3152, 1.77 ) }
    dend_2 { pt3dadd( 17.2704, -26.9361, -19.7821, 1.47 ) }
    dend_2 { pt3dadd( 17.7302, -27.0077, -20.8688, 1.11 ) }
    dend_2 { pt3dadd( 18.2157, -27.0881, -21.9135, 1.11 ) }
    dend_2 { pt3dadd( 18.9037, -27.1914, -23.1655, 0.81 ) }
    dend_2 { pt3dadd( 19.3518, -27.2546, -23.7963, 0.96 ) }
    dend_2 { pt3dadd( 20.1146, -27.3158, -24.5605, 0.88 ) }
    dend_2 { pt3dadd( 20.7646, -27.2552, -25.0706, 0.74 ) }
    dend_2 { pt3dadd( 21.2552, -27.0924, -25.4962, 0.59 ) }
    dend_2 { pt3dadd( 21.8665, -26.7298, -26.1466, 1.03 ) }
    dend_2 { pt3dadd( 22.315, -26.3876, -26.6583, 1.55 ) }
    dend_2 { pt3dadd( 22.7255, -26.0514, -27.1384, 1.69 ) }
    dend_2 { pt3dadd( 23.9426, -25.0364, -28.6237, 1.69 ) }
    dend_2 { pt3dadd( 24.3156, -24.7375, -29.0987, 1.69 ) }
    dend_2 { pt3dadd( 25.2542, -24.0497, -30.2774, 0.88 ) }
    dend_2 { pt3dadd( 25.7955, -23.7194, -30.9076, 0.81 ) }
    dend_2 { pt3dadd( 26.4628, -23.4126, -31.5744, 1.11 ) }
    dend_2 { pt3dadd( 27.3583, -23.1389, -32.3292, 1.18 ) }
    dend_2 { pt3dadd( 28.2003, -23.0273, -32.8852, 0.59 ) }
    dend_2 { pt3dadd( 28.5816, -23.0348, -33.1122, 0.59 ) }
    dend_2 { pt3dadd( 29.5291, -23.2231, -33.5705, 0.96 ) }
    dend_2 { pt3dadd( 30.2116, -23.4816, -33.8767, 1.18 ) }
    dend_2 { pt3dadd( 30.7992, -23.7976, -34.1005, 1.18 ) }
    dend_2 { pt3dadd( 31.4081, -24.1835, -34.2734, 1.4 ) }
    dend_2 { pt3dadd( 32.1146, -24.6659, -34.4375, 1.4 ) }
    dend_2 { pt3dadd( 32.7724, -25.0971, -34.5791, 1.11 ) }
    dend_2 { pt3dadd( 33.2395, -25.3578, -34.6674, 1.11 ) }
    dend_2 { pt3dadd( 33.8165, -25.586, -34.7695, 1.03 ) }
    dend_2 { pt3dadd( 34.5736, -25.7729, -34.8931, 1.03 ) }
    dend_2 { pt3dadd( 35.2351, -25.8509, -34.9919, 1.03 ) }
    dend_2 { pt3dadd( 35.9992, -25.8651, -35.0961, 0.96 ) }
    dend_2 { pt3dadd( 37.0522, -25.8002, -35.2395, 0.88 ) }
    dend_2 { pt3dadd( 38.2019, -25.6646, -35.3694, 0.88 ) }
    dend_2 { pt3dadd( 38.9662, -25.5336, -35.4406, 1.03 ) }
    dend_2 { pt3dadd( 39.565, -25.412, -35.5046, 1.11 ) }
    dend_2 { pt3dadd( 40.0536, -25.3099, -35.5771, 1.18 ) }
    dend_2 { pt3dadd( 40.4862, -25.2407, -35.6971, 1.18 ) }
    dend_2 { pt3dadd( 41.3247, -25.2035, -36.1191, 0.81 ) }
    dend_2 { pt3dadd( 41.9011, -25.2765, -36.5533, 0.74 ) }
    dend_2 { pt3dadd( 42.6358, -25.4623, -37.2222, 1.18 ) }
    dend_2 { pt3dadd( 43.188, -25.6412, -37.776, 1.4 ) }
    dend_2 { pt3dadd( 44.295, -26.0378, -38.9852, 1.18 ) }
    dend_2 { pt3dadd( 45.1365, -26.3358, -39.9658, 0.88 ) }
    dend_2 { pt3dadd( 45.7545, -26.5288, -40.7506, 0.74 ) }
    dend_2 { pt3dadd( 46.3809, -26.6757, -41.5389, 0.74 ) }
    dend_2 { pt3dadd( 46.9599, -26.7347, -42.2187, 1.11 ) }
    dend_2 { pt3dadd( 47.5832, -26.711, -42.9158, 1.4 ) }
    dend_2 { pt3dadd( 48.2085, -26.64, -43.5834, 1.4 ) }
    dend_2 { pt3dadd( 49.077, -26.5468, -44.5273, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 49.5825, -26.5205, -45.1073, 0.74 ) }
    dend_2 { pt3dadd( 50.2139, -26.5695, -45.8703, 0.66 ) }
    dend_2 { pt3dadd( 50.9623, -26.768, -46.8111, 0.81 ) }
    dend_2 { pt3dadd( 51.7268, -27.1146, -47.7179, 0.74 ) }
    dend_2 { pt3dadd( 52.3679, -27.4871, -48.4594, 1.25 ) }
    dend_2 { pt3dadd( 52.7278, -27.7122, -48.8488, 1.69 ) }
    dend_2 { pt3dadd( 53.2018, -27.9817, -49.3294, 1.69 ) }
    dend_2 { pt3dadd( 53.7072, -28.1815, -49.7571, 1.4 ) }
    dend_2 { pt3dadd( 54.5112, -28.3064, -50.2914, 0.88 ) }
    dend_2 { pt3dadd( 55.6991, -28.2206, -50.9477, 0.81 ) }
    dend_2 { pt3dadd( 56.2421, -28.125, -51.2158, 0.81 ) }
    dend_2 { pt3dadd( 57.0051, -27.98, -51.5444, 0.81 ) }
    dend_2 { pt3dadd( 57.9947, -27.7982, -51.8957, 0.81 ) }
    dend_2 { pt3dadd( 58.6182, -27.7091, -52.0712, 0.81 ) }
    dend_2 { pt3dadd( 59.5045, -27.654, -52.2697, 0.81 ) }
    dend_2 { pt3dadd( 60.1052, -27.7029, -52.3569, 0.96 ) }
    dend_2 { pt3dadd( 61.0225, -27.9405, -52.5125, 0.96 ) }
    dend_2 { pt3dadd( 61.6348, -28.2112, -52.6767, 1.18 ) }
    dend_2 { pt3dadd( 62.1693, -28.5257, -52.8959, 1.47 ) }
    dend_2 { pt3dadd( 62.7085, -28.8798, -53.1641, 1.47 ) }
    dend_2 { pt3dadd( 63.4893, -29.4031, -53.5908, 0.74 ) }
    dend_2 { pt3dadd( 64.3949, -29.9722, -54.1121, 0.74 ) }
    dend_2 { pt3dadd( 65.5013, -30.5867, -54.7847, 0.66 ) }
    dend_2 { pt3dadd( 66.5288, -31.0918, -55.4533, 0.74 ) }
    dend_2 { pt3dadd( 67.1699, -31.3508, -55.877, 0.81 ) }
    dend_2 { pt3dadd( 67.9068, -31.5643, -56.3523, 0.81 ) }
    dend_2 { pt3dadd( 68.2833, -31.624, -56.5811, 1.11 ) }
    dend_2 { pt3dadd( 69.1905, -31.6443, -57.1083, 1.25 ) }
    dend_2 { pt3dadd( 69.5862, -31.6031, -57.3698, 1.62 ) }
    dend_2 { pt3dadd( 70.0105, -31.5111, -57.7387, 1.62 ) }
    dend_2 { pt3dadd( 70.8214, -31.2895, -58.5708, 0.59 ) }
    dend_2 { pt3dadd( 71.3193, -31.1446, -59.1385, 0.59 ) }
    dend_2 { pt3dadd( 72.0643, -30.939, -60.0147, 0.88 ) }
    dend_2 { pt3dadd( 73.0639, -30.6922, -61.1979, 1.4 ) }
    dend_2 { pt3dadd( 74.0792, -30.4896, -62.3547, 0.74 ) }
    dend_2 { pt3dadd( 74.6827, -30.4033, -63.0096, 0.59 ) }
    dend_2 { pt3dadd( 75.2043, -30.3652, -63.5183, 0.81 ) }
    dend_2 { pt3dadd( 75.6827, -30.3709, -63.8758, 0.81 ) }
    dend_2 { pt3dadd( 76.1572, -30.4091, -64.0984, 0.96 ) }
    dend_2 { pt3dadd( 76.657, -30.4507, -64.2394, 0.96 ) }
    dend_2 { pt3dadd( 77.2582, -30.4852, -64.3719, 0.59 ) }
    dend_2 { pt3dadd( 78.1928, -30.4919, -64.5957, 0.59 ) }
    dend_2 { pt3dadd( 79.0952, -30.4459, -64.8152, 0.66 ) }
    dend_2 { pt3dadd( 79.6132, -30.3898, -64.99, 1.03 ) }
    dend_2 { pt3dadd( 80.4521, -30.2687, -65.3297, 1.03 ) }
    dend_2 { pt3dadd( 81.2509, -30.0879, -65.8955, 0.59 ) }
    dend_2 { pt3dadd( 81.6364, -29.9626, -66.2694, 0.59 ) }
    dend_2 { pt3dadd( 82.1306, -29.7721, -66.8429, 0.59 ) }
    dend_2 { pt3dadd( 82.8724, -29.5085, -67.7807, 1.11 ) }
    dend_2 { pt3dadd( 83.2046, -29.4198, -68.2044, 1.33 ) }
    dend_2 { pt3dadd( 85.0871, -29.0583, -70.4895, 1.03 ) }
    dend_2 { pt3dadd( 85.4312, -29.0036, -70.8709, 1.4 ) }
    dend_2 { pt3dadd( 86.1244, -28.904, -71.5543, 0.81 ) }
    dend_2 { pt3dadd( 86.8372, -28.8043, -72.1598, 0.74 ) }
    dend_2 { pt3dadd( 87.7617, -28.6747, -72.7923, 0.59 ) }
    dend_2 { pt3dadd( 88.3865, -28.5846, -73.1406, 0.59 ) }
    dend_2 { pt3dadd( 89.4111, -28.4401, -73.5388, 0.59 ) }
    dend_2 { pt3dadd( 90.6251, -28.2138, -74.0084, 0.88 ) }
    dend_2 { pt3dadd( 91.0563, -28.0867, -74.1707, 1.25 ) }
    dend_2 { pt3dadd( 91.4396, -27.9301, -74.3113, 1.55 ) }
    dend_2 { pt3dadd( 92.0059, -27.6549, -74.5294, 1.55 ) }
    dend_2 { pt3dadd( 92.463, -27.4238, -74.7197, 1.33 ) }
    dend_2 { pt3dadd( 93.0275, -27.1364, -74.9597, 0.66 ) }
    dend_2 { pt3dadd( 93.7497, -26.785, -75.2631, 0.66 ) }
    dend_2 { pt3dadd( 94.226, -26.5731, -75.5128, 0.66 ) }
    dend_2 { pt3dadd( 95.0814, -26.2023, -76.0813, 0.66 ) }
    dend_2 { pt3dadd( 95.438, -26.0949, -76.4999, 0.66 ) }
    dend_2 { pt3dadd( 95.6477, -26.0564, -76.8169, 0.96 ) }
    dend_2 { pt3dadd( 95.892, -26.0348, -77.2291, 0.96 ) }
    dend_2 { pt3dadd( 96.6229, -26.0443, -78.4949, 0.74 ) }
    dend_2 { pt3dadd( 97.0625, -26.0762, -79.2457, 1.62 ) }
    dend_2 { pt3dadd( 98.8361, -26.2505, -82.1262, 0.66 ) }
    dend_2 { pt3dadd( 99.1074, -26.268, -82.5439, 0.66 ) }
    dend_2 { pt3dadd( 99.5318, -26.2784, -83.1284, 1.11 ) }
    dend_2 { pt3dadd( 100.099, -26.277, -83.8105, 1.11 ) }
    dend_2 { pt3dadd( 100.693, -26.2433, -84.3834, 0.52 ) }
    dend_2 { pt3dadd( 101.297, -26.1615, -84.8308, 0.52 ) }
    dend_2 { pt3dadd( 102.08, -25.958, -85.2704, 1.25 ) }
    dend_2 { pt3dadd( 102.684, -25.7716, -85.6154, 0.88 ) }
    dend_2 { pt3dadd( 103.831, -25.3407, -86.2764, 0.44 ) }
    dend_2 { pt3dadd( 104.487, -25.0477, -86.6433, 0.44 ) }
    dend_2 { pt3dadd( 105.461, -24.5579, -87.1698, 0.52 ) }
    dend_2 { pt3dadd( 106.106, -24.2034, -87.5082, 0.88 ) }
    dend_2 { pt3dadd( 106.427, -24.0189, -87.6685, 1.11 ) }
    dend_2 { pt3dadd( 106.697, -23.8413, -87.8421, 1.11 ) }
    dend_2 { pt3dadd( 106.909, -23.6764, -88.0242, 1.11 ) }
    dend_2 { pt3dadd( 107.579, -23.0864, -88.8323, 0.52 ) }
    dend_2 { pt3dadd( 107.834, -22.8523, -89.2664, 0.52 ) }
    dend_2 { pt3dadd( 108.179, -22.5424, -89.9439, 0.81 ) }
    dend_2 { pt3dadd( 108.986, -21.8722, -91.5715, 0.81 ) }
    dend_2 { pt3dadd( 109.371, -21.5729, -92.3227, 1.11 ) }
    dend_2 { pt3dadd( 109.546, -21.4512, -92.6216, 1.92 ) }
    dend_2 { pt3dadd( 110.602, -20.8261, -94.0885, 0.59 ) }
    dend_2 { pt3dadd( 110.742, -20.7594, -94.2354, 0.59 ) }
    dend_2 { pt3dadd( 111.281, -20.5726, -94.5947, 0.88 ) }
    dend_2 { pt3dadd( 112.0, -20.3959, -94.8759, 0.44 ) }
    dend_2 { pt3dadd( 113.187, -20.1653, -95.2631, 0.44 ) }
    dend_2 { pt3dadd( 114.127, -20.0154, -95.5386, 0.74 ) }
    dend_2 { pt3dadd( 114.656, -19.9566, -95.7116, 0.74 ) }
    dend_2 { pt3dadd( 115.431, -19.9276, -96.1033, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 115.883, -19.9553, -96.4459, 0.52 ) }
    dend_2 { pt3dadd( 116.547, -20.0557, -97.1125, 0.59 ) }
    dend_2 { pt3dadd( 116.795, -20.0971, -97.4017, 0.59 ) }
    dend_2 { pt3dadd( 117.871, -20.2297, -98.739, 0.59 ) }
    dend_2 { pt3dadd( 118.58, -20.2624, -99.622, 0.81 ) }
    dend_2 { pt3dadd( 119.245, -20.2314, -100.453, 1.4 ) }
    dend_2 { pt3dadd( 119.601, -20.1625, -100.867, 1.55 ) }
    dend_2 { pt3dadd( 120.44, -19.8325, -101.687, 0.44 ) }
    dend_2 { pt3dadd( 120.805, -19.6115, -101.964, 0.88 ) }
    dend_2 { pt3dadd( 121.266, -19.2713, -102.191, 0.88 ) }
    dend_2 { pt3dadd( 121.77, -18.8966, -102.423, 0.59 ) }
    dend_2 { pt3dadd( 122.548, -18.3545, -102.792, 0.59 ) }
    dend_2 { pt3dadd( 123.066, -18.0547, -103.118, 0.81 ) }
    dend_2 { pt3dadd( 123.651, -17.7965, -103.563, 0.81 ) }
    dend_2 { pt3dadd( 124.416, -17.5218, -104.257, 0.52 ) }
    dend_2 { pt3dadd( 125.269, -17.2448, -105.171, 0.74 ) }
    dend_2 { pt3dadd( 125.536, -17.1531, -105.586, 0.74 ) }
    dend_2 { pt3dadd( 126.063, -16.8911, -106.861, 0.37 ) }
    dend_2 { pt3dadd( 126.255, -16.7292, -107.548, 0.37 ) }
    dend_2 { pt3dadd( 126.47, -16.4201, -108.656, 0.37 ) }
    dend_2 { pt3dadd( 126.6, -16.089, -109.633, 0.59 ) }
    dend_2 { pt3dadd( 126.929, -15.051, -112.31, 0.88 ) }
    dend_2 { pt3dadd( 127.093, -14.5501, -113.53, 0.52 ) }
    dend_2 { pt3dadd( 127.165, -14.3889, -113.961, 0.52 ) }
    dend_2 { pt3dadd( 127.357, -14.1181, -114.903, 0.52 ) }
    dend_2 { pt3dadd( 127.553, -13.9449, -115.599, 0.81 ) }
    dend_2 { pt3dadd( 127.856, -13.7587, -116.407, 0.59 ) }
    dend_2 { pt3dadd( 128.152, -13.6293, -117.029, 0.59 ) }
    dend_2 { pt3dadd( 129.169, -13.3053, -119.025, 1.18 ) }
    dend_2 { pt3dadd( 130.357, -13.0118, -121.508, 0.74 ) }
    dend_2 { pt3dadd( 130.636, -12.9604, -122.158, 0.74 ) }
    dend_2 { pt3dadd( 130.883, -12.9241, -122.809, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -67.4455, 147.777, -41.9355, 0.29 ) }
    dend_87 { pt3dadd( -68.377, 147.631, -43.0145, 0.29 ) }
    dend_87 { pt3dadd( -69.1454, 147.679, -43.8756, 0.29 ) }
    dend_87 { pt3dadd( -69.5194, 147.876, -44.3626, 0.59 ) }
    dend_87 { pt3dadd( -69.9385, 148.262, -44.9311, 0.59 ) }
    dend_87 { pt3dadd( -70.2897, 148.648, -45.3847, 0.59 ) }
    dend_87 { pt3dadd( -70.6836, 149.109, -45.8499, 0.44 ) }
    dend_87 { pt3dadd( -71.004, 149.633, -46.1957, 0.59 ) }
    dend_87 { pt3dadd( -71.538, 150.717, -46.8878, 0.37 ) }
    dend_87 { pt3dadd( -71.7792, 151.248, -47.2525, 0.29 ) }
    dend_87 { pt3dadd( -72.0247, 151.736, -47.6274, 0.59 ) }
    dend_87 { pt3dadd( -72.2966, 152.23, -48.0349, 0.59 ) }
    dend_87 { pt3dadd( -72.8931, 153.27, -48.9183, 0.29 ) }
    dend_87 { pt3dadd( -73.4325, 154.275, -49.7575, 0.29 ) }
    dend_87 { pt3dadd( -73.6647, 154.768, -50.1716, 0.29 ) }
    dend_87 { pt3dadd( -74.0361, 155.755, -51.0604, 0.29 ) }
    dend_87 { pt3dadd( -74.2111, 156.404, -51.7034, 0.29 ) }
    dend_87 { pt3dadd( -74.3545, 157.108, -52.4392, 0.52 ) }
    dend_87 { pt3dadd( -74.4659, 157.768, -53.1341, 0.66 ) }
    dend_87 { pt3dadd( -74.6105, 158.814, -54.182, 0.44 ) }
    dend_87 { pt3dadd( -74.6715, 159.687, -55.0824, 0.59 ) }
    dend_87 { pt3dadd( -74.6441, 160.767, -56.322, 0.96 ) }
    dend_87 { pt3dadd( -74.6348, 161.114, -56.8069, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -67.4455, 147.777, -41.9355, 0.66 ) }
    dend_86 { pt3dadd( -66.193, 148.034, -41.5948, 0.66 ) }
    dend_86 { pt3dadd( -65.1923, 148.239, -41.3226, 0.29 ) }
    dend_86 { pt3dadd( -64.4658, 148.387, -41.1251, 0.44 ) }
    dend_86 { pt3dadd( -63.5703, 148.571, -40.8815, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -85.894, 152.369, -38.519, 0.29 ) }
    dend_82 { pt3dadd( -86.3065, 152.905, -39.0329, 0.29 ) }
    dend_82 { pt3dadd( -86.8303, 153.526, -39.6933, 0.59 ) }
    dend_82 { pt3dadd( -87.1725, 153.936, -40.1349, 0.44 ) }
    dend_82 { pt3dadd( -87.6668, 154.572, -40.7793, 0.88 ) }
    dend_82 { pt3dadd( -87.8855, 154.896, -41.0851, 1.03 ) }
    dend_82 { pt3dadd( -88.373, 155.724, -41.8061, 0.52 ) }
    dend_82 { pt3dadd( -88.5288, 156.027, -42.0625, 0.44 ) }
    dend_82 { pt3dadd( -88.8365, 156.681, -42.5505, 0.66 ) }
    dend_82 { pt3dadd( -89.0698, 157.215, -42.9162, 0.88 ) }
    dend_82 { pt3dadd( -89.5209, 158.254, -43.5544, 0.59 ) }
    dend_82 { pt3dadd( -89.826, 158.939, -43.9445, 0.74 ) }
    dend_82 { pt3dadd( -90.1424, 159.631, -44.309, 0.74 ) }
    dend_82 { pt3dadd( -90.592, 160.541, -44.7894, 0.37 ) }
    dend_82 { pt3dadd( -90.8042, 160.922, -44.9949, 0.37 ) }
    dend_82 { pt3dadd( -91.3166, 161.719, -45.4284, 0.66 ) }
    dend_82 { pt3dadd( -91.6836, 162.188, -45.6848, 0.66 ) }
    dend_82 { pt3dadd( -92.077, 162.599, -45.9182, 0.52 ) }
    dend_82 { pt3dadd( -92.6576, 163.094, -46.2064, 0.88 ) }
    dend_82 { pt3dadd( -93.061, 163.377, -46.3722, 0.88 ) }
    dend_82 { pt3dadd( -93.6648, 163.72, -46.5656, 0.52 ) }
    dend_82 { pt3dadd( -94.4015, 164.074, -46.7484, 0.52 ) }
    dend_82 { pt3dadd( -95.3231, 164.495, -46.9338, 0.88 ) }
    dend_82 { pt3dadd( -95.9222, 164.778, -47.0351, 0.88 ) }
    dend_82 { pt3dadd( -96.6709, 165.139, -47.1394, 0.52 ) }
    dend_82 { pt3dadd( -97.3127, 165.46, -47.2208, 0.44 ) }
    dend_82 { pt3dadd( -98.0428, 165.833, -47.3147, 0.37 ) }
    dend_82 { pt3dadd( -98.7596, 166.236, -47.4021, 0.37 ) }
    dend_82 { pt3dadd( -99.4743, 166.683, -47.4932, 0.29 ) }
    dend_82 { pt3dadd( -100.637, 167.479, -47.6572, 0.29 ) }
    dend_82 { pt3dadd( -101.179, 167.864, -47.7393, 0.29 ) }
    dend_82 { pt3dadd( -101.803, 168.295, -47.836, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -85.894, 152.369, -38.519, 0.29 ) }
    dend_81 { pt3dadd( -86.4299, 152.027, -37.7092, 0.29 ) }
    dend_81 { pt3dadd( -86.7215, 151.841, -37.2685, 0.29 ) }
    dend_81 { pt3dadd( -86.9282, 151.709, -36.9563, 0.22 ) }
    dend_81 { pt3dadd( -87.1918, 151.541, -36.5579, 0.22 ) }
    dend_81 { pt3dadd( -87.4851, 151.354, -36.1146, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 136.931, 37.5079, 59.9108, 0.29 ) }
    dend_75 { pt3dadd( 138.846, 40.4193, 67.4273, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 141.44, 42.513, 75.0121, 0.29 ) }
    dend_75 { pt3dadd( 144.913, 44.4934, 82.2691, 0.29 ) }
    dend_75 { pt3dadd( 147.95, 44.9596, 89.9632, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 136.931, 37.5079, 59.9108, 0.29 ) }
    dend_72 { pt3dadd( 149.291, 35.7389, 61.764, 0.29 ) }
    dend_72 { pt3dadd( 161.422, 35.7435, 65.2506, 0.29 ) }
    dend_72 { pt3dadd( 172.694, 36.9539, 70.8005, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 85.8224, 43.0781, 4.66987, 0.37 ) }
    dend_68 { pt3dadd( 85.9849, 43.6119, 4.94055, 0.37 ) }
    dend_68 { pt3dadd( 86.196, 44.3968, 5.37959, 0.37 ) }
    dend_68 { pt3dadd( 86.349, 44.9655, 5.69764, 0.22 ) }
    dend_68 { pt3dadd( 86.6706, 46.1611, 6.36632, 0.22 ) }
    dend_68 { pt3dadd( 86.9157, 47.0723, 6.87597, 0.66 ) }
    dend_68 { pt3dadd( 87.2109, 48.1697, 7.48974, 1.11 ) }
    dend_68 { pt3dadd( 87.274, 48.439, 7.66119, 1.11 ) }
    dend_68 { pt3dadd( 89.3538, 55.4858, 10.5027, 1.11 ) }
    dend_68 { pt3dadd( 91.8538, 62.4648, 13.1673, 1.11 ) }
    dend_68 { pt3dadd( 94.8473, 69.0103, 16.3693, 1.11 ) }
    dend_68 { pt3dadd( 97.8747, 75.1073, 20.334, 1.11 ) }
    dend_68 { pt3dadd( 101.676, 81.5046, 22.9195, 1.11 ) }
    dend_68 { pt3dadd( 105.642, 87.723, 25.6872, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 85.8224, 43.0781, 4.66987, 0.44 ) }
    dend_59 { pt3dadd( 86.8442, 43.3253, 4.78104, 0.44 ) }
    dend_59 { pt3dadd( 87.9391, 43.5359, 4.90684, 0.44 ) }
    dend_59 { pt3dadd( 89.113, 43.7276, 5.12173, 0.74 ) }
    dend_59 { pt3dadd( 89.8269, 43.8316, 5.27983, 1.03 ) }
    dend_59 { pt3dadd( 90.4954, 43.9218, 5.44877, 1.03 ) }
    dend_59 { pt3dadd( 91.0242, 43.9892, 5.56472, 1.03 ) }
    dend_59 { pt3dadd( 91.9197, 44.1019, 5.67511, 0.66 ) }
    dend_59 { pt3dadd( 93.156, 44.3032, 5.69864, 0.66 ) }
    dend_59 { pt3dadd( 93.5929, 44.4146, 5.64184, 0.81 ) }
    dend_59 { pt3dadd( 94.2566, 44.6627, 5.47929, 0.44 ) }
    dend_59 { pt3dadd( 95.6053, 45.3218, 5.03368, 0.44 ) }
    dend_59 { pt3dadd( 97.206, 46.2616, 4.42475, 0.37 ) }
    dend_59 { pt3dadd( 97.7672, 46.6301, 4.17634, 0.37 ) }
    dend_59 { pt3dadd( 98.634, 47.2247, 3.76283, 0.37 ) }
    dend_59 { pt3dadd( 99.6745, 47.9651, 3.29647, 0.66 ) }
    dend_59 { pt3dadd( 100.281, 48.4136, 3.0596, 0.66 ) }
    dend_59 { pt3dadd( 101.131, 49.0433, 2.84448, 0.37 ) }
    dend_59 { pt3dadd( 101.64, 49.3957, 2.77954, 0.37 ) }
    dend_59 { pt3dadd( 102.287, 49.8299, 2.71163, 0.59 ) }
    dend_59 { pt3dadd( 102.862, 50.2221, 2.63365, 0.59 ) }
    dend_59 { pt3dadd( 103.421, 50.6054, 2.45818, 0.44 ) }
    dend_59 { pt3dadd( 104.37, 51.1823, 2.09077, 0.66 ) }
    dend_59 { pt3dadd( 104.543, 51.2733, 2.0196, 0.96 ) }
    dend_59 { pt3dadd( 105.207, 51.5487, 1.76933, 0.96 ) }
    dend_59 { pt3dadd( 106.179, 51.8414, 1.42259, 1.11 ) }
    dend_59 { pt3dadd( 108.419, 52.3465, 0.726286, 0.44 ) }
    dend_59 { pt3dadd( 109.674, 52.574, 0.396924, 0.44 ) }
    dend_59 { pt3dadd( 110.651, 52.7318, 0.189498, 0.37 ) }
    dend_59 { pt3dadd( 111.854, 52.9385, -0.0567056, 0.37 ) }
    dend_59 { pt3dadd( 112.585, 53.0817, -0.186622, 0.29 ) }
    dend_59 { pt3dadd( 113.595, 53.3561, -0.340734, 0.22 ) }
    dend_59 { pt3dadd( 114.278, 53.6885, -0.475063, 0.59 ) }
    dend_59 { pt3dadd( 114.636, 53.9973, -0.615317, 0.59 ) }
    dend_59 { pt3dadd( 115.669, 55.0431, -1.23555, 0.29 ) }
    dend_59 { pt3dadd( 116.107, 55.4937, -1.53081, 0.37 ) }
    dend_59 { pt3dadd( 116.627, 55.9914, -1.88241, 0.52 ) }
    dend_59 { pt3dadd( 117.199, 56.4208, -2.25493, 0.74 ) }
    dend_59 { pt3dadd( 118.009, 56.8901, -2.87868, 0.96 ) }
    dend_59 { pt3dadd( 119.459, 57.6062, -4.20657, 0.29 ) }
    dend_59 { pt3dadd( 120.017, 57.8809, -4.8153, 0.52 ) }
    dend_59 { pt3dadd( 120.266, 58.0169, -5.14048, 0.81 ) }
    dend_59 { pt3dadd( 121.078, 58.5535, -6.38045, 1.11 ) }
    dend_59 { pt3dadd( 122.54, 59.7021, -8.94069, 0.81 ) }
    dend_59 { pt3dadd( 123.171, 60.3116, -10.1824, 0.96 ) }
    dend_59 { pt3dadd( 123.83, 61.0987, -11.5993, 0.66 ) }
    dend_59 { pt3dadd( 124.321, 61.744, -12.6577, 0.52 ) }
    dend_59 { pt3dadd( 124.816, 62.4132, -13.597, 0.52 ) }
    dend_59 { pt3dadd( 125.033, 62.7, -13.8903, 0.74 ) }
    dend_59 { pt3dadd( 125.612, 63.2478, -14.2272, 0.74 ) }
    dend_59 { pt3dadd( 126.0, 63.5131, -14.3499, 0.96 ) }
    dend_59 { pt3dadd( 126.611, 63.8132, -14.4894, 0.96 ) }
    dend_59 { pt3dadd( 127.611, 64.2395, -14.7962, 0.74 ) }
    dend_59 { pt3dadd( 128.598, 64.6777, -15.1911, 0.44 ) }
    dend_59 { pt3dadd( 129.68, 65.2663, -15.822, 0.44 ) }
    dend_59 { pt3dadd( 130.089, 65.5454, -16.1363, 0.96 ) }
    dend_59 { pt3dadd( 130.82, 66.1877, -16.9098, 1.18 ) }
    dend_59 { pt3dadd( 131.825, 67.2947, -18.2859, 0.66 ) }
    dend_59 { pt3dadd( 132.184, 67.7741, -18.9071, 0.66 ) }
    dend_59 { pt3dadd( 132.82, 68.752, -20.2391, 0.59 ) }
    dend_59 { pt3dadd( 133.054, 69.1444, -20.7387, 0.52 ) }
    dend_59 { pt3dadd( 133.715, 70.231, -22.0143, 0.52 ) }
    dend_59 { pt3dadd( 133.9, 70.5572, -22.3394, 0.96 ) }
    dend_59 { pt3dadd( 134.295, 71.2452, -22.9264, 0.96 ) }
    dend_59 { pt3dadd( 135.043, 72.5644, -23.8957, 0.59 ) }
    dend_59 { pt3dadd( 135.685, 73.7585, -24.6025, 0.59 ) }
    dend_59 { pt3dadd( 136.091, 74.5449, -25.011, 0.88 ) }
    dend_59 { pt3dadd( 136.677, 75.7087, -25.497, 0.74 ) }
    dend_59 { pt3dadd( 137.203, 76.6452, -25.85, 0.74 ) }
    dend_59 { pt3dadd( 137.831, 77.5914, -26.1386, 0.88 ) }
    dend_59 { pt3dadd( 138.237, 78.05, -26.27, 0.88 ) }
    dend_59 { pt3dadd( 139.015, 78.6837, -26.5351, 0.37 ) }
    dend_59 { pt3dadd( 139.844, 79.2196, -26.8332, 0.37 ) }
    dend_59 { pt3dadd( 141.158, 79.9006, -27.3162, 0.37 ) }
    dend_59 { pt3dadd( 142.082, 80.3321, -27.6993, 0.37 ) }
    dend_59 { pt3dadd( 143.162, 80.8075, -28.2002, 0.37 ) }
    dend_59 { pt3dadd( 143.815, 81.1134, -28.5108, 0.59 ) }
    dend_59 { pt3dadd( 144.623, 81.5246, -28.8897, 0.74 ) }
    dend_59 { pt3dadd( 145.166, 81.8347, -29.154, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 146.189, 82.5135, -29.6979, 0.44 ) }
    dend_59 { pt3dadd( 146.734, 82.88, -29.9761, 0.37 ) }
    dend_59 { pt3dadd( 148.332, 83.8286, -30.6077, 0.37 ) }
    dend_59 { pt3dadd( 149.092, 84.1972, -30.8419, 0.74 ) }
    dend_59 { pt3dadd( 149.496, 84.351, -30.9394, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 103.707, 78.3877, 23.5014, 0.29 ) }
    dend_57 { pt3dadd( 109.882, 87.4841, 26.9613, 0.29 ) }
    dend_57 { pt3dadd( 117.013, 96.4534, 28.2016, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 103.707, 78.3877, 23.5014, 0.29 ) }
    dend_56 { pt3dadd( 108.389, 86.1196, 25.4782, 0.29 ) }
    dend_56 { pt3dadd( 112.859, 93.6295, 28.516, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.3237, -139.08, 13.4887, 0.29 ) }
    dend_37 { pt3dadd( -17.7521, -150.658, 11.4928, 0.29 ) }
    dend_37 { pt3dadd( -15.8648, -162.783, 11.0334, 0.29 ) }
    dend_37 { pt3dadd( -14.3761, -174.758, 8.75494, 0.29 ) }
    dend_37 { pt3dadd( -14.5104, -187.005, 7.86939, 0.29 ) }
    dend_37 { pt3dadd( -15.712, -199.185, 6.87867, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -21.3237, -139.08, 13.4887, 0.29 ) }
    dend_36 { pt3dadd( -23.1326, -147.471, 8.97196, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.37309, -97.7753, 7.14859, 0.37 ) }
    dend_24 { pt3dadd( 1.81307, -99.5321, 5.98895, 0.37 ) }
    dend_24 { pt3dadd( 0.883627, -100.462, 5.43995, 0.37 ) }
    dend_24 { pt3dadd( -0.0271774, -101.271, 4.97723, 0.44 ) }
    dend_24 { pt3dadd( -1.11643, -102.15, 4.50201, 0.74 ) }
    dend_24 { pt3dadd( -2.19798, -102.96, 4.09878, 0.59 ) }
    dend_24 { pt3dadd( -3.31998, -103.717, 3.75564, 0.59 ) }
    dend_24 { pt3dadd( -3.98698, -104.03, 3.66543, 0.74 ) }
    dend_24 { pt3dadd( -5.09134, -104.381, 3.61579, 0.88 ) }
    dend_24 { pt3dadd( -5.78257, -104.525, 3.64564, 1.18 ) }
    dend_24 { pt3dadd( -6.4778, -104.609, 3.72007, 0.59 ) }
    dend_24 { pt3dadd( -7.53479, -104.677, 3.86185, 0.44 ) }
    dend_24 { pt3dadd( -8.58467, -104.727, 3.99749, 0.52 ) }
    dend_24 { pt3dadd( -9.07187, -104.768, 4.0468, 0.74 ) }
    dend_24 { pt3dadd( -9.89654, -104.945, 4.1307, 0.74 ) }
    dend_24 { pt3dadd( -10.4878, -105.184, 4.16056, 0.59 ) }
    dend_24 { pt3dadd( -11.0845, -105.565, 4.16678, 0.59 ) }
    dend_24 { pt3dadd( -11.8502, -106.264, 4.1541, 0.59 ) }
    dend_24 { pt3dadd( -12.639, -107.218, 4.14376, 0.44 ) }
    dend_24 { pt3dadd( -13.5097, -108.481, 4.15475, 0.37 ) }
    dend_24 { pt3dadd( -13.994, -109.327, 4.17721, 1.03 ) }
    dend_24 { pt3dadd( -14.3077, -109.966, 4.19296, 1.03 ) }
    dend_24 { pt3dadd( -14.5498, -110.551, 4.20653, 0.96 ) }
    dend_24 { pt3dadd( -14.9361, -111.762, 4.2399, 0.66 ) }
    dend_24 { pt3dadd( -15.212, -112.85, 4.26555, 0.66 ) }
    dend_24 { pt3dadd( -15.469, -114.092, 4.26371, 0.88 ) }
    dend_24 { pt3dadd( -15.5959, -114.855, 4.25213, 1.03 ) }
    dend_24 { pt3dadd( -15.7333, -115.936, 4.20715, 0.88 ) }
    dend_24 { pt3dadd( -15.8671, -117.326, 4.10979, 0.52 ) }
    dend_24 { pt3dadd( -15.9451, -118.411, 4.00232, 0.52 ) }
    dend_24 { pt3dadd( -15.9971, -119.236, 3.89644, 0.96 ) }
    dend_24 { pt3dadd( -16.0377, -119.774, 3.81746, 0.96 ) }
    dend_24 { pt3dadd( -16.1982, -121.098, 3.60373, 0.59 ) }
    dend_24 { pt3dadd( -16.3947, -122.152, 3.42629, 0.66 ) }
    dend_24 { pt3dadd( -16.6149, -122.942, 3.29054, 0.81 ) }
    dend_24 { pt3dadd( -16.9539, -123.905, 3.11247, 0.81 ) }
    dend_24 { pt3dadd( -17.1863, -124.442, 3.00543, 0.81 ) }
    dend_24 { pt3dadd( -17.6546, -125.424, 2.73933, 0.44 ) }
    dend_24 { pt3dadd( -17.9078, -125.937, 2.56476, 0.81 ) }
    dend_24 { pt3dadd( -18.2448, -126.677, 2.259, 0.81 ) }
    dend_24 { pt3dadd( -18.6437, -127.733, 1.77194, 0.52 ) }
    dend_24 { pt3dadd( -18.8691, -128.588, 1.34242, 0.52 ) }
    dend_24 { pt3dadd( -19.1119, -130.146, 0.518234, 0.74 ) }
    dend_24 { pt3dadd( -19.1692, -130.906, 0.113452, 1.11 ) }
    dend_24 { pt3dadd( -19.2071, -131.607, -0.233929, 1.11 ) }
    dend_24 { pt3dadd( -19.2577, -132.498, -0.620805, 0.96 ) }
    dend_24 { pt3dadd( -19.3551, -133.499, -0.984831, 0.59 ) }
    dend_24 { pt3dadd( -19.5608, -134.736, -1.3458, 0.44 ) }
    dend_24 { pt3dadd( -19.9552, -136.108, -1.62527, 0.44 ) }
    dend_24 { pt3dadd( -20.3609, -137.14, -1.78732, 0.44 ) }
    dend_24 { pt3dadd( -20.8028, -138.106, -1.89294, 0.74 ) }
    dend_24 { pt3dadd( -21.1338, -138.816, -1.9538, 0.74 ) }
    dend_24 { pt3dadd( -21.4494, -139.503, -1.99099, 0.74 ) }
    dend_24 { pt3dadd( -21.9912, -140.729, -2.02214, 0.66 ) }
    dend_24 { pt3dadd( -22.373, -141.643, -2.02495, 0.44 ) }
    dend_24 { pt3dadd( -22.852, -142.824, -2.0204, 0.44 ) }
    dend_24 { pt3dadd( -23.5902, -144.471, -1.95138, 0.44 ) }
    dend_24 { pt3dadd( -24.0028, -145.236, -1.86931, 0.88 ) }
    dend_24 { pt3dadd( -24.4795, -145.95, -1.73019, 1.18 ) }
    dend_24 { pt3dadd( -24.8464, -146.412, -1.58999, 1.18 ) }
    dend_24 { pt3dadd( -25.306, -146.913, -1.39401, 1.03 ) }
    dend_24 { pt3dadd( -26.6213, -148.141, -0.819786, 0.66 ) }
    dend_24 { pt3dadd( -27.8347, -149.125, -0.270876, 0.66 ) }
    dend_24 { pt3dadd( -28.8655, -149.932, 0.199617, 1.25 ) }
    dend_24 { pt3dadd( -29.4119, -150.365, 0.451986, 1.55 ) }
    dend_24 { pt3dadd( -30.0717, -150.9, 0.756765, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 3.37309, -97.7753, 7.14859, 0.74 ) }
    dend_19 { pt3dadd( 2.56596, -98.822, 6.81718, 0.74 ) }
    dend_19 { pt3dadd( 1.61863, -100.023, 6.43028, 0.74 ) }
    dend_19 { pt3dadd( 1.13346, -100.739, 6.24518, 0.74 ) }
    dend_19 { pt3dadd( 0.66942, -101.54, 6.06643, 0.81 ) }
    dend_19 { pt3dadd( -0.18927, -103.373, 5.72823, 0.52 ) }
    dend_19 { pt3dadd( -0.721363, -104.831, 5.49603, 0.74 ) }
    dend_19 { pt3dadd( -0.911306, -105.605, 5.39549, 0.74 ) }
    dend_19 { pt3dadd( -0.825739, -107.313, 5.24758, 0.74 ) }
    dend_19 { pt3dadd( -0.510704, -108.157, 5.16931, 0.81 ) }
    dend_19 { pt3dadd( 0.161861, -109.173, 5.07108, 0.66 ) }
    dend_19 { pt3dadd( 0.59201, -109.673, 5.0242, 1.11 ) }
    dend_19 { pt3dadd( 1.0296, -110.16, 4.95387, 1.11 ) }
    dend_19 { pt3dadd( 1.54989, -110.782, 4.80491, 0.81 ) }
    dend_19 { pt3dadd( 2.13442, -111.629, 4.50745, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 2.6293, -112.457, 4.19671, 0.96 ) }
    dend_19 { pt3dadd( 3.05197, -113.229, 3.90273, 0.88 ) }
    dend_19 { pt3dadd( 3.55758, -114.178, 3.55922, 0.96 ) }
    dend_19 { pt3dadd( 3.89845, -114.886, 3.30985, 1.11 ) }
    dend_19 { pt3dadd( 4.24705, -115.77, 2.99932, 1.11 ) }
    dend_19 { pt3dadd( 4.49986, -116.599, 2.71127, 0.74 ) }
    dend_19 { pt3dadd( 4.77856, -117.896, 2.29308, 0.66 ) }
    dend_19 { pt3dadd( 4.8813, -118.574, 2.09151, 0.66 ) }
    dend_19 { pt3dadd( 5.02744, -120.145, 1.69937, 0.66 ) }
    dend_19 { pt3dadd( 5.06331, -121.795, 1.37992, 0.59 ) }
    dend_19 { pt3dadd( 5.00919, -122.751, 1.23819, 0.96 ) }
    dend_19 { pt3dadd( 4.85767, -123.943, 1.10759, 1.18 ) }
    dend_19 { pt3dadd( 4.6941, -124.831, 1.05467, 1.03 ) }
    dend_19 { pt3dadd( 4.47823, -125.875, 1.02984, 0.88 ) }
    dend_19 { pt3dadd( 4.22705, -127.228, 1.03935, 0.74 ) }
    dend_19 { pt3dadd( 4.10733, -128.401, 1.11057, 0.59 ) }
    dend_19 { pt3dadd( 4.06629, -129.392, 1.21478, 0.59 ) }
    dend_19 { pt3dadd( 4.06907, -130.212, 1.35906, 1.4 ) }
    dend_19 { pt3dadd( 4.08016, -130.816, 1.51927, 1.4 ) }
    dend_19 { pt3dadd( 4.17471, -132.356, 2.04973, 0.88 ) }
    dend_19 { pt3dadd( 4.43051, -134.159, 2.84339, 0.66 ) }
    dend_19 { pt3dadd( 4.56761, -134.913, 3.22735, 0.88 ) }
    dend_19 { pt3dadd( 4.75216, -135.869, 3.74774, 0.88 ) }
    dend_19 { pt3dadd( 5.02061, -137.359, 4.57928, 0.59 ) }
    dend_19 { pt3dadd( 5.15081, -138.311, 5.11814, 0.81 ) }
    dend_19 { pt3dadd( 5.27398, -139.887, 5.99982, 0.81 ) }
    dend_19 { pt3dadd( 5.27922, -140.702, 6.39305, 1.11 ) }
    dend_19 { pt3dadd( 5.2679, -141.373, 6.67462, 1.11 ) }
    dend_19 { pt3dadd( 5.22668, -142.34, 6.98468, 0.52 ) }
    dend_19 { pt3dadd( 5.18732, -143.256, 7.20163, 0.74 ) }
    dend_19 { pt3dadd( 5.13904, -144.075, 7.34778, 1.03 ) }
    dend_19 { pt3dadd( 5.11026, -144.76, 7.40889, 1.25 ) }
    dend_19 { pt3dadd( 5.15775, -145.434, 7.4693, 1.33 ) }
    dend_19 { pt3dadd( 5.40108, -146.534, 7.63752, 1.03 ) }
    dend_19 { pt3dadd( 5.80559, -147.558, 7.82523, 0.74 ) }
    dend_19 { pt3dadd( 6.26676, -148.385, 7.98072, 0.44 ) }
    dend_19 { pt3dadd( 6.79995, -149.132, 8.1159, 0.29 ) }
    dend_19 { pt3dadd( 7.7236, -150.153, 8.28673, 0.29 ) }
    dend_19 { pt3dadd( 8.98251, -151.266, 8.45732, 0.29 ) }
    dend_19 { pt3dadd( 9.70492, -151.76, 8.513, 0.29 ) }
    dend_19 { pt3dadd( 10.3583, -152.103, 8.50205, 0.88 ) }
    dend_19 { pt3dadd( 10.8922, -152.345, 8.46741, 0.88 ) }
    dend_19 { pt3dadd( 11.7616, -152.716, 8.37744, 0.52 ) }
    dend_19 { pt3dadd( 12.1392, -152.884, 8.29588, 0.52 ) }
    dend_19 { pt3dadd( 12.8162, -153.22, 8.13467, 0.52 ) }
    dend_19 { pt3dadd( 13.365, -153.593, 8.06227, 0.52 ) }
    dend_19 { pt3dadd( 14.0811, -154.297, 7.96759, 0.52 ) }
    dend_19 { pt3dadd( 14.4116, -154.75, 7.90819, 0.88 ) }
    dend_19 { pt3dadd( 14.7432, -155.315, 7.80864, 0.88 ) }
    dend_19 { pt3dadd( 15.1132, -156.008, 7.61805, 1.11 ) }
    dend_19 { pt3dadd( 15.4863, -156.654, 7.38893, 0.66 ) }
    dend_19 { pt3dadd( 16.1877, -157.681, 6.88625, 0.66 ) }
    dend_19 { pt3dadd( 16.5302, -158.047, 6.63957, 0.66 ) }
    dend_19 { pt3dadd( 17.1546, -158.565, 6.22896, 0.66 ) }
    dend_19 { pt3dadd( 17.675, -158.931, 5.91646, 0.52 ) }
    dend_19 { pt3dadd( 18.554, -159.551, 5.37228, 0.66 ) }
    dend_19 { pt3dadd( 18.853, -159.754, 5.22618, 0.66 ) }
    dend_19 { pt3dadd( 19.5715, -160.206, 5.01874, 0.44 ) }
    dend_19 { pt3dadd( 20.2161, -160.599, 4.93306, 0.44 ) }
    dend_19 { pt3dadd( 21.1773, -161.192, 4.93141, 0.52 ) }
    dend_19 { pt3dadd( 22.4017, -161.953, 5.07318, 0.66 ) }
    dend_19 { pt3dadd( 23.4892, -162.649, 5.26533, 0.44 ) }
    dend_19 { pt3dadd( 24.6845, -163.409, 5.52428, 0.81 ) }
    dend_19 { pt3dadd( 25.7875, -164.115, 5.74457, 0.52 ) }
    dend_19 { pt3dadd( 26.4961, -164.58, 5.85518, 0.74 ) }
    dend_19 { pt3dadd( 27.3253, -165.148, 5.92744, 0.29 ) }
    dend_19 { pt3dadd( 27.733, -165.462, 5.90303, 0.52 ) }
    dend_19 { pt3dadd( 28.259, -165.959, 5.71256, 0.59 ) }
    dend_19 { pt3dadd( 29.2096, -166.959, 5.25005, 0.37 ) }
    dend_19 { pt3dadd( 29.8583, -167.692, 4.84614, 0.66 ) }
    dend_19 { pt3dadd( 30.216, -168.107, 4.59509, 1.03 ) }
    dend_19 { pt3dadd( 30.7752, -168.768, 4.16809, 1.03 ) }
    dend_19 { pt3dadd( 31.4116, -169.499, 3.72992, 0.74 ) }
    dend_19 { pt3dadd( 32.501, -170.667, 3.13218, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 18.8524, -144.859, -17.3323, 0.44 ) }
    dend_13 { pt3dadd( 18.759, -146.297, -17.213, 0.44 ) }
    dend_13 { pt3dadd( 18.6841, -147.301, -17.13, 0.81 ) }
    dend_13 { pt3dadd( 18.6144, -148.072, -17.0686, 1.18 ) }
    dend_13 { pt3dadd( 18.5116, -149.104, -16.9921, 0.74 ) }
    dend_13 { pt3dadd( 18.4025, -150.176, -16.9187, 0.44 ) }
    dend_13 { pt3dadd( 18.3045, -151.12, -16.8584, 0.96 ) }
    dend_13 { pt3dadd( 18.1995, -152.097, -16.8024, 0.96 ) }
    dend_13 { pt3dadd( 18.0944, -153.026, -16.7562, 1.18 ) }
    dend_13 { pt3dadd( 17.8853, -154.411, -16.6972, 0.74 ) }
    dend_13 { pt3dadd( 17.6167, -155.665, -16.6892, 0.66 ) }
    dend_13 { pt3dadd( 17.3265, -156.684, -16.7243, 0.66 ) }
    dend_13 { pt3dadd( 16.8981, -157.959, -16.8399, 0.66 ) }
    dend_13 { pt3dadd( 16.6634, -158.588, -16.9308, 1.03 ) }
    dend_13 { pt3dadd( 16.3122, -159.46, -17.0998, 0.81 ) }
    dend_13 { pt3dadd( 15.7787, -160.846, -17.4819, 0.52 ) }
    dend_13 { pt3dadd( 15.5286, -161.68, -17.7185, 0.44 ) }
    dend_13 { pt3dadd( 15.3407, -162.733, -17.9708, 0.37 ) }
    dend_13 { pt3dadd( 15.3028, -163.336, -18.0715, 0.66 ) }
    dend_13 { pt3dadd( 15.2949, -164.0, -18.1238, 0.66 ) }
    dend_13 { pt3dadd( 15.3467, -165.739, -18.1909, 0.44 ) }
    dend_13 { pt3dadd( 15.3946, -167.487, -18.1766, 0.44 ) }
    dend_13 { pt3dadd( 15.3723, -168.882, -18.1298, 0.66 ) }
    dend_13 { pt3dadd( 15.2691, -170.111, -18.0675, 0.81 ) }
    dend_13 { pt3dadd( 15.0408, -171.446, -18.0235, 0.96 ) }
    dend_13 { pt3dadd( 14.6179, -172.85, -18.0016, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 14.1507, -173.938, -18.005, 0.81 ) }
    dend_13 { pt3dadd( 13.6777, -174.895, -18.0734, 0.88 ) }
    dend_13 { pt3dadd( 13.3093, -175.64, -18.1653, 0.66 ) }
    dend_13 { pt3dadd( 12.7942, -176.69, -18.3309, 0.29 ) }
    dend_13 { pt3dadd( 12.1525, -178.034, -18.5594, 0.29 ) }
    dend_13 { pt3dadd( 11.7783, -178.814, -18.6773, 0.52 ) }
    dend_13 { pt3dadd( 11.1939, -180.022, -18.8729, 0.52 ) }
    dend_13 { pt3dadd( 10.7056, -181.015, -19.0305, 0.37 ) }
    dend_13 { pt3dadd( 10.2393, -181.908, -19.1664, 0.29 ) }
    dend_13 { pt3dadd( 9.77549, -182.687, -19.2654, 0.29 ) }
    dend_13 { pt3dadd( 9.5683, -182.969, -19.3088, 0.88 ) }
    dend_13 { pt3dadd( 9.07154, -183.443, -19.4103, 1.11 ) }
    dend_13 { pt3dadd( 8.44248, -183.858, -19.5244, 0.44 ) }
    dend_13 { pt3dadd( 7.6352, -184.261, -19.6594, 0.37 ) }
    dend_13 { pt3dadd( 6.85035, -184.585, -19.7995, 0.59 ) }
    dend_13 { pt3dadd( 6.14417, -184.833, -19.9378, 0.74 ) }
    dend_13 { pt3dadd( 5.21236, -185.136, -20.1317, 0.44 ) }
    dend_13 { pt3dadd( 4.40296, -185.402, -20.296, 0.37 ) }
    dend_13 { pt3dadd( 3.86704, -185.599, -20.398, 0.88 ) }
    dend_13 { pt3dadd( 3.25386, -185.873, -20.4974, 1.11 ) }
    dend_13 { pt3dadd( 2.81604, -186.108, -20.5483, 1.11 ) }
    dend_13 { pt3dadd( 2.36799, -186.36, -20.5752, 1.11 ) }
    dend_13 { pt3dadd( 1.26171, -187.013, -20.6053, 0.29 ) }
    dend_13 { pt3dadd( 0.533471, -187.46, -20.6216, 0.59 ) }
    dend_13 { pt3dadd( 0.0510335, -187.765, -20.6284, 0.59 ) }
    dend_13 { pt3dadd( -1.12855, -188.574, -20.6258, 0.29 ) }
    dend_13 { pt3dadd( -1.84342, -189.122, -20.607, 0.29 ) }
    dend_13 { pt3dadd( -2.39912, -189.603, -20.5833, 0.52 ) }
    dend_13 { pt3dadd( -3.04406, -190.222, -20.551, 0.52 ) }
    dend_13 { pt3dadd( -3.38379, -190.566, -20.5322, 0.81 ) }
    dend_13 { pt3dadd( -3.95333, -191.243, -20.4983, 0.81 ) }
    dend_13 { pt3dadd( -4.50668, -192.101, -20.4607, 0.29 ) }
    dend_13 { pt3dadd( -5.13328, -193.257, -20.4052, 0.29 ) }
    dend_13 { pt3dadd( -5.47435, -193.932, -20.3632, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.8524, -144.859, -17.3323, 0.22 ) }
    dend_12 { pt3dadd( 19.8836, -145.353, -17.6403, 0.22 ) }
    dend_12 { pt3dadd( 20.971, -145.875, -17.965, 0.22 ) }
    dend_12 { pt3dadd( 22.2838, -146.505, -18.3571, 0.22 ) }
    dend_12 { pt3dadd( 23.1875, -146.938, -18.627, 0.22 ) }
    dend_12 { pt3dadd( 24.1463, -147.398, -18.9134, 0.22 ) }
    dend_12 { pt3dadd( 25.1328, -147.871, -19.208, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 130.883, -12.9241, -122.809, 0.74 ) }
    dend_10 { pt3dadd( 134.07, -14.1432, -123.977, 0.74 ) }
    dend_10 { pt3dadd( 134.988, -14.489, -124.146, 0.44 ) }
    dend_10 { pt3dadd( 135.665, -14.7061, -124.226, 0.74 ) }
    dend_10 { pt3dadd( 136.715, -14.9664, -124.324, 0.52 ) }
    dend_10 { pt3dadd( 138.103, -15.1957, -124.437, 0.52 ) }
    dend_10 { pt3dadd( 139.559, -15.3538, -124.598, 0.52 ) }
    dend_10 { pt3dadd( 140.636, -15.3477, -124.621, 0.52 ) }
    dend_10 { pt3dadd( 141.72, -15.2767, -124.692, 0.52 ) }
    dend_10 { pt3dadd( 143.019, -15.0992, -124.931, 0.52 ) }
    dend_10 { pt3dadd( 144.032, -14.8567, -125.257, 0.74 ) }
    dend_10 { pt3dadd( 145.021, -14.5216, -125.717, 1.03 ) }
    dend_10 { pt3dadd( 145.37, -14.3818, -125.92, 1.4 ) }
    dend_10 { pt3dadd( 145.709, -14.2416, -126.141, 1.4 ) }
    dend_10 { pt3dadd( 147.071, -13.7235, -127.075, 0.44 ) }
    dend_10 { pt3dadd( 147.604, -13.5112, -127.376, 0.74 ) }
    dend_10 { pt3dadd( 148.428, -13.1599, -127.696, 0.74 ) }
    dend_10 { pt3dadd( 149.012, -12.8791, -127.817, 0.96 ) }
    dend_10 { pt3dadd( 149.583, -12.5792, -127.83, 0.96 ) }
    dend_10 { pt3dadd( 150.365, -12.1715, -127.728, 0.96 ) }
    dend_10 { pt3dadd( 152.321, -11.2102, -127.15, 0.66 ) }
    dend_10 { pt3dadd( 153.168, -10.8399, -126.804, 0.81 ) }
    dend_10 { pt3dadd( 153.693, -10.6361, -126.529, 0.81 ) }
    dend_10 { pt3dadd( 154.999, -10.173, -125.77, 0.52 ) }
    dend_10 { pt3dadd( 155.988, -9.85257, -125.185, 0.52 ) }
    dend_10 { pt3dadd( 157.082, -9.54646, -124.581, 0.52 ) }
    dend_10 { pt3dadd( 158.143, -9.30884, -124.114, 0.52 ) }
    dend_10 { pt3dadd( 159.488, -9.02467, -123.616, 0.44 ) }
    dend_10 { pt3dadd( 160.206, -8.88449, -123.443, 0.96 ) }
    dend_10 { pt3dadd( 160.95, -8.7827, -123.445, 1.11 ) }
    dend_10 { pt3dadd( 161.972, -8.71207, -123.682, 0.44 ) }
    dend_10 { pt3dadd( 162.869, -8.77631, -124.082, 0.37 ) }
    dend_10 { pt3dadd( 163.518, -8.94021, -124.479, 0.37 ) }
    dend_10 { pt3dadd( 164.566, -9.3738, -125.268, 0.66 ) }
    dend_10 { pt3dadd( 165.73, -9.9909, -126.268, 0.74 ) }
    dend_10 { pt3dadd( 166.219, -10.2847, -126.735, 0.81 ) }
    dend_10 { pt3dadd( 166.914, -10.7398, -127.482, 0.81 ) }
    dend_10 { pt3dadd( 167.791, -11.3227, -128.505, 0.66 ) }
    dend_10 { pt3dadd( 168.58, -11.7898, -129.432, 0.66 ) }
    dend_10 { pt3dadd( 169.325, -12.1649, -130.265, 0.29 ) }
    dend_10 { pt3dadd( 169.847, -12.3912, -130.808, 0.59 ) }
    dend_10 { pt3dadd( 170.405, -12.5987, -131.365, 0.74 ) }
    dend_10 { pt3dadd( 170.929, -12.7785, -131.893, 0.44 ) }
    dend_10 { pt3dadd( 171.616, -12.9835, -132.568, 0.37 ) }
    dend_10 { pt3dadd( 172.333, -13.1983, -133.239, 0.37 ) }
    dend_10 { pt3dadd( 173.049, -13.4154, -133.857, 0.59 ) }
    dend_10 { pt3dadd( 173.629, -13.6036, -134.321, 0.59 ) }
    dend_10 { pt3dadd( 175.141, -14.272, -135.609, 0.29 ) }
    dend_10 { pt3dadd( 176.132, -14.8382, -136.485, 0.29 ) }
    dend_10 { pt3dadd( 176.65, -15.2003, -136.962, 0.29 ) }
    dend_10 { pt3dadd( 177.107, -15.5416, -137.371, 0.74 ) }
    dend_10 { pt3dadd( 177.567, -15.9091, -137.78, 0.74 ) }
    dend_10 { pt3dadd( 179.471, -17.6113, -139.364, 0.37 ) }
    dend_10 { pt3dadd( 180.072, -18.2261, -139.808, 0.52 ) }
    dend_10 { pt3dadd( 180.549, -18.8051, -140.175, 0.81 ) }
    dend_10 { pt3dadd( 181.054, -19.4817, -140.61, 0.37 ) }
    dend_10 { pt3dadd( 181.493, -20.1061, -141.053, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 130.883, -12.9241, -122.809, 0.88 ) }
    dend_3 { pt3dadd( 131.248, -12.7773, -123.957, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 131.411, -12.804, -124.452, 1.25 ) }
    dend_3 { pt3dadd( 131.559, -12.8883, -124.948, 1.25 ) }
    dend_3 { pt3dadd( 131.743, -13.0225, -125.65, 0.59 ) }
    dend_3 { pt3dadd( 132.234, -13.3815, -127.526, 0.59 ) }
    dend_3 { pt3dadd( 132.727, -13.7421, -129.41, 0.96 ) }
    dend_3 { pt3dadd( 132.99, -14.0015, -130.415, 1.11 ) }
    dend_3 { pt3dadd( 133.438, -14.5649, -132.244, 1.25 ) }
    dend_3 { pt3dadd( 133.699, -14.9801, -133.399, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -101.803, 168.295, -47.836, 0.22 ) }
    dend_84 { pt3dadd( -101.536, 167.133, -46.8888, 0.22 ) }
    dend_84 { pt3dadd( -101.37, 166.409, -46.2987, 0.22 ) }
    dend_84 { pt3dadd( -100.998, 164.788, -44.9773, 0.22 ) }
    dend_84 { pt3dadd( -100.772, 163.799, -44.1712, 0.22 ) }
    dend_84 { pt3dadd( -100.577, 162.95, -43.4783, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -101.803, 168.295, -47.836, 0.22 ) }
    dend_83 { pt3dadd( -102.376, 168.775, -47.5686, 0.22 ) }
    dend_83 { pt3dadd( -102.879, 169.216, -47.3392, 0.22 ) }
    dend_83 { pt3dadd( -103.358, 169.636, -47.121, 0.22 ) }
    dend_83 { pt3dadd( -103.816, 170.037, -46.9122, 0.22 ) }
    dend_83 { pt3dadd( -104.505, 170.641, -46.5979, 0.22 ) }
    dend_83 { pt3dadd( -104.857, 170.949, -46.4375, 0.37 ) }
    dend_83 { pt3dadd( -105.199, 171.293, -46.2649, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 147.95, 44.9596, 89.9632, 0.29 ) }
    dend_77 { pt3dadd( 150.783, 45.407, 96.0767, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 147.95, 44.9596, 89.9632, 0.29 ) }
    dend_76 { pt3dadd( 150.643, 48.0029, 98.0408, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 172.694, 36.9539, 70.8005, 0.29 ) }
    dend_74 { pt3dadd( 173.238, 44.4583, 61.9578, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 172.694, 36.9539, 70.8005, 0.29 ) }
    dend_73 { pt3dadd( 162.793, 31.4268, 73.6796, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 149.496, 84.351, -30.9394, 0.37 ) }
    dend_61 { pt3dadd( 148.845, 84.6861, -31.437, 0.37 ) }
    dend_61 { pt3dadd( 148.021, 85.1052, -32.3991, 0.66 ) }
    dend_61 { pt3dadd( 147.57, 85.3345, -33.26, 0.29 ) }
    dend_61 { pt3dadd( 147.214, 85.523, -34.072, 0.29 ) }
    dend_61 { pt3dadd( 146.787, 85.7701, -35.0957, 0.29 ) }
    dend_61 { pt3dadd( 145.873, 86.3554, -37.3077, 0.29 ) }
    dend_61 { pt3dadd( 145.462, 86.5917, -38.3524, 0.81 ) }
    dend_61 { pt3dadd( 144.295, 87.2176, -41.5503, 0.44 ) }
    dend_61 { pt3dadd( 143.921, 87.4185, -42.6909, 0.96 ) }
    dend_61 { pt3dadd( 143.642, 87.6075, -43.6779, 1.18 ) }
    dend_61 { pt3dadd( 143.33, 87.8833, -44.9759, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 149.496, 84.351, -30.9394, 0.37 ) }
    dend_60 { pt3dadd( 150.594, 84.8309, -30.6817, 0.37 ) }
    dend_60 { pt3dadd( 151.859, 85.5667, -30.4974, 0.29 ) }
    dend_60 { pt3dadd( 152.321, 85.8765, -30.4518, 0.66 ) }
    dend_60 { pt3dadd( 152.766, 86.2145, -30.4163, 0.66 ) }
    dend_60 { pt3dadd( 153.317, 86.6883, -30.4155, 0.37 ) }
    dend_60 { pt3dadd( 154.088, 87.3709, -30.4454, 0.37 ) }
    dend_60 { pt3dadd( 154.916, 88.187, -30.5411, 0.81 ) }
    dend_60 { pt3dadd( 155.243, 88.5623, -30.5765, 1.11 ) }
    dend_60 { pt3dadd( 155.685, 89.1179, -30.6127, 1.33 ) }
    dend_60 { pt3dadd( 156.535, 90.3385, -30.675, 0.44 ) }
    dend_60 { pt3dadd( 156.995, 91.1351, -30.6883, 0.52 ) }
    dend_60 { pt3dadd( 157.54, 92.2897, -30.684, 1.03 ) }
    dend_60 { pt3dadd( 158.063, 93.6613, -30.6754, 0.52 ) }
    dend_60 { pt3dadd( 158.28, 94.362, -30.6575, 0.66 ) }
    dend_60 { pt3dadd( 158.465, 95.1473, -30.6269, 0.66 ) }
    dend_60 { pt3dadd( 158.648, 96.4329, -30.5675, 0.44 ) }
    dend_60 { pt3dadd( 158.695, 97.1232, -30.5912, 0.29 ) }
    dend_60 { pt3dadd( 158.744, 97.9564, -30.6861, 0.44 ) }
    dend_60 { pt3dadd( 158.874, 98.8874, -30.8624, 0.66 ) }
    dend_60 { pt3dadd( 159.05, 99.6587, -31.0278, 0.37 ) }
    dend_60 { pt3dadd( 159.308, 100.536, -31.2513, 0.37 ) }
    dend_60 { pt3dadd( 159.754, 101.935, -31.6793, 0.29 ) }
    dend_60 { pt3dadd( 160.028, 102.834, -31.9643, 0.29 ) }
    dend_60 { pt3dadd( 160.402, 104.326, -32.4855, 0.29 ) }
    dend_60 { pt3dadd( 160.57, 105.35, -32.8387, 0.29 ) }
    dend_60 { pt3dadd( 160.615, 106.15, -33.1022, 1.55 ) }
    dend_60 { pt3dadd( 160.567, 106.816, -33.309, 1.18 ) }
    dend_60 { pt3dadd( 160.367, 107.539, -33.4876, 0.96 ) }
    dend_60 { pt3dadd( 159.777, 108.702, -33.7548, 0.52 ) }
    dend_60 { pt3dadd( 158.788, 110.027, -34.0509, 0.29 ) }
    dend_60 { pt3dadd( 158.027, 110.822, -34.2436, 0.29 ) }
    dend_60 { pt3dadd( 157.631, 111.187, -34.3415, 0.29 ) }
    dend_60 { pt3dadd( 156.548, 112.16, -34.6438, 0.22 ) }
    dend_60 { pt3dadd( 156.226, 112.453, -34.7553, 0.66 ) }
    dend_60 { pt3dadd( 155.844, 112.817, -34.9164, 0.66 ) }
    dend_60 { pt3dadd( 155.234, 113.485, -35.2803, 0.37 ) }
    dend_60 { pt3dadd( 154.79, 114.173, -35.6468, 0.29 ) }
    dend_60 { pt3dadd( 154.5, 114.867, -36.0393, 0.22 ) }
    dend_60 { pt3dadd( 154.318, 115.515, -36.3665, 0.22 ) }
    dend_60 { pt3dadd( 154.099, 116.567, -36.787, 0.22 ) }
    dend_60 { pt3dadd( 154.036, 117.063, -36.9438, 0.29 ) }
    dend_60 { pt3dadd( 153.988, 117.839, -37.127, 0.29 ) }
    dend_60 { pt3dadd( 153.955, 119.029, -37.3499, 0.29 ) }
    dend_60 { pt3dadd( 153.993, 120.594, -37.6081, 0.29 ) }
    dend_60 { pt3dadd( 154.036, 121.579, -37.7474, 0.29 ) }
    dend_60 { pt3dadd( 154.107, 122.385, -37.8395, 0.29 ) }
    dend_60 { pt3dadd( 154.211, 123.451, -37.9371, 0.29 ) }
    dend_60 { pt3dadd( 154.412, 125.086, -38.0427, 0.29 ) }
    dend_60 { pt3dadd( 154.63, 126.357, -38.1057, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -15.712, -199.185, 6.87867, 0.29 ) }
    dend_39 { pt3dadd( -16.0379, -207.275, 5.31202, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -15.712, -199.185, 6.87867, 0.29 ) }
    dend_38 { pt3dadd( -8.20663, -196.744, 10.9838, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -30.0717, -150.9, 0.756765, 0.37 ) }
    dend_26 { pt3dadd( -30.6052, -152.284, 0.502809, 0.37 ) }
    dend_26 { pt3dadd( -30.8601, -152.945, 0.381482, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -30.0717, -150.9, 0.756765, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -34.3471, -150.727, -1.2934, 0.29 ) }
    dend_25 { pt3dadd( -35.6024, -150.676, -1.85812, 0.22 ) }
    dend_25 { pt3dadd( -37.2732, -150.717, -2.53316, 0.22 ) }
    dend_25 { pt3dadd( -38.2644, -150.816, -2.88113, 1.47 ) }
    dend_25 { pt3dadd( -38.9993, -150.889, -3.13914, 1.69 ) }
    dend_25 { pt3dadd( -39.7015, -150.959, -3.38564, 1.69 ) }
    dend_25 { pt3dadd( -41.6493, -151.105, -3.64794, 0.96 ) }
    dend_25 { pt3dadd( -43.0425, -151.345, -3.93463, 0.29 ) }
    dend_25 { pt3dadd( -44.2257, -151.735, -4.26062, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 32.501, -170.667, 3.13218, 0.29 ) }
    dend_21 { pt3dadd( 32.0447, -171.474, 1.98466, 0.29 ) }
    dend_21 { pt3dadd( 31.6468, -172.178, 0.983885, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 32.501, -170.667, 3.13218, 0.29 ) }
    dend_20 { pt3dadd( 31.8536, -168.799, 2.0863, 0.29 ) }
    dend_20 { pt3dadd( 31.1081, -167.696, 0.969771, 0.29 ) }
    dend_20 { pt3dadd( 30.4466, -167.268, 0.0489356, 0.29 ) }
    dend_20 { pt3dadd( 29.8047, -166.852, -0.844546, 0.52 ) }
    dend_20 { pt3dadd( 27.9892, -165.677, -3.37169, 0.44 ) }
    dend_20 { pt3dadd( 27.38, -165.283, -4.21966, 0.29 ) }
    dend_20 { pt3dadd( 26.3489, -165.601, -5.54686, 0.29 ) }
    dend_20 { pt3dadd( 25.976, -165.842, -6.01231, 0.29 ) }
    dend_20 { pt3dadd( 19.8727, -161.514, -13.0402, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.47435, -193.932, -20.3632, 0.22 ) }
    dend_15 { pt3dadd( -5.5694, -194.917, -20.2223, 0.22 ) }
    dend_15 { pt3dadd( -5.66982, -196.047, -19.9946, 0.22 ) }
    dend_15 { pt3dadd( -5.76388, -197.515, -19.6841, 0.22 ) }
    dend_15 { pt3dadd( -5.82565, -198.72, -19.426, 0.22 ) }
    dend_15 { pt3dadd( -5.87508, -200.273, -19.0995, 0.22 ) }
    dend_15 { pt3dadd( -5.9143, -201.504, -18.8405, 0.22 ) }
    dend_15 { pt3dadd( -5.95117, -202.942, -18.5524, 0.22 ) }
    dend_15 { pt3dadd( -5.94117, -203.854, -18.3685, 0.37 ) }
    dend_15 { pt3dadd( -5.92132, -204.168, -18.2962, 0.37 ) }
    dend_15 { pt3dadd( -5.8403, -205.045, -18.0665, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.47435, -193.932, -20.3632, 1.55 ) }
    dend_14 { pt3dadd( -6.16513, -194.335, -20.325, 1.55 ) }
    dend_14 { pt3dadd( -6.56979, -194.623, -20.3151, 1.55 ) }
    dend_14 { pt3dadd( -7.37025, -195.219, -20.2941, 0.29 ) }
    dend_14 { pt3dadd( -8.53581, -196.088, -20.2344, 0.44 ) }
    dend_14 { pt3dadd( -8.83562, -196.285, -20.241, 0.44 ) }
    dend_14 { pt3dadd( -10.1118, -196.975, -20.3361, 0.29 ) }
    dend_14 { pt3dadd( -10.921, -197.351, -20.4257, 0.29 ) }
    dend_14 { pt3dadd( -11.7272, -197.676, -20.5114, 0.29 ) }
    dend_14 { pt3dadd( -12.6209, -197.971, -20.5849, 0.29 ) }
    dend_14 { pt3dadd( -14.3841, -198.389, -20.6358, 0.29 ) }
    dend_14 { pt3dadd( -15.9403, -198.599, -20.628, 0.29 ) }
    dend_14 { pt3dadd( -16.9213, -198.617, -20.5915, 0.22 ) }
    dend_14 { pt3dadd( -17.903, -198.568, -20.5247, 0.22 ) }
    dend_14 { pt3dadd( -18.6661, -198.504, -20.4502, 0.22 ) }
    dend_14 { pt3dadd( -19.4955, -198.414, -20.3317, 0.22 ) }
    dend_14 { pt3dadd( -20.5049, -198.304, -20.0708, 0.22 ) }
    dend_14 { pt3dadd( -21.2554, -198.179, -19.8472, 0.22 ) }
    dend_14 { pt3dadd( -21.782, -198.045, -19.7085, 0.52 ) }
    dend_14 { pt3dadd( -22.2531, -197.886, -19.6042, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 133.699, -14.9801, -133.399, 0.81 ) }
    dend_9 { pt3dadd( 136.101, -14.8764, -135.263, 0.81 ) }
    dend_9 { pt3dadd( 137.95, -14.8986, -136.599, 0.88 ) }
    dend_9 { pt3dadd( 139.413, -15.0016, -137.682, 0.37 ) }
    dend_9 { pt3dadd( 139.837, -15.0305, -137.992, 0.37 ) }
    dend_9 { pt3dadd( 140.764, -15.0934, -138.668, 0.66 ) }
    dend_9 { pt3dadd( 141.367, -15.1344, -139.107, 0.74 ) }
    dend_9 { pt3dadd( 141.568, -15.1508, -139.294, 0.74 ) }
    dend_9 { pt3dadd( 142.74, -15.3489, -140.063, 0.37 ) }
    dend_9 { pt3dadd( 143.324, -15.5019, -140.444, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 133.699, -14.9801, -133.399, 0.44 ) }
    dend_4 { pt3dadd( 134.772, -14.0263, -135.54, 0.44 ) }
    dend_4 { pt3dadd( 135.529, -13.3527, -137.052, 0.44 ) }
    dend_4 { pt3dadd( 135.948, -12.9805, -137.888, 0.44 ) }
    dend_4 { pt3dadd( 136.771, -12.2492, -139.529, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 143.33, 87.8833, -44.9759, 0.96 ) }
    dend_65 { pt3dadd( 142.268, 88.8666, -47.9407, 0.96 ) }
    dend_65 { pt3dadd( 140.995, 89.8013, -50.9019, 0.59 ) }
    dend_65 { pt3dadd( 140.683, 90.0304, -51.6076, 0.59 ) }
    dend_65 { pt3dadd( 140.404, 90.2624, -52.2777, 0.37 ) }
    dend_65 { pt3dadd( 139.809, 90.8532, -53.8235, 0.29 ) }
    dend_65 { pt3dadd( 139.441, 91.2614, -54.8142, 0.29 ) }
    dend_65 { pt3dadd( 139.194, 91.5916, -55.4295, 0.66 ) }
    dend_65 { pt3dadd( 138.805, 92.3765, -56.5224, 0.22 ) }
    dend_65 { pt3dadd( 138.62, 92.852, -57.1958, 0.22 ) }
    dend_65 { pt3dadd( 138.394, 93.4404, -58.0679, 0.88 ) }
    dend_65 { pt3dadd( 138.245, 93.798, -58.5965, 0.88 ) }
    dend_65 { pt3dadd( 137.749, 94.7502, -60.0349, 0.37 ) }
    dend_65 { pt3dadd( 137.469, 95.1348, -60.725, 0.96 ) }
    dend_65 { pt3dadd( 137.16, 95.4559, -61.4326, 1.11 ) }
    dend_65 { pt3dadd( 136.577, 96.0021, -62.8121, 0.44 ) }
    dend_65 { pt3dadd( 136.249, 96.3246, -63.6651, 0.37 ) }
    dend_65 { pt3dadd( 136.014, 96.5857, -64.3424, 0.52 ) }
    dend_65 { pt3dadd( 135.075, 97.7429, -67.2276, 0.37 ) }
    dend_65 { pt3dadd( 134.717, 98.3331, -68.5939, 0.96 ) }
    dend_65 { pt3dadd( 134.484, 98.8423, -69.6406, 0.96 ) }
    dend_65 { pt3dadd( 134.274, 99.3803, -70.6998, 0.52 ) }
    dend_65 { pt3dadd( 134.13, 99.7564, -71.5046, 1.33 ) }
    dend_65 { pt3dadd( 133.951, 100.18, -72.4897, 1.33 ) }
    dend_65 { pt3dadd( 133.102, 101.872, -76.5339, 0.52 ) }
    dend_65 { pt3dadd( 132.999, 102.058, -76.9902, 0.52 ) }
    dend_65 { pt3dadd( 132.76, 102.441, -77.9715, 0.52 ) }
    dend_65 { pt3dadd( 131.669, 103.963, -82.1443, 0.44 ) }
    dend_65 { pt3dadd( 131.116, 104.646, -84.035, 0.59 ) }
    dend_65 { pt3dadd( 130.754, 105.079, -85.1411, 0.59 ) }
    dend_65 { pt3dadd( 130.348, 105.541, -86.1513, 0.88 ) }
    dend_65 { pt3dadd( 130.196, 105.724, -86.4828, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 129.881, 106.124, -87.0059, 1.47 ) }
    dend_65 { pt3dadd( 129.066, 107.183, -87.8571, 0.29 ) }
    dend_65 { pt3dadd( 128.304, 108.219, -88.5373, 0.29 ) }
    dend_65 { pt3dadd( 127.991, 108.644, -88.7938, 0.29 ) }
    dend_65 { pt3dadd( 127.444, 109.39, -89.1965, 0.29 ) }
    dend_65 { pt3dadd( 127.101, 109.889, -89.4498, 0.29 ) }
    dend_65 { pt3dadd( 126.288, 111.132, -90.0374, 0.29 ) }
    dend_65 { pt3dadd( 125.966, 111.615, -90.2708, 0.29 ) }
    dend_65 { pt3dadd( 125.514, 112.185, -90.5871, 0.96 ) }
    dend_65 { pt3dadd( 125.218, 112.579, -90.8231, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 143.33, 87.8833, -44.9759, 0.15 ) }
    dend_62 { pt3dadd( 143.999, 89.0716, -44.5287, 0.15 ) }
    dend_62 { pt3dadd( 144.366, 89.7226, -44.2837, 0.15 ) }
    dend_62 { pt3dadd( 144.661, 90.2458, -44.0868, 0.81 ) }
    dend_62 { pt3dadd( 144.917, 90.7, -43.9158, 1.03 ) }
    dend_62 { pt3dadd( 145.254, 91.2985, -43.6906, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -30.8601, -152.945, 0.381482, 0.52 ) }
    dend_28 { pt3dadd( -31.1441, -153.615, 0.062437, 0.52 ) }
    dend_28 { pt3dadd( -31.5241, -154.697, -0.351564, 0.52 ) }
    dend_28 { pt3dadd( -31.9853, -156.071, -0.723566, 0.37 ) }
    dend_28 { pt3dadd( -32.1969, -156.704, -0.882396, 0.52 ) }
    dend_28 { pt3dadd( -32.4822, -157.555, -1.08208, 0.44 ) }
    dend_28 { pt3dadd( -32.8139, -158.5, -1.30406, 0.37 ) }
    dend_28 { pt3dadd( -33.1561, -159.459, -1.48458, 0.29 ) }
    dend_28 { pt3dadd( -33.5126, -160.471, -1.608, 0.29 ) }
    dend_28 { pt3dadd( -33.9397, -161.786, -1.73767, 1.03 ) }
    dend_28 { pt3dadd( -34.0643, -162.155, -1.7755, 1.18 ) }
    dend_28 { pt3dadd( -34.4604, -163.208, -1.89647, 0.88 ) }
    dend_28 { pt3dadd( -34.7489, -163.962, -1.99954, 0.44 ) }
    dend_28 { pt3dadd( -35.0801, -164.943, -2.17067, 0.37 ) }
    dend_28 { pt3dadd( -35.2119, -165.515, -2.30551, 0.59 ) }
    dend_28 { pt3dadd( -35.2707, -166.05, -2.44978, 0.44 ) }
    dend_28 { pt3dadd( -35.2621, -167.131, -2.79622, 0.44 ) }
    dend_28 { pt3dadd( -35.1782, -167.896, -3.06809, 0.44 ) }
    dend_28 { pt3dadd( -34.9948, -169.064, -3.49622, 0.52 ) }
    dend_28 { pt3dadd( -34.8282, -170.151, -3.88054, 0.66 ) }
    dend_28 { pt3dadd( -34.7186, -171.051, -4.11837, 0.88 ) }
    dend_28 { pt3dadd( -34.6775, -171.68, -4.19975, 0.88 ) }
    dend_28 { pt3dadd( -34.7017, -172.645, -4.14401, 0.52 ) }
    dend_28 { pt3dadd( -34.8654, -173.483, -3.91978, 0.29 ) }
    dend_28 { pt3dadd( -35.2161, -174.489, -3.47251, 0.29 ) }
    dend_28 { pt3dadd( -35.749, -175.637, -2.91932, 0.29 ) }
    dend_28 { pt3dadd( -36.1706, -176.396, -2.58276, 0.96 ) }
    dend_28 { pt3dadd( -36.4623, -176.904, -2.42611, 1.18 ) }
    dend_28 { pt3dadd( -36.7611, -177.467, -2.3089, 1.18 ) }
    dend_28 { pt3dadd( -37.2243, -178.523, -2.24092, 0.59 ) }
    dend_28 { pt3dadd( -37.5587, -179.63, -2.2633, 0.52 ) }
    dend_28 { pt3dadd( -37.7862, -180.706, -2.32078, 0.52 ) }
    dend_28 { pt3dadd( -38.0284, -182.094, -2.44353, 0.66 ) }
    dend_28 { pt3dadd( -38.1568, -183.014, -2.52847, 0.66 ) }
    dend_28 { pt3dadd( -38.2492, -184.002, -2.61578, 0.81 ) }
    dend_28 { pt3dadd( -38.2636, -185.429, -2.68391, 0.81 ) }
    dend_28 { pt3dadd( -38.1611, -186.452, -2.59342, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.8601, -152.945, 0.381482, 0.37 ) }
    dend_27 { pt3dadd( -30.8994, -152.874, 1.29415, 0.37 ) }
    dend_27 { pt3dadd( -31.0055, -152.833, 2.48318, 0.37 ) }
    dend_27 { pt3dadd( -31.0799, -152.816, 3.04249, 0.37 ) }
    dend_27 { pt3dadd( -31.2947, -152.763, 4.2659, 0.29 ) }
    dend_27 { pt3dadd( -31.4462, -152.713, 4.98608, 0.29 ) }
    dend_27 { pt3dadd( -31.6257, -152.654, 5.8399, 0.29 ) }
    dend_27 { pt3dadd( -31.7937, -152.616, 6.66508, 0.37 ) }
    dend_27 { pt3dadd( -31.9151, -152.617, 7.05958, 0.37 ) }
    dend_27 { pt3dadd( -32.0709, -152.631, 7.43263, 0.29 ) }
    dend_27 { pt3dadd( -32.305, -152.627, 7.81046, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 31.6468, -172.178, 0.983885, 0.22 ) }
    dend_23 { pt3dadd( 30.792, -173.38, 1.38878, 0.22 ) }
    dend_23 { pt3dadd( 29.5604, -175.113, 1.9722, 0.22 ) }
    dend_23 { pt3dadd( 28.8603, -176.098, 2.30382, 0.29 ) }
    dend_23 { pt3dadd( 28.4787, -176.635, 2.48457, 0.29 ) }
    dend_23 { pt3dadd( 27.49, -178.026, 2.95294, 0.22 ) }
    dend_23 { pt3dadd( 26.8439, -178.935, 3.25898, 0.22 ) }
    dend_23 { pt3dadd( 21.1955, -190.567, 5.03726, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 31.6468, -172.178, 0.983885, 0.37 ) }
    dend_22 { pt3dadd( 31.7265, -173.722, 1.66799, 0.37 ) }
    dend_22 { pt3dadd( 31.6002, -175.126, 2.13057, 0.96 ) }
    dend_22 { pt3dadd( 31.239, -176.878, 2.53326, 0.59 ) }
    dend_22 { pt3dadd( 30.8667, -178.217, 2.70372, 0.59 ) }
    dend_22 { pt3dadd( 30.4719, -179.636, 2.88443, 0.22 ) }
    dend_22 { pt3dadd( 30.0959, -180.987, 3.05657, 0.22 ) }
    dend_22 { pt3dadd( 29.5169, -182.437, 3.14271, 0.22 ) }
    dend_22 { pt3dadd( 28.892, -183.664, 3.05679, 0.22 ) }
    dend_22 { pt3dadd( 28.0703, -184.927, 2.81715, 0.22 ) }
    dend_22 { pt3dadd( 26.8369, -197.455, 5.23113, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 136.771, -12.2492, -139.529, 0.37 ) }
    dend_6 { pt3dadd( 138.234, -10.3366, -147.59, 0.37 ) }
    dend_6 { pt3dadd( 138.482, -9.9708, -148.948, 0.66 ) }
    dend_6 { pt3dadd( 138.662, -9.62752, -149.993, 0.66 ) }
    dend_6 { pt3dadd( 138.747, -9.44231, -150.486, 0.96 ) }
    dend_6 { pt3dadd( 138.983, -8.89264, -151.719, 1.11 ) }
    dend_6 { pt3dadd( 139.299, -8.17186, -153.117, 1.11 ) }
    dend_6 { pt3dadd( 139.932, -6.90854, -154.612, 0.81 ) }
    dend_6 { pt3dadd( 140.482, -5.85601, -155.622, 1.4 ) }
    dend_6 { pt3dadd( 140.68, -5.49406, -155.902, 1.4 ) }
    dend_6 { pt3dadd( 141.517, -4.09698, -156.726, 0.37 ) }
    dend_6 { pt3dadd( 142.165, -3.13027, -157.089, 0.37 ) }
    dend_6 { pt3dadd( 143.016, -2.02497, -157.288, 0.37 ) }
    dend_6 { pt3dadd( 143.729, -1.17322, -157.296, 0.66 ) }
    dend_6 { pt3dadd( 144.305, -0.480799, -157.235, 0.66 ) }
    dend_6 { pt3dadd( 145.02, 0.551827, -157.129, 0.29 ) }
    dend_6 { pt3dadd( 145.469, 1.38976, -157.02, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 145.739, 2.02639, -156.945, 0.52 ) }
    dend_6 { pt3dadd( 146.145, 3.12986, -156.865, 0.29 ) }
    dend_6 { pt3dadd( 146.568, 4.28657, -156.835, 1.03 ) }
    dend_6 { pt3dadd( 147.236, 6.03223, -156.906, 0.66 ) }
    dend_6 { pt3dadd( 147.678, 7.14747, -156.997, 0.44 ) }
    dend_6 { pt3dadd( 147.842, 7.54462, -157.035, 0.66 ) }
    dend_6 { pt3dadd( 148.35, 8.77468, -157.174, 0.37 ) }
    dend_6 { pt3dadd( 148.625, 9.38541, -157.232, 0.52 ) }
    dend_6 { pt3dadd( 149.202, 10.5348, -157.293, 0.37 ) }
    dend_6 { pt3dadd( 149.646, 11.2885, -157.267, 0.37 ) }
    dend_6 { pt3dadd( 150.128, 12.0851, -157.232, 0.37 ) }
    dend_6 { pt3dadd( 150.616, 12.9971, -157.176, 0.37 ) }
    dend_6 { pt3dadd( 151.035, 13.8891, -157.092, 0.96 ) }
    dend_6 { pt3dadd( 151.211, 14.2631, -157.053, 0.96 ) }
    dend_6 { pt3dadd( 151.963, 15.735, -156.871, 0.29 ) }
    dend_6 { pt3dadd( 152.599, 16.9221, -156.74, 0.29 ) }
    dend_6 { pt3dadd( 153.212, 18.0201, -156.635, 0.29 ) }
    dend_6 { pt3dadd( 153.732, 18.94, -156.56, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 136.771, -12.2492, -139.529, 0.52 ) }
    dend_5 { pt3dadd( 135.364, -8.3429, -142.791, 0.52 ) }
    dend_5 { pt3dadd( 135.245, -8.01466, -143.041, 0.52 ) }
    dend_5 { pt3dadd( 134.66, -6.45103, -144.146, 0.37 ) }
    dend_5 { pt3dadd( 134.496, -6.01338, -144.456, 0.29 ) }
    dend_5 { pt3dadd( 134.0, -4.68943, -145.392, 0.29 ) }
    dend_5 { pt3dadd( 133.578, -3.56389, -146.187, 0.29 ) }
    dend_5 { pt3dadd( 133.2, -2.36175, -146.601, 0.29 ) }
    dend_5 { pt3dadd( 133.03, -1.8466, -146.792, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 125.218, 112.579, -90.8231, 0.29 ) }
    dend_67 { pt3dadd( 124.498, 114.021, -92.1203, 0.29 ) }
    dend_67 { pt3dadd( 124.285, 114.335, -92.5903, 0.29 ) }
    dend_67 { pt3dadd( 123.996, 114.706, -93.2927, 0.29 ) }
    dend_67 { pt3dadd( 123.487, 115.372, -94.5664, 0.29 ) }
    dend_67 { pt3dadd( 123.293, 115.643, -95.0393, 0.44 ) }
    dend_67 { pt3dadd( 123.029, 116.01, -95.6814, 0.44 ) }
    dend_67 { pt3dadd( 122.209, 116.987, -97.6053, 0.29 ) }
    dend_67 { pt3dadd( 121.831, 117.411, -98.553, 0.29 ) }
    dend_67 { pt3dadd( 121.627, 117.642, -99.127, 0.29 ) }
    dend_67 { pt3dadd( 121.322, 117.992, -100.007, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 125.218, 112.579, -90.8231, 0.22 ) }
    dend_66 { pt3dadd( 124.316, 111.615, -90.3838, 0.22 ) }
    dend_66 { pt3dadd( 123.563, 110.901, -90.0127, 0.22 ) }
    dend_66 { pt3dadd( 122.613, 110.097, -89.5142, 1.4 ) }
    dend_66 { pt3dadd( 121.548, 109.195, -88.955, 0.22 ) }
    dend_66 { pt3dadd( 120.359, 108.188, -88.3311, 1.84 ) }
    dend_66 { pt3dadd( 119.318, 107.307, -87.7846, 0.22 ) }
    dend_66 { pt3dadd( 118.411, 106.617, -87.2344, 0.22 ) }
    dend_66 { pt3dadd( 117.556, 106.024, -86.6844, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 145.254, 91.2985, -43.6906, 0.74 ) }
    dend_64 { pt3dadd( 145.377, 91.5755, -43.1072, 0.74 ) }
    dend_64 { pt3dadd( 145.54, 91.9957, -42.153, 0.22 ) }
    dend_64 { pt3dadd( 145.594, 92.247, -41.5651, 0.22 ) }
    dend_64 { pt3dadd( 145.629, 92.7233, -40.3812, 0.22 ) }
    dend_64 { pt3dadd( 145.644, 93.0914, -39.2965, 1.33 ) }
    dend_64 { pt3dadd( 145.66, 93.2486, -38.7486, 1.33 ) }
    dend_64 { pt3dadd( 145.688, 93.4938, -37.5988, 0.22 ) }
    dend_64 { pt3dadd( 145.689, 93.6189, -36.7603, 0.22 ) }
    dend_64 { pt3dadd( 145.67, 93.68, -36.2231, 0.22 ) }
    dend_64 { pt3dadd( 145.579, 93.8254, -35.0586, 0.22 ) }
    dend_64 { pt3dadd( 145.546, 93.8921, -34.1743, 0.22 ) }
    dend_64 { pt3dadd( 145.579, 93.9395, -33.6044, 0.37 ) }
    dend_64 { pt3dadd( 145.675, 94.0005, -33.0348, 0.37 ) }
    dend_64 { pt3dadd( 145.867, 94.0758, -32.403, 0.37 ) }
    dend_64 { pt3dadd( 146.05, 94.1597, -31.9389, 0.15 ) }
    dend_64 { pt3dadd( 146.528, 94.4782, -30.6853, 0.22 ) }
    dend_64 { pt3dadd( 146.903, 94.7789, -29.6638, 0.22 ) }
    dend_64 { pt3dadd( 147.155, 94.9815, -28.9377, 0.22 ) }
    dend_64 { pt3dadd( 147.537, 95.3665, -27.6101, 0.22 ) }
    dend_64 { pt3dadd( 147.737, 95.6234, -26.6621, 0.22 ) }
    dend_64 { pt3dadd( 147.928, 95.9245, -25.4409, 0.22 ) }
    dend_64 { pt3dadd( 147.976, 96.031, -24.9896, 0.74 ) }
    dend_64 { pt3dadd( 148.094, 96.421, -23.1197, 0.29 ) }
    dend_64 { pt3dadd( 148.126, 96.6544, -21.9994, 0.29 ) }
    dend_64 { pt3dadd( 148.145, 96.8977, -20.9087, 0.29 ) }
    dend_64 { pt3dadd( 148.184, 97.0432, -20.1024, 0.29 ) }
    dend_64 { pt3dadd( 148.305, 97.1598, -19.1135, 0.52 ) }
    dend_64 { pt3dadd( 148.445, 97.2293, -18.2075, 0.37 ) }
    dend_64 { pt3dadd( 148.67, 97.2969, -17.0172, 0.29 ) }
    dend_64 { pt3dadd( 148.732, 97.3068, -16.7238, 0.37 ) }
    dend_64 { pt3dadd( 148.976, 97.3445, -15.5794, 0.37 ) }
    dend_64 { pt3dadd( 149.276, 97.379, -14.0461, 0.37 ) }
    dend_64 { pt3dadd( 149.489, 97.3807, -12.8519, 0.22 ) }
    dend_64 { pt3dadd( 149.616, 97.3632, -12.1929, 0.22 ) }
    dend_64 { pt3dadd( 149.751, 97.3393, -11.4829, 0.74 ) }
    dend_64 { pt3dadd( 149.816, 97.3366, -11.0892, 0.88 ) }
    dend_64 { pt3dadd( 149.97, 97.4139, -9.87391, 0.59 ) }
    dend_64 { pt3dadd( 150.056, 97.6254, -8.48912, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 145.254, 91.2985, -43.6906, 0.29 ) }
    dend_63 { pt3dadd( 146.648, 92.0486, -44.4282, 0.29 ) }
    dend_63 { pt3dadd( 147.841, 92.6824, -45.3768, 0.29 ) }
    dend_63 { pt3dadd( 148.991, 93.2812, -46.4498, 1.03 ) }
    dend_63 { pt3dadd( 149.526, 93.56, -46.9883, 1.03 ) }
    dend_63 { pt3dadd( 150.856, 94.1646, -48.3215, 0.44 ) }
    dend_63 { pt3dadd( 151.879, 94.5709, -49.3067, 0.29 ) }
    dend_63 { pt3dadd( 153.225, 94.9907, -50.6733, 0.96 ) }
    dend_63 { pt3dadd( 153.681, 95.101, -51.1303, 0.96 ) }
    dend_63 { pt3dadd( 155.054, 95.3783, -52.3752, 0.22 ) }
    dend_63 { pt3dadd( 156.135, 95.6004, -53.2447, 0.22 ) }
    dend_63 { pt3dadd( 157.302, 95.8337, -53.9935, 0.22 ) }
    dend_63 { pt3dadd( 158.604, 96.1294, -54.701, 0.22 ) }
    dend_63 { pt3dadd( 160.143, 96.5452, -55.4107, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 161.117, 96.8546, -55.8109, 0.52 ) }
    dend_63 { pt3dadd( 161.933, 97.1795, -56.0756, 0.29 ) }
    dend_63 { pt3dadd( 162.984, 97.7216, -56.2981, 1.03 ) }
    dend_63 { pt3dadd( 163.701, 98.1514, -56.305, 1.03 ) }
    dend_63 { pt3dadd( 164.359, 98.6377, -56.1555, 0.88 ) }
    dend_63 { pt3dadd( 165.034, 99.1595, -55.8909, 0.66 ) }
    dend_63 { pt3dadd( 165.884, 99.8446, -55.45, 0.37 ) }
    dend_63 { pt3dadd( 166.756, 100.575, -54.8714, 0.59 ) }
    dend_63 { pt3dadd( 167.789, 101.48, -54.0371, 0.29 ) }
    dend_63 { pt3dadd( 168.696, 102.247, -53.2154, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -38.1611, -186.452, -2.59342, 0.74 ) }
    dend_30 { pt3dadd( -38.4014, -187.489, -2.0958, 0.74 ) }
    dend_30 { pt3dadd( -38.8721, -189.027, -1.26217, 0.66 ) }
    dend_30 { pt3dadd( -39.3054, -190.041, -0.630263, 0.52 ) }
    dend_30 { pt3dadd( -39.9933, -191.275, 0.216639, 0.37 ) }
    dend_30 { pt3dadd( -40.4054, -191.951, 0.68064, 0.74 ) }
    dend_30 { pt3dadd( -40.737, -192.527, 1.08096, 1.03 ) }
    dend_30 { pt3dadd( -41.1941, -193.29, 1.6314, 0.74 ) }
    dend_30 { pt3dadd( -41.8468, -194.39, 2.41164, 0.52 ) }
    dend_30 { pt3dadd( -42.4738, -195.615, 3.18849, 0.52 ) }
    dend_30 { pt3dadd( -42.8687, -196.594, 3.69289, 0.66 ) }
    dend_30 { pt3dadd( -43.37, -198.295, 4.371, 0.88 ) }
    dend_30 { pt3dadd( -43.5026, -198.9, 4.55511, 1.18 ) }
    dend_30 { pt3dadd( -43.6548, -199.872, 4.77935, 0.81 ) }
    dend_30 { pt3dadd( -43.8007, -201.25, 5.00366, 0.52 ) }
    dend_30 { pt3dadd( -43.9305, -202.414, 5.1194, 0.52 ) }
    dend_30 { pt3dadd( -44.1436, -203.798, 5.20341, 0.52 ) }
    dend_30 { pt3dadd( -44.2854, -204.459, 5.21395, 0.52 ) }
    dend_30 { pt3dadd( -44.596, -205.756, 5.23215, 0.52 ) }
    dend_30 { pt3dadd( -44.9404, -207.041, 5.25927, 0.52 ) }
    dend_30 { pt3dadd( -45.2728, -208.122, 5.27283, 1.03 ) }
    dend_30 { pt3dadd( -45.5397, -208.91, 5.28901, 1.25 ) }
    dend_30 { pt3dadd( -45.9387, -209.889, 5.32911, 0.66 ) }
    dend_30 { pt3dadd( -46.4105, -210.845, 5.38691, 0.29 ) }
    dend_30 { pt3dadd( -47.114, -211.788, 5.51787, 0.29 ) }
    dend_30 { pt3dadd( -47.5972, -211.679, 5.69813, 0.52 ) }
    dend_30 { pt3dadd( -48.8219, -210.875, 6.21496, 0.29 ) }
    dend_30 { pt3dadd( -49.776, -210.113, 6.62035, 0.29 ) }
    dend_30 { pt3dadd( -50.7774, -209.163, 7.05461, 0.22 ) }
    dend_30 { pt3dadd( -50.9655, -208.959, 7.13506, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -38.1611, -186.452, -2.59342, 0.22 ) }
    dend_29 { pt3dadd( -38.6333, -188.29, -3.05232, 0.22 ) }
    dend_29 { pt3dadd( -38.8205, -189.025, -3.245, 0.22 ) }
    dend_29 { pt3dadd( -39.1337, -190.49, -3.6245, 0.22 ) }
    dend_29 { pt3dadd( -39.4393, -192.149, -4.03522, 0.22 ) }
    dend_29 { pt3dadd( -39.687, -193.494, -4.36806, 0.22 ) }
    dend_29 { pt3dadd( -40.1677, -196.104, -5.01415, 0.22 ) }
    dend_29 { pt3dadd( -40.3884, -197.226, -5.25009, 0.22 ) }
    dend_29 { pt3dadd( -40.8153, -199.437, -5.7569, 0.22 ) }
    dend_29 { pt3dadd( -41.0123, -200.666, -6.08255, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 153.732, 18.94, -156.56, 0.29 ) }
    dend_8 { pt3dadd( 154.376, 18.1617, -157.232, 0.29 ) }
    dend_8 { pt3dadd( 154.746, 17.7141, -157.618, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 153.732, 18.94, -156.56, 0.37 ) }
    dend_7 { pt3dadd( 154.278, 19.851, -156.358, 0.37 ) }
    dend_7 { pt3dadd( 154.921, 20.9237, -156.12, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 7
    dend_41 nseg = 7
    dend_32 nseg = 3
    dend_88 nseg = 3
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 7
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 7
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 7
    dend_2 nseg = 9
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_ChC_7c8be3c828_0_0


