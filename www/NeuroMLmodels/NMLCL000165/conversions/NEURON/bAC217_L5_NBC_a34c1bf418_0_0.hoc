// Cell: bAC217_L5_NBC_a34c1bf418_0_0
/*
{
  "id" : "bAC217_L5_NBC_a34c1bf418_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.9016, -1.97873, -2.50057, 3.38117", "-9.79478, -1.80994, -2.24302, 5.67833", "-8.68798, -1.64115, -1.98548, 7.15072", "-7.58118, -1.47235, -1.72793, 8.64399", "-6.47438, -1.30356, -1.47039, 10.0299", "-5.36758, -1.13477, -1.21284, 11.2674", "-4.26078, -0.965972, -0.955299, 11.9107", "-3.15398, -0.797179, -0.697754, 12.2563", "-2.04718, -0.628385, -0.440209, 12.5208", "-0.940378, -0.459592, -0.182664, 12.7145", "0.166423, -0.290798, 0.0748807, 12.541", "1.27322, -0.122005, 0.332426, 12.2075", "2.38002, 0.0467885, 0.589971, 11.6554", "3.48682, 0.215582, 0.847516, 11.0225", "4.59362, 0.384375, 1.10506, 10.3416", "5.70042, 0.553169, 1.36261, 9.80603", "6.80722, 0.721962, 1.62015, 9.2712", "7.91403, 0.890756, 1.8777, 8.04801", "9.02083, 1.05955, 2.13524, 5.78101", "10.1276, 1.22834, 2.39279, 3.52734", "11.2344, 1.39714, 2.65033, 2.23302" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.34928, -3.32158, -7.98898, 1.25", "7.32078, -3.80076, -8.32177, 1.25", "8.09109, -4.35051, -9.08676, 1.25", "8.71618, -4.9147, -9.92349, 0.88", "9.24414, -5.4817, -10.725, 0.88", "9.72884, -6.08897, -11.5055, 0.88", "10.9612, -7.97125, -13.6774, 1.18", "11.7285, -9.70967, -15.542, 1.18", "11.8648, -10.1239, -15.9281, 1.69", "12.0301, -10.6798, -16.3604, 1.84", "12.295, -11.4497, -16.8413, 1.62", "12.8155, -12.5845, -17.3049, 1.11", "13.5306, -13.6941, -17.4655, 1.11", "14.5386, -14.9994, -17.4961, 1.11", "15.4255, -16.0839, -17.4491, 1.11", "16.3339, -17.1947, -17.3392, 1.11", "17.1889, -18.3342, -17.1618, 1.11", "17.9444, -19.4807, -16.923, 1.18", "18.3582, -20.3225, -16.7284, 1.33", "18.7295, -21.7151, -16.4166, 1.25", "18.8213, -22.902, -16.1854, 0.88", "18.713, -24.4649, -15.9648, 1.25", "18.589, -25.1893, -15.9133, 1.55", "18.4506, -25.9698, -15.862, 1.55", "18.3159, -27.0395, -15.7939, 1.33", "18.2811, -28.1524, -15.711, 1.11", "18.4387, -29.5879, -15.5439, 0.81", "18.9077, -31.18, -15.2877, 0.59", "19.8687, -33.0695, -14.8761, 0.59", "20.5525, -33.8982, -14.6381, 0.74", "21.6957, -34.7845, -14.3099, 0.96", "22.5786, -35.2652, -14.102, 1.18", "23.2509, -35.5455, -13.9885, 1.18", "24.1456, -35.8731, -13.897, 1.18", "25.1562, -36.2823, -13.8838, 0.88", "26.2243, -36.9292, -13.9553, 0.88", "26.7361, -37.4164, -14.0473, 1.11", "27.4317, -38.3115, -14.2158, 1.11", "27.862, -38.9733, -14.3387, 0.96", "28.262, -39.6381, -14.4615, 1.25", "29.0882, -40.9328, -14.7352, 0.66", "29.6165, -41.6334, -14.9005, 0.66", "30.2221, -42.2142, -15.0498, 0.66", "30.8734, -42.5958, -15.1863, 0.74", "31.7528, -42.906, -15.4032, 0.59", "32.8868, -43.1938, -15.6981, 0.88", "33.5162, -43.3404, -15.8714, 0.88", "34.1293, -43.5194, -16.0436, 1.11", "35.2952, -43.9888, -16.386, 0.66", "36.3324, -44.5899, -16.6988, 0.59", "37.2335, -45.3907, -16.9671, 0.66", "37.9695, -46.3304, -17.1378, 0.81", "38.5912, -47.3412, -17.2759, 1.4", "38.8164, -47.7856, -17.317, 1.55", "39.1828, -48.6511, -17.3503, 0.96", "39.6246, -49.7807, -17.3599, 0.52", "39.9852, -50.6147, -17.4016, 0.52", "40.4668, -51.5573, -17.4765, 0.96", "40.8135, -52.1768, -17.5545, 1.03", "41.0579, -52.5906, -17.6017, 1.11", "41.3234, -53.0291, -17.6325, 1.11", "42.0453, -54.2401, -17.6965, 0.52", "42.6278, -55.3321, -17.6766, 0.59", "43.1442, -56.3799, -17.5757, 0.59", "43.6445, -57.4088, -17.4519, 1.18", "44.0652, -58.2381, -17.3759, 1.55", "44.323, -58.7111, -17.3514, 1.55", "45.0652, -59.9698, -17.489, 0.81", "45.5777, -60.746, -17.7575, 0.52", "46.1204, -61.4908, -18.1669, 0.44", "46.8502, -62.4597, -18.8404, 0.81", "47.2865, -63.0301, -19.275, 0.96", "48.4699, -64.5682, -20.4628, 0.52", "48.9579, -65.2035, -20.9575, 0.96", "49.346, -65.7429, -21.2977, 1.25", "49.7619, -66.3753, -21.5737, 1.03", "50.2056, -67.0923, -21.7551, 0.74", "50.4838, -67.5506, -21.8201, 0.74", "51.0158, -68.3659, -21.853, 0.74", "51.62, -69.2493, -21.9337, 0.44", "52.313, -70.2358, -22.037, 0.96", "52.7411, -70.841, -22.1003, 1.55", "53.0869, -71.3426, -22.0777, 1.69", "53.478, -71.9232, -21.9653, 1.25", "54.2225, -73.0126, -21.713, 0.59", "54.9621, -74.0555, -21.451, 0.59", "55.7916, -75.1868, -21.2172, 1.25", "57.4387, -77.4404, -20.9085, 0.52", "58.276, -78.5961, -20.7983, 0.44", "59.2773, -79.9949, -20.7151, 0.96", "59.695, -80.5852, -20.7025, 0.96", "60.6201, -81.8717, -20.8035, 0.52", "61.4849, -83.0198, -21.0127, 0.52", "62.3836, -84.1546, -21.3479, 1.11", "62.7617, -84.6251, -21.4551, 1.55", "63.1545, -85.1311, -21.5073, 1.77", "63.4167, -85.4717, -21.5598, 1.84", "63.7868, -85.9464, -21.6753, 1.47", "64.3438, -86.6264, -21.9717, 1.11", "64.868, -87.2596, -22.3419, 0.81", "65.6441, -88.2784, -23.0063, 0.44", "66.5206, -89.5573, -23.8812, 0.96", "66.9685, -90.2874, -24.3758, 1.11", "67.3055, -90.8794, -24.7874, 0.81", "67.6893, -91.5858, -25.2275, 0.29", "68.1286, -92.3652, -25.5821, 0.29", "68.513, -92.9776, -25.691, 0.59", "69.0333, -93.7381, -25.6493, 0.88", "69.447, -94.3022, -25.5511, 1.03", "70.3558, -95.4804, -25.2779, 1.03", "71.1254, -96.3874, -25.0351, 0.59", "71.948, -97.2737, -24.7926, 0.59", "72.685, -98.0452, -24.5915, 0.88", "73.3471, -98.7942, -24.3975, 1.25", "73.7265, -99.2745, -24.2956, 1.47", "73.9561, -99.6263, -24.2472, 1.47", "74.4421, -100.579, -24.1304, 0.37", "74.8141, -101.581, -24.009, 0.37", "75.1355, -102.928, -23.8594, 0.74", "75.235, -103.785, -23.7831, 0.66", "75.312, -104.856, -23.6915, 0.52", "75.3387, -105.37, -23.6299, 0.88", "75.363, -105.97, -23.5256, 0.88", "75.4752, -106.607, -23.2057, 0.37", "75.8705, -107.089, -22.3065, 0.37", "76.2546, -107.44, -21.3957, 0.37", "76.7352, -107.801, -20.3809, 0.37", "77.126, -108.075, -19.6206, 0.44", "78.5387, -108.984, -17.1383, 1.18", "79.2034, -109.414, -16.0759, 1.18", "79.9641, -109.913, -14.9095, 0.37", "80.5327, -110.346, -14.0704, 0.81", "80.8192, -110.589, -13.6968, 0.81", "81.2276, -110.962, -13.2423, 0.81", "81.9938, -111.663, -12.5943, 0.37", "83.1738, -112.64, -11.6641, 1.33", "83.615, -112.951, -11.312, 1.69", "84.4631, -113.497, -10.6139, 1.25", "85.132, -113.873, -10.0963, 0.66", "85.9846, -114.28, -9.51855, 0.52", "86.8128, -114.604, -9.09593, 0.81", "87.2136, -114.773, -8.94636, 0.81", "87.6662, -114.985, -8.78917, 0.81", "88.2686, -115.322, -8.59611, 0.44", "88.9018, -115.765, -8.36407, 0.37", "89.283, -116.223, -8.19107, 0.37", "89.8367, -117.482, -7.85394, 0.37", "90.0636, -118.138, -7.70971, 0.74", "90.2625, -118.745, -7.59513, 0.81", "90.418, -119.213, -7.51892, 0.81", "90.7394, -120.034, -7.41775, 0.37", "91.165, -120.858, -7.28397, 0.37", "91.9345, -121.943, -7.08115, 0.37", "92.5405, -122.655, -6.90867, 0.66", "92.9321, -123.065, -6.79065, 0.81", "93.5569, -123.662, -6.59703, 0.81", "94.7812, -124.74, -6.21416, 0.52", "95.1866, -125.101, -6.08375, 0.52", "95.9965, -125.947, -5.8088, 0.88", "96.2915, -126.341, -5.71245, 1.18", "96.5255, -126.735, -5.6614, 1.18", "96.7739, -127.291, -5.64872, 1.18", "96.9806, -127.965, -5.71513, 0.96", "97.1862, -128.897, -5.89412, 0.52", "97.4319, -130.038, -6.22724, 0.52", "97.6279, -130.776, -6.483, 0.74", "97.7681, -131.207, -6.64712, 0.74", "98.1579, -132.12, -6.95786, 0.52", "98.8791, -133.322, -7.31768, 0.52", "99.5147, -134.06, -7.5204, 0.59", "100.349, -134.815, -7.69332, 0.81", "101.186, -135.471, -7.79345, 0.59", "102.428, -136.329, -7.94357, 0.37", "103.286, -136.871, -8.04725, 0.37", "104.199, -137.462, -8.08828, 1.11", "104.417, -137.611, -8.09625, 1.4", "105.14, -138.097, -8.13294, 1.03", "106.173, -138.821, -8.19991, 0.52", "107.168, -139.599, -8.31328, 0.52", "108.179, -140.47, -8.40943, 1.18", "108.558, -140.819, -8.45986, 1.47", "108.937, -141.167, -8.53907, 1.47", "109.945, -142.164, -8.82279, 0.52", "110.7, -143.006, -9.1724, 0.88", "111.097, -143.526, -9.46221, 0.88", "111.823, -144.562, -10.262, 0.59", "112.352, -145.368, -10.9666, 1.03", "112.732, -145.96, -11.5289, 1.03", "113.486, -147.129, -12.7518, 0.44", "113.789, -147.644, -13.2982, 0.44", "114.413, -148.897, -14.5714, 1.03", "114.608, -149.41, -15.025, 1.18", "114.814, -150.086, -15.5437, 0.74", "115.13, -151.31, -16.3477, 0.44", "115.278, -152.192, -16.7176, 0.44", "115.404, -153.157, -16.993, 0.44", "115.553, -154.485, -17.1775, 1.11", "115.643, -154.983, -17.2132, 1.47", "115.86, -155.757, -17.2063, 1.47", "116.494, -157.261, -17.0509, 0.44", "117.014, -158.165, -16.9268, 0.44", "117.727, -159.198, -16.7766, 0.44", "118.428, -160.124, -16.6529, 0.44", "118.906, -160.787, -16.6103, 0.29", "119.54, -161.756, -16.6523, 0.29", "119.825, -162.295, -16.7497, 1.4", "120.051, -162.924, -16.8916, 1.99", "120.259, -163.769, -17.1077, 1.47", "120.504, -165.149, -17.4976, 0.44", "120.696, -166.265, -17.7638, 0.37", "120.909, -167.307, -17.9678, 0.37", "121.115, -168.202, -18.0937, 0.74", "121.298, -168.824, -18.1662, 0.88", "121.513, -169.392, -18.2064, 0.37", "122.292, -171.015, -18.2165, 0.29", "122.694, -171.681, -18.1769, 0.29", "123.12, -172.275, -18.1312, 0.96", "124.12, -173.549, -18.1773, 0.37", "124.807, -174.401, -18.3012, 0.66", "125.092, -174.755, -18.3904, 0.66", "125.996, -175.931, -18.8643, 0.37", "126.243, -176.253, -19.0087, 0.81", "127.498, -177.789, -19.7421, 0.37", "127.798, -178.118, -19.9221, 0.88", "128.093, -178.401, -20.1142, 0.88", "128.862, -179.03, -20.6371, 0.44", "129.381, -179.424, -21.0091, 0.44", "130.128, -179.935, -21.4758, 0.81", "131.357, -180.659, -22.1613, 1.55", "131.813, -180.911, -22.4128, 1.69", "133.056, -181.589, -23.1213, 0.37", "133.93, -182.075, -23.6326, 0.37", "134.801, -182.618, -24.1849, 0.37", "135.736, -183.269, -24.7814, 0.44", "136.388, -183.751, -25.1671, 1.03", "136.882, -184.104, -25.4405, 1.4", "137.289, -184.376, -25.6398, 1.4", "138.491, -185.087, -26.1536, 0.29", "139.379, -185.624, -26.4638, 0.29", "140.087, -186.047, -26.6521, 0.29", "140.626, -186.349, -26.7699, 0.29", "141.316, -186.715, -26.8944, 0.74", "141.893, -187.008, -26.9873, 1.11", "143.084, -187.555, -27.1446, 0.52", "143.745, -187.863, -27.2345, 0.81", "144.5, -188.259, -27.3356, 0.66", "145.321, -188.72, -27.4698, 0.29", "146.039, -189.112, -27.6045, 0.29", "147.0, -189.607, -27.7998, 0.29", "148.222, -190.17, -28.0556, 0.44", "148.818, -190.434, -28.1652, 0.44", "149.717, -190.832, -28.3324, 0.29", "150.176, -191.044, -28.4106, 0.59", "150.502, -191.206, -28.468, 0.59", "151.069, -191.522, -28.584, 0.29", "151.844, -191.979, -28.7671, 0.29", "152.565, -192.433, -28.9528, 0.59", "152.942, -192.691, -29.0481, 0.74", "153.188, -192.874, -29.1168, 0.74", "154.288, -193.762, -29.4587, 0.29", "155.083, -194.463, -29.7413, 0.44", "155.587, -194.932, -29.9436, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.86928, -3.54582, 4.08102, 1.25", "7.86928, -3.54582, 4.08102, 1.25", "7.66375, -4.27179, 4.32484, 1.25", "7.32467, -5.52369, 4.69359, 1.4", "6.99254, -6.901, 5.04672, 1.4", "6.748, -8.19928, 5.33949, 1.18", "6.5654, -9.52304, 5.60967, 1.18", "6.49487, -10.6276, 5.80146, 1.4", "6.57562, -12.1955, 6.02827, 1.4", "6.74893, -13.8882, 6.21678, 1.4", "6.98981, -15.3037, 6.32677, 1.62", "7.23085, -16.2417, 6.39356, 1.47", "7.77006, -17.7418, 6.47141, 1.03", "8.55565, -19.3764, 6.55533, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.81072, -2.82433, -6.35898, 1.18", "-9.81072, -2.82433, -6.35898, 1.18", "-10.5993, -3.69876, -6.43575, 1.18", "-11.6413, -5.05333, -6.65393, 1.11", "-12.2137, -5.89761, -6.81986, 1.18", "-12.7456, -6.79277, -7.03661, 1.03", "-13.3717, -7.84643, -7.29173, 0.96", "-13.894, -8.80705, -7.54453, 1.4", "-14.3962, -9.95048, -7.89539, 1.62", "-14.5767, -10.5445, -8.11064, 1.84", "-14.8054, -11.5841, -8.54566, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.60072, -6.85107, -1.54898, 1.4", "-3.60072, -6.85107, -1.54898, 1.4", "-4.40292, -7.75779, -2.10527, 1.11", "-5.59694, -8.91322, -2.70696, 0.96", "-5.99198, -9.24179, -2.85111, 0.96", "-6.95188, -9.90866, -3.09965, 0.66", "-7.77975, -10.4152, -3.22134, 0.66", "-8.32461, -10.6798, -3.22935, 1.03", "-9.34592, -11.0757, -3.12615, 1.33", "-10.0421, -11.3394, -3.01245, 1.47", "-10.9757, -11.7452, -2.88549, 1.11", "-11.8976, -12.2633, -2.83318, 0.96", "-12.9361, -13.0995, -2.92637, 0.66", "-13.6698, -13.94, -3.13486, 0.52", "-14.1558, -14.7745, -3.48146, 0.44", "-14.4996, -15.77, -4.03309, 0.44", "-14.7874, -17.0339, -4.84024, 1.4", "-14.8824, -17.6257, -5.23697, 1.84", "-14.9452, -18.1679, -5.5938, 2.14", "-15.0855, -19.4958, -6.39528, 1.99", "-15.3192, -21.5599, -7.42845, 1.03", "-15.5098, -23.0579, -8.01461, 0.88", "-15.6893, -24.1827, -8.18284, 0.81", "-15.8577, -24.9882, -8.04467, 0.66", "-16.1759, -26.2129, -7.46585, 0.66", "-16.4896, -27.2131, -6.72141, 0.96", "-16.6661, -27.7012, -6.2467, 1.11", "-17.7911, -30.629, -3.25461, 0.44", "-18.1572, -31.5286, -2.37574, 1.03", "-18.2513, -31.7515, -2.18683, 1.4", "-18.515, -32.3094, -1.82223, 1.69", "-18.7538, -32.7604, -1.67405, 1.69", "-19.6482, -34.251, -1.64827, 0.81", "-20.197, -34.9727, -1.87952, 1.18", "-20.9134, -35.7064, -2.15679, 1.47", "-21.4126, -36.1468, -2.30851, 1.47", "-22.113, -36.725, -2.43609, 1.4", "-23.0148, -37.4348, -2.49707, 1.11", "-24.4838, -38.5444, -2.42056, 0.52", "-25.4025, -39.2837, -2.29269, 0.52", "-26.3895, -40.243, -2.03714, 0.52", "-27.3223, -41.5314, -1.6493, 1.18", "-27.5907, -42.0907, -1.51372, 1.55", "-27.7082, -42.4925, -1.46435, 1.69", "-27.8389, -43.1302, -1.47563, 1.92", "-28.0358, -44.179, -1.67262, 0.74", "-28.2784, -45.5426, -1.94927, 0.44", "-28.6232, -47.3464, -2.31987, 0.44", "-28.9398, -48.8771, -2.58677, 0.44", "-29.3569, -50.6627, -2.82905, 0.74", "-29.709, -51.8378, -2.93358, 0.52", "-30.6509, -54.3355, -3.01566, 1.03", "-30.9167, -54.9653, -2.98408, 1.25", "-31.2551, -55.7781, -2.8681, 0.66", "-31.627, -56.7792, -2.64376, 0.29", "-31.9913, -57.9832, -2.33028, 0.29", "-32.1754, -58.7147, -2.15017, 0.59", "-32.4297, -60.1638, -1.86427, 0.59", "-32.4823, -61.1462, -1.63013, 1.03", "-32.4023, -62.8493, -1.22476, 1.4", "-32.3196, -63.6181, -1.05167, 1.77", "-32.2405, -64.2509, -0.949132, 2.14", "-32.1665, -65.2197, -0.855976, 2.36", "-32.2588, -66.5791, -0.897218, 0.74", "-32.521, -67.6242, -1.04246, 0.44", "-32.8729, -68.4431, -1.27776, 0.44", "-33.5135, -69.6554, -1.61446, 0.74", "-33.8726, -70.2706, -1.74951, 0.74", "-34.5216, -71.3465, -1.91226, 0.66", "-34.9698, -72.1358, -1.93093, 0.44", "-35.3664, -73.0429, -1.82217, 0.44", "-35.7738, -74.3896, -1.53417, 0.59", "-35.9968, -75.3085, -1.27051, 0.81", "-36.2123, -76.0636, -1.04476, 0.96", "-36.4809, -76.7708, -0.825261, 0.74", "-36.8679, -77.4753, -0.64465, 0.44", "-37.4025, -78.1462, -0.512138, 0.44", "-38.0859, -78.8083, -0.483303, 0.74", "-39.3528, -79.9349, -0.489516, 0.88", "-40.008, -80.5112, -0.461138, 1.4", "-40.3405, -80.8354, -0.399998, 1.4", "-40.8852, -81.5225, -0.198909, 1.18", "-41.2477, -82.2166, 0.0493692, 0.81", "-41.5446, -83.2837, 0.456675, 0.52", "-41.6641, -84.3195, 0.854473, 0.52", "-41.729, -85.7753, 1.40662, 0.74", "-41.7502, -86.8007, 1.76664, 0.52", "-41.7626, -87.3538, 1.94688, 1.11", "-41.7968, -88.0203, 2.15624, 1.4", "-41.8477, -88.5763, 2.29883, 1.55", "-41.9525, -89.3852, 2.45838, 0.74", "-42.2165, -90.89, 2.69679, 0.44", "-42.4617, -91.9713, 2.92141, 0.81", "-42.8031, -93.2221, 3.22846, 1.11", "-43.1046, -94.1134, 3.47307, 1.33", "-43.393, -94.8117, 3.68297, 1.55", "-43.7469, -95.4699, 3.92062, 1.18", "-44.6682, -96.6647, 4.53702, 0.59", "-45.0931, -97.074, 4.8258, 0.96", "-45.5909, -97.4779, 5.15173, 1.11", "-46.1056, -97.8732, 5.4956, 1.11", "-47.0505, -98.5949, 6.13254, 0.59", "-48.0723, -99.3986, 6.80544, 0.81", "-48.9857, -100.168, 7.37677, 0.59", "-49.9449, -101.084, 7.97902, 0.59", "-50.8739, -102.125, 8.55708, 0.44", "-51.5491, -103.069, 8.91091, 0.81", "-51.9278, -103.765, 9.04845, 0.96", "-52.1552, -104.371, 9.07576, 0.96", "-52.3398, -105.211, 9.0217, 0.96", "-52.442, -106.084, 8.92167, 0.66", "-52.4966, -107.85, 8.6521, 0.52", "-52.4789, -108.763, 8.50555, 0.66", "-52.4339, -109.852, 8.35093, 1.33", "-52.4117, -110.625, 8.25996, 1.99", "-52.4537, -112.485, 8.10311, 0.44", "-52.5739, -113.483, 8.0667, 0.44", "-52.7456, -114.177, 8.08247, 0.74", "-52.9466, -114.722, 8.0955, 0.74", "-53.3256, -115.497, 8.13712, 0.74", "-53.8167, -116.326, 8.19256, 0.37", "-54.5859, -117.424, 8.27602, 0.29", "-55.2187, -118.161, 8.35285, 0.29", "-55.9879, -118.946, 8.45167, 0.29", "-56.675, -119.588, 8.57953, 0.22", "-57.0595, -119.923, 8.66897, 0.22", "-57.6819, -120.479, 8.83753, 0.81", "-58.0452, -120.831, 8.94696, 0.96", "-58.9083, -121.677, 9.21981, 0.22", "-59.6413, -122.454, 9.45683, 1.33", "-60.1213, -123.044, 9.60511, 1.55", "-60.8132, -124.004, 9.84532, 1.11", "-61.1918, -124.593, 10.0015, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.23072, 4.39068, 5.70102, 1.33", "-2.23072, 4.39068, 5.70102, 1.33", "-3.24192, 5.10453, 5.70102, 1.55", "-4.27452, 5.77291, 5.70102, 1.4", "-5.43174, 6.45084, 5.70102, 1.18", "-6.26959, 6.91281, 5.70406, 1.47", "-7.38856, 7.52848, 5.74475, 1.77", "-8.1969, 7.96509, 5.81224, 1.99", "-9.08275, 8.45482, 5.95884, 1.99", "-10.1358, 9.11293, 6.24548, 1.62", "-11.3255, 10.0566, 6.74802, 1.11", "-12.0687, 10.8527, 7.22188, 1.11", "-12.6176, 11.7131, 7.75675, 1.25", "-13.0545, 12.8434, 8.45764, 1.47", "-13.2409, 13.9387, 9.14256, 1.69", "-13.214, 14.844, 9.70119, 1.92", "-13.0311, 15.8853, 10.3145, 1.77", "-12.8096, 16.6638, 10.7265, 1.4", "-12.4346, 17.6769, 11.2034, 1.18", "-12.021, 18.6772, 11.6377, 1.11", "-11.416, 19.9899, 12.1885, 1.62", "-11.1293, 20.5643, 12.4223, 1.99", "-10.6965, 21.3681, 12.7412, 2.21", "-10.3278, 22.007, 12.9885, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.9007, 0.851422, -3.98898, 1.77", "-10.9695, 0.86441, -3.98898, 1.77", "-12.0851, 1.09362, -3.98898, 1.77", "-13.1085, 1.33657, -3.98898, 1.62", "-14.3248, 1.66423, -3.98898, 1.62", "-15.6022, 2.05329, -3.98898, 1.84", "-16.5053, 2.37071, -3.98898, 1.92", "-17.3653, 2.71457, -4.01157, 2.14", "-18.3747, 3.18859, -4.06454, 2.14", "-19.255, 3.6792, -4.14349, 2.14", "-19.9884, 4.16135, -4.26427, 2.14", "-21.0793, 4.98233, -4.51781, 2.14", "-21.9569, 5.71436, -4.82872, 2.14", "-22.4746, 6.17225, -5.04383, 2.21", "-23.0582, 6.7153, -5.33261, 1.99", "-23.7758, 7.4169, -5.75443, 1.99", "-24.391, 8.04141, -6.18252, 2.14", "-25.3436, 9.0727, -6.99025, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2344, 1.39714, 2.65033, 3.17", "26.063, 3.65858, 2.65033, 3.17", "40.8915, 5.92002, 2.65033, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.55565, -19.3764, 6.55533, 1.25", "9.02559, -20.5985, 6.43337, 1.25", "9.07494, -22.2361, 6.28106, 1.03", "8.69953, -23.5863, 6.17532, 0.66", "8.34166, -24.5675, 6.11263, 0.96", "8.00538, -25.589, 6.05838, 1.18", "7.62683, -27.0587, 5.99081, 1.18", "7.38975, -27.9907, 5.92967, 1.47", "7.02228, -29.4775, 5.86186, 0.81", "6.89662, -30.4741, 5.84728, 0.81", "7.12511, -31.6963, 5.83093, 0.96", "7.62849, -32.6971, 5.84358, 0.88", "8.31476, -33.7661, 5.91196, 1.33", "8.7303, -34.3987, 5.97855, 1.55", "9.18966, -35.1238, 6.07944, 1.33", "9.58353, -35.9007, 6.2089, 0.81", "10.0445, -37.3141, 6.45811, 0.66", "10.3225, -38.7514, 6.69244, 0.96", "10.419, -39.6992, 6.81637, 1.4", "10.4595, -40.4749, 6.89114, 1.4", "10.4809, -41.2596, 6.98053, 1.4", "10.4668, -42.6063, 7.19642, 0.96", "10.4506, -43.242, 7.34418, 0.81", "10.4233, -44.4139, 7.76516, 0.81", "10.3997, -45.2695, 8.14758, 0.74", "10.3542, -47.0113, 9.06123, 0.74", "10.335, -48.3335, 9.76497, 0.88", "10.3484, -49.4193, 10.3194, 0.88", "10.4338, -50.6409, 10.8373, 1.47", "10.6267, -51.7915, 11.1213, 0.81", "11.0088, -53.1441, 11.1379, 0.59", "11.5533, -54.6585, 10.9199, 0.88", "11.9678, -55.7401, 10.7364, 0.88", "12.4191, -57.0324, 10.5424, 0.66", "12.8397, -58.455, 10.3984, 0.59", "13.0887, -59.6493, 10.4011, 0.59", "13.2394, -60.9484, 10.5491, 0.59", "13.3167, -62.2104, 10.8536, 0.88", "13.3223, -63.6308, 11.3394, 0.66", "13.2835, -64.7607, 11.8037, 1.03", "13.1898, -66.2078, 12.4584, 1.25", "13.0721, -67.6436, 13.1131, 1.25", "13.0039, -68.5844, 13.5094, 1.84", "12.9757, -69.4977, 13.8735, 2.28", "12.9819, -70.2918, 14.2499, 1.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.55565, -19.3764, 6.55533, 0.74", "8.14875, -22.0293, 10.1574, 0.74", "8.23975, -22.5723, 11.177, 0.74", "8.3621, -23.0337, 12.1545, 0.74", "8.53971, -23.7774, 13.6865, 1.11", "8.62559, -24.1641, 14.3991, 1.11", "8.841, -25.1634, 15.9641, 0.66", "9.39588, -27.2324, 18.6345, 1.4", "9.59834, -28.1231, 19.7601, 0.96", "9.69194, -28.867, 20.6447, 1.18", "9.6966, -29.8969, 21.6934, 0.88", "9.52166, -31.3144, 22.8796, 0.66", "9.12334, -32.9374, 23.8912, 0.66", "8.83041, -33.9122, 24.3712, 0.59", "8.37632, -35.3536, 25.06, 0.74", "8.04669, -36.268, 25.5347, 1.03", "7.63549, -37.1288, 26.0339, 1.18", "6.96852, -38.2121, 26.6809, 1.4" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.8054, -11.5841, -8.54566, 0.81", "-16.2549, -12.4781, -8.44327, 0.81", "-17.1408, -13.0588, -8.23752, 0.88", "-17.9816, -13.672, -7.95636, 1.03", "-18.6523, -14.2338, -7.67983, 1.03", "-19.2867, -14.8713, -7.36281, 0.52", "-19.8374, -15.5877, -6.96921, 0.52", "-20.3085, -16.5682, -6.30361, 0.74", "-20.4328, -16.994, -6.00919, 0.96", "-20.5293, -17.5108, -5.6482, 0.59", "-20.6335, -18.1839, -5.202, 0.44", "-20.8419, -19.4766, -4.49601, 0.44", "-20.9615, -20.0093, -4.2144, 0.81", "-21.1852, -20.6144, -3.88251, 0.96", "-21.5843, -21.4102, -3.39635, 1.03", "-21.8759, -21.9252, -3.07697, 0.96", "-22.2747, -22.6353, -2.66565, 0.37", "-22.9144, -23.9664, -1.95974, 0.37", "-23.1841, -24.6781, -1.59225, 0.29", "-23.3638, -25.3466, -1.28294, 0.37", "-23.5671, -26.2922, -0.905413, 0.37", "-23.7366, -27.2659, -0.551983, 0.81", "-23.8881, -28.2044, -0.255161, 1.25", "-23.9378, -28.487, -0.191777, 1.55", "-24.1949, -29.577, 0.0388266, 0.37", "-24.4633, -30.1818, 0.159589, 0.37", "-24.6833, -30.4542, 0.215239, 0.44", "-25.2769, -30.9954, 0.312514, 0.59", "-25.6687, -31.3186, 0.351534, 0.66", "-26.1558, -31.7051, 0.394191, 0.37", "-26.716, -32.1462, 0.43576, 0.59", "-27.2962, -32.6636, 0.447711, 0.88", "-27.625, -32.991, 0.436094, 1.03", "-28.2069, -33.6763, 0.468931, 0.37", "-28.3938, -33.9127, 0.503195, 0.37", "-28.7422, -34.3475, 0.603673, 0.37", "-29.2061, -34.9058, 0.77426, 0.66", "-29.5626, -35.2971, 0.916753, 0.88", "-30.7936, -36.5121, 1.38293, 0.29", "-31.3207, -37.0141, 1.56778, 0.29", "-31.834, -37.5429, 1.73547, 0.96", "-32.1035, -37.8477, 1.82267, 1.33", "-32.5868, -38.4803, 1.97311, 1.11", "-33.1442, -39.3141, 2.19591, 0.59", "-33.6306, -40.1056, 2.32136, 0.37", "-34.0184, -40.8138, 2.63985, 0.66", "-34.2608, -41.2277, 2.94974, 0.52", "-34.5689, -41.6956, 3.4416, 0.29", "-35.3042, -42.7153, 4.7617, 0.29", "-35.8919, -43.4126, 5.87063, 0.81", "-37.3938, -44.7416, 8.7252, 0.88", "-37.7677, -44.9734, 9.39861, 0.29", "-37.9772, -45.0648, 9.7526, 0.29", "-38.4461, -45.1863, 10.5405, 0.66", "-38.6609, -45.214, 10.9234, 0.66", "-42.9632, -52.8876, 15.3444, 0.66", "-47.7981, -60.4417, 19.4184, 0.66", "-52.8772, -67.884, 23.4103, 0.66", "-57.1901, -75.8055, 27.3334, 0.66", "-60.0846, -83.0727, 33.3391, 0.66", "-61.8513, -90.7137, 39.294, 0.66", "-64.0102, -97.5564, 46.0826, 0.66", "-64.2842, -105.164, 52.3307, 0.66", "-63.3233, -112.476, 58.8755, 0.66", "-60.6699, -120.008, 64.6448, 0.66", "-57.4889, -127.822, 69.7103, 0.66", "-54.6125, -135.594, 75.0181, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-14.8054, -11.5841, -8.54566, 1.03", "-13.9767, -12.5625, -9.40152, 1.03", "-12.4893, -14.0249, -10.5648, 0.81", "-11.4507, -15.0802, -11.327, 1.03", "-10.3186, -16.3527, -12.1406, 0.88", "-9.49652, -17.382, -12.7494, 1.11", "-8.85792, -18.3108, -13.2659, 0.74", "-8.23669, -19.4028, -13.7638, 0.52", "-7.69002, -20.9689, -14.3636, 0.88", "-7.57983, -22.1171, -14.8238, 1.47", "-7.64419, -22.9128, -15.1133, 1.25", "-7.84747, -24.2038, -15.5284, 1.25", "-8.05069, -25.2534, -15.8271, 0.81", "-8.38404, -26.9705, -16.2042, 0.66", "-8.58785, -28.5807, -16.4274, 0.66", "-8.69471, -30.5253, -16.5838, 0.96", "-8.68, -31.535, -16.5999, 1.11", "-8.60969, -32.485, -16.568, 1.11", "-8.46598, -33.8181, -16.474, 0.74", "-8.29579, -35.2097, -16.3363, 0.52", "-8.19877, -36.2896, -16.2364, 0.74", "-8.20081, -37.0722, -16.2118, 1.11", "-8.37393, -38.2145, -16.2296, 0.96", "-8.80054, -39.3699, -16.2863, 0.74", "-9.19907, -40.0658, -16.3258, 0.74", "-9.597, -40.6695, -16.3307, 0.74", "-10.1426, -41.5235, -16.3006, 0.59", "-10.777, -42.6114, -16.2306, 0.52", "-11.3461, -43.804, -16.1188, 0.52", "-11.7881, -45.0364, -15.9996, 0.74", "-12.1689, -46.7276, -15.8564, 0.88", "-12.2687, -47.7475, -15.7853, 1.18", "-12.2516, -48.5271, -15.7646, 1.4", "-12.1515, -49.5579, -15.7781, 1.62", "-12.0762, -50.199, -15.8135, 1.77", "-12.0008, -51.0707, -15.9067, 1.4", "-11.9764, -52.1335, -16.0543, 0.66", "-12.0554, -53.324, -16.2373, 0.44", "-12.2368, -54.2906, -16.3907, 0.81", "-12.4423, -54.951, -16.529, 1.25", "-12.5781, -55.3263, -16.645, 1.4", "-12.7197, -55.6711, -16.7969, 1.4", "-13.0483, -56.4028, -17.1664, 0.88", "-13.5827, -57.5651, -17.7975, 0.59", "-14.0923, -58.715, -18.4592, 0.59", "-14.7212, -60.1625, -19.2978, 0.88", "-15.2866, -61.518, -20.0853, 0.52", "-15.6797, -62.5376, -20.6982, 0.52", "-15.8499, -63.0844, -21.0443, 1.11", "-15.9862, -63.722, -21.4563, 1.55", "-16.0415, -64.3456, -21.8149, 1.77", "-16.0133, -65.0022, -22.1468, 1.4", "-15.7738, -66.3032, -22.7534, 0.66", "-15.4366, -67.5118, -23.3026, 0.44", "-15.0865, -68.5401, -23.7328, 0.44", "-14.6311, -69.7155, -24.1754, 0.44", "-14.4254, -70.2343, -24.3411, 0.88", "-14.2511, -70.6918, -24.4385, 1.25", "-14.0673, -71.2353, -24.4995, 1.55", "-13.9739, -71.6411, -24.5227, 1.55", "-13.8694, -72.5032, -24.5583, 1.25", "-13.8845, -73.9725, -24.58, 0.59", "-14.059, -75.2062, -24.6152, 0.59", "-14.2221, -75.8372, -24.6058, 0.96", "-14.5375, -76.703, -24.5573, 0.96", "-14.9237, -77.5331, -24.4736, 0.81", "-15.7402, -78.9763, -24.2543, 0.37", "-16.5979, -80.2393, -24.0079, 0.37", "-17.4709, -81.4195, -23.7455, 1.18", "-17.7897, -81.8398, -23.622, 1.62", "-18.1355, -82.2696, -23.4597, 1.62", "-18.7099, -82.9602, -23.1196, 1.33", "-19.618, -84.0154, -22.4684, 0.44", "-20.4311, -84.9272, -21.8175, 0.44", "-21.0728, -85.6381, -21.3188, 0.66", "-21.832, -86.4902, -20.7269, 0.66", "-22.5754, -87.3522, -20.1545, 0.44", "-23.0299, -87.9076, -19.8138, 0.81", "-23.3765, -88.3542, -19.5798, 1.25", "-23.7901, -88.8995, -19.3391, 1.55", "-24.2303, -89.499, -19.1289, 1.25", "-24.7397, -90.2283, -18.916, 0.52", "-25.2476, -90.9591, -18.7426, 0.37", "-25.752, -91.7431, -18.5014, 0.29", "-26.3994, -92.8103, -18.0537, 0.81", "-26.7184, -93.3727, -17.7378, 1.25", "-27.0104, -93.9731, -17.2961, 0.81", "-27.3597, -94.8294, -16.5723, 0.37", "-27.8047, -96.1675, -15.3606, 0.37", "-27.9729, -96.7475, -14.8248, 0.74", "-28.1935, -97.5318, -14.1251, 0.81", "-28.5093, -98.5704, -13.232, 0.29", "-28.7035, -99.2027, -12.7357, 0.88", "-28.8008, -99.5501, -12.5234, 1.18", "-28.9803, -100.238, -12.2955, 1.18", "-29.1681, -100.976, -12.1775, 0.81", "-29.4651, -102.122, -12.1399, 0.29", "-29.7225, -103.082, -12.1773, 0.29", "-29.912, -103.887, -12.2102, 0.29", "-30.0165, -104.437, -12.2528, 0.66", "-30.1147, -105.125, -12.3223, 0.96", "-30.2104, -105.886, -12.4392, 0.96", "-30.3228, -106.725, -12.6023, 0.52", "-30.5267, -107.92, -12.8617, 0.37", "-30.6761, -108.728, -13.0828, 0.74", "-30.8481, -109.598, -13.3606, 0.44", "-31.0428, -110.452, -13.6652, 1.11", "-31.1909, -110.97, -13.8637, 1.11", "-31.4296, -111.567, -14.0925, 0.81", "-32.0618, -112.897, -14.5515, 0.37", "-32.4693, -113.643, -14.7312, 0.66", "-32.6803, -113.989, -14.7901, 0.96", "-33.0259, -114.553, -14.7892, 0.96", "-33.593, -115.583, -14.4159, 0.29", "-33.8224, -116.215, -13.6314, 0.29", "-33.908, -116.689, -12.8078, 0.96", "-33.9094, -116.917, -12.3401, 1.25", "-33.8732, -117.589, -10.8653, 0.44", "-33.7156, -118.81, -7.94417, 0.81", "-33.3343, -120.571, -3.27395, 0.22", "-33.1894, -121.097, -1.72897, 1.18", "-32.9943, -121.608, -0.126345, 1.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-61.1918, -124.593, 10.0015, 0.29", "-59.6161, -125.176, 10.2106, 0.29", "-58.4256, -125.617, 10.3686, 0.29", "-56.9856, -126.15, 10.5597, 0.29", "-55.8616, -126.566, 10.7089, 0.15", "-54.9814, -126.892, 10.8257, 0.29", "-54.4959, -127.072, 10.8901, 0.29", "-45.5246, -131.375, 11.0729, 0.29", "-37.4376, -137.007, 12.1819, 0.29", "-29.3198, -142.701, 12.1921, 0.29", "-21.8003, -148.89, 13.9723, 0.29", "-14.7626, -155.792, 14.5675, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-61.1918, -124.593, 10.0015, 0.29", "-61.9851, -125.312, 10.0606, 0.29", "-62.7941, -126.026, 10.1176, 0.29", "-63.6128, -126.749, 10.1752, 0.29", "-64.5937, -127.615, 10.2443, 0.29", "-65.1457, -128.103, 10.2832, 0.29", "-65.7247, -128.614, 10.3239, 0.81", "-66.1133, -128.908, 10.337, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.3278, 22.007, 12.9885, 0.66", "-12.638, 23.148, 13.3476, 0.66", "-13.8274, 23.7074, 13.4963, 0.66", "-14.9462, 24.209, 13.5625, 0.59", "-15.8465, 24.6141, 13.6208, 1.11", "-16.4608, 24.8953, 13.7247, 1.4", "-16.8887, 25.1074, 13.8326, 1.4", "-17.6684, 25.5333, 14.0768, 0.66", "-18.2733, 26.025, 14.5497, 0.44", "-18.7151, 26.5455, 15.1507, 0.44", "-19.4954, 27.7738, 16.5737, 0.74", "-19.9451, 28.5656, 17.4313, 0.52", "-20.2361, 29.0413, 17.8912, 0.44", "-20.6023, 29.602, 18.3726, 0.74", "-21.073, 30.1903, 18.8322, 0.74", "-21.4899, 30.5852, 19.0651, 0.74", "-22.0477, 30.9871, 19.2964, 0.29", "-23.1162, 31.5486, 19.9391, 0.29", "-23.3123, 31.6402, 20.0929, 0.81", "-23.918, 31.9222, 20.645, 0.81", "-24.4997, 32.2338, 21.2221, 0.74", "-25.3598, 32.753, 22.1091, 0.81", "-27.0507, 33.9106, 23.8968, 1.69", "-28.1266, 34.7374, 25.0073, 0.52", "-28.5288, 35.0781, 25.4193, 0.59", "-29.3131, 35.7823, 26.1694, 0.59", "-29.852, 36.2679, 26.6477, 0.66", "-30.272, 36.6521, 26.9554, 1.03", "-30.6724, 36.9984, 27.1768, 1.03", "-31.8197, 37.828, 27.7982, 0.81", "-32.4512, 38.2453, 28.1534, 0.59", "-33.3693, 38.8285, 28.667, 0.52", "-33.9568, 39.2468, 28.9888, 0.52", "-34.653, 39.8336, 29.3499, 0.59", "-35.1645, 40.3051, 29.6027, 0.88", "-35.6041, 40.8057, 29.7675, 1.03", "-36.0946, 41.5117, 29.9458, 0.59", "-36.4479, 42.1532, 30.0409, 0.52", "-36.7154, 42.7299, 30.1114, 0.81", "-42.7209, 49.3572, 34.3222, 0.81", "-49.1253, 55.1236, 39.2218, 0.81", "-54.9921, 60.8537, 44.7933, 0.81", "-59.4353, 66.824, 51.3327, 0.81", "-64.109, 73.3716, 57.0823, 0.81", "-68.28, 79.3692, 63.7728, 0.81", "-71.134, 85.5872, 70.9271, 0.81", "-72.2099, 90.9711, 79.1944, 0.81", "-72.6664, 96.5298, 87.3973, 0.81", "-74.0394, 102.362, 95.2927, 0.81", "-76.2525, 108.101, 103.068, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-10.3278, 22.007, 12.9885, 1.11", "-10.0591, 23.0488, 12.5259, 1.11", "-9.9207, 24.2099, 12.017, 0.81", "-9.96508, 25.4376, 11.4281, 0.74", "-10.063, 26.0655, 11.1186, 1.11", "-10.1968, 26.6374, 10.852, 1.18", "-10.4375, 27.5035, 10.4827, 1.47", "-10.6802, 28.1322, 10.2238, 1.47", "-11.1467, 29.2237, 9.81497, 1.18", "-11.5807, 30.3124, 9.47929, 0.96", "-11.8904, 31.2586, 9.23021, 1.03", "-12.122, 32.2422, 8.99966, 1.4", "-12.2701, 33.3466, 8.77827, 1.4", "-12.2824, 34.6241, 8.55149, 1.03", "-12.1527, 35.6787, 8.38344, 1.03", "-11.9498, 36.5844, 8.23799, 1.25", "-11.5526, 37.877, 7.9689, 1.11", "-11.2128, 38.829, 7.73698, 1.11", "-10.7625, 40.0667, 7.34656, 1.11", "-10.2753, 41.4679, 6.7852, 1.11", "-9.99318, 42.4251, 6.31776, 1.11", "-9.71582, 43.7503, 5.55098, 1.33", "-9.69166, 44.5455, 5.00399, 1.03", "-9.95958, 45.8674, 3.93946, 1.18", "-10.1919, 46.3557, 3.50655, 1.47", "-10.5589, 46.8447, 3.07409, 1.47", "-10.974, 47.2663, 2.74526, 1.69", "-12.2635, 48.3621, 2.13575, 0.88", "-13.0833, 49.0252, 1.90898, 1.11", "-13.8388, 49.6956, 1.87377, 1.11", "-14.6156, 50.5055, 1.95952, 0.96", "-15.2746, 51.384, 2.14563, 0.88", "-15.8408, 52.4362, 2.42499, 1.18", "-16.2242, 53.4782, 2.748, 1.47", "-16.6114, 55.0574, 3.24386, 1.4", "-16.775, 56.1465, 3.56462, 0.88", "-16.8994, 57.6158, 3.94453, 0.81", "-16.9361, 59.027, 4.28067, 1.69", "-16.9178, 59.636, 4.42391, 1.99", "-16.8786, 60.2906, 4.56889, 1.99", "-16.8573, 60.8143, 4.65588, 2.21", "-16.8488, 61.7903, 4.85796, 1.99" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.3436, 9.0727, -6.99025, 1.4", "-25.427, 10.6131, -7.91258, 1.4", "-25.3255, 11.1949, -8.91629, 1.4", "-25.2497, 11.5733, -9.61169, 1.33", "-25.1471, 12.3763, -10.9916, 1.62", "-25.1037, 13.0925, -12.0758, 1.25", "-25.107, 14.6941, -14.2143, 1.03", "-25.2618, 16.72, -16.9845, 1.4", "-25.3507, 17.3188, -17.7193, 1.4", "-25.5209, 18.0243, -18.4536, 1.11", "-25.82, 18.9335, -19.1564, 1.33", "-26.1714, 19.7106, -19.6236, 1.69", "-26.6756, 20.532, -19.999, 1.69", "-27.1117, 21.1175, -20.2563, 1.69", "-28.0225, 22.3043, -21.0029, 0.74", "-28.3724, 22.7987, -21.3908, 0.74", "-28.7938, 23.4753, -22.0421, 0.59", "-29.3541, 24.5951, -23.2041, 1.18", "-29.7043, 25.559, -24.3102, 1.18", "-29.9393, 26.4687, -25.3699, 1.18", "-30.0352, 27.144, -26.1546, 1.18", "-30.0676, 28.2068, -27.4426, 0.81", "-30.0643, 28.8369, -28.1825, 0.66", "-30.0823, 30.5038, -30.0421, 0.66", "-30.1179, 30.8469, -30.4095, 1.25", "-30.3933, 31.9657, -31.5401, 1.47", "-30.9521, 33.1966, -32.6682, 0.59", "-31.6826, 34.3583, -33.502, 1.03", "-32.1397, 34.9726, -33.8365, 1.4", "-32.5778, 35.5145, -34.0316, 1.47", "-33.3739, 36.5329, -34.3201, 1.11", "-34.2434, 37.7654, -34.5251, 0.81", "-34.8379, 38.9009, -34.7047, 0.96", "-35.0213, 39.7437, -34.8948, 1.25", "-35.05, 40.4311, -35.0729, 1.55", "-35.0147, 41.331, -35.3196, 1.55", "-34.9304, 42.3242, -35.5989, 0.96", "-34.8145, 43.7939, -36.0172, 0.66", "-34.8507, 44.8179, -36.3065, 0.66", "-35.0384, 45.4827, -36.4666, 0.74", "-35.6294, 46.4129, -36.6848, 1.03", "-36.1676, 46.9492, -36.8299, 1.47", "-36.5762, 47.2771, -36.9426, 1.77", "-37.0921, 47.6481, -37.0996, 1.62", "-38.2877, 48.5256, -37.5595, 0.88", "-39.1397, 49.2257, -37.9559, 0.66", "-40.0291, 50.0949, -38.4534, 0.59", "-40.7831, 51.0127, -38.9497, 0.81", "-41.1893, 51.671, -39.2616, 0.59", "-41.606, 52.6249, -39.6423, 0.81", "-41.7752, 53.2206, -39.8259, 1.03", "-41.9106, 53.8374, -39.9565, 1.03", "-42.0504, 54.5649, -40.0272, 0.74", "-42.2418, 55.4755, -40.0192, 0.52", "-42.4009, 56.1133, -39.9734, 0.52", "-42.6823, 56.9986, -39.8874, 1.11", "-42.9589, 57.6958, -39.8191, 1.4", "-43.4206, 58.7222, -39.7296, 1.4", "-43.6915, 59.3373, -39.6857, 1.03", "-43.8834, 59.8549, -39.6723, 0.74", "-44.1192, 60.7553, -39.715, 0.59", "-44.191, 61.3559, -39.8073, 0.52", "-44.1934, 62.1212, -40.0028, 0.52", "-44.126, 63.2131, -40.3953, 0.52", "-44.0544, 64.047, -40.7268, 0.52", "-43.9927, 64.7353, -41.0668, 0.52", "-43.9642, 65.3884, -41.4861, 0.52", "-44.0264, 65.784, -41.7869, 0.52", "-44.2294, 66.1716, -42.1388, 0.81", "-44.5951, 66.5332, -42.5076, 0.96", "-45.3676, 67.0354, -43.0587, 0.96", "-46.1204, 67.4304, -43.485, 0.52", "-46.9759, 67.8485, -43.9217, 0.81", "-47.4027, 68.0697, -44.143, 1.18", "-47.8601, 68.3441, -44.3872, 1.18", "-48.6171, 68.9369, -44.7972, 0.44", "-49.0614, 69.4389, -45.058, 0.44", "-49.3739, 70.0403, -45.3258, 0.74", "-49.5009, 70.6269, -45.6004, 0.74", "-49.5291, 71.1599, -45.8373, 0.44", "-49.4976, 72.041, -46.192, 0.66", "-49.4156, 72.9613, -46.5258, 0.96", "-49.3495, 73.6717, -46.772, 0.74", "-49.2884, 74.7788, -47.1221, 0.37", "-49.287, 75.6742, -47.3652, 0.37", "-49.3558, 76.534, -47.5662, 0.88", "-49.4358, 76.9024, -47.6211, 1.18", "-49.6648, 77.3647, -47.6379, 1.18", "-50.0276, 77.7995, -47.6454, 1.18", "-50.3957, 78.1672, -47.6435, 1.11", "-50.8364, 78.5956, -47.6503, 0.44", "-51.5259, 79.3022, -47.6719, 0.44", "-52.6387, 80.5522, -47.722, 0.44", "-53.3807, 81.4678, -47.7882, 0.44", "-54.1023, 82.4585, -47.8829, 0.44", "-54.5451, 83.1805, -47.9957, 0.44", "-54.8976, 83.9093, -48.1418, 1.47", "-55.1109, 84.5256, -48.3031, 1.47", "-55.312, 85.3495, -48.5639, 1.18", "-55.5018, 86.157, -48.9216, 0.66", "-55.6966, 87.181, -49.6668, 0.44", "-55.7517, 87.7684, -50.1902, 0.59", "-55.7505, 88.4906, -50.9713, 0.59", "-55.7063, 89.0959, -51.7162, 0.74", "-55.5662, 90.1582, -53.2509, 1.25", "-55.3593, 91.561, -55.5359, 0.66", "-55.2882, 92.1539, -56.5915, 0.66", "-55.2033, 92.9878, -58.1596, 1.25", "-55.1743, 93.4185, -58.9542, 1.62", "-55.1316, 94.9009, -61.4662, 1.4", "-55.1206, 95.5443, -62.4615, 1.11", "-55.1371, 96.3971, -63.6958, 1.25", "-55.1333, 97.1766, -64.7668, 0.96", "-55.0893, 97.8343, -65.53, 1.18", "-55.0099, 98.603, -66.2933, 1.4", "-54.9127, 99.5615, -67.0886, 0.37", "-54.8529, 100.361, -67.7961, 0.37", "-54.8081, 101.073, -68.4679, 0.88", "-54.7962, 101.64, -69.0546, 0.88", "-54.7937, 102.19, -69.6901, 0.88", "-54.8325, 103.163, -70.9306, 0.37", "-54.9821, 104.299, -72.3757, 1.03", "-55.0964, 104.834, -73.1223, 1.03", "-55.1941, 105.143, -73.6286, 1.03", "-55.5289, 105.879, -74.9943, 0.29", "-55.8548, 106.545, -76.3208, 0.29", "-56.1502, 107.108, -77.517, 0.29", "-56.5613, 107.815, -79.0807, 1.25", "-57.1125, 108.618, -80.9271, 1.25", "-57.5726, 109.224, -82.3806, 0.96", "-58.1801, 110.008, -84.1908, 0.37", "-58.3547, 110.287, -84.7601, 0.66", "-58.5609, 110.68, -85.5357, 1.03", "-58.7458, 111.203, -86.3996, 1.03", "-59.0009, 112.396, -88.1006, 0.52", "-59.0875, 112.974, -88.8407, 1.03", "-59.3172, 113.682, -89.6859, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-25.3436, 9.0727, -6.99025, 0.74", "-26.3084, 8.41618, -6.99025, 0.74", "-27.2321, 7.69719, -7.0038, 0.74", "-28.1726, 6.96522, -7.0176, 1.03", "-28.7864, 6.48745, -7.02661, 1.4", "-29.6904, 5.78385, -7.03987, 1.84", "-30.2749, 5.32893, -7.04845, 2.14", "-30.6701, 4.90271, -7.05682, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.8915, 5.92002, 2.65033, 0.29", "55.72, 8.18146, 2.65033, 0.29", "70.5486, 10.4429, 2.65033, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "12.9819, -70.2918, 14.2499, 0.52", "11.033, -68.6929, 15.0847, 0.52", "10.2733, -68.0696, 15.4101, 0.52", "9.31061, -67.2799, 15.8225, 1.25", "8.84692, -66.8995, 16.0211, 1.4", "7.98137, -66.1894, 16.3919, 0.37", "7.44445, -65.7488, 16.6219, 0.29", "0.874474, -58.7306, 18.8626, 0.29", "-6.23138, -51.8848, 19.3179, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "12.9819, -70.2918, 14.2499, 0.66", "14.0712, -71.4156, 14.2798, 0.66", "15.0786, -72.3956, 14.3555, 0.59", "16.3469, -73.6571, 14.4788, 0.59", "16.9311, -74.273, 14.5549, 0.88", "17.5957, -75.0268, 14.652, 0.88", "18.4075, -76.0469, 14.7344, 0.52", "19.0277, -76.9321, 14.7671, 0.52", "19.3415, -77.578, 14.7843, 1.11", "19.4791, -78.339, 14.7508, 1.47", "19.4344, -78.9277, 14.6896, 1.18", "18.9706, -80.2398, 14.4805, 0.59", "18.536, -80.9518, 14.3912, 0.59", "17.9337, -81.7102, 14.364, 0.37", "17.6021, -82.1033, 14.3983, 0.59", "17.2019, -82.6027, 14.497, 0.59", "16.5491, -83.604, 14.8199, 0.44", "16.0459, -84.9977, 15.4427, 0.37", "16.0535, -85.8491, 15.8458, 0.66", "16.3009, -86.7327, 16.2746, 0.96", "16.6526, -87.4976, 16.6603, 0.74", "17.2286, -88.418, 17.1159, 0.52", "18.0621, -89.4899, 17.618, 0.81", "18.7448, -90.243, 17.9335, 0.96", "19.2312, -90.7556, 18.1394, 1.03", "19.9891, -91.5723, 18.4243, 0.81", "20.6688, -92.3281, 18.643, 0.74", "21.1937, -92.8951, 18.7672, 1.11", "21.7318, -93.4426, 18.8245, 1.11", "22.4878, -94.1849, 18.8237, 0.81", "23.1573, -94.8381, 18.7687, 0.52", "23.6557, -95.3857, 18.6935, 0.74", "24.1303, -96.0227, 18.6283, 0.74", "24.6545, -96.9021, 18.5705, 0.52", "24.9495, -97.5476, 18.5524, 0.81", "25.1698, -98.0907, 18.5558, 0.81", "25.6351, -99.2907, 18.6605, 0.59", "25.9883, -100.148, 18.7939, 0.81", "26.2965, -100.851, 18.9994, 0.81", "26.7034, -101.697, 19.3543, 0.44", "27.1578, -102.523, 19.792, 0.81", "27.7392, -103.396, 20.331, 0.66", "28.4094, -104.206, 20.8753, 0.29", "29.6341, -105.534, 21.7202, 0.74", "30.1014, -106.021, 22.008, 1.25", "30.5123, -106.445, 22.2587, 1.25", "31.4171, -107.452, 22.7966, 0.37", "32.1979, -108.372, 23.1786, 0.37", "33.0552, -109.366, 23.5055, 0.37", "33.5461, -109.886, 23.5721, 0.37" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.96852, -38.2121, 26.6809, 0.44", "8.59662, -37.9692, 27.8466, 0.44", "9.39066, -37.8507, 28.4151, 0.29", "10.4339, -37.695, 29.1621, 0.52", "10.9742, -37.6143, 29.549, 0.74", "11.2413, -37.5745, 29.7402, 0.74", "19.6684, -36.3263, 34.9695, 0.74", "28.8282, -34.4119, 38.4686, 0.74", "37.528, -33.8181, 43.3617, 0.74", "46.1563, -32.4944, 48.2309, 0.74", "54.6455, -31.615, 53.4386, 0.74", "63.7428, -32.09, 57.5619, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "6.96852, -38.2121, 26.6809, 0.44", "6.48999, -39.5387, 27.8611, 0.44", "6.2068, -40.324, 28.5595, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-54.6125, -135.594, 75.0181, 0.29", "-50.6989, -143.806, 78.7254, 0.29", "-45.8168, -152.076, 80.783, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-54.6125, -135.594, 75.0181, 0.22", "-62.9434, -138.983, 79.3213, 0.29", "-71.872, -142.546, 81.9532, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.7626, -155.792, 14.5675, 0.37", "-6.54977, -161.343, 14.9382, 0.37", "2.57336, -165.322, 15.2763, 0.37", "11.8325, -168.922, 16.0705, 0.37", "20.379, -173.91, 15.18, 0.37", "28.7509, -178.992, 13.5259, 0.37", "36.1327, -185.31, 11.6504, 0.37", "43.287, -192.038, 10.5521, 0.37", "49.7958, -199.422, 11.0836, 0.37", "55.7916, -207.194, 11.7979, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-14.7626, -155.792, 14.5675, 0.22", "-6.62601, -161.188, 16.348, 0.37", "2.27554, -165.627, 16.5184, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-66.1133, -128.908, 10.337, 0.22", "-65.923, -130.238, 10.0188, 0.22", "-65.7769, -131.259, 9.7747, 0.22", "-65.6647, -132.044, 9.58707, 0.37", "-65.4952, -133.229, 9.30377, 0.37", "-62.9157, -142.599, 8.31252, 0.37", "-59.3374, -151.587, 6.81916, 0.37", "-56.5161, -160.8, 5.16228, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-66.1133, -128.908, 10.337, 0.22", "-67.1139, -130.359, 11.0266, 0.22", "-67.1627, -130.414, 11.056, 0.44", "-67.7308, -130.93, 11.3145, 0.15", "-67.9316, -131.087, 11.3822, 0.37", "-68.5915, -131.581, 11.5674, 0.15", "-69.4242, -132.208, 11.733, 0.22", "-70.1423, -132.706, 11.8723, 0.22", "-70.7449, -133.165, 12.124, 0.66", "-71.4967, -133.715, 12.4711, 0.22", "-71.7841, -133.928, 12.6186, 0.88", "-72.4066, -134.419, 13.0064, 0.74", "-73.5706, -135.6, 13.9853, 1.4", "-74.3084, -136.705, 15.161, 1.18", "-80.0271, -143.045, 20.1629, 1.18", "-84.8372, -149.733, 25.6224, 1.18", "-90.9464, -155.667, 30.6853, 1.18", "-97.4353, -162.187, 34.3166, 1.18", "-103.185, -168.79, 38.9059, 1.18", "-109.504, -174.567, 43.9026, 1.18", "-114.987, -180.707, 49.4051, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-76.2525, 108.101, 103.068, 0.37", "-80.9185, 114.165, 109.356, 0.37", "-86.1258, 118.453, 116.673, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-76.2525, 108.101, 103.068, 0.29", "-80.8081, 114.114, 109.487, 0.37", "-84.8555, 120.496, 115.873, 0.37", "-88.8723, 125.429, 123.506, 0.37", "-92.0556, 131.341, 130.793, 0.37", "-95.2149, 135.517, 139.259, 0.37", "-98.2546, 140.17, 147.504, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-16.8488, 61.7903, 4.85796, 0.96", "-17.0156, 63.5953, 4.31756, 0.96", "-17.2188, 64.7534, 3.91358, 0.81", "-17.4521, 65.6673, 3.58603, 0.81", "-17.7452, 66.6126, 3.1498, 1.18", "-18.4305, 68.7222, 2.10342, 1.18", "-18.6014, 69.2584, 1.83874, 1.18", "-18.902, 70.0775, 1.38258, 0.81", "-19.1341, 70.7435, 1.06178, 0.81", "-19.597, 72.423, 0.5821, 0.66", "-19.744, 73.338, 0.589143, 0.96", "-19.7871, 74.2301, 0.841048, 1.11", "-19.7652, 75.142, 1.24789, 0.81", "-19.65, 76.6637, 2.07562, 0.59", "-19.4807, 78.2582, 2.97829, 0.81", "-19.3252, 79.5965, 3.7507, 1.11", "-19.2128, 80.5835, 4.21889, 1.25", "-19.0707, 82.1105, 4.76589, 0.59", "-19.0348, 82.8803, 4.89013, 0.59", "-19.1304, 84.3631, 4.63714, 0.59", "-19.3301, 85.2122, 4.18039, 0.44", "-19.8438, 86.6622, 3.04315, 1.11", "-20.0233, 87.0816, 2.65055, 1.4", "-20.5041, 88.1388, 1.55525, 0.88", "-20.8854, 88.9651, 0.716894, 0.52", "-21.1659, 89.6225, 0.123125, 0.52", "-21.3714, 90.4878, -0.511226, 0.74", "-21.3139, 91.164, -0.822754, 1.11", "-21.0151, 91.9809, -1.04945, 1.33", "-20.7397, 92.4511, -1.11617, 1.62", "-20.2597, 93.0645, -1.17231, 1.47", "-19.3077, 94.0654, -1.22794, 0.96", "-18.6421, 94.6965, -1.2606, 0.81", "-17.9827, 95.3241, -1.28633, 0.81", "-17.241, 96.0726, -1.30753, 0.66", "-16.5212, 96.8914, -1.35089, 0.59", "-16.1246, 97.4435, -1.40823, 0.59", "-15.6692, 98.2618, -1.52348, 0.44", "-15.2802, 99.1805, -1.67158, 0.81", "-14.9635, 100.153, -1.8695, 0.81", "-14.6599, 101.275, -2.12842, 1.03", "-14.372, 102.417, -2.49557, 1.25", "-14.2397, 102.93, -2.73692, 1.25", "-14.0473, 103.537, -3.20829, 1.18", "-13.7112, 104.425, -4.0732, 0.66", "-13.5243, 104.89, -4.52129, 0.59", "-12.9823, 106.211, -5.72579, 1.25", "-12.5265, 107.322, -6.62468, 1.99", "-11.507, 109.982, -8.38692, 0.59", "-11.2403, 110.747, -8.75577, 0.66", "-10.5957, 112.928, -9.32418, 0.52", "-10.3668, 113.827, -9.38103, 1.03", "-10.1282, 114.906, -9.26269, 1.25", "-9.88361, 116.161, -9.01188, 0.74", "-9.73382, 117.096, -8.78386, 0.59", "-9.62147, 117.875, -8.68907, 0.59", "-9.434, 118.959, -8.71115, 0.88", "-9.21171, 119.859, -8.78102, 1.11", "-8.95225, 120.615, -8.88073, 1.11", "-8.55914, 121.495, -9.0166, 1.03", "-7.88515, 122.675, -9.1958, 0.66", "-7.24384, 123.526, -9.31748, 0.66", "-6.11717, 124.66, -9.45373, 0.96", "-5.23692, 125.37, -9.57421, 1.4", "-4.71124, 125.746, -9.65872, 1.4", "-4.1089, 126.147, -9.78483, 1.4", "-3.21244, 126.749, -10.0627, 0.74", "-2.40288, 127.421, -10.5224, 0.37", "-1.46072, 128.436, -11.464, 0.37", "-1.07506, 128.914, -11.9868, 0.96", "-0.752864, 129.331, -12.482, 0.96", "-0.269407, 129.959, -13.3044, 0.66", "0.43629, 130.873, -14.5469, 0.52", "0.837512, 131.401, -15.227, 0.37", "1.28938, 131.995, -15.8552, 0.81", "1.66813, 132.543, -16.3511, 0.52", "2.16478, 133.463, -17.0521, 0.52", "2.39665, 134.094, -17.4968, 0.66", "2.55874, 135.129, -18.1594, 0.66", "2.50439, 136.025, -18.7626, 0.66", "2.31053, 137.073, -19.5113, 0.66", "2.05468, 138.165, -20.3254, 0.81", "1.79824, 139.295, -21.219, 1.03", "1.7024, 139.869, -21.7319, 1.25", "1.64449, 140.853, -22.7016, 0.52", "1.7026, 141.487, -23.3733, 0.37", "1.96738, 142.161, -24.1206, 0.37", "2.61763, 143.096, -25.2115, 1.11", "3.15443, 143.672, -25.9519, 1.62", "3.41641, 143.907, -26.2852, 1.69", "3.90344, 144.337, -26.9153, 1.69", "4.9784, 145.46, -28.5272, 0.44", "5.48865, 146.154, -29.471, 0.96", "5.91294, 146.921, -30.4173, 1.03", "6.11335, 147.469, -30.9819, 0.88", "6.33722, 148.48, -31.8906, 0.44", "6.48653, 149.561, -32.7257, 0.74", "6.52326, 150.227, -33.1504, 1.03", "6.63442, 150.851, -33.5554, 1.03", "6.99421, 151.717, -34.2093, 0.59", "7.57192, 152.464, -34.9143, 0.59", "8.29073, 153.068, -35.5945, 0.59", "8.82673, 153.456, -36.074, 0.74", "10.1089, 154.468, -37.3057, 0.74", "10.517, 154.89, -37.7882, 0.96", "10.8393, 155.443, -38.2442, 1.11", "10.9844, 155.959, -38.5008, 1.11", "11.1246, 156.987, -38.8343, 0.66", "11.2386, 158.266, -39.0682, 0.52", "11.3792, 159.613, -39.1354, 0.52", "11.6903, 161.772, -39.1176, 1.11", "11.8143, 162.56, -39.0839, 1.33", "11.9337, 163.322, -39.025, 1.33", "12.1146, 164.653, -38.8809, 0.44", "12.2557, 165.72, -38.7783, 0.44", "12.3646, 166.639, -38.7517, 0.74", "12.412, 167.334, -38.7982, 0.74", "12.4342, 168.456, -38.8897, 0.52", "12.407, 169.838, -39.014, 0.44", "12.2997, 171.129, -39.1533, 0.44", "12.1326, 172.445, -39.3237, 1.18", "12.0153, 173.23, -39.4544, 1.18", "11.8576, 174.269, -39.6749, 0.96", "11.7029, 175.297, -39.9496, 0.44", "11.5307, 176.805, -40.4566, 0.37", "11.4914, 177.389, -40.6999, 0.37", "11.5176, 178.617, -41.2959, 0.88", "11.6448, 179.546, -41.7208, 1.18", "11.8351, 180.232, -41.9676, 1.18", "12.3812, 181.582, -42.2328, 0.59", "12.9924, 182.846, -42.2613, 0.52", "13.4238, 183.717, -42.1689, 0.44", "14.3692, 185.574, -41.6865, 0.74", "14.9194, 186.667, -41.2991, 1.25", "15.3935, 187.641, -40.9025, 1.55", "15.7695, 188.497, -40.5133, 1.62", "16.2141, 189.585, -39.9878, 0.81", "16.7143, 190.855, -39.3975, 0.37", "17.1147, 191.883, -38.9786, 0.37", "17.3776, 192.659, -38.6763, 0.37", "17.5994, 193.576, -38.3418, 0.37", "17.6614, 194.148, -38.1639, 0.37", "17.6703, 194.936, -38.0043, 0.66", "17.6694, 195.761, -37.8422, 0.96", "17.7046, 196.41, -37.6438, 1.18", "17.8593, 197.446, -37.2645, 0.52", "18.1642, 198.688, -36.7969, 0.66", "18.4805, 199.783, -36.3969, 0.59", "19.1705, 201.96, -35.6005, 0.52", "19.672, 203.288, -35.1093, 0.96", "20.0415, 204.113, -34.7969, 0.96", "20.582, 205.076, -34.4449, 0.66", "21.3827, 206.306, -34.0103, 0.44", "22.0365, 207.255, -33.7314, 0.44", "22.6891, 208.176, -33.5846, 0.52", "23.2804, 209.005, -33.477, 0.52", "24.3493, 210.47, -33.2346, 0.81", "25.0802, 211.525, -33.0297, 0.52", "25.7196, 212.646, -32.7635, 0.52", "26.1595, 213.681, -32.4991, 1.47", "26.3667, 214.309, -32.3333, 1.77", "26.516, 214.825, -32.2036, 1.77", "26.8105, 215.893, -31.9524, 0.66", "27.273, 217.253, -31.702, 0.52", "27.7838, 218.428, -31.515, 0.52", "28.3689, 219.579, -31.3726, 0.52", "28.7669, 220.34, -31.3139, 0.52", "29.0524, 220.907, -31.2925, 0.81", "29.4984, 221.838, -31.2861, 1.03", "29.8754, 222.845, -31.3127, 1.55", "30.0205, 223.322, -31.3228, 1.33", "30.3185, 224.285, -31.3344, 0.88", "30.6373, 225.075, -31.3344, 0.81", "31.0513, 225.763, -31.3344, 0.59", "32.0627, 226.87, -31.3446, 0.44", "32.9437, 227.544, -31.3141, 0.66", "33.8053, 228.096, -31.2604, 0.81", "34.7251, 228.624, -31.1858, 0.44", "35.546, 229.091, -31.0706, 0.81", "36.1702, 229.474, -30.9509, 0.81", "37.102, 230.083, -30.7386, 0.52", "37.8022, 230.623, -30.5771, 0.52", "38.5519, 231.26, -30.4079, 0.52", "39.3293, 231.936, -30.2517, 0.37", "40.3404, 232.799, -30.1362, 0.37", "41.1488, 233.457, -30.1394, 0.59", "41.9707, 234.1, -30.1746, 1.18", "42.2603, 234.328, -30.1673, 1.47", "42.8606, 234.837, -30.1174, 1.47", "43.8017, 235.704, -30.0017, 0.52", "44.4976, 236.395, -29.8814, 0.52", "45.733, 237.679, -29.6596, 0.96", "46.7896, 238.737, -29.4868, 0.52", "47.7712, 239.657, -29.3844, 0.96", "48.317, 240.138, -29.3654, 0.96", "49.3821, 240.944, -29.4105, 0.52", "49.9719, 241.322, -29.5268, 0.37", "50.9136, 241.776, -29.8589, 0.37", "51.6139, 242.011, -30.1363, 0.81", "52.2357, 242.157, -30.3622, 0.81", "53.2035, 242.359, -30.69, 0.52", "53.9065, 242.514, -30.902, 0.74", "54.9734, 242.791, -31.1857, 0.74", "55.8763, 243.068, -31.4074, 0.52", "56.9122, 243.515, -31.6878, 0.52", "57.8988, 244.141, -31.9889, 0.96", "58.3684, 244.567, -32.1576, 1.55", "58.7431, 244.993, -32.2951, 1.69", "58.9611, 245.282, -32.375, 1.69", "60.0482, 246.717, -32.7251, 0.52", "60.8442, 247.666, -32.9321, 0.66", "61.3651, 248.173, -33.0237, 0.74", "62.3398, 248.939, -33.1899, 0.44", "63.3871, 249.675, -33.3597, 0.37", "64.3639, 250.303, -33.5, 1.11", "65.1171, 250.758, -33.5831, 1.55", "65.9665, 251.317, -33.7253, 0.81", "67.0032, 252.237, -34.0062, 0.52", "67.4824, 252.917, -34.2233, 0.66", "67.6857, 253.332, -34.3755, 0.66", "68.0697, 254.37, -34.7695, 0.44", "68.3924, 255.31, -35.132, 0.44", "68.8065, 256.198, -35.5403, 0.52", "69.5142, 257.072, -36.0774, 0.74", "70.2411, 257.608, -36.6138, 1.11", "70.3527, 257.666, -36.6944, 1.33", "70.8135, 257.846, -37.0134, 1.33", "72.1947, 258.329, -38.0169, 0.37", "72.8127, 258.551, -38.4947, 0.37", "73.8219, 258.986, -39.3083, 0.66", "74.5739, 259.411, -39.9398, 0.44", "74.9946, 259.7, -40.3022, 0.44", "75.9324, 260.42, -41.0862, 1.18", "76.3953, 260.791, -41.3943, 1.47", "77.0068, 261.277, -41.6822, 1.47", "78.1957, 262.249, -42.0189, 0.52", "78.7813, 262.78, -42.0944, 0.52", "79.7274, 263.758, -42.0877, 0.52", "80.7836, 265.01, -41.9187, 0.88", "81.4551, 265.943, -41.745, 0.66", "82.2231, 267.181, -41.4634, 0.96", "82.8461, 268.317, -41.1708, 0.96", "83.4112, 269.378, -40.9199, 0.96", "83.8496, 270.179, -40.757, 0.96", "84.3468, 270.942, -40.6595, 0.96", "84.9413, 271.585, -40.5949, 0.96", "85.8876, 272.297, -40.546, 0.37", "86.966, 272.949, -40.5379, 0.37", "87.9518, 273.486, -40.5325, 0.66", "88.8135, 273.968, -40.5297, 1.33", "89.4287, 274.358, -40.5297, 1.33", "90.2123, 275.021, -40.5328, 0.52", "91.0449, 275.886, -40.5394, 0.52", "91.4209, 276.322, -40.5436, 0.88", "91.9022, 276.856, -40.5797, 0.88", "92.584, 277.501, -40.672, 0.88", "93.545, 278.201, -40.8065, 0.44", "94.5394, 278.783, -40.9603, 0.44", "95.6772, 279.272, -41.1485, 0.81", "96.9954, 279.69, -41.3741, 1.47", "97.5972, 279.81, -41.4815, 1.77", "98.6599, 279.9, -41.6849, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-16.8488, 61.7903, 4.85796, 0.52", "-18.096, 62.2573, 4.42167, 0.52", "-19.0393, 62.6897, 4.11314, 0.52", "-20.1305, 63.3161, 3.76505, 0.52", "-20.8948, 63.8608, 3.51721, 0.74", "-21.4115, 64.3317, 3.31349, 0.74", "-21.9038, 64.9046, 3.02684, 0.59", "-22.0919, 65.3356, 2.8102, 0.37", "-22.2377, 65.9923, 2.48404, 0.37", "-22.3148, 66.6776, 2.17337, 0.37", "-22.4029, 67.6286, 1.78104, 0.37", "-22.5961, 68.7534, 1.36122, 0.37", "-22.7923, 69.1785, 1.24532, 0.44", "-23.1907, 69.5815, 1.21451, 0.59", "-23.5909, 69.8441, 1.23844, 0.59", "-24.9234, 70.5488, 1.39222, 0.88", "-25.5497, 70.829, 1.4924, 1.03", "-26.7636, 71.3198, 1.67976, 0.37", "-27.6322, 71.6514, 1.75775, 0.44", "-28.2602, 71.8976, 1.75261, 0.74", "-28.841, 72.1478, 1.68884, 0.74", "-29.7079, 72.5951, 1.47975, 0.44", "-30.4014, 73.0578, 1.22766, 0.29", "-30.771, 73.4529, 0.964761, 0.29", "-31.1849, 74.2085, 0.398704, 1.03", "-31.3126, 74.6617, 0.0270625, 1.4", "-31.3674, 75.0434, -0.295269, 1.4", "-31.4281, 75.7995, -0.939738, 0.96", "-31.5352, 77.0995, -1.98845, 0.52", "-31.6106, 77.6837, -2.43596, 0.52", "-31.7902, 78.553, -3.04141, 0.52", "-31.9777, 78.9855, -3.2765, 0.52", "-32.4987, 79.5828, -3.37307, 0.52", "-33.2191, 80.1559, -3.29363, 0.88", "-33.6536, 80.4623, -3.20931, 1.25", "-34.1886, 80.8433, -3.09501, 1.47", "-35.0934, 81.5434, -2.89952, 0.59", "-35.8461, 82.2348, -2.79456, 0.37", "-36.6221, 83.1062, -2.75636, 0.29", "-36.9992, 83.6107, -2.78659, 0.59", "-37.4168, 84.2531, -2.8799, 0.88", "-37.8374, 84.935, -3.02304, 1.11", "-38.3167, 85.7062, -3.20784, 1.33", "-38.6607, 86.2351, -3.32936, 1.03", "-39.1409, 86.9312, -3.47108, 0.81", "-39.6575, 87.6149, -3.59348, 0.52", "-40.5669, 88.7939, -3.76765, 0.52", "-41.1861, 89.6201, -3.88452, 0.52", "-41.484, 90.0364, -3.93731, 0.66", "-41.8088, 90.5511, -4.01129, 0.66", "-42.246, 91.4088, -4.14069, 0.37", "-42.594, 92.3342, -4.27788, 0.37", "-42.8275, 93.1957, -4.41733, 0.88", "-42.9462, 93.6747, -4.48565, 0.88", "-43.2093, 94.6267, -4.61561, 0.37", "-43.4547, 95.3255, -4.70113, 0.29", "-43.8812, 96.3214, -4.79634, 0.81", "-44.0782, 96.7441, -4.79782, 1.18", "-44.4309, 97.493, -4.73773, 1.18", "-44.7415, 98.2051, -4.64869, 0.59", "-45.1212, 99.2431, -4.51268, 0.44", "-45.4002, 100.385, -4.39139, 0.44", "-45.5491, 101.612, -4.31705, 1.11", "-45.5643, 102.047, -4.31883, 1.11", "-45.5514, 102.724, -4.36282, 0.81", "-45.518, 103.757, -4.47135, 0.52", "-45.5309, 104.552, -4.62398, 0.52", "-45.6424, 105.284, -4.82847, 0.44", "-45.8318, 105.891, -5.0293, 0.44", "-46.0898, 106.47, -5.21369, 0.52", "-46.3757, 107.0, -5.36992, 0.81", "-46.9124, 107.923, -5.59357, 1.11", "-47.2227, 108.437, -5.70713, 1.11", "-47.6373, 109.156, -5.80965, 0.81", "-48.055, 109.918, -5.87069, 0.37", "-48.5325, 110.841, -5.88402, 0.37", "-48.9852, 111.767, -5.83004, 0.29", "-49.3014, 112.453, -5.71939, 0.88", "-49.6963, 113.387, -5.51748, 1.55", "-49.875, 113.852, -5.39919, 1.55", "-50.1372, 114.584, -5.21277, 1.18", "-50.4299, 115.4, -5.05627, 0.81", "-50.8842, 116.609, -4.84741, 0.44", "-51.3968, 117.859, -4.63816, 0.29", "-51.7694, 118.627, -4.51442, 0.29", "-52.2451, 119.499, -4.36312, 1.25", "-52.9657, 120.607, -4.09913, 0.29", "-53.7394, 121.607, -3.76684, 0.29", "-54.3279, 122.252, -3.48812, 0.29", "-54.9238, 122.829, -3.15624, 0.59", "-55.234, 123.114, -2.96135, 0.88", "-56.1679, 124.036, -2.2696, 0.44", "-56.459, 124.385, -2.03396, 0.29", "-56.7523, 124.861, -1.81809, 0.44", "-56.9586, 125.338, -1.65612, 0.29", "-57.1975, 126.272, -1.36341, 0.29", "-57.2787, 126.927, -1.16129, 0.29", "-57.3206, 127.633, -0.976873, 0.66", "-57.3536, 128.058, -0.860153, 0.81", "-57.416, 128.618, -0.698368, 0.81", "-57.5718, 129.659, -0.40268, 0.29", "-57.7417, 130.532, -0.168839, 0.37", "-58.0811, 131.72, 0.145981, 0.37", "-58.354, 132.435, 0.274064, 0.37", "-58.7611, 133.392, 0.353246, 1.33", "-58.9702, 133.864, 0.350357, 1.55", "-59.1091, 134.19, 0.308, 1.55", "-59.3013, 134.665, 0.196188, 1.18", "-59.9138, 136.176, -0.308522, 0.37", "-60.1853, 136.725, -0.581117, 0.59", "-60.5135, 137.251, -0.947554, 0.59", "-60.9095, 137.771, -1.40438, 0.29", "-61.2738, 138.183, -1.92209, 0.29", "-61.6524, 138.583, -2.52151, 0.29", "-62.2242, 139.153, -3.46137, 0.59", "-62.4959, 139.425, -3.91613, 0.59", "-63.2689, 140.262, -5.29398, 0.88", "-64.108, 141.388, -6.98121, 0.44", "-64.4745, 142.084, -7.90199, 0.29", "-64.5706, 142.327, -8.19861, 0.81", "-64.654, 142.578, -8.47919, 1.11", "-64.8642, 143.209, -9.16324, 0.81", "-65.2255, 144.025, -10.0828, 0.15", "-65.4905, 144.394, -10.5726, 0.15", "-65.7455, 144.648, -11.0682, 0.15", "-65.9469, 144.832, -11.5331, 0.66", "-66.0935, 144.969, -11.9315, 0.81", "-66.567, 145.461, -13.2905, 0.15", "-67.1987, 146.149, -15.0817, 0.66", "-67.3632, 146.345, -15.5447, 0.96", "-67.6715, 146.785, -16.4634, 0.81", "-68.1986, 147.595, -18.0237, 0.29", "-68.4666, 148.017, -18.755, 0.29", "-68.8311, 148.563, -19.5879, 0.29", "-69.4025, 149.179, -20.4913, 1.18", "-69.7859, 149.494, -20.952, 1.18", "-70.7023, 150.129, -21.8207, 0.37", "-71.2107, 150.45, -22.2303, 0.37", "-71.7711, 150.809, -22.6679, 0.88", "-72.4769, 151.342, -23.2274, 0.96", "-73.5004, 152.253, -24.0785, 0.44", "-73.9788, 152.712, -24.4937, 0.66", "-74.3803, 153.107, -24.8431, 0.37", "-74.833, 153.514, -25.2355, 0.37", "-75.5308, 154.136, -25.8562, 0.44", "-76.1827, 154.743, -26.4462, 0.37", "-77.1487, 155.628, -27.3045, 0.66", "-77.6372, 156.007, -27.7095, 0.66", "-78.3573, 156.445, -28.2699, 0.29", "-79.0479, 156.757, -28.7455, 0.52", "-79.6456, 156.971, -29.1097, 0.59", "-80.6053, 157.287, -29.6725, 0.29", "-81.3164, 157.537, -30.1147, 0.29", "-82.2607, 157.904, -30.6907, 0.29", "-82.9669, 158.19, -31.145, 0.44", "-83.4471, 158.359, -31.4517, 0.74", "-84.1871, 158.62, -31.9056, 0.74", "-85.1705, 158.967, -32.47, 1.11", "-85.8524, 159.235, -32.8496, 1.62", "-87.2273, 159.807, -33.57, 0.88", "-88.3042, 160.249, -34.1238, 0.37", "-89.2323, 160.599, -34.5929, 0.29", "-89.9161, 160.829, -34.9225, 0.29", "-90.438, 160.998, -35.148, 0.81", "-90.8504, 161.132, -35.3121, 1.18", "-91.3558, 161.322, -35.4713, 0.88", "-92.3664, 161.824, -35.7865, 0.29", "-92.8829, 162.176, -36.0141, 0.29", "-93.354, 162.608, -36.2714, 0.59", "-93.5657, 162.84, -36.4388, 0.88", "-93.7796, 163.128, -36.685, 0.59", "-93.9969, 163.47, -37.1144, 0.37", "-94.3271, 164.029, -38.0286, 0.37", "-94.5097, 164.325, -38.5953, 0.74", "-94.8778, 164.861, -39.7775, 0.52", "-95.1823, 165.263, -40.7442, 1.11", "-96.0301, 166.196, -43.3201, 1.25", "-96.6566, 166.774, -45.177, 0.66", "-97.1192, 167.125, -46.4727, 0.44", "-97.6674, 167.474, -47.9252, 1.03", "-98.1821, 167.73, -49.1295, 1.03", "-99.2419, 168.079, -51.2549, 0.29", "-99.8675, 168.194, -52.2996, 0.29", "-100.357, 168.251, -53.0292, 1.25", "-100.528, 168.272, -53.2629, 1.69", "-100.944, 168.336, -53.7937, 1.69", "-102.094, 168.565, -55.141, 0.29", "-102.975, 168.835, -56.1015, 0.29", "-103.447, 169.036, -56.6185, 0.29", "-104.081, 169.373, -57.3534, 0.29", "-104.748, 169.735, -58.1437, 0.81", "-105.136, 169.946, -58.586, 0.88", "-105.925, 170.366, -59.4049, 0.29", "-106.712, 170.734, -60.1776, 0.81", "-107.108, 170.88, -60.5424, 0.81", "-107.72, 171.072, -61.0878, 0.22", "-108.108, 171.209, -61.4117, 0.52", "-108.276, 171.274, -61.5543, 0.59", "-109.154, 171.573, -62.1827, 0.22", "-109.486, 171.647, -62.3905, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-59.3172, 113.682, -89.6859, 0.52", "-58.6596, 115.082, -90.4958, 0.52", "-58.2259, 116.076, -91.0816, 0.81", "-57.9322, 116.766, -91.5493, 0.59", "-57.2429, 118.215, -92.5981, 0.96", "-56.7839, 119.107, -93.3003, 0.96", "-56.2465, 120.164, -94.1489, 0.52", "-55.9291, 120.829, -94.7479, 0.52", "-55.3906, 121.966, -95.8741, 0.52", "-55.0636, 122.653, -96.5501, 0.52", "-54.6482, 123.539, -97.3247, 0.66", "-54.4158, 124.131, -97.8215, 0.96", "-54.1467, 124.932, -98.4603, 0.96", "-53.9057, 125.899, -99.2358, 0.37", "-53.7695, 126.775, -99.8883, 0.37", "-53.7031, 127.638, -100.509, 0.37", "-53.6622, 129.283, -101.709, 0.44", "-53.6631, 129.628, -101.98, 0.74", "-53.6719, 130.412, -102.6, 0.74", "-53.7046, 131.152, -103.193, 0.37", "-53.7054, 131.816, -103.739, 0.37", "-53.6132, 132.601, -104.331, 0.37", "-53.4359, 133.188, -104.695, 0.37", "-53.0969, 134.11, -105.258, 0.37", "-52.9827, 134.366, -105.403, 0.81", "-52.5972, 135.095, -105.806, 0.37", "-52.2413, 135.658, -106.11, 0.37", "-51.7285, 136.385, -106.425, 0.66", "-51.3602, 136.913, -106.643, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-59.3172, 113.682, -89.6859, 0.44", "-59.4576, 114.66, -89.6339, 0.44", "-59.6986, 115.415, -89.6219, 0.37", "-60.0147, 116.116, -89.6413, 0.88", "-60.2121, 116.498, -89.6818, 0.88", "-60.5525, 117.11, -89.7765, 0.52", "-60.8947, 117.738, -90.0244, 0.29", "-61.3246, 118.458, -90.4704, 0.22", "-61.5834, 118.85, -90.7611, 0.22", "-61.9895, 119.423, -91.2345, 0.88", "-62.2662, 119.81, -91.5877, 1.25", "-63.4054, 121.462, -93.2749, 0.44", "-63.792, 122.086, -93.9686, 0.96", "-63.9287, 122.351, -94.2864, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-30.6701, 4.90271, -7.05682, 0.81", "-31.3746, 4.72219, -8.70681, 0.81", "-31.7357, 4.66301, -9.42936, 0.81", "-34.0611, 4.52947, -13.3165, 1.62", "-35.7531, 4.60045, -15.7186, 0.66", "-36.7978, 4.68792, -17.0376, 0.66", "-37.4949, 4.73226, -17.8512, 0.88", "-38.3082, 4.80024, -18.6699, 0.96", "-39.6522, 4.86804, -19.822, 0.81", "-41.0, 4.78661, -20.6284, 0.52", "-42.1863, 4.51015, -21.2666, 0.52", "-43.4646, 3.92925, -21.9583, 0.74", "-44.5936, 3.15707, -22.5655, 1.11", "-44.9569, 2.82128, -22.7442, 1.25", "-45.7316, 1.93626, -23.1104, 0.96", "-46.6538, 0.778422, -23.5225, 0.66", "-47.5211, -0.295146, -23.889, 0.88", "-48.4271, -1.33342, -24.2718, 0.81", "-49.3875, -2.3344, -24.7207, 0.96", "-50.1447, -3.08492, -25.139, 1.18", "-50.9762, -3.91507, -25.6802, 1.11", "-51.6761, -4.64544, -26.2452, 1.18", "-52.3711, -5.40463, -26.9514, 1.33", "-53.4835, -6.58932, -28.2026, 0.66", "-54.3084, -7.39702, -29.1281, 0.88", "-54.9925, -8.0092, -29.8473, 0.88", "-56.1122, -8.9206, -30.9424, 0.59", "-56.7935, -9.39274, -31.5059, 0.59", "-57.4058, -9.69889, -31.8754, 0.81", "-58.4025, -9.9878, -32.1332, 1.33", "-59.2743, -10.1614, -32.1517, 1.4", "-59.8421, -10.2922, -32.0841, 1.25", "-60.9518, -10.6775, -31.8178, 0.52", "-61.5813, -11.0211, -31.6532, 0.52", "-62.3699, -11.6799, -31.529, 0.66", "-63.062, -12.4251, -31.4924, 0.81", "-63.8019, -13.2848, -31.5044, 0.81", "-64.2826, -13.879, -31.5792, 1.11", "-64.6716, -14.4099, -31.7064, 1.33", "-65.2248, -15.2116, -32.0213, 1.33", "-65.5116, -15.6429, -32.279, 1.33", "-66.0748, -16.4948, -32.9898, 0.81", "-66.6996, -17.4262, -33.8933, 0.52", "-67.1771, -18.1148, -34.6044, 0.74", "-67.8692, -19.0902, -35.6222, 0.96", "-68.4232, -19.8384, -36.3721, 0.81", "-69.2075, -20.8207, -37.3557, 0.66", "-69.8819, -21.6052, -38.0929, 0.59", "-70.3653, -22.1252, -38.5246, 1.03", "-70.766, -22.5643, -38.8395, 1.25", "-71.3367, -23.2488, -39.2268, 1.25", "-72.1413, -24.3766, -39.846, 0.81", "-72.5581, -25.0887, -40.2665, 0.52", "-73.1421, -26.0946, -41.0536, 0.52", "-73.583, -26.7733, -41.6529, 0.44", "-73.8473, -27.1434, -42.0191, 0.44", "-74.6422, -28.2217, -43.1435, 0.96", "-74.98, -28.6665, -43.6111, 1.4", "-75.8527, -29.6713, -44.8482, 0.88", "-76.6227, -30.5073, -45.9037, 0.66", "-77.709, -31.7164, -47.3642, 0.66", "-78.4425, -32.6598, -48.4854, 0.59", "-79.1559, -33.7706, -49.749, 1.77", "-80.1156, -35.6158, -51.7426, 0.59", "-80.4002, -36.2612, -52.3996, 0.74", "-80.7223, -37.0056, -53.1385, 0.74", "-81.516, -38.6501, -54.665, 0.59", "-81.9287, -39.3832, -55.2803, 0.59", "-82.3887, -40.1266, -55.7999, 0.74", "-83.0859, -41.1837, -56.3679, 0.74", "-83.7767, -42.0796, -56.8104, 0.74", "-84.5723, -43.0235, -57.3582, 0.52", "-85.3067, -43.7899, -57.8145, 0.37", "-85.7279, -44.1989, -58.1095, 1.11", "-86.0121, -44.4422, -58.3345, 1.11", "-86.5289, -44.8351, -58.7742, 0.96", "-88.7651, -46.243, -60.6256, 0.59", "-89.3311, -46.514, -61.0212, 0.52", "-89.9085, -46.7088, -61.4287, 0.81", "-90.8474, -46.9818, -62.0863, 0.81", "-91.681, -47.199, -62.6532, 1.11", "-92.579, -47.4376, -63.2257, 1.25", "-93.4535, -47.6961, -63.7059, 0.96", "-95.3842, -48.4251, -64.9327, 0.52", "-96.2036, -48.8145, -65.504, 0.52", "-96.8503, -49.2278, -65.9978, 0.81", "-97.4825, -49.8009, -66.5647, 0.88", "-97.7969, -50.2055, -66.9093, 1.03", "-98.2088, -50.9027, -67.4255, 0.88", "-98.5782, -51.6693, -67.9019, 0.44", "-98.9503, -52.5474, -68.4185, 0.44", "-99.5532, -54.353, -69.4402, 1.33", "-100.11, -56.2337, -70.4852, 0.59", "-100.303, -56.9103, -70.8848, 1.03", "-100.441, -57.4007, -71.1794, 1.18", "-100.655, -58.1244, -71.6325, 0.81", "-101.125, -59.4622, -72.4763, 0.59", "-101.506, -60.3248, -73.0309, 0.37", "-102.226, -61.599, -73.9817, 0.37", "-102.449, -61.9002, -74.2478, 0.96", "-102.645, -62.1157, -74.4605, 1.25", "-102.931, -62.3664, -74.7311, 1.25", "-104.065, -63.1765, -75.6181, 0.52", "-104.859, -63.7055, -76.1469, 0.52", "-105.744, -64.2806, -76.6114, 0.52", "-105.994, -64.4376, -76.7345, 1.18", "-106.42, -64.7033, -76.9854, 1.18", "-106.803, -64.9494, -77.222, 1.18", "-107.435, -65.3813, -77.5381, 0.88", "-108.678, -66.1962, -78.3228, 0.44", "-108.855, -66.3103, -78.4687, 0.81", "-110.657, -67.4636, -80.1309, 0.52", "-111.28, -67.8775, -80.7646, 0.81", "-112.354, -68.6216, -81.9075, 0.44", "-114.13, -69.9304, -83.9287, 0.74", "-114.903, -70.5368, -84.8178, 0.44", "-115.266, -70.8536, -85.218, 1.33", "-115.51, -71.1027, -85.4922, 1.33", "-116.017, -71.6532, -86.1186, 0.74", "-116.947, -72.6326, -87.2751, 0.44", "-117.22, -72.9091, -87.5437, 0.74", "-117.681, -73.3043, -87.9961, 0.74", "-118.781, -73.9269, -89.1871, 0.37", "-119.263, -74.0246, -89.7387, 0.37", "-119.798, -73.952, -90.3937, 0.66", "-120.195, -73.833, -90.861, 0.88", "-120.548, -73.7137, -91.2656, 0.88", "-121.614, -73.3848, -92.4387, 0.59", "-122.218, -73.236, -93.0276, 0.29", "-122.775, -73.1737, -93.5329, 0.29", "-123.828, -73.236, -94.3916, 0.96", "-124.092, -73.2952, -94.5741, 1.18", "-125.426, -73.8593, -95.4387, 0.59", "-125.991, -74.2089, -95.8953, 0.81", "-126.437, -74.5208, -96.3078, 0.81", "-127.032, -74.938, -96.886, 0.37", "-127.717, -75.4208, -97.5769, 0.37", "-128.741, -76.1503, -98.6638, 1.11", "-130.732, -77.5979, -100.793, 0.52", "-131.086, -77.8577, -101.183, 0.52", "-131.844, -78.3931, -102.018, 0.44", "-132.241, -78.6495, -102.477, 1.47", "-133.983, -79.6371, -104.538, 0.59", "-134.477, -79.8782, -105.103, 0.88", "-135.062, -80.1545, -105.817, 0.88", "-136.128, -80.6344, -107.33, 0.52", "-137.064, -81.017, -108.779, 0.74", "-137.453, -81.1436, -109.398, 0.96", "-137.704, -81.215, -109.789, 0.96", "-138.943, -81.6143, -111.688, 0.29", "-140.016, -81.9892, -113.44, 0.96", "-140.373, -82.1204, -114.014, 1.18", "-141.532, -82.5892, -115.882, 0.37", "-142.038, -82.8275, -116.729, 0.37", "-142.414, -83.0138, -117.365, 0.74", "-144.319, -83.895, -120.626, 0.88", "-144.662, -84.021, -121.218, 0.88", "-145.658, -84.3248, -122.948, 0.37", "-146.033, -84.4249, -123.571, 0.37", "-146.518, -84.539, -124.326, 0.37", "-147.184, -84.7011, -125.226, 0.37", "-148.227, -85.0557, -126.343, 0.74", "-149.852, -85.6964, -128.037, 0.44", "-150.273, -85.8655, -128.428, 1.03", "-150.678, -86.0561, -128.805, 1.03", "-150.984, -86.2533, -129.1, 1.03", "-151.814, -86.9828, -129.864, 0.44", "-152.378, -87.5779, -130.353, 0.59", "-153.009, -88.2265, -130.832, 0.37", "-153.704, -88.8951, -131.384, 0.29", "-154.079, -89.2371, -131.732, 0.44", "-154.359, -89.5082, -132.026, 0.44", "-155.221, -90.382, -132.989, 0.29", "-155.575, -90.7458, -133.402, 0.52", "-155.773, -90.9289, -133.652, 0.74", "-156.731, -91.5311, -134.809, 0.29", "-157.134, -91.7345, -135.293, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-30.6701, 4.90271, -7.05682, 0.88", "-31.7659, 8.13555, -7.07105, 0.88", "-32.3115, 9.615, -6.95068, 0.52", "-32.6686, 10.4718, -6.84351, 0.88", "-33.3997, 12.0348, -6.61174, 0.88", "-34.7135, 14.5427, -6.20882, 0.52", "-35.5564, 15.8875, -5.98376, 0.52", "-36.673, 17.4272, -5.57121, 0.44", "-37.6131, 18.4486, -5.2806, 0.59", "-38.6141, 19.3705, -4.96469, 0.74", "-39.4634, 20.0352, -4.69376, 0.74", "-41.4402, 21.3521, -4.16804, 1.25", "-42.0995, 21.7359, -4.03147, 1.25", "-43.4664, 22.4, -3.86433, 0.66", "-45.1839, 23.1403, -3.77194, 0.81", "-45.8935, 23.415, -3.75371, 0.66", "-47.5037, 23.9997, -3.75874, 0.88", "-50.244, 24.9243, -3.84693, 0.88", "-51.3853, 25.269, -3.91745, 0.66", "-52.1159, 25.4597, -3.99484, 0.52", "-53.6605, 25.7883, -4.17394, 1.03", "-54.2744, 25.9332, -4.14102, 1.33", "-54.7044, 26.0638, -4.04316, 1.55", "-55.1319, 26.2174, -3.91276, 1.55", "-55.8122, 26.4943, -3.71219, 1.33", "-56.9458, 27.0125, -3.42049, 0.74", "-58.2926, 27.7016, -3.11099, 0.59", "-59.6464, 28.5517, -2.79371, 0.59", "-60.5132, 29.2292, -2.59117, 0.59", "-60.9729, 29.6825, -2.47804, 1.11", "-61.7519, 30.6981, -2.31347, 1.55", "-62.0292, 31.2115, -2.27115, 1.77", "-62.5944, 32.8438, -2.09732, 0.74", "-62.8264, 33.882, -1.94799, 0.96", "-62.9514, 34.6801, -1.81077, 0.74", "-63.1017, 35.8083, -1.57006, 0.52", "-63.2203, 36.6623, -1.34928, 0.44", "-63.7182, 39.0396, -0.586734, 0.88", "-63.9024, 39.715, -0.365254, 1.11", "-64.0994, 40.3344, -0.179882, 1.11", "-64.4759, 41.4381, 0.0998652, 0.74", "-64.8518, 42.4315, 0.303233, 0.44", "-65.3084, 43.529, 0.391657, 0.29", "-65.876, 44.848, 0.315357, 0.59", "-66.2274, 45.7095, 0.259274, 0.44", "-66.5744, 46.6069, 0.192356, 1.25", "-66.7299, 47.0446, 0.1581, 1.25", "-66.9158, 47.6214, 0.141185, 0.81", "-67.187, 48.4505, 0.173689, 0.29", "-67.5497, 49.3739, 0.278138, 0.59", "-67.7849, 49.9084, 0.332898, 0.74", "-68.0167, 50.3684, 0.370726, 0.88", "-68.338, 50.9315, 0.405332, 0.88", "-68.7891, 51.6363, 0.428253, 0.44", "-69.2435, 52.3, 0.428253, 0.81", "-69.6785, 52.9104, 0.428253, 0.81", "-70.3546, 53.8354, 0.428253, 0.37", "-70.7615, 54.3855, 0.440357, 0.37", "-71.5829, 55.4944, 0.512092, 0.29", "-72.4477, 56.6525, 0.650472, 0.29", "-72.7912, 57.1163, 0.726307, 0.29", "-73.3266, 57.8547, 0.871107, 0.88", "-73.6746, 58.3644, 0.984534, 1.18", "-74.1875, 59.1399, 1.18162, 1.18", "-74.6772, 59.8499, 1.40815, 0.59", "-75.1779, 60.546, 1.67872, 0.59", "-75.6712, 61.2309, 1.96363, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "33.5461, -109.886, 23.5721, 0.29", "32.9178, -110.634, 23.5721, 0.29", "32.2545, -111.424, 23.5721, 0.15", "31.9427, -111.795, 23.5721, 0.15", "31.2714, -112.594, 23.5721, 0.44", "30.8726, -113.069, 23.5721, 0.44", "30.3491, -113.692, 23.5721, 0.74", "25.1232, -121.945, 22.5547, 0.74", "20.3676, -130.485, 23.3768, 0.74", "17.3849, -139.782, 23.7939, 0.74", "15.2524, -149.302, 23.449, 0.74", "14.5185, -158.799, 21.3086, 0.74", "15.7886, -167.897, 17.9461, 0.74", "17.974, -176.482, 13.7395, 0.74", "19.5477, -185.503, 10.2857, 0.74", "19.358, -194.756, 7.14174, 0.74", "19.893, -203.521, 2.79296, 0.74", "20.8149, -212.246, -1.57361, 0.74", "21.1807, -221.633, -4.25281, 0.74", "20.1849, -230.973, -6.94328, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "33.5461, -109.886, 23.5721, 0.22", "34.368, -109.417, 23.5591, 0.22", "35.2892, -108.891, 23.5445, 0.59", "35.6699, -108.673, 23.5385, 0.59", "36.4757, -108.213, 23.5257, 0.37", "37.0125, -107.906, 23.5172, 0.37", "46.1071, -104.017, 24.6898, 0.37", "54.1973, -98.2864, 24.6244, 0.37", "62.7188, -93.3267, 25.8521, 0.37", "70.9801, -88.5515, 28.6388, 0.37", "78.3554, -82.8151, 31.954, 0.37", "84.7859, -77.0945, 36.8756, 0.37" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "6.2068, -40.324, 28.5595, 0.52", "5.51719, -41.1981, 28.3098, 0.52", "4.88971, -41.9935, 28.0827, 0.52", "4.25807, -42.7941, 27.854, 0.44", "3.81438, -43.3566, 27.6934, 0.29", "3.41982, -43.8567, 27.5506, 0.74", "-2.69557, -51.4088, 25.9366, 0.74", "-8.68225, -59.0305, 24.1896, 0.74", "-14.8129, -66.1565, 21.1902, 0.74", "-21.6504, -72.6396, 18.1843, 0.74", "-29.0626, -77.9988, 14.3312, 0.74", "-37.2829, -82.2762, 10.7005, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "6.2068, -40.324, 28.5595, 0.29", "6.99492, -40.4445, 27.8989, 0.29", "8.2816, -40.5555, 26.9127, 0.29", "8.85194, -40.5676, 26.5053, 0.44", "9.725, -40.5135, 25.8943, 0.44", "10.4531, -40.3911, 25.3878, 0.37", "10.9182, -40.2645, 25.0547, 0.22", "11.2466, -39.9919, 24.8179, 0.59", "11.3497, -39.5893, 24.7251, 0.74", "11.2835, -38.672, 24.6592, 0.22", "11.054, -37.8165, 24.6733, 0.22", "10.6323, -36.7722, 24.7324, 0.22", "10.1044, -35.7811, 24.7965, 0.81", "16.5524, -30.0092, 19.9613, 0.81", "22.6797, -23.3747, 15.9422, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "2.27554, -165.627, 16.5184, 0.37", "10.9049, -170.377, 15.1738, 0.37", "18.8347, -176.131, 13.6618, 0.37", "27.1623, -181.139, 11.5971, 0.37", "35.3179, -186.479, 9.72808, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.27554, -165.627, 16.5184, 0.22", "10.5847, -170.56, 18.8348, 0.37", "18.0999, -175.903, 22.5068, 0.37", "25.5296, -182.194, 24.2862, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-56.5161, -160.8, 5.16228, 0.37", "-53.9826, -169.972, 2.90779, 0.37", "-50.4621, -178.664, 0.0568766, 0.37", "-48.1627, -188.05, -1.37173, 0.37", "-44.95, -196.999, -3.70407, 0.37", "-42.0012, -206.287, -4.45201, 0.37", "-37.9686, -215.146, -5.53617, 0.37", "-33.7791, -223.985, -6.04701, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-56.5161, -160.8, 5.16228, 0.22", "-53.5023, -170.068, 4.41799, 0.37", "-48.8617, -178.704, 4.55121, 0.37", "-45.3701, -187.678, 2.79143, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "98.6599, 279.9, -41.6849, 0.37", "99.8144, 281.184, -41.2275, 0.37", "100.269, 281.591, -41.1018, 0.37", "101.062, 282.142, -40.9548, 0.29", "101.639, 282.468, -40.8616, 0.29", "102.389, 282.856, -40.725, 0.74", "103.087, 283.239, -40.5821, 0.96", "103.634, 283.532, -40.499, 0.52", "104.521, 284.043, -40.3599, 0.44", "105.372, 284.587, -40.1905, 0.37", "105.841, 284.999, -40.0615, 0.29", "106.348, 285.623, -39.8757, 0.29", "106.649, 286.092, -39.7563, 0.29", "107.143, 286.847, -39.5829, 0.74", "107.697, 287.622, -39.4253, 1.11", "108.237, 288.293, -39.3143, 1.11", "108.762, 288.855, -39.2365, 0.81", "109.851, 289.872, -39.105, 0.37", "110.781, 290.683, -39.0053, 0.37", "111.392, 291.21, -38.9198, 0.37", "111.918, 291.685, -38.852, 0.37", "112.244, 292.001, -38.8042, 1.03", "112.767, 292.568, -38.6975, 1.33", "113.009, 292.868, -38.6179, 1.33", "113.914, 294.207, -38.1047, 0.29", "114.455, 295.116, -37.6842, 0.29", "114.997, 296.098, -37.1832, 0.88", "115.305, 296.709, -36.8626, 0.88", "115.747, 297.633, -36.3815, 0.74", "116.44, 299.042, -35.7009, 0.66", "116.776, 299.742, -35.4393, 0.74", "117.218, 300.748, -35.1788, 0.44", "117.504, 301.514, -35.1104, 0.44", "117.81, 302.477, -35.1941, 0.37", "118.243, 304.074, -35.5613, 0.37", "118.602, 305.411, -36.0031, 0.37", "118.886, 306.525, -36.4313, 0.37", "119.157, 307.849, -37.0179, 1.77", "119.252, 308.599, -37.3876, 1.77", "119.244, 309.229, -37.7279, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "98.6599, 279.9, -41.6849, 1.11", "99.5541, 281.087, -44.0689, 1.11", "100.562, 282.142, -46.4745, 0.74", "101.088, 282.509, -47.64, 0.29", "101.641, 282.869, -48.9601, 0.44", "102.18, 283.297, -50.4027, 0.37", "102.834, 283.921, -52.2233, 0.74", "103.089, 284.253, -52.9484, 0.88", "103.767, 285.055, -54.6872, 0.29", "104.375, 285.676, -56.0872, 0.44", "105.088, 286.317, -57.4411, 0.29", "105.537, 286.73, -58.2478, 0.96", "105.925, 287.142, -58.8659, 1.25", "106.195, 287.425, -59.2444, 1.25", "107.383, 288.59, -60.6011, 0.37", "108.078, 289.161, -61.256, 0.74", "109.604, 290.238, -62.5393, 0.88", "110.136, 290.592, -62.9661, 1.11", "110.914, 291.112, -63.5459, 0.52", "111.457, 291.487, -63.9055, 0.52", "112.072, 291.926, -64.2427, 0.29", "112.608, 292.289, -64.5109, 0.29", "113.505, 292.814, -64.8713, 1.25", "113.723, 292.934, -64.9662, 1.55", "114.116, 293.141, -65.1435, 1.55", "115.118, 293.637, -65.6084, 0.37", "116.273, 294.148, -66.1184, 0.44", "117.232, 294.521, -66.4994, 0.81", "117.451, 294.587, -66.5718, 1.11", "118.163, 294.782, -66.7951, 1.11", "119.428, 295.071, -67.1388, 0.29", "120.559, 295.258, -67.3527, 0.37", "121.312, 295.306, -67.4589, 0.37", "122.127, 295.288, -67.5785, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-63.9287, 122.351, -94.2864, 0.44", "-62.844, 123.291, -94.5587, 0.44", "-61.9056, 124.188, -94.9724, 0.29", "-61.3901, 124.752, -95.2829, 0.44", "-60.8237, 125.469, -95.6861, 0.44", "-60.4586, 126.004, -95.9733, 0.81", "-59.9925, 126.769, -96.3833, 0.81", "-59.5415, 127.694, -96.976, 0.52", "-59.3741, 128.287, -97.3992, 0.37", "-59.279, 128.919, -97.8587, 0.37", "-59.2301, 129.55, -98.3321, 0.81", "-59.1835, 130.13, -98.764, 0.88", "-59.0467, 131.037, -99.4176, 0.88", "-58.7283, 131.973, -100.184, 0.52", "-58.4985, 132.347, -100.575, 0.81", "-57.7688, 133.084, -101.534, 0.52", "-57.2571, 133.451, -102.075, 0.52", "-56.5255, 133.857, -102.688, 0.52", "-54.9685, 134.575, -103.782, 0.52", "-54.1896, 134.909, -104.351, 0.52", "-53.4694, 135.201, -104.915, 0.81", "-52.9285, 135.423, -105.346, 1.03", "-52.3925, 135.656, -105.79, 0.59", "-51.3066, 136.19, -106.701, 0.66", "-49.5032, 137.251, -108.142, 0.52", "-48.8252, 137.709, -108.68, 0.52", "-48.0505, 138.32, -109.345, 1.11", "-47.6891, 138.675, -109.673, 1.11", "-47.3951, 138.995, -109.942, 1.25", "-46.8482, 139.746, -110.379, 0.66", "-46.4427, 140.631, -110.606, 0.44", "-46.2528, 141.382, -110.751, 0.44", "-46.1647, 142.639, -110.981, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-63.9287, 122.351, -94.2864, 0.44", "-64.8107, 123.504, -95.8864, 0.44", "-65.2199, 123.998, -96.6253, 0.37", "-65.6745, 124.532, -97.4387, 0.37", "-66.0697, 124.963, -98.0514, 0.88", "-66.534, 125.443, -98.6836, 0.88", "-67.3739, 126.231, -99.6776, 0.59", "-68.1912, 126.977, -100.534, 0.22", "-68.6761, 127.384, -101.076, 0.66", "-69.3758, 127.927, -101.876, 0.37", "-69.7719, 128.227, -102.325, 0.29", "-70.4748, 128.821, -103.246, 0.29", "-71.1391, 129.525, -104.361, 0.66", "-71.7795, 130.417, -105.878, 1.03", "-71.9361, 130.681, -106.332, 1.33", "-72.0332, 130.872, -106.663, 1.33", "-72.4382, 131.75, -108.161, 0.44", "-72.8343, 132.659, -109.718, 0.29", "-73.0693, 133.222, -110.655, 0.59", "-73.2574, 133.694, -111.446, 0.59", "-73.3493, 133.953, -111.88, 0.88", "-73.51, 134.41, -112.639, 0.88", "-73.9835, 135.52, -114.475, 0.29", "-74.125, 135.915, -115.108, 0.29", "-74.2214, 136.257, -115.636, 0.29", "-74.3463, 136.792, -116.466, 0.96", "-74.4444, 137.195, -117.061, 0.96", "-74.8252, 138.461, -118.716, 0.29", "-75.1145, 139.163, -119.495, 0.29", "-75.2695, 139.442, -119.789, 0.29", "-75.6104, 139.993, -120.307, 0.29", "-75.9181, 140.47, -120.721, 0.29", "-76.2562, 141.022, -121.151, 0.81", "-76.5349, 141.505, -121.512, 0.88", "-77.2156, 142.7, -122.498, 0.29", "-77.5624, 143.329, -123.031, 0.59", "-77.8172, 143.814, -123.434, 0.59", "-78.0803, 144.332, -123.852, 0.29", "-78.4828, 145.168, -124.518, 0.29", "-78.7422, 145.797, -125.006, 0.29", "-79.0115, 146.519, -125.536, 0.29", "-79.2306, 147.099, -125.988, 0.29", "-79.501, 147.845, -126.544, 0.29", "-79.6311, 148.208, -126.787, 0.29", "-79.9907, 149.171, -127.369, 0.88", "-80.1347, 149.602, -127.611, 1.11", "-80.5456, 151.192, -128.462, 0.29", "-80.6811, 151.799, -128.817, 0.59", "-80.8542, 152.599, -129.332, 0.29", "-80.9582, 153.0, -129.599, 0.29", "-81.1234, 153.623, -129.986, 0.29", "-81.2438, 154.142, -130.281, 0.29", "-81.5392, 155.288, -130.945, 0.66", "-81.7437, 155.831, -131.314, 0.66", "-82.186, 156.882, -132.179, 0.37", "-82.4615, 157.492, -132.733, 0.37", "-82.922, 158.29, -133.517, 0.37", "-83.4971, 159.135, -134.369, 0.37", "-84.1033, 159.972, -135.147, 0.37", "-85.0178, 161.179, -136.246, 0.29", "-85.2871, 161.511, -136.574, 0.29", "-85.9766, 162.294, -137.42, 0.29", "-86.296, 162.65, -137.817, 0.29", "-86.9618, 163.526, -138.632, 1.4", "-87.1057, 163.748, -138.789, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "35.3179, -186.479, 9.72808, 0.37", "43.6592, -191.684, 8.3422, 0.37", "51.3731, -197.532, 6.21503, 0.37", "59.5525, -202.776, 4.17318, 0.37", "67.1104, -208.385, 1.04479, 0.37", "74.4812, -214.578, -1.26149, 0.37", "82.5039, -219.387, -4.62508, 0.37", "89.6063, -224.334, -9.50437, 0.37", "96.6707, -230.384, -12.9097, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "35.3179, -186.479, 9.72808, 0.22", "43.5059, -191.71, 7.68576, 0.37", "52.5266, -195.738, 6.43789, 0.37", "61.0862, -199.899, 3.5183, 0.37", "69.7421, -202.769, -0.53226, 0.37", "77.8645, -206.589, -4.85436, 0.37", "86.2407, -211.057, -7.8266, 0.37", "94.2041, -216.864, -8.88597, 0.37", "102.124, -222.444, -11.0145, 0.37", "111.401, -225.963, -11.9628, 0.37", "120.273, -230.46, -12.0523, 0.37", "129.816, -232.948, -10.4932, 0.37", "139.46, -234.646, -8.50241, 0.37", "148.762, -234.901, -4.84268, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "25.5296, -182.194, 24.2862, 0.37", "33.0561, -187.613, 27.8175, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "25.5296, -182.194, 24.2862, 0.22", "33.5682, -187.847, 25.6165, 0.37", "41.1917, -193.685, 28.0723, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-45.3701, -187.678, 2.79143, 0.37", "-41.4396, -196.637, 3.13332, 0.37", "-35.376, -204.202, 4.87313, 0.37", "-29.5739, -211.714, 7.5135, 0.37", "-23.4498, -218.889, 10.4025, 0.37", "-17.1039, -224.847, 15.1338, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-45.3701, -187.678, 2.79143, 0.22", "-41.704, -196.68, 1.64538, 0.37", "-38.8737, -205.704, -0.869019, 0.37", "-37.0689, -215.213, -2.14, 0.37", "-36.0098, -224.83, -3.40391, 0.37", "-33.3574, -234.231, -3.44787, 0.37", "-29.9172, -243.267, -1.94017, 0.37", "-26.7673, -251.952, 1.33435, 0.37", "-24.9937, -260.645, 5.50208, 0.37", "-24.452, -268.699, 11.1109, 0.37", "-25.4877, -277.265, 15.7748, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "119.244, 309.229, -37.7279, 0.29", "120.613, 311.379, -39.904, 0.29", "121.084, 312.15, -40.595, 0.29", "121.46, 312.857, -41.1064, 0.29", "121.694, 313.377, -41.4113, 0.29", "122.078, 314.365, -41.9077, 0.74", "122.19, 314.682, -42.0442, 0.74", "122.588, 316.074, -42.3899, 0.22", "122.937, 317.347, -42.7072, 0.22", "123.168, 318.438, -42.9611, 0.22", "123.28, 319.077, -43.0888, 0.52", "123.454, 320.122, -43.2246, 0.22", "123.516, 320.54, -43.2665, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "119.244, 309.229, -37.7279, 0.44", "118.95, 310.696, -36.9782, 0.44", "118.822, 311.809, -36.4331, 0.44", "118.709, 313.007, -35.875, 0.44", "118.644, 313.815, -35.5166, 0.44", "118.563, 314.788, -35.1166, 0.37", "118.513, 315.363, -34.8988, 0.37", "118.49, 316.387, -34.4444, 0.88", "118.504, 316.772, -34.2956, 1.47", "118.517, 317.189, -34.1764, 1.47", "118.497, 318.293, -33.9455, 0.37", "118.42, 318.919, -33.849, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "122.127, 295.288, -67.5785, 0.29", "122.595, 295.686, -67.6808, 0.29", "123.32, 296.236, -67.8814, 0.81", "123.847, 296.586, -68.0405, 0.81", "124.585, 296.994, -68.2963, 0.22", "125.009, 297.196, -68.4639, 0.59", "126.423, 297.775, -69.0493, 0.22", "127.399, 298.103, -69.5042, 0.81", "127.899, 298.253, -69.7688, 0.81", "128.88, 298.561, -70.3567, 0.29", "129.914, 298.938, -71.0308, 0.29", "131.054, 299.449, -71.8236, 0.22", "131.723, 299.816, -72.3002, 0.22", "132.552, 300.399, -72.9591, 0.81", "133.517, 301.252, -73.7592, 0.22", "134.156, 301.97, -74.307, 0.22", "134.697, 302.69, -74.8024, 0.44", "135.037, 303.241, -75.1427, 0.15", "135.321, 303.753, -75.4183, 0.22", "135.719, 304.566, -75.7841, 0.15", "135.995, 305.132, -75.9914, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "122.127, 295.288, -67.5785, 0.22", "123.827, 295.885, -68.0962, 0.22", "124.457, 296.106, -68.288, 0.81", "125.137, 296.344, -68.495, 0.52", "126.545, 296.839, -68.9239, 1.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-46.1647, 142.639, -110.981, 0.37", "-45.3771, 144.174, -111.637, 0.37", "-44.8217, 145.435, -112.289, 0.37", "-44.3995, 146.394, -112.785, 0.37", "-43.9506, 147.414, -113.312, 0.81", "-43.7419, 147.888, -113.557, 0.81", "-43.2025, 149.114, -114.191, 0.52", "-42.9589, 150.106, -114.755, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-46.1647, 142.639, -110.981, 0.29", "-45.8663, 143.782, -111.229, 0.29", "-45.653, 144.599, -111.407, 0.88", "-45.4233, 145.478, -111.598, 0.29", "-45.2563, 146.118, -111.737, 0.88", "-45.064, 146.854, -111.897, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "41.1917, -193.685, 28.0723, 0.37", "49.2245, -199.475, 28.532, 0.37", "57.2274, -205.318, 28.3281, 0.37", "63.9833, -212.499, 28.6613, 0.37", "70.3667, -219.993, 29.0804, 0.37", "76.2255, -227.789, 30.397, 0.37", "81.9594, -235.213, 33.4211, 0.37", "87.9047, -242.373, 36.6966, 0.37", "93.3032, -249.256, 41.2817, 0.37", "99.1626, -255.933, 45.6134, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "41.1917, -193.685, 28.0723, 0.22", "49.0069, -199.43, 30.1224, 0.37", "55.6816, -206.508, 31.779, 0.37", "62.6885, -213.272, 33.4477, 0.37", "69.6572, -219.886, 35.774, 0.37", "77.3118, -225.933, 37.4889, 0.37", "85.6099, -230.664, 40.2453, 0.37", "93.188, -235.262, 44.7548, 0.37", "100.977, -237.971, 50.3777, 0.37", "108.482, -238.839, 56.9263, 0.37", "115.226, -240.799, 64.0312, 0.37", "122.122, -243.95, 70.5117, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "118.42, 318.919, -33.849, 0.29", "117.804, 320.235, -33.849, 0.29", "117.359, 321.101, -33.849, 0.29", "117.07, 321.646, -33.849, 0.66", "116.972, 321.838, -33.848, 0.66", "116.659, 322.545, -33.8422, 0.22", "116.353, 323.349, -33.8343, 0.22", "116.165, 323.971, -33.8261, 0.22", "116.091, 324.321, -33.8216, 0.59", "116.05, 324.758, -33.8165, 0.59", "116.03, 325.71, -33.8065, 0.29", "116.055, 326.353, -33.7762, 0.88", "116.092, 326.916, -33.7382, 0.88", "116.215, 328.648, -33.6113, 0.29", "116.278, 329.542, -33.5407, 0.29", "116.31, 330.058, -33.4959, 0.59", "116.391, 331.662, -33.3276, 0.29", "116.433, 332.458, -33.2274, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "118.42, 318.919, -33.849, 0.29", "118.555, 320.097, -33.7537, 0.29", "118.804, 321.205, -33.5879, 0.29", "119.022, 321.985, -33.4538, 0.29", "119.419, 323.249, -33.2406, 0.29", "119.642, 323.918, -33.1303, 0.29", "120.009, 324.983, -32.9592, 0.29", "120.428, 326.142, -32.7671, 1.03", "120.786, 327.011, -32.5951, 1.69", "121.316, 328.159, -32.346, 0.22", "121.583, 328.699, -32.2252, 0.52", "121.723, 328.985, -32.1616, 0.59", "122.102, 329.825, -31.9293, 0.22", "122.462, 330.633, -31.6379, 0.52", "122.679, 331.1, -31.3925, 0.66", "122.969, 331.68, -30.962, 0.22", "123.167, 332.016, -30.6661, 0.22", "123.84, 332.992, -29.723, 0.66", "124.244, 333.479, -29.188, 1.03", "124.729, 333.956, -28.6113, 1.03", "125.444, 334.628, -27.8221, 0.29", "125.906, 335.078, -27.3374, 0.37", "126.283, 335.485, -26.963, 0.37", "126.851, 336.134, -26.4846, 0.29", "127.315, 336.649, -26.1474, 0.29", "127.75, 337.146, -25.8564, 0.29", "128.114, 337.647, -25.6244, 0.66", "128.397, 338.148, -25.4164, 0.66", "128.749, 338.992, -25.0916, 0.29", "128.927, 339.675, -24.8749, 0.29", "129.005, 340.131, -24.7449, 0.29", "129.108, 340.959, -24.5388, 0.66", "129.155, 341.518, -24.4068, 0.74", "129.246, 342.949, -24.1732, 0.29", "129.303, 344.119, -24.0503, 0.29", "129.354, 345.055, -24.0121, 0.88", "129.391, 345.482, -24.0219, 1.03", "129.498, 346.269, -24.0937, 0.74", "129.736, 347.564, -24.3047, 0.29", "129.874, 348.213, -24.5028, 0.59", "130.052, 349.027, -24.8246, 0.29", "130.178, 349.732, -25.1529, 0.59", "130.238, 350.196, -25.4017, 0.29", "130.276, 350.82, -25.7509, 0.81", "130.283, 352.146, -26.4227, 0.29", "130.252, 352.978, -26.8236, 0.29", "130.217, 353.643, -27.131, 0.29", "130.167, 354.494, -27.5272, 0.22", "130.072, 355.981, -28.1782, 0.22", "129.92, 357.915, -28.9307, 0.22", "129.788, 359.521, -29.4965, 0.22", "129.668, 360.992, -29.9828, 0.74", "129.612, 361.713, -30.2038, 0.96", "129.505, 363.151, -30.6055, 0.22", "129.385, 364.605, -31.0115, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "126.545, 296.839, -68.9239, 0.22", "126.549, 298.406, -68.9995, 0.22", "126.55, 298.989, -69.0277, 0.37", "126.552, 300.138, -69.0832, 0.22", "126.554, 301.001, -69.1248, 0.22", "126.556, 302.126, -69.1791, 0.22", "126.559, 303.321, -69.2368, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "126.545, 296.839, -68.9239, 0.22", "128.041, 296.298, -70.2321, 0.22", "128.578, 296.104, -70.7014, 0.22", "129.202, 295.879, -71.2473, 0.52", "129.919, 295.619, -71.8751, 1.11", "130.621, 295.366, -72.4885, 0.81", "131.385, 295.089, -73.1576, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-42.9589, 150.106, -114.755, 0.59", "-43.1339, 152.021, -115.064, 0.59", "-43.1656, 152.588, -115.203, 0.88", "-43.2358, 153.697, -115.507, 0.29", "-43.2946, 154.562, -115.752, 0.29", "-43.3715, 155.456, -115.999, 0.37", "-43.4576, 156.285, -116.221, 0.37", "-43.6621, 157.779, -116.572, 0.29", "-43.7725, 158.426, -116.75, 0.29", "-43.9659, 159.524, -117.076, 0.29", "-44.0784, 160.28, -117.296, 0.96", "-44.154, 160.8, -117.434, 0.96", "-44.2256, 161.334, -117.552, 0.74", "-44.379, 162.603, -117.746, 0.29", "-44.4915, 163.705, -117.922, 0.29", "-44.5577, 164.44, -118.035, 0.29", "-44.6156, 165.302, -118.15, 0.74", "-44.6354, 165.651, -118.188, 0.74", "-44.658, 166.113, -118.225, 0.44", "-44.7382, 167.209, -118.292, 0.29", "-44.8437, 168.06, -118.331, 0.29", "-45.0654, 169.821, -118.349, 0.29", "-45.1461, 170.607, -118.328, 0.96", "-45.1818, 171.175, -118.28, 0.59", "-45.1879, 171.933, -118.165, 0.29", "-45.1533, 173.0, -117.929, 0.22", "-45.0971, 174.022, -117.65, 0.22", "-45.0542, 174.608, -117.459, 0.22", "-45.0023, 175.518, -117.186, 0.22", "-44.9616, 176.337, -116.978, 0.22", "-44.8961, 177.115, -116.829, 0.81", "-44.8737, 177.327, -116.81, 1.18", "-44.8307, 177.843, -116.842, 1.18", "-44.7596, 179.02, -117.049, 0.29", "-44.7159, 179.659, -117.222, 0.29", "-44.6266, 180.429, -117.46, 0.66", "-44.5782, 180.695, -117.544, 0.66", "-44.326, 181.823, -117.958, 0.37", "-44.1818, 182.485, -118.225, 0.37", "-44.0821, 183.157, -118.507, 0.37", "-44.0623, 183.682, -118.751, 0.74", "-44.0867, 184.228, -119.027, 0.74", "-44.1608, 185.385, -119.641, 0.29", "-44.1859, 186.108, -120.035, 0.29", "-44.187, 187.044, -120.604, 0.29", "-44.1776, 187.983, -121.191, 0.88", "-44.1664, 188.513, -121.512, 0.88", "-44.1411, 189.254, -121.946, 0.29", "-44.099, 190.179, -122.424, 0.29", "-44.0667, 190.652, -122.667, 0.29", "-44.0462, 191.448, -123.048, 0.74", "-44.0668, 191.951, -123.262, 0.74", "-44.1548, 192.947, -123.65, 0.37", "-44.2518, 193.76, -123.947, 0.59", "-44.3289, 194.332, -124.138, 0.59", "-44.4081, 195.149, -124.401, 0.29", "-44.4433, 196.102, -124.705, 0.29", "-44.4428, 196.603, -124.844, 0.29", "-44.425, 197.205, -124.977, 0.52", "-44.399, 197.702, -125.073, 1.03", "-44.3247, 198.397, -125.178, 1.03", "-44.1322, 199.653, -125.331, 0.22", "-43.8498, 201.218, -125.475, 0.22", "-43.6314, 202.328, -125.555, 0.96", "-43.4982, 202.993, -125.59, 0.96", "-43.132, 204.635, -125.648, 0.29", "-42.817, 205.907, -125.664, 0.29", "-42.5993, 206.748, -125.664, 0.88", "-42.4368, 207.389, -125.664, 1.18", "-42.0965, 208.913, -125.7, 0.37", "-41.8477, 210.238, -125.644, 0.37", "-41.5536, 212.052, -125.464, 0.37", "-41.3534, 213.159, -125.265, 0.37", "-41.1809, 213.936, -125.064, 0.96", "-40.9231, 214.828, -124.757, 0.96", "-39.9384, 217.221, -123.65, 0.29", "-39.6946, 217.663, -123.419, 0.29", "-39.1492, 218.442, -123.001, 0.88", "-38.7141, 218.984, -122.731, 0.88", "-38.3575, 219.41, -122.55, 0.59", "-37.0522, 221.002, -122.037, 0.29", "-36.0863, 222.309, -121.839, 0.29", "-35.5503, 223.134, -121.762, 0.81", "-35.3228, 223.526, -121.751, 0.81", "-35.013, 224.187, -121.758, 0.52", "-34.6409, 225.189, -121.807, 0.22", "-34.2003, 227.011, -121.974, 0.22", "-34.0423, 228.078, -122.087, 0.74", "-33.9973, 228.631, -122.149, 0.74", "-33.9579, 230.165, -122.317, 0.22", "-33.9753, 230.805, -122.38, 0.22", "-34.0461, 231.633, -122.45, 0.52", "-34.0744, 231.845, -122.465, 0.59", "-34.2408, 232.903, -122.558, 0.22", "-34.3916, 233.741, -122.696, 0.44", "-34.7626, 235.301, -123.095, 0.22", "-34.9786, 235.956, -123.335, 0.66", "-35.3796, 236.884, -123.758, 0.22", "-35.9337, 237.953, -124.342, 0.74", "-36.5292, 238.937, -124.969, 0.59", "-37.0556, 239.777, -125.538, 0.29", "-37.4905, 240.47, -126.01, 0.52", "-38.2182, 241.602, -126.788, 0.22", "-38.6908, 242.343, -127.267, 0.59", "-38.853, 242.643, -127.413, 0.59", "-39.2745, 243.708, -127.779, 0.22", "-39.4341, 244.445, -127.987, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-42.9589, 150.106, -114.755, 0.52", "-42.0637, 151.288, -115.998, 0.52", "-41.5312, 152.011, -116.73, 0.29", "-41.0098, 152.769, -117.429, 0.29", "-40.2759, 153.855, -118.376, 0.29", "-39.7454, 154.616, -119.037, 0.59", "-39.543, 154.885, -119.285, 0.66", "-38.8751, 155.675, -120.006, 0.29", "-38.4106, 156.13, -120.485, 0.81", "-38.2779, 156.261, -120.617, 0.81", "-37.6244, 156.855, -121.198, 0.29", "-36.9605, 157.395, -121.875, 0.44", "-36.751, 157.529, -122.084, 0.66", "-36.3409, 157.679, -122.442, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "131.385, 295.089, -73.1576, 0.37", "132.948, 294.703, -74.8288, 0.37", "133.613, 294.596, -75.5253, 0.22", "134.464, 294.46, -76.418, 0.22", "134.647, 294.431, -76.6094, 0.66", "135.584, 294.281, -77.5908, 0.22", "136.421, 294.147, -78.4687, 0.22", "136.642, 294.135, -78.6564, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "131.385, 295.089, -73.1576, 0.22", "133.42, 295.359, -75.0626, 0.22", "133.863, 295.415, -75.4499, 0.88", "134.905, 295.549, -76.3621, 0.22", "135.35, 295.606, -76.7515, 0.74", "136.931, 295.808, -78.1357, 0.22", "137.599, 295.894, -78.7209, 0.44", "138.541, 295.951, -79.3032, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_55", "dend_55", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_NBC_a34c1bf418_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000090983035473)
    connect dend_56(0), soma_0(0.45000090983035473)
    connect dend_51(0), soma_0(0.45000090983035473)
    connect dend_32(0), soma_0(0.45000090983035473)
    connect dend_13(0), soma_0(0.45000090983035473)
    connect dend_0(0), soma_0(0.45000090983035473)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.9016, -1.97873, -2.50057, 3.38117 ) }
    soma_0 { pt3dadd( -9.79478, -1.80994, -2.24302, 5.67833 ) }
    soma_0 { pt3dadd( -8.68798, -1.64115, -1.98548, 7.15072 ) }
    soma_0 { pt3dadd( -7.58118, -1.47235, -1.72793, 8.64399 ) }
    soma_0 { pt3dadd( -6.47438, -1.30356, -1.47039, 10.0299 ) }
    soma_0 { pt3dadd( -5.36758, -1.13477, -1.21284, 11.2674 ) }
    soma_0 { pt3dadd( -4.26078, -0.965972, -0.955299, 11.9107 ) }
    soma_0 { pt3dadd( -3.15398, -0.797179, -0.697754, 12.2563 ) }
    soma_0 { pt3dadd( -2.04718, -0.628385, -0.440209, 12.5208 ) }
    soma_0 { pt3dadd( -0.940378, -0.459592, -0.182664, 12.7145 ) }
    soma_0 { pt3dadd( 0.166423, -0.290798, 0.0748807, 12.541 ) }
    soma_0 { pt3dadd( 1.27322, -0.122005, 0.332426, 12.2075 ) }
    soma_0 { pt3dadd( 2.38002, 0.0467885, 0.589971, 11.6554 ) }
    soma_0 { pt3dadd( 3.48682, 0.215582, 0.847516, 11.0225 ) }
    soma_0 { pt3dadd( 4.59362, 0.384375, 1.10506, 10.3416 ) }
    soma_0 { pt3dadd( 5.70042, 0.553169, 1.36261, 9.80603 ) }
    soma_0 { pt3dadd( 6.80722, 0.721962, 1.62015, 9.2712 ) }
    soma_0 { pt3dadd( 7.91403, 0.890756, 1.8777, 8.04801 ) }
    soma_0 { pt3dadd( 9.02083, 1.05955, 2.13524, 5.78101 ) }
    soma_0 { pt3dadd( 10.1276, 1.22834, 2.39279, 3.52734 ) }
    soma_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 2.23302 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.34928, -3.32158, -7.98898, 1.25 ) }
    dend_67 { pt3dadd( 7.32078, -3.80076, -8.32177, 1.25 ) }
    dend_67 { pt3dadd( 8.09109, -4.35051, -9.08676, 1.25 ) }
    dend_67 { pt3dadd( 8.71618, -4.9147, -9.92349, 0.88 ) }
    dend_67 { pt3dadd( 9.24414, -5.4817, -10.725, 0.88 ) }
    dend_67 { pt3dadd( 9.72884, -6.08897, -11.5055, 0.88 ) }
    dend_67 { pt3dadd( 10.9612, -7.97125, -13.6774, 1.18 ) }
    dend_67 { pt3dadd( 11.7285, -9.70967, -15.542, 1.18 ) }
    dend_67 { pt3dadd( 11.8648, -10.1239, -15.9281, 1.69 ) }
    dend_67 { pt3dadd( 12.0301, -10.6798, -16.3604, 1.84 ) }
    dend_67 { pt3dadd( 12.295, -11.4497, -16.8413, 1.62 ) }
    dend_67 { pt3dadd( 12.8155, -12.5845, -17.3049, 1.11 ) }
    dend_67 { pt3dadd( 13.5306, -13.6941, -17.4655, 1.11 ) }
    dend_67 { pt3dadd( 14.5386, -14.9994, -17.4961, 1.11 ) }
    dend_67 { pt3dadd( 15.4255, -16.0839, -17.4491, 1.11 ) }
    dend_67 { pt3dadd( 16.3339, -17.1947, -17.3392, 1.11 ) }
    dend_67 { pt3dadd( 17.1889, -18.3342, -17.1618, 1.11 ) }
    dend_67 { pt3dadd( 17.9444, -19.4807, -16.923, 1.18 ) }
    dend_67 { pt3dadd( 18.3582, -20.3225, -16.7284, 1.33 ) }
    dend_67 { pt3dadd( 18.7295, -21.7151, -16.4166, 1.25 ) }
    dend_67 { pt3dadd( 18.8213, -22.902, -16.1854, 0.88 ) }
    dend_67 { pt3dadd( 18.713, -24.4649, -15.9648, 1.25 ) }
    dend_67 { pt3dadd( 18.589, -25.1893, -15.9133, 1.55 ) }
    dend_67 { pt3dadd( 18.4506, -25.9698, -15.862, 1.55 ) }
    dend_67 { pt3dadd( 18.3159, -27.0395, -15.7939, 1.33 ) }
    dend_67 { pt3dadd( 18.2811, -28.1524, -15.711, 1.11 ) }
    dend_67 { pt3dadd( 18.4387, -29.5879, -15.5439, 0.81 ) }
    dend_67 { pt3dadd( 18.9077, -31.18, -15.2877, 0.59 ) }
    dend_67 { pt3dadd( 19.8687, -33.0695, -14.8761, 0.59 ) }
    dend_67 { pt3dadd( 20.5525, -33.8982, -14.6381, 0.74 ) }
    dend_67 { pt3dadd( 21.6957, -34.7845, -14.3099, 0.96 ) }
    dend_67 { pt3dadd( 22.5786, -35.2652, -14.102, 1.18 ) }
    dend_67 { pt3dadd( 23.2509, -35.5455, -13.9885, 1.18 ) }
    dend_67 { pt3dadd( 24.1456, -35.8731, -13.897, 1.18 ) }
    dend_67 { pt3dadd( 25.1562, -36.2823, -13.8838, 0.88 ) }
    dend_67 { pt3dadd( 26.2243, -36.9292, -13.9553, 0.88 ) }
    dend_67 { pt3dadd( 26.7361, -37.4164, -14.0473, 1.11 ) }
    dend_67 { pt3dadd( 27.4317, -38.3115, -14.2158, 1.11 ) }
    dend_67 { pt3dadd( 27.862, -38.9733, -14.3387, 0.96 ) }
    dend_67 { pt3dadd( 28.262, -39.6381, -14.4615, 1.25 ) }
    dend_67 { pt3dadd( 29.0882, -40.9328, -14.7352, 0.66 ) }
    dend_67 { pt3dadd( 29.6165, -41.6334, -14.9005, 0.66 ) }
    dend_67 { pt3dadd( 30.2221, -42.2142, -15.0498, 0.66 ) }
    dend_67 { pt3dadd( 30.8734, -42.5958, -15.1863, 0.74 ) }
    dend_67 { pt3dadd( 31.7528, -42.906, -15.4032, 0.59 ) }
    dend_67 { pt3dadd( 32.8868, -43.1938, -15.6981, 0.88 ) }
    dend_67 { pt3dadd( 33.5162, -43.3404, -15.8714, 0.88 ) }
    dend_67 { pt3dadd( 34.1293, -43.5194, -16.0436, 1.11 ) }
    dend_67 { pt3dadd( 35.2952, -43.9888, -16.386, 0.66 ) }
    dend_67 { pt3dadd( 36.3324, -44.5899, -16.6988, 0.59 ) }
    dend_67 { pt3dadd( 37.2335, -45.3907, -16.9671, 0.66 ) }
    dend_67 { pt3dadd( 37.9695, -46.3304, -17.1378, 0.81 ) }
    dend_67 { pt3dadd( 38.5912, -47.3412, -17.2759, 1.4 ) }
    dend_67 { pt3dadd( 38.8164, -47.7856, -17.317, 1.55 ) }
    dend_67 { pt3dadd( 39.1828, -48.6511, -17.3503, 0.96 ) }
    dend_67 { pt3dadd( 39.6246, -49.7807, -17.3599, 0.52 ) }
    dend_67 { pt3dadd( 39.9852, -50.6147, -17.4016, 0.52 ) }
    dend_67 { pt3dadd( 40.4668, -51.5573, -17.4765, 0.96 ) }
    dend_67 { pt3dadd( 40.8135, -52.1768, -17.5545, 1.03 ) }
    dend_67 { pt3dadd( 41.0579, -52.5906, -17.6017, 1.11 ) }
    dend_67 { pt3dadd( 41.3234, -53.0291, -17.6325, 1.11 ) }
    dend_67 { pt3dadd( 42.0453, -54.2401, -17.6965, 0.52 ) }
    dend_67 { pt3dadd( 42.6278, -55.3321, -17.6766, 0.59 ) }
    dend_67 { pt3dadd( 43.1442, -56.3799, -17.5757, 0.59 ) }
    dend_67 { pt3dadd( 43.6445, -57.4088, -17.4519, 1.18 ) }
    dend_67 { pt3dadd( 44.0652, -58.2381, -17.3759, 1.55 ) }
    dend_67 { pt3dadd( 44.323, -58.7111, -17.3514, 1.55 ) }
    dend_67 { pt3dadd( 45.0652, -59.9698, -17.489, 0.81 ) }
    dend_67 { pt3dadd( 45.5777, -60.746, -17.7575, 0.52 ) }
    dend_67 { pt3dadd( 46.1204, -61.4908, -18.1669, 0.44 ) }
    dend_67 { pt3dadd( 46.8502, -62.4597, -18.8404, 0.81 ) }
    dend_67 { pt3dadd( 47.2865, -63.0301, -19.275, 0.96 ) }
    dend_67 { pt3dadd( 48.4699, -64.5682, -20.4628, 0.52 ) }
    dend_67 { pt3dadd( 48.9579, -65.2035, -20.9575, 0.96 ) }
    dend_67 { pt3dadd( 49.346, -65.7429, -21.2977, 1.25 ) }
    dend_67 { pt3dadd( 49.7619, -66.3753, -21.5737, 1.03 ) }
    dend_67 { pt3dadd( 50.2056, -67.0923, -21.7551, 0.74 ) }
    dend_67 { pt3dadd( 50.4838, -67.5506, -21.8201, 0.74 ) }
    dend_67 { pt3dadd( 51.0158, -68.3659, -21.853, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( 51.62, -69.2493, -21.9337, 0.44 ) }
    dend_67 { pt3dadd( 52.313, -70.2358, -22.037, 0.96 ) }
    dend_67 { pt3dadd( 52.7411, -70.841, -22.1003, 1.55 ) }
    dend_67 { pt3dadd( 53.0869, -71.3426, -22.0777, 1.69 ) }
    dend_67 { pt3dadd( 53.478, -71.9232, -21.9653, 1.25 ) }
    dend_67 { pt3dadd( 54.2225, -73.0126, -21.713, 0.59 ) }
    dend_67 { pt3dadd( 54.9621, -74.0555, -21.451, 0.59 ) }
    dend_67 { pt3dadd( 55.7916, -75.1868, -21.2172, 1.25 ) }
    dend_67 { pt3dadd( 57.4387, -77.4404, -20.9085, 0.52 ) }
    dend_67 { pt3dadd( 58.276, -78.5961, -20.7983, 0.44 ) }
    dend_67 { pt3dadd( 59.2773, -79.9949, -20.7151, 0.96 ) }
    dend_67 { pt3dadd( 59.695, -80.5852, -20.7025, 0.96 ) }
    dend_67 { pt3dadd( 60.6201, -81.8717, -20.8035, 0.52 ) }
    dend_67 { pt3dadd( 61.4849, -83.0198, -21.0127, 0.52 ) }
    dend_67 { pt3dadd( 62.3836, -84.1546, -21.3479, 1.11 ) }
    dend_67 { pt3dadd( 62.7617, -84.6251, -21.4551, 1.55 ) }
    dend_67 { pt3dadd( 63.1545, -85.1311, -21.5073, 1.77 ) }
    dend_67 { pt3dadd( 63.4167, -85.4717, -21.5598, 1.84 ) }
    dend_67 { pt3dadd( 63.7868, -85.9464, -21.6753, 1.47 ) }
    dend_67 { pt3dadd( 64.3438, -86.6264, -21.9717, 1.11 ) }
    dend_67 { pt3dadd( 64.868, -87.2596, -22.3419, 0.81 ) }
    dend_67 { pt3dadd( 65.6441, -88.2784, -23.0063, 0.44 ) }
    dend_67 { pt3dadd( 66.5206, -89.5573, -23.8812, 0.96 ) }
    dend_67 { pt3dadd( 66.9685, -90.2874, -24.3758, 1.11 ) }
    dend_67 { pt3dadd( 67.3055, -90.8794, -24.7874, 0.81 ) }
    dend_67 { pt3dadd( 67.6893, -91.5858, -25.2275, 0.29 ) }
    dend_67 { pt3dadd( 68.1286, -92.3652, -25.5821, 0.29 ) }
    dend_67 { pt3dadd( 68.513, -92.9776, -25.691, 0.59 ) }
    dend_67 { pt3dadd( 69.0333, -93.7381, -25.6493, 0.88 ) }
    dend_67 { pt3dadd( 69.447, -94.3022, -25.5511, 1.03 ) }
    dend_67 { pt3dadd( 70.3558, -95.4804, -25.2779, 1.03 ) }
    dend_67 { pt3dadd( 71.1254, -96.3874, -25.0351, 0.59 ) }
    dend_67 { pt3dadd( 71.948, -97.2737, -24.7926, 0.59 ) }
    dend_67 { pt3dadd( 72.685, -98.0452, -24.5915, 0.88 ) }
    dend_67 { pt3dadd( 73.3471, -98.7942, -24.3975, 1.25 ) }
    dend_67 { pt3dadd( 73.7265, -99.2745, -24.2956, 1.47 ) }
    dend_67 { pt3dadd( 73.9561, -99.6263, -24.2472, 1.47 ) }
    dend_67 { pt3dadd( 74.4421, -100.579, -24.1304, 0.37 ) }
    dend_67 { pt3dadd( 74.8141, -101.581, -24.009, 0.37 ) }
    dend_67 { pt3dadd( 75.1355, -102.928, -23.8594, 0.74 ) }
    dend_67 { pt3dadd( 75.235, -103.785, -23.7831, 0.66 ) }
    dend_67 { pt3dadd( 75.312, -104.856, -23.6915, 0.52 ) }
    dend_67 { pt3dadd( 75.3387, -105.37, -23.6299, 0.88 ) }
    dend_67 { pt3dadd( 75.363, -105.97, -23.5256, 0.88 ) }
    dend_67 { pt3dadd( 75.4752, -106.607, -23.2057, 0.37 ) }
    dend_67 { pt3dadd( 75.8705, -107.089, -22.3065, 0.37 ) }
    dend_67 { pt3dadd( 76.2546, -107.44, -21.3957, 0.37 ) }
    dend_67 { pt3dadd( 76.7352, -107.801, -20.3809, 0.37 ) }
    dend_67 { pt3dadd( 77.126, -108.075, -19.6206, 0.44 ) }
    dend_67 { pt3dadd( 78.5387, -108.984, -17.1383, 1.18 ) }
    dend_67 { pt3dadd( 79.2034, -109.414, -16.0759, 1.18 ) }
    dend_67 { pt3dadd( 79.9641, -109.913, -14.9095, 0.37 ) }
    dend_67 { pt3dadd( 80.5327, -110.346, -14.0704, 0.81 ) }
    dend_67 { pt3dadd( 80.8192, -110.589, -13.6968, 0.81 ) }
    dend_67 { pt3dadd( 81.2276, -110.962, -13.2423, 0.81 ) }
    dend_67 { pt3dadd( 81.9938, -111.663, -12.5943, 0.37 ) }
    dend_67 { pt3dadd( 83.1738, -112.64, -11.6641, 1.33 ) }
    dend_67 { pt3dadd( 83.615, -112.951, -11.312, 1.69 ) }
    dend_67 { pt3dadd( 84.4631, -113.497, -10.6139, 1.25 ) }
    dend_67 { pt3dadd( 85.132, -113.873, -10.0963, 0.66 ) }
    dend_67 { pt3dadd( 85.9846, -114.28, -9.51855, 0.52 ) }
    dend_67 { pt3dadd( 86.8128, -114.604, -9.09593, 0.81 ) }
    dend_67 { pt3dadd( 87.2136, -114.773, -8.94636, 0.81 ) }
    dend_67 { pt3dadd( 87.6662, -114.985, -8.78917, 0.81 ) }
    dend_67 { pt3dadd( 88.2686, -115.322, -8.59611, 0.44 ) }
    dend_67 { pt3dadd( 88.9018, -115.765, -8.36407, 0.37 ) }
    dend_67 { pt3dadd( 89.283, -116.223, -8.19107, 0.37 ) }
    dend_67 { pt3dadd( 89.8367, -117.482, -7.85394, 0.37 ) }
    dend_67 { pt3dadd( 90.0636, -118.138, -7.70971, 0.74 ) }
    dend_67 { pt3dadd( 90.2625, -118.745, -7.59513, 0.81 ) }
    dend_67 { pt3dadd( 90.418, -119.213, -7.51892, 0.81 ) }
    dend_67 { pt3dadd( 90.7394, -120.034, -7.41775, 0.37 ) }
    dend_67 { pt3dadd( 91.165, -120.858, -7.28397, 0.37 ) }
    dend_67 { pt3dadd( 91.9345, -121.943, -7.08115, 0.37 ) }
    dend_67 { pt3dadd( 92.5405, -122.655, -6.90867, 0.66 ) }
    dend_67 { pt3dadd( 92.9321, -123.065, -6.79065, 0.81 ) }
    dend_67 { pt3dadd( 93.5569, -123.662, -6.59703, 0.81 ) }
    dend_67 { pt3dadd( 94.7812, -124.74, -6.21416, 0.52 ) }
    dend_67 { pt3dadd( 95.1866, -125.101, -6.08375, 0.52 ) }
    dend_67 { pt3dadd( 95.9965, -125.947, -5.8088, 0.88 ) }
    dend_67 { pt3dadd( 96.2915, -126.341, -5.71245, 1.18 ) }
    dend_67 { pt3dadd( 96.5255, -126.735, -5.6614, 1.18 ) }
    dend_67 { pt3dadd( 96.7739, -127.291, -5.64872, 1.18 ) }
    dend_67 { pt3dadd( 96.9806, -127.965, -5.71513, 0.96 ) }
    dend_67 { pt3dadd( 97.1862, -128.897, -5.89412, 0.52 ) }
    dend_67 { pt3dadd( 97.4319, -130.038, -6.22724, 0.52 ) }
    dend_67 { pt3dadd( 97.6279, -130.776, -6.483, 0.74 ) }
    dend_67 { pt3dadd( 97.7681, -131.207, -6.64712, 0.74 ) }
    dend_67 { pt3dadd( 98.1579, -132.12, -6.95786, 0.52 ) }
    dend_67 { pt3dadd( 98.8791, -133.322, -7.31768, 0.52 ) }
    dend_67 { pt3dadd( 99.5147, -134.06, -7.5204, 0.59 ) }
    dend_67 { pt3dadd( 100.349, -134.815, -7.69332, 0.81 ) }
    dend_67 { pt3dadd( 101.186, -135.471, -7.79345, 0.59 ) }
    dend_67 { pt3dadd( 102.428, -136.329, -7.94357, 0.37 ) }
    dend_67 { pt3dadd( 103.286, -136.871, -8.04725, 0.37 ) }
    dend_67 { pt3dadd( 104.199, -137.462, -8.08828, 1.11 ) }
    dend_67 { pt3dadd( 104.417, -137.611, -8.09625, 1.4 ) }
    dend_67 { pt3dadd( 105.14, -138.097, -8.13294, 1.03 ) }
    dend_67 { pt3dadd( 106.173, -138.821, -8.19991, 0.52 ) }
    dend_67 { pt3dadd( 107.168, -139.599, -8.31328, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_67 { pt3dadd( 108.179, -140.47, -8.40943, 1.18 ) }
    dend_67 { pt3dadd( 108.558, -140.819, -8.45986, 1.47 ) }
    dend_67 { pt3dadd( 108.937, -141.167, -8.53907, 1.47 ) }
    dend_67 { pt3dadd( 109.945, -142.164, -8.82279, 0.52 ) }
    dend_67 { pt3dadd( 110.7, -143.006, -9.1724, 0.88 ) }
    dend_67 { pt3dadd( 111.097, -143.526, -9.46221, 0.88 ) }
    dend_67 { pt3dadd( 111.823, -144.562, -10.262, 0.59 ) }
    dend_67 { pt3dadd( 112.352, -145.368, -10.9666, 1.03 ) }
    dend_67 { pt3dadd( 112.732, -145.96, -11.5289, 1.03 ) }
    dend_67 { pt3dadd( 113.486, -147.129, -12.7518, 0.44 ) }
    dend_67 { pt3dadd( 113.789, -147.644, -13.2982, 0.44 ) }
    dend_67 { pt3dadd( 114.413, -148.897, -14.5714, 1.03 ) }
    dend_67 { pt3dadd( 114.608, -149.41, -15.025, 1.18 ) }
    dend_67 { pt3dadd( 114.814, -150.086, -15.5437, 0.74 ) }
    dend_67 { pt3dadd( 115.13, -151.31, -16.3477, 0.44 ) }
    dend_67 { pt3dadd( 115.278, -152.192, -16.7176, 0.44 ) }
    dend_67 { pt3dadd( 115.404, -153.157, -16.993, 0.44 ) }
    dend_67 { pt3dadd( 115.553, -154.485, -17.1775, 1.11 ) }
    dend_67 { pt3dadd( 115.643, -154.983, -17.2132, 1.47 ) }
    dend_67 { pt3dadd( 115.86, -155.757, -17.2063, 1.47 ) }
    dend_67 { pt3dadd( 116.494, -157.261, -17.0509, 0.44 ) }
    dend_67 { pt3dadd( 117.014, -158.165, -16.9268, 0.44 ) }
    dend_67 { pt3dadd( 117.727, -159.198, -16.7766, 0.44 ) }
    dend_67 { pt3dadd( 118.428, -160.124, -16.6529, 0.44 ) }
    dend_67 { pt3dadd( 118.906, -160.787, -16.6103, 0.29 ) }
    dend_67 { pt3dadd( 119.54, -161.756, -16.6523, 0.29 ) }
    dend_67 { pt3dadd( 119.825, -162.295, -16.7497, 1.4 ) }
    dend_67 { pt3dadd( 120.051, -162.924, -16.8916, 1.99 ) }
    dend_67 { pt3dadd( 120.259, -163.769, -17.1077, 1.47 ) }
    dend_67 { pt3dadd( 120.504, -165.149, -17.4976, 0.44 ) }
    dend_67 { pt3dadd( 120.696, -166.265, -17.7638, 0.37 ) }
    dend_67 { pt3dadd( 120.909, -167.307, -17.9678, 0.37 ) }
    dend_67 { pt3dadd( 121.115, -168.202, -18.0937, 0.74 ) }
    dend_67 { pt3dadd( 121.298, -168.824, -18.1662, 0.88 ) }
    dend_67 { pt3dadd( 121.513, -169.392, -18.2064, 0.37 ) }
    dend_67 { pt3dadd( 122.292, -171.015, -18.2165, 0.29 ) }
    dend_67 { pt3dadd( 122.694, -171.681, -18.1769, 0.29 ) }
    dend_67 { pt3dadd( 123.12, -172.275, -18.1312, 0.96 ) }
    dend_67 { pt3dadd( 124.12, -173.549, -18.1773, 0.37 ) }
    dend_67 { pt3dadd( 124.807, -174.401, -18.3012, 0.66 ) }
    dend_67 { pt3dadd( 125.092, -174.755, -18.3904, 0.66 ) }
    dend_67 { pt3dadd( 125.996, -175.931, -18.8643, 0.37 ) }
    dend_67 { pt3dadd( 126.243, -176.253, -19.0087, 0.81 ) }
    dend_67 { pt3dadd( 127.498, -177.789, -19.7421, 0.37 ) }
    dend_67 { pt3dadd( 127.798, -178.118, -19.9221, 0.88 ) }
    dend_67 { pt3dadd( 128.093, -178.401, -20.1142, 0.88 ) }
    dend_67 { pt3dadd( 128.862, -179.03, -20.6371, 0.44 ) }
    dend_67 { pt3dadd( 129.381, -179.424, -21.0091, 0.44 ) }
    dend_67 { pt3dadd( 130.128, -179.935, -21.4758, 0.81 ) }
    dend_67 { pt3dadd( 131.357, -180.659, -22.1613, 1.55 ) }
    dend_67 { pt3dadd( 131.813, -180.911, -22.4128, 1.69 ) }
    dend_67 { pt3dadd( 133.056, -181.589, -23.1213, 0.37 ) }
    dend_67 { pt3dadd( 133.93, -182.075, -23.6326, 0.37 ) }
    dend_67 { pt3dadd( 134.801, -182.618, -24.1849, 0.37 ) }
    dend_67 { pt3dadd( 135.736, -183.269, -24.7814, 0.44 ) }
    dend_67 { pt3dadd( 136.388, -183.751, -25.1671, 1.03 ) }
    dend_67 { pt3dadd( 136.882, -184.104, -25.4405, 1.4 ) }
    dend_67 { pt3dadd( 137.289, -184.376, -25.6398, 1.4 ) }
    dend_67 { pt3dadd( 138.491, -185.087, -26.1536, 0.29 ) }
    dend_67 { pt3dadd( 139.379, -185.624, -26.4638, 0.29 ) }
    dend_67 { pt3dadd( 140.087, -186.047, -26.6521, 0.29 ) }
    dend_67 { pt3dadd( 140.626, -186.349, -26.7699, 0.29 ) }
    dend_67 { pt3dadd( 141.316, -186.715, -26.8944, 0.74 ) }
    dend_67 { pt3dadd( 141.893, -187.008, -26.9873, 1.11 ) }
    dend_67 { pt3dadd( 143.084, -187.555, -27.1446, 0.52 ) }
    dend_67 { pt3dadd( 143.745, -187.863, -27.2345, 0.81 ) }
    dend_67 { pt3dadd( 144.5, -188.259, -27.3356, 0.66 ) }
    dend_67 { pt3dadd( 145.321, -188.72, -27.4698, 0.29 ) }
    dend_67 { pt3dadd( 146.039, -189.112, -27.6045, 0.29 ) }
    dend_67 { pt3dadd( 147.0, -189.607, -27.7998, 0.29 ) }
    dend_67 { pt3dadd( 148.222, -190.17, -28.0556, 0.44 ) }
    dend_67 { pt3dadd( 148.818, -190.434, -28.1652, 0.44 ) }
    dend_67 { pt3dadd( 149.717, -190.832, -28.3324, 0.29 ) }
    dend_67 { pt3dadd( 150.176, -191.044, -28.4106, 0.59 ) }
    dend_67 { pt3dadd( 150.502, -191.206, -28.468, 0.59 ) }
    dend_67 { pt3dadd( 151.069, -191.522, -28.584, 0.29 ) }
    dend_67 { pt3dadd( 151.844, -191.979, -28.7671, 0.29 ) }
    dend_67 { pt3dadd( 152.565, -192.433, -28.9528, 0.59 ) }
    dend_67 { pt3dadd( 152.942, -192.691, -29.0481, 0.74 ) }
    dend_67 { pt3dadd( 153.188, -192.874, -29.1168, 0.74 ) }
    dend_67 { pt3dadd( 154.288, -193.762, -29.4587, 0.29 ) }
    dend_67 { pt3dadd( 155.083, -194.463, -29.7413, 0.44 ) }
    dend_67 { pt3dadd( 155.587, -194.932, -29.9436, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.86928, -3.54582, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.86928, -3.54582, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.66375, -4.27179, 4.32484, 1.25 ) }
    dend_56 { pt3dadd( 7.32467, -5.52369, 4.69359, 1.4 ) }
    dend_56 { pt3dadd( 6.99254, -6.901, 5.04672, 1.4 ) }
    dend_56 { pt3dadd( 6.748, -8.19928, 5.33949, 1.18 ) }
    dend_56 { pt3dadd( 6.5654, -9.52304, 5.60967, 1.18 ) }
    dend_56 { pt3dadd( 6.49487, -10.6276, 5.80146, 1.4 ) }
    dend_56 { pt3dadd( 6.57562, -12.1955, 6.02827, 1.4 ) }
    dend_56 { pt3dadd( 6.74893, -13.8882, 6.21678, 1.4 ) }
    dend_56 { pt3dadd( 6.98981, -15.3037, 6.32677, 1.62 ) }
    dend_56 { pt3dadd( 7.23085, -16.2417, 6.39356, 1.47 ) }
    dend_56 { pt3dadd( 7.77006, -17.7418, 6.47141, 1.03 ) }
    dend_56 { pt3dadd( 8.55565, -19.3764, 6.55533, 1.03 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.81072, -2.82433, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -9.81072, -2.82433, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -10.5993, -3.69876, -6.43575, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -11.6413, -5.05333, -6.65393, 1.11 ) }
    dend_51 { pt3dadd( -12.2137, -5.89761, -6.81986, 1.18 ) }
    dend_51 { pt3dadd( -12.7456, -6.79277, -7.03661, 1.03 ) }
    dend_51 { pt3dadd( -13.3717, -7.84643, -7.29173, 0.96 ) }
    dend_51 { pt3dadd( -13.894, -8.80705, -7.54453, 1.4 ) }
    dend_51 { pt3dadd( -14.3962, -9.95048, -7.89539, 1.62 ) }
    dend_51 { pt3dadd( -14.5767, -10.5445, -8.11064, 1.84 ) }
    dend_51 { pt3dadd( -14.8054, -11.5841, -8.54566, 1.84 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 8/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.60072, -6.85107, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -3.60072, -6.85107, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -4.40292, -7.75779, -2.10527, 1.11 ) }
    dend_32 { pt3dadd( -5.59694, -8.91322, -2.70696, 0.96 ) }
    dend_32 { pt3dadd( -5.99198, -9.24179, -2.85111, 0.96 ) }
    dend_32 { pt3dadd( -6.95188, -9.90866, -3.09965, 0.66 ) }
    dend_32 { pt3dadd( -7.77975, -10.4152, -3.22134, 0.66 ) }
    dend_32 { pt3dadd( -8.32461, -10.6798, -3.22935, 1.03 ) }
    dend_32 { pt3dadd( -9.34592, -11.0757, -3.12615, 1.33 ) }
    dend_32 { pt3dadd( -10.0421, -11.3394, -3.01245, 1.47 ) }
    dend_32 { pt3dadd( -10.9757, -11.7452, -2.88549, 1.11 ) }
    dend_32 { pt3dadd( -11.8976, -12.2633, -2.83318, 0.96 ) }
    dend_32 { pt3dadd( -12.9361, -13.0995, -2.92637, 0.66 ) }
    dend_32 { pt3dadd( -13.6698, -13.94, -3.13486, 0.52 ) }
    dend_32 { pt3dadd( -14.1558, -14.7745, -3.48146, 0.44 ) }
    dend_32 { pt3dadd( -14.4996, -15.77, -4.03309, 0.44 ) }
    dend_32 { pt3dadd( -14.7874, -17.0339, -4.84024, 1.4 ) }
    dend_32 { pt3dadd( -14.8824, -17.6257, -5.23697, 1.84 ) }
    dend_32 { pt3dadd( -14.9452, -18.1679, -5.5938, 2.14 ) }
    dend_32 { pt3dadd( -15.0855, -19.4958, -6.39528, 1.99 ) }
    dend_32 { pt3dadd( -15.3192, -21.5599, -7.42845, 1.03 ) }
    dend_32 { pt3dadd( -15.5098, -23.0579, -8.01461, 0.88 ) }
    dend_32 { pt3dadd( -15.6893, -24.1827, -8.18284, 0.81 ) }
    dend_32 { pt3dadd( -15.8577, -24.9882, -8.04467, 0.66 ) }
    dend_32 { pt3dadd( -16.1759, -26.2129, -7.46585, 0.66 ) }
    dend_32 { pt3dadd( -16.4896, -27.2131, -6.72141, 0.96 ) }
    dend_32 { pt3dadd( -16.6661, -27.7012, -6.2467, 1.11 ) }
    dend_32 { pt3dadd( -17.7911, -30.629, -3.25461, 0.44 ) }
    dend_32 { pt3dadd( -18.1572, -31.5286, -2.37574, 1.03 ) }
    dend_32 { pt3dadd( -18.2513, -31.7515, -2.18683, 1.4 ) }
    dend_32 { pt3dadd( -18.515, -32.3094, -1.82223, 1.69 ) }
    dend_32 { pt3dadd( -18.7538, -32.7604, -1.67405, 1.69 ) }
    dend_32 { pt3dadd( -19.6482, -34.251, -1.64827, 0.81 ) }
    dend_32 { pt3dadd( -20.197, -34.9727, -1.87952, 1.18 ) }
    dend_32 { pt3dadd( -20.9134, -35.7064, -2.15679, 1.47 ) }
    dend_32 { pt3dadd( -21.4126, -36.1468, -2.30851, 1.47 ) }
    dend_32 { pt3dadd( -22.113, -36.725, -2.43609, 1.4 ) }
    dend_32 { pt3dadd( -23.0148, -37.4348, -2.49707, 1.11 ) }
    dend_32 { pt3dadd( -24.4838, -38.5444, -2.42056, 0.52 ) }
    dend_32 { pt3dadd( -25.4025, -39.2837, -2.29269, 0.52 ) }
    dend_32 { pt3dadd( -26.3895, -40.243, -2.03714, 0.52 ) }
    dend_32 { pt3dadd( -27.3223, -41.5314, -1.6493, 1.18 ) }
    dend_32 { pt3dadd( -27.5907, -42.0907, -1.51372, 1.55 ) }
    dend_32 { pt3dadd( -27.7082, -42.4925, -1.46435, 1.69 ) }
    dend_32 { pt3dadd( -27.8389, -43.1302, -1.47563, 1.92 ) }
    dend_32 { pt3dadd( -28.0358, -44.179, -1.67262, 0.74 ) }
    dend_32 { pt3dadd( -28.2784, -45.5426, -1.94927, 0.44 ) }
    dend_32 { pt3dadd( -28.6232, -47.3464, -2.31987, 0.44 ) }
    dend_32 { pt3dadd( -28.9398, -48.8771, -2.58677, 0.44 ) }
    dend_32 { pt3dadd( -29.3569, -50.6627, -2.82905, 0.74 ) }
    dend_32 { pt3dadd( -29.709, -51.8378, -2.93358, 0.52 ) }
    dend_32 { pt3dadd( -30.6509, -54.3355, -3.01566, 1.03 ) }
    dend_32 { pt3dadd( -30.9167, -54.9653, -2.98408, 1.25 ) }
    dend_32 { pt3dadd( -31.2551, -55.7781, -2.8681, 0.66 ) }
    dend_32 { pt3dadd( -31.627, -56.7792, -2.64376, 0.29 ) }
    dend_32 { pt3dadd( -31.9913, -57.9832, -2.33028, 0.29 ) }
    dend_32 { pt3dadd( -32.1754, -58.7147, -2.15017, 0.59 ) }
    dend_32 { pt3dadd( -32.4297, -60.1638, -1.86427, 0.59 ) }
    dend_32 { pt3dadd( -32.4823, -61.1462, -1.63013, 1.03 ) }
    dend_32 { pt3dadd( -32.4023, -62.8493, -1.22476, 1.4 ) }
    dend_32 { pt3dadd( -32.3196, -63.6181, -1.05167, 1.77 ) }
    dend_32 { pt3dadd( -32.2405, -64.2509, -0.949132, 2.14 ) }
    dend_32 { pt3dadd( -32.1665, -65.2197, -0.855976, 2.36 ) }
    dend_32 { pt3dadd( -32.2588, -66.5791, -0.897218, 0.74 ) }
    dend_32 { pt3dadd( -32.521, -67.6242, -1.04246, 0.44 ) }
    dend_32 { pt3dadd( -32.8729, -68.4431, -1.27776, 0.44 ) }
    dend_32 { pt3dadd( -33.5135, -69.6554, -1.61446, 0.74 ) }
    dend_32 { pt3dadd( -33.8726, -70.2706, -1.74951, 0.74 ) }
    dend_32 { pt3dadd( -34.5216, -71.3465, -1.91226, 0.66 ) }
    dend_32 { pt3dadd( -34.9698, -72.1358, -1.93093, 0.44 ) }
    dend_32 { pt3dadd( -35.3664, -73.0429, -1.82217, 0.44 ) }
    dend_32 { pt3dadd( -35.7738, -74.3896, -1.53417, 0.59 ) }
    dend_32 { pt3dadd( -35.9968, -75.3085, -1.27051, 0.81 ) }
    dend_32 { pt3dadd( -36.2123, -76.0636, -1.04476, 0.96 ) }
    dend_32 { pt3dadd( -36.4809, -76.7708, -0.825261, 0.74 ) }
    dend_32 { pt3dadd( -36.8679, -77.4753, -0.64465, 0.44 ) }
    dend_32 { pt3dadd( -37.4025, -78.1462, -0.512138, 0.44 ) }
    dend_32 { pt3dadd( -38.0859, -78.8083, -0.483303, 0.74 ) }
    dend_32 { pt3dadd( -39.3528, -79.9349, -0.489516, 0.88 ) }
    dend_32 { pt3dadd( -40.008, -80.5112, -0.461138, 1.4 ) }
    dend_32 { pt3dadd( -40.3405, -80.8354, -0.399998, 1.4 ) }
    dend_32 { pt3dadd( -40.8852, -81.5225, -0.198909, 1.18 ) }
    dend_32 { pt3dadd( -41.2477, -82.2166, 0.0493692, 0.81 ) }
    dend_32 { pt3dadd( -41.5446, -83.2837, 0.456675, 0.52 ) }
    dend_32 { pt3dadd( -41.6641, -84.3195, 0.854473, 0.52 ) }
    dend_32 { pt3dadd( -41.729, -85.7753, 1.40662, 0.74 ) }
    dend_32 { pt3dadd( -41.7502, -86.8007, 1.76664, 0.52 ) }
    dend_32 { pt3dadd( -41.7626, -87.3538, 1.94688, 1.11 ) }
    dend_32 { pt3dadd( -41.7968, -88.0203, 2.15624, 1.4 ) }
    dend_32 { pt3dadd( -41.8477, -88.5763, 2.29883, 1.55 ) }
    dend_32 { pt3dadd( -41.9525, -89.3852, 2.45838, 0.74 ) }
    dend_32 { pt3dadd( -42.2165, -90.89, 2.69679, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -42.4617, -91.9713, 2.92141, 0.81 ) }
    dend_32 { pt3dadd( -42.8031, -93.2221, 3.22846, 1.11 ) }
    dend_32 { pt3dadd( -43.1046, -94.1134, 3.47307, 1.33 ) }
    dend_32 { pt3dadd( -43.393, -94.8117, 3.68297, 1.55 ) }
    dend_32 { pt3dadd( -43.7469, -95.4699, 3.92062, 1.18 ) }
    dend_32 { pt3dadd( -44.6682, -96.6647, 4.53702, 0.59 ) }
    dend_32 { pt3dadd( -45.0931, -97.074, 4.8258, 0.96 ) }
    dend_32 { pt3dadd( -45.5909, -97.4779, 5.15173, 1.11 ) }
    dend_32 { pt3dadd( -46.1056, -97.8732, 5.4956, 1.11 ) }
    dend_32 { pt3dadd( -47.0505, -98.5949, 6.13254, 0.59 ) }
    dend_32 { pt3dadd( -48.0723, -99.3986, 6.80544, 0.81 ) }
    dend_32 { pt3dadd( -48.9857, -100.168, 7.37677, 0.59 ) }
    dend_32 { pt3dadd( -49.9449, -101.084, 7.97902, 0.59 ) }
    dend_32 { pt3dadd( -50.8739, -102.125, 8.55708, 0.44 ) }
    dend_32 { pt3dadd( -51.5491, -103.069, 8.91091, 0.81 ) }
    dend_32 { pt3dadd( -51.9278, -103.765, 9.04845, 0.96 ) }
    dend_32 { pt3dadd( -52.1552, -104.371, 9.07576, 0.96 ) }
    dend_32 { pt3dadd( -52.3398, -105.211, 9.0217, 0.96 ) }
    dend_32 { pt3dadd( -52.442, -106.084, 8.92167, 0.66 ) }
    dend_32 { pt3dadd( -52.4966, -107.85, 8.6521, 0.52 ) }
    dend_32 { pt3dadd( -52.4789, -108.763, 8.50555, 0.66 ) }
    dend_32 { pt3dadd( -52.4339, -109.852, 8.35093, 1.33 ) }
    dend_32 { pt3dadd( -52.4117, -110.625, 8.25996, 1.99 ) }
    dend_32 { pt3dadd( -52.4537, -112.485, 8.10311, 0.44 ) }
    dend_32 { pt3dadd( -52.5739, -113.483, 8.0667, 0.44 ) }
    dend_32 { pt3dadd( -52.7456, -114.177, 8.08247, 0.74 ) }
    dend_32 { pt3dadd( -52.9466, -114.722, 8.0955, 0.74 ) }
    dend_32 { pt3dadd( -53.3256, -115.497, 8.13712, 0.74 ) }
    dend_32 { pt3dadd( -53.8167, -116.326, 8.19256, 0.37 ) }
    dend_32 { pt3dadd( -54.5859, -117.424, 8.27602, 0.29 ) }
    dend_32 { pt3dadd( -55.2187, -118.161, 8.35285, 0.29 ) }
    dend_32 { pt3dadd( -55.9879, -118.946, 8.45167, 0.29 ) }
    dend_32 { pt3dadd( -56.675, -119.588, 8.57953, 0.22 ) }
    dend_32 { pt3dadd( -57.0595, -119.923, 8.66897, 0.22 ) }
    dend_32 { pt3dadd( -57.6819, -120.479, 8.83753, 0.81 ) }
    dend_32 { pt3dadd( -58.0452, -120.831, 8.94696, 0.96 ) }
    dend_32 { pt3dadd( -58.9083, -121.677, 9.21981, 0.22 ) }
    dend_32 { pt3dadd( -59.6413, -122.454, 9.45683, 1.33 ) }
    dend_32 { pt3dadd( -60.1213, -123.044, 9.60511, 1.55 ) }
    dend_32 { pt3dadd( -60.8132, -124.004, 9.84532, 1.11 ) }
    dend_32 { pt3dadd( -61.1918, -124.593, 10.0015, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.23072, 4.39068, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -2.23072, 4.39068, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -3.24192, 5.10453, 5.70102, 1.55 ) }
    dend_13 { pt3dadd( -4.27452, 5.77291, 5.70102, 1.4 ) }
    dend_13 { pt3dadd( -5.43174, 6.45084, 5.70102, 1.18 ) }
    dend_13 { pt3dadd( -6.26959, 6.91281, 5.70406, 1.47 ) }
    dend_13 { pt3dadd( -7.38856, 7.52848, 5.74475, 1.77 ) }
    dend_13 { pt3dadd( -8.1969, 7.96509, 5.81224, 1.99 ) }
    dend_13 { pt3dadd( -9.08275, 8.45482, 5.95884, 1.99 ) }
    dend_13 { pt3dadd( -10.1358, 9.11293, 6.24548, 1.62 ) }
    dend_13 { pt3dadd( -11.3255, 10.0566, 6.74802, 1.11 ) }
    dend_13 { pt3dadd( -12.0687, 10.8527, 7.22188, 1.11 ) }
    dend_13 { pt3dadd( -12.6176, 11.7131, 7.75675, 1.25 ) }
    dend_13 { pt3dadd( -13.0545, 12.8434, 8.45764, 1.47 ) }
    dend_13 { pt3dadd( -13.2409, 13.9387, 9.14256, 1.69 ) }
    dend_13 { pt3dadd( -13.214, 14.844, 9.70119, 1.92 ) }
    dend_13 { pt3dadd( -13.0311, 15.8853, 10.3145, 1.77 ) }
    dend_13 { pt3dadd( -12.8096, 16.6638, 10.7265, 1.4 ) }
    dend_13 { pt3dadd( -12.4346, 17.6769, 11.2034, 1.18 ) }
    dend_13 { pt3dadd( -12.021, 18.6772, 11.6377, 1.11 ) }
    dend_13 { pt3dadd( -11.416, 19.9899, 12.1885, 1.62 ) }
    dend_13 { pt3dadd( -11.1293, 20.5643, 12.4223, 1.99 ) }
    dend_13 { pt3dadd( -10.6965, 21.3681, 12.7412, 2.21 ) }
    dend_13 { pt3dadd( -10.3278, 22.007, 12.9885, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.9007, 0.851422, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -10.9695, 0.86441, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -12.0851, 1.09362, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -13.1085, 1.33657, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -14.3248, 1.66423, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -15.6022, 2.05329, -3.98898, 1.84 ) }
    dend_0 { pt3dadd( -16.5053, 2.37071, -3.98898, 1.92 ) }
    dend_0 { pt3dadd( -17.3653, 2.71457, -4.01157, 2.14 ) }
    dend_0 { pt3dadd( -18.3747, 3.18859, -4.06454, 2.14 ) }
    dend_0 { pt3dadd( -19.255, 3.6792, -4.14349, 2.14 ) }
    dend_0 { pt3dadd( -19.9884, 4.16135, -4.26427, 2.14 ) }
    dend_0 { pt3dadd( -21.0793, 4.98233, -4.51781, 2.14 ) }
    dend_0 { pt3dadd( -21.9569, 5.71436, -4.82872, 2.14 ) }
    dend_0 { pt3dadd( -22.4746, 6.17225, -5.04383, 2.21 ) }
    dend_0 { pt3dadd( -23.0582, 6.7153, -5.33261, 1.99 ) }
    dend_0 { pt3dadd( -23.7758, 7.4169, -5.75443, 1.99 ) }
    dend_0 { pt3dadd( -24.391, 8.04141, -6.18252, 2.14 ) }
    dend_0 { pt3dadd( -25.3436, 9.0727, -6.99025, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 26.063, 3.65858, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 40.8915, 5.92002, 2.65033, 3.17 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 86/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.55565, -19.3764, 6.55533, 1.25 ) }
    dend_62 { pt3dadd( 9.02559, -20.5985, 6.43337, 1.25 ) }
    dend_62 { pt3dadd( 9.07494, -22.2361, 6.28106, 1.03 ) }
    dend_62 { pt3dadd( 8.69953, -23.5863, 6.17532, 0.66 ) }
    dend_62 { pt3dadd( 8.34166, -24.5675, 6.11263, 0.96 ) }
    dend_62 { pt3dadd( 8.00538, -25.589, 6.05838, 1.18 ) }
    dend_62 { pt3dadd( 7.62683, -27.0587, 5.99081, 1.18 ) }
    dend_62 { pt3dadd( 7.38975, -27.9907, 5.92967, 1.47 ) }
    dend_62 { pt3dadd( 7.02228, -29.4775, 5.86186, 0.81 ) }
    dend_62 { pt3dadd( 6.89662, -30.4741, 5.84728, 0.81 ) }
    dend_62 { pt3dadd( 7.12511, -31.6963, 5.83093, 0.96 ) }
    dend_62 { pt3dadd( 7.62849, -32.6971, 5.84358, 0.88 ) }
    dend_62 { pt3dadd( 8.31476, -33.7661, 5.91196, 1.33 ) }
    dend_62 { pt3dadd( 8.7303, -34.3987, 5.97855, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 9.18966, -35.1238, 6.07944, 1.33 ) }
    dend_62 { pt3dadd( 9.58353, -35.9007, 6.2089, 0.81 ) }
    dend_62 { pt3dadd( 10.0445, -37.3141, 6.45811, 0.66 ) }
    dend_62 { pt3dadd( 10.3225, -38.7514, 6.69244, 0.96 ) }
    dend_62 { pt3dadd( 10.419, -39.6992, 6.81637, 1.4 ) }
    dend_62 { pt3dadd( 10.4595, -40.4749, 6.89114, 1.4 ) }
    dend_62 { pt3dadd( 10.4809, -41.2596, 6.98053, 1.4 ) }
    dend_62 { pt3dadd( 10.4668, -42.6063, 7.19642, 0.96 ) }
    dend_62 { pt3dadd( 10.4506, -43.242, 7.34418, 0.81 ) }
    dend_62 { pt3dadd( 10.4233, -44.4139, 7.76516, 0.81 ) }
    dend_62 { pt3dadd( 10.3997, -45.2695, 8.14758, 0.74 ) }
    dend_62 { pt3dadd( 10.3542, -47.0113, 9.06123, 0.74 ) }
    dend_62 { pt3dadd( 10.335, -48.3335, 9.76497, 0.88 ) }
    dend_62 { pt3dadd( 10.3484, -49.4193, 10.3194, 0.88 ) }
    dend_62 { pt3dadd( 10.4338, -50.6409, 10.8373, 1.47 ) }
    dend_62 { pt3dadd( 10.6267, -51.7915, 11.1213, 0.81 ) }
    dend_62 { pt3dadd( 11.0088, -53.1441, 11.1379, 0.59 ) }
    dend_62 { pt3dadd( 11.5533, -54.6585, 10.9199, 0.88 ) }
    dend_62 { pt3dadd( 11.9678, -55.7401, 10.7364, 0.88 ) }
    dend_62 { pt3dadd( 12.4191, -57.0324, 10.5424, 0.66 ) }
    dend_62 { pt3dadd( 12.8397, -58.455, 10.3984, 0.59 ) }
    dend_62 { pt3dadd( 13.0887, -59.6493, 10.4011, 0.59 ) }
    dend_62 { pt3dadd( 13.2394, -60.9484, 10.5491, 0.59 ) }
    dend_62 { pt3dadd( 13.3167, -62.2104, 10.8536, 0.88 ) }
    dend_62 { pt3dadd( 13.3223, -63.6308, 11.3394, 0.66 ) }
    dend_62 { pt3dadd( 13.2835, -64.7607, 11.8037, 1.03 ) }
    dend_62 { pt3dadd( 13.1898, -66.2078, 12.4584, 1.25 ) }
    dend_62 { pt3dadd( 13.0721, -67.6436, 13.1131, 1.25 ) }
    dend_62 { pt3dadd( 13.0039, -68.5844, 13.5094, 1.84 ) }
    dend_62 { pt3dadd( 12.9757, -69.4977, 13.8735, 2.28 ) }
    dend_62 { pt3dadd( 12.9819, -70.2918, 14.2499, 1.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.55565, -19.3764, 6.55533, 0.74 ) }
    dend_57 { pt3dadd( 8.14875, -22.0293, 10.1574, 0.74 ) }
    dend_57 { pt3dadd( 8.23975, -22.5723, 11.177, 0.74 ) }
    dend_57 { pt3dadd( 8.3621, -23.0337, 12.1545, 0.74 ) }
    dend_57 { pt3dadd( 8.53971, -23.7774, 13.6865, 1.11 ) }
    dend_57 { pt3dadd( 8.62559, -24.1641, 14.3991, 1.11 ) }
    dend_57 { pt3dadd( 8.841, -25.1634, 15.9641, 0.66 ) }
    dend_57 { pt3dadd( 9.39588, -27.2324, 18.6345, 1.4 ) }
    dend_57 { pt3dadd( 9.59834, -28.1231, 19.7601, 0.96 ) }
    dend_57 { pt3dadd( 9.69194, -28.867, 20.6447, 1.18 ) }
    dend_57 { pt3dadd( 9.6966, -29.8969, 21.6934, 0.88 ) }
    dend_57 { pt3dadd( 9.52166, -31.3144, 22.8796, 0.66 ) }
    dend_57 { pt3dadd( 9.12334, -32.9374, 23.8912, 0.66 ) }
    dend_57 { pt3dadd( 8.83041, -33.9122, 24.3712, 0.59 ) }
    dend_57 { pt3dadd( 8.37632, -35.3536, 25.06, 0.74 ) }
    dend_57 { pt3dadd( 8.04669, -36.268, 25.5347, 1.03 ) }
    dend_57 { pt3dadd( 7.63549, -37.1288, 26.0339, 1.18 ) }
    dend_57 { pt3dadd( 6.96852, -38.2121, 26.6809, 1.4 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.8054, -11.5841, -8.54566, 0.81 ) }
    dend_53 { pt3dadd( -16.2549, -12.4781, -8.44327, 0.81 ) }
    dend_53 { pt3dadd( -17.1408, -13.0588, -8.23752, 0.88 ) }
    dend_53 { pt3dadd( -17.9816, -13.672, -7.95636, 1.03 ) }
    dend_53 { pt3dadd( -18.6523, -14.2338, -7.67983, 1.03 ) }
    dend_53 { pt3dadd( -19.2867, -14.8713, -7.36281, 0.52 ) }
    dend_53 { pt3dadd( -19.8374, -15.5877, -6.96921, 0.52 ) }
    dend_53 { pt3dadd( -20.3085, -16.5682, -6.30361, 0.74 ) }
    dend_53 { pt3dadd( -20.4328, -16.994, -6.00919, 0.96 ) }
    dend_53 { pt3dadd( -20.5293, -17.5108, -5.6482, 0.59 ) }
    dend_53 { pt3dadd( -20.6335, -18.1839, -5.202, 0.44 ) }
    dend_53 { pt3dadd( -20.8419, -19.4766, -4.49601, 0.44 ) }
    dend_53 { pt3dadd( -20.9615, -20.0093, -4.2144, 0.81 ) }
    dend_53 { pt3dadd( -21.1852, -20.6144, -3.88251, 0.96 ) }
    dend_53 { pt3dadd( -21.5843, -21.4102, -3.39635, 1.03 ) }
    dend_53 { pt3dadd( -21.8759, -21.9252, -3.07697, 0.96 ) }
    dend_53 { pt3dadd( -22.2747, -22.6353, -2.66565, 0.37 ) }
    dend_53 { pt3dadd( -22.9144, -23.9664, -1.95974, 0.37 ) }
    dend_53 { pt3dadd( -23.1841, -24.6781, -1.59225, 0.29 ) }
    dend_53 { pt3dadd( -23.3638, -25.3466, -1.28294, 0.37 ) }
    dend_53 { pt3dadd( -23.5671, -26.2922, -0.905413, 0.37 ) }
    dend_53 { pt3dadd( -23.7366, -27.2659, -0.551983, 0.81 ) }
    dend_53 { pt3dadd( -23.8881, -28.2044, -0.255161, 1.25 ) }
    dend_53 { pt3dadd( -23.9378, -28.487, -0.191777, 1.55 ) }
    dend_53 { pt3dadd( -24.1949, -29.577, 0.0388266, 0.37 ) }
    dend_53 { pt3dadd( -24.4633, -30.1818, 0.159589, 0.37 ) }
    dend_53 { pt3dadd( -24.6833, -30.4542, 0.215239, 0.44 ) }
    dend_53 { pt3dadd( -25.2769, -30.9954, 0.312514, 0.59 ) }
    dend_53 { pt3dadd( -25.6687, -31.3186, 0.351534, 0.66 ) }
    dend_53 { pt3dadd( -26.1558, -31.7051, 0.394191, 0.37 ) }
    dend_53 { pt3dadd( -26.716, -32.1462, 0.43576, 0.59 ) }
    dend_53 { pt3dadd( -27.2962, -32.6636, 0.447711, 0.88 ) }
    dend_53 { pt3dadd( -27.625, -32.991, 0.436094, 1.03 ) }
    dend_53 { pt3dadd( -28.2069, -33.6763, 0.468931, 0.37 ) }
    dend_53 { pt3dadd( -28.3938, -33.9127, 0.503195, 0.37 ) }
    dend_53 { pt3dadd( -28.7422, -34.3475, 0.603673, 0.37 ) }
    dend_53 { pt3dadd( -29.2061, -34.9058, 0.77426, 0.66 ) }
    dend_53 { pt3dadd( -29.5626, -35.2971, 0.916753, 0.88 ) }
    dend_53 { pt3dadd( -30.7936, -36.5121, 1.38293, 0.29 ) }
    dend_53 { pt3dadd( -31.3207, -37.0141, 1.56778, 0.29 ) }
    dend_53 { pt3dadd( -31.834, -37.5429, 1.73547, 0.96 ) }
    dend_53 { pt3dadd( -32.1035, -37.8477, 1.82267, 1.33 ) }
    dend_53 { pt3dadd( -32.5868, -38.4803, 1.97311, 1.11 ) }
    dend_53 { pt3dadd( -33.1442, -39.3141, 2.19591, 0.59 ) }
    dend_53 { pt3dadd( -33.6306, -40.1056, 2.32136, 0.37 ) }
    dend_53 { pt3dadd( -34.0184, -40.8138, 2.63985, 0.66 ) }
    dend_53 { pt3dadd( -34.2608, -41.2277, 2.94974, 0.52 ) }
    dend_53 { pt3dadd( -34.5689, -41.6956, 3.4416, 0.29 ) }
    dend_53 { pt3dadd( -35.3042, -42.7153, 4.7617, 0.29 ) }
    dend_53 { pt3dadd( -35.8919, -43.4126, 5.87063, 0.81 ) }
    dend_53 { pt3dadd( -37.3938, -44.7416, 8.7252, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -37.7677, -44.9734, 9.39861, 0.29 ) }
    dend_53 { pt3dadd( -37.9772, -45.0648, 9.7526, 0.29 ) }
    dend_53 { pt3dadd( -38.4461, -45.1863, 10.5405, 0.66 ) }
    dend_53 { pt3dadd( -38.6609, -45.214, 10.9234, 0.66 ) }
    dend_53 { pt3dadd( -42.9632, -52.8876, 15.3444, 0.66 ) }
    dend_53 { pt3dadd( -47.7981, -60.4417, 19.4184, 0.66 ) }
    dend_53 { pt3dadd( -52.8772, -67.884, 23.4103, 0.66 ) }
    dend_53 { pt3dadd( -57.1901, -75.8055, 27.3334, 0.66 ) }
    dend_53 { pt3dadd( -60.0846, -83.0727, 33.3391, 0.66 ) }
    dend_53 { pt3dadd( -61.8513, -90.7137, 39.294, 0.66 ) }
    dend_53 { pt3dadd( -64.0102, -97.5564, 46.0826, 0.66 ) }
    dend_53 { pt3dadd( -64.2842, -105.164, 52.3307, 0.66 ) }
    dend_53 { pt3dadd( -63.3233, -112.476, 58.8755, 0.66 ) }
    dend_53 { pt3dadd( -60.6699, -120.008, 64.6448, 0.66 ) }
    dend_53 { pt3dadd( -57.4889, -127.822, 69.7103, 0.66 ) }
    dend_53 { pt3dadd( -54.6125, -135.594, 75.0181, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -14.8054, -11.5841, -8.54566, 1.03 ) }
    dend_52 { pt3dadd( -13.9767, -12.5625, -9.40152, 1.03 ) }
    dend_52 { pt3dadd( -12.4893, -14.0249, -10.5648, 0.81 ) }
    dend_52 { pt3dadd( -11.4507, -15.0802, -11.327, 1.03 ) }
    dend_52 { pt3dadd( -10.3186, -16.3527, -12.1406, 0.88 ) }
    dend_52 { pt3dadd( -9.49652, -17.382, -12.7494, 1.11 ) }
    dend_52 { pt3dadd( -8.85792, -18.3108, -13.2659, 0.74 ) }
    dend_52 { pt3dadd( -8.23669, -19.4028, -13.7638, 0.52 ) }
    dend_52 { pt3dadd( -7.69002, -20.9689, -14.3636, 0.88 ) }
    dend_52 { pt3dadd( -7.57983, -22.1171, -14.8238, 1.47 ) }
    dend_52 { pt3dadd( -7.64419, -22.9128, -15.1133, 1.25 ) }
    dend_52 { pt3dadd( -7.84747, -24.2038, -15.5284, 1.25 ) }
    dend_52 { pt3dadd( -8.05069, -25.2534, -15.8271, 0.81 ) }
    dend_52 { pt3dadd( -8.38404, -26.9705, -16.2042, 0.66 ) }
    dend_52 { pt3dadd( -8.58785, -28.5807, -16.4274, 0.66 ) }
    dend_52 { pt3dadd( -8.69471, -30.5253, -16.5838, 0.96 ) }
    dend_52 { pt3dadd( -8.68, -31.535, -16.5999, 1.11 ) }
    dend_52 { pt3dadd( -8.60969, -32.485, -16.568, 1.11 ) }
    dend_52 { pt3dadd( -8.46598, -33.8181, -16.474, 0.74 ) }
    dend_52 { pt3dadd( -8.29579, -35.2097, -16.3363, 0.52 ) }
    dend_52 { pt3dadd( -8.19877, -36.2896, -16.2364, 0.74 ) }
    dend_52 { pt3dadd( -8.20081, -37.0722, -16.2118, 1.11 ) }
    dend_52 { pt3dadd( -8.37393, -38.2145, -16.2296, 0.96 ) }
    dend_52 { pt3dadd( -8.80054, -39.3699, -16.2863, 0.74 ) }
    dend_52 { pt3dadd( -9.19907, -40.0658, -16.3258, 0.74 ) }
    dend_52 { pt3dadd( -9.597, -40.6695, -16.3307, 0.74 ) }
    dend_52 { pt3dadd( -10.1426, -41.5235, -16.3006, 0.59 ) }
    dend_52 { pt3dadd( -10.777, -42.6114, -16.2306, 0.52 ) }
    dend_52 { pt3dadd( -11.3461, -43.804, -16.1188, 0.52 ) }
    dend_52 { pt3dadd( -11.7881, -45.0364, -15.9996, 0.74 ) }
    dend_52 { pt3dadd( -12.1689, -46.7276, -15.8564, 0.88 ) }
    dend_52 { pt3dadd( -12.2687, -47.7475, -15.7853, 1.18 ) }
    dend_52 { pt3dadd( -12.2516, -48.5271, -15.7646, 1.4 ) }
    dend_52 { pt3dadd( -12.1515, -49.5579, -15.7781, 1.62 ) }
    dend_52 { pt3dadd( -12.0762, -50.199, -15.8135, 1.77 ) }
    dend_52 { pt3dadd( -12.0008, -51.0707, -15.9067, 1.4 ) }
    dend_52 { pt3dadd( -11.9764, -52.1335, -16.0543, 0.66 ) }
    dend_52 { pt3dadd( -12.0554, -53.324, -16.2373, 0.44 ) }
    dend_52 { pt3dadd( -12.2368, -54.2906, -16.3907, 0.81 ) }
    dend_52 { pt3dadd( -12.4423, -54.951, -16.529, 1.25 ) }
    dend_52 { pt3dadd( -12.5781, -55.3263, -16.645, 1.4 ) }
    dend_52 { pt3dadd( -12.7197, -55.6711, -16.7969, 1.4 ) }
    dend_52 { pt3dadd( -13.0483, -56.4028, -17.1664, 0.88 ) }
    dend_52 { pt3dadd( -13.5827, -57.5651, -17.7975, 0.59 ) }
    dend_52 { pt3dadd( -14.0923, -58.715, -18.4592, 0.59 ) }
    dend_52 { pt3dadd( -14.7212, -60.1625, -19.2978, 0.88 ) }
    dend_52 { pt3dadd( -15.2866, -61.518, -20.0853, 0.52 ) }
    dend_52 { pt3dadd( -15.6797, -62.5376, -20.6982, 0.52 ) }
    dend_52 { pt3dadd( -15.8499, -63.0844, -21.0443, 1.11 ) }
    dend_52 { pt3dadd( -15.9862, -63.722, -21.4563, 1.55 ) }
    dend_52 { pt3dadd( -16.0415, -64.3456, -21.8149, 1.77 ) }
    dend_52 { pt3dadd( -16.0133, -65.0022, -22.1468, 1.4 ) }
    dend_52 { pt3dadd( -15.7738, -66.3032, -22.7534, 0.66 ) }
    dend_52 { pt3dadd( -15.4366, -67.5118, -23.3026, 0.44 ) }
    dend_52 { pt3dadd( -15.0865, -68.5401, -23.7328, 0.44 ) }
    dend_52 { pt3dadd( -14.6311, -69.7155, -24.1754, 0.44 ) }
    dend_52 { pt3dadd( -14.4254, -70.2343, -24.3411, 0.88 ) }
    dend_52 { pt3dadd( -14.2511, -70.6918, -24.4385, 1.25 ) }
    dend_52 { pt3dadd( -14.0673, -71.2353, -24.4995, 1.55 ) }
    dend_52 { pt3dadd( -13.9739, -71.6411, -24.5227, 1.55 ) }
    dend_52 { pt3dadd( -13.8694, -72.5032, -24.5583, 1.25 ) }
    dend_52 { pt3dadd( -13.8845, -73.9725, -24.58, 0.59 ) }
    dend_52 { pt3dadd( -14.059, -75.2062, -24.6152, 0.59 ) }
    dend_52 { pt3dadd( -14.2221, -75.8372, -24.6058, 0.96 ) }
    dend_52 { pt3dadd( -14.5375, -76.703, -24.5573, 0.96 ) }
    dend_52 { pt3dadd( -14.9237, -77.5331, -24.4736, 0.81 ) }
    dend_52 { pt3dadd( -15.7402, -78.9763, -24.2543, 0.37 ) }
    dend_52 { pt3dadd( -16.5979, -80.2393, -24.0079, 0.37 ) }
    dend_52 { pt3dadd( -17.4709, -81.4195, -23.7455, 1.18 ) }
    dend_52 { pt3dadd( -17.7897, -81.8398, -23.622, 1.62 ) }
    dend_52 { pt3dadd( -18.1355, -82.2696, -23.4597, 1.62 ) }
    dend_52 { pt3dadd( -18.7099, -82.9602, -23.1196, 1.33 ) }
    dend_52 { pt3dadd( -19.618, -84.0154, -22.4684, 0.44 ) }
    dend_52 { pt3dadd( -20.4311, -84.9272, -21.8175, 0.44 ) }
    dend_52 { pt3dadd( -21.0728, -85.6381, -21.3188, 0.66 ) }
    dend_52 { pt3dadd( -21.832, -86.4902, -20.7269, 0.66 ) }
    dend_52 { pt3dadd( -22.5754, -87.3522, -20.1545, 0.44 ) }
    dend_52 { pt3dadd( -23.0299, -87.9076, -19.8138, 0.81 ) }
    dend_52 { pt3dadd( -23.3765, -88.3542, -19.5798, 1.25 ) }
    dend_52 { pt3dadd( -23.7901, -88.8995, -19.3391, 1.55 ) }
    dend_52 { pt3dadd( -24.2303, -89.499, -19.1289, 1.25 ) }
    dend_52 { pt3dadd( -24.7397, -90.2283, -18.916, 0.52 ) }
    dend_52 { pt3dadd( -25.2476, -90.9591, -18.7426, 0.37 ) }
    dend_52 { pt3dadd( -25.752, -91.7431, -18.5014, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( -26.3994, -92.8103, -18.0537, 0.81 ) }
    dend_52 { pt3dadd( -26.7184, -93.3727, -17.7378, 1.25 ) }
    dend_52 { pt3dadd( -27.0104, -93.9731, -17.2961, 0.81 ) }
    dend_52 { pt3dadd( -27.3597, -94.8294, -16.5723, 0.37 ) }
    dend_52 { pt3dadd( -27.8047, -96.1675, -15.3606, 0.37 ) }
    dend_52 { pt3dadd( -27.9729, -96.7475, -14.8248, 0.74 ) }
    dend_52 { pt3dadd( -28.1935, -97.5318, -14.1251, 0.81 ) }
    dend_52 { pt3dadd( -28.5093, -98.5704, -13.232, 0.29 ) }
    dend_52 { pt3dadd( -28.7035, -99.2027, -12.7357, 0.88 ) }
    dend_52 { pt3dadd( -28.8008, -99.5501, -12.5234, 1.18 ) }
    dend_52 { pt3dadd( -28.9803, -100.238, -12.2955, 1.18 ) }
    dend_52 { pt3dadd( -29.1681, -100.976, -12.1775, 0.81 ) }
    dend_52 { pt3dadd( -29.4651, -102.122, -12.1399, 0.29 ) }
    dend_52 { pt3dadd( -29.7225, -103.082, -12.1773, 0.29 ) }
    dend_52 { pt3dadd( -29.912, -103.887, -12.2102, 0.29 ) }
    dend_52 { pt3dadd( -30.0165, -104.437, -12.2528, 0.66 ) }
    dend_52 { pt3dadd( -30.1147, -105.125, -12.3223, 0.96 ) }
    dend_52 { pt3dadd( -30.2104, -105.886, -12.4392, 0.96 ) }
    dend_52 { pt3dadd( -30.3228, -106.725, -12.6023, 0.52 ) }
    dend_52 { pt3dadd( -30.5267, -107.92, -12.8617, 0.37 ) }
    dend_52 { pt3dadd( -30.6761, -108.728, -13.0828, 0.74 ) }
    dend_52 { pt3dadd( -30.8481, -109.598, -13.3606, 0.44 ) }
    dend_52 { pt3dadd( -31.0428, -110.452, -13.6652, 1.11 ) }
    dend_52 { pt3dadd( -31.1909, -110.97, -13.8637, 1.11 ) }
    dend_52 { pt3dadd( -31.4296, -111.567, -14.0925, 0.81 ) }
    dend_52 { pt3dadd( -32.0618, -112.897, -14.5515, 0.37 ) }
    dend_52 { pt3dadd( -32.4693, -113.643, -14.7312, 0.66 ) }
    dend_52 { pt3dadd( -32.6803, -113.989, -14.7901, 0.96 ) }
    dend_52 { pt3dadd( -33.0259, -114.553, -14.7892, 0.96 ) }
    dend_52 { pt3dadd( -33.593, -115.583, -14.4159, 0.29 ) }
    dend_52 { pt3dadd( -33.8224, -116.215, -13.6314, 0.29 ) }
    dend_52 { pt3dadd( -33.908, -116.689, -12.8078, 0.96 ) }
    dend_52 { pt3dadd( -33.9094, -116.917, -12.3401, 1.25 ) }
    dend_52 { pt3dadd( -33.8732, -117.589, -10.8653, 0.44 ) }
    dend_52 { pt3dadd( -33.7156, -118.81, -7.94417, 0.81 ) }
    dend_52 { pt3dadd( -33.3343, -120.571, -3.27395, 0.22 ) }
    dend_52 { pt3dadd( -33.1894, -121.097, -1.72897, 1.18 ) }
    dend_52 { pt3dadd( -32.9943, -121.608, -0.126345, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -61.1918, -124.593, 10.0015, 0.29 ) }
    dend_40 { pt3dadd( -59.6161, -125.176, 10.2106, 0.29 ) }
    dend_40 { pt3dadd( -58.4256, -125.617, 10.3686, 0.29 ) }
    dend_40 { pt3dadd( -56.9856, -126.15, 10.5597, 0.29 ) }
    dend_40 { pt3dadd( -55.8616, -126.566, 10.7089, 0.15 ) }
    dend_40 { pt3dadd( -54.9814, -126.892, 10.8257, 0.29 ) }
    dend_40 { pt3dadd( -54.4959, -127.072, 10.8901, 0.29 ) }
    dend_40 { pt3dadd( -45.5246, -131.375, 11.0729, 0.29 ) }
    dend_40 { pt3dadd( -37.4376, -137.007, 12.1819, 0.29 ) }
    dend_40 { pt3dadd( -29.3198, -142.701, 12.1921, 0.29 ) }
    dend_40 { pt3dadd( -21.8003, -148.89, 13.9723, 0.29 ) }
    dend_40 { pt3dadd( -14.7626, -155.792, 14.5675, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -61.1918, -124.593, 10.0015, 0.29 ) }
    dend_33 { pt3dadd( -61.9851, -125.312, 10.0606, 0.29 ) }
    dend_33 { pt3dadd( -62.7941, -126.026, 10.1176, 0.29 ) }
    dend_33 { pt3dadd( -63.6128, -126.749, 10.1752, 0.29 ) }
    dend_33 { pt3dadd( -64.5937, -127.615, 10.2443, 0.29 ) }
    dend_33 { pt3dadd( -65.1457, -128.103, 10.2832, 0.29 ) }
    dend_33 { pt3dadd( -65.7247, -128.614, 10.3239, 0.81 ) }
    dend_33 { pt3dadd( -66.1133, -128.908, 10.337, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.3278, 22.007, 12.9885, 0.66 ) }
    dend_29 { pt3dadd( -12.638, 23.148, 13.3476, 0.66 ) }
    dend_29 { pt3dadd( -13.8274, 23.7074, 13.4963, 0.66 ) }
    dend_29 { pt3dadd( -14.9462, 24.209, 13.5625, 0.59 ) }
    dend_29 { pt3dadd( -15.8465, 24.6141, 13.6208, 1.11 ) }
    dend_29 { pt3dadd( -16.4608, 24.8953, 13.7247, 1.4 ) }
    dend_29 { pt3dadd( -16.8887, 25.1074, 13.8326, 1.4 ) }
    dend_29 { pt3dadd( -17.6684, 25.5333, 14.0768, 0.66 ) }
    dend_29 { pt3dadd( -18.2733, 26.025, 14.5497, 0.44 ) }
    dend_29 { pt3dadd( -18.7151, 26.5455, 15.1507, 0.44 ) }
    dend_29 { pt3dadd( -19.4954, 27.7738, 16.5737, 0.74 ) }
    dend_29 { pt3dadd( -19.9451, 28.5656, 17.4313, 0.52 ) }
    dend_29 { pt3dadd( -20.2361, 29.0413, 17.8912, 0.44 ) }
    dend_29 { pt3dadd( -20.6023, 29.602, 18.3726, 0.74 ) }
    dend_29 { pt3dadd( -21.073, 30.1903, 18.8322, 0.74 ) }
    dend_29 { pt3dadd( -21.4899, 30.5852, 19.0651, 0.74 ) }
    dend_29 { pt3dadd( -22.0477, 30.9871, 19.2964, 0.29 ) }
    dend_29 { pt3dadd( -23.1162, 31.5486, 19.9391, 0.29 ) }
    dend_29 { pt3dadd( -23.3123, 31.6402, 20.0929, 0.81 ) }
    dend_29 { pt3dadd( -23.918, 31.9222, 20.645, 0.81 ) }
    dend_29 { pt3dadd( -24.4997, 32.2338, 21.2221, 0.74 ) }
    dend_29 { pt3dadd( -25.3598, 32.753, 22.1091, 0.81 ) }
    dend_29 { pt3dadd( -27.0507, 33.9106, 23.8968, 1.69 ) }
    dend_29 { pt3dadd( -28.1266, 34.7374, 25.0073, 0.52 ) }
    dend_29 { pt3dadd( -28.5288, 35.0781, 25.4193, 0.59 ) }
    dend_29 { pt3dadd( -29.3131, 35.7823, 26.1694, 0.59 ) }
    dend_29 { pt3dadd( -29.852, 36.2679, 26.6477, 0.66 ) }
    dend_29 { pt3dadd( -30.272, 36.6521, 26.9554, 1.03 ) }
    dend_29 { pt3dadd( -30.6724, 36.9984, 27.1768, 1.03 ) }
    dend_29 { pt3dadd( -31.8197, 37.828, 27.7982, 0.81 ) }
    dend_29 { pt3dadd( -32.4512, 38.2453, 28.1534, 0.59 ) }
    dend_29 { pt3dadd( -33.3693, 38.8285, 28.667, 0.52 ) }
    dend_29 { pt3dadd( -33.9568, 39.2468, 28.9888, 0.52 ) }
    dend_29 { pt3dadd( -34.653, 39.8336, 29.3499, 0.59 ) }
    dend_29 { pt3dadd( -35.1645, 40.3051, 29.6027, 0.88 ) }
    dend_29 { pt3dadd( -35.6041, 40.8057, 29.7675, 1.03 ) }
    dend_29 { pt3dadd( -36.0946, 41.5117, 29.9458, 0.59 ) }
    dend_29 { pt3dadd( -36.4479, 42.1532, 30.0409, 0.52 ) }
    dend_29 { pt3dadd( -36.7154, 42.7299, 30.1114, 0.81 ) }
    dend_29 { pt3dadd( -42.7209, 49.3572, 34.3222, 0.81 ) }
    dend_29 { pt3dadd( -49.1253, 55.1236, 39.2218, 0.81 ) }
    dend_29 { pt3dadd( -54.9921, 60.8537, 44.7933, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -59.4353, 66.824, 51.3327, 0.81 ) }
    dend_29 { pt3dadd( -64.109, 73.3716, 57.0823, 0.81 ) }
    dend_29 { pt3dadd( -68.28, 79.3692, 63.7728, 0.81 ) }
    dend_29 { pt3dadd( -71.134, 85.5872, 70.9271, 0.81 ) }
    dend_29 { pt3dadd( -72.2099, 90.9711, 79.1944, 0.81 ) }
    dend_29 { pt3dadd( -72.6664, 96.5298, 87.3973, 0.81 ) }
    dend_29 { pt3dadd( -74.0394, 102.362, 95.2927, 0.81 ) }
    dend_29 { pt3dadd( -76.2525, 108.101, 103.068, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -10.3278, 22.007, 12.9885, 1.11 ) }
    dend_14 { pt3dadd( -10.0591, 23.0488, 12.5259, 1.11 ) }
    dend_14 { pt3dadd( -9.9207, 24.2099, 12.017, 0.81 ) }
    dend_14 { pt3dadd( -9.96508, 25.4376, 11.4281, 0.74 ) }
    dend_14 { pt3dadd( -10.063, 26.0655, 11.1186, 1.11 ) }
    dend_14 { pt3dadd( -10.1968, 26.6374, 10.852, 1.18 ) }
    dend_14 { pt3dadd( -10.4375, 27.5035, 10.4827, 1.47 ) }
    dend_14 { pt3dadd( -10.6802, 28.1322, 10.2238, 1.47 ) }
    dend_14 { pt3dadd( -11.1467, 29.2237, 9.81497, 1.18 ) }
    dend_14 { pt3dadd( -11.5807, 30.3124, 9.47929, 0.96 ) }
    dend_14 { pt3dadd( -11.8904, 31.2586, 9.23021, 1.03 ) }
    dend_14 { pt3dadd( -12.122, 32.2422, 8.99966, 1.4 ) }
    dend_14 { pt3dadd( -12.2701, 33.3466, 8.77827, 1.4 ) }
    dend_14 { pt3dadd( -12.2824, 34.6241, 8.55149, 1.03 ) }
    dend_14 { pt3dadd( -12.1527, 35.6787, 8.38344, 1.03 ) }
    dend_14 { pt3dadd( -11.9498, 36.5844, 8.23799, 1.25 ) }
    dend_14 { pt3dadd( -11.5526, 37.877, 7.9689, 1.11 ) }
    dend_14 { pt3dadd( -11.2128, 38.829, 7.73698, 1.11 ) }
    dend_14 { pt3dadd( -10.7625, 40.0667, 7.34656, 1.11 ) }
    dend_14 { pt3dadd( -10.2753, 41.4679, 6.7852, 1.11 ) }
    dend_14 { pt3dadd( -9.99318, 42.4251, 6.31776, 1.11 ) }
    dend_14 { pt3dadd( -9.71582, 43.7503, 5.55098, 1.33 ) }
    dend_14 { pt3dadd( -9.69166, 44.5455, 5.00399, 1.03 ) }
    dend_14 { pt3dadd( -9.95958, 45.8674, 3.93946, 1.18 ) }
    dend_14 { pt3dadd( -10.1919, 46.3557, 3.50655, 1.47 ) }
    dend_14 { pt3dadd( -10.5589, 46.8447, 3.07409, 1.47 ) }
    dend_14 { pt3dadd( -10.974, 47.2663, 2.74526, 1.69 ) }
    dend_14 { pt3dadd( -12.2635, 48.3621, 2.13575, 0.88 ) }
    dend_14 { pt3dadd( -13.0833, 49.0252, 1.90898, 1.11 ) }
    dend_14 { pt3dadd( -13.8388, 49.6956, 1.87377, 1.11 ) }
    dend_14 { pt3dadd( -14.6156, 50.5055, 1.95952, 0.96 ) }
    dend_14 { pt3dadd( -15.2746, 51.384, 2.14563, 0.88 ) }
    dend_14 { pt3dadd( -15.8408, 52.4362, 2.42499, 1.18 ) }
    dend_14 { pt3dadd( -16.2242, 53.4782, 2.748, 1.47 ) }
    dend_14 { pt3dadd( -16.6114, 55.0574, 3.24386, 1.4 ) }
    dend_14 { pt3dadd( -16.775, 56.1465, 3.56462, 0.88 ) }
    dend_14 { pt3dadd( -16.8994, 57.6158, 3.94453, 0.81 ) }
    dend_14 { pt3dadd( -16.9361, 59.027, 4.28067, 1.69 ) }
    dend_14 { pt3dadd( -16.9178, 59.636, 4.42391, 1.99 ) }
    dend_14 { pt3dadd( -16.8786, 60.2906, 4.56889, 1.99 ) }
    dend_14 { pt3dadd( -16.8573, 60.8143, 4.65588, 2.21 ) }
    dend_14 { pt3dadd( -16.8488, 61.7903, 4.85796, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.3436, 9.0727, -6.99025, 1.4 ) }
    dend_4 { pt3dadd( -25.427, 10.6131, -7.91258, 1.4 ) }
    dend_4 { pt3dadd( -25.3255, 11.1949, -8.91629, 1.4 ) }
    dend_4 { pt3dadd( -25.2497, 11.5733, -9.61169, 1.33 ) }
    dend_4 { pt3dadd( -25.1471, 12.3763, -10.9916, 1.62 ) }
    dend_4 { pt3dadd( -25.1037, 13.0925, -12.0758, 1.25 ) }
    dend_4 { pt3dadd( -25.107, 14.6941, -14.2143, 1.03 ) }
    dend_4 { pt3dadd( -25.2618, 16.72, -16.9845, 1.4 ) }
    dend_4 { pt3dadd( -25.3507, 17.3188, -17.7193, 1.4 ) }
    dend_4 { pt3dadd( -25.5209, 18.0243, -18.4536, 1.11 ) }
    dend_4 { pt3dadd( -25.82, 18.9335, -19.1564, 1.33 ) }
    dend_4 { pt3dadd( -26.1714, 19.7106, -19.6236, 1.69 ) }
    dend_4 { pt3dadd( -26.6756, 20.532, -19.999, 1.69 ) }
    dend_4 { pt3dadd( -27.1117, 21.1175, -20.2563, 1.69 ) }
    dend_4 { pt3dadd( -28.0225, 22.3043, -21.0029, 0.74 ) }
    dend_4 { pt3dadd( -28.3724, 22.7987, -21.3908, 0.74 ) }
    dend_4 { pt3dadd( -28.7938, 23.4753, -22.0421, 0.59 ) }
    dend_4 { pt3dadd( -29.3541, 24.5951, -23.2041, 1.18 ) }
    dend_4 { pt3dadd( -29.7043, 25.559, -24.3102, 1.18 ) }
    dend_4 { pt3dadd( -29.9393, 26.4687, -25.3699, 1.18 ) }
    dend_4 { pt3dadd( -30.0352, 27.144, -26.1546, 1.18 ) }
    dend_4 { pt3dadd( -30.0676, 28.2068, -27.4426, 0.81 ) }
    dend_4 { pt3dadd( -30.0643, 28.8369, -28.1825, 0.66 ) }
    dend_4 { pt3dadd( -30.0823, 30.5038, -30.0421, 0.66 ) }
    dend_4 { pt3dadd( -30.1179, 30.8469, -30.4095, 1.25 ) }
    dend_4 { pt3dadd( -30.3933, 31.9657, -31.5401, 1.47 ) }
    dend_4 { pt3dadd( -30.9521, 33.1966, -32.6682, 0.59 ) }
    dend_4 { pt3dadd( -31.6826, 34.3583, -33.502, 1.03 ) }
    dend_4 { pt3dadd( -32.1397, 34.9726, -33.8365, 1.4 ) }
    dend_4 { pt3dadd( -32.5778, 35.5145, -34.0316, 1.47 ) }
    dend_4 { pt3dadd( -33.3739, 36.5329, -34.3201, 1.11 ) }
    dend_4 { pt3dadd( -34.2434, 37.7654, -34.5251, 0.81 ) }
    dend_4 { pt3dadd( -34.8379, 38.9009, -34.7047, 0.96 ) }
    dend_4 { pt3dadd( -35.0213, 39.7437, -34.8948, 1.25 ) }
    dend_4 { pt3dadd( -35.05, 40.4311, -35.0729, 1.55 ) }
    dend_4 { pt3dadd( -35.0147, 41.331, -35.3196, 1.55 ) }
    dend_4 { pt3dadd( -34.9304, 42.3242, -35.5989, 0.96 ) }
    dend_4 { pt3dadd( -34.8145, 43.7939, -36.0172, 0.66 ) }
    dend_4 { pt3dadd( -34.8507, 44.8179, -36.3065, 0.66 ) }
    dend_4 { pt3dadd( -35.0384, 45.4827, -36.4666, 0.74 ) }
    dend_4 { pt3dadd( -35.6294, 46.4129, -36.6848, 1.03 ) }
    dend_4 { pt3dadd( -36.1676, 46.9492, -36.8299, 1.47 ) }
    dend_4 { pt3dadd( -36.5762, 47.2771, -36.9426, 1.77 ) }
    dend_4 { pt3dadd( -37.0921, 47.6481, -37.0996, 1.62 ) }
    dend_4 { pt3dadd( -38.2877, 48.5256, -37.5595, 0.88 ) }
    dend_4 { pt3dadd( -39.1397, 49.2257, -37.9559, 0.66 ) }
    dend_4 { pt3dadd( -40.0291, 50.0949, -38.4534, 0.59 ) }
    dend_4 { pt3dadd( -40.7831, 51.0127, -38.9497, 0.81 ) }
    dend_4 { pt3dadd( -41.1893, 51.671, -39.2616, 0.59 ) }
    dend_4 { pt3dadd( -41.606, 52.6249, -39.6423, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -41.7752, 53.2206, -39.8259, 1.03 ) }
    dend_4 { pt3dadd( -41.9106, 53.8374, -39.9565, 1.03 ) }
    dend_4 { pt3dadd( -42.0504, 54.5649, -40.0272, 0.74 ) }
    dend_4 { pt3dadd( -42.2418, 55.4755, -40.0192, 0.52 ) }
    dend_4 { pt3dadd( -42.4009, 56.1133, -39.9734, 0.52 ) }
    dend_4 { pt3dadd( -42.6823, 56.9986, -39.8874, 1.11 ) }
    dend_4 { pt3dadd( -42.9589, 57.6958, -39.8191, 1.4 ) }
    dend_4 { pt3dadd( -43.4206, 58.7222, -39.7296, 1.4 ) }
    dend_4 { pt3dadd( -43.6915, 59.3373, -39.6857, 1.03 ) }
    dend_4 { pt3dadd( -43.8834, 59.8549, -39.6723, 0.74 ) }
    dend_4 { pt3dadd( -44.1192, 60.7553, -39.715, 0.59 ) }
    dend_4 { pt3dadd( -44.191, 61.3559, -39.8073, 0.52 ) }
    dend_4 { pt3dadd( -44.1934, 62.1212, -40.0028, 0.52 ) }
    dend_4 { pt3dadd( -44.126, 63.2131, -40.3953, 0.52 ) }
    dend_4 { pt3dadd( -44.0544, 64.047, -40.7268, 0.52 ) }
    dend_4 { pt3dadd( -43.9927, 64.7353, -41.0668, 0.52 ) }
    dend_4 { pt3dadd( -43.9642, 65.3884, -41.4861, 0.52 ) }
    dend_4 { pt3dadd( -44.0264, 65.784, -41.7869, 0.52 ) }
    dend_4 { pt3dadd( -44.2294, 66.1716, -42.1388, 0.81 ) }
    dend_4 { pt3dadd( -44.5951, 66.5332, -42.5076, 0.96 ) }
    dend_4 { pt3dadd( -45.3676, 67.0354, -43.0587, 0.96 ) }
    dend_4 { pt3dadd( -46.1204, 67.4304, -43.485, 0.52 ) }
    dend_4 { pt3dadd( -46.9759, 67.8485, -43.9217, 0.81 ) }
    dend_4 { pt3dadd( -47.4027, 68.0697, -44.143, 1.18 ) }
    dend_4 { pt3dadd( -47.8601, 68.3441, -44.3872, 1.18 ) }
    dend_4 { pt3dadd( -48.6171, 68.9369, -44.7972, 0.44 ) }
    dend_4 { pt3dadd( -49.0614, 69.4389, -45.058, 0.44 ) }
    dend_4 { pt3dadd( -49.3739, 70.0403, -45.3258, 0.74 ) }
    dend_4 { pt3dadd( -49.5009, 70.6269, -45.6004, 0.74 ) }
    dend_4 { pt3dadd( -49.5291, 71.1599, -45.8373, 0.44 ) }
    dend_4 { pt3dadd( -49.4976, 72.041, -46.192, 0.66 ) }
    dend_4 { pt3dadd( -49.4156, 72.9613, -46.5258, 0.96 ) }
    dend_4 { pt3dadd( -49.3495, 73.6717, -46.772, 0.74 ) }
    dend_4 { pt3dadd( -49.2884, 74.7788, -47.1221, 0.37 ) }
    dend_4 { pt3dadd( -49.287, 75.6742, -47.3652, 0.37 ) }
    dend_4 { pt3dadd( -49.3558, 76.534, -47.5662, 0.88 ) }
    dend_4 { pt3dadd( -49.4358, 76.9024, -47.6211, 1.18 ) }
    dend_4 { pt3dadd( -49.6648, 77.3647, -47.6379, 1.18 ) }
    dend_4 { pt3dadd( -50.0276, 77.7995, -47.6454, 1.18 ) }
    dend_4 { pt3dadd( -50.3957, 78.1672, -47.6435, 1.11 ) }
    dend_4 { pt3dadd( -50.8364, 78.5956, -47.6503, 0.44 ) }
    dend_4 { pt3dadd( -51.5259, 79.3022, -47.6719, 0.44 ) }
    dend_4 { pt3dadd( -52.6387, 80.5522, -47.722, 0.44 ) }
    dend_4 { pt3dadd( -53.3807, 81.4678, -47.7882, 0.44 ) }
    dend_4 { pt3dadd( -54.1023, 82.4585, -47.8829, 0.44 ) }
    dend_4 { pt3dadd( -54.5451, 83.1805, -47.9957, 0.44 ) }
    dend_4 { pt3dadd( -54.8976, 83.9093, -48.1418, 1.47 ) }
    dend_4 { pt3dadd( -55.1109, 84.5256, -48.3031, 1.47 ) }
    dend_4 { pt3dadd( -55.312, 85.3495, -48.5639, 1.18 ) }
    dend_4 { pt3dadd( -55.5018, 86.157, -48.9216, 0.66 ) }
    dend_4 { pt3dadd( -55.6966, 87.181, -49.6668, 0.44 ) }
    dend_4 { pt3dadd( -55.7517, 87.7684, -50.1902, 0.59 ) }
    dend_4 { pt3dadd( -55.7505, 88.4906, -50.9713, 0.59 ) }
    dend_4 { pt3dadd( -55.7063, 89.0959, -51.7162, 0.74 ) }
    dend_4 { pt3dadd( -55.5662, 90.1582, -53.2509, 1.25 ) }
    dend_4 { pt3dadd( -55.3593, 91.561, -55.5359, 0.66 ) }
    dend_4 { pt3dadd( -55.2882, 92.1539, -56.5915, 0.66 ) }
    dend_4 { pt3dadd( -55.2033, 92.9878, -58.1596, 1.25 ) }
    dend_4 { pt3dadd( -55.1743, 93.4185, -58.9542, 1.62 ) }
    dend_4 { pt3dadd( -55.1316, 94.9009, -61.4662, 1.4 ) }
    dend_4 { pt3dadd( -55.1206, 95.5443, -62.4615, 1.11 ) }
    dend_4 { pt3dadd( -55.1371, 96.3971, -63.6958, 1.25 ) }
    dend_4 { pt3dadd( -55.1333, 97.1766, -64.7668, 0.96 ) }
    dend_4 { pt3dadd( -55.0893, 97.8343, -65.53, 1.18 ) }
    dend_4 { pt3dadd( -55.0099, 98.603, -66.2933, 1.4 ) }
    dend_4 { pt3dadd( -54.9127, 99.5615, -67.0886, 0.37 ) }
    dend_4 { pt3dadd( -54.8529, 100.361, -67.7961, 0.37 ) }
    dend_4 { pt3dadd( -54.8081, 101.073, -68.4679, 0.88 ) }
    dend_4 { pt3dadd( -54.7962, 101.64, -69.0546, 0.88 ) }
    dend_4 { pt3dadd( -54.7937, 102.19, -69.6901, 0.88 ) }
    dend_4 { pt3dadd( -54.8325, 103.163, -70.9306, 0.37 ) }
    dend_4 { pt3dadd( -54.9821, 104.299, -72.3757, 1.03 ) }
    dend_4 { pt3dadd( -55.0964, 104.834, -73.1223, 1.03 ) }
    dend_4 { pt3dadd( -55.1941, 105.143, -73.6286, 1.03 ) }
    dend_4 { pt3dadd( -55.5289, 105.879, -74.9943, 0.29 ) }
    dend_4 { pt3dadd( -55.8548, 106.545, -76.3208, 0.29 ) }
    dend_4 { pt3dadd( -56.1502, 107.108, -77.517, 0.29 ) }
    dend_4 { pt3dadd( -56.5613, 107.815, -79.0807, 1.25 ) }
    dend_4 { pt3dadd( -57.1125, 108.618, -80.9271, 1.25 ) }
    dend_4 { pt3dadd( -57.5726, 109.224, -82.3806, 0.96 ) }
    dend_4 { pt3dadd( -58.1801, 110.008, -84.1908, 0.37 ) }
    dend_4 { pt3dadd( -58.3547, 110.287, -84.7601, 0.66 ) }
    dend_4 { pt3dadd( -58.5609, 110.68, -85.5357, 1.03 ) }
    dend_4 { pt3dadd( -58.7458, 111.203, -86.3996, 1.03 ) }
    dend_4 { pt3dadd( -59.0009, 112.396, -88.1006, 0.52 ) }
    dend_4 { pt3dadd( -59.0875, 112.974, -88.8407, 1.03 ) }
    dend_4 { pt3dadd( -59.3172, 113.682, -89.6859, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -25.3436, 9.0727, -6.99025, 0.74 ) }
    dend_1 { pt3dadd( -26.3084, 8.41618, -6.99025, 0.74 ) }
    dend_1 { pt3dadd( -27.2321, 7.69719, -7.0038, 0.74 ) }
    dend_1 { pt3dadd( -28.1726, 6.96522, -7.0176, 1.03 ) }
    dend_1 { pt3dadd( -28.7864, 6.48745, -7.02661, 1.4 ) }
    dend_1 { pt3dadd( -29.6904, 5.78385, -7.03987, 1.84 ) }
    dend_1 { pt3dadd( -30.2749, 5.32893, -7.04845, 2.14 ) }
    dend_1 { pt3dadd( -30.6701, 4.90271, -7.05682, 2.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.8915, 5.92002, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 55.72, 8.18146, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 70.5486, 10.4429, 2.65033, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 12.9819, -70.2918, 14.2499, 0.52 ) }
    dend_66 { pt3dadd( 11.033, -68.6929, 15.0847, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( 10.2733, -68.0696, 15.4101, 0.52 ) }
    dend_66 { pt3dadd( 9.31061, -67.2799, 15.8225, 1.25 ) }
    dend_66 { pt3dadd( 8.84692, -66.8995, 16.0211, 1.4 ) }
    dend_66 { pt3dadd( 7.98137, -66.1894, 16.3919, 0.37 ) }
    dend_66 { pt3dadd( 7.44445, -65.7488, 16.6219, 0.29 ) }
    dend_66 { pt3dadd( 0.874474, -58.7306, 18.8626, 0.29 ) }
    dend_66 { pt3dadd( -6.23138, -51.8848, 19.3179, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 7/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 12.9819, -70.2918, 14.2499, 0.66 ) }
    dend_63 { pt3dadd( 14.0712, -71.4156, 14.2798, 0.66 ) }
    dend_63 { pt3dadd( 15.0786, -72.3956, 14.3555, 0.59 ) }
    dend_63 { pt3dadd( 16.3469, -73.6571, 14.4788, 0.59 ) }
    dend_63 { pt3dadd( 16.9311, -74.273, 14.5549, 0.88 ) }
    dend_63 { pt3dadd( 17.5957, -75.0268, 14.652, 0.88 ) }
    dend_63 { pt3dadd( 18.4075, -76.0469, 14.7344, 0.52 ) }
    dend_63 { pt3dadd( 19.0277, -76.9321, 14.7671, 0.52 ) }
    dend_63 { pt3dadd( 19.3415, -77.578, 14.7843, 1.11 ) }
    dend_63 { pt3dadd( 19.4791, -78.339, 14.7508, 1.47 ) }
    dend_63 { pt3dadd( 19.4344, -78.9277, 14.6896, 1.18 ) }
    dend_63 { pt3dadd( 18.9706, -80.2398, 14.4805, 0.59 ) }
    dend_63 { pt3dadd( 18.536, -80.9518, 14.3912, 0.59 ) }
    dend_63 { pt3dadd( 17.9337, -81.7102, 14.364, 0.37 ) }
    dend_63 { pt3dadd( 17.6021, -82.1033, 14.3983, 0.59 ) }
    dend_63 { pt3dadd( 17.2019, -82.6027, 14.497, 0.59 ) }
    dend_63 { pt3dadd( 16.5491, -83.604, 14.8199, 0.44 ) }
    dend_63 { pt3dadd( 16.0459, -84.9977, 15.4427, 0.37 ) }
    dend_63 { pt3dadd( 16.0535, -85.8491, 15.8458, 0.66 ) }
    dend_63 { pt3dadd( 16.3009, -86.7327, 16.2746, 0.96 ) }
    dend_63 { pt3dadd( 16.6526, -87.4976, 16.6603, 0.74 ) }
    dend_63 { pt3dadd( 17.2286, -88.418, 17.1159, 0.52 ) }
    dend_63 { pt3dadd( 18.0621, -89.4899, 17.618, 0.81 ) }
    dend_63 { pt3dadd( 18.7448, -90.243, 17.9335, 0.96 ) }
    dend_63 { pt3dadd( 19.2312, -90.7556, 18.1394, 1.03 ) }
    dend_63 { pt3dadd( 19.9891, -91.5723, 18.4243, 0.81 ) }
    dend_63 { pt3dadd( 20.6688, -92.3281, 18.643, 0.74 ) }
    dend_63 { pt3dadd( 21.1937, -92.8951, 18.7672, 1.11 ) }
    dend_63 { pt3dadd( 21.7318, -93.4426, 18.8245, 1.11 ) }
    dend_63 { pt3dadd( 22.4878, -94.1849, 18.8237, 0.81 ) }
    dend_63 { pt3dadd( 23.1573, -94.8381, 18.7687, 0.52 ) }
    dend_63 { pt3dadd( 23.6557, -95.3857, 18.6935, 0.74 ) }
    dend_63 { pt3dadd( 24.1303, -96.0227, 18.6283, 0.74 ) }
    dend_63 { pt3dadd( 24.6545, -96.9021, 18.5705, 0.52 ) }
    dend_63 { pt3dadd( 24.9495, -97.5476, 18.5524, 0.81 ) }
    dend_63 { pt3dadd( 25.1698, -98.0907, 18.5558, 0.81 ) }
    dend_63 { pt3dadd( 25.6351, -99.2907, 18.6605, 0.59 ) }
    dend_63 { pt3dadd( 25.9883, -100.148, 18.7939, 0.81 ) }
    dend_63 { pt3dadd( 26.2965, -100.851, 18.9994, 0.81 ) }
    dend_63 { pt3dadd( 26.7034, -101.697, 19.3543, 0.44 ) }
    dend_63 { pt3dadd( 27.1578, -102.523, 19.792, 0.81 ) }
    dend_63 { pt3dadd( 27.7392, -103.396, 20.331, 0.66 ) }
    dend_63 { pt3dadd( 28.4094, -104.206, 20.8753, 0.29 ) }
    dend_63 { pt3dadd( 29.6341, -105.534, 21.7202, 0.74 ) }
    dend_63 { pt3dadd( 30.1014, -106.021, 22.008, 1.25 ) }
    dend_63 { pt3dadd( 30.5123, -106.445, 22.2587, 1.25 ) }
    dend_63 { pt3dadd( 31.4171, -107.452, 22.7966, 0.37 ) }
    dend_63 { pt3dadd( 32.1979, -108.372, 23.1786, 0.37 ) }
    dend_63 { pt3dadd( 33.0552, -109.366, 23.5055, 0.37 ) }
    dend_63 { pt3dadd( 33.5461, -109.886, 23.5721, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.96852, -38.2121, 26.6809, 0.44 ) }
    dend_61 { pt3dadd( 8.59662, -37.9692, 27.8466, 0.44 ) }
    dend_61 { pt3dadd( 9.39066, -37.8507, 28.4151, 0.29 ) }
    dend_61 { pt3dadd( 10.4339, -37.695, 29.1621, 0.52 ) }
    dend_61 { pt3dadd( 10.9742, -37.6143, 29.549, 0.74 ) }
    dend_61 { pt3dadd( 11.2413, -37.5745, 29.7402, 0.74 ) }
    dend_61 { pt3dadd( 19.6684, -36.3263, 34.9695, 0.74 ) }
    dend_61 { pt3dadd( 28.8282, -34.4119, 38.4686, 0.74 ) }
    dend_61 { pt3dadd( 37.528, -33.8181, 43.3617, 0.74 ) }
    dend_61 { pt3dadd( 46.1563, -32.4944, 48.2309, 0.74 ) }
    dend_61 { pt3dadd( 54.6455, -31.615, 53.4386, 0.74 ) }
    dend_61 { pt3dadd( 63.7428, -32.09, 57.5619, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 6.96852, -38.2121, 26.6809, 0.44 ) }
    dend_58 { pt3dadd( 6.48999, -39.5387, 27.8611, 0.44 ) }
    dend_58 { pt3dadd( 6.2068, -40.324, 28.5595, 0.74 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -54.6125, -135.594, 75.0181, 0.29 ) }
    dend_55 { pt3dadd( -50.6989, -143.806, 78.7254, 0.29 ) }
    dend_55 { pt3dadd( -45.8168, -152.076, 80.783, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 75/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -54.6125, -135.594, 75.0181, 0.22 ) }
    dend_54 { pt3dadd( -62.9434, -138.983, 79.3213, 0.29 ) }
    dend_54 { pt3dadd( -71.872, -142.546, 81.9532, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 78/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.7626, -155.792, 14.5675, 0.37 ) }
    dend_50 { pt3dadd( -6.54977, -161.343, 14.9382, 0.37 ) }
    dend_50 { pt3dadd( 2.57336, -165.322, 15.2763, 0.37 ) }
    dend_50 { pt3dadd( 11.8325, -168.922, 16.0705, 0.37 ) }
    dend_50 { pt3dadd( 20.379, -173.91, 15.18, 0.37 ) }
    dend_50 { pt3dadd( 28.7509, -178.992, 13.5259, 0.37 ) }
    dend_50 { pt3dadd( 36.1327, -185.31, 11.6504, 0.37 ) }
    dend_50 { pt3dadd( 43.287, -192.038, 10.5521, 0.37 ) }
    dend_50 { pt3dadd( 49.7958, -199.422, 11.0836, 0.37 ) }
    dend_50 { pt3dadd( 55.7916, -207.194, 11.7979, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 88/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -14.7626, -155.792, 14.5675, 0.22 ) }
    dend_41 { pt3dadd( -6.62601, -161.188, 16.348, 0.37 ) }
    dend_41 { pt3dadd( 2.27554, -165.627, 16.5184, 0.37 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -66.1133, -128.908, 10.337, 0.22 ) }
    dend_35 { pt3dadd( -65.923, -130.238, 10.0188, 0.22 ) }
    dend_35 { pt3dadd( -65.7769, -131.259, 9.7747, 0.22 ) }
    dend_35 { pt3dadd( -65.6647, -132.044, 9.58707, 0.37 ) }
    dend_35 { pt3dadd( -65.4952, -133.229, 9.30377, 0.37 ) }
    dend_35 { pt3dadd( -62.9157, -142.599, 8.31252, 0.37 ) }
    dend_35 { pt3dadd( -59.3374, -151.587, 6.81916, 0.37 ) }
    dend_35 { pt3dadd( -56.5161, -160.8, 5.16228, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -66.1133, -128.908, 10.337, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -67.1139, -130.359, 11.0266, 0.22 ) }
    dend_34 { pt3dadd( -67.1627, -130.414, 11.056, 0.44 ) }
    dend_34 { pt3dadd( -67.7308, -130.93, 11.3145, 0.15 ) }
    dend_34 { pt3dadd( -67.9316, -131.087, 11.3822, 0.37 ) }
    dend_34 { pt3dadd( -68.5915, -131.581, 11.5674, 0.15 ) }
    dend_34 { pt3dadd( -69.4242, -132.208, 11.733, 0.22 ) }
    dend_34 { pt3dadd( -70.1423, -132.706, 11.8723, 0.22 ) }
    dend_34 { pt3dadd( -70.7449, -133.165, 12.124, 0.66 ) }
    dend_34 { pt3dadd( -71.4967, -133.715, 12.4711, 0.22 ) }
    dend_34 { pt3dadd( -71.7841, -133.928, 12.6186, 0.88 ) }
    dend_34 { pt3dadd( -72.4066, -134.419, 13.0064, 0.74 ) }
    dend_34 { pt3dadd( -73.5706, -135.6, 13.9853, 1.4 ) }
    dend_34 { pt3dadd( -74.3084, -136.705, 15.161, 1.18 ) }
    dend_34 { pt3dadd( -80.0271, -143.045, 20.1629, 1.18 ) }
    dend_34 { pt3dadd( -84.8372, -149.733, 25.6224, 1.18 ) }
    dend_34 { pt3dadd( -90.9464, -155.667, 30.6853, 1.18 ) }
    dend_34 { pt3dadd( -97.4353, -162.187, 34.3166, 1.18 ) }
    dend_34 { pt3dadd( -103.185, -168.79, 38.9059, 1.18 ) }
    dend_34 { pt3dadd( -109.504, -174.567, 43.9026, 1.18 ) }
    dend_34 { pt3dadd( -114.987, -180.707, 49.4051, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -76.2525, 108.101, 103.068, 0.37 ) }
    dend_31 { pt3dadd( -80.9185, 114.165, 109.356, 0.37 ) }
    dend_31 { pt3dadd( -86.1258, 118.453, 116.673, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 23/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -76.2525, 108.101, 103.068, 0.29 ) }
    dend_30 { pt3dadd( -80.8081, 114.114, 109.487, 0.37 ) }
    dend_30 { pt3dadd( -84.8555, 120.496, 115.873, 0.37 ) }
    dend_30 { pt3dadd( -88.8723, 125.429, 123.506, 0.37 ) }
    dend_30 { pt3dadd( -92.0556, 131.341, 130.793, 0.37 ) }
    dend_30 { pt3dadd( -95.2149, 135.517, 139.259, 0.37 ) }
    dend_30 { pt3dadd( -98.2546, 140.17, 147.504, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -16.8488, 61.7903, 4.85796, 0.96 ) }
    dend_16 { pt3dadd( -17.0156, 63.5953, 4.31756, 0.96 ) }
    dend_16 { pt3dadd( -17.2188, 64.7534, 3.91358, 0.81 ) }
    dend_16 { pt3dadd( -17.4521, 65.6673, 3.58603, 0.81 ) }
    dend_16 { pt3dadd( -17.7452, 66.6126, 3.1498, 1.18 ) }
    dend_16 { pt3dadd( -18.4305, 68.7222, 2.10342, 1.18 ) }
    dend_16 { pt3dadd( -18.6014, 69.2584, 1.83874, 1.18 ) }
    dend_16 { pt3dadd( -18.902, 70.0775, 1.38258, 0.81 ) }
    dend_16 { pt3dadd( -19.1341, 70.7435, 1.06178, 0.81 ) }
    dend_16 { pt3dadd( -19.597, 72.423, 0.5821, 0.66 ) }
    dend_16 { pt3dadd( -19.744, 73.338, 0.589143, 0.96 ) }
    dend_16 { pt3dadd( -19.7871, 74.2301, 0.841048, 1.11 ) }
    dend_16 { pt3dadd( -19.7652, 75.142, 1.24789, 0.81 ) }
    dend_16 { pt3dadd( -19.65, 76.6637, 2.07562, 0.59 ) }
    dend_16 { pt3dadd( -19.4807, 78.2582, 2.97829, 0.81 ) }
    dend_16 { pt3dadd( -19.3252, 79.5965, 3.7507, 1.11 ) }
    dend_16 { pt3dadd( -19.2128, 80.5835, 4.21889, 1.25 ) }
    dend_16 { pt3dadd( -19.0707, 82.1105, 4.76589, 0.59 ) }
    dend_16 { pt3dadd( -19.0348, 82.8803, 4.89013, 0.59 ) }
    dend_16 { pt3dadd( -19.1304, 84.3631, 4.63714, 0.59 ) }
    dend_16 { pt3dadd( -19.3301, 85.2122, 4.18039, 0.44 ) }
    dend_16 { pt3dadd( -19.8438, 86.6622, 3.04315, 1.11 ) }
    dend_16 { pt3dadd( -20.0233, 87.0816, 2.65055, 1.4 ) }
    dend_16 { pt3dadd( -20.5041, 88.1388, 1.55525, 0.88 ) }
    dend_16 { pt3dadd( -20.8854, 88.9651, 0.716894, 0.52 ) }
    dend_16 { pt3dadd( -21.1659, 89.6225, 0.123125, 0.52 ) }
    dend_16 { pt3dadd( -21.3714, 90.4878, -0.511226, 0.74 ) }
    dend_16 { pt3dadd( -21.3139, 91.164, -0.822754, 1.11 ) }
    dend_16 { pt3dadd( -21.0151, 91.9809, -1.04945, 1.33 ) }
    dend_16 { pt3dadd( -20.7397, 92.4511, -1.11617, 1.62 ) }
    dend_16 { pt3dadd( -20.2597, 93.0645, -1.17231, 1.47 ) }
    dend_16 { pt3dadd( -19.3077, 94.0654, -1.22794, 0.96 ) }
    dend_16 { pt3dadd( -18.6421, 94.6965, -1.2606, 0.81 ) }
    dend_16 { pt3dadd( -17.9827, 95.3241, -1.28633, 0.81 ) }
    dend_16 { pt3dadd( -17.241, 96.0726, -1.30753, 0.66 ) }
    dend_16 { pt3dadd( -16.5212, 96.8914, -1.35089, 0.59 ) }
    dend_16 { pt3dadd( -16.1246, 97.4435, -1.40823, 0.59 ) }
    dend_16 { pt3dadd( -15.6692, 98.2618, -1.52348, 0.44 ) }
    dend_16 { pt3dadd( -15.2802, 99.1805, -1.67158, 0.81 ) }
    dend_16 { pt3dadd( -14.9635, 100.153, -1.8695, 0.81 ) }
    dend_16 { pt3dadd( -14.6599, 101.275, -2.12842, 1.03 ) }
    dend_16 { pt3dadd( -14.372, 102.417, -2.49557, 1.25 ) }
    dend_16 { pt3dadd( -14.2397, 102.93, -2.73692, 1.25 ) }
    dend_16 { pt3dadd( -14.0473, 103.537, -3.20829, 1.18 ) }
    dend_16 { pt3dadd( -13.7112, 104.425, -4.0732, 0.66 ) }
    dend_16 { pt3dadd( -13.5243, 104.89, -4.52129, 0.59 ) }
    dend_16 { pt3dadd( -12.9823, 106.211, -5.72579, 1.25 ) }
    dend_16 { pt3dadd( -12.5265, 107.322, -6.62468, 1.99 ) }
    dend_16 { pt3dadd( -11.507, 109.982, -8.38692, 0.59 ) }
    dend_16 { pt3dadd( -11.2403, 110.747, -8.75577, 0.66 ) }
    dend_16 { pt3dadd( -10.5957, 112.928, -9.32418, 0.52 ) }
    dend_16 { pt3dadd( -10.3668, 113.827, -9.38103, 1.03 ) }
    dend_16 { pt3dadd( -10.1282, 114.906, -9.26269, 1.25 ) }
    dend_16 { pt3dadd( -9.88361, 116.161, -9.01188, 0.74 ) }
    dend_16 { pt3dadd( -9.73382, 117.096, -8.78386, 0.59 ) }
    dend_16 { pt3dadd( -9.62147, 117.875, -8.68907, 0.59 ) }
    dend_16 { pt3dadd( -9.434, 118.959, -8.71115, 0.88 ) }
    dend_16 { pt3dadd( -9.21171, 119.859, -8.78102, 1.11 ) }
    dend_16 { pt3dadd( -8.95225, 120.615, -8.88073, 1.11 ) }
    dend_16 { pt3dadd( -8.55914, 121.495, -9.0166, 1.03 ) }
    dend_16 { pt3dadd( -7.88515, 122.675, -9.1958, 0.66 ) }
    dend_16 { pt3dadd( -7.24384, 123.526, -9.31748, 0.66 ) }
    dend_16 { pt3dadd( -6.11717, 124.66, -9.45373, 0.96 ) }
    dend_16 { pt3dadd( -5.23692, 125.37, -9.57421, 1.4 ) }
    dend_16 { pt3dadd( -4.71124, 125.746, -9.65872, 1.4 ) }
    dend_16 { pt3dadd( -4.1089, 126.147, -9.78483, 1.4 ) }
    dend_16 { pt3dadd( -3.21244, 126.749, -10.0627, 0.74 ) }
    dend_16 { pt3dadd( -2.40288, 127.421, -10.5224, 0.37 ) }
    dend_16 { pt3dadd( -1.46072, 128.436, -11.464, 0.37 ) }
    dend_16 { pt3dadd( -1.07506, 128.914, -11.9868, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( -0.752864, 129.331, -12.482, 0.96 ) }
    dend_16 { pt3dadd( -0.269407, 129.959, -13.3044, 0.66 ) }
    dend_16 { pt3dadd( 0.43629, 130.873, -14.5469, 0.52 ) }
    dend_16 { pt3dadd( 0.837512, 131.401, -15.227, 0.37 ) }
    dend_16 { pt3dadd( 1.28938, 131.995, -15.8552, 0.81 ) }
    dend_16 { pt3dadd( 1.66813, 132.543, -16.3511, 0.52 ) }
    dend_16 { pt3dadd( 2.16478, 133.463, -17.0521, 0.52 ) }
    dend_16 { pt3dadd( 2.39665, 134.094, -17.4968, 0.66 ) }
    dend_16 { pt3dadd( 2.55874, 135.129, -18.1594, 0.66 ) }
    dend_16 { pt3dadd( 2.50439, 136.025, -18.7626, 0.66 ) }
    dend_16 { pt3dadd( 2.31053, 137.073, -19.5113, 0.66 ) }
    dend_16 { pt3dadd( 2.05468, 138.165, -20.3254, 0.81 ) }
    dend_16 { pt3dadd( 1.79824, 139.295, -21.219, 1.03 ) }
    dend_16 { pt3dadd( 1.7024, 139.869, -21.7319, 1.25 ) }
    dend_16 { pt3dadd( 1.64449, 140.853, -22.7016, 0.52 ) }
    dend_16 { pt3dadd( 1.7026, 141.487, -23.3733, 0.37 ) }
    dend_16 { pt3dadd( 1.96738, 142.161, -24.1206, 0.37 ) }
    dend_16 { pt3dadd( 2.61763, 143.096, -25.2115, 1.11 ) }
    dend_16 { pt3dadd( 3.15443, 143.672, -25.9519, 1.62 ) }
    dend_16 { pt3dadd( 3.41641, 143.907, -26.2852, 1.69 ) }
    dend_16 { pt3dadd( 3.90344, 144.337, -26.9153, 1.69 ) }
    dend_16 { pt3dadd( 4.9784, 145.46, -28.5272, 0.44 ) }
    dend_16 { pt3dadd( 5.48865, 146.154, -29.471, 0.96 ) }
    dend_16 { pt3dadd( 5.91294, 146.921, -30.4173, 1.03 ) }
    dend_16 { pt3dadd( 6.11335, 147.469, -30.9819, 0.88 ) }
    dend_16 { pt3dadd( 6.33722, 148.48, -31.8906, 0.44 ) }
    dend_16 { pt3dadd( 6.48653, 149.561, -32.7257, 0.74 ) }
    dend_16 { pt3dadd( 6.52326, 150.227, -33.1504, 1.03 ) }
    dend_16 { pt3dadd( 6.63442, 150.851, -33.5554, 1.03 ) }
    dend_16 { pt3dadd( 6.99421, 151.717, -34.2093, 0.59 ) }
    dend_16 { pt3dadd( 7.57192, 152.464, -34.9143, 0.59 ) }
    dend_16 { pt3dadd( 8.29073, 153.068, -35.5945, 0.59 ) }
    dend_16 { pt3dadd( 8.82673, 153.456, -36.074, 0.74 ) }
    dend_16 { pt3dadd( 10.1089, 154.468, -37.3057, 0.74 ) }
    dend_16 { pt3dadd( 10.517, 154.89, -37.7882, 0.96 ) }
    dend_16 { pt3dadd( 10.8393, 155.443, -38.2442, 1.11 ) }
    dend_16 { pt3dadd( 10.9844, 155.959, -38.5008, 1.11 ) }
    dend_16 { pt3dadd( 11.1246, 156.987, -38.8343, 0.66 ) }
    dend_16 { pt3dadd( 11.2386, 158.266, -39.0682, 0.52 ) }
    dend_16 { pt3dadd( 11.3792, 159.613, -39.1354, 0.52 ) }
    dend_16 { pt3dadd( 11.6903, 161.772, -39.1176, 1.11 ) }
    dend_16 { pt3dadd( 11.8143, 162.56, -39.0839, 1.33 ) }
    dend_16 { pt3dadd( 11.9337, 163.322, -39.025, 1.33 ) }
    dend_16 { pt3dadd( 12.1146, 164.653, -38.8809, 0.44 ) }
    dend_16 { pt3dadd( 12.2557, 165.72, -38.7783, 0.44 ) }
    dend_16 { pt3dadd( 12.3646, 166.639, -38.7517, 0.74 ) }
    dend_16 { pt3dadd( 12.412, 167.334, -38.7982, 0.74 ) }
    dend_16 { pt3dadd( 12.4342, 168.456, -38.8897, 0.52 ) }
    dend_16 { pt3dadd( 12.407, 169.838, -39.014, 0.44 ) }
    dend_16 { pt3dadd( 12.2997, 171.129, -39.1533, 0.44 ) }
    dend_16 { pt3dadd( 12.1326, 172.445, -39.3237, 1.18 ) }
    dend_16 { pt3dadd( 12.0153, 173.23, -39.4544, 1.18 ) }
    dend_16 { pt3dadd( 11.8576, 174.269, -39.6749, 0.96 ) }
    dend_16 { pt3dadd( 11.7029, 175.297, -39.9496, 0.44 ) }
    dend_16 { pt3dadd( 11.5307, 176.805, -40.4566, 0.37 ) }
    dend_16 { pt3dadd( 11.4914, 177.389, -40.6999, 0.37 ) }
    dend_16 { pt3dadd( 11.5176, 178.617, -41.2959, 0.88 ) }
    dend_16 { pt3dadd( 11.6448, 179.546, -41.7208, 1.18 ) }
    dend_16 { pt3dadd( 11.8351, 180.232, -41.9676, 1.18 ) }
    dend_16 { pt3dadd( 12.3812, 181.582, -42.2328, 0.59 ) }
    dend_16 { pt3dadd( 12.9924, 182.846, -42.2613, 0.52 ) }
    dend_16 { pt3dadd( 13.4238, 183.717, -42.1689, 0.44 ) }
    dend_16 { pt3dadd( 14.3692, 185.574, -41.6865, 0.74 ) }
    dend_16 { pt3dadd( 14.9194, 186.667, -41.2991, 1.25 ) }
    dend_16 { pt3dadd( 15.3935, 187.641, -40.9025, 1.55 ) }
    dend_16 { pt3dadd( 15.7695, 188.497, -40.5133, 1.62 ) }
    dend_16 { pt3dadd( 16.2141, 189.585, -39.9878, 0.81 ) }
    dend_16 { pt3dadd( 16.7143, 190.855, -39.3975, 0.37 ) }
    dend_16 { pt3dadd( 17.1147, 191.883, -38.9786, 0.37 ) }
    dend_16 { pt3dadd( 17.3776, 192.659, -38.6763, 0.37 ) }
    dend_16 { pt3dadd( 17.5994, 193.576, -38.3418, 0.37 ) }
    dend_16 { pt3dadd( 17.6614, 194.148, -38.1639, 0.37 ) }
    dend_16 { pt3dadd( 17.6703, 194.936, -38.0043, 0.66 ) }
    dend_16 { pt3dadd( 17.6694, 195.761, -37.8422, 0.96 ) }
    dend_16 { pt3dadd( 17.7046, 196.41, -37.6438, 1.18 ) }
    dend_16 { pt3dadd( 17.8593, 197.446, -37.2645, 0.52 ) }
    dend_16 { pt3dadd( 18.1642, 198.688, -36.7969, 0.66 ) }
    dend_16 { pt3dadd( 18.4805, 199.783, -36.3969, 0.59 ) }
    dend_16 { pt3dadd( 19.1705, 201.96, -35.6005, 0.52 ) }
    dend_16 { pt3dadd( 19.672, 203.288, -35.1093, 0.96 ) }
    dend_16 { pt3dadd( 20.0415, 204.113, -34.7969, 0.96 ) }
    dend_16 { pt3dadd( 20.582, 205.076, -34.4449, 0.66 ) }
    dend_16 { pt3dadd( 21.3827, 206.306, -34.0103, 0.44 ) }
    dend_16 { pt3dadd( 22.0365, 207.255, -33.7314, 0.44 ) }
    dend_16 { pt3dadd( 22.6891, 208.176, -33.5846, 0.52 ) }
    dend_16 { pt3dadd( 23.2804, 209.005, -33.477, 0.52 ) }
    dend_16 { pt3dadd( 24.3493, 210.47, -33.2346, 0.81 ) }
    dend_16 { pt3dadd( 25.0802, 211.525, -33.0297, 0.52 ) }
    dend_16 { pt3dadd( 25.7196, 212.646, -32.7635, 0.52 ) }
    dend_16 { pt3dadd( 26.1595, 213.681, -32.4991, 1.47 ) }
    dend_16 { pt3dadd( 26.3667, 214.309, -32.3333, 1.77 ) }
    dend_16 { pt3dadd( 26.516, 214.825, -32.2036, 1.77 ) }
    dend_16 { pt3dadd( 26.8105, 215.893, -31.9524, 0.66 ) }
    dend_16 { pt3dadd( 27.273, 217.253, -31.702, 0.52 ) }
    dend_16 { pt3dadd( 27.7838, 218.428, -31.515, 0.52 ) }
    dend_16 { pt3dadd( 28.3689, 219.579, -31.3726, 0.52 ) }
    dend_16 { pt3dadd( 28.7669, 220.34, -31.3139, 0.52 ) }
    dend_16 { pt3dadd( 29.0524, 220.907, -31.2925, 0.81 ) }
    dend_16 { pt3dadd( 29.4984, 221.838, -31.2861, 1.03 ) }
    dend_16 { pt3dadd( 29.8754, 222.845, -31.3127, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 30.0205, 223.322, -31.3228, 1.33 ) }
    dend_16 { pt3dadd( 30.3185, 224.285, -31.3344, 0.88 ) }
    dend_16 { pt3dadd( 30.6373, 225.075, -31.3344, 0.81 ) }
    dend_16 { pt3dadd( 31.0513, 225.763, -31.3344, 0.59 ) }
    dend_16 { pt3dadd( 32.0627, 226.87, -31.3446, 0.44 ) }
    dend_16 { pt3dadd( 32.9437, 227.544, -31.3141, 0.66 ) }
    dend_16 { pt3dadd( 33.8053, 228.096, -31.2604, 0.81 ) }
    dend_16 { pt3dadd( 34.7251, 228.624, -31.1858, 0.44 ) }
    dend_16 { pt3dadd( 35.546, 229.091, -31.0706, 0.81 ) }
    dend_16 { pt3dadd( 36.1702, 229.474, -30.9509, 0.81 ) }
    dend_16 { pt3dadd( 37.102, 230.083, -30.7386, 0.52 ) }
    dend_16 { pt3dadd( 37.8022, 230.623, -30.5771, 0.52 ) }
    dend_16 { pt3dadd( 38.5519, 231.26, -30.4079, 0.52 ) }
    dend_16 { pt3dadd( 39.3293, 231.936, -30.2517, 0.37 ) }
    dend_16 { pt3dadd( 40.3404, 232.799, -30.1362, 0.37 ) }
    dend_16 { pt3dadd( 41.1488, 233.457, -30.1394, 0.59 ) }
    dend_16 { pt3dadd( 41.9707, 234.1, -30.1746, 1.18 ) }
    dend_16 { pt3dadd( 42.2603, 234.328, -30.1673, 1.47 ) }
    dend_16 { pt3dadd( 42.8606, 234.837, -30.1174, 1.47 ) }
    dend_16 { pt3dadd( 43.8017, 235.704, -30.0017, 0.52 ) }
    dend_16 { pt3dadd( 44.4976, 236.395, -29.8814, 0.52 ) }
    dend_16 { pt3dadd( 45.733, 237.679, -29.6596, 0.96 ) }
    dend_16 { pt3dadd( 46.7896, 238.737, -29.4868, 0.52 ) }
    dend_16 { pt3dadd( 47.7712, 239.657, -29.3844, 0.96 ) }
    dend_16 { pt3dadd( 48.317, 240.138, -29.3654, 0.96 ) }
    dend_16 { pt3dadd( 49.3821, 240.944, -29.4105, 0.52 ) }
    dend_16 { pt3dadd( 49.9719, 241.322, -29.5268, 0.37 ) }
    dend_16 { pt3dadd( 50.9136, 241.776, -29.8589, 0.37 ) }
    dend_16 { pt3dadd( 51.6139, 242.011, -30.1363, 0.81 ) }
    dend_16 { pt3dadd( 52.2357, 242.157, -30.3622, 0.81 ) }
    dend_16 { pt3dadd( 53.2035, 242.359, -30.69, 0.52 ) }
    dend_16 { pt3dadd( 53.9065, 242.514, -30.902, 0.74 ) }
    dend_16 { pt3dadd( 54.9734, 242.791, -31.1857, 0.74 ) }
    dend_16 { pt3dadd( 55.8763, 243.068, -31.4074, 0.52 ) }
    dend_16 { pt3dadd( 56.9122, 243.515, -31.6878, 0.52 ) }
    dend_16 { pt3dadd( 57.8988, 244.141, -31.9889, 0.96 ) }
    dend_16 { pt3dadd( 58.3684, 244.567, -32.1576, 1.55 ) }
    dend_16 { pt3dadd( 58.7431, 244.993, -32.2951, 1.69 ) }
    dend_16 { pt3dadd( 58.9611, 245.282, -32.375, 1.69 ) }
    dend_16 { pt3dadd( 60.0482, 246.717, -32.7251, 0.52 ) }
    dend_16 { pt3dadd( 60.8442, 247.666, -32.9321, 0.66 ) }
    dend_16 { pt3dadd( 61.3651, 248.173, -33.0237, 0.74 ) }
    dend_16 { pt3dadd( 62.3398, 248.939, -33.1899, 0.44 ) }
    dend_16 { pt3dadd( 63.3871, 249.675, -33.3597, 0.37 ) }
    dend_16 { pt3dadd( 64.3639, 250.303, -33.5, 1.11 ) }
    dend_16 { pt3dadd( 65.1171, 250.758, -33.5831, 1.55 ) }
    dend_16 { pt3dadd( 65.9665, 251.317, -33.7253, 0.81 ) }
    dend_16 { pt3dadd( 67.0032, 252.237, -34.0062, 0.52 ) }
    dend_16 { pt3dadd( 67.4824, 252.917, -34.2233, 0.66 ) }
    dend_16 { pt3dadd( 67.6857, 253.332, -34.3755, 0.66 ) }
    dend_16 { pt3dadd( 68.0697, 254.37, -34.7695, 0.44 ) }
    dend_16 { pt3dadd( 68.3924, 255.31, -35.132, 0.44 ) }
    dend_16 { pt3dadd( 68.8065, 256.198, -35.5403, 0.52 ) }
    dend_16 { pt3dadd( 69.5142, 257.072, -36.0774, 0.74 ) }
    dend_16 { pt3dadd( 70.2411, 257.608, -36.6138, 1.11 ) }
    dend_16 { pt3dadd( 70.3527, 257.666, -36.6944, 1.33 ) }
    dend_16 { pt3dadd( 70.8135, 257.846, -37.0134, 1.33 ) }
    dend_16 { pt3dadd( 72.1947, 258.329, -38.0169, 0.37 ) }
    dend_16 { pt3dadd( 72.8127, 258.551, -38.4947, 0.37 ) }
    dend_16 { pt3dadd( 73.8219, 258.986, -39.3083, 0.66 ) }
    dend_16 { pt3dadd( 74.5739, 259.411, -39.9398, 0.44 ) }
    dend_16 { pt3dadd( 74.9946, 259.7, -40.3022, 0.44 ) }
    dend_16 { pt3dadd( 75.9324, 260.42, -41.0862, 1.18 ) }
    dend_16 { pt3dadd( 76.3953, 260.791, -41.3943, 1.47 ) }
    dend_16 { pt3dadd( 77.0068, 261.277, -41.6822, 1.47 ) }
    dend_16 { pt3dadd( 78.1957, 262.249, -42.0189, 0.52 ) }
    dend_16 { pt3dadd( 78.7813, 262.78, -42.0944, 0.52 ) }
    dend_16 { pt3dadd( 79.7274, 263.758, -42.0877, 0.52 ) }
    dend_16 { pt3dadd( 80.7836, 265.01, -41.9187, 0.88 ) }
    dend_16 { pt3dadd( 81.4551, 265.943, -41.745, 0.66 ) }
    dend_16 { pt3dadd( 82.2231, 267.181, -41.4634, 0.96 ) }
    dend_16 { pt3dadd( 82.8461, 268.317, -41.1708, 0.96 ) }
    dend_16 { pt3dadd( 83.4112, 269.378, -40.9199, 0.96 ) }
    dend_16 { pt3dadd( 83.8496, 270.179, -40.757, 0.96 ) }
    dend_16 { pt3dadd( 84.3468, 270.942, -40.6595, 0.96 ) }
    dend_16 { pt3dadd( 84.9413, 271.585, -40.5949, 0.96 ) }
    dend_16 { pt3dadd( 85.8876, 272.297, -40.546, 0.37 ) }
    dend_16 { pt3dadd( 86.966, 272.949, -40.5379, 0.37 ) }
    dend_16 { pt3dadd( 87.9518, 273.486, -40.5325, 0.66 ) }
    dend_16 { pt3dadd( 88.8135, 273.968, -40.5297, 1.33 ) }
    dend_16 { pt3dadd( 89.4287, 274.358, -40.5297, 1.33 ) }
    dend_16 { pt3dadd( 90.2123, 275.021, -40.5328, 0.52 ) }
    dend_16 { pt3dadd( 91.0449, 275.886, -40.5394, 0.52 ) }
    dend_16 { pt3dadd( 91.4209, 276.322, -40.5436, 0.88 ) }
    dend_16 { pt3dadd( 91.9022, 276.856, -40.5797, 0.88 ) }
    dend_16 { pt3dadd( 92.584, 277.501, -40.672, 0.88 ) }
    dend_16 { pt3dadd( 93.545, 278.201, -40.8065, 0.44 ) }
    dend_16 { pt3dadd( 94.5394, 278.783, -40.9603, 0.44 ) }
    dend_16 { pt3dadd( 95.6772, 279.272, -41.1485, 0.81 ) }
    dend_16 { pt3dadd( 96.9954, 279.69, -41.3741, 1.47 ) }
    dend_16 { pt3dadd( 97.5972, 279.81, -41.4815, 1.77 ) }
    dend_16 { pt3dadd( 98.6599, 279.9, -41.6849, 1.77 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 92/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -16.8488, 61.7903, 4.85796, 0.52 ) }
    dend_15 { pt3dadd( -18.096, 62.2573, 4.42167, 0.52 ) }
    dend_15 { pt3dadd( -19.0393, 62.6897, 4.11314, 0.52 ) }
    dend_15 { pt3dadd( -20.1305, 63.3161, 3.76505, 0.52 ) }
    dend_15 { pt3dadd( -20.8948, 63.8608, 3.51721, 0.74 ) }
    dend_15 { pt3dadd( -21.4115, 64.3317, 3.31349, 0.74 ) }
    dend_15 { pt3dadd( -21.9038, 64.9046, 3.02684, 0.59 ) }
    dend_15 { pt3dadd( -22.0919, 65.3356, 2.8102, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -22.2377, 65.9923, 2.48404, 0.37 ) }
    dend_15 { pt3dadd( -22.3148, 66.6776, 2.17337, 0.37 ) }
    dend_15 { pt3dadd( -22.4029, 67.6286, 1.78104, 0.37 ) }
    dend_15 { pt3dadd( -22.5961, 68.7534, 1.36122, 0.37 ) }
    dend_15 { pt3dadd( -22.7923, 69.1785, 1.24532, 0.44 ) }
    dend_15 { pt3dadd( -23.1907, 69.5815, 1.21451, 0.59 ) }
    dend_15 { pt3dadd( -23.5909, 69.8441, 1.23844, 0.59 ) }
    dend_15 { pt3dadd( -24.9234, 70.5488, 1.39222, 0.88 ) }
    dend_15 { pt3dadd( -25.5497, 70.829, 1.4924, 1.03 ) }
    dend_15 { pt3dadd( -26.7636, 71.3198, 1.67976, 0.37 ) }
    dend_15 { pt3dadd( -27.6322, 71.6514, 1.75775, 0.44 ) }
    dend_15 { pt3dadd( -28.2602, 71.8976, 1.75261, 0.74 ) }
    dend_15 { pt3dadd( -28.841, 72.1478, 1.68884, 0.74 ) }
    dend_15 { pt3dadd( -29.7079, 72.5951, 1.47975, 0.44 ) }
    dend_15 { pt3dadd( -30.4014, 73.0578, 1.22766, 0.29 ) }
    dend_15 { pt3dadd( -30.771, 73.4529, 0.964761, 0.29 ) }
    dend_15 { pt3dadd( -31.1849, 74.2085, 0.398704, 1.03 ) }
    dend_15 { pt3dadd( -31.3126, 74.6617, 0.0270625, 1.4 ) }
    dend_15 { pt3dadd( -31.3674, 75.0434, -0.295269, 1.4 ) }
    dend_15 { pt3dadd( -31.4281, 75.7995, -0.939738, 0.96 ) }
    dend_15 { pt3dadd( -31.5352, 77.0995, -1.98845, 0.52 ) }
    dend_15 { pt3dadd( -31.6106, 77.6837, -2.43596, 0.52 ) }
    dend_15 { pt3dadd( -31.7902, 78.553, -3.04141, 0.52 ) }
    dend_15 { pt3dadd( -31.9777, 78.9855, -3.2765, 0.52 ) }
    dend_15 { pt3dadd( -32.4987, 79.5828, -3.37307, 0.52 ) }
    dend_15 { pt3dadd( -33.2191, 80.1559, -3.29363, 0.88 ) }
    dend_15 { pt3dadd( -33.6536, 80.4623, -3.20931, 1.25 ) }
    dend_15 { pt3dadd( -34.1886, 80.8433, -3.09501, 1.47 ) }
    dend_15 { pt3dadd( -35.0934, 81.5434, -2.89952, 0.59 ) }
    dend_15 { pt3dadd( -35.8461, 82.2348, -2.79456, 0.37 ) }
    dend_15 { pt3dadd( -36.6221, 83.1062, -2.75636, 0.29 ) }
    dend_15 { pt3dadd( -36.9992, 83.6107, -2.78659, 0.59 ) }
    dend_15 { pt3dadd( -37.4168, 84.2531, -2.8799, 0.88 ) }
    dend_15 { pt3dadd( -37.8374, 84.935, -3.02304, 1.11 ) }
    dend_15 { pt3dadd( -38.3167, 85.7062, -3.20784, 1.33 ) }
    dend_15 { pt3dadd( -38.6607, 86.2351, -3.32936, 1.03 ) }
    dend_15 { pt3dadd( -39.1409, 86.9312, -3.47108, 0.81 ) }
    dend_15 { pt3dadd( -39.6575, 87.6149, -3.59348, 0.52 ) }
    dend_15 { pt3dadd( -40.5669, 88.7939, -3.76765, 0.52 ) }
    dend_15 { pt3dadd( -41.1861, 89.6201, -3.88452, 0.52 ) }
    dend_15 { pt3dadd( -41.484, 90.0364, -3.93731, 0.66 ) }
    dend_15 { pt3dadd( -41.8088, 90.5511, -4.01129, 0.66 ) }
    dend_15 { pt3dadd( -42.246, 91.4088, -4.14069, 0.37 ) }
    dend_15 { pt3dadd( -42.594, 92.3342, -4.27788, 0.37 ) }
    dend_15 { pt3dadd( -42.8275, 93.1957, -4.41733, 0.88 ) }
    dend_15 { pt3dadd( -42.9462, 93.6747, -4.48565, 0.88 ) }
    dend_15 { pt3dadd( -43.2093, 94.6267, -4.61561, 0.37 ) }
    dend_15 { pt3dadd( -43.4547, 95.3255, -4.70113, 0.29 ) }
    dend_15 { pt3dadd( -43.8812, 96.3214, -4.79634, 0.81 ) }
    dend_15 { pt3dadd( -44.0782, 96.7441, -4.79782, 1.18 ) }
    dend_15 { pt3dadd( -44.4309, 97.493, -4.73773, 1.18 ) }
    dend_15 { pt3dadd( -44.7415, 98.2051, -4.64869, 0.59 ) }
    dend_15 { pt3dadd( -45.1212, 99.2431, -4.51268, 0.44 ) }
    dend_15 { pt3dadd( -45.4002, 100.385, -4.39139, 0.44 ) }
    dend_15 { pt3dadd( -45.5491, 101.612, -4.31705, 1.11 ) }
    dend_15 { pt3dadd( -45.5643, 102.047, -4.31883, 1.11 ) }
    dend_15 { pt3dadd( -45.5514, 102.724, -4.36282, 0.81 ) }
    dend_15 { pt3dadd( -45.518, 103.757, -4.47135, 0.52 ) }
    dend_15 { pt3dadd( -45.5309, 104.552, -4.62398, 0.52 ) }
    dend_15 { pt3dadd( -45.6424, 105.284, -4.82847, 0.44 ) }
    dend_15 { pt3dadd( -45.8318, 105.891, -5.0293, 0.44 ) }
    dend_15 { pt3dadd( -46.0898, 106.47, -5.21369, 0.52 ) }
    dend_15 { pt3dadd( -46.3757, 107.0, -5.36992, 0.81 ) }
    dend_15 { pt3dadd( -46.9124, 107.923, -5.59357, 1.11 ) }
    dend_15 { pt3dadd( -47.2227, 108.437, -5.70713, 1.11 ) }
    dend_15 { pt3dadd( -47.6373, 109.156, -5.80965, 0.81 ) }
    dend_15 { pt3dadd( -48.055, 109.918, -5.87069, 0.37 ) }
    dend_15 { pt3dadd( -48.5325, 110.841, -5.88402, 0.37 ) }
    dend_15 { pt3dadd( -48.9852, 111.767, -5.83004, 0.29 ) }
    dend_15 { pt3dadd( -49.3014, 112.453, -5.71939, 0.88 ) }
    dend_15 { pt3dadd( -49.6963, 113.387, -5.51748, 1.55 ) }
    dend_15 { pt3dadd( -49.875, 113.852, -5.39919, 1.55 ) }
    dend_15 { pt3dadd( -50.1372, 114.584, -5.21277, 1.18 ) }
    dend_15 { pt3dadd( -50.4299, 115.4, -5.05627, 0.81 ) }
    dend_15 { pt3dadd( -50.8842, 116.609, -4.84741, 0.44 ) }
    dend_15 { pt3dadd( -51.3968, 117.859, -4.63816, 0.29 ) }
    dend_15 { pt3dadd( -51.7694, 118.627, -4.51442, 0.29 ) }
    dend_15 { pt3dadd( -52.2451, 119.499, -4.36312, 1.25 ) }
    dend_15 { pt3dadd( -52.9657, 120.607, -4.09913, 0.29 ) }
    dend_15 { pt3dadd( -53.7394, 121.607, -3.76684, 0.29 ) }
    dend_15 { pt3dadd( -54.3279, 122.252, -3.48812, 0.29 ) }
    dend_15 { pt3dadd( -54.9238, 122.829, -3.15624, 0.59 ) }
    dend_15 { pt3dadd( -55.234, 123.114, -2.96135, 0.88 ) }
    dend_15 { pt3dadd( -56.1679, 124.036, -2.2696, 0.44 ) }
    dend_15 { pt3dadd( -56.459, 124.385, -2.03396, 0.29 ) }
    dend_15 { pt3dadd( -56.7523, 124.861, -1.81809, 0.44 ) }
    dend_15 { pt3dadd( -56.9586, 125.338, -1.65612, 0.29 ) }
    dend_15 { pt3dadd( -57.1975, 126.272, -1.36341, 0.29 ) }
    dend_15 { pt3dadd( -57.2787, 126.927, -1.16129, 0.29 ) }
    dend_15 { pt3dadd( -57.3206, 127.633, -0.976873, 0.66 ) }
    dend_15 { pt3dadd( -57.3536, 128.058, -0.860153, 0.81 ) }
    dend_15 { pt3dadd( -57.416, 128.618, -0.698368, 0.81 ) }
    dend_15 { pt3dadd( -57.5718, 129.659, -0.40268, 0.29 ) }
    dend_15 { pt3dadd( -57.7417, 130.532, -0.168839, 0.37 ) }
    dend_15 { pt3dadd( -58.0811, 131.72, 0.145981, 0.37 ) }
    dend_15 { pt3dadd( -58.354, 132.435, 0.274064, 0.37 ) }
    dend_15 { pt3dadd( -58.7611, 133.392, 0.353246, 1.33 ) }
    dend_15 { pt3dadd( -58.9702, 133.864, 0.350357, 1.55 ) }
    dend_15 { pt3dadd( -59.1091, 134.19, 0.308, 1.55 ) }
    dend_15 { pt3dadd( -59.3013, 134.665, 0.196188, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -59.9138, 136.176, -0.308522, 0.37 ) }
    dend_15 { pt3dadd( -60.1853, 136.725, -0.581117, 0.59 ) }
    dend_15 { pt3dadd( -60.5135, 137.251, -0.947554, 0.59 ) }
    dend_15 { pt3dadd( -60.9095, 137.771, -1.40438, 0.29 ) }
    dend_15 { pt3dadd( -61.2738, 138.183, -1.92209, 0.29 ) }
    dend_15 { pt3dadd( -61.6524, 138.583, -2.52151, 0.29 ) }
    dend_15 { pt3dadd( -62.2242, 139.153, -3.46137, 0.59 ) }
    dend_15 { pt3dadd( -62.4959, 139.425, -3.91613, 0.59 ) }
    dend_15 { pt3dadd( -63.2689, 140.262, -5.29398, 0.88 ) }
    dend_15 { pt3dadd( -64.108, 141.388, -6.98121, 0.44 ) }
    dend_15 { pt3dadd( -64.4745, 142.084, -7.90199, 0.29 ) }
    dend_15 { pt3dadd( -64.5706, 142.327, -8.19861, 0.81 ) }
    dend_15 { pt3dadd( -64.654, 142.578, -8.47919, 1.11 ) }
    dend_15 { pt3dadd( -64.8642, 143.209, -9.16324, 0.81 ) }
    dend_15 { pt3dadd( -65.2255, 144.025, -10.0828, 0.15 ) }
    dend_15 { pt3dadd( -65.4905, 144.394, -10.5726, 0.15 ) }
    dend_15 { pt3dadd( -65.7455, 144.648, -11.0682, 0.15 ) }
    dend_15 { pt3dadd( -65.9469, 144.832, -11.5331, 0.66 ) }
    dend_15 { pt3dadd( -66.0935, 144.969, -11.9315, 0.81 ) }
    dend_15 { pt3dadd( -66.567, 145.461, -13.2905, 0.15 ) }
    dend_15 { pt3dadd( -67.1987, 146.149, -15.0817, 0.66 ) }
    dend_15 { pt3dadd( -67.3632, 146.345, -15.5447, 0.96 ) }
    dend_15 { pt3dadd( -67.6715, 146.785, -16.4634, 0.81 ) }
    dend_15 { pt3dadd( -68.1986, 147.595, -18.0237, 0.29 ) }
    dend_15 { pt3dadd( -68.4666, 148.017, -18.755, 0.29 ) }
    dend_15 { pt3dadd( -68.8311, 148.563, -19.5879, 0.29 ) }
    dend_15 { pt3dadd( -69.4025, 149.179, -20.4913, 1.18 ) }
    dend_15 { pt3dadd( -69.7859, 149.494, -20.952, 1.18 ) }
    dend_15 { pt3dadd( -70.7023, 150.129, -21.8207, 0.37 ) }
    dend_15 { pt3dadd( -71.2107, 150.45, -22.2303, 0.37 ) }
    dend_15 { pt3dadd( -71.7711, 150.809, -22.6679, 0.88 ) }
    dend_15 { pt3dadd( -72.4769, 151.342, -23.2274, 0.96 ) }
    dend_15 { pt3dadd( -73.5004, 152.253, -24.0785, 0.44 ) }
    dend_15 { pt3dadd( -73.9788, 152.712, -24.4937, 0.66 ) }
    dend_15 { pt3dadd( -74.3803, 153.107, -24.8431, 0.37 ) }
    dend_15 { pt3dadd( -74.833, 153.514, -25.2355, 0.37 ) }
    dend_15 { pt3dadd( -75.5308, 154.136, -25.8562, 0.44 ) }
    dend_15 { pt3dadd( -76.1827, 154.743, -26.4462, 0.37 ) }
    dend_15 { pt3dadd( -77.1487, 155.628, -27.3045, 0.66 ) }
    dend_15 { pt3dadd( -77.6372, 156.007, -27.7095, 0.66 ) }
    dend_15 { pt3dadd( -78.3573, 156.445, -28.2699, 0.29 ) }
    dend_15 { pt3dadd( -79.0479, 156.757, -28.7455, 0.52 ) }
    dend_15 { pt3dadd( -79.6456, 156.971, -29.1097, 0.59 ) }
    dend_15 { pt3dadd( -80.6053, 157.287, -29.6725, 0.29 ) }
    dend_15 { pt3dadd( -81.3164, 157.537, -30.1147, 0.29 ) }
    dend_15 { pt3dadd( -82.2607, 157.904, -30.6907, 0.29 ) }
    dend_15 { pt3dadd( -82.9669, 158.19, -31.145, 0.44 ) }
    dend_15 { pt3dadd( -83.4471, 158.359, -31.4517, 0.74 ) }
    dend_15 { pt3dadd( -84.1871, 158.62, -31.9056, 0.74 ) }
    dend_15 { pt3dadd( -85.1705, 158.967, -32.47, 1.11 ) }
    dend_15 { pt3dadd( -85.8524, 159.235, -32.8496, 1.62 ) }
    dend_15 { pt3dadd( -87.2273, 159.807, -33.57, 0.88 ) }
    dend_15 { pt3dadd( -88.3042, 160.249, -34.1238, 0.37 ) }
    dend_15 { pt3dadd( -89.2323, 160.599, -34.5929, 0.29 ) }
    dend_15 { pt3dadd( -89.9161, 160.829, -34.9225, 0.29 ) }
    dend_15 { pt3dadd( -90.438, 160.998, -35.148, 0.81 ) }
    dend_15 { pt3dadd( -90.8504, 161.132, -35.3121, 1.18 ) }
    dend_15 { pt3dadd( -91.3558, 161.322, -35.4713, 0.88 ) }
    dend_15 { pt3dadd( -92.3664, 161.824, -35.7865, 0.29 ) }
    dend_15 { pt3dadd( -92.8829, 162.176, -36.0141, 0.29 ) }
    dend_15 { pt3dadd( -93.354, 162.608, -36.2714, 0.59 ) }
    dend_15 { pt3dadd( -93.5657, 162.84, -36.4388, 0.88 ) }
    dend_15 { pt3dadd( -93.7796, 163.128, -36.685, 0.59 ) }
    dend_15 { pt3dadd( -93.9969, 163.47, -37.1144, 0.37 ) }
    dend_15 { pt3dadd( -94.3271, 164.029, -38.0286, 0.37 ) }
    dend_15 { pt3dadd( -94.5097, 164.325, -38.5953, 0.74 ) }
    dend_15 { pt3dadd( -94.8778, 164.861, -39.7775, 0.52 ) }
    dend_15 { pt3dadd( -95.1823, 165.263, -40.7442, 1.11 ) }
    dend_15 { pt3dadd( -96.0301, 166.196, -43.3201, 1.25 ) }
    dend_15 { pt3dadd( -96.6566, 166.774, -45.177, 0.66 ) }
    dend_15 { pt3dadd( -97.1192, 167.125, -46.4727, 0.44 ) }
    dend_15 { pt3dadd( -97.6674, 167.474, -47.9252, 1.03 ) }
    dend_15 { pt3dadd( -98.1821, 167.73, -49.1295, 1.03 ) }
    dend_15 { pt3dadd( -99.2419, 168.079, -51.2549, 0.29 ) }
    dend_15 { pt3dadd( -99.8675, 168.194, -52.2996, 0.29 ) }
    dend_15 { pt3dadd( -100.357, 168.251, -53.0292, 1.25 ) }
    dend_15 { pt3dadd( -100.528, 168.272, -53.2629, 1.69 ) }
    dend_15 { pt3dadd( -100.944, 168.336, -53.7937, 1.69 ) }
    dend_15 { pt3dadd( -102.094, 168.565, -55.141, 0.29 ) }
    dend_15 { pt3dadd( -102.975, 168.835, -56.1015, 0.29 ) }
    dend_15 { pt3dadd( -103.447, 169.036, -56.6185, 0.29 ) }
    dend_15 { pt3dadd( -104.081, 169.373, -57.3534, 0.29 ) }
    dend_15 { pt3dadd( -104.748, 169.735, -58.1437, 0.81 ) }
    dend_15 { pt3dadd( -105.136, 169.946, -58.586, 0.88 ) }
    dend_15 { pt3dadd( -105.925, 170.366, -59.4049, 0.29 ) }
    dend_15 { pt3dadd( -106.712, 170.734, -60.1776, 0.81 ) }
    dend_15 { pt3dadd( -107.108, 170.88, -60.5424, 0.81 ) }
    dend_15 { pt3dadd( -107.72, 171.072, -61.0878, 0.22 ) }
    dend_15 { pt3dadd( -108.108, 171.209, -61.4117, 0.52 ) }
    dend_15 { pt3dadd( -108.276, 171.274, -61.5543, 0.59 ) }
    dend_15 { pt3dadd( -109.154, 171.573, -62.1827, 0.22 ) }
    dend_15 { pt3dadd( -109.486, 171.647, -62.3905, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -59.3172, 113.682, -89.6859, 0.52 ) }
    dend_12 { pt3dadd( -58.6596, 115.082, -90.4958, 0.52 ) }
    dend_12 { pt3dadd( -58.2259, 116.076, -91.0816, 0.81 ) }
    dend_12 { pt3dadd( -57.9322, 116.766, -91.5493, 0.59 ) }
    dend_12 { pt3dadd( -57.2429, 118.215, -92.5981, 0.96 ) }
    dend_12 { pt3dadd( -56.7839, 119.107, -93.3003, 0.96 ) }
    dend_12 { pt3dadd( -56.2465, 120.164, -94.1489, 0.52 ) }
    dend_12 { pt3dadd( -55.9291, 120.829, -94.7479, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -55.3906, 121.966, -95.8741, 0.52 ) }
    dend_12 { pt3dadd( -55.0636, 122.653, -96.5501, 0.52 ) }
    dend_12 { pt3dadd( -54.6482, 123.539, -97.3247, 0.66 ) }
    dend_12 { pt3dadd( -54.4158, 124.131, -97.8215, 0.96 ) }
    dend_12 { pt3dadd( -54.1467, 124.932, -98.4603, 0.96 ) }
    dend_12 { pt3dadd( -53.9057, 125.899, -99.2358, 0.37 ) }
    dend_12 { pt3dadd( -53.7695, 126.775, -99.8883, 0.37 ) }
    dend_12 { pt3dadd( -53.7031, 127.638, -100.509, 0.37 ) }
    dend_12 { pt3dadd( -53.6622, 129.283, -101.709, 0.44 ) }
    dend_12 { pt3dadd( -53.6631, 129.628, -101.98, 0.74 ) }
    dend_12 { pt3dadd( -53.6719, 130.412, -102.6, 0.74 ) }
    dend_12 { pt3dadd( -53.7046, 131.152, -103.193, 0.37 ) }
    dend_12 { pt3dadd( -53.7054, 131.816, -103.739, 0.37 ) }
    dend_12 { pt3dadd( -53.6132, 132.601, -104.331, 0.37 ) }
    dend_12 { pt3dadd( -53.4359, 133.188, -104.695, 0.37 ) }
    dend_12 { pt3dadd( -53.0969, 134.11, -105.258, 0.37 ) }
    dend_12 { pt3dadd( -52.9827, 134.366, -105.403, 0.81 ) }
    dend_12 { pt3dadd( -52.5972, 135.095, -105.806, 0.37 ) }
    dend_12 { pt3dadd( -52.2413, 135.658, -106.11, 0.37 ) }
    dend_12 { pt3dadd( -51.7285, 136.385, -106.425, 0.66 ) }
    dend_12 { pt3dadd( -51.3602, 136.913, -106.643, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -59.3172, 113.682, -89.6859, 0.44 ) }
    dend_5 { pt3dadd( -59.4576, 114.66, -89.6339, 0.44 ) }
    dend_5 { pt3dadd( -59.6986, 115.415, -89.6219, 0.37 ) }
    dend_5 { pt3dadd( -60.0147, 116.116, -89.6413, 0.88 ) }
    dend_5 { pt3dadd( -60.2121, 116.498, -89.6818, 0.88 ) }
    dend_5 { pt3dadd( -60.5525, 117.11, -89.7765, 0.52 ) }
    dend_5 { pt3dadd( -60.8947, 117.738, -90.0244, 0.29 ) }
    dend_5 { pt3dadd( -61.3246, 118.458, -90.4704, 0.22 ) }
    dend_5 { pt3dadd( -61.5834, 118.85, -90.7611, 0.22 ) }
    dend_5 { pt3dadd( -61.9895, 119.423, -91.2345, 0.88 ) }
    dend_5 { pt3dadd( -62.2662, 119.81, -91.5877, 1.25 ) }
    dend_5 { pt3dadd( -63.4054, 121.462, -93.2749, 0.44 ) }
    dend_5 { pt3dadd( -63.792, 122.086, -93.9686, 0.96 ) }
    dend_5 { pt3dadd( -63.9287, 122.351, -94.2864, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -30.6701, 4.90271, -7.05682, 0.81 ) }
    dend_3 { pt3dadd( -31.3746, 4.72219, -8.70681, 0.81 ) }
    dend_3 { pt3dadd( -31.7357, 4.66301, -9.42936, 0.81 ) }
    dend_3 { pt3dadd( -34.0611, 4.52947, -13.3165, 1.62 ) }
    dend_3 { pt3dadd( -35.7531, 4.60045, -15.7186, 0.66 ) }
    dend_3 { pt3dadd( -36.7978, 4.68792, -17.0376, 0.66 ) }
    dend_3 { pt3dadd( -37.4949, 4.73226, -17.8512, 0.88 ) }
    dend_3 { pt3dadd( -38.3082, 4.80024, -18.6699, 0.96 ) }
    dend_3 { pt3dadd( -39.6522, 4.86804, -19.822, 0.81 ) }
    dend_3 { pt3dadd( -41.0, 4.78661, -20.6284, 0.52 ) }
    dend_3 { pt3dadd( -42.1863, 4.51015, -21.2666, 0.52 ) }
    dend_3 { pt3dadd( -43.4646, 3.92925, -21.9583, 0.74 ) }
    dend_3 { pt3dadd( -44.5936, 3.15707, -22.5655, 1.11 ) }
    dend_3 { pt3dadd( -44.9569, 2.82128, -22.7442, 1.25 ) }
    dend_3 { pt3dadd( -45.7316, 1.93626, -23.1104, 0.96 ) }
    dend_3 { pt3dadd( -46.6538, 0.778422, -23.5225, 0.66 ) }
    dend_3 { pt3dadd( -47.5211, -0.295146, -23.889, 0.88 ) }
    dend_3 { pt3dadd( -48.4271, -1.33342, -24.2718, 0.81 ) }
    dend_3 { pt3dadd( -49.3875, -2.3344, -24.7207, 0.96 ) }
    dend_3 { pt3dadd( -50.1447, -3.08492, -25.139, 1.18 ) }
    dend_3 { pt3dadd( -50.9762, -3.91507, -25.6802, 1.11 ) }
    dend_3 { pt3dadd( -51.6761, -4.64544, -26.2452, 1.18 ) }
    dend_3 { pt3dadd( -52.3711, -5.40463, -26.9514, 1.33 ) }
    dend_3 { pt3dadd( -53.4835, -6.58932, -28.2026, 0.66 ) }
    dend_3 { pt3dadd( -54.3084, -7.39702, -29.1281, 0.88 ) }
    dend_3 { pt3dadd( -54.9925, -8.0092, -29.8473, 0.88 ) }
    dend_3 { pt3dadd( -56.1122, -8.9206, -30.9424, 0.59 ) }
    dend_3 { pt3dadd( -56.7935, -9.39274, -31.5059, 0.59 ) }
    dend_3 { pt3dadd( -57.4058, -9.69889, -31.8754, 0.81 ) }
    dend_3 { pt3dadd( -58.4025, -9.9878, -32.1332, 1.33 ) }
    dend_3 { pt3dadd( -59.2743, -10.1614, -32.1517, 1.4 ) }
    dend_3 { pt3dadd( -59.8421, -10.2922, -32.0841, 1.25 ) }
    dend_3 { pt3dadd( -60.9518, -10.6775, -31.8178, 0.52 ) }
    dend_3 { pt3dadd( -61.5813, -11.0211, -31.6532, 0.52 ) }
    dend_3 { pt3dadd( -62.3699, -11.6799, -31.529, 0.66 ) }
    dend_3 { pt3dadd( -63.062, -12.4251, -31.4924, 0.81 ) }
    dend_3 { pt3dadd( -63.8019, -13.2848, -31.5044, 0.81 ) }
    dend_3 { pt3dadd( -64.2826, -13.879, -31.5792, 1.11 ) }
    dend_3 { pt3dadd( -64.6716, -14.4099, -31.7064, 1.33 ) }
    dend_3 { pt3dadd( -65.2248, -15.2116, -32.0213, 1.33 ) }
    dend_3 { pt3dadd( -65.5116, -15.6429, -32.279, 1.33 ) }
    dend_3 { pt3dadd( -66.0748, -16.4948, -32.9898, 0.81 ) }
    dend_3 { pt3dadd( -66.6996, -17.4262, -33.8933, 0.52 ) }
    dend_3 { pt3dadd( -67.1771, -18.1148, -34.6044, 0.74 ) }
    dend_3 { pt3dadd( -67.8692, -19.0902, -35.6222, 0.96 ) }
    dend_3 { pt3dadd( -68.4232, -19.8384, -36.3721, 0.81 ) }
    dend_3 { pt3dadd( -69.2075, -20.8207, -37.3557, 0.66 ) }
    dend_3 { pt3dadd( -69.8819, -21.6052, -38.0929, 0.59 ) }
    dend_3 { pt3dadd( -70.3653, -22.1252, -38.5246, 1.03 ) }
    dend_3 { pt3dadd( -70.766, -22.5643, -38.8395, 1.25 ) }
    dend_3 { pt3dadd( -71.3367, -23.2488, -39.2268, 1.25 ) }
    dend_3 { pt3dadd( -72.1413, -24.3766, -39.846, 0.81 ) }
    dend_3 { pt3dadd( -72.5581, -25.0887, -40.2665, 0.52 ) }
    dend_3 { pt3dadd( -73.1421, -26.0946, -41.0536, 0.52 ) }
    dend_3 { pt3dadd( -73.583, -26.7733, -41.6529, 0.44 ) }
    dend_3 { pt3dadd( -73.8473, -27.1434, -42.0191, 0.44 ) }
    dend_3 { pt3dadd( -74.6422, -28.2217, -43.1435, 0.96 ) }
    dend_3 { pt3dadd( -74.98, -28.6665, -43.6111, 1.4 ) }
    dend_3 { pt3dadd( -75.8527, -29.6713, -44.8482, 0.88 ) }
    dend_3 { pt3dadd( -76.6227, -30.5073, -45.9037, 0.66 ) }
    dend_3 { pt3dadd( -77.709, -31.7164, -47.3642, 0.66 ) }
    dend_3 { pt3dadd( -78.4425, -32.6598, -48.4854, 0.59 ) }
    dend_3 { pt3dadd( -79.1559, -33.7706, -49.749, 1.77 ) }
    dend_3 { pt3dadd( -80.1156, -35.6158, -51.7426, 0.59 ) }
    dend_3 { pt3dadd( -80.4002, -36.2612, -52.3996, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_3 { pt3dadd( -80.7223, -37.0056, -53.1385, 0.74 ) }
    dend_3 { pt3dadd( -81.516, -38.6501, -54.665, 0.59 ) }
    dend_3 { pt3dadd( -81.9287, -39.3832, -55.2803, 0.59 ) }
    dend_3 { pt3dadd( -82.3887, -40.1266, -55.7999, 0.74 ) }
    dend_3 { pt3dadd( -83.0859, -41.1837, -56.3679, 0.74 ) }
    dend_3 { pt3dadd( -83.7767, -42.0796, -56.8104, 0.74 ) }
    dend_3 { pt3dadd( -84.5723, -43.0235, -57.3582, 0.52 ) }
    dend_3 { pt3dadd( -85.3067, -43.7899, -57.8145, 0.37 ) }
    dend_3 { pt3dadd( -85.7279, -44.1989, -58.1095, 1.11 ) }
    dend_3 { pt3dadd( -86.0121, -44.4422, -58.3345, 1.11 ) }
    dend_3 { pt3dadd( -86.5289, -44.8351, -58.7742, 0.96 ) }
    dend_3 { pt3dadd( -88.7651, -46.243, -60.6256, 0.59 ) }
    dend_3 { pt3dadd( -89.3311, -46.514, -61.0212, 0.52 ) }
    dend_3 { pt3dadd( -89.9085, -46.7088, -61.4287, 0.81 ) }
    dend_3 { pt3dadd( -90.8474, -46.9818, -62.0863, 0.81 ) }
    dend_3 { pt3dadd( -91.681, -47.199, -62.6532, 1.11 ) }
    dend_3 { pt3dadd( -92.579, -47.4376, -63.2257, 1.25 ) }
    dend_3 { pt3dadd( -93.4535, -47.6961, -63.7059, 0.96 ) }
    dend_3 { pt3dadd( -95.3842, -48.4251, -64.9327, 0.52 ) }
    dend_3 { pt3dadd( -96.2036, -48.8145, -65.504, 0.52 ) }
    dend_3 { pt3dadd( -96.8503, -49.2278, -65.9978, 0.81 ) }
    dend_3 { pt3dadd( -97.4825, -49.8009, -66.5647, 0.88 ) }
    dend_3 { pt3dadd( -97.7969, -50.2055, -66.9093, 1.03 ) }
    dend_3 { pt3dadd( -98.2088, -50.9027, -67.4255, 0.88 ) }
    dend_3 { pt3dadd( -98.5782, -51.6693, -67.9019, 0.44 ) }
    dend_3 { pt3dadd( -98.9503, -52.5474, -68.4185, 0.44 ) }
    dend_3 { pt3dadd( -99.5532, -54.353, -69.4402, 1.33 ) }
    dend_3 { pt3dadd( -100.11, -56.2337, -70.4852, 0.59 ) }
    dend_3 { pt3dadd( -100.303, -56.9103, -70.8848, 1.03 ) }
    dend_3 { pt3dadd( -100.441, -57.4007, -71.1794, 1.18 ) }
    dend_3 { pt3dadd( -100.655, -58.1244, -71.6325, 0.81 ) }
    dend_3 { pt3dadd( -101.125, -59.4622, -72.4763, 0.59 ) }
    dend_3 { pt3dadd( -101.506, -60.3248, -73.0309, 0.37 ) }
    dend_3 { pt3dadd( -102.226, -61.599, -73.9817, 0.37 ) }
    dend_3 { pt3dadd( -102.449, -61.9002, -74.2478, 0.96 ) }
    dend_3 { pt3dadd( -102.645, -62.1157, -74.4605, 1.25 ) }
    dend_3 { pt3dadd( -102.931, -62.3664, -74.7311, 1.25 ) }
    dend_3 { pt3dadd( -104.065, -63.1765, -75.6181, 0.52 ) }
    dend_3 { pt3dadd( -104.859, -63.7055, -76.1469, 0.52 ) }
    dend_3 { pt3dadd( -105.744, -64.2806, -76.6114, 0.52 ) }
    dend_3 { pt3dadd( -105.994, -64.4376, -76.7345, 1.18 ) }
    dend_3 { pt3dadd( -106.42, -64.7033, -76.9854, 1.18 ) }
    dend_3 { pt3dadd( -106.803, -64.9494, -77.222, 1.18 ) }
    dend_3 { pt3dadd( -107.435, -65.3813, -77.5381, 0.88 ) }
    dend_3 { pt3dadd( -108.678, -66.1962, -78.3228, 0.44 ) }
    dend_3 { pt3dadd( -108.855, -66.3103, -78.4687, 0.81 ) }
    dend_3 { pt3dadd( -110.657, -67.4636, -80.1309, 0.52 ) }
    dend_3 { pt3dadd( -111.28, -67.8775, -80.7646, 0.81 ) }
    dend_3 { pt3dadd( -112.354, -68.6216, -81.9075, 0.44 ) }
    dend_3 { pt3dadd( -114.13, -69.9304, -83.9287, 0.74 ) }
    dend_3 { pt3dadd( -114.903, -70.5368, -84.8178, 0.44 ) }
    dend_3 { pt3dadd( -115.266, -70.8536, -85.218, 1.33 ) }
    dend_3 { pt3dadd( -115.51, -71.1027, -85.4922, 1.33 ) }
    dend_3 { pt3dadd( -116.017, -71.6532, -86.1186, 0.74 ) }
    dend_3 { pt3dadd( -116.947, -72.6326, -87.2751, 0.44 ) }
    dend_3 { pt3dadd( -117.22, -72.9091, -87.5437, 0.74 ) }
    dend_3 { pt3dadd( -117.681, -73.3043, -87.9961, 0.74 ) }
    dend_3 { pt3dadd( -118.781, -73.9269, -89.1871, 0.37 ) }
    dend_3 { pt3dadd( -119.263, -74.0246, -89.7387, 0.37 ) }
    dend_3 { pt3dadd( -119.798, -73.952, -90.3937, 0.66 ) }
    dend_3 { pt3dadd( -120.195, -73.833, -90.861, 0.88 ) }
    dend_3 { pt3dadd( -120.548, -73.7137, -91.2656, 0.88 ) }
    dend_3 { pt3dadd( -121.614, -73.3848, -92.4387, 0.59 ) }
    dend_3 { pt3dadd( -122.218, -73.236, -93.0276, 0.29 ) }
    dend_3 { pt3dadd( -122.775, -73.1737, -93.5329, 0.29 ) }
    dend_3 { pt3dadd( -123.828, -73.236, -94.3916, 0.96 ) }
    dend_3 { pt3dadd( -124.092, -73.2952, -94.5741, 1.18 ) }
    dend_3 { pt3dadd( -125.426, -73.8593, -95.4387, 0.59 ) }
    dend_3 { pt3dadd( -125.991, -74.2089, -95.8953, 0.81 ) }
    dend_3 { pt3dadd( -126.437, -74.5208, -96.3078, 0.81 ) }
    dend_3 { pt3dadd( -127.032, -74.938, -96.886, 0.37 ) }
    dend_3 { pt3dadd( -127.717, -75.4208, -97.5769, 0.37 ) }
    dend_3 { pt3dadd( -128.741, -76.1503, -98.6638, 1.11 ) }
    dend_3 { pt3dadd( -130.732, -77.5979, -100.793, 0.52 ) }
    dend_3 { pt3dadd( -131.086, -77.8577, -101.183, 0.52 ) }
    dend_3 { pt3dadd( -131.844, -78.3931, -102.018, 0.44 ) }
    dend_3 { pt3dadd( -132.241, -78.6495, -102.477, 1.47 ) }
    dend_3 { pt3dadd( -133.983, -79.6371, -104.538, 0.59 ) }
    dend_3 { pt3dadd( -134.477, -79.8782, -105.103, 0.88 ) }
    dend_3 { pt3dadd( -135.062, -80.1545, -105.817, 0.88 ) }
    dend_3 { pt3dadd( -136.128, -80.6344, -107.33, 0.52 ) }
    dend_3 { pt3dadd( -137.064, -81.017, -108.779, 0.74 ) }
    dend_3 { pt3dadd( -137.453, -81.1436, -109.398, 0.96 ) }
    dend_3 { pt3dadd( -137.704, -81.215, -109.789, 0.96 ) }
    dend_3 { pt3dadd( -138.943, -81.6143, -111.688, 0.29 ) }
    dend_3 { pt3dadd( -140.016, -81.9892, -113.44, 0.96 ) }
    dend_3 { pt3dadd( -140.373, -82.1204, -114.014, 1.18 ) }
    dend_3 { pt3dadd( -141.532, -82.5892, -115.882, 0.37 ) }
    dend_3 { pt3dadd( -142.038, -82.8275, -116.729, 0.37 ) }
    dend_3 { pt3dadd( -142.414, -83.0138, -117.365, 0.74 ) }
    dend_3 { pt3dadd( -144.319, -83.895, -120.626, 0.88 ) }
    dend_3 { pt3dadd( -144.662, -84.021, -121.218, 0.88 ) }
    dend_3 { pt3dadd( -145.658, -84.3248, -122.948, 0.37 ) }
    dend_3 { pt3dadd( -146.033, -84.4249, -123.571, 0.37 ) }
    dend_3 { pt3dadd( -146.518, -84.539, -124.326, 0.37 ) }
    dend_3 { pt3dadd( -147.184, -84.7011, -125.226, 0.37 ) }
    dend_3 { pt3dadd( -148.227, -85.0557, -126.343, 0.74 ) }
    dend_3 { pt3dadd( -149.852, -85.6964, -128.037, 0.44 ) }
    dend_3 { pt3dadd( -150.273, -85.8655, -128.428, 1.03 ) }
    dend_3 { pt3dadd( -150.678, -86.0561, -128.805, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -150.984, -86.2533, -129.1, 1.03 ) }
    dend_3 { pt3dadd( -151.814, -86.9828, -129.864, 0.44 ) }
    dend_3 { pt3dadd( -152.378, -87.5779, -130.353, 0.59 ) }
    dend_3 { pt3dadd( -153.009, -88.2265, -130.832, 0.37 ) }
    dend_3 { pt3dadd( -153.704, -88.8951, -131.384, 0.29 ) }
    dend_3 { pt3dadd( -154.079, -89.2371, -131.732, 0.44 ) }
    dend_3 { pt3dadd( -154.359, -89.5082, -132.026, 0.44 ) }
    dend_3 { pt3dadd( -155.221, -90.382, -132.989, 0.29 ) }
    dend_3 { pt3dadd( -155.575, -90.7458, -133.402, 0.52 ) }
    dend_3 { pt3dadd( -155.773, -90.9289, -133.652, 0.74 ) }
    dend_3 { pt3dadd( -156.731, -91.5311, -134.809, 0.29 ) }
    dend_3 { pt3dadd( -157.134, -91.7345, -135.293, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -30.6701, 4.90271, -7.05682, 0.88 ) }
    dend_2 { pt3dadd( -31.7659, 8.13555, -7.07105, 0.88 ) }
    dend_2 { pt3dadd( -32.3115, 9.615, -6.95068, 0.52 ) }
    dend_2 { pt3dadd( -32.6686, 10.4718, -6.84351, 0.88 ) }
    dend_2 { pt3dadd( -33.3997, 12.0348, -6.61174, 0.88 ) }
    dend_2 { pt3dadd( -34.7135, 14.5427, -6.20882, 0.52 ) }
    dend_2 { pt3dadd( -35.5564, 15.8875, -5.98376, 0.52 ) }
    dend_2 { pt3dadd( -36.673, 17.4272, -5.57121, 0.44 ) }
    dend_2 { pt3dadd( -37.6131, 18.4486, -5.2806, 0.59 ) }
    dend_2 { pt3dadd( -38.6141, 19.3705, -4.96469, 0.74 ) }
    dend_2 { pt3dadd( -39.4634, 20.0352, -4.69376, 0.74 ) }
    dend_2 { pt3dadd( -41.4402, 21.3521, -4.16804, 1.25 ) }
    dend_2 { pt3dadd( -42.0995, 21.7359, -4.03147, 1.25 ) }
    dend_2 { pt3dadd( -43.4664, 22.4, -3.86433, 0.66 ) }
    dend_2 { pt3dadd( -45.1839, 23.1403, -3.77194, 0.81 ) }
    dend_2 { pt3dadd( -45.8935, 23.415, -3.75371, 0.66 ) }
    dend_2 { pt3dadd( -47.5037, 23.9997, -3.75874, 0.88 ) }
    dend_2 { pt3dadd( -50.244, 24.9243, -3.84693, 0.88 ) }
    dend_2 { pt3dadd( -51.3853, 25.269, -3.91745, 0.66 ) }
    dend_2 { pt3dadd( -52.1159, 25.4597, -3.99484, 0.52 ) }
    dend_2 { pt3dadd( -53.6605, 25.7883, -4.17394, 1.03 ) }
    dend_2 { pt3dadd( -54.2744, 25.9332, -4.14102, 1.33 ) }
    dend_2 { pt3dadd( -54.7044, 26.0638, -4.04316, 1.55 ) }
    dend_2 { pt3dadd( -55.1319, 26.2174, -3.91276, 1.55 ) }
    dend_2 { pt3dadd( -55.8122, 26.4943, -3.71219, 1.33 ) }
    dend_2 { pt3dadd( -56.9458, 27.0125, -3.42049, 0.74 ) }
    dend_2 { pt3dadd( -58.2926, 27.7016, -3.11099, 0.59 ) }
    dend_2 { pt3dadd( -59.6464, 28.5517, -2.79371, 0.59 ) }
    dend_2 { pt3dadd( -60.5132, 29.2292, -2.59117, 0.59 ) }
    dend_2 { pt3dadd( -60.9729, 29.6825, -2.47804, 1.11 ) }
    dend_2 { pt3dadd( -61.7519, 30.6981, -2.31347, 1.55 ) }
    dend_2 { pt3dadd( -62.0292, 31.2115, -2.27115, 1.77 ) }
    dend_2 { pt3dadd( -62.5944, 32.8438, -2.09732, 0.74 ) }
    dend_2 { pt3dadd( -62.8264, 33.882, -1.94799, 0.96 ) }
    dend_2 { pt3dadd( -62.9514, 34.6801, -1.81077, 0.74 ) }
    dend_2 { pt3dadd( -63.1017, 35.8083, -1.57006, 0.52 ) }
    dend_2 { pt3dadd( -63.2203, 36.6623, -1.34928, 0.44 ) }
    dend_2 { pt3dadd( -63.7182, 39.0396, -0.586734, 0.88 ) }
    dend_2 { pt3dadd( -63.9024, 39.715, -0.365254, 1.11 ) }
    dend_2 { pt3dadd( -64.0994, 40.3344, -0.179882, 1.11 ) }
    dend_2 { pt3dadd( -64.4759, 41.4381, 0.0998652, 0.74 ) }
    dend_2 { pt3dadd( -64.8518, 42.4315, 0.303233, 0.44 ) }
    dend_2 { pt3dadd( -65.3084, 43.529, 0.391657, 0.29 ) }
    dend_2 { pt3dadd( -65.876, 44.848, 0.315357, 0.59 ) }
    dend_2 { pt3dadd( -66.2274, 45.7095, 0.259274, 0.44 ) }
    dend_2 { pt3dadd( -66.5744, 46.6069, 0.192356, 1.25 ) }
    dend_2 { pt3dadd( -66.7299, 47.0446, 0.1581, 1.25 ) }
    dend_2 { pt3dadd( -66.9158, 47.6214, 0.141185, 0.81 ) }
    dend_2 { pt3dadd( -67.187, 48.4505, 0.173689, 0.29 ) }
    dend_2 { pt3dadd( -67.5497, 49.3739, 0.278138, 0.59 ) }
    dend_2 { pt3dadd( -67.7849, 49.9084, 0.332898, 0.74 ) }
    dend_2 { pt3dadd( -68.0167, 50.3684, 0.370726, 0.88 ) }
    dend_2 { pt3dadd( -68.338, 50.9315, 0.405332, 0.88 ) }
    dend_2 { pt3dadd( -68.7891, 51.6363, 0.428253, 0.44 ) }
    dend_2 { pt3dadd( -69.2435, 52.3, 0.428253, 0.81 ) }
    dend_2 { pt3dadd( -69.6785, 52.9104, 0.428253, 0.81 ) }
    dend_2 { pt3dadd( -70.3546, 53.8354, 0.428253, 0.37 ) }
    dend_2 { pt3dadd( -70.7615, 54.3855, 0.440357, 0.37 ) }
    dend_2 { pt3dadd( -71.5829, 55.4944, 0.512092, 0.29 ) }
    dend_2 { pt3dadd( -72.4477, 56.6525, 0.650472, 0.29 ) }
    dend_2 { pt3dadd( -72.7912, 57.1163, 0.726307, 0.29 ) }
    dend_2 { pt3dadd( -73.3266, 57.8547, 0.871107, 0.88 ) }
    dend_2 { pt3dadd( -73.6746, 58.3644, 0.984534, 1.18 ) }
    dend_2 { pt3dadd( -74.1875, 59.1399, 1.18162, 1.18 ) }
    dend_2 { pt3dadd( -74.6772, 59.8499, 1.40815, 0.59 ) }
    dend_2 { pt3dadd( -75.1779, 60.546, 1.67872, 0.59 ) }
    dend_2 { pt3dadd( -75.6712, 61.2309, 1.96363, 0.52 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 79/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 33.5461, -109.886, 23.5721, 0.29 ) }
    dend_65 { pt3dadd( 32.9178, -110.634, 23.5721, 0.29 ) }
    dend_65 { pt3dadd( 32.2545, -111.424, 23.5721, 0.15 ) }
    dend_65 { pt3dadd( 31.9427, -111.795, 23.5721, 0.15 ) }
    dend_65 { pt3dadd( 31.2714, -112.594, 23.5721, 0.44 ) }
    dend_65 { pt3dadd( 30.8726, -113.069, 23.5721, 0.44 ) }
    dend_65 { pt3dadd( 30.3491, -113.692, 23.5721, 0.74 ) }
    dend_65 { pt3dadd( 25.1232, -121.945, 22.5547, 0.74 ) }
    dend_65 { pt3dadd( 20.3676, -130.485, 23.3768, 0.74 ) }
    dend_65 { pt3dadd( 17.3849, -139.782, 23.7939, 0.74 ) }
    dend_65 { pt3dadd( 15.2524, -149.302, 23.449, 0.74 ) }
    dend_65 { pt3dadd( 14.5185, -158.799, 21.3086, 0.74 ) }
    dend_65 { pt3dadd( 15.7886, -167.897, 17.9461, 0.74 ) }
    dend_65 { pt3dadd( 17.974, -176.482, 13.7395, 0.74 ) }
    dend_65 { pt3dadd( 19.5477, -185.503, 10.2857, 0.74 ) }
    dend_65 { pt3dadd( 19.358, -194.756, 7.14174, 0.74 ) }
    dend_65 { pt3dadd( 19.893, -203.521, 2.79296, 0.74 ) }
    dend_65 { pt3dadd( 20.8149, -212.246, -1.57361, 0.74 ) }
    dend_65 { pt3dadd( 21.1807, -221.633, -4.25281, 0.74 ) }
    dend_65 { pt3dadd( 20.1849, -230.973, -6.94328, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 33.5461, -109.886, 23.5721, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( 34.368, -109.417, 23.5591, 0.22 ) }
    dend_64 { pt3dadd( 35.2892, -108.891, 23.5445, 0.59 ) }
    dend_64 { pt3dadd( 35.6699, -108.673, 23.5385, 0.59 ) }
    dend_64 { pt3dadd( 36.4757, -108.213, 23.5257, 0.37 ) }
    dend_64 { pt3dadd( 37.0125, -107.906, 23.5172, 0.37 ) }
    dend_64 { pt3dadd( 46.1071, -104.017, 24.6898, 0.37 ) }
    dend_64 { pt3dadd( 54.1973, -98.2864, 24.6244, 0.37 ) }
    dend_64 { pt3dadd( 62.7188, -93.3267, 25.8521, 0.37 ) }
    dend_64 { pt3dadd( 70.9801, -88.5515, 28.6388, 0.37 ) }
    dend_64 { pt3dadd( 78.3554, -82.8151, 31.954, 0.37 ) }
    dend_64 { pt3dadd( 84.7859, -77.0945, 36.8756, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 11/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 6.2068, -40.324, 28.5595, 0.52 ) }
    dend_60 { pt3dadd( 5.51719, -41.1981, 28.3098, 0.52 ) }
    dend_60 { pt3dadd( 4.88971, -41.9935, 28.0827, 0.52 ) }
    dend_60 { pt3dadd( 4.25807, -42.7941, 27.854, 0.44 ) }
    dend_60 { pt3dadd( 3.81438, -43.3566, 27.6934, 0.29 ) }
    dend_60 { pt3dadd( 3.41982, -43.8567, 27.5506, 0.74 ) }
    dend_60 { pt3dadd( -2.69557, -51.4088, 25.9366, 0.74 ) }
    dend_60 { pt3dadd( -8.68225, -59.0305, 24.1896, 0.74 ) }
    dend_60 { pt3dadd( -14.8129, -66.1565, 21.1902, 0.74 ) }
    dend_60 { pt3dadd( -21.6504, -72.6396, 18.1843, 0.74 ) }
    dend_60 { pt3dadd( -29.0626, -77.9988, 14.3312, 0.74 ) }
    dend_60 { pt3dadd( -37.2829, -82.2762, 10.7005, 0.74 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 23/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 6.2068, -40.324, 28.5595, 0.29 ) }
    dend_59 { pt3dadd( 6.99492, -40.4445, 27.8989, 0.29 ) }
    dend_59 { pt3dadd( 8.2816, -40.5555, 26.9127, 0.29 ) }
    dend_59 { pt3dadd( 8.85194, -40.5676, 26.5053, 0.44 ) }
    dend_59 { pt3dadd( 9.725, -40.5135, 25.8943, 0.44 ) }
    dend_59 { pt3dadd( 10.4531, -40.3911, 25.3878, 0.37 ) }
    dend_59 { pt3dadd( 10.9182, -40.2645, 25.0547, 0.22 ) }
    dend_59 { pt3dadd( 11.2466, -39.9919, 24.8179, 0.59 ) }
    dend_59 { pt3dadd( 11.3497, -39.5893, 24.7251, 0.74 ) }
    dend_59 { pt3dadd( 11.2835, -38.672, 24.6592, 0.22 ) }
    dend_59 { pt3dadd( 11.054, -37.8165, 24.6733, 0.22 ) }
    dend_59 { pt3dadd( 10.6323, -36.7722, 24.7324, 0.22 ) }
    dend_59 { pt3dadd( 10.1044, -35.7811, 24.7965, 0.81 ) }
    dend_59 { pt3dadd( 16.5524, -30.0092, 19.9613, 0.81 ) }
    dend_59 { pt3dadd( 22.6797, -23.3747, 15.9422, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 38/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 2.27554, -165.627, 16.5184, 0.37 ) }
    dend_47 { pt3dadd( 10.9049, -170.377, 15.1738, 0.37 ) }
    dend_47 { pt3dadd( 18.8347, -176.131, 13.6618, 0.37 ) }
    dend_47 { pt3dadd( 27.1623, -181.139, 11.5971, 0.37 ) }
    dend_47 { pt3dadd( 35.3179, -186.479, 9.72808, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.27554, -165.627, 16.5184, 0.22 ) }
    dend_42 { pt3dadd( 10.5847, -170.56, 18.8348, 0.37 ) }
    dend_42 { pt3dadd( 18.0999, -175.903, 22.5068, 0.37 ) }
    dend_42 { pt3dadd( 25.5296, -182.194, 24.2862, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -56.5161, -160.8, 5.16228, 0.37 ) }
    dend_39 { pt3dadd( -53.9826, -169.972, 2.90779, 0.37 ) }
    dend_39 { pt3dadd( -50.4621, -178.664, 0.0568766, 0.37 ) }
    dend_39 { pt3dadd( -48.1627, -188.05, -1.37173, 0.37 ) }
    dend_39 { pt3dadd( -44.95, -196.999, -3.70407, 0.37 ) }
    dend_39 { pt3dadd( -42.0012, -206.287, -4.45201, 0.37 ) }
    dend_39 { pt3dadd( -37.9686, -215.146, -5.53617, 0.37 ) }
    dend_39 { pt3dadd( -33.7791, -223.985, -6.04701, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -56.5161, -160.8, 5.16228, 0.22 ) }
    dend_36 { pt3dadd( -53.5023, -170.068, 4.41799, 0.37 ) }
    dend_36 { pt3dadd( -48.8617, -178.704, 4.55121, 0.37 ) }
    dend_36 { pt3dadd( -45.3701, -187.678, 2.79143, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 98.6599, 279.9, -41.6849, 0.37 ) }
    dend_24 { pt3dadd( 99.8144, 281.184, -41.2275, 0.37 ) }
    dend_24 { pt3dadd( 100.269, 281.591, -41.1018, 0.37 ) }
    dend_24 { pt3dadd( 101.062, 282.142, -40.9548, 0.29 ) }
    dend_24 { pt3dadd( 101.639, 282.468, -40.8616, 0.29 ) }
    dend_24 { pt3dadd( 102.389, 282.856, -40.725, 0.74 ) }
    dend_24 { pt3dadd( 103.087, 283.239, -40.5821, 0.96 ) }
    dend_24 { pt3dadd( 103.634, 283.532, -40.499, 0.52 ) }
    dend_24 { pt3dadd( 104.521, 284.043, -40.3599, 0.44 ) }
    dend_24 { pt3dadd( 105.372, 284.587, -40.1905, 0.37 ) }
    dend_24 { pt3dadd( 105.841, 284.999, -40.0615, 0.29 ) }
    dend_24 { pt3dadd( 106.348, 285.623, -39.8757, 0.29 ) }
    dend_24 { pt3dadd( 106.649, 286.092, -39.7563, 0.29 ) }
    dend_24 { pt3dadd( 107.143, 286.847, -39.5829, 0.74 ) }
    dend_24 { pt3dadd( 107.697, 287.622, -39.4253, 1.11 ) }
    dend_24 { pt3dadd( 108.237, 288.293, -39.3143, 1.11 ) }
    dend_24 { pt3dadd( 108.762, 288.855, -39.2365, 0.81 ) }
    dend_24 { pt3dadd( 109.851, 289.872, -39.105, 0.37 ) }
    dend_24 { pt3dadd( 110.781, 290.683, -39.0053, 0.37 ) }
    dend_24 { pt3dadd( 111.392, 291.21, -38.9198, 0.37 ) }
    dend_24 { pt3dadd( 111.918, 291.685, -38.852, 0.37 ) }
    dend_24 { pt3dadd( 112.244, 292.001, -38.8042, 1.03 ) }
    dend_24 { pt3dadd( 112.767, 292.568, -38.6975, 1.33 ) }
    dend_24 { pt3dadd( 113.009, 292.868, -38.6179, 1.33 ) }
    dend_24 { pt3dadd( 113.914, 294.207, -38.1047, 0.29 ) }
    dend_24 { pt3dadd( 114.455, 295.116, -37.6842, 0.29 ) }
    dend_24 { pt3dadd( 114.997, 296.098, -37.1832, 0.88 ) }
    dend_24 { pt3dadd( 115.305, 296.709, -36.8626, 0.88 ) }
    dend_24 { pt3dadd( 115.747, 297.633, -36.3815, 0.74 ) }
    dend_24 { pt3dadd( 116.44, 299.042, -35.7009, 0.66 ) }
    dend_24 { pt3dadd( 116.776, 299.742, -35.4393, 0.74 ) }
    dend_24 { pt3dadd( 117.218, 300.748, -35.1788, 0.44 ) }
    dend_24 { pt3dadd( 117.504, 301.514, -35.1104, 0.44 ) }
    dend_24 { pt3dadd( 117.81, 302.477, -35.1941, 0.37 ) }
    dend_24 { pt3dadd( 118.243, 304.074, -35.5613, 0.37 ) }
    dend_24 { pt3dadd( 118.602, 305.411, -36.0031, 0.37 ) }
    dend_24 { pt3dadd( 118.886, 306.525, -36.4313, 0.37 ) }
    dend_24 { pt3dadd( 119.157, 307.849, -37.0179, 1.77 ) }
    dend_24 { pt3dadd( 119.252, 308.599, -37.3876, 1.77 ) }
    dend_24 { pt3dadd( 119.244, 309.229, -37.7279, 1.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 98.6599, 279.9, -41.6849, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( 99.5541, 281.087, -44.0689, 1.11 ) }
    dend_17 { pt3dadd( 100.562, 282.142, -46.4745, 0.74 ) }
    dend_17 { pt3dadd( 101.088, 282.509, -47.64, 0.29 ) }
    dend_17 { pt3dadd( 101.641, 282.869, -48.9601, 0.44 ) }
    dend_17 { pt3dadd( 102.18, 283.297, -50.4027, 0.37 ) }
    dend_17 { pt3dadd( 102.834, 283.921, -52.2233, 0.74 ) }
    dend_17 { pt3dadd( 103.089, 284.253, -52.9484, 0.88 ) }
    dend_17 { pt3dadd( 103.767, 285.055, -54.6872, 0.29 ) }
    dend_17 { pt3dadd( 104.375, 285.676, -56.0872, 0.44 ) }
    dend_17 { pt3dadd( 105.088, 286.317, -57.4411, 0.29 ) }
    dend_17 { pt3dadd( 105.537, 286.73, -58.2478, 0.96 ) }
    dend_17 { pt3dadd( 105.925, 287.142, -58.8659, 1.25 ) }
    dend_17 { pt3dadd( 106.195, 287.425, -59.2444, 1.25 ) }
    dend_17 { pt3dadd( 107.383, 288.59, -60.6011, 0.37 ) }
    dend_17 { pt3dadd( 108.078, 289.161, -61.256, 0.74 ) }
    dend_17 { pt3dadd( 109.604, 290.238, -62.5393, 0.88 ) }
    dend_17 { pt3dadd( 110.136, 290.592, -62.9661, 1.11 ) }
    dend_17 { pt3dadd( 110.914, 291.112, -63.5459, 0.52 ) }
    dend_17 { pt3dadd( 111.457, 291.487, -63.9055, 0.52 ) }
    dend_17 { pt3dadd( 112.072, 291.926, -64.2427, 0.29 ) }
    dend_17 { pt3dadd( 112.608, 292.289, -64.5109, 0.29 ) }
    dend_17 { pt3dadd( 113.505, 292.814, -64.8713, 1.25 ) }
    dend_17 { pt3dadd( 113.723, 292.934, -64.9662, 1.55 ) }
    dend_17 { pt3dadd( 114.116, 293.141, -65.1435, 1.55 ) }
    dend_17 { pt3dadd( 115.118, 293.637, -65.6084, 0.37 ) }
    dend_17 { pt3dadd( 116.273, 294.148, -66.1184, 0.44 ) }
    dend_17 { pt3dadd( 117.232, 294.521, -66.4994, 0.81 ) }
    dend_17 { pt3dadd( 117.451, 294.587, -66.5718, 1.11 ) }
    dend_17 { pt3dadd( 118.163, 294.782, -66.7951, 1.11 ) }
    dend_17 { pt3dadd( 119.428, 295.071, -67.1388, 0.29 ) }
    dend_17 { pt3dadd( 120.559, 295.258, -67.3527, 0.37 ) }
    dend_17 { pt3dadd( 121.312, 295.306, -67.4589, 0.37 ) }
    dend_17 { pt3dadd( 122.127, 295.288, -67.5785, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -63.9287, 122.351, -94.2864, 0.44 ) }
    dend_7 { pt3dadd( -62.844, 123.291, -94.5587, 0.44 ) }
    dend_7 { pt3dadd( -61.9056, 124.188, -94.9724, 0.29 ) }
    dend_7 { pt3dadd( -61.3901, 124.752, -95.2829, 0.44 ) }
    dend_7 { pt3dadd( -60.8237, 125.469, -95.6861, 0.44 ) }
    dend_7 { pt3dadd( -60.4586, 126.004, -95.9733, 0.81 ) }
    dend_7 { pt3dadd( -59.9925, 126.769, -96.3833, 0.81 ) }
    dend_7 { pt3dadd( -59.5415, 127.694, -96.976, 0.52 ) }
    dend_7 { pt3dadd( -59.3741, 128.287, -97.3992, 0.37 ) }
    dend_7 { pt3dadd( -59.279, 128.919, -97.8587, 0.37 ) }
    dend_7 { pt3dadd( -59.2301, 129.55, -98.3321, 0.81 ) }
    dend_7 { pt3dadd( -59.1835, 130.13, -98.764, 0.88 ) }
    dend_7 { pt3dadd( -59.0467, 131.037, -99.4176, 0.88 ) }
    dend_7 { pt3dadd( -58.7283, 131.973, -100.184, 0.52 ) }
    dend_7 { pt3dadd( -58.4985, 132.347, -100.575, 0.81 ) }
    dend_7 { pt3dadd( -57.7688, 133.084, -101.534, 0.52 ) }
    dend_7 { pt3dadd( -57.2571, 133.451, -102.075, 0.52 ) }
    dend_7 { pt3dadd( -56.5255, 133.857, -102.688, 0.52 ) }
    dend_7 { pt3dadd( -54.9685, 134.575, -103.782, 0.52 ) }
    dend_7 { pt3dadd( -54.1896, 134.909, -104.351, 0.52 ) }
    dend_7 { pt3dadd( -53.4694, 135.201, -104.915, 0.81 ) }
    dend_7 { pt3dadd( -52.9285, 135.423, -105.346, 1.03 ) }
    dend_7 { pt3dadd( -52.3925, 135.656, -105.79, 0.59 ) }
    dend_7 { pt3dadd( -51.3066, 136.19, -106.701, 0.66 ) }
    dend_7 { pt3dadd( -49.5032, 137.251, -108.142, 0.52 ) }
    dend_7 { pt3dadd( -48.8252, 137.709, -108.68, 0.52 ) }
    dend_7 { pt3dadd( -48.0505, 138.32, -109.345, 1.11 ) }
    dend_7 { pt3dadd( -47.6891, 138.675, -109.673, 1.11 ) }
    dend_7 { pt3dadd( -47.3951, 138.995, -109.942, 1.25 ) }
    dend_7 { pt3dadd( -46.8482, 139.746, -110.379, 0.66 ) }
    dend_7 { pt3dadd( -46.4427, 140.631, -110.606, 0.44 ) }
    dend_7 { pt3dadd( -46.2528, 141.382, -110.751, 0.44 ) }
    dend_7 { pt3dadd( -46.1647, 142.639, -110.981, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -63.9287, 122.351, -94.2864, 0.44 ) }
    dend_6 { pt3dadd( -64.8107, 123.504, -95.8864, 0.44 ) }
    dend_6 { pt3dadd( -65.2199, 123.998, -96.6253, 0.37 ) }
    dend_6 { pt3dadd( -65.6745, 124.532, -97.4387, 0.37 ) }
    dend_6 { pt3dadd( -66.0697, 124.963, -98.0514, 0.88 ) }
    dend_6 { pt3dadd( -66.534, 125.443, -98.6836, 0.88 ) }
    dend_6 { pt3dadd( -67.3739, 126.231, -99.6776, 0.59 ) }
    dend_6 { pt3dadd( -68.1912, 126.977, -100.534, 0.22 ) }
    dend_6 { pt3dadd( -68.6761, 127.384, -101.076, 0.66 ) }
    dend_6 { pt3dadd( -69.3758, 127.927, -101.876, 0.37 ) }
    dend_6 { pt3dadd( -69.7719, 128.227, -102.325, 0.29 ) }
    dend_6 { pt3dadd( -70.4748, 128.821, -103.246, 0.29 ) }
    dend_6 { pt3dadd( -71.1391, 129.525, -104.361, 0.66 ) }
    dend_6 { pt3dadd( -71.7795, 130.417, -105.878, 1.03 ) }
    dend_6 { pt3dadd( -71.9361, 130.681, -106.332, 1.33 ) }
    dend_6 { pt3dadd( -72.0332, 130.872, -106.663, 1.33 ) }
    dend_6 { pt3dadd( -72.4382, 131.75, -108.161, 0.44 ) }
    dend_6 { pt3dadd( -72.8343, 132.659, -109.718, 0.29 ) }
    dend_6 { pt3dadd( -73.0693, 133.222, -110.655, 0.59 ) }
    dend_6 { pt3dadd( -73.2574, 133.694, -111.446, 0.59 ) }
    dend_6 { pt3dadd( -73.3493, 133.953, -111.88, 0.88 ) }
    dend_6 { pt3dadd( -73.51, 134.41, -112.639, 0.88 ) }
    dend_6 { pt3dadd( -73.9835, 135.52, -114.475, 0.29 ) }
    dend_6 { pt3dadd( -74.125, 135.915, -115.108, 0.29 ) }
    dend_6 { pt3dadd( -74.2214, 136.257, -115.636, 0.29 ) }
    dend_6 { pt3dadd( -74.3463, 136.792, -116.466, 0.96 ) }
    dend_6 { pt3dadd( -74.4444, 137.195, -117.061, 0.96 ) }
    dend_6 { pt3dadd( -74.8252, 138.461, -118.716, 0.29 ) }
    dend_6 { pt3dadd( -75.1145, 139.163, -119.495, 0.29 ) }
    dend_6 { pt3dadd( -75.2695, 139.442, -119.789, 0.29 ) }
    dend_6 { pt3dadd( -75.6104, 139.993, -120.307, 0.29 ) }
    dend_6 { pt3dadd( -75.9181, 140.47, -120.721, 0.29 ) }
    dend_6 { pt3dadd( -76.2562, 141.022, -121.151, 0.81 ) }
    dend_6 { pt3dadd( -76.5349, 141.505, -121.512, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -77.2156, 142.7, -122.498, 0.29 ) }
    dend_6 { pt3dadd( -77.5624, 143.329, -123.031, 0.59 ) }
    dend_6 { pt3dadd( -77.8172, 143.814, -123.434, 0.59 ) }
    dend_6 { pt3dadd( -78.0803, 144.332, -123.852, 0.29 ) }
    dend_6 { pt3dadd( -78.4828, 145.168, -124.518, 0.29 ) }
    dend_6 { pt3dadd( -78.7422, 145.797, -125.006, 0.29 ) }
    dend_6 { pt3dadd( -79.0115, 146.519, -125.536, 0.29 ) }
    dend_6 { pt3dadd( -79.2306, 147.099, -125.988, 0.29 ) }
    dend_6 { pt3dadd( -79.501, 147.845, -126.544, 0.29 ) }
    dend_6 { pt3dadd( -79.6311, 148.208, -126.787, 0.29 ) }
    dend_6 { pt3dadd( -79.9907, 149.171, -127.369, 0.88 ) }
    dend_6 { pt3dadd( -80.1347, 149.602, -127.611, 1.11 ) }
    dend_6 { pt3dadd( -80.5456, 151.192, -128.462, 0.29 ) }
    dend_6 { pt3dadd( -80.6811, 151.799, -128.817, 0.59 ) }
    dend_6 { pt3dadd( -80.8542, 152.599, -129.332, 0.29 ) }
    dend_6 { pt3dadd( -80.9582, 153.0, -129.599, 0.29 ) }
    dend_6 { pt3dadd( -81.1234, 153.623, -129.986, 0.29 ) }
    dend_6 { pt3dadd( -81.2438, 154.142, -130.281, 0.29 ) }
    dend_6 { pt3dadd( -81.5392, 155.288, -130.945, 0.66 ) }
    dend_6 { pt3dadd( -81.7437, 155.831, -131.314, 0.66 ) }
    dend_6 { pt3dadd( -82.186, 156.882, -132.179, 0.37 ) }
    dend_6 { pt3dadd( -82.4615, 157.492, -132.733, 0.37 ) }
    dend_6 { pt3dadd( -82.922, 158.29, -133.517, 0.37 ) }
    dend_6 { pt3dadd( -83.4971, 159.135, -134.369, 0.37 ) }
    dend_6 { pt3dadd( -84.1033, 159.972, -135.147, 0.37 ) }
    dend_6 { pt3dadd( -85.0178, 161.179, -136.246, 0.29 ) }
    dend_6 { pt3dadd( -85.2871, 161.511, -136.574, 0.29 ) }
    dend_6 { pt3dadd( -85.9766, 162.294, -137.42, 0.29 ) }
    dend_6 { pt3dadd( -86.296, 162.65, -137.817, 0.29 ) }
    dend_6 { pt3dadd( -86.9618, 163.526, -138.632, 1.4 ) }
    dend_6 { pt3dadd( -87.1057, 163.748, -138.789, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 35.3179, -186.479, 9.72808, 0.37 ) }
    dend_49 { pt3dadd( 43.6592, -191.684, 8.3422, 0.37 ) }
    dend_49 { pt3dadd( 51.3731, -197.532, 6.21503, 0.37 ) }
    dend_49 { pt3dadd( 59.5525, -202.776, 4.17318, 0.37 ) }
    dend_49 { pt3dadd( 67.1104, -208.385, 1.04479, 0.37 ) }
    dend_49 { pt3dadd( 74.4812, -214.578, -1.26149, 0.37 ) }
    dend_49 { pt3dadd( 82.5039, -219.387, -4.62508, 0.37 ) }
    dend_49 { pt3dadd( 89.6063, -224.334, -9.50437, 0.37 ) }
    dend_49 { pt3dadd( 96.6707, -230.384, -12.9097, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 35.3179, -186.479, 9.72808, 0.22 ) }
    dend_48 { pt3dadd( 43.5059, -191.71, 7.68576, 0.37 ) }
    dend_48 { pt3dadd( 52.5266, -195.738, 6.43789, 0.37 ) }
    dend_48 { pt3dadd( 61.0862, -199.899, 3.5183, 0.37 ) }
    dend_48 { pt3dadd( 69.7421, -202.769, -0.53226, 0.37 ) }
    dend_48 { pt3dadd( 77.8645, -206.589, -4.85436, 0.37 ) }
    dend_48 { pt3dadd( 86.2407, -211.057, -7.8266, 0.37 ) }
    dend_48 { pt3dadd( 94.2041, -216.864, -8.88597, 0.37 ) }
    dend_48 { pt3dadd( 102.124, -222.444, -11.0145, 0.37 ) }
    dend_48 { pt3dadd( 111.401, -225.963, -11.9628, 0.37 ) }
    dend_48 { pt3dadd( 120.273, -230.46, -12.0523, 0.37 ) }
    dend_48 { pt3dadd( 129.816, -232.948, -10.4932, 0.37 ) }
    dend_48 { pt3dadd( 139.46, -234.646, -8.50241, 0.37 ) }
    dend_48 { pt3dadd( 148.762, -234.901, -4.84268, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 25.5296, -182.194, 24.2862, 0.37 ) }
    dend_46 { pt3dadd( 33.0561, -187.613, 27.8175, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 25.5296, -182.194, 24.2862, 0.22 ) }
    dend_43 { pt3dadd( 33.5682, -187.847, 25.6165, 0.37 ) }
    dend_43 { pt3dadd( 41.1917, -193.685, 28.0723, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -45.3701, -187.678, 2.79143, 0.37 ) }
    dend_38 { pt3dadd( -41.4396, -196.637, 3.13332, 0.37 ) }
    dend_38 { pt3dadd( -35.376, -204.202, 4.87313, 0.37 ) }
    dend_38 { pt3dadd( -29.5739, -211.714, 7.5135, 0.37 ) }
    dend_38 { pt3dadd( -23.4498, -218.889, 10.4025, 0.37 ) }
    dend_38 { pt3dadd( -17.1039, -224.847, 15.1338, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -45.3701, -187.678, 2.79143, 0.22 ) }
    dend_37 { pt3dadd( -41.704, -196.68, 1.64538, 0.37 ) }
    dend_37 { pt3dadd( -38.8737, -205.704, -0.869019, 0.37 ) }
    dend_37 { pt3dadd( -37.0689, -215.213, -2.14, 0.37 ) }
    dend_37 { pt3dadd( -36.0098, -224.83, -3.40391, 0.37 ) }
    dend_37 { pt3dadd( -33.3574, -234.231, -3.44787, 0.37 ) }
    dend_37 { pt3dadd( -29.9172, -243.267, -1.94017, 0.37 ) }
    dend_37 { pt3dadd( -26.7673, -251.952, 1.33435, 0.37 ) }
    dend_37 { pt3dadd( -24.9937, -260.645, 5.50208, 0.37 ) }
    dend_37 { pt3dadd( -24.452, -268.699, 11.1109, 0.37 ) }
    dend_37 { pt3dadd( -25.4877, -277.265, 15.7748, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 119.244, 309.229, -37.7279, 0.29 ) }
    dend_28 { pt3dadd( 120.613, 311.379, -39.904, 0.29 ) }
    dend_28 { pt3dadd( 121.084, 312.15, -40.595, 0.29 ) }
    dend_28 { pt3dadd( 121.46, 312.857, -41.1064, 0.29 ) }
    dend_28 { pt3dadd( 121.694, 313.377, -41.4113, 0.29 ) }
    dend_28 { pt3dadd( 122.078, 314.365, -41.9077, 0.74 ) }
    dend_28 { pt3dadd( 122.19, 314.682, -42.0442, 0.74 ) }
    dend_28 { pt3dadd( 122.588, 316.074, -42.3899, 0.22 ) }
    dend_28 { pt3dadd( 122.937, 317.347, -42.7072, 0.22 ) }
    dend_28 { pt3dadd( 123.168, 318.438, -42.9611, 0.22 ) }
    dend_28 { pt3dadd( 123.28, 319.077, -43.0888, 0.52 ) }
    dend_28 { pt3dadd( 123.454, 320.122, -43.2246, 0.22 ) }
    dend_28 { pt3dadd( 123.516, 320.54, -43.2665, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 119.244, 309.229, -37.7279, 0.44 ) }
    dend_25 { pt3dadd( 118.95, 310.696, -36.9782, 0.44 ) }
    dend_25 { pt3dadd( 118.822, 311.809, -36.4331, 0.44 ) }
    dend_25 { pt3dadd( 118.709, 313.007, -35.875, 0.44 ) }
    dend_25 { pt3dadd( 118.644, 313.815, -35.5166, 0.44 ) }
    dend_25 { pt3dadd( 118.563, 314.788, -35.1166, 0.37 ) }
    dend_25 { pt3dadd( 118.513, 315.363, -34.8988, 0.37 ) }
    dend_25 { pt3dadd( 118.49, 316.387, -34.4444, 0.88 ) }
    dend_25 { pt3dadd( 118.504, 316.772, -34.2956, 1.47 ) }
    dend_25 { pt3dadd( 118.517, 317.189, -34.1764, 1.47 ) }
    dend_25 { pt3dadd( 118.497, 318.293, -33.9455, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 118.42, 318.919, -33.849, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 122.127, 295.288, -67.5785, 0.29 ) }
    dend_23 { pt3dadd( 122.595, 295.686, -67.6808, 0.29 ) }
    dend_23 { pt3dadd( 123.32, 296.236, -67.8814, 0.81 ) }
    dend_23 { pt3dadd( 123.847, 296.586, -68.0405, 0.81 ) }
    dend_23 { pt3dadd( 124.585, 296.994, -68.2963, 0.22 ) }
    dend_23 { pt3dadd( 125.009, 297.196, -68.4639, 0.59 ) }
    dend_23 { pt3dadd( 126.423, 297.775, -69.0493, 0.22 ) }
    dend_23 { pt3dadd( 127.399, 298.103, -69.5042, 0.81 ) }
    dend_23 { pt3dadd( 127.899, 298.253, -69.7688, 0.81 ) }
    dend_23 { pt3dadd( 128.88, 298.561, -70.3567, 0.29 ) }
    dend_23 { pt3dadd( 129.914, 298.938, -71.0308, 0.29 ) }
    dend_23 { pt3dadd( 131.054, 299.449, -71.8236, 0.22 ) }
    dend_23 { pt3dadd( 131.723, 299.816, -72.3002, 0.22 ) }
    dend_23 { pt3dadd( 132.552, 300.399, -72.9591, 0.81 ) }
    dend_23 { pt3dadd( 133.517, 301.252, -73.7592, 0.22 ) }
    dend_23 { pt3dadd( 134.156, 301.97, -74.307, 0.22 ) }
    dend_23 { pt3dadd( 134.697, 302.69, -74.8024, 0.44 ) }
    dend_23 { pt3dadd( 135.037, 303.241, -75.1427, 0.15 ) }
    dend_23 { pt3dadd( 135.321, 303.753, -75.4183, 0.22 ) }
    dend_23 { pt3dadd( 135.719, 304.566, -75.7841, 0.15 ) }
    dend_23 { pt3dadd( 135.995, 305.132, -75.9914, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 122.127, 295.288, -67.5785, 0.22 ) }
    dend_18 { pt3dadd( 123.827, 295.885, -68.0962, 0.22 ) }
    dend_18 { pt3dadd( 124.457, 296.106, -68.288, 0.81 ) }
    dend_18 { pt3dadd( 125.137, 296.344, -68.495, 0.52 ) }
    dend_18 { pt3dadd( 126.545, 296.839, -68.9239, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -46.1647, 142.639, -110.981, 0.37 ) }
    dend_9 { pt3dadd( -45.3771, 144.174, -111.637, 0.37 ) }
    dend_9 { pt3dadd( -44.8217, 145.435, -112.289, 0.37 ) }
    dend_9 { pt3dadd( -44.3995, 146.394, -112.785, 0.37 ) }
    dend_9 { pt3dadd( -43.9506, 147.414, -113.312, 0.81 ) }
    dend_9 { pt3dadd( -43.7419, 147.888, -113.557, 0.81 ) }
    dend_9 { pt3dadd( -43.2025, 149.114, -114.191, 0.52 ) }
    dend_9 { pt3dadd( -42.9589, 150.106, -114.755, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -46.1647, 142.639, -110.981, 0.29 ) }
    dend_8 { pt3dadd( -45.8663, 143.782, -111.229, 0.29 ) }
    dend_8 { pt3dadd( -45.653, 144.599, -111.407, 0.88 ) }
    dend_8 { pt3dadd( -45.4233, 145.478, -111.598, 0.29 ) }
    dend_8 { pt3dadd( -45.2563, 146.118, -111.737, 0.88 ) }
    dend_8 { pt3dadd( -45.064, 146.854, -111.897, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 41.1917, -193.685, 28.0723, 0.37 ) }
    dend_45 { pt3dadd( 49.2245, -199.475, 28.532, 0.37 ) }
    dend_45 { pt3dadd( 57.2274, -205.318, 28.3281, 0.37 ) }
    dend_45 { pt3dadd( 63.9833, -212.499, 28.6613, 0.37 ) }
    dend_45 { pt3dadd( 70.3667, -219.993, 29.0804, 0.37 ) }
    dend_45 { pt3dadd( 76.2255, -227.789, 30.397, 0.37 ) }
    dend_45 { pt3dadd( 81.9594, -235.213, 33.4211, 0.37 ) }
    dend_45 { pt3dadd( 87.9047, -242.373, 36.6966, 0.37 ) }
    dend_45 { pt3dadd( 93.3032, -249.256, 41.2817, 0.37 ) }
    dend_45 { pt3dadd( 99.1626, -255.933, 45.6134, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 41.1917, -193.685, 28.0723, 0.22 ) }
    dend_44 { pt3dadd( 49.0069, -199.43, 30.1224, 0.37 ) }
    dend_44 { pt3dadd( 55.6816, -206.508, 31.779, 0.37 ) }
    dend_44 { pt3dadd( 62.6885, -213.272, 33.4477, 0.37 ) }
    dend_44 { pt3dadd( 69.6572, -219.886, 35.774, 0.37 ) }
    dend_44 { pt3dadd( 77.3118, -225.933, 37.4889, 0.37 ) }
    dend_44 { pt3dadd( 85.6099, -230.664, 40.2453, 0.37 ) }
    dend_44 { pt3dadd( 93.188, -235.262, 44.7548, 0.37 ) }
    dend_44 { pt3dadd( 100.977, -237.971, 50.3777, 0.37 ) }
    dend_44 { pt3dadd( 108.482, -238.839, 56.9263, 0.37 ) }
    dend_44 { pt3dadd( 115.226, -240.799, 64.0312, 0.37 ) }
    dend_44 { pt3dadd( 122.122, -243.95, 70.5117, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 118.42, 318.919, -33.849, 0.29 ) }
    dend_27 { pt3dadd( 117.804, 320.235, -33.849, 0.29 ) }
    dend_27 { pt3dadd( 117.359, 321.101, -33.849, 0.29 ) }
    dend_27 { pt3dadd( 117.07, 321.646, -33.849, 0.66 ) }
    dend_27 { pt3dadd( 116.972, 321.838, -33.848, 0.66 ) }
    dend_27 { pt3dadd( 116.659, 322.545, -33.8422, 0.22 ) }
    dend_27 { pt3dadd( 116.353, 323.349, -33.8343, 0.22 ) }
    dend_27 { pt3dadd( 116.165, 323.971, -33.8261, 0.22 ) }
    dend_27 { pt3dadd( 116.091, 324.321, -33.8216, 0.59 ) }
    dend_27 { pt3dadd( 116.05, 324.758, -33.8165, 0.59 ) }
    dend_27 { pt3dadd( 116.03, 325.71, -33.8065, 0.29 ) }
    dend_27 { pt3dadd( 116.055, 326.353, -33.7762, 0.88 ) }
    dend_27 { pt3dadd( 116.092, 326.916, -33.7382, 0.88 ) }
    dend_27 { pt3dadd( 116.215, 328.648, -33.6113, 0.29 ) }
    dend_27 { pt3dadd( 116.278, 329.542, -33.5407, 0.29 ) }
    dend_27 { pt3dadd( 116.31, 330.058, -33.4959, 0.59 ) }
    dend_27 { pt3dadd( 116.391, 331.662, -33.3276, 0.29 ) }
    dend_27 { pt3dadd( 116.433, 332.458, -33.2274, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 118.42, 318.919, -33.849, 0.29 ) }
    dend_26 { pt3dadd( 118.555, 320.097, -33.7537, 0.29 ) }
    dend_26 { pt3dadd( 118.804, 321.205, -33.5879, 0.29 ) }
    dend_26 { pt3dadd( 119.022, 321.985, -33.4538, 0.29 ) }
    dend_26 { pt3dadd( 119.419, 323.249, -33.2406, 0.29 ) }
    dend_26 { pt3dadd( 119.642, 323.918, -33.1303, 0.29 ) }
    dend_26 { pt3dadd( 120.009, 324.983, -32.9592, 0.29 ) }
    dend_26 { pt3dadd( 120.428, 326.142, -32.7671, 1.03 ) }
    dend_26 { pt3dadd( 120.786, 327.011, -32.5951, 1.69 ) }
    dend_26 { pt3dadd( 121.316, 328.159, -32.346, 0.22 ) }
    dend_26 { pt3dadd( 121.583, 328.699, -32.2252, 0.52 ) }
    dend_26 { pt3dadd( 121.723, 328.985, -32.1616, 0.59 ) }
    dend_26 { pt3dadd( 122.102, 329.825, -31.9293, 0.22 ) }
    dend_26 { pt3dadd( 122.462, 330.633, -31.6379, 0.52 ) }
    dend_26 { pt3dadd( 122.679, 331.1, -31.3925, 0.66 ) }
    dend_26 { pt3dadd( 122.969, 331.68, -30.962, 0.22 ) }
    dend_26 { pt3dadd( 123.167, 332.016, -30.6661, 0.22 ) }
    dend_26 { pt3dadd( 123.84, 332.992, -29.723, 0.66 ) }
    dend_26 { pt3dadd( 124.244, 333.479, -29.188, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 124.729, 333.956, -28.6113, 1.03 ) }
    dend_26 { pt3dadd( 125.444, 334.628, -27.8221, 0.29 ) }
    dend_26 { pt3dadd( 125.906, 335.078, -27.3374, 0.37 ) }
    dend_26 { pt3dadd( 126.283, 335.485, -26.963, 0.37 ) }
    dend_26 { pt3dadd( 126.851, 336.134, -26.4846, 0.29 ) }
    dend_26 { pt3dadd( 127.315, 336.649, -26.1474, 0.29 ) }
    dend_26 { pt3dadd( 127.75, 337.146, -25.8564, 0.29 ) }
    dend_26 { pt3dadd( 128.114, 337.647, -25.6244, 0.66 ) }
    dend_26 { pt3dadd( 128.397, 338.148, -25.4164, 0.66 ) }
    dend_26 { pt3dadd( 128.749, 338.992, -25.0916, 0.29 ) }
    dend_26 { pt3dadd( 128.927, 339.675, -24.8749, 0.29 ) }
    dend_26 { pt3dadd( 129.005, 340.131, -24.7449, 0.29 ) }
    dend_26 { pt3dadd( 129.108, 340.959, -24.5388, 0.66 ) }
    dend_26 { pt3dadd( 129.155, 341.518, -24.4068, 0.74 ) }
    dend_26 { pt3dadd( 129.246, 342.949, -24.1732, 0.29 ) }
    dend_26 { pt3dadd( 129.303, 344.119, -24.0503, 0.29 ) }
    dend_26 { pt3dadd( 129.354, 345.055, -24.0121, 0.88 ) }
    dend_26 { pt3dadd( 129.391, 345.482, -24.0219, 1.03 ) }
    dend_26 { pt3dadd( 129.498, 346.269, -24.0937, 0.74 ) }
    dend_26 { pt3dadd( 129.736, 347.564, -24.3047, 0.29 ) }
    dend_26 { pt3dadd( 129.874, 348.213, -24.5028, 0.59 ) }
    dend_26 { pt3dadd( 130.052, 349.027, -24.8246, 0.29 ) }
    dend_26 { pt3dadd( 130.178, 349.732, -25.1529, 0.59 ) }
    dend_26 { pt3dadd( 130.238, 350.196, -25.4017, 0.29 ) }
    dend_26 { pt3dadd( 130.276, 350.82, -25.7509, 0.81 ) }
    dend_26 { pt3dadd( 130.283, 352.146, -26.4227, 0.29 ) }
    dend_26 { pt3dadd( 130.252, 352.978, -26.8236, 0.29 ) }
    dend_26 { pt3dadd( 130.217, 353.643, -27.131, 0.29 ) }
    dend_26 { pt3dadd( 130.167, 354.494, -27.5272, 0.22 ) }
    dend_26 { pt3dadd( 130.072, 355.981, -28.1782, 0.22 ) }
    dend_26 { pt3dadd( 129.92, 357.915, -28.9307, 0.22 ) }
    dend_26 { pt3dadd( 129.788, 359.521, -29.4965, 0.22 ) }
    dend_26 { pt3dadd( 129.668, 360.992, -29.9828, 0.74 ) }
    dend_26 { pt3dadd( 129.612, 361.713, -30.2038, 0.96 ) }
    dend_26 { pt3dadd( 129.505, 363.151, -30.6055, 0.22 ) }
    dend_26 { pt3dadd( 129.385, 364.605, -31.0115, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 126.545, 296.839, -68.9239, 0.22 ) }
    dend_22 { pt3dadd( 126.549, 298.406, -68.9995, 0.22 ) }
    dend_22 { pt3dadd( 126.55, 298.989, -69.0277, 0.37 ) }
    dend_22 { pt3dadd( 126.552, 300.138, -69.0832, 0.22 ) }
    dend_22 { pt3dadd( 126.554, 301.001, -69.1248, 0.22 ) }
    dend_22 { pt3dadd( 126.556, 302.126, -69.1791, 0.22 ) }
    dend_22 { pt3dadd( 126.559, 303.321, -69.2368, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 43/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 126.545, 296.839, -68.9239, 0.22 ) }
    dend_19 { pt3dadd( 128.041, 296.298, -70.2321, 0.22 ) }
    dend_19 { pt3dadd( 128.578, 296.104, -70.7014, 0.22 ) }
    dend_19 { pt3dadd( 129.202, 295.879, -71.2473, 0.52 ) }
    dend_19 { pt3dadd( 129.919, 295.619, -71.8751, 1.11 ) }
    dend_19 { pt3dadd( 130.621, 295.366, -72.4885, 0.81 ) }
    dend_19 { pt3dadd( 131.385, 295.089, -73.1576, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -42.9589, 150.106, -114.755, 0.59 ) }
    dend_11 { pt3dadd( -43.1339, 152.021, -115.064, 0.59 ) }
    dend_11 { pt3dadd( -43.1656, 152.588, -115.203, 0.88 ) }
    dend_11 { pt3dadd( -43.2358, 153.697, -115.507, 0.29 ) }
    dend_11 { pt3dadd( -43.2946, 154.562, -115.752, 0.29 ) }
    dend_11 { pt3dadd( -43.3715, 155.456, -115.999, 0.37 ) }
    dend_11 { pt3dadd( -43.4576, 156.285, -116.221, 0.37 ) }
    dend_11 { pt3dadd( -43.6621, 157.779, -116.572, 0.29 ) }
    dend_11 { pt3dadd( -43.7725, 158.426, -116.75, 0.29 ) }
    dend_11 { pt3dadd( -43.9659, 159.524, -117.076, 0.29 ) }
    dend_11 { pt3dadd( -44.0784, 160.28, -117.296, 0.96 ) }
    dend_11 { pt3dadd( -44.154, 160.8, -117.434, 0.96 ) }
    dend_11 { pt3dadd( -44.2256, 161.334, -117.552, 0.74 ) }
    dend_11 { pt3dadd( -44.379, 162.603, -117.746, 0.29 ) }
    dend_11 { pt3dadd( -44.4915, 163.705, -117.922, 0.29 ) }
    dend_11 { pt3dadd( -44.5577, 164.44, -118.035, 0.29 ) }
    dend_11 { pt3dadd( -44.6156, 165.302, -118.15, 0.74 ) }
    dend_11 { pt3dadd( -44.6354, 165.651, -118.188, 0.74 ) }
    dend_11 { pt3dadd( -44.658, 166.113, -118.225, 0.44 ) }
    dend_11 { pt3dadd( -44.7382, 167.209, -118.292, 0.29 ) }
    dend_11 { pt3dadd( -44.8437, 168.06, -118.331, 0.29 ) }
    dend_11 { pt3dadd( -45.0654, 169.821, -118.349, 0.29 ) }
    dend_11 { pt3dadd( -45.1461, 170.607, -118.328, 0.96 ) }
    dend_11 { pt3dadd( -45.1818, 171.175, -118.28, 0.59 ) }
    dend_11 { pt3dadd( -45.1879, 171.933, -118.165, 0.29 ) }
    dend_11 { pt3dadd( -45.1533, 173.0, -117.929, 0.22 ) }
    dend_11 { pt3dadd( -45.0971, 174.022, -117.65, 0.22 ) }
    dend_11 { pt3dadd( -45.0542, 174.608, -117.459, 0.22 ) }
    dend_11 { pt3dadd( -45.0023, 175.518, -117.186, 0.22 ) }
    dend_11 { pt3dadd( -44.9616, 176.337, -116.978, 0.22 ) }
    dend_11 { pt3dadd( -44.8961, 177.115, -116.829, 0.81 ) }
    dend_11 { pt3dadd( -44.8737, 177.327, -116.81, 1.18 ) }
    dend_11 { pt3dadd( -44.8307, 177.843, -116.842, 1.18 ) }
    dend_11 { pt3dadd( -44.7596, 179.02, -117.049, 0.29 ) }
    dend_11 { pt3dadd( -44.7159, 179.659, -117.222, 0.29 ) }
    dend_11 { pt3dadd( -44.6266, 180.429, -117.46, 0.66 ) }
    dend_11 { pt3dadd( -44.5782, 180.695, -117.544, 0.66 ) }
    dend_11 { pt3dadd( -44.326, 181.823, -117.958, 0.37 ) }
    dend_11 { pt3dadd( -44.1818, 182.485, -118.225, 0.37 ) }
    dend_11 { pt3dadd( -44.0821, 183.157, -118.507, 0.37 ) }
    dend_11 { pt3dadd( -44.0623, 183.682, -118.751, 0.74 ) }
    dend_11 { pt3dadd( -44.0867, 184.228, -119.027, 0.74 ) }
    dend_11 { pt3dadd( -44.1608, 185.385, -119.641, 0.29 ) }
    dend_11 { pt3dadd( -44.1859, 186.108, -120.035, 0.29 ) }
    dend_11 { pt3dadd( -44.187, 187.044, -120.604, 0.29 ) }
    dend_11 { pt3dadd( -44.1776, 187.983, -121.191, 0.88 ) }
    dend_11 { pt3dadd( -44.1664, 188.513, -121.512, 0.88 ) }
    dend_11 { pt3dadd( -44.1411, 189.254, -121.946, 0.29 ) }
    dend_11 { pt3dadd( -44.099, 190.179, -122.424, 0.29 ) }
    dend_11 { pt3dadd( -44.0667, 190.652, -122.667, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_11 { pt3dadd( -44.0462, 191.448, -123.048, 0.74 ) }
    dend_11 { pt3dadd( -44.0668, 191.951, -123.262, 0.74 ) }
    dend_11 { pt3dadd( -44.1548, 192.947, -123.65, 0.37 ) }
    dend_11 { pt3dadd( -44.2518, 193.76, -123.947, 0.59 ) }
    dend_11 { pt3dadd( -44.3289, 194.332, -124.138, 0.59 ) }
    dend_11 { pt3dadd( -44.4081, 195.149, -124.401, 0.29 ) }
    dend_11 { pt3dadd( -44.4433, 196.102, -124.705, 0.29 ) }
    dend_11 { pt3dadd( -44.4428, 196.603, -124.844, 0.29 ) }
    dend_11 { pt3dadd( -44.425, 197.205, -124.977, 0.52 ) }
    dend_11 { pt3dadd( -44.399, 197.702, -125.073, 1.03 ) }
    dend_11 { pt3dadd( -44.3247, 198.397, -125.178, 1.03 ) }
    dend_11 { pt3dadd( -44.1322, 199.653, -125.331, 0.22 ) }
    dend_11 { pt3dadd( -43.8498, 201.218, -125.475, 0.22 ) }
    dend_11 { pt3dadd( -43.6314, 202.328, -125.555, 0.96 ) }
    dend_11 { pt3dadd( -43.4982, 202.993, -125.59, 0.96 ) }
    dend_11 { pt3dadd( -43.132, 204.635, -125.648, 0.29 ) }
    dend_11 { pt3dadd( -42.817, 205.907, -125.664, 0.29 ) }
    dend_11 { pt3dadd( -42.5993, 206.748, -125.664, 0.88 ) }
    dend_11 { pt3dadd( -42.4368, 207.389, -125.664, 1.18 ) }
    dend_11 { pt3dadd( -42.0965, 208.913, -125.7, 0.37 ) }
    dend_11 { pt3dadd( -41.8477, 210.238, -125.644, 0.37 ) }
    dend_11 { pt3dadd( -41.5536, 212.052, -125.464, 0.37 ) }
    dend_11 { pt3dadd( -41.3534, 213.159, -125.265, 0.37 ) }
    dend_11 { pt3dadd( -41.1809, 213.936, -125.064, 0.96 ) }
    dend_11 { pt3dadd( -40.9231, 214.828, -124.757, 0.96 ) }
    dend_11 { pt3dadd( -39.9384, 217.221, -123.65, 0.29 ) }
    dend_11 { pt3dadd( -39.6946, 217.663, -123.419, 0.29 ) }
    dend_11 { pt3dadd( -39.1492, 218.442, -123.001, 0.88 ) }
    dend_11 { pt3dadd( -38.7141, 218.984, -122.731, 0.88 ) }
    dend_11 { pt3dadd( -38.3575, 219.41, -122.55, 0.59 ) }
    dend_11 { pt3dadd( -37.0522, 221.002, -122.037, 0.29 ) }
    dend_11 { pt3dadd( -36.0863, 222.309, -121.839, 0.29 ) }
    dend_11 { pt3dadd( -35.5503, 223.134, -121.762, 0.81 ) }
    dend_11 { pt3dadd( -35.3228, 223.526, -121.751, 0.81 ) }
    dend_11 { pt3dadd( -35.013, 224.187, -121.758, 0.52 ) }
    dend_11 { pt3dadd( -34.6409, 225.189, -121.807, 0.22 ) }
    dend_11 { pt3dadd( -34.2003, 227.011, -121.974, 0.22 ) }
    dend_11 { pt3dadd( -34.0423, 228.078, -122.087, 0.74 ) }
    dend_11 { pt3dadd( -33.9973, 228.631, -122.149, 0.74 ) }
    dend_11 { pt3dadd( -33.9579, 230.165, -122.317, 0.22 ) }
    dend_11 { pt3dadd( -33.9753, 230.805, -122.38, 0.22 ) }
    dend_11 { pt3dadd( -34.0461, 231.633, -122.45, 0.52 ) }
    dend_11 { pt3dadd( -34.0744, 231.845, -122.465, 0.59 ) }
    dend_11 { pt3dadd( -34.2408, 232.903, -122.558, 0.22 ) }
    dend_11 { pt3dadd( -34.3916, 233.741, -122.696, 0.44 ) }
    dend_11 { pt3dadd( -34.7626, 235.301, -123.095, 0.22 ) }
    dend_11 { pt3dadd( -34.9786, 235.956, -123.335, 0.66 ) }
    dend_11 { pt3dadd( -35.3796, 236.884, -123.758, 0.22 ) }
    dend_11 { pt3dadd( -35.9337, 237.953, -124.342, 0.74 ) }
    dend_11 { pt3dadd( -36.5292, 238.937, -124.969, 0.59 ) }
    dend_11 { pt3dadd( -37.0556, 239.777, -125.538, 0.29 ) }
    dend_11 { pt3dadd( -37.4905, 240.47, -126.01, 0.52 ) }
    dend_11 { pt3dadd( -38.2182, 241.602, -126.788, 0.22 ) }
    dend_11 { pt3dadd( -38.6908, 242.343, -127.267, 0.59 ) }
    dend_11 { pt3dadd( -38.853, 242.643, -127.413, 0.59 ) }
    dend_11 { pt3dadd( -39.2745, 243.708, -127.779, 0.22 ) }
    dend_11 { pt3dadd( -39.4341, 244.445, -127.987, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -42.9589, 150.106, -114.755, 0.52 ) }
    dend_10 { pt3dadd( -42.0637, 151.288, -115.998, 0.52 ) }
    dend_10 { pt3dadd( -41.5312, 152.011, -116.73, 0.29 ) }
    dend_10 { pt3dadd( -41.0098, 152.769, -117.429, 0.29 ) }
    dend_10 { pt3dadd( -40.2759, 153.855, -118.376, 0.29 ) }
    dend_10 { pt3dadd( -39.7454, 154.616, -119.037, 0.59 ) }
    dend_10 { pt3dadd( -39.543, 154.885, -119.285, 0.66 ) }
    dend_10 { pt3dadd( -38.8751, 155.675, -120.006, 0.29 ) }
    dend_10 { pt3dadd( -38.4106, 156.13, -120.485, 0.81 ) }
    dend_10 { pt3dadd( -38.2779, 156.261, -120.617, 0.81 ) }
    dend_10 { pt3dadd( -37.6244, 156.855, -121.198, 0.29 ) }
    dend_10 { pt3dadd( -36.9605, 157.395, -121.875, 0.44 ) }
    dend_10 { pt3dadd( -36.751, 157.529, -122.084, 0.66 ) }
    dend_10 { pt3dadd( -36.3409, 157.679, -122.442, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 131.385, 295.089, -73.1576, 0.37 ) }
    dend_21 { pt3dadd( 132.948, 294.703, -74.8288, 0.37 ) }
    dend_21 { pt3dadd( 133.613, 294.596, -75.5253, 0.22 ) }
    dend_21 { pt3dadd( 134.464, 294.46, -76.418, 0.22 ) }
    dend_21 { pt3dadd( 134.647, 294.431, -76.6094, 0.66 ) }
    dend_21 { pt3dadd( 135.584, 294.281, -77.5908, 0.22 ) }
    dend_21 { pt3dadd( 136.421, 294.147, -78.4687, 0.22 ) }
    dend_21 { pt3dadd( 136.642, 294.135, -78.6564, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 131.385, 295.089, -73.1576, 0.22 ) }
    dend_20 { pt3dadd( 133.42, 295.359, -75.0626, 0.22 ) }
    dend_20 { pt3dadd( 133.863, 295.415, -75.4499, 0.88 ) }
    dend_20 { pt3dadd( 134.905, 295.549, -76.3621, 0.22 ) }
    dend_20 { pt3dadd( 135.35, 295.606, -76.7515, 0.74 ) }
    dend_20 { pt3dadd( 136.931, 295.808, -78.1357, 0.22 ) }
    dend_20 { pt3dadd( 137.599, 295.894, -78.7209, 0.44 ) }
    dend_20 { pt3dadd( 138.541, 295.951, -79.3032, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_62 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_53 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_52 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_63 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_61 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_30 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_65 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_48 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_57 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_35 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_42 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_43 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 13
    dend_32 nseg = 7
    dend_62 nseg = 3
    dend_53 nseg = 9
    dend_52 nseg = 7
    dend_40 nseg = 3
    dend_29 nseg = 7
    dend_14 nseg = 3
    dend_4 nseg = 7
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_50 nseg = 5
    dend_34 nseg = 5
    dend_30 nseg = 3
    dend_16 nseg = 15
    dend_15 nseg = 9
    dend_3 nseg = 11
    dend_2 nseg = 3
    dend_65 nseg = 7
    dend_64 nseg = 3
    dend_60 nseg = 3
    dend_39 nseg = 3
    dend_17 nseg = 3
    dend_6 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 7
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_45 nseg = 5
    dend_44 nseg = 5
    dend_26 nseg = 3
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_NBC_a34c1bf418_0_0


