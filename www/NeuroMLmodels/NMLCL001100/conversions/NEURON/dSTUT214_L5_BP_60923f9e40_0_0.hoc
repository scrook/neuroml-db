// Cell: dSTUT214_L5_BP_60923f9e40_0_0
/*
{
  "id" : "dSTUT214_L5_BP_60923f9e40_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.74386, 8.9517, 2.98245, 0.83", "-7.51, 11.8708, 3.55043, 1.11", "-9.73054, 13.5907, 3.84589, 0.83", "-11.8879, 15.2472, 4.11061, 0.83", "-13.1652, 16.1918, 4.25568, 1.11", "-17.1651, 19.1435, 4.7206, 1.11", "-24.3194, 24.1968, 5.54245, 0.83", "-26.8969, 25.948, 5.81384, 0.83", "-28.9379, 27.2935, 5.98242, 0.83", "-30.9282, 28.6269, 6.12834, 0.83", "-32.5484, 29.726, 6.20707, 0.55", "-33.7662, 30.4701, 6.28697, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.21628, 6.07556, -6.11149, 0.55", "6.33247, 6.53333, -6.58407, 0.55", "7.56041, 6.64889, -7.2094, 0.83", "9.50388, 6.77187, -8.37099, 0.55", "10.442, 6.83123, -8.93171, 1.38", "12.7487, 6.9772, -10.3104, 0.55", "13.7311, 6.92777, -10.9682, 0.83", "18.8131, 6.02131, -14.6643, 0.55", "19.3048, 5.89941, -15.0709, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.680474, -10.1652, 3.11714, 1.11", "-0.721874, -13.8179, 4.42664, 1.11", "-0.738734, -15.3056, 4.95995, 0.83", "-0.761135, -17.282, 5.66848, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.864711, 9.39885, -1.35356, 1.11", "0.949584, 10.9859, -1.34155, 1.11", "1.08352, 13.5752, -1.2272, 1.38", "1.09355, 13.7194, -1.21831, 1.38", "1.32551, 15.502, -1.09285, 0.83", "1.64984, 17.3859, -0.861206, 0.83", "2.20443, 19.5104, -0.346321, 0.83", "2.51727, 20.3148, -0.0540192, 0.83", "2.82385, 20.8963, 0.214728, 1.11", "3.71549, 22.311, 0.905393, 0.55", "4.75189, 23.7861, 1.73122, 0.83", "6.10181, 25.2997, 2.66307, 0.55", "6.78753, 25.9269, 3.08297, 0.83", "7.74804, 26.7758, 3.74173, 0.55", "8.9406, 27.8558, 4.63745, 0.55", "10.611, 29.4827, 6.01137, 0.55", "12.4526, 31.3431, 7.52857, 0.55", "13.62, 32.5506, 8.66944, 0.55", "15.0578, 34.0776, 10.2876, 0.55", "15.3574, 34.3836, 10.6556, 0.83", "16.1506, 35.1923, 11.6957, 0.55", "16.816, 35.8221, 12.5107, 0.83", "18.3522, 37.5467, 14.445, 0.55", "18.9256, 38.1765, 15.0057, 0.83", "19.4568, 38.6395, 15.3809, 0.55", "19.9805, 39.0373, 15.6646, 0.83", "21.1369, 39.7747, 16.1713, 0.83", "22.6624, 40.7795, 16.7058, 0.83", "23.5955, 41.4448, 16.9327, 0.55", "24.3079, 42.0216, 17.1098, 0.55", "26.1742, 43.5119, 17.5461, 0.83", "27.3779, 44.4675, 17.7792, 0.55", "29.2024, 45.8667, 18.0588, 0.55", "30.8706, 47.0383, 18.2478, 0.55", "32.3609, 48.0298, 18.3766, 0.55", "34.2402, 49.19, 18.4534, 0.55", "35.386, 49.7558, 18.4627, 0.55", "36.1636, 50.0723, 18.3752, 0.55", "37.1915, 50.3037, 18.1709, 0.55", "38.7182, 50.3979, 17.739, 0.55", "39.6675, 50.3347, 17.4323, 0.55", "41.0582, 50.2039, 17.0828, 0.55", "43.7171, 50.0396, 16.6567, 0.55", "45.8101, 50.0075, 16.4721, 0.55", "48.0347, 50.0793, 16.4098, 0.55", "49.4658, 50.174, 16.4827, 0.55", "53.1965, 50.7555, 16.9171, 0.55", "55.4118, 51.2683, 17.3399, 0.55", "57.0799, 51.7605, 17.8115, 0.55", "58.0966, 52.2258, 18.1373, 0.55", "59.2764, 52.9218, 18.5096, 0.55", "61.2684, 54.2985, 18.9645, 0.55", "61.7231, 54.6303, 19.0064, 0.55", "63.0238, 55.5168, 19.0411, 0.55", "64.22, 56.4633, 19.0688, 0.83", "64.8726, 56.9886, 19.0736, 0.55", "65.8494, 57.8917, 19.0424, 0.83", "71.0453, 62.7134, 20.2282, 0.83", "75.5629, 68.2613, 20.9093, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-33.7662, 30.4701, 6.28697, 0.55", "-35.3436, 31.0115, 5.73318, 0.55", "-37.0589, 31.6002, 5.13098, 0.55", "-39.1288, 32.3106, 4.40426, 0.55", "-40.838, 32.8972, 3.80419, 0.83", "-42.2703, 33.3887, 3.30133, 0.55", "-44.9288, 34.3012, 2.36795, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.7662, 30.4701, 6.28697, 0.55", "-35.6994, 30.7244, 6.37354, 0.55", "-37.7141, 30.9763, 6.67276, 0.55", "-39.9877, 31.2703, 7.06674, 0.55", "-43.2201, 31.7265, 7.9386, 0.55", "-45.8821, 32.0715, 8.87556, 0.55", "-48.6473, 32.4161, 9.98782, 0.55", "-51.2498, 32.6273, 11.3962, 0.55", "-53.4298, 32.6277, 12.8851, 0.55", "-56.0705, 32.4899, 15.0985, 0.55", "-57.1771, 32.3748, 16.2586, 0.55", "-58.3598, 32.2488, 17.5744, 0.55", "-60.4554, 31.8149, 19.8246, 0.55", "-61.6113, 31.5426, 20.8177, 0.55", "-62.8209, 31.2134, 21.8589, 0.55", "-64.293, 30.8062, 22.9296, 0.55", "-65.9048, 30.39, 24.0375, 0.55", "-68.2156, 29.7776, 25.5655, 0.55", "-71.3761, 29.1193, 27.2591, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.3048, 5.89941, -15.0709, 0.55", "24.3749, 7.02264, -16.1432, 0.55", "27.2807, 7.54077, -17.1852, 0.55", "30.1405, 7.92817, -18.2678, 0.55", "32.09, 8.11495, -19.0146, 0.55", "34.9358, 8.31968, -20.0909, 0.55", "40.8296, 8.64847, -22.5199, 0.55", "47.5059, 9.02351, -25.7273, 0.55", "50.7278, 9.02464, -27.5285, 0.55", "52.449, 8.99375, -28.612, 0.55", "54.3355, 8.97687, -29.8767, 0.55", "57.6966, 8.8502, -32.1297, 0.55", "58.9123, 8.73555, -32.9965, 0.55", "64.0597, 8.42151, -37.0585, 0.55", "67.702, 8.28605, -40.203, 0.55", "69.8004, 8.25552, -42.0681, 0.55", "71.8923, 8.20608, -43.9286, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "19.3048, 5.89941, -15.0709, 0.83", "21.2213, 7.24295, -15.1594, 0.83", "22.318, 8.00612, -15.2622, 0.55", "23.9333, 9.15628, -15.5595, 0.83", "25.0184, 9.95608, -15.7958, 0.55", "26.5118, 11.1025, -16.1018, 0.83", "28.3038, 12.5227, -16.4029, 0.55", "29.2088, 13.1704, -16.5102, 0.55", "31.3062, 14.3769, -16.582, 0.83", "33.2189, 15.2532, -16.3729, 0.55", "34.2863, 15.7392, -16.1492, 0.83", "35.8816, 16.5174, -15.6419, 0.55", "38.1632, 17.6997, -14.6114, 0.55", "41.338, 19.1836, -12.9979, 0.55", "44.367, 20.5015, -11.2327, 0.55", "46.7672, 21.5222, -9.7873, 0.55", "50.7226, 23.2256, -7.38415, 0.55", "53.6095, 24.5632, -5.56586, 0.55", "55.3412, 25.5278, -4.41214, 0.55", "58.5076, 27.6493, -2.28126, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.761135, -17.282, 5.66848, 0.83", "-0.963138, -20.8166, 5.51662, 0.83", "-1.15995, -24.2603, 5.36866, 0.83", "-1.37969, -28.1052, 5.20347, 0.83", "-1.49443, -30.113, 5.1172, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.761135, -17.282, 5.66848, 0.55", "0.0515981, -19.336, 6.98347, 0.55", "0.811831, -21.8442, 8.72816, 0.55", "1.32759, -25.1165, 11.1982, 0.55", "1.44352, -26.3859, 12.202, 0.83", "1.48442, -29.6185, 15.1637, 0.55", "1.37276, -31.2838, 16.7397, 0.55", "1.10212, -34.5208, 19.9493, 0.83", "0.779301, -36.9211, 22.5003, 0.55", "0.333628, -38.8953, 24.5933, 0.55", "-0.602315, -42.6312, 28.4984, 0.55", "-1.34907, -45.6086, 31.5755, 0.55", "-1.89541, -47.9973, 34.0705, 0.55", "-2.34401, -50.5374, 36.6239, 0.28", "-2.4462, -51.598, 37.6369, 0.55", "-2.59617, -53.5579, 39.3913, 0.28", "-2.4663, -56.6275, 41.6096, 0.55", "-4.42146, -66.7659, 49.8085, 0.55", "-6.52564, -76.1283, 58.85, 0.55", "-7.81123, -83.8463, 69.4617, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-44.9288, 34.3012, 2.36795, 0.55", "-46.7831, 35.2622, 4.41942, 0.55", "-47.5016, 35.6739, 5.41584, 0.83", "-48.2657, 36.1749, 6.74473, 0.55", "-48.8154, 36.5975, 7.83312, 0.83", "-50.2781, 37.7761, 10.6282, 0.55", "-50.8313, 38.2401, 11.6859, 0.28", "-51.7023, 39.0911, 13.5517, 0.55", "-52.8769, 40.2398, 16.0415, 0.55", "-53.7989, 41.0785, 17.8709, 0.55", "-55.0583, 42.1669, 20.2582, 0.28", "-55.4135, 42.4225, 20.821, 0.55", "-56.1685, 42.9441, 21.944, 0.28", "-56.7142, 43.2831, 22.6368, 0.55", "-57.883, 43.901, 23.9413, 0.28", "-58.5812, 44.1938, 24.6893, 0.55", "-59.7893, 44.6059, 26.0733, 0.28", "-60.6156, 44.8579, 26.9738, 0.55", "-64.3422, 47.2859, 35.1882, 0.55", "-67.2226, 49.0972, 43.8878, 0.55", "-69.7717, 50.0928, 52.8193, 0.55", "-72.3163, 49.9246, 61.8057, 0.55", "-73.5851, 50.4987, 71.0426, 0.55", "-75.6703, 51.2455, 80.1175, 0.55", "-77.9328, 53.5095, 88.8934, 0.55", "-80.1216, 55.0471, 97.8435, 0.55", "-82.1325, 57.2539, 106.694, 0.55", "-83.6287, 59.4411, 115.652, 0.55", "-84.0473, 60.7603, 124.89, 0.55", "-84.5932, 62.9375, 133.958, 0.55", "-85.2422, 64.1501, 143.197, 0.55", "-84.7074, 65.1262, 152.472, 0.55", "-82.596, 66.8843, 161.4, 0.55", "-80.4388, 66.8361, 170.489, 0.55", "-77.0131, 66.6042, 179.176, 0.55", "-74.0348, 66.8087, 188.028, 0.55", "-72.0103, 67.7136, 197.102, 0.55", "-72.0239, 69.9195, 206.179, 0.55", "-71.1464, 71.18, 215.393, 0.55", "-68.6043, 74.0779, 223.902, 0.55", "-67.6078, 77.5519, 232.516, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-44.9288, 34.3012, 2.36795, 0.55", "-47.0175, 34.3099, 0.910067, 0.55", "-48.8226, 34.3161, -0.870766, 0.55", "-50.6027, 34.4554, -2.84584, 0.55", "-51.7175, 34.5425, -4.0826, 0.55", "-53.7509, 34.7016, -6.3386, 0.83", "-55.2385, 34.8179, -7.98912, 0.55", "-57.1204, 34.9108, -10.476, 0.83", "-57.9873, 35.0845, -11.9774, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-71.3761, 29.1193, 27.2591, 0.28", "-72.2858, 27.673, 27.0276, 0.28", "-72.7231, 27.0545, 26.879, 0.28", "-73.3018, 26.1797, 26.631, 0.55", "-73.782, 25.4092, 26.4165, 0.28", "-74.4915, 24.2342, 26.1025, 0.55", "-76.4728, 20.7754, 25.2262, 0.28", "-77.1387, 19.5643, 24.8155, 0.55", "-78.1587, 17.7009, 24.1171, 0.28", "-78.7556, 16.5873, 23.6457, 0.55", "-79.1702, 15.8206, 23.3021, 0.28", "-79.6423, 14.9403, 22.9147, 0.55", "-81.0873, 11.9954, 21.6817, 0.28", "-81.5427, 11.1062, 21.2782, 0.55", "-82.3383, 9.75434, 20.527, 0.28", "-82.9749, 8.89568, 19.9817, 0.28", "-83.524, 8.32757, 19.6086, 0.55", "-85.3801, 6.74429, 18.6428, 0.28", "-86.2285, 6.1068, 18.2768, 0.55", "-88.303, 4.66342, 17.3608, 0.28", "-90.36, 3.3958, 16.5396, 0.28", "-92.582, 2.19882, 15.7153, 0.28", "-93.5859, 1.7547, 15.4172, 0.55", "-98.6455, -3.46962, 13.0729, 0.55", "-104.035, -8.8108, 12.1731, 0.55", "-109.453, -13.8115, 10.1657, 0.55", "-115.057, -18.3066, 7.56321, 0.55", "-120.783, -22.2237, 4.36008, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-71.3761, 29.1193, 27.2591, 0.55", "-72.1871, 29.057, 27.6339, 0.55", "-74.402, 29.0225, 28.9735, 0.55", "-75.2191, 29.0091, 29.5305, 0.55", "-77.1223, 28.9319, 30.8968, 0.55", "-80.0919, 28.774, 32.8402, 0.55", "-81.651, 28.7276, 33.801, 0.28", "-84.0797, 28.5783, 35.2728, 0.55", "-85.8933, 28.3982, 36.3183, 0.55", "-86.6578, 28.3178, 36.7637, 0.28", "-91.2446, 27.8301, 39.4305, 0.55", "-93.4041, 27.4385, 40.5921, 0.28", "-96.3578, 26.8172, 41.9964, 0.28", "-98.9483, 26.2484, 43.0465, 0.55", "-108.775, 26.4969, 48.5883, 0.55", "-117.931, 27.0098, 55.1648, 0.55", "-126.069, 26.9846, 62.9822, 0.55", "-134.035, 29.0457, 70.7046, 0.55", "-140.165, 31.6355, 79.8185, 0.55", "-144.499, 35.4853, 89.5002, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "71.8923, 8.20608, -43.9286, 0.55", "75.557, 9.21838, -47.1235, 0.55", "76.7178, 9.47805, -48.2022, 0.55", "78.1733, 9.75609, -49.5291, 0.55", "80.8149, 10.2193, -52.0926, 0.55", "83.5778, 10.5788, -54.8248, 0.55", "84.9347, 10.6478, -56.1137, 0.83", "86.0554, 10.6165, -57.2517, 0.55", "86.8969, 10.5129, -58.1808, 0.83", "88.9394, 9.9591, -60.5305, 0.55", "90.6297, 9.34289, -62.4595, 0.55", "92.5751, 8.63155, -64.5805, 0.55", "94.7375, 7.8972, -66.9933, 0.55", "96.1894, 7.36601, -68.644, 0.55", "97.8275, 6.7558, -70.558, 0.55", "99.2399, 6.26794, -72.317, 0.55", "100.124, 6.02995, -73.5515, 0.55", "101.241, 5.56648, -76.0357, 0.55", "101.852, 5.22366, -77.5829, 0.55", "102.383, 4.6642, -79.6255, 0.55", "103.118, 3.60462, -83.0643, 0.55", "103.269, 3.33521, -83.836, 0.28", "105.234, -0.0420453, -93.2067, 0.28", "105.895, -1.00987, -95.9605, 0.83", "108.498, -4.60882, -105.708, 0.83", "109.842, -6.46045, -110.215, 0.83", "110.488, -7.28221, -112.031, 0.55", "111.228, -8.08621, -113.8, 0.55", "113.259, -9.62605, -117.074, 0.55", "115.427, -10.9921, -119.949, 0.28", "116.08, -11.1918, -120.102, 0.55", "117.515, -11.4737, -119.945, 0.28", "118.4, -11.5711, -119.729, 0.55", "119.323, -11.676, -119.423, 0.28", "120.43, -11.7411, -119.013, 0.55", "122.08, -11.7718, -118.584, 0.28", "123.407, -11.842, -118.277, 0.55", "124.87, -11.836, -118.066, 0.28", "126.858, -11.8415, -117.955, 0.55", "129.085, -11.8114, -117.97, 0.55", "131.042, -11.7766, -118.116, 0.28", "133.748, -11.7208, -118.469, 0.55", "138.418, -11.5521, -119.593, 0.55", "140.475, -11.3992, -120.352, 0.55", "141.357, -11.3074, -120.777, 0.83", "143.036, -11.1382, -121.745, 0.55", "144.199, -10.9816, -122.495, 0.83", "147.322, -10.481, -124.56, 0.55", "149.235, -10.3144, -125.855, 0.28", "150.044, -10.2844, -126.303, 0.55", "152.27, -10.3801, -127.26, 0.28", "153.054, -10.4795, -127.535, 0.55", "154.675, -10.7566, -127.843, 0.28", "156.333, -11.1648, -127.856, 0.55", "159.695, -12.0996, -127.281, 0.28", "161.248, -12.579, -126.846, 0.55", "163.566, -13.408, -126.063, 0.28", "166.493, -14.4322, -124.972, 0.55", "168.609, -15.1408, -124.154, 0.55", "172.269, -16.249, -122.691, 0.28", "173.767, -16.6499, -122.219, 0.55", "176.342, -17.2285, -121.702, 0.28", "178.897, -17.6321, -121.384, 0.55", "180.29, -17.7191, -121.421, 0.28", "181.54, -17.6407, -121.572, 0.55", "185.057, -17.2474, -122.356, 0.28", "187.56, -16.7966, -122.978, 0.28", "189.728, -16.2485, -123.569, 0.55", "192.118, -15.59, -124.352, 0.28", "192.718, -15.3834, -124.533, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "71.8923, 8.20608, -43.9286, 0.55", "72.7533, 5.79685, -45.1917, 0.55", "73.3075, 3.75098, -46.1207, 0.28", "73.8123, 1.8915, -46.8186, 0.55", "75.0769, -2.03091, -48.3364, 0.28", "75.1502, -2.28184, -48.4656, 0.55", "75.5693, -3.60242, -49.246, 0.28", "75.8223, -4.72185, -50.0552, 0.55", "76.0258, -5.90958, -51.0229, 0.28", "76.2607, -7.54132, -52.411, 0.55", "76.8476, -11.6321, -55.8261, 0.55", "77.3442, -15.3709, -58.9986, 0.55", "77.7144, -18.3627, -61.5377, 0.55", "78.0295, -21.3046, -63.9855, 0.55", "78.1085, -22.0621, -64.5886, 0.28", "78.2134, -22.8629, -65.1718, 0.55", "78.4525, -23.9522, -65.8865, 0.28", "79.0642, -25.8677, -67.0029, 0.55", "80.5276, -29.4485, -68.5929, 0.55", "81.3297, -31.3559, -69.2805, 0.28", "82.0363, -33.3154, -70.0612, 0.55", "82.8331, -36.0912, -71.2523, 0.28", "83.3402, -38.3517, -72.2621, 0.55", "83.9626, -41.7474, -73.7766, 0.28", "84.6298, -45.2481, -75.2414, 0.55", "85.5355, -50.3421, -77.4095, 0.28", "85.9627, -53.0646, -78.573, 0.55", "86.3577, -55.8602, -79.8245, 0.28", "86.6824, -58.3389, -81.0698, 0.28", "87.1888, -61.4536, -82.8776, 0.55", "87.842, -64.3138, -84.4888, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "58.5076, 27.6493, -2.28126, 0.55", "61.5335, 27.3154, -1.87385, 0.55", "63.7265, 27.0146, -1.79343, 0.55", "68.5107, 26.3325, -1.87197, 0.55", "70.6492, 26.0054, -2.10277, 0.55", "72.973, 25.7129, -2.46627, 0.55", "76.0754, 25.403, -3.16816, 0.55", "79.3266, 25.0278, -4.2323, 0.55", "81.0187, 24.8331, -4.99117, 0.55", "84.4208, 24.4966, -7.01314, 0.55", "85.9834, 24.3616, -7.99408, 0.55", "89.6388, 23.9845, -10.4006, 0.55", "92.1185, 23.6222, -12.0229, 0.55", "93.9504, 23.3328, -13.1322, 0.83", "96.8825, 22.7525, -14.8851, 0.55", "99.7663, 22.0238, -16.5057, 0.83", "102.223, 21.2773, -17.8061, 0.55", "104.418, 20.6312, -18.8415, 0.55", "105.671, 20.3112, -19.3523, 0.83", "108.607, 19.5535, -20.3863, 0.28", "110.074, 19.2265, -20.7982, 0.28", "111.489, 18.8279, -21.283, 0.28", "113.017, 18.4396, -21.8086, 0.28", "115.457, 17.8717, -22.6947, 0.28", "116.441, 17.6518, -23.0198, 0.55", "118.813, 17.1211, -23.5603, 0.55", "123.1, 16.0968, -24.3224, 0.55", "124.291, 15.7751, -24.4853, 0.55", "125.36, 15.4472, -24.5899, 0.83", "127.694, 14.783, -24.6211, 0.55", "129.725, 14.2055, -24.6157, 0.55", "131.646, 13.6668, -24.6005, 0.55", "133.13, 13.2291, -24.6339, 0.55", "135.477, 12.386, -24.8229, 0.55", "138.234, 11.168, -25.2308, 0.55", "142.501, 8.82919, -26.2306, 0.55", "144.835, 7.21599, -26.9766, 0.55", "146.854, 5.47982, -27.7742, 0.28", "147.455, 4.83186, -28.0661, 0.55", "148.782, 2.99805, -28.8384, 0.28", "149.922, 0.91944, -29.6342, 0.55", "151.007, -1.71774, -30.3861, 0.55", "151.748, -3.46063, -30.7973, 0.28", "152.021, -4.07971, -30.9126, 0.55", "152.731, -5.61876, -31.1799, 0.28", "153.704, -7.62495, -31.4821, 0.55", "156.247, -12.4646, -32.1025, 0.55", "157.575, -14.9078, -32.3667, 0.55", "158.81, -17.1486, -32.5898, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "58.5076, 27.6493, -2.28126, 0.55", "60.118, 28.3033, -0.877869, 0.55", "60.6379, 28.5049, -0.457885, 0.55", "62.5936, 29.139, 1.03705, 0.55", "64.7693, 29.8992, 2.73138, 0.55", "67.5499, 30.8825, 4.98302, 0.55", "68.3184, 31.1539, 5.5993, 0.55", "69.7038, 31.5815, 6.70145, 0.55", "71.226, 32.0755, 7.84161, 0.55", "73.0001, 32.6858, 9.0729, 0.55", "74.669, 33.2871, 10.2347, 0.55", "75.5855, 33.6523, 10.8187, 0.55", "76.6588, 34.1136, 11.496, 0.55", "77.9855, 34.72, 12.3009, 0.83", "80.185, 35.6611, 13.3793, 0.55", "81.6546, 36.2097, 14.0318, 0.83", "83.7116, 36.8599, 14.8836, 0.55", "84.3474, 37.0223, 15.1426, 0.55", "86.3337, 37.4177, 15.9233, 0.55", "89.9227, 37.8789, 17.2177, 0.55", "92.5703, 38.0579, 18.1331, 0.55", "94.6698, 38.1118, 18.9254, 0.55", "96.8124, 38.0687, 19.8276, 0.55", "97.264, 38.048, 20.0219, 0.28", "98.1832, 37.969, 20.4208, 0.83", "101.96, 37.5945, 22.0908, 0.55", "104.607, 37.3257, 23.2076, 0.55", "106.769, 37.1701, 24.168, 0.55", "108.06, 37.0756, 24.7549, 0.83", "109.075, 37.0163, 25.216, 0.28", "109.996, 36.9623, 25.6253, 0.55", "116.911, 38.4854, 29.517, 0.55", "124.499, 38.5849, 32.2915, 0.55", "131.933, 39.7084, 35.2518, 0.55", "138.481, 39.9558, 39.9795, 0.55", "144.606, 39.1639, 45.1896, 0.55", "151.633, 36.8891, 48.4656, 0.55", "158.729, 33.6288, 50.5378, 0.55", "166.455, 31.7289, 51.9483, 0.55", "174.055, 29.8005, 53.8988, 0.55", "181.944, 28.658, 55.2215, 0.55", "189.674, 28.0479, 57.4932, 0.55", "196.979, 26.1379, 60.3697, 0.55", "204.291, 25.7714, 63.7892, 0.55", "211.078, 26.7375, 68.0649, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.49443, -30.113, 5.1172, 1.38", "0.794506, -32.5939, 4.31178, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.49443, -30.113, 5.1172, 0.55", "-3.07206, -32.0544, 5.12949, 0.55", "-4.81343, -34.5426, 5.14423, 0.55", "-6.17197, -36.1905, 5.17126, 0.55", "-7.31363, -37.5681, 5.00879, 0.55", "-9.80148, -40.4223, 4.40989, 0.55", "-11.5463, -42.3287, 3.93952, 0.55", "-13.0964, -44.0379, 3.46027, 0.55", "-17.0811, -48.1987, 2.23291, 0.55", "-21.8715, -53.0167, 0.797741, 0.55", "-25.5809, -56.6661, -0.380542, 0.55", "-27.9471, -59.0623, -1.16817, 0.55", "-30.6609, -61.937, -2.06333, 0.55", "-34.1, -66.0589, -3.15203, 0.55", "-36.1083, -68.9822, -3.74494, 0.55", "-38.5845, -73.1862, -4.25007, 0.55", "-40.5555, -77.125, -4.57163, 0.55", "-42.5405, -82.0395, -4.86138, 0.55", "-44.4047, -87.8089, -5.05088, 0.55", "-45.4, -92.2181, -5.08086, 0.55", "-45.7492, -94.4118, -4.94939, 0.55", "-46.2663, -99.5653, -4.35329, 0.55", "-46.6669, -104.387, -3.66773, 0.55", "-46.828, -109.243, -2.61277, 0.55", "-46.9525, -112.028, -1.85628, 0.55", "-47.2912, -120.64, 0.799961, 0.55", "-47.3205, -121.274, 1.00658, 0.55", "-47.4291, -125.157, 2.36856, 0.55", "-47.9503, -132.101, 4.96035, 0.55", "-48.1355, -134.424, 5.68891, 0.55", "-48.5022, -138.056, 6.20412, 0.55", "-48.5976, -139.406, 6.08793, 0.55", "-48.702, -143.976, 4.84247, 0.55", "-48.5926, -146.938, 3.41645, 0.55", "-48.2708, -151.659, 0.191497, 0.55", "-47.6351, -157.434, -4.19435, 0.28", "-47.4519, -158.862, -5.47052, 0.55", "-47.1633, -161.028, -7.59542, 0.28", "-47.1225, -161.354, -7.93297, 0.55", "-46.9131, -163.141, -9.62899, 0.28", "-46.8862, -163.748, -10.0664, 0.55", "-46.829, -166.9, -11.7345, 0.28", "-46.8512, -167.972, -12.2894, 0.55", "-46.9577, -171.074, -13.7189, 0.28", "-46.9869, -172.05, -14.1653, 0.55", "-47.1165, -175.419, -15.6512, 0.28", "-47.1678, -176.969, -16.3425, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.81123, -83.8463, 69.4617, 0.55", "-10.7854, -90.8176, 77.2065, 0.55", "-14.5622, -96.7157, 85.4753, 0.55", "-18.2843, -103.336, 93.2044, 0.55", "-22.2302, -109.961, 100.818, 0.55", "-25.461, -117.917, 107.427, 0.55", "-28.4125, -125.565, 114.514, 0.55", "-30.9682, -134.968, 119.255, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.81123, -83.8463, 69.4617, 0.55", "-6.98118, -88.8715, 74.1784, 0.55", "-5.99777, -94.6617, 77.8792, 0.55", "-6.12736, -100.472, 81.6754, 0.55", "-6.72955, -106.601, 84.8795, 0.55", "-7.04196, -112.711, 88.159, 0.55", "-7.24956, -118.578, 91.8639, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-57.9873, 35.0845, -11.9774, 0.83", "-58.6703, 35.515, -14.5295, 0.83", "-60.2806, 36.7543, -20.3863, 0.55", "-60.9083, 37.3746, -22.7964, 0.83", "-61.5162, 38.1132, -25.2752, 0.55", "-62.0212, 39.0346, -27.6055, 0.55", "-62.2122, 39.5701, -28.6797, 0.28", "-62.3062, 40.0248, -29.2435, 0.55", "-62.3544, 41.8038, -30.7909, 0.28", "-62.3327, 42.5891, -31.4267, 0.55", "-62.2367, 45.3995, -33.5154, 0.28", "-62.1855, 47.6842, -35.0722, 0.55", "-62.2324, 51.3457, -37.3179, 0.28", "-62.3606, 54.6172, -39.1822, 0.28", "-62.5232, 56.4832, -40.1431, 0.55", "-62.8511, 58.7125, -41.2152, 0.28", "-63.0699, 59.7934, -41.6806, 0.55", "-63.7719, 62.2836, -42.8014, 0.28", "-64.3896, 63.9037, -43.5659, 0.28", "-65.0538, 65.4689, -44.3406, 0.28", "-65.3737, 66.2902, -44.7688, 0.55", "-66.521, 69.5434, -46.6599, 0.28", "-67.7795, 73.3367, -49.0292, 0.55", "-68.1961, 74.6411, -49.8624, 0.55", "-68.6221, 75.9699, -50.6612, 0.55", "-69.7089, 78.7801, -52.32, 0.55", "-70.569, 80.6123, -53.3813, 0.28", "-70.9856, 81.3087, -53.7485, 0.55", "-72.2355, 83.2347, -54.6362, 0.28", "-73.6939, 85.2422, -55.6081, 0.55", "-76.1346, 88.084, -56.9619, 0.28", "-77.3125, 89.2586, -57.4918, 0.28", "-79.2651, 90.8055, -58.2629, 0.55", "-81.4702, 92.3691, -59.0859, 0.28", "-81.8673, 92.6098, -59.2053, 0.55", "-83.2833, 93.3669, -59.5517, 0.28", "-88.1095, 95.8053, -60.5407, 0.55", "-94.8694, 98.6348, -61.7831, 0.28", "-96.1402, 99.0634, -62.0216, 0.55", "-99.6402, 100.115, -62.648, 0.28", "-101.123, 100.524, -62.9264, 0.28", "-102.432, 100.826, -63.1911, 0.55", "-106.335, 101.254, -63.9308, 0.28", "-109.03, 101.411, -64.2551, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-57.9873, 35.0845, -11.9774, 0.55", "-58.2734, 35.9462, -12.3994, 0.55", "-58.4392, 36.4758, -12.5963, 0.28", "-58.604, 36.8933, -12.6207, 0.55", "-58.9824, 37.8522, -12.6768, 0.28", "-59.2482, 38.5257, -12.7161, 0.55", "-59.7382, 39.7673, -12.7887, 0.28", "-60.0278, 40.4769, -12.7046, 0.55", "-60.9847, 42.3796, -11.8575, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-120.783, -22.2237, 4.36008, 0.55", "-126.255, -28.6418, 2.65962, 0.55", "-130.447, -35.7992, 0.373857, 0.55", "-134.024, -42.4895, -3.6848, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-120.783, -22.2237, 4.36008, 0.55", "-126.672, -28.2471, 1.52032, 0.55", "-131.732, -34.4693, -2.31346, 0.55", "-136.451, -40.8474, -6.32171, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-144.499, 35.4853, 89.5002, 0.55", "-151.304, 36.43, 96.6189, 0.55", "-158.704, 38.58, 102.823, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-144.499, 35.4853, 89.5002, 0.55", "-154.149, 35.135, 96.1554, 0.55", "-163.937, 36.6819, 102.427, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "87.842, -64.3138, -84.4888, 0.28", "96.3998, -70.844, -96.7941, 0.28", "97.2596, -71.5186, -97.8623, 0.55", "98.711, -72.6575, -99.6659, 0.28", "99.9332, -73.6164, -101.185, 0.28", "101.552, -74.8857, -103.195, 0.55", "103.685, -76.5593, -105.845, 0.55", "106.618, -78.6223, -106.877, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "87.842, -64.3138, -84.4888, 0.55", "88.8434, -65.9085, -85.8283, 0.55", "89.1655, -66.635, -86.4252, 0.28", "89.6551, -67.8889, -87.4745, 0.55", "90.7336, -70.6513, -89.786, 0.28", "91.481, -72.5656, -91.3879, 0.55", "92.7474, -75.8091, -94.102, 0.28", "94.1942, -79.8157, -97.718, 0.28", "94.7859, -81.6688, -99.4168, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "158.81, -17.1486, -32.5898, 0.28", "160.866, -20.0875, -32.8559, 0.28", "163.463, -24.0772, -32.8995, 0.28", "165.104, -26.7003, -32.8301, 0.55", "166.099, -28.1701, -32.7235, 0.28", "166.628, -28.9639, -32.6592, 0.28", "169.25, -32.8641, -32.3974, 0.55", "169.855, -33.7662, -32.2339, 0.28", "171.281, -36.1931, -31.6635, 0.55", "172.496, -38.2779, -31.2448, 0.28", "173.561, -39.9626, -30.9319, 0.55", "174.806, -41.9409, -30.6703, 0.55", "176.787, -44.9651, -30.6132, 0.55", "177.264, -45.699, -30.6247, 0.55", "178.966, -48.4303, -30.6982, 0.28", "179.623, -49.5373, -30.7573, 0.55", "180.545, -50.9491, -30.8357, 0.28", "181.845, -52.9244, -31.0355, 0.55", "184.004, -55.8923, -31.789, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "158.81, -17.1486, -32.5898, 0.55", "157.035, -17.1291, -32.5721, 0.55", "155.593, -17.1132, -32.5578, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.794506, -32.5939, 4.31178, 0.83", "0.950967, -32.8651, 4.33616, 0.83", "2.63134, -35.2419, 4.82782, 0.83", "4.15457, -37.3193, 5.12052, 0.55", "5.36978, -38.9767, 5.35404, 0.55", "7.95276, -42.4994, 5.85039, 0.83", "11.0857, -46.7723, 6.45243, 0.55", "12.7681, -49.0053, 6.83364, 0.83", "15.6478, -52.5414, 7.69582, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.794506, -32.5939, 4.31178, 0.55", "-0.479743, -33.7295, 1.16023, 0.55", "-1.8475, -34.9485, -2.22257, 0.55", "-3.46214, -36.3875, -6.216, 0.55", "-5.42284, -38.1349, -11.0653, 0.55", "-6.53547, -39.1264, -13.8171, 0.55", "-6.75898, -39.3256, -14.3699, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.24956, -118.578, 91.8639, 0.55", "-6.67885, -126.73, 97.7031, 0.55", "-4.77365, -135.362, 102.471, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.24956, -118.578, 91.8639, 0.55", "-7.54707, -127.006, 96.711, 0.55", "-8.23364, -135.212, 101.888, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-60.9847, 42.3796, -11.8575, 0.28", "-62.1555, 45.4238, -10.2514, 0.28", "-62.5548, 46.623, -9.55738, 0.55", "-63.6641, 50.1204, -7.51268, 0.28", "-64.2695, 51.7954, -6.60842, 0.55", "-65.9824, 56.2755, -4.25324, 0.28", "-67.7234, 60.829, -1.85953, 0.55", "-70.5492, 68.1171, 2.27452, 0.28", "-71.1513, 69.6784, 3.15147, 0.55", "-72.5321, 73.2192, 4.93025, 0.28", "-73.0747, 74.6625, 5.60076, 0.55", "-79.6759, 85.2109, 13.2159, 0.55", "-88.6177, 95.7593, 17.8647, 0.55", "-95.5278, 107.409, 23.2856, 0.55", "-101.027, 120.414, 26.9538, 0.55", "-108.201, 132.562, 30.668, 0.55", "-115.676, 143.401, 36.9501, 0.55", "-121.367, 154.126, 45.0384, 0.55", "-124.917, 164.355, 54.8164, 0.55", "-128.767, 175.123, 63.8752, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-60.9847, 42.3796, -11.8575, 0.55", "-62.596, 42.4582, -9.59598, 0.55", "-63.428, 42.4611, -8.4009, 0.28", "-64.0471, 42.4632, -7.51156, 0.55", "-64.5632, 42.465, -6.77033, 0.28", "-64.9246, 42.4663, -6.25115, 0.55", "-65.9213, 42.4697, -4.81955, 0.28", "-66.6283, 42.3307, -3.91992, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-134.024, -42.4895, -3.6848, 0.55", "-138.205, -50.3052, -2.80765, 0.55", "-142.213, -58.0365, -0.938331, 0.55", "-145.578, -66.2751, -0.565567, 0.55", "-149.806, -73.9797, 0.879443, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-134.024, -42.4895, -3.6848, 0.55", "-140.17, -49.5372, -11.0949, 0.55", "-145.712, -55.32, -19.9379, 0.55", "-152.258, -62.1025, -27.2532, 0.55", "-160.968, -66.7304, -33.9664, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-136.451, -40.8474, -6.32171, 0.55", "-140.548, -45.4985, -11.2715, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-136.451, -40.8474, -6.32171, 0.55", "-140.236, -48.1803, -4.91643, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "106.618, -78.6223, -106.877, 0.28", "108.566, -79.2298, -107.836, 0.28", "109.471, -79.512, -108.281, 0.55", "111.196, -80.0502, -109.131, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "106.618, -78.6223, -106.877, 0.55", "106.532, -79.8035, -107.453, 0.55", "106.36, -82.1661, -108.607, 0.28", "106.303, -82.9357, -108.983, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "94.7859, -81.6688, -99.4168, 0.28", "96.5787, -85.8834, -102.422, 0.28", "97.4664, -87.9703, -103.909, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "94.7859, -81.6688, -99.4168, 0.55", "93.1341, -82.5454, -98.2225, 0.55", "88.5278, -84.9898, -94.8921, 0.28", "87.4336, -85.5705, -94.101, 0.55", "84.4402, -87.159, -91.9367, 0.28", "82.5108, -88.1829, -90.5417, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.6478, -52.5414, 7.69582, 0.83", "15.7227, -52.7541, 7.68127, 0.83", "16.6753, -55.5466, 7.57837, 0.83", "17.1603, -57.6756, 7.45858, 0.83", "17.3722, -59.777, 7.38423, 0.83", "17.4353, -62.6148, 7.35796, 0.83", "17.3616, -65.9099, 7.34432, 0.83", "17.1547, -69.618, 7.47005, 0.83", "16.8386, -73.2455, 7.70385, 0.83", "16.3301, -77.7038, 7.7176, 0.83", "16.1025, -79.7422, 7.56736, 0.83", "15.9945, -81.2607, 7.38572, 0.83", "15.7891, -84.1689, 6.95133, 0.83", "15.7474, -86.747, 6.50914, 0.83", "16.2974, -92.1268, 5.3645, 0.83", "16.9006, -95.0051, 4.4965, 0.83", "17.599, -97.6254, 3.55743, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.6478, -52.5414, 7.69582, 0.55", "15.0708, -54.4988, 7.30287, 0.55", "14.5814, -55.9276, 7.0959, 0.55", "14.2425, -56.8446, 7.05168, 0.55", "13.6984, -58.2826, 7.13166, 0.55", "12.5903, -61.1348, 7.47774, 0.55", "11.6191, -63.3087, 7.92577, 0.55", "10.7502, -65.0617, 8.43737, 0.55", "9.77639, -66.8428, 9.03459, 0.55", "8.92122, -68.3251, 9.58607, 0.28", "8.12245, -69.5475, 10.1706, 0.55", "6.47779, -71.793, 11.4584, 0.55", "5.33951, -73.1831, 12.3291, 0.55", "4.6988, -73.9621, 12.8067, 0.55", "3.92966, -74.8816, 13.3102, 0.83", "1.71623, -77.6004, 14.6485, 0.28", "0.996058, -78.4988, 15.0725, 0.55", "-0.239287, -80.1141, 15.8205, 0.28", "-0.637083, -80.6139, 16.0801, 0.55", "-1.50877, -81.7817, 16.7026, 0.28", "-1.97755, -82.4428, 17.0201, 0.55", "-3.33047, -84.5724, 17.527, 0.55", "-6.91375, -90.3288, 21.4037, 0.55", "-10.3699, -95.8243, 25.7466, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.75898, -39.3256, -14.3699, 0.55", "-9.44846, -40.4805, -16.7913, 0.55", "-10.2464, -40.7622, -17.4649, 0.55", "-12.2444, -41.476, -19.084, 0.55", "-16.6173, -42.9275, -22.4425, 0.28", "-17.2666, -43.1324, -22.9026, 0.55", "-19.9576, -44.0663, -24.7282, 0.55", "-23.6114, -45.3743, -26.8937, 0.55", "-25.0114, -45.836, -27.6868, 0.28", "-26.2412, -46.1677, -28.3094, 0.28", "-28.3187, -46.7165, -29.1066, 0.55", "-30.8772, -47.2684, -30.1583, 0.28", "-33.27, -47.5884, -31.1632, 0.55", "-35.134, -47.6994, -31.8961, 0.55", "-36.4342, -47.6763, -32.4294, 0.55", "-40.2863, -47.4471, -34.0857, 0.55", "-44.3642, -46.9685, -35.7406, 0.55", "-46.0551, -46.6922, -36.3805, 0.28", "-47.662, -46.45, -37.0164, 0.55", "-50.8962, -46.145, -38.2925, 0.28", "-51.9801, -46.0707, -38.7145, 0.83", "-53.9933, -45.9206, -39.3785, 0.28", "-55.4119, -45.923, -39.6962, 0.55", "-57.4593, -45.9949, -40.125, 0.28", "-58.2729, -46.0159, -40.2704, 0.55", "-59.7681, -46.0867, -40.4673, 0.55", "-62.0421, -45.9912, -40.6675, 0.55", "-63.5273, -45.8507, -40.7143, 0.28", "-64.7285, -45.6085, -40.6532, 0.55", "-66.1639, -45.1642, -40.5739, 0.28", "-66.4032, -45.0736, -40.5667, 0.55", "-68.6709, -44.1684, -40.8369, 0.28", "-70.3437, -43.4716, -41.1826, 0.55", "-72.6054, -42.4087, -41.8883, 0.83", "-74.499, -41.4846, -42.6412, 0.28", "-74.9937, -41.2457, -42.8757, 0.55", "-78.8082, -39.4458, -44.8502, 0.28", "-79.4825, -39.1357, -45.25, 0.55", "-81.4988, -38.1049, -46.5219, 0.28", "-82.0196, -37.8395, -46.8534, 0.55", "-83.3474, -37.1538, -47.6298, 0.28", "-84.2825, -36.663, -48.131, 0.55", "-86.3365, -35.5874, -48.9947, 0.28", "-87.5436, -35.0229, -49.4742, 0.55", "-90.0904, -33.9624, -50.3928, 0.28", "-90.8441, -33.6826, -50.6591, 0.55", "-92.0131, -33.3246, -51.0457, 0.28", "-92.9973, -33.0269, -51.3317, 0.55", "-95.0238, -32.4411, -51.8206, 0.28", "-95.6305, -32.2781, -51.9512, 0.55", "-100.118, -31.0036, -52.7298, 0.28", "-101.683, -30.4674, -52.8731, 0.55", "-104.461, -29.4034, -52.9595, 0.28", "-105.711, -28.882, -52.9603, 0.55", "-108.551, -27.7161, -52.8162, 0.28", "-109.582, -27.3332, -52.7255, 0.55", "-113.248, -26.2688, -52.2376, 0.28", "-114.756, -26.0051, -52.035, 0.55", "-116.87, -25.9658, -51.7482, 0.55", "-118.157, -26.0235, -51.548, 0.55", "-120.732, -26.2216, -50.9485, 0.28", "-123.229, -26.4527, -50.2026, 0.28", "-125.295, -26.6415, -49.5197, 0.55", "-127.773, -26.6669, -48.3885, 0.28", "-128.969, -26.53, -47.6474, 0.55", "-131.774, -25.7291, -45.5477, 0.28", "-133.125, -25.0245, -44.0787, 0.55", "-133.934, -24.4187, -42.9018, 0.28", "-134.734, -23.7462, -41.3128, 0.55", "-135.666, -22.8578, -39.1524, 0.28", "-136.022, -22.5533, -38.3415, 0.55", "-138.001, -21.2581, -34.4896, 0.28", "-138.671, -20.863, -33.2031, 0.55", "-140.232, -20.0223, -30.0943, 0.28", "-141.079, -19.5822, -28.4071, 0.55", "-141.777, -19.2225, -27.022, 0.55", "-142.627, -18.8022, -25.3992, 0.28", "-143.124, -18.5886, -24.6581, 0.55", "-144.863, -17.7919, -22.2968, 0.28", "-145.771, -17.2327, -21.0274, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.75898, -39.3256, -14.3699, 0.55", "-6.63851, -39.3231, -15.4947, 0.55", "-6.50005, -39.1955, -16.6101, 0.55", "-6.26932, -38.9335, -17.9787, 0.55", "-6.0448, -38.6269, -19.0734, 0.55", "-4.14302, -35.8269, -26.0104, 0.55", "-3.75009, -35.0214, -27.5655, 0.55", "-3.22885, -33.6696, -29.867, 0.55", "-2.87495, -32.6593, -31.4948, 0.55", "-2.51164, -31.5811, -33.0513, 0.28", "-1.86903, -29.7781, -35.3672, 0.55", "-0.758416, -26.9718, -38.6936, 0.28", "-0.7166, -26.7933, -39.0371, 0.55", "-0.959852, -26.1382, -41.4702, 0.28", "-1.38715, -25.8448, -43.1063, 0.55", "-1.99727, -25.685, -44.8574, 0.55", "-3.11313, -25.5717, -48.0108, 0.55", "-5.27941, -25.391, -54.2102, 0.55", "-6.65453, -25.2998, -58.4027, 0.55", "-7.08906, -25.274, -59.863, 0.55", "-9.73215, -24.983, -69.5122, 0.55", "-10.3447, -24.8446, -72.1474, 0.55", "-10.5785, -24.7461, -73.6498, 0.55", "-10.8082, -24.5457, -77.2046, 0.55", "-10.801, -24.3943, -85.811, 0.55", "-10.6871, -24.4267, -88.1395, 0.28", "-10.5146, -24.4842, -89.467, 0.55", "-10.2104, -24.6391, -91.4392, 0.28", "-10.0139, -24.7694, -92.2497, 0.55", "-8.80764, -25.4173, -94.506, 0.28", "-7.1776, -26.4818, -95.5025, 0.55", "-6.14625, -27.2738, -96.0524, 0.28", "-5.12187, -28.1823, -96.4653, 0.55", "-4.15824, -29.2069, -96.7779, 0.28", "-3.73361, -29.7459, -96.9339, 0.55", "-2.69248, -31.1774, -97.2445, 0.28", "-2.44508, -31.6082, -97.3937, 0.55", "-1.10142, -34.0742, -98.3871, 0.28", "-0.514867, -35.2019, -99.0127, 0.55", "0.701274, -37.5801, -100.672, 0.28", "1.14103, -38.4435, -101.404, 0.55", "2.61989, -41.2455, -104.045, 0.28", "2.96987, -41.9244, -104.721, 0.55", "3.97518, -44.0841, -106.917, 0.28", "4.1982, -44.5986, -107.376, 0.55", "4.74563, -45.9692, -108.552, 0.28", "5.03398, -46.7592, -109.321, 0.55", "5.31561, -47.526, -110.154, 0.55", "5.88409, -49.0564, -111.804, 0.28", "6.27603, -49.9781, -112.987, 0.55", "7.48531, -52.1482, -116.75, 0.28", "7.92639, -52.8122, -118.247, 0.55", "8.2433, -53.2193, -119.268, 0.28", "8.57563, -53.5731, -120.292, 0.55", "9.6426, -54.5119, -123.412, 0.28", "10.4897, -55.2481, -125.739, 0.55", "12.119, -56.719, -129.539, 0.28", "12.6355, -57.174, -130.731, 0.55", "13.7324, -57.9915, -132.885, 0.28", "14.1306, -58.2572, -133.562, 0.55", "14.8902, -58.6789, -134.509, 0.28", "15.6043, -59.0267, -135.277, 0.55", "17.6739, -59.8475, -137.136, 0.28", "20.0647, -60.6756, -139.221, 0.28", "21.3246, -61.0325, -140.183, 0.28", "22.5444, -61.3456, -141.226, 0.55", "24.314, -61.7061, -142.749, 0.28", "25.1108, -61.8528, -143.408, 0.83", "27.1951, -62.2601, -145.013, 0.28", "28.0702, -62.4591, -145.761, 0.55", "31.8168, -63.502, -149.246, 0.28", "33.5916, -64.0472, -151.147, 0.28", "34.8211, -64.4418, -152.622, 0.55", "35.4765, -64.6908, -153.575, 0.55", "37.0994, -65.3849, -156.274, 0.28", "38.5665, -66.1423, -158.885, 0.55", "39.9074, -66.9003, -161.268, 0.28", "41.059, -67.6143, -163.511, 0.55", "42.0156, -68.1847, -165.357, 0.28", "42.8358, -68.5548, -166.801, 0.55", "44.8929, -69.2636, -170.151, 0.28", "45.977, -69.6205, -171.794, 0.55", "47.6613, -70.1638, -174.188, 0.28", "49.0636, -70.5497, -176.104, 0.55", "52.3255, -71.2436, -180.579, 0.28", "53.5668, -71.4155, -182.5, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.77365, -135.362, 102.471, 0.55", "-4.68928, -142.242, 105.588, 0.55", "-4.46272, -149.681, 106.877, 0.55", "-4.33446, -156.845, 109.268, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.77365, -135.362, 102.471, 0.55", "-3.50783, -141.977, 107.315, 0.55", "-3.35554, -147.682, 113.337, 0.55", "-3.20091, -152.027, 120.403, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.23364, -135.212, 101.888, 0.55", "-7.44929, -142.847, 106.552, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-8.23364, -135.212, 101.888, 0.55", "-9.2897, -143.806, 107.051, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.599, -97.6254, 3.55743, 0.83", "18.3803, -101.349, 4.3758, 0.83", "18.9522, -104.513, 5.32412, 0.83", "19.5206, -107.659, 6.26676, 0.83", "20.0605, -110.646, 7.16197, 0.83", "20.8925, -115.25, 8.54155, 0.83", "21.7184, -119.821, 9.91116, 0.83", "22.1208, -122.89, 11.2497, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "17.599, -97.6254, 3.55743, 0.55", "18.8664, -99.2338, 4.19991, 0.55", "19.9777, -100.46, 4.50137, 0.55", "20.8191, -101.358, 4.61672, 0.55", "21.7459, -102.409, 4.52661, 0.83", "22.8202, -103.59, 4.24012, 0.55", "23.871, -104.744, 3.95989, 0.83", "25.021, -105.987, 3.50173, 0.55", "25.7308, -106.698, 3.17236, 0.83", "28.0559, -108.982, 1.87111, 0.55", "29.8162, -110.774, 0.641044, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.3699, -95.8243, 25.7466, 0.55", "-15.2575, -103.92, 29.0254, 0.55", "-21.5149, -111.089, 32.1277, 0.55", "-28.5705, -117.363, 35.4483, 0.55", "-36.5074, -122.503, 38.7299, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.3699, -95.8243, 25.7466, 0.55", "-14.4032, -103.787, 31.0109, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "22.1208, -122.89, 11.2497, 0.55", "22.1783, -124.351, 11.5504, 0.55", "22.2676, -126.215, 12.0008, 0.55", "22.3577, -127.975, 12.4185, 0.55", "22.4204, -129.225, 12.6918, 0.55", "22.5308, -131.454, 13.1373, 0.55", "23.0064, -137.696, 14.3114, 0.55", "23.26, -139.801, 14.6632, 0.55", "23.4847, -141.277, 14.8525, 0.55", "23.8278, -142.947, 14.9636, 0.55", "24.1389, -144.228, 14.9406, 0.55", "25.0109, -147.2, 14.8324, 0.55", "25.6073, -149.463, 14.7023, 0.55", "26.0082, -150.95, 14.6773, 0.55", "26.925, -154.829, 14.7736, 0.55", "27.4626, -157.451, 14.9273, 0.55", "28.0635, -160.851, 15.2954, 0.55", "28.6233, -164.736, 15.9912, 0.55", "29.0063, -167.336, 16.655, 0.55", "29.2411, -168.873, 17.1021, 0.55", "29.438, -170.292, 17.4963, 0.55", "29.7587, -172.077, 17.9417, 0.55", "30.6491, -176.355, 18.7424, 0.55", "31.0747, -177.998, 19.0317, 0.55", "31.5185, -179.831, 19.3186, 0.55", "32.1737, -182.584, 19.7246, 0.55", "32.5827, -184.712, 19.9985, 0.55", "32.8873, -186.742, 20.1713, 0.55", "33.1051, -188.687, 20.2884, 0.55", "33.2756, -190.59, 20.4078, 0.55", "33.4112, -191.943, 20.486, 0.55", "33.6863, -194.146, 20.5576, 0.55", "34.097, -196.774, 20.4537, 0.55", "34.3779, -198.036, 20.3405, 0.55", "34.6823, -199.134, 20.176, 0.55", "35.4088, -201.182, 19.8138, 0.55", "35.8787, -202.478, 19.5449, 0.55", "36.4387, -204.08, 19.2769, 0.55", "36.7557, -205.218, 19.1235, 0.55", "37.4679, -208.195, 18.7945, 0.55", "37.8634, -210.448, 18.6543, 0.55", "38.2658, -213.972, 18.6471, 0.55", "38.4473, -216.265, 18.8504, 0.55", "38.5793, -218.683, 19.1187, 0.28", "38.5904, -219.661, 19.2464, 0.28", "38.4905, -222.06, 19.728, 0.28", "38.2862, -224.297, 20.3051, 0.28", "38.072, -227.26, 21.4617, 0.28", "39.2009, -233.664, 23.1597, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "22.1208, -122.89, 11.2497, 0.55", "22.5275, -123.272, 12.3213, 0.55", "23.2499, -124.269, 14.5898, 0.55", "23.8197, -125.258, 16.5795, 0.28", "24.3857, -126.389, 18.7394, 0.55", "24.5841, -127.132, 20.1173, 0.28", "24.7568, -128.496, 22.5937, 0.55", "24.6164, -129.24, 23.7334, 0.28", "24.5104, -129.518, 24.1711, 0.28", "24.3104, -129.929, 24.9348, 0.55", "23.6771, -131.291, 27.8581, 0.28", "23.4413, -131.825, 29.0908, 0.55", "23.0594, -133.334, 32.6991, 0.28", "22.9588, -134.072, 34.6207, 0.28", "22.954, -134.998, 36.9708, 0.55", "23.2099, -136.388, 40.3672, 0.28", "23.2862, -136.566, 40.8102, 0.55", "23.7897, -137.414, 42.937, 0.28", "23.8544, -137.49, 43.1216, 0.55", "24.4103, -138.389, 44.76, 0.28", "24.6399, -138.885, 45.5564, 0.55", "26.4211, -142.576, 52.1514, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-36.5074, -122.503, 38.7299, 0.55", "-42.7229, -127.285, 44.8312, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-36.5074, -122.503, 38.7299, 0.55", "-44.5286, -131.846, 41.0474, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_BP_60923f9e40_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.74386, 8.9517, 2.98245, 0.83 ) }
    dend_43 { pt3dadd( -7.51, 11.8708, 3.55043, 1.11 ) }
    dend_43 { pt3dadd( -9.73054, 13.5907, 3.84589, 0.83 ) }
    dend_43 { pt3dadd( -11.8879, 15.2472, 4.11061, 0.83 ) }
    dend_43 { pt3dadd( -13.1652, 16.1918, 4.25568, 1.11 ) }
    dend_43 { pt3dadd( -17.1651, 19.1435, 4.7206, 1.11 ) }
    dend_43 { pt3dadd( -24.3194, 24.1968, 5.54245, 0.83 ) }
    dend_43 { pt3dadd( -26.8969, 25.948, 5.81384, 0.83 ) }
    dend_43 { pt3dadd( -28.9379, 27.2935, 5.98242, 0.83 ) }
    dend_43 { pt3dadd( -30.9282, 28.6269, 6.12834, 0.83 ) }
    dend_43 { pt3dadd( -32.5484, 29.726, 6.20707, 0.55 ) }
    dend_43 { pt3dadd( -33.7662, 30.4701, 6.28697, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.21628, 6.07556, -6.11149, 0.55 ) }
    dend_28 { pt3dadd( 6.33247, 6.53333, -6.58407, 0.55 ) }
    dend_28 { pt3dadd( 7.56041, 6.64889, -7.2094, 0.83 ) }
    dend_28 { pt3dadd( 9.50388, 6.77187, -8.37099, 0.55 ) }
    dend_28 { pt3dadd( 10.442, 6.83123, -8.93171, 1.38 ) }
    dend_28 { pt3dadd( 12.7487, 6.9772, -10.3104, 0.55 ) }
    dend_28 { pt3dadd( 13.7311, 6.92777, -10.9682, 0.83 ) }
    dend_28 { pt3dadd( 18.8131, 6.02131, -14.6643, 0.55 ) }
    dend_28 { pt3dadd( 19.3048, 5.89941, -15.0709, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.680474, -10.1652, 3.11714, 1.11 ) }
    dend_1 { pt3dadd( -0.721874, -13.8179, 4.42664, 1.11 ) }
    dend_1 { pt3dadd( -0.738734, -15.3056, 4.95995, 0.83 ) }
    dend_1 { pt3dadd( -0.761135, -17.282, 5.66848, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.864711, 9.39885, -1.35356, 1.11 ) }
    dend_0 { pt3dadd( 0.949584, 10.9859, -1.34155, 1.11 ) }
    dend_0 { pt3dadd( 1.08352, 13.5752, -1.2272, 1.38 ) }
    dend_0 { pt3dadd( 1.09355, 13.7194, -1.21831, 1.38 ) }
    dend_0 { pt3dadd( 1.32551, 15.502, -1.09285, 0.83 ) }
    dend_0 { pt3dadd( 1.64984, 17.3859, -0.861206, 0.83 ) }
    dend_0 { pt3dadd( 2.20443, 19.5104, -0.346321, 0.83 ) }
    dend_0 { pt3dadd( 2.51727, 20.3148, -0.0540192, 0.83 ) }
    dend_0 { pt3dadd( 2.82385, 20.8963, 0.214728, 1.11 ) }
    dend_0 { pt3dadd( 3.71549, 22.311, 0.905393, 0.55 ) }
    dend_0 { pt3dadd( 4.75189, 23.7861, 1.73122, 0.83 ) }
    dend_0 { pt3dadd( 6.10181, 25.2997, 2.66307, 0.55 ) }
    dend_0 { pt3dadd( 6.78753, 25.9269, 3.08297, 0.83 ) }
    dend_0 { pt3dadd( 7.74804, 26.7758, 3.74173, 0.55 ) }
    dend_0 { pt3dadd( 8.9406, 27.8558, 4.63745, 0.55 ) }
    dend_0 { pt3dadd( 10.611, 29.4827, 6.01137, 0.55 ) }
    dend_0 { pt3dadd( 12.4526, 31.3431, 7.52857, 0.55 ) }
    dend_0 { pt3dadd( 13.62, 32.5506, 8.66944, 0.55 ) }
    dend_0 { pt3dadd( 15.0578, 34.0776, 10.2876, 0.55 ) }
    dend_0 { pt3dadd( 15.3574, 34.3836, 10.6556, 0.83 ) }
    dend_0 { pt3dadd( 16.1506, 35.1923, 11.6957, 0.55 ) }
    dend_0 { pt3dadd( 16.816, 35.8221, 12.5107, 0.83 ) }
    dend_0 { pt3dadd( 18.3522, 37.5467, 14.445, 0.55 ) }
    dend_0 { pt3dadd( 18.9256, 38.1765, 15.0057, 0.83 ) }
    dend_0 { pt3dadd( 19.4568, 38.6395, 15.3809, 0.55 ) }
    dend_0 { pt3dadd( 19.9805, 39.0373, 15.6646, 0.83 ) }
    dend_0 { pt3dadd( 21.1369, 39.7747, 16.1713, 0.83 ) }
    dend_0 { pt3dadd( 22.6624, 40.7795, 16.7058, 0.83 ) }
    dend_0 { pt3dadd( 23.5955, 41.4448, 16.9327, 0.55 ) }
    dend_0 { pt3dadd( 24.3079, 42.0216, 17.1098, 0.55 ) }
    dend_0 { pt3dadd( 26.1742, 43.5119, 17.5461, 0.83 ) }
    dend_0 { pt3dadd( 27.3779, 44.4675, 17.7792, 0.55 ) }
    dend_0 { pt3dadd( 29.2024, 45.8667, 18.0588, 0.55 ) }
    dend_0 { pt3dadd( 30.8706, 47.0383, 18.2478, 0.55 ) }
    dend_0 { pt3dadd( 32.3609, 48.0298, 18.3766, 0.55 ) }
    dend_0 { pt3dadd( 34.2402, 49.19, 18.4534, 0.55 ) }
    dend_0 { pt3dadd( 35.386, 49.7558, 18.4627, 0.55 ) }
    dend_0 { pt3dadd( 36.1636, 50.0723, 18.3752, 0.55 ) }
    dend_0 { pt3dadd( 37.1915, 50.3037, 18.1709, 0.55 ) }
    dend_0 { pt3dadd( 38.7182, 50.3979, 17.739, 0.55 ) }
    dend_0 { pt3dadd( 39.6675, 50.3347, 17.4323, 0.55 ) }
    dend_0 { pt3dadd( 41.0582, 50.2039, 17.0828, 0.55 ) }
    dend_0 { pt3dadd( 43.7171, 50.0396, 16.6567, 0.55 ) }
    dend_0 { pt3dadd( 45.8101, 50.0075, 16.4721, 0.55 ) }
    dend_0 { pt3dadd( 48.0347, 50.0793, 16.4098, 0.55 ) }
    dend_0 { pt3dadd( 49.4658, 50.174, 16.4827, 0.55 ) }
    dend_0 { pt3dadd( 53.1965, 50.7555, 16.9171, 0.55 ) }
    dend_0 { pt3dadd( 55.4118, 51.2683, 17.3399, 0.55 ) }
    dend_0 { pt3dadd( 57.0799, 51.7605, 17.8115, 0.55 ) }
    dend_0 { pt3dadd( 58.0966, 52.2258, 18.1373, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 59.2764, 52.9218, 18.5096, 0.55 ) }
    dend_0 { pt3dadd( 61.2684, 54.2985, 18.9645, 0.55 ) }
    dend_0 { pt3dadd( 61.7231, 54.6303, 19.0064, 0.55 ) }
    dend_0 { pt3dadd( 63.0238, 55.5168, 19.0411, 0.55 ) }
    dend_0 { pt3dadd( 64.22, 56.4633, 19.0688, 0.83 ) }
    dend_0 { pt3dadd( 64.8726, 56.9886, 19.0736, 0.55 ) }
    dend_0 { pt3dadd( 65.8494, 57.8917, 19.0424, 0.83 ) }
    dend_0 { pt3dadd( 71.0453, 62.7134, 20.2282, 0.83 ) }
    dend_0 { pt3dadd( 75.5629, 68.2613, 20.9093, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -33.7662, 30.4701, 6.28697, 0.55 ) }
    dend_55 { pt3dadd( -35.3436, 31.0115, 5.73318, 0.55 ) }
    dend_55 { pt3dadd( -37.0589, 31.6002, 5.13098, 0.55 ) }
    dend_55 { pt3dadd( -39.1288, 32.3106, 4.40426, 0.55 ) }
    dend_55 { pt3dadd( -40.838, 32.8972, 3.80419, 0.83 ) }
    dend_55 { pt3dadd( -42.2703, 33.3887, 3.30133, 0.55 ) }
    dend_55 { pt3dadd( -44.9288, 34.3012, 2.36795, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.7662, 30.4701, 6.28697, 0.55 ) }
    dend_44 { pt3dadd( -35.6994, 30.7244, 6.37354, 0.55 ) }
    dend_44 { pt3dadd( -37.7141, 30.9763, 6.67276, 0.55 ) }
    dend_44 { pt3dadd( -39.9877, 31.2703, 7.06674, 0.55 ) }
    dend_44 { pt3dadd( -43.2201, 31.7265, 7.9386, 0.55 ) }
    dend_44 { pt3dadd( -45.8821, 32.0715, 8.87556, 0.55 ) }
    dend_44 { pt3dadd( -48.6473, 32.4161, 9.98782, 0.55 ) }
    dend_44 { pt3dadd( -51.2498, 32.6273, 11.3962, 0.55 ) }
    dend_44 { pt3dadd( -53.4298, 32.6277, 12.8851, 0.55 ) }
    dend_44 { pt3dadd( -56.0705, 32.4899, 15.0985, 0.55 ) }
    dend_44 { pt3dadd( -57.1771, 32.3748, 16.2586, 0.55 ) }
    dend_44 { pt3dadd( -58.3598, 32.2488, 17.5744, 0.55 ) }
    dend_44 { pt3dadd( -60.4554, 31.8149, 19.8246, 0.55 ) }
    dend_44 { pt3dadd( -61.6113, 31.5426, 20.8177, 0.55 ) }
    dend_44 { pt3dadd( -62.8209, 31.2134, 21.8589, 0.55 ) }
    dend_44 { pt3dadd( -64.293, 30.8062, 22.9296, 0.55 ) }
    dend_44 { pt3dadd( -65.9048, 30.39, 24.0375, 0.55 ) }
    dend_44 { pt3dadd( -68.2156, 29.7776, 25.5655, 0.55 ) }
    dend_44 { pt3dadd( -71.3761, 29.1193, 27.2591, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.3048, 5.89941, -15.0709, 0.55 ) }
    dend_34 { pt3dadd( 24.3749, 7.02264, -16.1432, 0.55 ) }
    dend_34 { pt3dadd( 27.2807, 7.54077, -17.1852, 0.55 ) }
    dend_34 { pt3dadd( 30.1405, 7.92817, -18.2678, 0.55 ) }
    dend_34 { pt3dadd( 32.09, 8.11495, -19.0146, 0.55 ) }
    dend_34 { pt3dadd( 34.9358, 8.31968, -20.0909, 0.55 ) }
    dend_34 { pt3dadd( 40.8296, 8.64847, -22.5199, 0.55 ) }
    dend_34 { pt3dadd( 47.5059, 9.02351, -25.7273, 0.55 ) }
    dend_34 { pt3dadd( 50.7278, 9.02464, -27.5285, 0.55 ) }
    dend_34 { pt3dadd( 52.449, 8.99375, -28.612, 0.55 ) }
    dend_34 { pt3dadd( 54.3355, 8.97687, -29.8767, 0.55 ) }
    dend_34 { pt3dadd( 57.6966, 8.8502, -32.1297, 0.55 ) }
    dend_34 { pt3dadd( 58.9123, 8.73555, -32.9965, 0.55 ) }
    dend_34 { pt3dadd( 64.0597, 8.42151, -37.0585, 0.55 ) }
    dend_34 { pt3dadd( 67.702, 8.28605, -40.203, 0.55 ) }
    dend_34 { pt3dadd( 69.8004, 8.25552, -42.0681, 0.55 ) }
    dend_34 { pt3dadd( 71.8923, 8.20608, -43.9286, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 19.3048, 5.89941, -15.0709, 0.83 ) }
    dend_29 { pt3dadd( 21.2213, 7.24295, -15.1594, 0.83 ) }
    dend_29 { pt3dadd( 22.318, 8.00612, -15.2622, 0.55 ) }
    dend_29 { pt3dadd( 23.9333, 9.15628, -15.5595, 0.83 ) }
    dend_29 { pt3dadd( 25.0184, 9.95608, -15.7958, 0.55 ) }
    dend_29 { pt3dadd( 26.5118, 11.1025, -16.1018, 0.83 ) }
    dend_29 { pt3dadd( 28.3038, 12.5227, -16.4029, 0.55 ) }
    dend_29 { pt3dadd( 29.2088, 13.1704, -16.5102, 0.55 ) }
    dend_29 { pt3dadd( 31.3062, 14.3769, -16.582, 0.83 ) }
    dend_29 { pt3dadd( 33.2189, 15.2532, -16.3729, 0.55 ) }
    dend_29 { pt3dadd( 34.2863, 15.7392, -16.1492, 0.83 ) }
    dend_29 { pt3dadd( 35.8816, 16.5174, -15.6419, 0.55 ) }
    dend_29 { pt3dadd( 38.1632, 17.6997, -14.6114, 0.55 ) }
    dend_29 { pt3dadd( 41.338, 19.1836, -12.9979, 0.55 ) }
    dend_29 { pt3dadd( 44.367, 20.5015, -11.2327, 0.55 ) }
    dend_29 { pt3dadd( 46.7672, 21.5222, -9.7873, 0.55 ) }
    dend_29 { pt3dadd( 50.7226, 23.2256, -7.38415, 0.55 ) }
    dend_29 { pt3dadd( 53.6095, 24.5632, -5.56586, 0.55 ) }
    dend_29 { pt3dadd( 55.3412, 25.5278, -4.41214, 0.55 ) }
    dend_29 { pt3dadd( 58.5076, 27.6493, -2.28126, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.761135, -17.282, 5.66848, 0.83 ) }
    dend_11 { pt3dadd( -0.963138, -20.8166, 5.51662, 0.83 ) }
    dend_11 { pt3dadd( -1.15995, -24.2603, 5.36866, 0.83 ) }
    dend_11 { pt3dadd( -1.37969, -28.1052, 5.20347, 0.83 ) }
    dend_11 { pt3dadd( -1.49443, -30.113, 5.1172, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.761135, -17.282, 5.66848, 0.55 ) }
    dend_2 { pt3dadd( 0.0515981, -19.336, 6.98347, 0.55 ) }
    dend_2 { pt3dadd( 0.811831, -21.8442, 8.72816, 0.55 ) }
    dend_2 { pt3dadd( 1.32759, -25.1165, 11.1982, 0.55 ) }
    dend_2 { pt3dadd( 1.44352, -26.3859, 12.202, 0.83 ) }
    dend_2 { pt3dadd( 1.48442, -29.6185, 15.1637, 0.55 ) }
    dend_2 { pt3dadd( 1.37276, -31.2838, 16.7397, 0.55 ) }
    dend_2 { pt3dadd( 1.10212, -34.5208, 19.9493, 0.83 ) }
    dend_2 { pt3dadd( 0.779301, -36.9211, 22.5003, 0.55 ) }
    dend_2 { pt3dadd( 0.333628, -38.8953, 24.5933, 0.55 ) }
    dend_2 { pt3dadd( -0.602315, -42.6312, 28.4984, 0.55 ) }
    dend_2 { pt3dadd( -1.34907, -45.6086, 31.5755, 0.55 ) }
    dend_2 { pt3dadd( -1.89541, -47.9973, 34.0705, 0.55 ) }
    dend_2 { pt3dadd( -2.34401, -50.5374, 36.6239, 0.28 ) }
    dend_2 { pt3dadd( -2.4462, -51.598, 37.6369, 0.55 ) }
    dend_2 { pt3dadd( -2.59617, -53.5579, 39.3913, 0.28 ) }
    dend_2 { pt3dadd( -2.4663, -56.6275, 41.6096, 0.55 ) }
    dend_2 { pt3dadd( -4.42146, -66.7659, 49.8085, 0.55 ) }
    dend_2 { pt3dadd( -6.52564, -76.1283, 58.85, 0.55 ) }
    dend_2 { pt3dadd( -7.81123, -83.8463, 69.4617, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -44.9288, 34.3012, 2.36795, 0.55 ) }
    dend_61 { pt3dadd( -46.7831, 35.2622, 4.41942, 0.55 ) }
    dend_61 { pt3dadd( -47.5016, 35.6739, 5.41584, 0.83 ) }
    dend_61 { pt3dadd( -48.2657, 36.1749, 6.74473, 0.55 ) }
    dend_61 { pt3dadd( -48.8154, 36.5975, 7.83312, 0.83 ) }
    dend_61 { pt3dadd( -50.2781, 37.7761, 10.6282, 0.55 ) }
    dend_61 { pt3dadd( -50.8313, 38.2401, 11.6859, 0.28 ) }
    dend_61 { pt3dadd( -51.7023, 39.0911, 13.5517, 0.55 ) }
    dend_61 { pt3dadd( -52.8769, 40.2398, 16.0415, 0.55 ) }
    dend_61 { pt3dadd( -53.7989, 41.0785, 17.8709, 0.55 ) }
    dend_61 { pt3dadd( -55.0583, 42.1669, 20.2582, 0.28 ) }
    dend_61 { pt3dadd( -55.4135, 42.4225, 20.821, 0.55 ) }
    dend_61 { pt3dadd( -56.1685, 42.9441, 21.944, 0.28 ) }
    dend_61 { pt3dadd( -56.7142, 43.2831, 22.6368, 0.55 ) }
    dend_61 { pt3dadd( -57.883, 43.901, 23.9413, 0.28 ) }
    dend_61 { pt3dadd( -58.5812, 44.1938, 24.6893, 0.55 ) }
    dend_61 { pt3dadd( -59.7893, 44.6059, 26.0733, 0.28 ) }
    dend_61 { pt3dadd( -60.6156, 44.8579, 26.9738, 0.55 ) }
    dend_61 { pt3dadd( -64.3422, 47.2859, 35.1882, 0.55 ) }
    dend_61 { pt3dadd( -67.2226, 49.0972, 43.8878, 0.55 ) }
    dend_61 { pt3dadd( -69.7717, 50.0928, 52.8193, 0.55 ) }
    dend_61 { pt3dadd( -72.3163, 49.9246, 61.8057, 0.55 ) }
    dend_61 { pt3dadd( -73.5851, 50.4987, 71.0426, 0.55 ) }
    dend_61 { pt3dadd( -75.6703, 51.2455, 80.1175, 0.55 ) }
    dend_61 { pt3dadd( -77.9328, 53.5095, 88.8934, 0.55 ) }
    dend_61 { pt3dadd( -80.1216, 55.0471, 97.8435, 0.55 ) }
    dend_61 { pt3dadd( -82.1325, 57.2539, 106.694, 0.55 ) }
    dend_61 { pt3dadd( -83.6287, 59.4411, 115.652, 0.55 ) }
    dend_61 { pt3dadd( -84.0473, 60.7603, 124.89, 0.55 ) }
    dend_61 { pt3dadd( -84.5932, 62.9375, 133.958, 0.55 ) }
    dend_61 { pt3dadd( -85.2422, 64.1501, 143.197, 0.55 ) }
    dend_61 { pt3dadd( -84.7074, 65.1262, 152.472, 0.55 ) }
    dend_61 { pt3dadd( -82.596, 66.8843, 161.4, 0.55 ) }
    dend_61 { pt3dadd( -80.4388, 66.8361, 170.489, 0.55 ) }
    dend_61 { pt3dadd( -77.0131, 66.6042, 179.176, 0.55 ) }
    dend_61 { pt3dadd( -74.0348, 66.8087, 188.028, 0.55 ) }
    dend_61 { pt3dadd( -72.0103, 67.7136, 197.102, 0.55 ) }
    dend_61 { pt3dadd( -72.0239, 69.9195, 206.179, 0.55 ) }
    dend_61 { pt3dadd( -71.1464, 71.18, 215.393, 0.55 ) }
    dend_61 { pt3dadd( -68.6043, 74.0779, 223.902, 0.55 ) }
    dend_61 { pt3dadd( -67.6078, 77.5519, 232.516, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -44.9288, 34.3012, 2.36795, 0.55 ) }
    dend_56 { pt3dadd( -47.0175, 34.3099, 0.910067, 0.55 ) }
    dend_56 { pt3dadd( -48.8226, 34.3161, -0.870766, 0.55 ) }
    dend_56 { pt3dadd( -50.6027, 34.4554, -2.84584, 0.55 ) }
    dend_56 { pt3dadd( -51.7175, 34.5425, -4.0826, 0.55 ) }
    dend_56 { pt3dadd( -53.7509, 34.7016, -6.3386, 0.83 ) }
    dend_56 { pt3dadd( -55.2385, 34.8179, -7.98912, 0.55 ) }
    dend_56 { pt3dadd( -57.1204, 34.9108, -10.476, 0.83 ) }
    dend_56 { pt3dadd( -57.9873, 35.0845, -11.9774, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -71.3761, 29.1193, 27.2591, 0.28 ) }
    dend_48 { pt3dadd( -72.2858, 27.673, 27.0276, 0.28 ) }
    dend_48 { pt3dadd( -72.7231, 27.0545, 26.879, 0.28 ) }
    dend_48 { pt3dadd( -73.3018, 26.1797, 26.631, 0.55 ) }
    dend_48 { pt3dadd( -73.782, 25.4092, 26.4165, 0.28 ) }
    dend_48 { pt3dadd( -74.4915, 24.2342, 26.1025, 0.55 ) }
    dend_48 { pt3dadd( -76.4728, 20.7754, 25.2262, 0.28 ) }
    dend_48 { pt3dadd( -77.1387, 19.5643, 24.8155, 0.55 ) }
    dend_48 { pt3dadd( -78.1587, 17.7009, 24.1171, 0.28 ) }
    dend_48 { pt3dadd( -78.7556, 16.5873, 23.6457, 0.55 ) }
    dend_48 { pt3dadd( -79.1702, 15.8206, 23.3021, 0.28 ) }
    dend_48 { pt3dadd( -79.6423, 14.9403, 22.9147, 0.55 ) }
    dend_48 { pt3dadd( -81.0873, 11.9954, 21.6817, 0.28 ) }
    dend_48 { pt3dadd( -81.5427, 11.1062, 21.2782, 0.55 ) }
    dend_48 { pt3dadd( -82.3383, 9.75434, 20.527, 0.28 ) }
    dend_48 { pt3dadd( -82.9749, 8.89568, 19.9817, 0.28 ) }
    dend_48 { pt3dadd( -83.524, 8.32757, 19.6086, 0.55 ) }
    dend_48 { pt3dadd( -85.3801, 6.74429, 18.6428, 0.28 ) }
    dend_48 { pt3dadd( -86.2285, 6.1068, 18.2768, 0.55 ) }
    dend_48 { pt3dadd( -88.303, 4.66342, 17.3608, 0.28 ) }
    dend_48 { pt3dadd( -90.36, 3.3958, 16.5396, 0.28 ) }
    dend_48 { pt3dadd( -92.582, 2.19882, 15.7153, 0.28 ) }
    dend_48 { pt3dadd( -93.5859, 1.7547, 15.4172, 0.55 ) }
    dend_48 { pt3dadd( -98.6455, -3.46962, 13.0729, 0.55 ) }
    dend_48 { pt3dadd( -104.035, -8.8108, 12.1731, 0.55 ) }
    dend_48 { pt3dadd( -109.453, -13.8115, 10.1657, 0.55 ) }
    dend_48 { pt3dadd( -115.057, -18.3066, 7.56321, 0.55 ) }
    dend_48 { pt3dadd( -120.783, -22.2237, 4.36008, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -71.3761, 29.1193, 27.2591, 0.55 ) }
    dend_45 { pt3dadd( -72.1871, 29.057, 27.6339, 0.55 ) }
    dend_45 { pt3dadd( -74.402, 29.0225, 28.9735, 0.55 ) }
    dend_45 { pt3dadd( -75.2191, 29.0091, 29.5305, 0.55 ) }
    dend_45 { pt3dadd( -77.1223, 28.9319, 30.8968, 0.55 ) }
    dend_45 { pt3dadd( -80.0919, 28.774, 32.8402, 0.55 ) }
    dend_45 { pt3dadd( -81.651, 28.7276, 33.801, 0.28 ) }
    dend_45 { pt3dadd( -84.0797, 28.5783, 35.2728, 0.55 ) }
    dend_45 { pt3dadd( -85.8933, 28.3982, 36.3183, 0.55 ) }
    dend_45 { pt3dadd( -86.6578, 28.3178, 36.7637, 0.28 ) }
    dend_45 { pt3dadd( -91.2446, 27.8301, 39.4305, 0.55 ) }
    dend_45 { pt3dadd( -93.4041, 27.4385, 40.5921, 0.28 ) }
    dend_45 { pt3dadd( -96.3578, 26.8172, 41.9964, 0.28 ) }
    dend_45 { pt3dadd( -98.9483, 26.2484, 43.0465, 0.55 ) }
    dend_45 { pt3dadd( -108.775, 26.4969, 48.5883, 0.55 ) }
    dend_45 { pt3dadd( -117.931, 27.0098, 55.1648, 0.55 ) }
    dend_45 { pt3dadd( -126.069, 26.9846, 62.9822, 0.55 ) }
    dend_45 { pt3dadd( -134.035, 29.0457, 70.7046, 0.55 ) }
    dend_45 { pt3dadd( -140.165, 31.6355, 79.8185, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -144.499, 35.4853, 89.5002, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 71.8923, 8.20608, -43.9286, 0.55 ) }
    dend_42 { pt3dadd( 75.557, 9.21838, -47.1235, 0.55 ) }
    dend_42 { pt3dadd( 76.7178, 9.47805, -48.2022, 0.55 ) }
    dend_42 { pt3dadd( 78.1733, 9.75609, -49.5291, 0.55 ) }
    dend_42 { pt3dadd( 80.8149, 10.2193, -52.0926, 0.55 ) }
    dend_42 { pt3dadd( 83.5778, 10.5788, -54.8248, 0.55 ) }
    dend_42 { pt3dadd( 84.9347, 10.6478, -56.1137, 0.83 ) }
    dend_42 { pt3dadd( 86.0554, 10.6165, -57.2517, 0.55 ) }
    dend_42 { pt3dadd( 86.8969, 10.5129, -58.1808, 0.83 ) }
    dend_42 { pt3dadd( 88.9394, 9.9591, -60.5305, 0.55 ) }
    dend_42 { pt3dadd( 90.6297, 9.34289, -62.4595, 0.55 ) }
    dend_42 { pt3dadd( 92.5751, 8.63155, -64.5805, 0.55 ) }
    dend_42 { pt3dadd( 94.7375, 7.8972, -66.9933, 0.55 ) }
    dend_42 { pt3dadd( 96.1894, 7.36601, -68.644, 0.55 ) }
    dend_42 { pt3dadd( 97.8275, 6.7558, -70.558, 0.55 ) }
    dend_42 { pt3dadd( 99.2399, 6.26794, -72.317, 0.55 ) }
    dend_42 { pt3dadd( 100.124, 6.02995, -73.5515, 0.55 ) }
    dend_42 { pt3dadd( 101.241, 5.56648, -76.0357, 0.55 ) }
    dend_42 { pt3dadd( 101.852, 5.22366, -77.5829, 0.55 ) }
    dend_42 { pt3dadd( 102.383, 4.6642, -79.6255, 0.55 ) }
    dend_42 { pt3dadd( 103.118, 3.60462, -83.0643, 0.55 ) }
    dend_42 { pt3dadd( 103.269, 3.33521, -83.836, 0.28 ) }
    dend_42 { pt3dadd( 105.234, -0.0420453, -93.2067, 0.28 ) }
    dend_42 { pt3dadd( 105.895, -1.00987, -95.9605, 0.83 ) }
    dend_42 { pt3dadd( 108.498, -4.60882, -105.708, 0.83 ) }
    dend_42 { pt3dadd( 109.842, -6.46045, -110.215, 0.83 ) }
    dend_42 { pt3dadd( 110.488, -7.28221, -112.031, 0.55 ) }
    dend_42 { pt3dadd( 111.228, -8.08621, -113.8, 0.55 ) }
    dend_42 { pt3dadd( 113.259, -9.62605, -117.074, 0.55 ) }
    dend_42 { pt3dadd( 115.427, -10.9921, -119.949, 0.28 ) }
    dend_42 { pt3dadd( 116.08, -11.1918, -120.102, 0.55 ) }
    dend_42 { pt3dadd( 117.515, -11.4737, -119.945, 0.28 ) }
    dend_42 { pt3dadd( 118.4, -11.5711, -119.729, 0.55 ) }
    dend_42 { pt3dadd( 119.323, -11.676, -119.423, 0.28 ) }
    dend_42 { pt3dadd( 120.43, -11.7411, -119.013, 0.55 ) }
    dend_42 { pt3dadd( 122.08, -11.7718, -118.584, 0.28 ) }
    dend_42 { pt3dadd( 123.407, -11.842, -118.277, 0.55 ) }
    dend_42 { pt3dadd( 124.87, -11.836, -118.066, 0.28 ) }
    dend_42 { pt3dadd( 126.858, -11.8415, -117.955, 0.55 ) }
    dend_42 { pt3dadd( 129.085, -11.8114, -117.97, 0.55 ) }
    dend_42 { pt3dadd( 131.042, -11.7766, -118.116, 0.28 ) }
    dend_42 { pt3dadd( 133.748, -11.7208, -118.469, 0.55 ) }
    dend_42 { pt3dadd( 138.418, -11.5521, -119.593, 0.55 ) }
    dend_42 { pt3dadd( 140.475, -11.3992, -120.352, 0.55 ) }
    dend_42 { pt3dadd( 141.357, -11.3074, -120.777, 0.83 ) }
    dend_42 { pt3dadd( 143.036, -11.1382, -121.745, 0.55 ) }
    dend_42 { pt3dadd( 144.199, -10.9816, -122.495, 0.83 ) }
    dend_42 { pt3dadd( 147.322, -10.481, -124.56, 0.55 ) }
    dend_42 { pt3dadd( 149.235, -10.3144, -125.855, 0.28 ) }
    dend_42 { pt3dadd( 150.044, -10.2844, -126.303, 0.55 ) }
    dend_42 { pt3dadd( 152.27, -10.3801, -127.26, 0.28 ) }
    dend_42 { pt3dadd( 153.054, -10.4795, -127.535, 0.55 ) }
    dend_42 { pt3dadd( 154.675, -10.7566, -127.843, 0.28 ) }
    dend_42 { pt3dadd( 156.333, -11.1648, -127.856, 0.55 ) }
    dend_42 { pt3dadd( 159.695, -12.0996, -127.281, 0.28 ) }
    dend_42 { pt3dadd( 161.248, -12.579, -126.846, 0.55 ) }
    dend_42 { pt3dadd( 163.566, -13.408, -126.063, 0.28 ) }
    dend_42 { pt3dadd( 166.493, -14.4322, -124.972, 0.55 ) }
    dend_42 { pt3dadd( 168.609, -15.1408, -124.154, 0.55 ) }
    dend_42 { pt3dadd( 172.269, -16.249, -122.691, 0.28 ) }
    dend_42 { pt3dadd( 173.767, -16.6499, -122.219, 0.55 ) }
    dend_42 { pt3dadd( 176.342, -17.2285, -121.702, 0.28 ) }
    dend_42 { pt3dadd( 178.897, -17.6321, -121.384, 0.55 ) }
    dend_42 { pt3dadd( 180.29, -17.7191, -121.421, 0.28 ) }
    dend_42 { pt3dadd( 181.54, -17.6407, -121.572, 0.55 ) }
    dend_42 { pt3dadd( 185.057, -17.2474, -122.356, 0.28 ) }
    dend_42 { pt3dadd( 187.56, -16.7966, -122.978, 0.28 ) }
    dend_42 { pt3dadd( 189.728, -16.2485, -123.569, 0.55 ) }
    dend_42 { pt3dadd( 192.118, -15.59, -124.352, 0.28 ) }
    dend_42 { pt3dadd( 192.718, -15.3834, -124.533, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 71.8923, 8.20608, -43.9286, 0.55 ) }
    dend_35 { pt3dadd( 72.7533, 5.79685, -45.1917, 0.55 ) }
    dend_35 { pt3dadd( 73.3075, 3.75098, -46.1207, 0.28 ) }
    dend_35 { pt3dadd( 73.8123, 1.8915, -46.8186, 0.55 ) }
    dend_35 { pt3dadd( 75.0769, -2.03091, -48.3364, 0.28 ) }
    dend_35 { pt3dadd( 75.1502, -2.28184, -48.4656, 0.55 ) }
    dend_35 { pt3dadd( 75.5693, -3.60242, -49.246, 0.28 ) }
    dend_35 { pt3dadd( 75.8223, -4.72185, -50.0552, 0.55 ) }
    dend_35 { pt3dadd( 76.0258, -5.90958, -51.0229, 0.28 ) }
    dend_35 { pt3dadd( 76.2607, -7.54132, -52.411, 0.55 ) }
    dend_35 { pt3dadd( 76.8476, -11.6321, -55.8261, 0.55 ) }
    dend_35 { pt3dadd( 77.3442, -15.3709, -58.9986, 0.55 ) }
    dend_35 { pt3dadd( 77.7144, -18.3627, -61.5377, 0.55 ) }
    dend_35 { pt3dadd( 78.0295, -21.3046, -63.9855, 0.55 ) }
    dend_35 { pt3dadd( 78.1085, -22.0621, -64.5886, 0.28 ) }
    dend_35 { pt3dadd( 78.2134, -22.8629, -65.1718, 0.55 ) }
    dend_35 { pt3dadd( 78.4525, -23.9522, -65.8865, 0.28 ) }
    dend_35 { pt3dadd( 79.0642, -25.8677, -67.0029, 0.55 ) }
    dend_35 { pt3dadd( 80.5276, -29.4485, -68.5929, 0.55 ) }
    dend_35 { pt3dadd( 81.3297, -31.3559, -69.2805, 0.28 ) }
    dend_35 { pt3dadd( 82.0363, -33.3154, -70.0612, 0.55 ) }
    dend_35 { pt3dadd( 82.8331, -36.0912, -71.2523, 0.28 ) }
    dend_35 { pt3dadd( 83.3402, -38.3517, -72.2621, 0.55 ) }
    dend_35 { pt3dadd( 83.9626, -41.7474, -73.7766, 0.28 ) }
    dend_35 { pt3dadd( 84.6298, -45.2481, -75.2414, 0.55 ) }
    dend_35 { pt3dadd( 85.5355, -50.3421, -77.4095, 0.28 ) }
    dend_35 { pt3dadd( 85.9627, -53.0646, -78.573, 0.55 ) }
    dend_35 { pt3dadd( 86.3577, -55.8602, -79.8245, 0.28 ) }
    dend_35 { pt3dadd( 86.6824, -58.3389, -81.0698, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 87.1888, -61.4536, -82.8776, 0.55 ) }
    dend_35 { pt3dadd( 87.842, -64.3138, -84.4888, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 58.5076, 27.6493, -2.28126, 0.55 ) }
    dend_31 { pt3dadd( 61.5335, 27.3154, -1.87385, 0.55 ) }
    dend_31 { pt3dadd( 63.7265, 27.0146, -1.79343, 0.55 ) }
    dend_31 { pt3dadd( 68.5107, 26.3325, -1.87197, 0.55 ) }
    dend_31 { pt3dadd( 70.6492, 26.0054, -2.10277, 0.55 ) }
    dend_31 { pt3dadd( 72.973, 25.7129, -2.46627, 0.55 ) }
    dend_31 { pt3dadd( 76.0754, 25.403, -3.16816, 0.55 ) }
    dend_31 { pt3dadd( 79.3266, 25.0278, -4.2323, 0.55 ) }
    dend_31 { pt3dadd( 81.0187, 24.8331, -4.99117, 0.55 ) }
    dend_31 { pt3dadd( 84.4208, 24.4966, -7.01314, 0.55 ) }
    dend_31 { pt3dadd( 85.9834, 24.3616, -7.99408, 0.55 ) }
    dend_31 { pt3dadd( 89.6388, 23.9845, -10.4006, 0.55 ) }
    dend_31 { pt3dadd( 92.1185, 23.6222, -12.0229, 0.55 ) }
    dend_31 { pt3dadd( 93.9504, 23.3328, -13.1322, 0.83 ) }
    dend_31 { pt3dadd( 96.8825, 22.7525, -14.8851, 0.55 ) }
    dend_31 { pt3dadd( 99.7663, 22.0238, -16.5057, 0.83 ) }
    dend_31 { pt3dadd( 102.223, 21.2773, -17.8061, 0.55 ) }
    dend_31 { pt3dadd( 104.418, 20.6312, -18.8415, 0.55 ) }
    dend_31 { pt3dadd( 105.671, 20.3112, -19.3523, 0.83 ) }
    dend_31 { pt3dadd( 108.607, 19.5535, -20.3863, 0.28 ) }
    dend_31 { pt3dadd( 110.074, 19.2265, -20.7982, 0.28 ) }
    dend_31 { pt3dadd( 111.489, 18.8279, -21.283, 0.28 ) }
    dend_31 { pt3dadd( 113.017, 18.4396, -21.8086, 0.28 ) }
    dend_31 { pt3dadd( 115.457, 17.8717, -22.6947, 0.28 ) }
    dend_31 { pt3dadd( 116.441, 17.6518, -23.0198, 0.55 ) }
    dend_31 { pt3dadd( 118.813, 17.1211, -23.5603, 0.55 ) }
    dend_31 { pt3dadd( 123.1, 16.0968, -24.3224, 0.55 ) }
    dend_31 { pt3dadd( 124.291, 15.7751, -24.4853, 0.55 ) }
    dend_31 { pt3dadd( 125.36, 15.4472, -24.5899, 0.83 ) }
    dend_31 { pt3dadd( 127.694, 14.783, -24.6211, 0.55 ) }
    dend_31 { pt3dadd( 129.725, 14.2055, -24.6157, 0.55 ) }
    dend_31 { pt3dadd( 131.646, 13.6668, -24.6005, 0.55 ) }
    dend_31 { pt3dadd( 133.13, 13.2291, -24.6339, 0.55 ) }
    dend_31 { pt3dadd( 135.477, 12.386, -24.8229, 0.55 ) }
    dend_31 { pt3dadd( 138.234, 11.168, -25.2308, 0.55 ) }
    dend_31 { pt3dadd( 142.501, 8.82919, -26.2306, 0.55 ) }
    dend_31 { pt3dadd( 144.835, 7.21599, -26.9766, 0.55 ) }
    dend_31 { pt3dadd( 146.854, 5.47982, -27.7742, 0.28 ) }
    dend_31 { pt3dadd( 147.455, 4.83186, -28.0661, 0.55 ) }
    dend_31 { pt3dadd( 148.782, 2.99805, -28.8384, 0.28 ) }
    dend_31 { pt3dadd( 149.922, 0.91944, -29.6342, 0.55 ) }
    dend_31 { pt3dadd( 151.007, -1.71774, -30.3861, 0.55 ) }
    dend_31 { pt3dadd( 151.748, -3.46063, -30.7973, 0.28 ) }
    dend_31 { pt3dadd( 152.021, -4.07971, -30.9126, 0.55 ) }
    dend_31 { pt3dadd( 152.731, -5.61876, -31.1799, 0.28 ) }
    dend_31 { pt3dadd( 153.704, -7.62495, -31.4821, 0.55 ) }
    dend_31 { pt3dadd( 156.247, -12.4646, -32.1025, 0.55 ) }
    dend_31 { pt3dadd( 157.575, -14.9078, -32.3667, 0.55 ) }
    dend_31 { pt3dadd( 158.81, -17.1486, -32.5898, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 58.5076, 27.6493, -2.28126, 0.55 ) }
    dend_30 { pt3dadd( 60.118, 28.3033, -0.877869, 0.55 ) }
    dend_30 { pt3dadd( 60.6379, 28.5049, -0.457885, 0.55 ) }
    dend_30 { pt3dadd( 62.5936, 29.139, 1.03705, 0.55 ) }
    dend_30 { pt3dadd( 64.7693, 29.8992, 2.73138, 0.55 ) }
    dend_30 { pt3dadd( 67.5499, 30.8825, 4.98302, 0.55 ) }
    dend_30 { pt3dadd( 68.3184, 31.1539, 5.5993, 0.55 ) }
    dend_30 { pt3dadd( 69.7038, 31.5815, 6.70145, 0.55 ) }
    dend_30 { pt3dadd( 71.226, 32.0755, 7.84161, 0.55 ) }
    dend_30 { pt3dadd( 73.0001, 32.6858, 9.0729, 0.55 ) }
    dend_30 { pt3dadd( 74.669, 33.2871, 10.2347, 0.55 ) }
    dend_30 { pt3dadd( 75.5855, 33.6523, 10.8187, 0.55 ) }
    dend_30 { pt3dadd( 76.6588, 34.1136, 11.496, 0.55 ) }
    dend_30 { pt3dadd( 77.9855, 34.72, 12.3009, 0.83 ) }
    dend_30 { pt3dadd( 80.185, 35.6611, 13.3793, 0.55 ) }
    dend_30 { pt3dadd( 81.6546, 36.2097, 14.0318, 0.83 ) }
    dend_30 { pt3dadd( 83.7116, 36.8599, 14.8836, 0.55 ) }
    dend_30 { pt3dadd( 84.3474, 37.0223, 15.1426, 0.55 ) }
    dend_30 { pt3dadd( 86.3337, 37.4177, 15.9233, 0.55 ) }
    dend_30 { pt3dadd( 89.9227, 37.8789, 17.2177, 0.55 ) }
    dend_30 { pt3dadd( 92.5703, 38.0579, 18.1331, 0.55 ) }
    dend_30 { pt3dadd( 94.6698, 38.1118, 18.9254, 0.55 ) }
    dend_30 { pt3dadd( 96.8124, 38.0687, 19.8276, 0.55 ) }
    dend_30 { pt3dadd( 97.264, 38.048, 20.0219, 0.28 ) }
    dend_30 { pt3dadd( 98.1832, 37.969, 20.4208, 0.83 ) }
    dend_30 { pt3dadd( 101.96, 37.5945, 22.0908, 0.55 ) }
    dend_30 { pt3dadd( 104.607, 37.3257, 23.2076, 0.55 ) }
    dend_30 { pt3dadd( 106.769, 37.1701, 24.168, 0.55 ) }
    dend_30 { pt3dadd( 108.06, 37.0756, 24.7549, 0.83 ) }
    dend_30 { pt3dadd( 109.075, 37.0163, 25.216, 0.28 ) }
    dend_30 { pt3dadd( 109.996, 36.9623, 25.6253, 0.55 ) }
    dend_30 { pt3dadd( 116.911, 38.4854, 29.517, 0.55 ) }
    dend_30 { pt3dadd( 124.499, 38.5849, 32.2915, 0.55 ) }
    dend_30 { pt3dadd( 131.933, 39.7084, 35.2518, 0.55 ) }
    dend_30 { pt3dadd( 138.481, 39.9558, 39.9795, 0.55 ) }
    dend_30 { pt3dadd( 144.606, 39.1639, 45.1896, 0.55 ) }
    dend_30 { pt3dadd( 151.633, 36.8891, 48.4656, 0.55 ) }
    dend_30 { pt3dadd( 158.729, 33.6288, 50.5378, 0.55 ) }
    dend_30 { pt3dadd( 166.455, 31.7289, 51.9483, 0.55 ) }
    dend_30 { pt3dadd( 174.055, 29.8005, 53.8988, 0.55 ) }
    dend_30 { pt3dadd( 181.944, 28.658, 55.2215, 0.55 ) }
    dend_30 { pt3dadd( 189.674, 28.0479, 57.4932, 0.55 ) }
    dend_30 { pt3dadd( 196.979, 26.1379, 60.3697, 0.55 ) }
    dend_30 { pt3dadd( 204.291, 25.7714, 63.7892, 0.55 ) }
    dend_30 { pt3dadd( 211.078, 26.7375, 68.0649, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.49443, -30.113, 5.1172, 1.38 ) }
    dend_13 { pt3dadd( 0.794506, -32.5939, 4.31178, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.49443, -30.113, 5.1172, 0.55 ) }
    dend_12 { pt3dadd( -3.07206, -32.0544, 5.12949, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.81343, -34.5426, 5.14423, 0.55 ) }
    dend_12 { pt3dadd( -6.17197, -36.1905, 5.17126, 0.55 ) }
    dend_12 { pt3dadd( -7.31363, -37.5681, 5.00879, 0.55 ) }
    dend_12 { pt3dadd( -9.80148, -40.4223, 4.40989, 0.55 ) }
    dend_12 { pt3dadd( -11.5463, -42.3287, 3.93952, 0.55 ) }
    dend_12 { pt3dadd( -13.0964, -44.0379, 3.46027, 0.55 ) }
    dend_12 { pt3dadd( -17.0811, -48.1987, 2.23291, 0.55 ) }
    dend_12 { pt3dadd( -21.8715, -53.0167, 0.797741, 0.55 ) }
    dend_12 { pt3dadd( -25.5809, -56.6661, -0.380542, 0.55 ) }
    dend_12 { pt3dadd( -27.9471, -59.0623, -1.16817, 0.55 ) }
    dend_12 { pt3dadd( -30.6609, -61.937, -2.06333, 0.55 ) }
    dend_12 { pt3dadd( -34.1, -66.0589, -3.15203, 0.55 ) }
    dend_12 { pt3dadd( -36.1083, -68.9822, -3.74494, 0.55 ) }
    dend_12 { pt3dadd( -38.5845, -73.1862, -4.25007, 0.55 ) }
    dend_12 { pt3dadd( -40.5555, -77.125, -4.57163, 0.55 ) }
    dend_12 { pt3dadd( -42.5405, -82.0395, -4.86138, 0.55 ) }
    dend_12 { pt3dadd( -44.4047, -87.8089, -5.05088, 0.55 ) }
    dend_12 { pt3dadd( -45.4, -92.2181, -5.08086, 0.55 ) }
    dend_12 { pt3dadd( -45.7492, -94.4118, -4.94939, 0.55 ) }
    dend_12 { pt3dadd( -46.2663, -99.5653, -4.35329, 0.55 ) }
    dend_12 { pt3dadd( -46.6669, -104.387, -3.66773, 0.55 ) }
    dend_12 { pt3dadd( -46.828, -109.243, -2.61277, 0.55 ) }
    dend_12 { pt3dadd( -46.9525, -112.028, -1.85628, 0.55 ) }
    dend_12 { pt3dadd( -47.2912, -120.64, 0.799961, 0.55 ) }
    dend_12 { pt3dadd( -47.3205, -121.274, 1.00658, 0.55 ) }
    dend_12 { pt3dadd( -47.4291, -125.157, 2.36856, 0.55 ) }
    dend_12 { pt3dadd( -47.9503, -132.101, 4.96035, 0.55 ) }
    dend_12 { pt3dadd( -48.1355, -134.424, 5.68891, 0.55 ) }
    dend_12 { pt3dadd( -48.5022, -138.056, 6.20412, 0.55 ) }
    dend_12 { pt3dadd( -48.5976, -139.406, 6.08793, 0.55 ) }
    dend_12 { pt3dadd( -48.702, -143.976, 4.84247, 0.55 ) }
    dend_12 { pt3dadd( -48.5926, -146.938, 3.41645, 0.55 ) }
    dend_12 { pt3dadd( -48.2708, -151.659, 0.191497, 0.55 ) }
    dend_12 { pt3dadd( -47.6351, -157.434, -4.19435, 0.28 ) }
    dend_12 { pt3dadd( -47.4519, -158.862, -5.47052, 0.55 ) }
    dend_12 { pt3dadd( -47.1633, -161.028, -7.59542, 0.28 ) }
    dend_12 { pt3dadd( -47.1225, -161.354, -7.93297, 0.55 ) }
    dend_12 { pt3dadd( -46.9131, -163.141, -9.62899, 0.28 ) }
    dend_12 { pt3dadd( -46.8862, -163.748, -10.0664, 0.55 ) }
    dend_12 { pt3dadd( -46.829, -166.9, -11.7345, 0.28 ) }
    dend_12 { pt3dadd( -46.8512, -167.972, -12.2894, 0.55 ) }
    dend_12 { pt3dadd( -46.9577, -171.074, -13.7189, 0.28 ) }
    dend_12 { pt3dadd( -46.9869, -172.05, -14.1653, 0.55 ) }
    dend_12 { pt3dadd( -47.1165, -175.419, -15.6512, 0.28 ) }
    dend_12 { pt3dadd( -47.1678, -176.969, -16.3425, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.81123, -83.8463, 69.4617, 0.55 ) }
    dend_10 { pt3dadd( -10.7854, -90.8176, 77.2065, 0.55 ) }
    dend_10 { pt3dadd( -14.5622, -96.7157, 85.4753, 0.55 ) }
    dend_10 { pt3dadd( -18.2843, -103.336, 93.2044, 0.55 ) }
    dend_10 { pt3dadd( -22.2302, -109.961, 100.818, 0.55 ) }
    dend_10 { pt3dadd( -25.461, -117.917, 107.427, 0.55 ) }
    dend_10 { pt3dadd( -28.4125, -125.565, 114.514, 0.55 ) }
    dend_10 { pt3dadd( -30.9682, -134.968, 119.255, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.81123, -83.8463, 69.4617, 0.55 ) }
    dend_3 { pt3dadd( -6.98118, -88.8715, 74.1784, 0.55 ) }
    dend_3 { pt3dadd( -5.99777, -94.6617, 77.8792, 0.55 ) }
    dend_3 { pt3dadd( -6.12736, -100.472, 81.6754, 0.55 ) }
    dend_3 { pt3dadd( -6.72955, -106.601, 84.8795, 0.55 ) }
    dend_3 { pt3dadd( -7.04196, -112.711, 88.159, 0.55 ) }
    dend_3 { pt3dadd( -7.24956, -118.578, 91.8639, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -57.9873, 35.0845, -11.9774, 0.83 ) }
    dend_60 { pt3dadd( -58.6703, 35.515, -14.5295, 0.83 ) }
    dend_60 { pt3dadd( -60.2806, 36.7543, -20.3863, 0.55 ) }
    dend_60 { pt3dadd( -60.9083, 37.3746, -22.7964, 0.83 ) }
    dend_60 { pt3dadd( -61.5162, 38.1132, -25.2752, 0.55 ) }
    dend_60 { pt3dadd( -62.0212, 39.0346, -27.6055, 0.55 ) }
    dend_60 { pt3dadd( -62.2122, 39.5701, -28.6797, 0.28 ) }
    dend_60 { pt3dadd( -62.3062, 40.0248, -29.2435, 0.55 ) }
    dend_60 { pt3dadd( -62.3544, 41.8038, -30.7909, 0.28 ) }
    dend_60 { pt3dadd( -62.3327, 42.5891, -31.4267, 0.55 ) }
    dend_60 { pt3dadd( -62.2367, 45.3995, -33.5154, 0.28 ) }
    dend_60 { pt3dadd( -62.1855, 47.6842, -35.0722, 0.55 ) }
    dend_60 { pt3dadd( -62.2324, 51.3457, -37.3179, 0.28 ) }
    dend_60 { pt3dadd( -62.3606, 54.6172, -39.1822, 0.28 ) }
    dend_60 { pt3dadd( -62.5232, 56.4832, -40.1431, 0.55 ) }
    dend_60 { pt3dadd( -62.8511, 58.7125, -41.2152, 0.28 ) }
    dend_60 { pt3dadd( -63.0699, 59.7934, -41.6806, 0.55 ) }
    dend_60 { pt3dadd( -63.7719, 62.2836, -42.8014, 0.28 ) }
    dend_60 { pt3dadd( -64.3896, 63.9037, -43.5659, 0.28 ) }
    dend_60 { pt3dadd( -65.0538, 65.4689, -44.3406, 0.28 ) }
    dend_60 { pt3dadd( -65.3737, 66.2902, -44.7688, 0.55 ) }
    dend_60 { pt3dadd( -66.521, 69.5434, -46.6599, 0.28 ) }
    dend_60 { pt3dadd( -67.7795, 73.3367, -49.0292, 0.55 ) }
    dend_60 { pt3dadd( -68.1961, 74.6411, -49.8624, 0.55 ) }
    dend_60 { pt3dadd( -68.6221, 75.9699, -50.6612, 0.55 ) }
    dend_60 { pt3dadd( -69.7089, 78.7801, -52.32, 0.55 ) }
    dend_60 { pt3dadd( -70.569, 80.6123, -53.3813, 0.28 ) }
    dend_60 { pt3dadd( -70.9856, 81.3087, -53.7485, 0.55 ) }
    dend_60 { pt3dadd( -72.2355, 83.2347, -54.6362, 0.28 ) }
    dend_60 { pt3dadd( -73.6939, 85.2422, -55.6081, 0.55 ) }
    dend_60 { pt3dadd( -76.1346, 88.084, -56.9619, 0.28 ) }
    dend_60 { pt3dadd( -77.3125, 89.2586, -57.4918, 0.28 ) }
    dend_60 { pt3dadd( -79.2651, 90.8055, -58.2629, 0.55 ) }
    dend_60 { pt3dadd( -81.4702, 92.3691, -59.0859, 0.28 ) }
    dend_60 { pt3dadd( -81.8673, 92.6098, -59.2053, 0.55 ) }
    dend_60 { pt3dadd( -83.2833, 93.3669, -59.5517, 0.28 ) }
    dend_60 { pt3dadd( -88.1095, 95.8053, -60.5407, 0.55 ) }
    dend_60 { pt3dadd( -94.8694, 98.6348, -61.7831, 0.28 ) }
    dend_60 { pt3dadd( -96.1402, 99.0634, -62.0216, 0.55 ) }
    dend_60 { pt3dadd( -99.6402, 100.115, -62.648, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -101.123, 100.524, -62.9264, 0.28 ) }
    dend_60 { pt3dadd( -102.432, 100.826, -63.1911, 0.55 ) }
    dend_60 { pt3dadd( -106.335, 101.254, -63.9308, 0.28 ) }
    dend_60 { pt3dadd( -109.03, 101.411, -64.2551, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -57.9873, 35.0845, -11.9774, 0.55 ) }
    dend_57 { pt3dadd( -58.2734, 35.9462, -12.3994, 0.55 ) }
    dend_57 { pt3dadd( -58.4392, 36.4758, -12.5963, 0.28 ) }
    dend_57 { pt3dadd( -58.604, 36.8933, -12.6207, 0.55 ) }
    dend_57 { pt3dadd( -58.9824, 37.8522, -12.6768, 0.28 ) }
    dend_57 { pt3dadd( -59.2482, 38.5257, -12.7161, 0.55 ) }
    dend_57 { pt3dadd( -59.7382, 39.7673, -12.7887, 0.28 ) }
    dend_57 { pt3dadd( -60.0278, 40.4769, -12.7046, 0.55 ) }
    dend_57 { pt3dadd( -60.9847, 42.3796, -11.8575, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -120.783, -22.2237, 4.36008, 0.55 ) }
    dend_52 { pt3dadd( -126.255, -28.6418, 2.65962, 0.55 ) }
    dend_52 { pt3dadd( -130.447, -35.7992, 0.373857, 0.55 ) }
    dend_52 { pt3dadd( -134.024, -42.4895, -3.6848, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -120.783, -22.2237, 4.36008, 0.55 ) }
    dend_49 { pt3dadd( -126.672, -28.2471, 1.52032, 0.55 ) }
    dend_49 { pt3dadd( -131.732, -34.4693, -2.31346, 0.55 ) }
    dend_49 { pt3dadd( -136.451, -40.8474, -6.32171, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -144.499, 35.4853, 89.5002, 0.55 ) }
    dend_47 { pt3dadd( -151.304, 36.43, 96.6189, 0.55 ) }
    dend_47 { pt3dadd( -158.704, 38.58, 102.823, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -144.499, 35.4853, 89.5002, 0.55 ) }
    dend_46 { pt3dadd( -154.149, 35.135, 96.1554, 0.55 ) }
    dend_46 { pt3dadd( -163.937, 36.6819, 102.427, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 87.842, -64.3138, -84.4888, 0.28 ) }
    dend_39 { pt3dadd( 96.3998, -70.844, -96.7941, 0.28 ) }
    dend_39 { pt3dadd( 97.2596, -71.5186, -97.8623, 0.55 ) }
    dend_39 { pt3dadd( 98.711, -72.6575, -99.6659, 0.28 ) }
    dend_39 { pt3dadd( 99.9332, -73.6164, -101.185, 0.28 ) }
    dend_39 { pt3dadd( 101.552, -74.8857, -103.195, 0.55 ) }
    dend_39 { pt3dadd( 103.685, -76.5593, -105.845, 0.55 ) }
    dend_39 { pt3dadd( 106.618, -78.6223, -106.877, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 87.842, -64.3138, -84.4888, 0.55 ) }
    dend_36 { pt3dadd( 88.8434, -65.9085, -85.8283, 0.55 ) }
    dend_36 { pt3dadd( 89.1655, -66.635, -86.4252, 0.28 ) }
    dend_36 { pt3dadd( 89.6551, -67.8889, -87.4745, 0.55 ) }
    dend_36 { pt3dadd( 90.7336, -70.6513, -89.786, 0.28 ) }
    dend_36 { pt3dadd( 91.481, -72.5656, -91.3879, 0.55 ) }
    dend_36 { pt3dadd( 92.7474, -75.8091, -94.102, 0.28 ) }
    dend_36 { pt3dadd( 94.1942, -79.8157, -97.718, 0.28 ) }
    dend_36 { pt3dadd( 94.7859, -81.6688, -99.4168, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 158.81, -17.1486, -32.5898, 0.28 ) }
    dend_33 { pt3dadd( 160.866, -20.0875, -32.8559, 0.28 ) }
    dend_33 { pt3dadd( 163.463, -24.0772, -32.8995, 0.28 ) }
    dend_33 { pt3dadd( 165.104, -26.7003, -32.8301, 0.55 ) }
    dend_33 { pt3dadd( 166.099, -28.1701, -32.7235, 0.28 ) }
    dend_33 { pt3dadd( 166.628, -28.9639, -32.6592, 0.28 ) }
    dend_33 { pt3dadd( 169.25, -32.8641, -32.3974, 0.55 ) }
    dend_33 { pt3dadd( 169.855, -33.7662, -32.2339, 0.28 ) }
    dend_33 { pt3dadd( 171.281, -36.1931, -31.6635, 0.55 ) }
    dend_33 { pt3dadd( 172.496, -38.2779, -31.2448, 0.28 ) }
    dend_33 { pt3dadd( 173.561, -39.9626, -30.9319, 0.55 ) }
    dend_33 { pt3dadd( 174.806, -41.9409, -30.6703, 0.55 ) }
    dend_33 { pt3dadd( 176.787, -44.9651, -30.6132, 0.55 ) }
    dend_33 { pt3dadd( 177.264, -45.699, -30.6247, 0.55 ) }
    dend_33 { pt3dadd( 178.966, -48.4303, -30.6982, 0.28 ) }
    dend_33 { pt3dadd( 179.623, -49.5373, -30.7573, 0.55 ) }
    dend_33 { pt3dadd( 180.545, -50.9491, -30.8357, 0.28 ) }
    dend_33 { pt3dadd( 181.845, -52.9244, -31.0355, 0.55 ) }
    dend_33 { pt3dadd( 184.004, -55.8923, -31.789, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 158.81, -17.1486, -32.5898, 0.55 ) }
    dend_32 { pt3dadd( 157.035, -17.1291, -32.5721, 0.55 ) }
    dend_32 { pt3dadd( 155.593, -17.1132, -32.5578, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.794506, -32.5939, 4.31178, 0.83 ) }
    dend_17 { pt3dadd( 0.950967, -32.8651, 4.33616, 0.83 ) }
    dend_17 { pt3dadd( 2.63134, -35.2419, 4.82782, 0.83 ) }
    dend_17 { pt3dadd( 4.15457, -37.3193, 5.12052, 0.55 ) }
    dend_17 { pt3dadd( 5.36978, -38.9767, 5.35404, 0.55 ) }
    dend_17 { pt3dadd( 7.95276, -42.4994, 5.85039, 0.83 ) }
    dend_17 { pt3dadd( 11.0857, -46.7723, 6.45243, 0.55 ) }
    dend_17 { pt3dadd( 12.7681, -49.0053, 6.83364, 0.83 ) }
    dend_17 { pt3dadd( 15.6478, -52.5414, 7.69582, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.794506, -32.5939, 4.31178, 0.55 ) }
    dend_14 { pt3dadd( -0.479743, -33.7295, 1.16023, 0.55 ) }
    dend_14 { pt3dadd( -1.8475, -34.9485, -2.22257, 0.55 ) }
    dend_14 { pt3dadd( -3.46214, -36.3875, -6.216, 0.55 ) }
    dend_14 { pt3dadd( -5.42284, -38.1349, -11.0653, 0.55 ) }
    dend_14 { pt3dadd( -6.53547, -39.1264, -13.8171, 0.55 ) }
    dend_14 { pt3dadd( -6.75898, -39.3256, -14.3699, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.24956, -118.578, 91.8639, 0.55 ) }
    dend_7 { pt3dadd( -6.67885, -126.73, 97.7031, 0.55 ) }
    dend_7 { pt3dadd( -4.77365, -135.362, 102.471, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.24956, -118.578, 91.8639, 0.55 ) }
    dend_4 { pt3dadd( -7.54707, -127.006, 96.711, 0.55 ) }
    dend_4 { pt3dadd( -8.23364, -135.212, 101.888, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -60.9847, 42.3796, -11.8575, 0.28 ) }
    dend_59 { pt3dadd( -62.1555, 45.4238, -10.2514, 0.28 ) }
    dend_59 { pt3dadd( -62.5548, 46.623, -9.55738, 0.55 ) }
    dend_59 { pt3dadd( -63.6641, 50.1204, -7.51268, 0.28 ) }
    dend_59 { pt3dadd( -64.2695, 51.7954, -6.60842, 0.55 ) }
    dend_59 { pt3dadd( -65.9824, 56.2755, -4.25324, 0.28 ) }
    dend_59 { pt3dadd( -67.7234, 60.829, -1.85953, 0.55 ) }
    dend_59 { pt3dadd( -70.5492, 68.1171, 2.27452, 0.28 ) }
    dend_59 { pt3dadd( -71.1513, 69.6784, 3.15147, 0.55 ) }
    dend_59 { pt3dadd( -72.5321, 73.2192, 4.93025, 0.28 ) }
    dend_59 { pt3dadd( -73.0747, 74.6625, 5.60076, 0.55 ) }
    dend_59 { pt3dadd( -79.6759, 85.2109, 13.2159, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -88.6177, 95.7593, 17.8647, 0.55 ) }
    dend_59 { pt3dadd( -95.5278, 107.409, 23.2856, 0.55 ) }
    dend_59 { pt3dadd( -101.027, 120.414, 26.9538, 0.55 ) }
    dend_59 { pt3dadd( -108.201, 132.562, 30.668, 0.55 ) }
    dend_59 { pt3dadd( -115.676, 143.401, 36.9501, 0.55 ) }
    dend_59 { pt3dadd( -121.367, 154.126, 45.0384, 0.55 ) }
    dend_59 { pt3dadd( -124.917, 164.355, 54.8164, 0.55 ) }
    dend_59 { pt3dadd( -128.767, 175.123, 63.8752, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -60.9847, 42.3796, -11.8575, 0.55 ) }
    dend_58 { pt3dadd( -62.596, 42.4582, -9.59598, 0.55 ) }
    dend_58 { pt3dadd( -63.428, 42.4611, -8.4009, 0.28 ) }
    dend_58 { pt3dadd( -64.0471, 42.4632, -7.51156, 0.55 ) }
    dend_58 { pt3dadd( -64.5632, 42.465, -6.77033, 0.28 ) }
    dend_58 { pt3dadd( -64.9246, 42.4663, -6.25115, 0.55 ) }
    dend_58 { pt3dadd( -65.9213, 42.4697, -4.81955, 0.28 ) }
    dend_58 { pt3dadd( -66.6283, 42.3307, -3.91992, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -134.024, -42.4895, -3.6848, 0.55 ) }
    dend_54 { pt3dadd( -138.205, -50.3052, -2.80765, 0.55 ) }
    dend_54 { pt3dadd( -142.213, -58.0365, -0.938331, 0.55 ) }
    dend_54 { pt3dadd( -145.578, -66.2751, -0.565567, 0.55 ) }
    dend_54 { pt3dadd( -149.806, -73.9797, 0.879443, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -134.024, -42.4895, -3.6848, 0.55 ) }
    dend_53 { pt3dadd( -140.17, -49.5372, -11.0949, 0.55 ) }
    dend_53 { pt3dadd( -145.712, -55.32, -19.9379, 0.55 ) }
    dend_53 { pt3dadd( -152.258, -62.1025, -27.2532, 0.55 ) }
    dend_53 { pt3dadd( -160.968, -66.7304, -33.9664, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -136.451, -40.8474, -6.32171, 0.55 ) }
    dend_51 { pt3dadd( -140.548, -45.4985, -11.2715, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -136.451, -40.8474, -6.32171, 0.55 ) }
    dend_50 { pt3dadd( -140.236, -48.1803, -4.91643, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 106.618, -78.6223, -106.877, 0.28 ) }
    dend_41 { pt3dadd( 108.566, -79.2298, -107.836, 0.28 ) }
    dend_41 { pt3dadd( 109.471, -79.512, -108.281, 0.55 ) }
    dend_41 { pt3dadd( 111.196, -80.0502, -109.131, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 106.618, -78.6223, -106.877, 0.55 ) }
    dend_40 { pt3dadd( 106.532, -79.8035, -107.453, 0.55 ) }
    dend_40 { pt3dadd( 106.36, -82.1661, -108.607, 0.28 ) }
    dend_40 { pt3dadd( 106.303, -82.9357, -108.983, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 94.7859, -81.6688, -99.4168, 0.28 ) }
    dend_38 { pt3dadd( 96.5787, -85.8834, -102.422, 0.28 ) }
    dend_38 { pt3dadd( 97.4664, -87.9703, -103.909, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 94.7859, -81.6688, -99.4168, 0.55 ) }
    dend_37 { pt3dadd( 93.1341, -82.5454, -98.2225, 0.55 ) }
    dend_37 { pt3dadd( 88.5278, -84.9898, -94.8921, 0.28 ) }
    dend_37 { pt3dadd( 87.4336, -85.5705, -94.101, 0.55 ) }
    dend_37 { pt3dadd( 84.4402, -87.159, -91.9367, 0.28 ) }
    dend_37 { pt3dadd( 82.5108, -88.1829, -90.5417, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.6478, -52.5414, 7.69582, 0.83 ) }
    dend_23 { pt3dadd( 15.7227, -52.7541, 7.68127, 0.83 ) }
    dend_23 { pt3dadd( 16.6753, -55.5466, 7.57837, 0.83 ) }
    dend_23 { pt3dadd( 17.1603, -57.6756, 7.45858, 0.83 ) }
    dend_23 { pt3dadd( 17.3722, -59.777, 7.38423, 0.83 ) }
    dend_23 { pt3dadd( 17.4353, -62.6148, 7.35796, 0.83 ) }
    dend_23 { pt3dadd( 17.3616, -65.9099, 7.34432, 0.83 ) }
    dend_23 { pt3dadd( 17.1547, -69.618, 7.47005, 0.83 ) }
    dend_23 { pt3dadd( 16.8386, -73.2455, 7.70385, 0.83 ) }
    dend_23 { pt3dadd( 16.3301, -77.7038, 7.7176, 0.83 ) }
    dend_23 { pt3dadd( 16.1025, -79.7422, 7.56736, 0.83 ) }
    dend_23 { pt3dadd( 15.9945, -81.2607, 7.38572, 0.83 ) }
    dend_23 { pt3dadd( 15.7891, -84.1689, 6.95133, 0.83 ) }
    dend_23 { pt3dadd( 15.7474, -86.747, 6.50914, 0.83 ) }
    dend_23 { pt3dadd( 16.2974, -92.1268, 5.3645, 0.83 ) }
    dend_23 { pt3dadd( 16.9006, -95.0051, 4.4965, 0.83 ) }
    dend_23 { pt3dadd( 17.599, -97.6254, 3.55743, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.6478, -52.5414, 7.69582, 0.55 ) }
    dend_18 { pt3dadd( 15.0708, -54.4988, 7.30287, 0.55 ) }
    dend_18 { pt3dadd( 14.5814, -55.9276, 7.0959, 0.55 ) }
    dend_18 { pt3dadd( 14.2425, -56.8446, 7.05168, 0.55 ) }
    dend_18 { pt3dadd( 13.6984, -58.2826, 7.13166, 0.55 ) }
    dend_18 { pt3dadd( 12.5903, -61.1348, 7.47774, 0.55 ) }
    dend_18 { pt3dadd( 11.6191, -63.3087, 7.92577, 0.55 ) }
    dend_18 { pt3dadd( 10.7502, -65.0617, 8.43737, 0.55 ) }
    dend_18 { pt3dadd( 9.77639, -66.8428, 9.03459, 0.55 ) }
    dend_18 { pt3dadd( 8.92122, -68.3251, 9.58607, 0.28 ) }
    dend_18 { pt3dadd( 8.12245, -69.5475, 10.1706, 0.55 ) }
    dend_18 { pt3dadd( 6.47779, -71.793, 11.4584, 0.55 ) }
    dend_18 { pt3dadd( 5.33951, -73.1831, 12.3291, 0.55 ) }
    dend_18 { pt3dadd( 4.6988, -73.9621, 12.8067, 0.55 ) }
    dend_18 { pt3dadd( 3.92966, -74.8816, 13.3102, 0.83 ) }
    dend_18 { pt3dadd( 1.71623, -77.6004, 14.6485, 0.28 ) }
    dend_18 { pt3dadd( 0.996058, -78.4988, 15.0725, 0.55 ) }
    dend_18 { pt3dadd( -0.239287, -80.1141, 15.8205, 0.28 ) }
    dend_18 { pt3dadd( -0.637083, -80.6139, 16.0801, 0.55 ) }
    dend_18 { pt3dadd( -1.50877, -81.7817, 16.7026, 0.28 ) }
    dend_18 { pt3dadd( -1.97755, -82.4428, 17.0201, 0.55 ) }
    dend_18 { pt3dadd( -3.33047, -84.5724, 17.527, 0.55 ) }
    dend_18 { pt3dadd( -6.91375, -90.3288, 21.4037, 0.55 ) }
    dend_18 { pt3dadd( -10.3699, -95.8243, 25.7466, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.75898, -39.3256, -14.3699, 0.55 ) }
    dend_16 { pt3dadd( -9.44846, -40.4805, -16.7913, 0.55 ) }
    dend_16 { pt3dadd( -10.2464, -40.7622, -17.4649, 0.55 ) }
    dend_16 { pt3dadd( -12.2444, -41.476, -19.084, 0.55 ) }
    dend_16 { pt3dadd( -16.6173, -42.9275, -22.4425, 0.28 ) }
    dend_16 { pt3dadd( -17.2666, -43.1324, -22.9026, 0.55 ) }
    dend_16 { pt3dadd( -19.9576, -44.0663, -24.7282, 0.55 ) }
    dend_16 { pt3dadd( -23.6114, -45.3743, -26.8937, 0.55 ) }
    dend_16 { pt3dadd( -25.0114, -45.836, -27.6868, 0.28 ) }
    dend_16 { pt3dadd( -26.2412, -46.1677, -28.3094, 0.28 ) }
    dend_16 { pt3dadd( -28.3187, -46.7165, -29.1066, 0.55 ) }
    dend_16 { pt3dadd( -30.8772, -47.2684, -30.1583, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -33.27, -47.5884, -31.1632, 0.55 ) }
    dend_16 { pt3dadd( -35.134, -47.6994, -31.8961, 0.55 ) }
    dend_16 { pt3dadd( -36.4342, -47.6763, -32.4294, 0.55 ) }
    dend_16 { pt3dadd( -40.2863, -47.4471, -34.0857, 0.55 ) }
    dend_16 { pt3dadd( -44.3642, -46.9685, -35.7406, 0.55 ) }
    dend_16 { pt3dadd( -46.0551, -46.6922, -36.3805, 0.28 ) }
    dend_16 { pt3dadd( -47.662, -46.45, -37.0164, 0.55 ) }
    dend_16 { pt3dadd( -50.8962, -46.145, -38.2925, 0.28 ) }
    dend_16 { pt3dadd( -51.9801, -46.0707, -38.7145, 0.83 ) }
    dend_16 { pt3dadd( -53.9933, -45.9206, -39.3785, 0.28 ) }
    dend_16 { pt3dadd( -55.4119, -45.923, -39.6962, 0.55 ) }
    dend_16 { pt3dadd( -57.4593, -45.9949, -40.125, 0.28 ) }
    dend_16 { pt3dadd( -58.2729, -46.0159, -40.2704, 0.55 ) }
    dend_16 { pt3dadd( -59.7681, -46.0867, -40.4673, 0.55 ) }
    dend_16 { pt3dadd( -62.0421, -45.9912, -40.6675, 0.55 ) }
    dend_16 { pt3dadd( -63.5273, -45.8507, -40.7143, 0.28 ) }
    dend_16 { pt3dadd( -64.7285, -45.6085, -40.6532, 0.55 ) }
    dend_16 { pt3dadd( -66.1639, -45.1642, -40.5739, 0.28 ) }
    dend_16 { pt3dadd( -66.4032, -45.0736, -40.5667, 0.55 ) }
    dend_16 { pt3dadd( -68.6709, -44.1684, -40.8369, 0.28 ) }
    dend_16 { pt3dadd( -70.3437, -43.4716, -41.1826, 0.55 ) }
    dend_16 { pt3dadd( -72.6054, -42.4087, -41.8883, 0.83 ) }
    dend_16 { pt3dadd( -74.499, -41.4846, -42.6412, 0.28 ) }
    dend_16 { pt3dadd( -74.9937, -41.2457, -42.8757, 0.55 ) }
    dend_16 { pt3dadd( -78.8082, -39.4458, -44.8502, 0.28 ) }
    dend_16 { pt3dadd( -79.4825, -39.1357, -45.25, 0.55 ) }
    dend_16 { pt3dadd( -81.4988, -38.1049, -46.5219, 0.28 ) }
    dend_16 { pt3dadd( -82.0196, -37.8395, -46.8534, 0.55 ) }
    dend_16 { pt3dadd( -83.3474, -37.1538, -47.6298, 0.28 ) }
    dend_16 { pt3dadd( -84.2825, -36.663, -48.131, 0.55 ) }
    dend_16 { pt3dadd( -86.3365, -35.5874, -48.9947, 0.28 ) }
    dend_16 { pt3dadd( -87.5436, -35.0229, -49.4742, 0.55 ) }
    dend_16 { pt3dadd( -90.0904, -33.9624, -50.3928, 0.28 ) }
    dend_16 { pt3dadd( -90.8441, -33.6826, -50.6591, 0.55 ) }
    dend_16 { pt3dadd( -92.0131, -33.3246, -51.0457, 0.28 ) }
    dend_16 { pt3dadd( -92.9973, -33.0269, -51.3317, 0.55 ) }
    dend_16 { pt3dadd( -95.0238, -32.4411, -51.8206, 0.28 ) }
    dend_16 { pt3dadd( -95.6305, -32.2781, -51.9512, 0.55 ) }
    dend_16 { pt3dadd( -100.118, -31.0036, -52.7298, 0.28 ) }
    dend_16 { pt3dadd( -101.683, -30.4674, -52.8731, 0.55 ) }
    dend_16 { pt3dadd( -104.461, -29.4034, -52.9595, 0.28 ) }
    dend_16 { pt3dadd( -105.711, -28.882, -52.9603, 0.55 ) }
    dend_16 { pt3dadd( -108.551, -27.7161, -52.8162, 0.28 ) }
    dend_16 { pt3dadd( -109.582, -27.3332, -52.7255, 0.55 ) }
    dend_16 { pt3dadd( -113.248, -26.2688, -52.2376, 0.28 ) }
    dend_16 { pt3dadd( -114.756, -26.0051, -52.035, 0.55 ) }
    dend_16 { pt3dadd( -116.87, -25.9658, -51.7482, 0.55 ) }
    dend_16 { pt3dadd( -118.157, -26.0235, -51.548, 0.55 ) }
    dend_16 { pt3dadd( -120.732, -26.2216, -50.9485, 0.28 ) }
    dend_16 { pt3dadd( -123.229, -26.4527, -50.2026, 0.28 ) }
    dend_16 { pt3dadd( -125.295, -26.6415, -49.5197, 0.55 ) }
    dend_16 { pt3dadd( -127.773, -26.6669, -48.3885, 0.28 ) }
    dend_16 { pt3dadd( -128.969, -26.53, -47.6474, 0.55 ) }
    dend_16 { pt3dadd( -131.774, -25.7291, -45.5477, 0.28 ) }
    dend_16 { pt3dadd( -133.125, -25.0245, -44.0787, 0.55 ) }
    dend_16 { pt3dadd( -133.934, -24.4187, -42.9018, 0.28 ) }
    dend_16 { pt3dadd( -134.734, -23.7462, -41.3128, 0.55 ) }
    dend_16 { pt3dadd( -135.666, -22.8578, -39.1524, 0.28 ) }
    dend_16 { pt3dadd( -136.022, -22.5533, -38.3415, 0.55 ) }
    dend_16 { pt3dadd( -138.001, -21.2581, -34.4896, 0.28 ) }
    dend_16 { pt3dadd( -138.671, -20.863, -33.2031, 0.55 ) }
    dend_16 { pt3dadd( -140.232, -20.0223, -30.0943, 0.28 ) }
    dend_16 { pt3dadd( -141.079, -19.5822, -28.4071, 0.55 ) }
    dend_16 { pt3dadd( -141.777, -19.2225, -27.022, 0.55 ) }
    dend_16 { pt3dadd( -142.627, -18.8022, -25.3992, 0.28 ) }
    dend_16 { pt3dadd( -143.124, -18.5886, -24.6581, 0.55 ) }
    dend_16 { pt3dadd( -144.863, -17.7919, -22.2968, 0.28 ) }
    dend_16 { pt3dadd( -145.771, -17.2327, -21.0274, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.75898, -39.3256, -14.3699, 0.55 ) }
    dend_15 { pt3dadd( -6.63851, -39.3231, -15.4947, 0.55 ) }
    dend_15 { pt3dadd( -6.50005, -39.1955, -16.6101, 0.55 ) }
    dend_15 { pt3dadd( -6.26932, -38.9335, -17.9787, 0.55 ) }
    dend_15 { pt3dadd( -6.0448, -38.6269, -19.0734, 0.55 ) }
    dend_15 { pt3dadd( -4.14302, -35.8269, -26.0104, 0.55 ) }
    dend_15 { pt3dadd( -3.75009, -35.0214, -27.5655, 0.55 ) }
    dend_15 { pt3dadd( -3.22885, -33.6696, -29.867, 0.55 ) }
    dend_15 { pt3dadd( -2.87495, -32.6593, -31.4948, 0.55 ) }
    dend_15 { pt3dadd( -2.51164, -31.5811, -33.0513, 0.28 ) }
    dend_15 { pt3dadd( -1.86903, -29.7781, -35.3672, 0.55 ) }
    dend_15 { pt3dadd( -0.758416, -26.9718, -38.6936, 0.28 ) }
    dend_15 { pt3dadd( -0.7166, -26.7933, -39.0371, 0.55 ) }
    dend_15 { pt3dadd( -0.959852, -26.1382, -41.4702, 0.28 ) }
    dend_15 { pt3dadd( -1.38715, -25.8448, -43.1063, 0.55 ) }
    dend_15 { pt3dadd( -1.99727, -25.685, -44.8574, 0.55 ) }
    dend_15 { pt3dadd( -3.11313, -25.5717, -48.0108, 0.55 ) }
    dend_15 { pt3dadd( -5.27941, -25.391, -54.2102, 0.55 ) }
    dend_15 { pt3dadd( -6.65453, -25.2998, -58.4027, 0.55 ) }
    dend_15 { pt3dadd( -7.08906, -25.274, -59.863, 0.55 ) }
    dend_15 { pt3dadd( -9.73215, -24.983, -69.5122, 0.55 ) }
    dend_15 { pt3dadd( -10.3447, -24.8446, -72.1474, 0.55 ) }
    dend_15 { pt3dadd( -10.5785, -24.7461, -73.6498, 0.55 ) }
    dend_15 { pt3dadd( -10.8082, -24.5457, -77.2046, 0.55 ) }
    dend_15 { pt3dadd( -10.801, -24.3943, -85.811, 0.55 ) }
    dend_15 { pt3dadd( -10.6871, -24.4267, -88.1395, 0.28 ) }
    dend_15 { pt3dadd( -10.5146, -24.4842, -89.467, 0.55 ) }
    dend_15 { pt3dadd( -10.2104, -24.6391, -91.4392, 0.28 ) }
    dend_15 { pt3dadd( -10.0139, -24.7694, -92.2497, 0.55 ) }
    dend_15 { pt3dadd( -8.80764, -25.4173, -94.506, 0.28 ) }
    dend_15 { pt3dadd( -7.1776, -26.4818, -95.5025, 0.55 ) }
    dend_15 { pt3dadd( -6.14625, -27.2738, -96.0524, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -5.12187, -28.1823, -96.4653, 0.55 ) }
    dend_15 { pt3dadd( -4.15824, -29.2069, -96.7779, 0.28 ) }
    dend_15 { pt3dadd( -3.73361, -29.7459, -96.9339, 0.55 ) }
    dend_15 { pt3dadd( -2.69248, -31.1774, -97.2445, 0.28 ) }
    dend_15 { pt3dadd( -2.44508, -31.6082, -97.3937, 0.55 ) }
    dend_15 { pt3dadd( -1.10142, -34.0742, -98.3871, 0.28 ) }
    dend_15 { pt3dadd( -0.514867, -35.2019, -99.0127, 0.55 ) }
    dend_15 { pt3dadd( 0.701274, -37.5801, -100.672, 0.28 ) }
    dend_15 { pt3dadd( 1.14103, -38.4435, -101.404, 0.55 ) }
    dend_15 { pt3dadd( 2.61989, -41.2455, -104.045, 0.28 ) }
    dend_15 { pt3dadd( 2.96987, -41.9244, -104.721, 0.55 ) }
    dend_15 { pt3dadd( 3.97518, -44.0841, -106.917, 0.28 ) }
    dend_15 { pt3dadd( 4.1982, -44.5986, -107.376, 0.55 ) }
    dend_15 { pt3dadd( 4.74563, -45.9692, -108.552, 0.28 ) }
    dend_15 { pt3dadd( 5.03398, -46.7592, -109.321, 0.55 ) }
    dend_15 { pt3dadd( 5.31561, -47.526, -110.154, 0.55 ) }
    dend_15 { pt3dadd( 5.88409, -49.0564, -111.804, 0.28 ) }
    dend_15 { pt3dadd( 6.27603, -49.9781, -112.987, 0.55 ) }
    dend_15 { pt3dadd( 7.48531, -52.1482, -116.75, 0.28 ) }
    dend_15 { pt3dadd( 7.92639, -52.8122, -118.247, 0.55 ) }
    dend_15 { pt3dadd( 8.2433, -53.2193, -119.268, 0.28 ) }
    dend_15 { pt3dadd( 8.57563, -53.5731, -120.292, 0.55 ) }
    dend_15 { pt3dadd( 9.6426, -54.5119, -123.412, 0.28 ) }
    dend_15 { pt3dadd( 10.4897, -55.2481, -125.739, 0.55 ) }
    dend_15 { pt3dadd( 12.119, -56.719, -129.539, 0.28 ) }
    dend_15 { pt3dadd( 12.6355, -57.174, -130.731, 0.55 ) }
    dend_15 { pt3dadd( 13.7324, -57.9915, -132.885, 0.28 ) }
    dend_15 { pt3dadd( 14.1306, -58.2572, -133.562, 0.55 ) }
    dend_15 { pt3dadd( 14.8902, -58.6789, -134.509, 0.28 ) }
    dend_15 { pt3dadd( 15.6043, -59.0267, -135.277, 0.55 ) }
    dend_15 { pt3dadd( 17.6739, -59.8475, -137.136, 0.28 ) }
    dend_15 { pt3dadd( 20.0647, -60.6756, -139.221, 0.28 ) }
    dend_15 { pt3dadd( 21.3246, -61.0325, -140.183, 0.28 ) }
    dend_15 { pt3dadd( 22.5444, -61.3456, -141.226, 0.55 ) }
    dend_15 { pt3dadd( 24.314, -61.7061, -142.749, 0.28 ) }
    dend_15 { pt3dadd( 25.1108, -61.8528, -143.408, 0.83 ) }
    dend_15 { pt3dadd( 27.1951, -62.2601, -145.013, 0.28 ) }
    dend_15 { pt3dadd( 28.0702, -62.4591, -145.761, 0.55 ) }
    dend_15 { pt3dadd( 31.8168, -63.502, -149.246, 0.28 ) }
    dend_15 { pt3dadd( 33.5916, -64.0472, -151.147, 0.28 ) }
    dend_15 { pt3dadd( 34.8211, -64.4418, -152.622, 0.55 ) }
    dend_15 { pt3dadd( 35.4765, -64.6908, -153.575, 0.55 ) }
    dend_15 { pt3dadd( 37.0994, -65.3849, -156.274, 0.28 ) }
    dend_15 { pt3dadd( 38.5665, -66.1423, -158.885, 0.55 ) }
    dend_15 { pt3dadd( 39.9074, -66.9003, -161.268, 0.28 ) }
    dend_15 { pt3dadd( 41.059, -67.6143, -163.511, 0.55 ) }
    dend_15 { pt3dadd( 42.0156, -68.1847, -165.357, 0.28 ) }
    dend_15 { pt3dadd( 42.8358, -68.5548, -166.801, 0.55 ) }
    dend_15 { pt3dadd( 44.8929, -69.2636, -170.151, 0.28 ) }
    dend_15 { pt3dadd( 45.977, -69.6205, -171.794, 0.55 ) }
    dend_15 { pt3dadd( 47.6613, -70.1638, -174.188, 0.28 ) }
    dend_15 { pt3dadd( 49.0636, -70.5497, -176.104, 0.55 ) }
    dend_15 { pt3dadd( 52.3255, -71.2436, -180.579, 0.28 ) }
    dend_15 { pt3dadd( 53.5668, -71.4155, -182.5, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.77365, -135.362, 102.471, 0.55 ) }
    dend_9 { pt3dadd( -4.68928, -142.242, 105.588, 0.55 ) }
    dend_9 { pt3dadd( -4.46272, -149.681, 106.877, 0.55 ) }
    dend_9 { pt3dadd( -4.33446, -156.845, 109.268, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.77365, -135.362, 102.471, 0.55 ) }
    dend_8 { pt3dadd( -3.50783, -141.977, 107.315, 0.55 ) }
    dend_8 { pt3dadd( -3.35554, -147.682, 113.337, 0.55 ) }
    dend_8 { pt3dadd( -3.20091, -152.027, 120.403, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.23364, -135.212, 101.888, 0.55 ) }
    dend_6 { pt3dadd( -7.44929, -142.847, 106.552, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -8.23364, -135.212, 101.888, 0.55 ) }
    dend_5 { pt3dadd( -9.2897, -143.806, 107.051, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.599, -97.6254, 3.55743, 0.83 ) }
    dend_25 { pt3dadd( 18.3803, -101.349, 4.3758, 0.83 ) }
    dend_25 { pt3dadd( 18.9522, -104.513, 5.32412, 0.83 ) }
    dend_25 { pt3dadd( 19.5206, -107.659, 6.26676, 0.83 ) }
    dend_25 { pt3dadd( 20.0605, -110.646, 7.16197, 0.83 ) }
    dend_25 { pt3dadd( 20.8925, -115.25, 8.54155, 0.83 ) }
    dend_25 { pt3dadd( 21.7184, -119.821, 9.91116, 0.83 ) }
    dend_25 { pt3dadd( 22.1208, -122.89, 11.2497, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 17.599, -97.6254, 3.55743, 0.55 ) }
    dend_24 { pt3dadd( 18.8664, -99.2338, 4.19991, 0.55 ) }
    dend_24 { pt3dadd( 19.9777, -100.46, 4.50137, 0.55 ) }
    dend_24 { pt3dadd( 20.8191, -101.358, 4.61672, 0.55 ) }
    dend_24 { pt3dadd( 21.7459, -102.409, 4.52661, 0.83 ) }
    dend_24 { pt3dadd( 22.8202, -103.59, 4.24012, 0.55 ) }
    dend_24 { pt3dadd( 23.871, -104.744, 3.95989, 0.83 ) }
    dend_24 { pt3dadd( 25.021, -105.987, 3.50173, 0.55 ) }
    dend_24 { pt3dadd( 25.7308, -106.698, 3.17236, 0.83 ) }
    dend_24 { pt3dadd( 28.0559, -108.982, 1.87111, 0.55 ) }
    dend_24 { pt3dadd( 29.8162, -110.774, 0.641044, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.3699, -95.8243, 25.7466, 0.55 ) }
    dend_20 { pt3dadd( -15.2575, -103.92, 29.0254, 0.55 ) }
    dend_20 { pt3dadd( -21.5149, -111.089, 32.1277, 0.55 ) }
    dend_20 { pt3dadd( -28.5705, -117.363, 35.4483, 0.55 ) }
    dend_20 { pt3dadd( -36.5074, -122.503, 38.7299, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.3699, -95.8243, 25.7466, 0.55 ) }
    dend_19 { pt3dadd( -14.4032, -103.787, 31.0109, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 22.1208, -122.89, 11.2497, 0.55 ) }
    dend_27 { pt3dadd( 22.1783, -124.351, 11.5504, 0.55 ) }
    dend_27 { pt3dadd( 22.2676, -126.215, 12.0008, 0.55 ) }
    dend_27 { pt3dadd( 22.3577, -127.975, 12.4185, 0.55 ) }
    dend_27 { pt3dadd( 22.4204, -129.225, 12.6918, 0.55 ) }
    dend_27 { pt3dadd( 22.5308, -131.454, 13.1373, 0.55 ) }
    dend_27 { pt3dadd( 23.0064, -137.696, 14.3114, 0.55 ) }
    dend_27 { pt3dadd( 23.26, -139.801, 14.6632, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 23.4847, -141.277, 14.8525, 0.55 ) }
    dend_27 { pt3dadd( 23.8278, -142.947, 14.9636, 0.55 ) }
    dend_27 { pt3dadd( 24.1389, -144.228, 14.9406, 0.55 ) }
    dend_27 { pt3dadd( 25.0109, -147.2, 14.8324, 0.55 ) }
    dend_27 { pt3dadd( 25.6073, -149.463, 14.7023, 0.55 ) }
    dend_27 { pt3dadd( 26.0082, -150.95, 14.6773, 0.55 ) }
    dend_27 { pt3dadd( 26.925, -154.829, 14.7736, 0.55 ) }
    dend_27 { pt3dadd( 27.4626, -157.451, 14.9273, 0.55 ) }
    dend_27 { pt3dadd( 28.0635, -160.851, 15.2954, 0.55 ) }
    dend_27 { pt3dadd( 28.6233, -164.736, 15.9912, 0.55 ) }
    dend_27 { pt3dadd( 29.0063, -167.336, 16.655, 0.55 ) }
    dend_27 { pt3dadd( 29.2411, -168.873, 17.1021, 0.55 ) }
    dend_27 { pt3dadd( 29.438, -170.292, 17.4963, 0.55 ) }
    dend_27 { pt3dadd( 29.7587, -172.077, 17.9417, 0.55 ) }
    dend_27 { pt3dadd( 30.6491, -176.355, 18.7424, 0.55 ) }
    dend_27 { pt3dadd( 31.0747, -177.998, 19.0317, 0.55 ) }
    dend_27 { pt3dadd( 31.5185, -179.831, 19.3186, 0.55 ) }
    dend_27 { pt3dadd( 32.1737, -182.584, 19.7246, 0.55 ) }
    dend_27 { pt3dadd( 32.5827, -184.712, 19.9985, 0.55 ) }
    dend_27 { pt3dadd( 32.8873, -186.742, 20.1713, 0.55 ) }
    dend_27 { pt3dadd( 33.1051, -188.687, 20.2884, 0.55 ) }
    dend_27 { pt3dadd( 33.2756, -190.59, 20.4078, 0.55 ) }
    dend_27 { pt3dadd( 33.4112, -191.943, 20.486, 0.55 ) }
    dend_27 { pt3dadd( 33.6863, -194.146, 20.5576, 0.55 ) }
    dend_27 { pt3dadd( 34.097, -196.774, 20.4537, 0.55 ) }
    dend_27 { pt3dadd( 34.3779, -198.036, 20.3405, 0.55 ) }
    dend_27 { pt3dadd( 34.6823, -199.134, 20.176, 0.55 ) }
    dend_27 { pt3dadd( 35.4088, -201.182, 19.8138, 0.55 ) }
    dend_27 { pt3dadd( 35.8787, -202.478, 19.5449, 0.55 ) }
    dend_27 { pt3dadd( 36.4387, -204.08, 19.2769, 0.55 ) }
    dend_27 { pt3dadd( 36.7557, -205.218, 19.1235, 0.55 ) }
    dend_27 { pt3dadd( 37.4679, -208.195, 18.7945, 0.55 ) }
    dend_27 { pt3dadd( 37.8634, -210.448, 18.6543, 0.55 ) }
    dend_27 { pt3dadd( 38.2658, -213.972, 18.6471, 0.55 ) }
    dend_27 { pt3dadd( 38.4473, -216.265, 18.8504, 0.55 ) }
    dend_27 { pt3dadd( 38.5793, -218.683, 19.1187, 0.28 ) }
    dend_27 { pt3dadd( 38.5904, -219.661, 19.2464, 0.28 ) }
    dend_27 { pt3dadd( 38.4905, -222.06, 19.728, 0.28 ) }
    dend_27 { pt3dadd( 38.2862, -224.297, 20.3051, 0.28 ) }
    dend_27 { pt3dadd( 38.072, -227.26, 21.4617, 0.28 ) }
    dend_27 { pt3dadd( 39.2009, -233.664, 23.1597, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 22.1208, -122.89, 11.2497, 0.55 ) }
    dend_26 { pt3dadd( 22.5275, -123.272, 12.3213, 0.55 ) }
    dend_26 { pt3dadd( 23.2499, -124.269, 14.5898, 0.55 ) }
    dend_26 { pt3dadd( 23.8197, -125.258, 16.5795, 0.28 ) }
    dend_26 { pt3dadd( 24.3857, -126.389, 18.7394, 0.55 ) }
    dend_26 { pt3dadd( 24.5841, -127.132, 20.1173, 0.28 ) }
    dend_26 { pt3dadd( 24.7568, -128.496, 22.5937, 0.55 ) }
    dend_26 { pt3dadd( 24.6164, -129.24, 23.7334, 0.28 ) }
    dend_26 { pt3dadd( 24.5104, -129.518, 24.1711, 0.28 ) }
    dend_26 { pt3dadd( 24.3104, -129.929, 24.9348, 0.55 ) }
    dend_26 { pt3dadd( 23.6771, -131.291, 27.8581, 0.28 ) }
    dend_26 { pt3dadd( 23.4413, -131.825, 29.0908, 0.55 ) }
    dend_26 { pt3dadd( 23.0594, -133.334, 32.6991, 0.28 ) }
    dend_26 { pt3dadd( 22.9588, -134.072, 34.6207, 0.28 ) }
    dend_26 { pt3dadd( 22.954, -134.998, 36.9708, 0.55 ) }
    dend_26 { pt3dadd( 23.2099, -136.388, 40.3672, 0.28 ) }
    dend_26 { pt3dadd( 23.2862, -136.566, 40.8102, 0.55 ) }
    dend_26 { pt3dadd( 23.7897, -137.414, 42.937, 0.28 ) }
    dend_26 { pt3dadd( 23.8544, -137.49, 43.1216, 0.55 ) }
    dend_26 { pt3dadd( 24.4103, -138.389, 44.76, 0.28 ) }
    dend_26 { pt3dadd( 24.6399, -138.885, 45.5564, 0.55 ) }
    dend_26 { pt3dadd( 26.4211, -142.576, 52.1514, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -36.5074, -122.503, 38.7299, 0.55 ) }
    dend_22 { pt3dadd( -42.7229, -127.285, 44.8312, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -36.5074, -122.503, 38.7299, 0.55 ) }
    dend_21 { pt3dadd( -44.5286, -131.846, 41.0474, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 13
    dend_48 nseg = 3
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 9
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 5
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_BP_60923f9e40_0_0


