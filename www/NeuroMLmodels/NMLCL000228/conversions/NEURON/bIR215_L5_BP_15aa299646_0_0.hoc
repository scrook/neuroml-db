// Cell: bIR215_L5_BP_15aa299646_0_0
/*
{
  "id" : "bIR215_L5_BP_15aa299646_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.11376, 8.31233, 2.84766, 0.83", "-5.99614, 10.5464, 3.28236, 1.11", "-7.69561, 11.8628, 3.50848, 0.83", "-9.34671, 13.1306, 3.71109, 0.83", "-10.3243, 13.8535, 3.82211, 1.11", "-13.3856, 16.1125, 4.17794, 1.11", "-18.8611, 19.98, 4.80693, 0.83", "-20.8337, 21.3203, 5.01464, 0.83", "-22.3958, 22.35, 5.14366, 0.83", "-23.9191, 23.3706, 5.25533, 0.83", "-25.1591, 24.2117, 5.31559, 0.55", "-26.0911, 24.7813, 5.37674, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.25639, 6.09277, -6.12325, 0.55", "6.43052, 6.56308, -6.60877, 0.55", "7.69209, 6.6818, -7.25122, 0.83", "9.68877, 6.80815, -8.44461, 0.55", "10.6526, 6.86913, -9.02069, 1.38", "13.0224, 7.01909, -10.4371, 0.55", "14.0317, 6.96831, -11.1129, 0.83", "19.2529, 6.03703, -14.9102, 0.55", "19.758, 5.9118, -15.328, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.681767, -10.2793, 3.15803, 1.11", "-0.725623, -14.1487, 4.54523, 1.11", "-0.743484, -15.7246, 5.11018, 0.83", "-0.767213, -17.8183, 5.86076, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "1.07027, 10.3538, -1.45365, 1.11", "1.35896, 12.7826, -1.4716, 1.11", "1.86253, 16.7431, -1.35857, 1.38", "1.89541, 16.9634, -1.3496, 1.38", "2.46812, 19.6753, -1.26055, 0.83", "3.23151, 22.5312, -1.05251, 0.83", "4.47671, 25.7268, -0.520383, 0.83", "5.14062, 26.9244, -0.217339, 0.83", "5.76328, 27.7808, 0.0534752, 1.11", "7.50898, 29.8492, 0.706402, 0.55", "9.53075, 31.993, 1.49953, 0.83", "12.0639, 34.1631, 2.3196, 0.55", "13.3144, 35.0493, 2.65701, 0.83", "15.0923, 36.2431, 3.23425, 0.55", "17.3346, 37.7634, 4.06626, 0.55", "20.5362, 40.0647, 5.40834, 0.55", "24.0735, 42.7045, 6.89166, 0.55", "26.3929, 44.4164, 8.09735, 0.55", "29.3415, 46.5804, 9.898, 0.55", "29.9676, 47.0118, 10.3189, 0.83", "31.6521, 48.1498, 11.5307, 0.55", "33.0364, 49.0314, 12.462, 0.83", "36.2814, 51.4808, 14.6903, 0.55", "37.4244, 52.3781, 15.2829, 0.83", "38.4114, 53.0281, 15.6184, 0.55", "39.3431, 53.5811, 15.8213, 0.83", "41.3367, 54.589, 16.0919, 0.83", "43.9141, 55.9713, 16.2504, 0.83", "45.4543, 56.8973, 16.1991, 0.55", "46.6387, 57.7101, 16.1657, 0.55", "49.7278, 59.8077, 16.037, 0.83", "51.6997, 61.1535, 15.8825, 0.55", "54.653, 63.1196, 15.539, 0.55", "57.3151, 64.7535, 15.1262, 0.55", "59.6711, 66.1296, 14.6981, 0.55", "62.5977, 67.7287, 14.0315, 0.55", "64.3524, 68.4872, 13.5695, 0.55", "65.4977, 68.9009, 13.1169, 0.55", "66.9561, 69.1629, 12.3874, 0.55", "69.0443, 69.1725, 11.1136, 0.55", "70.3148, 68.9922, 10.2651, 0.55", "72.2134, 68.6671, 9.16991, 0.55", "75.9525, 68.1706, 7.4347, 0.55", "78.9681, 67.9252, 6.29244, 0.55", "82.239, 67.8233, 5.27658, 0.55", "84.395, 67.8293, 4.79054, 0.55", "90.1499, 68.3523, 3.88549, 0.55", "93.6522, 68.9158, 3.5923, 0.55", "96.3634, 69.4989, 3.59859, 0.55", "98.0482, 70.1071, 3.65923, 0.55", "100.017, 71.0527, 3.72095, 0.55", "103.289, 72.9634, 3.56771, 0.55", "104.011, 73.4282, 3.44097, 0.55", "106.037, 74.6638, 2.9522, 0.55", "107.912, 76.0017, 2.49632, 0.83", "108.932, 76.7454, 2.23242, 0.55", "110.453, 78.0394, 1.78047, 0.83", "119.109, 84.9135, 1.3793, 0.83", "126.625, 92.9814, 0.511565, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-26.0911, 24.7813, 5.37674, 0.55", "-28.003, 25.7291, 4.4383, 0.55", "-30.0819, 26.7598, 3.41783, 0.55", "-32.5906, 28.0036, 2.18635, 0.55", "-34.6622, 29.0307, 1.16949, 0.83", "-36.3982, 29.8914, 0.317358, 0.55", "-39.6204, 31.4889, -1.26433, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-26.0911, 24.7813, 5.37674, 0.55", "-28.6306, 25.2945, 4.98498, 0.55", "-31.3453, 25.7414, 4.83489, 0.55", "-34.4268, 26.2391, 4.73978, 0.55", "-38.9079, 26.8903, 5.01026, 0.55", "-42.67, 27.3125, 5.49748, 0.55", "-46.6233, 27.6859, 6.17345, 0.55", "-50.4643, 27.7682, 7.22413, 0.55", "-53.7865, 27.5036, 8.43015, 0.55", "-57.947, 26.865, 10.3573, 0.55", "-59.7676, 26.4441, 11.4369, 0.55", "-61.7378, 25.9646, 12.6851, 0.55", "-65.2082, 24.8701, 14.7198, 0.55", "-67.0429, 24.308, 15.5183, 0.55", "-68.9644, 23.6618, 16.3407, 0.55", "-71.2397, 22.9337, 17.092, 0.55", "-73.7091, 22.1967, 17.8441, 0.55", "-77.2301, 21.1402, 18.841, 0.55", "-81.913, 20.0619, 19.7699, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.758, 5.9118, -15.328, 0.55", "25.0465, 7.11721, -16.4456, 0.55", "28.0799, 7.67188, -17.5309, 0.55", "31.0665, 8.08914, -18.6574, 0.55", "33.1032, 8.29275, -19.4336, 0.55", "36.0768, 8.51919, -20.5514, 0.55", "42.2368, 8.8864, -23.0739, 0.55", "49.2161, 9.29974, -26.4076, 0.55", "52.5866, 9.30843, -28.2788, 0.55", "54.3878, 9.27875, -29.4047, 0.55", "56.3621, 9.26305, -30.7196, 0.55", "59.8805, 9.13423, -33.0608, 0.55", "61.1538, 9.01513, -33.961, 0.55", "66.5452, 8.6853, -38.1837, 0.55", "70.3601, 8.53935, -41.4549, 0.55", "72.5577, 8.50425, -43.3959, 0.55", "74.7486, 8.4494, -45.3319, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "19.758, 5.9118, -15.328, 0.83", "21.8326, 7.50068, -15.4848, 0.83", "23.0209, 8.40038, -15.6324, 0.55", "24.7722, 9.74564, -16.0142, 0.83", "25.9479, 10.6774, -16.3132, 0.55", "27.5634, 12.0118, -16.706, 0.83", "29.4986, 13.6668, -17.1066, 0.55", "30.4787, 14.4278, -17.2546, 0.55", "32.7617, 15.874, -17.3818, 0.83", "34.8504, 16.9601, -17.1774, 0.55", "36.0145, 17.5695, -16.9439, 0.83", "37.7489, 18.5486, -16.4049, 0.55", "40.2211, 20.045, -15.2982, 0.55", "43.6661, 21.9587, -13.5478, 0.55", "46.9542, 23.6891, -11.6197, 0.55", "49.5602, 25.0369, -10.0383, 0.55", "53.8531, 27.2831, -7.40998, 0.55", "56.9807, 29.0316, -5.42575, 0.55", "58.8477, 30.2653, -4.17529, 0.55", "62.2435, 32.9211, -1.88733, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.767213, -17.8183, 5.86076, 0.83", "-0.955611, -21.8832, 5.68673, 0.83", "-1.13917, -25.8435, 5.51717, 0.83", "-1.3441, -30.2652, 5.32787, 0.83", "-1.45112, -32.5742, 5.22901, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.767213, -17.8183, 5.86076, 0.55", "0.0766244, -19.7575, 6.72043, 0.55", "0.957978, -22.1048, 7.95751, 0.55", "1.77422, -25.122, 9.87971, 0.55", "2.03541, -26.2849, 10.6894, 0.83", "2.61493, -29.2316, 13.1672, 0.55", "2.81934, -30.7369, 14.5265, 0.55", "3.21722, -33.6618, 17.3068, 0.83", "3.46392, -35.823, 19.5486, 0.55", "3.51648, -37.5809, 21.4437, 0.55", "3.52247, -40.8957, 25.0122, 0.55", "3.51575, -43.5364, 27.8272, 0.55", "3.56203, -45.6614, 30.0912, 0.55", "3.68989, -47.9322, 32.3748, 0.28", "3.79726, -48.8878, 33.2579, 0.55", "3.99167, -50.6542, 34.7797, 0.28", "4.43482, -53.4432, 36.6099, 0.55", "4.19766, -62.4252, 44.1162, 0.55", "4.18328, -70.7345, 52.3643, 0.55", "5.51151, -77.7342, 61.6551, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.6204, 31.4889, -1.26433, 0.55", "-42.2922, 31.4166, -0.29727, 0.55", "-43.4314, 31.3018, 0.223728, 0.83", "-44.7832, 31.0713, 0.979413, 0.55", "-45.8292, 30.8758, 1.64094, 0.83", "-48.5709, 30.4544, 3.37195, 0.55", "-49.6107, 30.3085, 4.03791, 0.28", "-51.3628, 30.0532, 5.28058, 0.55", "-53.713, 29.725, 6.94104, 0.55", "-55.4878, 29.4923, 8.13062, 0.55", "-57.8494, 29.1959, 9.6534, 0.28", "-58.4544, 29.1377, 9.9849, 0.55", "-59.7012, 29.0398, 10.6318, 0.28", "-60.5389, 29.0093, 11.0042, 0.55", "-62.2303, 28.9663, 11.628, 0.28", "-63.2146, 28.9013, 11.9359, 0.55", "-64.948, 28.6661, 12.4667, 0.28", "-66.1067, 28.5095, 12.7839, 0.55", "-73.5431, 26.3724, 17.5156, 0.55", "-80.428, 23.3132, 22.5648, 0.55", "-87.0355, 19.4373, 27.4202, 0.55", "-93.5002, 14.6547, 31.6145, 0.55", "-99.1374, 10.0153, 36.9954, 0.55", "-105.395, 5.77169, 42.0035, 0.55", "-111.871, 2.87776, 47.6558, 0.55", "-118.267, -0.677896, 53.0135, 0.55", "-124.563, -3.7115, 58.7939, 0.55", "-130.482, -6.92998, 64.865, 0.55", "-135.523, -11.1901, 71.0856, 0.55", "-140.709, -14.6804, 77.6572, 0.55", "-145.926, -18.9726, 83.7083, 0.55", "-150.147, -23.713, 90.1866, 0.55", "-153.006, -27.9986, 97.6507, 0.55", "-155.648, -33.7434, 104.152, 0.55", "-157.019, -39.6621, 110.886, 0.55", "-158.902, -45.2533, 117.774, 0.55", "-161.783, -50.2459, 124.777, 0.55", "-166.537, -53.8326, 131.617, 0.55", "-170.485, -58.3966, 138.387, 0.55", "-172.947, -61.6751, 146.477, 0.55", "-176.82, -64.2549, 154.262, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-39.6204, 31.4889, -1.26433, 0.55", "-40.6264, 32.4637, -2.90495, 0.55", "-41.2956, 33.5409, -4.63827, 0.55", "-41.8834, 34.7953, -6.4177, 0.55", "-42.2515, 35.5808, -7.53197, 0.55", "-42.9229, 37.0137, -9.56451, 0.83", "-43.4141, 38.062, -11.0515, 0.55", "-43.8773, 39.5304, -13.1992, 0.83", "-43.9658, 40.4595, -14.3423, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-81.913, 20.0619, 19.7699, 0.28", "-83.1755, 17.9969, 18.8539, 0.28", "-83.772, 17.1261, 18.3761, 0.28", "-84.5458, 15.901, 17.6565, 0.55", "-85.1852, 14.8203, 17.0371, 0.28", "-86.1305, 13.1685, 16.1182, 0.55", "-88.7692, 8.29165, 13.5145, 0.28", "-89.6217, 6.60535, 12.4595, 0.55", "-90.9074, 4.02488, 10.7408, 0.28", "-91.6411, 2.49394, 9.63887, 0.55", "-92.146, 1.44405, 8.85125, 0.28", "-92.7223, 0.236884, 7.95853, 0.55", "-94.4703, -3.8196, 5.10275, 0.28", "-95.0169, -5.03711, 4.18957, 0.55", "-95.9598, -6.85477, 2.57042, 0.28", "-96.732, -7.98989, 1.40458, 0.28", "-97.4277, -8.7336, 0.578083, 0.55", "-99.8674, -10.8103, -1.71201, 0.28", "-101.005, -11.6477, -2.63021, 0.55", "-103.782, -13.5193, -4.88079, 0.28", "-106.561, -15.151, -6.95, 0.28", "-109.584, -16.671, -9.05656, 0.28", "-110.971, -17.2301, -9.87884, 0.55", "-117.701, -24.302, -15.899, 0.55", "-125.339, -31.845, -19.9368, 0.55", "-132.696, -38.6439, -25.5217, 0.55", "-140.156, -44.5577, -31.9177, 0.55", "-147.623, -49.4799, -39.0981, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-81.913, 20.0619, 19.7699, 0.55", "-82.8422, 19.9781, 19.889, 0.55", "-85.4668, 19.7666, 20.5646, 0.55", "-86.4534, 19.6652, 20.8727, 0.55", "-88.7731, 19.3589, 21.6373, 0.55", "-92.339, 18.9131, 22.6385, 0.55", "-94.1925, 18.7362, 23.1222, 0.28", "-97.0754, 18.3946, 23.8225, 0.55", "-99.2149, 18.0921, 24.2685, 0.55", "-100.118, 17.9584, 24.4592, 0.28", "-105.537, 17.1536, 25.5958, 0.55", "-108.066, 16.6507, 25.9797, 0.28", "-111.476, 15.9464, 26.2981, 0.28", "-114.414, 15.3713, 26.3972, 0.55", "-125.928, 14.9708, 29.1719, 0.55", "-137.057, 14.3589, 33.1962, 0.55", "-147.54, 12.6297, 38.4428, 0.55", "-157.748, 12.9459, 44.4528, 0.55", "-166.492, 13.0165, 52.4514, 0.55", "-173.545, 13.8597, 61.9363, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "74.7486, 8.4494, -45.3319, 0.55", "80.2116, 10.1245, -49.9021, 0.55", "81.9345, 10.5788, -51.4584, 0.55", "84.0897, 11.0743, -53.3815, 0.55", "87.995, 11.9424, -57.1061, 0.55", "92.0652, 12.6776, -61.0997, 0.55", "94.0527, 12.8721, -63.0037, 0.83", "95.6836, 12.9179, -64.7, 0.55", "96.8986, 12.8496, -66.0978, 0.83", "99.8128, 12.2608, -69.6849, 0.55", "102.207, 11.5406, -72.6602, 0.55", "104.964, 10.69, -75.9402, 0.55", "108.033, 9.83687, -79.6561, 0.55", "110.09, 9.21429, -82.203, 0.55", "112.408, 8.50569, -85.1541, 0.55", "114.41, 7.9709, -87.8501, 0.55", "115.669, 7.75949, -89.7203, 0.55", "117.232, 7.42868, -93.4642, 0.55", "118.075, 7.15296, -95.8041, 0.55", "118.771, 6.66331, -98.9063, 0.55", "119.696, 5.68477, -104.148, 0.55", "119.881, 5.42052, -105.329, 0.28", "122.293, 2.04423, -119.701, 0.28", "123.126, 1.07893, -123.921, 0.83", "126.447, -2.61937, -138.9, 0.83", "128.167, -4.61813, -145.863, 0.83", "129.007, -5.54519, -148.686, 0.55", "129.985, -6.4652, -151.441, 0.55", "132.762, -8.31602, -156.562, 0.55", "135.765, -10.0037, -161.07, 0.28", "136.7, -10.337, -161.348, 0.55", "138.778, -10.9339, -161.207, 0.28", "140.071, -11.2132, -160.93, 0.55", "141.419, -11.5241, -160.526, 0.28", "143.041, -11.8169, -159.966, 0.55", "145.467, -12.1224, -159.385, 0.28", "147.411, -12.4269, -158.983, 0.55", "149.564, -12.6177, -158.709, 0.28", "152.485, -12.8634, -158.597, 0.55", "155.76, -13.0598, -158.668, 0.55", "158.637, -13.1953, -158.923, 0.28", "162.614, -13.3429, -159.496, 0.55", "169.482, -13.3959, -161.222, 0.55", "172.513, -13.2551, -162.352, 0.55", "173.815, -13.1377, -162.978, 0.83", "176.29, -12.8929, -164.402, 0.55", "178.007, -12.6506, -165.498, 0.83", "182.63, -11.8743, -168.498, 0.55", "185.446, -11.5971, -170.407, 0.28", "186.633, -11.5575, -171.076, 0.55", "189.882, -11.7604, -172.547, 0.28", "191.019, -11.9391, -172.987, 0.55", "193.366, -12.4618, -173.529, 0.28", "195.757, -13.2354, -173.664, 0.55", "200.597, -15.0725, -173.081, 0.28", "202.831, -16.0224, -172.572, 0.55", "206.151, -17.6304, -171.64, 0.28", "210.35, -19.6473, -170.31, 0.55", "213.388, -21.0644, -169.298, 0.55", "218.657, -23.3537, -167.457, 0.28", "220.818, -24.1899, -166.879, 0.55", "224.541, -25.4113, -166.294, 0.28", "228.254, -26.3381, -165.968, 0.55", "230.29, -26.6099, -166.073, 0.28", "232.134, -26.6038, -166.31, 0.55", "237.336, -26.2673, -167.469, 0.28", "241.057, -25.7669, -168.355, 0.28", "244.297, -25.0938, -169.169, 0.55", "247.872, -24.2478, -170.25, 0.28", "248.774, -23.9782, -170.491, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "74.7486, 8.4494, -45.3319, 0.55", "75.1038, 6.70159, -46.9965, 0.55", "75.2572, 5.2068, -48.2839, 0.28", "75.3983, 3.81149, -49.3344, 0.55", "75.8639, 0.851094, -51.5971, 0.28", "75.8871, 0.670803, -51.7678, 0.55", "76.0368, -0.257709, -52.7497, 0.28", "76.0769, -0.99342, -53.6977, 0.55", "76.0641, -1.73752, -54.7896, 0.28", "76.0087, -2.7388, -56.3356, 0.55", "75.8683, -5.2649, -60.158, 0.55", "75.7063, -7.55525, -63.6916, 0.55", "75.5539, -9.38398, -66.5182, 0.55", "75.363, -11.1874, -69.2552, 0.55", "75.3122, -11.6582, -69.9376, 0.28", "75.2767, -12.1726, -70.6156, 0.55", "75.3101, -12.9056, -71.4782, 0.28", "75.5306, -14.2569, -72.8899, 0.55", "76.2145, -16.9525, -75.1379, 0.55", "76.5987, -18.4313, -76.2062, 0.28", "76.8942, -19.9153, -77.3586, 0.55", "77.1405, -21.9671, -79.0508, 0.28", "77.2215, -23.6079, -80.4546, 0.55", "77.2258, -26.0534, -82.5544, 0.28", "77.2524, -28.6022, -84.6414, 0.55", "77.236, -32.2928, -87.7052, 0.28", "77.1794, -34.2559, -89.3437, 0.55", "77.0842, -36.2514, -91.0705, 0.28", "76.9776, -37.9831, -92.7112, 0.28", "76.9251, -40.1126, -94.9765, 0.55", "77.0356, -42.1072, -97.0259, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "62.2435, 32.9211, -1.88733, 0.55", "64.2393, 32.9841, -1.29082, 0.55", "65.7094, 32.9448, -0.981303, 0.55", "68.9433, 32.7869, -0.461148, 0.55", "70.4095, 32.659, -0.347601, 0.55", "72.0125, 32.5355, -0.309894, 0.55", "74.1723, 32.3744, -0.415061, 0.55", "76.4708, 32.1012, -0.722037, 0.55", "77.6881, 31.9142, -1.01184, 0.55", "80.1846, 31.4642, -1.92139, 0.55", "81.336, 31.2585, -2.37668, 0.55", "84.0428, 30.7136, -3.49867, 0.55", "85.8812, 30.2782, -4.22927, 0.55", "87.2308, 29.9622, -4.70748, 0.83", "89.392, 29.3867, -5.43211, 0.55", "91.5117, 28.7425, -6.04344, 0.83", "93.3127, 28.131, -6.48505, 0.55", "94.9084, 27.6258, -6.80412, 0.55", "95.8095, 27.3862, -6.94652, 0.83", "97.9053, 26.8558, -7.17505, 0.28", "98.94, 26.6467, -7.2346, 0.28", "99.9493, 26.3727, -7.32868, 0.28", "101.039, 26.1032, -7.44102, 0.28", "102.782, 25.696, -7.6619, 0.28", "103.481, 25.5447, -7.73267, 0.55", "105.141, 25.233, -7.749, 0.55", "108.122, 24.6754, -7.62755, 0.55", "108.946, 24.5075, -7.55446, 0.55", "109.683, 24.3409, -7.45367, 0.83", "111.269, 24.0536, -7.12031, 0.55", "112.647, 23.8112, -6.8096, 0.55", "113.948, 23.5888, -6.51126, 0.55", "114.959, 23.3933, -6.30436, 0.55", "116.576, 22.9579, -6.02932, 0.55", "118.501, 22.2601, -5.77246, 0.55", "121.531, 20.8091, -5.50559, 0.55", "123.219, 19.7583, -5.41009, 0.55", "124.705, 18.5982, -5.34676, 0.28", "125.157, 18.1571, -5.33273, 0.55", "126.179, 16.8974, -5.29141, 0.28", "127.085, 15.4647, -5.22571, 0.55", "127.967, 13.6815, -5.01033, 0.55", "128.557, 12.5232, -4.81171, 0.28", "128.77, 12.1192, -4.72081, 0.55", "129.318, 11.1209, -4.47978, 0.28", "130.06, 9.83276, -4.13221, 0.55", "131.97, 6.76119, -3.20806, 0.55", "132.959, 5.22411, -2.70655, 0.55", "133.875, 3.81962, -2.23299, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "62.2435, 32.9211, -1.88733, 0.55", "63.3953, 33.1828, -1.01065, 0.55", "63.7649, 33.2657, -0.75012, 0.55", "65.1494, 33.5089, 0.158433, 0.55", "66.6916, 33.8106, 1.19674, 0.55", "68.6687, 34.1918, 2.58053, 0.55", "69.2148, 34.2978, 2.95908, 0.55", "70.1988, 34.4503, 3.62734, 0.55", "71.2747, 34.6432, 4.31959, 0.55", "72.5215, 34.9034, 5.0687, 0.55", "73.6945, 35.1654, 5.7794, 0.55", "74.3346, 35.3391, 6.13993, 0.55", "75.0835, 35.5651, 6.56259, 0.55", "76.0067, 35.8721, 7.06926, 0.83", "77.5192, 36.3748, 7.73662, 0.55", "78.5253, 36.6683, 8.12787, 0.83", "79.9297, 37.0117, 8.61994, 0.55", "80.3637, 37.0936, 8.76397, 0.55", "81.7179, 37.2813, 9.18032, 0.55", "84.1578, 37.4733, 9.8233, 0.55", "85.9557, 37.5165, 10.2501, 0.55", "87.3866, 37.485, 10.6189, 0.55", "88.8541, 37.3769, 11.0417, 0.55", "89.1638, 37.3461, 11.1319, 0.28", "89.7945, 37.2592, 11.3125, 0.83", "92.3884, 36.8655, 12.0676, 0.55", "94.2028, 36.5929, 12.5617, 0.55", "95.6878, 36.4048, 13.0049, 0.55", "96.5753, 36.2897, 13.2779, 0.83", "97.273, 36.2088, 13.4944, 0.28", "97.9057, 36.1366, 13.685, 0.55", "102.705, 36.7242, 15.9059, 0.55", "107.871, 36.5612, 17.1688, 0.55", "112.943, 37.0289, 18.7025, 0.55", "117.568, 36.6737, 21.3081, 0.55", "121.956, 35.575, 24.1087, 0.55", "126.803, 33.8036, 25.4042, 0.55", "131.613, 31.5635, 25.7883, 0.55", "136.781, 30.3021, 25.8929, 0.55", "141.905, 28.9462, 26.3478, 0.55", "147.169, 28.1877, 26.4892, 0.55", "152.395, 27.6393, 27.3225, 0.55", "157.393, 26.1629, 28.3933, 0.55", "162.427, 25.6062, 30.0239, 0.55", "167.172, 25.7803, 32.4227, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.45112, -32.5742, 5.22901, 1.38", "1.44521, -35.289, 4.95867, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.45112, -32.5742, 5.22901, 0.55", "-2.65652, -34.6428, 4.60514, 0.55", "-3.95632, -37.2658, 3.9326, 0.55", "-5.00402, -39.0236, 3.40873, 0.55", "-5.80031, -40.4932, 2.80587, 0.55", "-7.43681, -43.5492, 1.27105, 0.55", "-8.57009, -45.5985, 0.146356, 0.55", "-9.54744, -47.4342, -0.905966, 0.55", "-12.083, -51.924, -3.61715, 0.55", "-15.1663, -57.1406, -6.84917, 0.55", "-17.5305, -61.0997, -9.41409, 0.55", "-19.0159, -63.6923, -11.0788, 0.55", "-20.7119, -66.7902, -12.9754, 0.55", "-22.8388, -71.1873, -15.3181, 0.55", "-24.0537, -74.2632, -16.626, 0.55", "-25.6007, -78.6464, -18.0145, 0.55", "-26.8154, -82.7186, -19.0233, 0.55", "-27.9685, -87.7523, -19.9682, 0.55", "-28.9848, -93.6153, -20.7328, 0.55", "-29.4397, -98.0533, -21.0207, 0.55", "-29.6058, -100.247, -20.9691, 0.55", "-29.8632, -105.371, -20.4578, 0.55", "-30.0899, -110.158, -19.8294, 0.55", "-30.2739, -114.955, -18.7665, 0.55", "-30.4767, -117.711, -18.0388, 0.55", "-31.2088, -126.227, -15.4896, 0.55", "-31.2716, -126.854, -15.2942, 0.55", "-31.6385, -130.69, -13.9807, 0.55", "-32.6513, -137.583, -11.6439, 0.55", "-32.936, -139.889, -10.9885, 0.55", "-33.163, -143.501, -10.5458, 0.55", "-33.0708, -144.838, -10.6323, 0.55", "-32.1775, -149.342, -11.5725, 0.55", "-31.161, -152.24, -12.6436, 0.55", "-28.9762, -156.842, -15.1182, 0.55", "-25.8906, -162.446, -18.4213, 0.28", "-25.0171, -163.828, -19.3942, 0.55", "-23.5964, -165.923, -21.031, 0.28", "-23.3766, -166.239, -21.294, 0.55", "-22.2556, -167.97, -22.6074, 0.28", "-21.9769, -168.563, -22.9521, 0.55", "-20.8778, -171.653, -24.2509, 0.28", "-20.546, -172.708, -24.7007, 0.55", "-19.7034, -175.766, -25.8673, 0.28", "-19.4361, -176.728, -26.2293, 0.55", "-18.5636, -180.05, -27.4442, 0.28", "-18.1514, -181.578, -28.0061, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.51151, -77.7342, 61.6551, 0.55", "3.83879, -84.1193, 68.1579, 0.55", "1.32107, -89.7224, 75.0947, 0.55", "-1.03233, -95.9207, 81.5674, 0.55", "-3.57082, -102.154, 87.9356, 0.55", "-5.28901, -109.395, 93.4559, 0.55", "-6.82828, -116.34, 99.3931, 0.55", "-7.72228, -124.682, 103.324, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.51151, -77.7342, 61.6551, 0.55", "7.25404, -82.9041, 66.0848, 0.55", "8.91288, -88.8359, 69.4683, 0.55", "9.49159, -94.7706, 73.1875, 0.55", "9.46843, -101.01, 76.4201, 0.55", "9.74847, -107.238, 79.6647, 0.55", "10.2291, -113.227, 83.3099, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.9658, 40.4595, -14.3423, 0.83", "-43.3701, 42.4389, -15.4319, 0.83", "-42.0996, 47.1349, -17.8029, 0.55", "-41.5819, 49.124, -18.695, 0.83", "-41.0502, 51.2202, -19.5336, 0.55", "-40.5646, 53.3083, -20.1528, 0.55", "-40.3414, 54.3265, -20.3509, 0.28", "-40.266, 54.9596, -20.3478, 0.55", "-40.0553, 56.9616, -19.9164, 0.28", "-39.9544, 57.8072, -19.6859, 0.55", "-39.6673, 60.7132, -18.7783, 0.28", "-39.5179, 62.9926, -17.9978, 0.55", "-39.4828, 66.5153, -16.7125, 0.28", "-39.5769, 69.5908, -15.5507, 0.28", "-39.7399, 71.2987, -14.8918, 0.55", "-40.062, 73.318, -14.1409, 0.28", "-40.2847, 74.2748, -13.785, 0.55", "-40.912, 76.5489, -13.0823, 0.28", "-41.415, 78.0824, -12.719, 0.28", "-41.9307, 79.5998, -12.4156, 0.28", "-42.1715, 80.404, -12.2508, 0.55", "-42.9523, 83.6874, -11.6157, 0.28", "-43.7319, 87.603, -10.901, 0.55", "-43.9803, 88.9578, -10.6544, 0.55", "-44.2576, 90.307, -10.3843, 0.55", "-44.9865, 93.1781, -9.89318, 0.55", "-45.5758, 95.0673, -9.64012, 0.28", "-45.8785, 95.7804, -9.57405, 0.55", "-46.8424, 97.6922, -9.38929, 0.28", "-47.9329, 99.7449, -9.29232, 0.55", "-49.7466, 102.712, -9.33276, 0.28", "-50.6268, 103.953, -9.42166, 0.28", "-52.0293, 105.712, -9.7666, 0.55", "-53.5867, 107.564, -10.2472, 0.28", "-53.8697, 107.856, -10.3468, 0.55", "-54.8884, 108.789, -10.7316, 0.28", "-58.4118, 111.767, -12.0525, 0.55", "-63.2574, 115.511, -14.1976, 0.28", "-64.1386, 116.159, -14.6648, 0.55", "-66.5456, 117.849, -16.0167, 0.28", "-67.5494, 118.552, -16.617, 0.28", "-68.4114, 119.15, -17.1892, 0.55", "-70.8785, 120.632, -19.1597, 0.28", "-72.6317, 121.459, -20.5302, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-43.9658, 40.4595, -14.3423, 0.55", "-44.1996, 42.2904, -14.3653, 0.55", "-44.3742, 43.3586, -14.2825, 0.28", "-44.6689, 44.0985, -14.0529, 0.55", "-45.3457, 45.7975, -13.5256, 0.28", "-45.821, 46.9909, -13.1552, 0.55", "-46.6973, 49.1909, -12.4724, 0.28", "-47.31, 50.3428, -11.9081, 0.55", "-49.73, 52.9507, -9.6278, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-147.623, -49.4799, -39.0981, 0.55", "-152.542, -55.1797, -43.0355, 0.55", "-156.103, -61.4872, -47.4759, 0.55", "-158.777, -66.9675, -53.3915, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-147.623, -49.4799, -39.0981, 0.55", "-153.753, -54.8293, -45.5363, 0.55", "-158.772, -59.9897, -53.0071, 0.55", "-163.364, -65.2504, -60.6797, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-173.545, 13.8597, 61.9363, 0.55", "-183.581, 14.4652, 68.7439, 0.55", "-194.281, 16.3464, 74.1681, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-173.545, 13.8597, 61.9363, 0.55", "-185.081, 12.4397, 65.6761, 0.55", "-196.611, 13.026, 69.6525, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "77.0356, -42.1072, -97.0259, 0.28", "84.1217, -45.4115, -110.316, 0.28", "84.8145, -45.8192, -111.512, 0.55", "85.9842, -46.5075, -113.532, 0.28", "86.9691, -47.0871, -115.232, 0.28", "88.2728, -47.8543, -117.483, 0.55", "89.9917, -48.8659, -120.451, 0.55", "92.1956, -50.9993, -122.176, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "77.0356, -42.1072, -97.0259, 0.55", "77.5743, -43.0994, -98.478, 0.55", "77.7151, -43.5329, -99.1248, 0.28", "77.907, -44.2653, -100.253, 0.55", "78.3296, -45.8788, -102.738, 0.28", "78.6225, -46.9969, -104.461, 0.55", "79.1187, -48.8914, -107.379, 0.28", "79.6452, -51.1447, -111.177, 0.28", "79.829, -52.1673, -112.951, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "133.875, 3.81962, -2.23299, 0.28", "136.506, 0.74694, -0.833688, 0.28", "139.791, -3.30134, 1.38187, 0.28", "141.856, -5.92557, 2.93544, 0.55", "143.089, -7.35547, 3.8898, 0.28", "143.744, -8.12562, 4.41127, 0.28", "146.999, -11.932, 6.9182, 0.55", "147.732, -12.7648, 7.60926, 0.28", "149.444, -14.9699, 9.58112, 0.55", "150.915, -16.8983, 11.1965, 0.28", "152.205, -18.4584, 12.4859, 0.55", "153.735, -20.3399, 13.885, 0.55", "156.223, -23.3652, 15.6637, 0.55", "156.827, -24.1116, 16.0674, 0.55", "158.995, -26.9123, 17.5262, 0.28", "159.84, -28.0652, 18.0813, 0.55", "161.017, -29.5264, 18.7975, 0.28", "162.693, -31.6114, 19.7039, 0.55", "165.532, -34.9286, 20.6041, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "133.875, 3.81962, -2.23299, 0.55", "130.668, 3.60538, -2.65561, 0.55", "128.063, 3.4314, -2.99882, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.44521, -35.289, 4.95867, 0.83", "1.55806, -35.5071, 4.94286, 0.83", "2.84959, -37.4258, 4.92499, 0.83", "3.9813, -39.1076, 4.79397, 0.55", "4.88416, -40.4493, 4.68944, 0.55", "6.80322, -43.3012, 4.46726, 0.83", "9.13092, -46.7603, 4.19777, 0.55", "10.3985, -48.5687, 4.09369, 0.83", "12.6343, -51.4364, 4.0606, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.44521, -35.289, 4.95867, 0.55", "-0.599571, -36.5353, 2.08599, 0.55", "-2.7944, -37.8731, -0.997481, 0.55", "-5.3854, -39.4524, -4.63755, 0.55", "-8.53172, -41.3702, -9.05777, 0.55", "-10.3172, -42.4585, -11.5661, 0.55", "-10.6759, -42.6771, -12.07, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "10.2291, -113.227, 83.3099, 0.55", "11.6908, -120.913, 88.2464, 0.55", "13.8715, -129.161, 91.824, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "10.2291, -113.227, 83.3099, 0.55", "10.741, -121.531, 87.9258, 0.55", "10.9808, -129.605, 92.9531, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-49.73, 52.9507, -9.6278, 0.28", "-51.9786, 53.6964, -8.17556, 0.28", "-52.8586, 53.941, -7.55885, 0.55", "-55.4046, 54.6301, -5.72852, 0.28", "-56.6301, 55.0197, -4.90573, 0.55", "-59.9301, 56.1197, -2.76554, 0.28", "-63.2841, 57.2377, -0.590319, 0.55", "-68.8108, 58.864, 2.94358, 0.28", "-69.9891, 59.2166, 3.70017, 0.55", "-72.5744, 60.1391, 5.35897, 0.28", "-73.5925, 60.5414, 6.03212, 0.55", "-83.6931, 62.5467, 10.309, 0.55", "-93.718, 66.7771, 12.7464, 0.55", "-103.311, 70.6027, 16.9495, 0.55", "-111.74, 75.718, 22.1576, 0.55", "-120.848, 80.8019, 26.0994, 0.55", "-130.902, 83.8989, 29.7936, 0.55", "-140.776, 85.5062, 34.7202, 0.55", "-150.109, 85.4332, 40.8203, 0.55", "-159.437, 86.0842, 46.896, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-49.73, 52.9507, -9.6278, 0.55", "-52.7808, 51.6688, -9.29474, 0.55", "-54.3626, 50.9531, -9.13586, 0.28", "-55.5398, 50.4205, -9.01763, 0.55", "-56.5209, 49.9765, -8.91909, 0.28", "-57.2081, 49.6656, -8.85008, 0.55", "-59.103, 48.8082, -8.65975, 0.28", "-60.3266, 48.1717, -8.70531, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-158.777, -66.9675, -53.3915, 0.55", "-163.27, -75.6201, -55.6037, 0.55", "-167.731, -84.4986, -56.7047, 0.55", "-171.222, -93.4539, -59.4548, 0.55", "-175.862, -102.167, -61.035, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-158.777, -66.9675, -53.3915, 0.55", "-163.577, -71.3659, -63.2285, 0.55", "-167.645, -74.147, -73.9463, 0.55", "-172.858, -78.3218, -83.67, 0.55", "-180.348, -80.6356, -92.4848, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-163.364, -65.2504, -60.6797, 0.55", "-169.676, -64.1605, -69.3685, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-163.364, -65.2504, -60.6797, 0.55", "-166.877, -72.9635, -65.1046, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "92.1956, -50.9993, -122.176, 0.28", "95.6918, -52.345, -124.474, 0.28", "97.3158, -52.97, -125.541, 0.55", "100.413, -54.162, -127.577, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "92.1956, -50.9993, -122.176, 0.55", "91.5278, -52.0445, -124.031, 0.55", "90.1921, -54.1351, -127.742, 0.28", "89.757, -54.8161, -128.951, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "79.829, -52.1673, -112.951, 0.28", "80.363, -53.8665, -116.85, 0.28", "80.6275, -54.7079, -118.78, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "79.829, -52.1673, -112.951, 0.55", "77.6327, -52.5074, -112.485, 0.55", "71.5084, -53.4559, -111.185, 0.28", "70.0535, -53.6812, -110.876, 0.55", "66.0736, -54.2975, -110.031, 0.28", "63.5082, -54.6948, -109.486, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.6343, -51.4364, 4.0606, 0.83", "12.7009, -51.7278, 4.01981, 0.83", "13.5929, -55.5456, 3.60725, 0.83", "13.9626, -58.4342, 3.39235, 0.83", "14.0397, -61.2552, 3.39628, 0.83", "13.9264, -65.0369, 3.6264, 0.83", "13.632, -69.4119, 4.00388, 0.83", "13.2418, -74.3133, 4.67153, 0.83", "12.7948, -79.0892, 5.52539, 0.83", "11.9337, -84.9646, 6.32578, 0.83", "11.4486, -87.6617, 6.50399, 0.83", "11.1166, -89.6818, 6.51653, 0.83", "10.4287, -93.5565, 6.43761, 0.83", "9.94926, -97.0094, 6.21381, 0.83", "9.56287, -104.294, 5.09287, 0.83", "9.56218, -108.241, 4.00132, 0.83", "9.64527, -111.858, 2.74006, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.6343, -51.4364, 4.0606, 0.55", "11.8598, -53.3694, 4.07757, 0.55", "11.2664, -54.7723, 4.19102, 0.55", "10.9004, -55.6673, 4.35467, 0.55", "10.378, -57.0634, 4.75213, 0.55", "9.39505, -59.8226, 5.7227, 0.55", "8.60858, -61.9092, 6.68282, 0.55", "7.9601, -63.5795, 7.62939, 0.55", "7.25129, -65.2671, 8.69957, 0.55", "6.64382, -66.6662, 9.65838, 0.28", "6.11275, -67.8082, 10.6061, 0.55", "5.06662, -69.8847, 12.6155, 0.55", "4.341, -71.159, 13.9765, 0.55", "3.92742, -71.8733, 14.731, 0.55", "3.40211, -72.7182, 15.5723, 0.83", "1.84056, -75.2269, 17.8978, 0.28", "1.32707, -76.0574, 18.645, 0.55", "0.451764, -77.5553, 19.9505, 0.28", "0.178667, -78.0165, 20.3865, 0.55", "-0.400147, -79.0973, 21.3956, 0.28", "-0.720212, -79.7124, 21.9247, 0.55", "-1.82633, -81.7263, 23.0952, 0.55", "-3.6907, -87.0678, 28.5035, 0.55", "-5.2314, -92.1372, 34.2641, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.6759, -42.6771, -12.07, 0.55", "-13.9025, -44.0767, -15.3178, 0.55", "-14.8575, -44.4111, -16.2309, 0.55", "-17.2574, -45.2518, -18.4323, 0.55", "-22.5177, -46.9339, -23.0291, 0.28", "-23.3018, -47.1664, -23.6644, 0.55", "-26.5708, -48.2273, -26.1877, 0.55", "-31.0495, -49.6851, -29.2182, 0.55", "-32.7649, -50.1905, -30.3373, 0.28", "-34.2713, -50.5344, -31.2346, 0.28", "-36.8432, -51.0743, -32.4329, 0.55", "-39.9879, -51.5913, -34.0078, 0.28", "-42.9031, -51.8317, -35.5256, 0.55", "-45.163, -51.8407, -36.6585, 0.55", "-46.7249, -51.7236, -37.4857, 0.55", "-51.3243, -51.1835, -40.047, 0.55", "-56.1762, -50.3061, -42.6572, 0.55", "-58.1839, -49.8401, -43.6889, 0.28", "-60.0911, -49.4255, -44.7023, 0.55", "-63.9523, -48.8192, -46.7199, 0.28", "-65.2502, -48.6503, -47.3864, 0.83", "-67.6731, -48.3092, -48.4756, 0.28", "-69.4102, -48.1883, -49.0452, 0.55", "-71.9288, -48.0965, -49.8237, 0.28", "-72.9315, -48.0479, -50.1024, 0.55", "-74.7861, -47.9917, -50.5238, 0.55", "-77.5934, -47.6416, -51.0593, 0.55", "-79.4271, -47.3064, -51.3115, 0.28", "-80.9058, -46.8642, -51.4037, 0.55", "-82.655, -46.1413, -51.5204, 0.28", "-82.944, -46.0009, -51.5489, 0.55", "-85.6386, -44.6458, -52.2469, 0.28", "-87.6064, -43.625, -52.9478, 0.55", "-90.2256, -42.1187, -54.2046, 0.83", "-92.3963, -40.8316, -55.4628, 0.28", "-92.9594, -40.5024, -55.8385, 0.55", "-97.288, -38.0345, -58.94, 0.28", "-98.0484, -37.6137, -59.551, 0.55", "-100.301, -36.2335, -61.4833, 0.28", "-100.882, -35.8785, -61.9859, 0.55", "-102.372, -34.9546, -63.1825, 0.28", "-103.425, -34.2895, -63.969, 0.55", "-105.766, -32.8066, -65.3994, 0.28", "-107.152, -32.0169, -66.1986, 0.55", "-110.104, -30.5042, -67.7562, 0.28", "-110.983, -30.0985, -68.207, 0.55", "-112.357, -29.5616, -68.8661, 0.28", "-113.519, -29.1102, -69.3712, 0.55", "-115.926, -28.2041, -70.2837, 0.28", "-116.649, -27.9467, -70.536, 0.55", "-122.017, -25.937, -72.1743, 0.28", "-123.892, -25.108, -72.5937, 0.55", "-127.225, -23.4787, -73.1387, 0.28", "-128.726, -22.6882, -73.3404, 0.55", "-132.151, -20.9005, -73.6142, 0.28", "-133.403, -20.298, -73.6617, 0.55", "-137.91, -18.5102, -73.5962, 0.28", "-139.786, -17.9924, -73.5506, 0.55", "-142.455, -17.6795, -73.4524, 0.55", "-144.092, -17.5886, -73.3529, 0.55", "-147.402, -17.4891, -72.8975, 0.28", "-150.632, -17.4244, -72.2461, 0.28", "-153.313, -17.361, -71.6253, 0.55", "-156.54, -17.0008, -70.509, 0.28", "-158.102, -16.6201, -69.7401, 0.55", "-161.746, -15.0892, -67.5292, 0.28", "-163.515, -13.9052, -65.9217, 0.55", "-164.585, -12.9354, -64.6045, 0.28", "-165.682, -11.84, -62.7767, 0.55", "-166.984, -10.4005, -60.2706, 0.28", "-167.483, -9.89572, -59.3279, 0.55", "-170.234, -7.65527, -54.871, 0.28", "-171.169, -6.95271, -53.3802, 0.55", "-173.367, -5.40459, -49.7596, 0.28", "-174.563, -4.58454, -47.7932, 0.55", "-175.548, -3.91302, -46.1791, 0.55", "-176.742, -3.12409, -44.2917, 0.28", "-177.421, -2.72479, -43.4449, 0.55", "-179.763, -1.28974, -40.7769, 0.28", "-180.974, -0.357507, -39.3516, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.6759, -42.6771, -12.07, 0.55", "-10.2419, -42.8423, -13.1435, 0.55", "-9.7712, -42.8818, -14.2135, 0.55", "-9.11572, -42.8318, -15.5176, 0.55", "-8.53538, -42.6991, -16.5574, 0.55", "-4.2393, -41.0551, -23.0794, 0.55", "-3.278, -40.5013, -24.5672, 0.55", "-1.88662, -39.5109, -26.8012, 0.55", "-0.907553, -38.7533, -28.3904, 0.55", "0.072538, -37.9186, -29.9125, 0.28", "1.66536, -36.4892, -32.1643, 0.55", "4.17471, -34.243, -35.362, 0.28", "4.34309, -34.1136, -35.7041, 0.55", "4.90104, -33.7399, -38.2339, 0.28", "4.99221, -33.6004, -40.0006, 0.55", "4.91323, -33.5862, -41.9234, 0.55", "4.72387, -33.7351, -45.3757, 0.55", "4.37114, -34.0746, -52.1507, 0.55", "4.21529, -34.3484, -56.703, 0.55", "4.20351, -34.4561, -58.2748, 0.55", "4.37022, -35.078, -68.6037, 0.55", "4.53312, -35.2036, -71.3973, 0.55", "4.74253, -35.2716, -72.9572, 0.55", "5.54916, -35.5116, -76.5491, 0.55", "7.99616, -36.5118, -85.0476, 0.55", "8.75522, -36.8727, -87.3071, 0.28", "9.2865, -37.1334, -88.5598, 0.55", "10.1106, -37.598, -90.4003, 0.28", "10.5078, -37.8668, -91.1295, 0.55", "12.2099, -38.9981, -92.9379, 0.28", "13.9014, -40.4438, -93.3409, 0.55", "14.9285, -41.468, -93.5058, 0.28", "15.89, -42.5912, -93.5274, 0.55", "16.7437, -43.8103, -93.458, 0.28", "17.1097, -44.4387, -93.4376, 0.55", "17.968, -46.0817, -93.3071, 0.28", "18.1773, -46.5742, -93.3425, 0.55", "19.3436, -49.402, -93.7037, 0.28", "19.8976, -50.7141, -94.0462, 0.55", "21.1408, -53.5237, -95.1096, 0.28", "21.6266, -54.5608, -95.6235, 0.55", "23.329, -57.9696, -97.5396, 0.28", "23.7434, -58.7992, -98.0419, 0.55", "24.9688, -61.429, -99.7176, 0.28", "25.2263, -62.0446, -100.058, 0.55", "25.8543, -63.6715, -100.934, 0.28", "26.2149, -64.6175, -101.536, 0.55", "26.5911, -65.5478, -102.206, 0.55", "27.3448, -67.4035, -103.529, 0.28", "27.9001, -68.5533, -104.497, 0.55", "29.7631, -71.4327, -107.656, 0.28", "30.4995, -72.37, -108.942, 0.55", "31.0255, -72.9651, -109.819, 0.28", "31.5769, -73.5086, -110.698, 0.55", "33.334, -75.0313, -113.374, 0.28", "34.6887, -76.2107, -115.351, 0.55", "37.0949, -78.4445, -118.483, 0.28", "37.8562, -79.1395, -119.464, 0.55", "39.3929, -80.4139, -121.19, 0.28", "39.9266, -80.8308, -121.715, 0.55", "40.8631, -81.4936, -122.385, 0.28", "41.7179, -82.0511, -122.899, 0.55", "44.1245, -83.4274, -124.043, 0.28", "46.9077, -84.8867, -125.313, 0.28", "48.3502, -85.5569, -125.856, 0.28", "49.7834, -86.1876, -126.493, 0.55", "51.8819, -87.0089, -127.436, 0.28", "52.822, -87.3592, -127.836, 0.83", "55.2434, -88.2836, -128.761, 0.28", "56.2762, -88.71, -129.22, 0.55", "60.7433, -90.7675, -131.448, 0.28", "62.9209, -91.8277, -132.747, 0.28", "64.4706, -92.6005, -133.8, 0.55", "65.3367, -93.074, -134.522, 0.55", "67.563, -94.3706, -136.638, 0.28", "69.6012, -95.6977, -138.71, 0.55", "71.4517, -96.977, -140.594, 0.28", "73.085, -98.1658, -142.399, 0.55", "74.4405, -99.1279, -143.884, 0.28", "75.585, -99.8132, -145.031, 0.55", "78.417, -101.274, -147.659, 0.28", "79.8779, -102.01, -148.925, 0.55", "82.1051, -103.122, -150.736, 0.28", "83.9495, -103.969, -152.173, 0.55", "88.2802, -105.736, -155.553, 0.28", "90.0052, -106.344, -157.062, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "13.8715, -129.161, 91.824, 0.55", "14.873, -136.479, 94.941, 0.55", "16.0531, -144.324, 96.1009, 0.55", "17.1199, -151.918, 98.4394, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.8715, -129.161, 91.824, 0.55", "16.2437, -136.743, 96.6719, 0.55", "17.7841, -143.276, 103.119, 0.55", "19.6902, -148.308, 110.712, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.9808, -129.605, 92.9531, 0.55", "12.5846, -138.423, 97.6455, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.9808, -129.605, 92.9531, 0.55", "10.8883, -138.628, 98.3377, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.64527, -111.858, 2.74006, 0.83", "10.3895, -115.015, 3.31495, 0.83", "11.0427, -117.682, 4.02979, 0.83", "11.692, -120.333, 4.74035, 0.83", "12.3086, -122.851, 5.41515, 0.83", "13.2589, -126.731, 6.45506, 0.83", "14.2023, -130.584, 7.48746, 0.83", "14.8703, -133.145, 8.55547, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "9.64527, -111.858, 2.74006, 0.55", "11.2356, -113.916, 2.40894, 0.55", "12.4024, -115.52, 1.87191, 0.55", "13.1864, -116.708, 1.36646, 0.55", "13.8555, -118.109, 0.637849, 0.83", "14.4703, -119.703, -0.364304, 0.55", "15.0718, -121.263, -1.34454, 0.83", "15.596, -122.957, -2.54692, 0.55", "15.8797, -123.939, -3.33651, 0.83", "16.6127, -127.12, -6.11544, 0.55", "16.9484, -129.626, -8.41395, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.2314, -92.1372, 34.2641, 0.55", "-7.2904, -98.8677, 40.171, 0.55", "-10.1246, -104.523, 46.8355, 0.55", "-13.1316, -109.258, 54.1131, 0.55", "-16.4947, -112.823, 61.8855, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.2314, -92.1372, 34.2641, 0.55", "-7.90175, -98.3804, 39.2853, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.8703, -133.145, 8.55547, 0.55", "14.9055, -134.472, 8.84143, 0.55", "14.9715, -136.165, 9.26502, 0.55", "15.0384, -137.764, 9.65744, 0.55", "15.0823, -138.899, 9.91519, 0.55", "15.1549, -140.925, 10.3372, 0.55", "15.5009, -146.604, 11.4352, 0.55", "15.6972, -148.522, 11.756, 0.55", "15.8712, -149.87, 11.9242, 0.55", "16.1377, -151.399, 12.0122, 0.55", "16.374, -152.574, 11.9768, 0.55", "17.0524, -155.306, 11.8298, 0.55", "17.503, -157.386, 11.6818, 0.55", "17.8136, -158.752, 11.6382, 0.55", "18.5238, -162.308, 11.6839, 0.55", "18.9389, -164.709, 11.8033, 0.55", "19.408, -167.816, 12.1207, 0.55", "19.8579, -171.36, 12.7453, 0.55", "20.1873, -173.73, 13.3413, 0.55", "20.3952, -175.131, 13.7423, 0.55", "20.5673, -176.424, 14.0978, 0.55", "20.8445, -178.053, 14.4918, 0.55", "21.591, -181.964, 15.1823, 0.55", "21.9513, -183.469, 15.4223, 0.55", "22.3216, -185.148, 15.661, 0.55", "22.8649, -187.668, 15.998, 0.55", "23.1928, -189.614, 16.2327, 0.55", "23.4189, -191.469, 16.3853, 0.55", "23.5638, -193.243, 16.4954, 0.55", "23.6675, -194.978, 16.612, 0.55", "23.7535, -196.211, 16.6873, 0.55", "23.9369, -198.223, 16.754, 0.55", "24.2105, -200.626, 16.6539, 0.55", "24.4108, -201.784, 16.5399, 0.55", "24.6324, -202.795, 16.3749, 0.55", "25.1834, -204.685, 16.0007, 0.55", "25.5372, -205.882, 15.7268, 0.55", "25.9623, -207.36, 15.4488, 0.55", "26.1952, -208.407, 15.2931, 0.55", "26.7061, -211.141, 14.9632, 0.55", "26.9745, -213.204, 14.8266, 0.55", "27.2211, -216.421, 14.8271, 0.55", "27.3307, -218.51, 15.0237, 0.55", "27.3981, -220.71, 15.286, 0.28", "27.3892, -221.598, 15.4138, 0.28", "27.27, -223.77, 15.8924, 0.28", "27.0719, -225.791, 16.4661, 0.28", "26.9012, -228.465, 17.5744, 0.28", "27.8864, -234.309, 19.0805, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "14.8703, -133.145, 8.55547, 0.55", "15.4342, -133.46, 9.34684, 0.55", "16.5082, -134.278, 11.0608, 0.55", "17.3941, -135.089, 12.5831, 0.28", "18.3108, -136.015, 14.2498, 0.55", "18.7627, -136.617, 15.3513, 0.28", "19.4246, -137.713, 17.3741, 0.55", "19.5461, -138.306, 18.36, 0.28", "19.5508, -138.525, 18.7503, 0.28", "19.5496, -138.843, 19.432, 0.55", "19.6604, -139.889, 22.0033, 0.28", "19.734, -140.298, 23.0789, 0.55", "20.202, -141.463, 26.1545, 0.28", "20.5371, -142.033, 27.7663, 0.28", "21.0421, -142.755, 29.7113, 0.55", "21.9835, -143.854, 32.4636, 0.28", "22.1413, -143.997, 32.8126, 0.55", "23.0104, -144.683, 34.4564, 0.28", "23.1028, -144.745, 34.5943, 0.55", "23.8995, -145.489, 35.8309, 0.28", "24.2515, -145.898, 36.4435, 0.55", "27.0846, -148.929, 41.5291, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.4947, -112.823, 61.8855, 0.55", "-17.306, -117.476, 72.3171, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.4947, -112.823, 61.8855, 0.55", "-22.1731, -121.112, 69.9315, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_BP_15aa299646_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.11376, 8.31233, 2.84766, 0.83 ) }
    dend_43 { pt3dadd( -5.99614, 10.5464, 3.28236, 1.11 ) }
    dend_43 { pt3dadd( -7.69561, 11.8628, 3.50848, 0.83 ) }
    dend_43 { pt3dadd( -9.34671, 13.1306, 3.71109, 0.83 ) }
    dend_43 { pt3dadd( -10.3243, 13.8535, 3.82211, 1.11 ) }
    dend_43 { pt3dadd( -13.3856, 16.1125, 4.17794, 1.11 ) }
    dend_43 { pt3dadd( -18.8611, 19.98, 4.80693, 0.83 ) }
    dend_43 { pt3dadd( -20.8337, 21.3203, 5.01464, 0.83 ) }
    dend_43 { pt3dadd( -22.3958, 22.35, 5.14366, 0.83 ) }
    dend_43 { pt3dadd( -23.9191, 23.3706, 5.25533, 0.83 ) }
    dend_43 { pt3dadd( -25.1591, 24.2117, 5.31559, 0.55 ) }
    dend_43 { pt3dadd( -26.0911, 24.7813, 5.37674, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.25639, 6.09277, -6.12325, 0.55 ) }
    dend_28 { pt3dadd( 6.43052, 6.56308, -6.60877, 0.55 ) }
    dend_28 { pt3dadd( 7.69209, 6.6818, -7.25122, 0.83 ) }
    dend_28 { pt3dadd( 9.68877, 6.80815, -8.44461, 0.55 ) }
    dend_28 { pt3dadd( 10.6526, 6.86913, -9.02069, 1.38 ) }
    dend_28 { pt3dadd( 13.0224, 7.01909, -10.4371, 0.55 ) }
    dend_28 { pt3dadd( 14.0317, 6.96831, -11.1129, 0.83 ) }
    dend_28 { pt3dadd( 19.2529, 6.03703, -14.9102, 0.55 ) }
    dend_28 { pt3dadd( 19.758, 5.9118, -15.328, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.681767, -10.2793, 3.15803, 1.11 ) }
    dend_1 { pt3dadd( -0.725623, -14.1487, 4.54523, 1.11 ) }
    dend_1 { pt3dadd( -0.743484, -15.7246, 5.11018, 0.83 ) }
    dend_1 { pt3dadd( -0.767213, -17.8183, 5.86076, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.07027, 10.3538, -1.45365, 1.11 ) }
    dend_0 { pt3dadd( 1.35896, 12.7826, -1.4716, 1.11 ) }
    dend_0 { pt3dadd( 1.86253, 16.7431, -1.35857, 1.38 ) }
    dend_0 { pt3dadd( 1.89541, 16.9634, -1.3496, 1.38 ) }
    dend_0 { pt3dadd( 2.46812, 19.6753, -1.26055, 0.83 ) }
    dend_0 { pt3dadd( 3.23151, 22.5312, -1.05251, 0.83 ) }
    dend_0 { pt3dadd( 4.47671, 25.7268, -0.520383, 0.83 ) }
    dend_0 { pt3dadd( 5.14062, 26.9244, -0.217339, 0.83 ) }
    dend_0 { pt3dadd( 5.76328, 27.7808, 0.0534752, 1.11 ) }
    dend_0 { pt3dadd( 7.50898, 29.8492, 0.706402, 0.55 ) }
    dend_0 { pt3dadd( 9.53075, 31.993, 1.49953, 0.83 ) }
    dend_0 { pt3dadd( 12.0639, 34.1631, 2.3196, 0.55 ) }
    dend_0 { pt3dadd( 13.3144, 35.0493, 2.65701, 0.83 ) }
    dend_0 { pt3dadd( 15.0923, 36.2431, 3.23425, 0.55 ) }
    dend_0 { pt3dadd( 17.3346, 37.7634, 4.06626, 0.55 ) }
    dend_0 { pt3dadd( 20.5362, 40.0647, 5.40834, 0.55 ) }
    dend_0 { pt3dadd( 24.0735, 42.7045, 6.89166, 0.55 ) }
    dend_0 { pt3dadd( 26.3929, 44.4164, 8.09735, 0.55 ) }
    dend_0 { pt3dadd( 29.3415, 46.5804, 9.898, 0.55 ) }
    dend_0 { pt3dadd( 29.9676, 47.0118, 10.3189, 0.83 ) }
    dend_0 { pt3dadd( 31.6521, 48.1498, 11.5307, 0.55 ) }
    dend_0 { pt3dadd( 33.0364, 49.0314, 12.462, 0.83 ) }
    dend_0 { pt3dadd( 36.2814, 51.4808, 14.6903, 0.55 ) }
    dend_0 { pt3dadd( 37.4244, 52.3781, 15.2829, 0.83 ) }
    dend_0 { pt3dadd( 38.4114, 53.0281, 15.6184, 0.55 ) }
    dend_0 { pt3dadd( 39.3431, 53.5811, 15.8213, 0.83 ) }
    dend_0 { pt3dadd( 41.3367, 54.589, 16.0919, 0.83 ) }
    dend_0 { pt3dadd( 43.9141, 55.9713, 16.2504, 0.83 ) }
    dend_0 { pt3dadd( 45.4543, 56.8973, 16.1991, 0.55 ) }
    dend_0 { pt3dadd( 46.6387, 57.7101, 16.1657, 0.55 ) }
    dend_0 { pt3dadd( 49.7278, 59.8077, 16.037, 0.83 ) }
    dend_0 { pt3dadd( 51.6997, 61.1535, 15.8825, 0.55 ) }
    dend_0 { pt3dadd( 54.653, 63.1196, 15.539, 0.55 ) }
    dend_0 { pt3dadd( 57.3151, 64.7535, 15.1262, 0.55 ) }
    dend_0 { pt3dadd( 59.6711, 66.1296, 14.6981, 0.55 ) }
    dend_0 { pt3dadd( 62.5977, 67.7287, 14.0315, 0.55 ) }
    dend_0 { pt3dadd( 64.3524, 68.4872, 13.5695, 0.55 ) }
    dend_0 { pt3dadd( 65.4977, 68.9009, 13.1169, 0.55 ) }
    dend_0 { pt3dadd( 66.9561, 69.1629, 12.3874, 0.55 ) }
    dend_0 { pt3dadd( 69.0443, 69.1725, 11.1136, 0.55 ) }
    dend_0 { pt3dadd( 70.3148, 68.9922, 10.2651, 0.55 ) }
    dend_0 { pt3dadd( 72.2134, 68.6671, 9.16991, 0.55 ) }
    dend_0 { pt3dadd( 75.9525, 68.1706, 7.4347, 0.55 ) }
    dend_0 { pt3dadd( 78.9681, 67.9252, 6.29244, 0.55 ) }
    dend_0 { pt3dadd( 82.239, 67.8233, 5.27658, 0.55 ) }
    dend_0 { pt3dadd( 84.395, 67.8293, 4.79054, 0.55 ) }
    dend_0 { pt3dadd( 90.1499, 68.3523, 3.88549, 0.55 ) }
    dend_0 { pt3dadd( 93.6522, 68.9158, 3.5923, 0.55 ) }
    dend_0 { pt3dadd( 96.3634, 69.4989, 3.59859, 0.55 ) }
    dend_0 { pt3dadd( 98.0482, 70.1071, 3.65923, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 100.017, 71.0527, 3.72095, 0.55 ) }
    dend_0 { pt3dadd( 103.289, 72.9634, 3.56771, 0.55 ) }
    dend_0 { pt3dadd( 104.011, 73.4282, 3.44097, 0.55 ) }
    dend_0 { pt3dadd( 106.037, 74.6638, 2.9522, 0.55 ) }
    dend_0 { pt3dadd( 107.912, 76.0017, 2.49632, 0.83 ) }
    dend_0 { pt3dadd( 108.932, 76.7454, 2.23242, 0.55 ) }
    dend_0 { pt3dadd( 110.453, 78.0394, 1.78047, 0.83 ) }
    dend_0 { pt3dadd( 119.109, 84.9135, 1.3793, 0.83 ) }
    dend_0 { pt3dadd( 126.625, 92.9814, 0.511565, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -26.0911, 24.7813, 5.37674, 0.55 ) }
    dend_55 { pt3dadd( -28.003, 25.7291, 4.4383, 0.55 ) }
    dend_55 { pt3dadd( -30.0819, 26.7598, 3.41783, 0.55 ) }
    dend_55 { pt3dadd( -32.5906, 28.0036, 2.18635, 0.55 ) }
    dend_55 { pt3dadd( -34.6622, 29.0307, 1.16949, 0.83 ) }
    dend_55 { pt3dadd( -36.3982, 29.8914, 0.317358, 0.55 ) }
    dend_55 { pt3dadd( -39.6204, 31.4889, -1.26433, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -26.0911, 24.7813, 5.37674, 0.55 ) }
    dend_44 { pt3dadd( -28.6306, 25.2945, 4.98498, 0.55 ) }
    dend_44 { pt3dadd( -31.3453, 25.7414, 4.83489, 0.55 ) }
    dend_44 { pt3dadd( -34.4268, 26.2391, 4.73978, 0.55 ) }
    dend_44 { pt3dadd( -38.9079, 26.8903, 5.01026, 0.55 ) }
    dend_44 { pt3dadd( -42.67, 27.3125, 5.49748, 0.55 ) }
    dend_44 { pt3dadd( -46.6233, 27.6859, 6.17345, 0.55 ) }
    dend_44 { pt3dadd( -50.4643, 27.7682, 7.22413, 0.55 ) }
    dend_44 { pt3dadd( -53.7865, 27.5036, 8.43015, 0.55 ) }
    dend_44 { pt3dadd( -57.947, 26.865, 10.3573, 0.55 ) }
    dend_44 { pt3dadd( -59.7676, 26.4441, 11.4369, 0.55 ) }
    dend_44 { pt3dadd( -61.7378, 25.9646, 12.6851, 0.55 ) }
    dend_44 { pt3dadd( -65.2082, 24.8701, 14.7198, 0.55 ) }
    dend_44 { pt3dadd( -67.0429, 24.308, 15.5183, 0.55 ) }
    dend_44 { pt3dadd( -68.9644, 23.6618, 16.3407, 0.55 ) }
    dend_44 { pt3dadd( -71.2397, 22.9337, 17.092, 0.55 ) }
    dend_44 { pt3dadd( -73.7091, 22.1967, 17.8441, 0.55 ) }
    dend_44 { pt3dadd( -77.2301, 21.1402, 18.841, 0.55 ) }
    dend_44 { pt3dadd( -81.913, 20.0619, 19.7699, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.758, 5.9118, -15.328, 0.55 ) }
    dend_34 { pt3dadd( 25.0465, 7.11721, -16.4456, 0.55 ) }
    dend_34 { pt3dadd( 28.0799, 7.67188, -17.5309, 0.55 ) }
    dend_34 { pt3dadd( 31.0665, 8.08914, -18.6574, 0.55 ) }
    dend_34 { pt3dadd( 33.1032, 8.29275, -19.4336, 0.55 ) }
    dend_34 { pt3dadd( 36.0768, 8.51919, -20.5514, 0.55 ) }
    dend_34 { pt3dadd( 42.2368, 8.8864, -23.0739, 0.55 ) }
    dend_34 { pt3dadd( 49.2161, 9.29974, -26.4076, 0.55 ) }
    dend_34 { pt3dadd( 52.5866, 9.30843, -28.2788, 0.55 ) }
    dend_34 { pt3dadd( 54.3878, 9.27875, -29.4047, 0.55 ) }
    dend_34 { pt3dadd( 56.3621, 9.26305, -30.7196, 0.55 ) }
    dend_34 { pt3dadd( 59.8805, 9.13423, -33.0608, 0.55 ) }
    dend_34 { pt3dadd( 61.1538, 9.01513, -33.961, 0.55 ) }
    dend_34 { pt3dadd( 66.5452, 8.6853, -38.1837, 0.55 ) }
    dend_34 { pt3dadd( 70.3601, 8.53935, -41.4549, 0.55 ) }
    dend_34 { pt3dadd( 72.5577, 8.50425, -43.3959, 0.55 ) }
    dend_34 { pt3dadd( 74.7486, 8.4494, -45.3319, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 19.758, 5.9118, -15.328, 0.83 ) }
    dend_29 { pt3dadd( 21.8326, 7.50068, -15.4848, 0.83 ) }
    dend_29 { pt3dadd( 23.0209, 8.40038, -15.6324, 0.55 ) }
    dend_29 { pt3dadd( 24.7722, 9.74564, -16.0142, 0.83 ) }
    dend_29 { pt3dadd( 25.9479, 10.6774, -16.3132, 0.55 ) }
    dend_29 { pt3dadd( 27.5634, 12.0118, -16.706, 0.83 ) }
    dend_29 { pt3dadd( 29.4986, 13.6668, -17.1066, 0.55 ) }
    dend_29 { pt3dadd( 30.4787, 14.4278, -17.2546, 0.55 ) }
    dend_29 { pt3dadd( 32.7617, 15.874, -17.3818, 0.83 ) }
    dend_29 { pt3dadd( 34.8504, 16.9601, -17.1774, 0.55 ) }
    dend_29 { pt3dadd( 36.0145, 17.5695, -16.9439, 0.83 ) }
    dend_29 { pt3dadd( 37.7489, 18.5486, -16.4049, 0.55 ) }
    dend_29 { pt3dadd( 40.2211, 20.045, -15.2982, 0.55 ) }
    dend_29 { pt3dadd( 43.6661, 21.9587, -13.5478, 0.55 ) }
    dend_29 { pt3dadd( 46.9542, 23.6891, -11.6197, 0.55 ) }
    dend_29 { pt3dadd( 49.5602, 25.0369, -10.0383, 0.55 ) }
    dend_29 { pt3dadd( 53.8531, 27.2831, -7.40998, 0.55 ) }
    dend_29 { pt3dadd( 56.9807, 29.0316, -5.42575, 0.55 ) }
    dend_29 { pt3dadd( 58.8477, 30.2653, -4.17529, 0.55 ) }
    dend_29 { pt3dadd( 62.2435, 32.9211, -1.88733, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.767213, -17.8183, 5.86076, 0.83 ) }
    dend_11 { pt3dadd( -0.955611, -21.8832, 5.68673, 0.83 ) }
    dend_11 { pt3dadd( -1.13917, -25.8435, 5.51717, 0.83 ) }
    dend_11 { pt3dadd( -1.3441, -30.2652, 5.32787, 0.83 ) }
    dend_11 { pt3dadd( -1.45112, -32.5742, 5.22901, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.767213, -17.8183, 5.86076, 0.55 ) }
    dend_2 { pt3dadd( 0.0766244, -19.7575, 6.72043, 0.55 ) }
    dend_2 { pt3dadd( 0.957978, -22.1048, 7.95751, 0.55 ) }
    dend_2 { pt3dadd( 1.77422, -25.122, 9.87971, 0.55 ) }
    dend_2 { pt3dadd( 2.03541, -26.2849, 10.6894, 0.83 ) }
    dend_2 { pt3dadd( 2.61493, -29.2316, 13.1672, 0.55 ) }
    dend_2 { pt3dadd( 2.81934, -30.7369, 14.5265, 0.55 ) }
    dend_2 { pt3dadd( 3.21722, -33.6618, 17.3068, 0.83 ) }
    dend_2 { pt3dadd( 3.46392, -35.823, 19.5486, 0.55 ) }
    dend_2 { pt3dadd( 3.51648, -37.5809, 21.4437, 0.55 ) }
    dend_2 { pt3dadd( 3.52247, -40.8957, 25.0122, 0.55 ) }
    dend_2 { pt3dadd( 3.51575, -43.5364, 27.8272, 0.55 ) }
    dend_2 { pt3dadd( 3.56203, -45.6614, 30.0912, 0.55 ) }
    dend_2 { pt3dadd( 3.68989, -47.9322, 32.3748, 0.28 ) }
    dend_2 { pt3dadd( 3.79726, -48.8878, 33.2579, 0.55 ) }
    dend_2 { pt3dadd( 3.99167, -50.6542, 34.7797, 0.28 ) }
    dend_2 { pt3dadd( 4.43482, -53.4432, 36.6099, 0.55 ) }
    dend_2 { pt3dadd( 4.19766, -62.4252, 44.1162, 0.55 ) }
    dend_2 { pt3dadd( 4.18328, -70.7345, 52.3643, 0.55 ) }
    dend_2 { pt3dadd( 5.51151, -77.7342, 61.6551, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.6204, 31.4889, -1.26433, 0.55 ) }
    dend_61 { pt3dadd( -42.2922, 31.4166, -0.29727, 0.55 ) }
    dend_61 { pt3dadd( -43.4314, 31.3018, 0.223728, 0.83 ) }
    dend_61 { pt3dadd( -44.7832, 31.0713, 0.979413, 0.55 ) }
    dend_61 { pt3dadd( -45.8292, 30.8758, 1.64094, 0.83 ) }
    dend_61 { pt3dadd( -48.5709, 30.4544, 3.37195, 0.55 ) }
    dend_61 { pt3dadd( -49.6107, 30.3085, 4.03791, 0.28 ) }
    dend_61 { pt3dadd( -51.3628, 30.0532, 5.28058, 0.55 ) }
    dend_61 { pt3dadd( -53.713, 29.725, 6.94104, 0.55 ) }
    dend_61 { pt3dadd( -55.4878, 29.4923, 8.13062, 0.55 ) }
    dend_61 { pt3dadd( -57.8494, 29.1959, 9.6534, 0.28 ) }
    dend_61 { pt3dadd( -58.4544, 29.1377, 9.9849, 0.55 ) }
    dend_61 { pt3dadd( -59.7012, 29.0398, 10.6318, 0.28 ) }
    dend_61 { pt3dadd( -60.5389, 29.0093, 11.0042, 0.55 ) }
    dend_61 { pt3dadd( -62.2303, 28.9663, 11.628, 0.28 ) }
    dend_61 { pt3dadd( -63.2146, 28.9013, 11.9359, 0.55 ) }
    dend_61 { pt3dadd( -64.948, 28.6661, 12.4667, 0.28 ) }
    dend_61 { pt3dadd( -66.1067, 28.5095, 12.7839, 0.55 ) }
    dend_61 { pt3dadd( -73.5431, 26.3724, 17.5156, 0.55 ) }
    dend_61 { pt3dadd( -80.428, 23.3132, 22.5648, 0.55 ) }
    dend_61 { pt3dadd( -87.0355, 19.4373, 27.4202, 0.55 ) }
    dend_61 { pt3dadd( -93.5002, 14.6547, 31.6145, 0.55 ) }
    dend_61 { pt3dadd( -99.1374, 10.0153, 36.9954, 0.55 ) }
    dend_61 { pt3dadd( -105.395, 5.77169, 42.0035, 0.55 ) }
    dend_61 { pt3dadd( -111.871, 2.87776, 47.6558, 0.55 ) }
    dend_61 { pt3dadd( -118.267, -0.677896, 53.0135, 0.55 ) }
    dend_61 { pt3dadd( -124.563, -3.7115, 58.7939, 0.55 ) }
    dend_61 { pt3dadd( -130.482, -6.92998, 64.865, 0.55 ) }
    dend_61 { pt3dadd( -135.523, -11.1901, 71.0856, 0.55 ) }
    dend_61 { pt3dadd( -140.709, -14.6804, 77.6572, 0.55 ) }
    dend_61 { pt3dadd( -145.926, -18.9726, 83.7083, 0.55 ) }
    dend_61 { pt3dadd( -150.147, -23.713, 90.1866, 0.55 ) }
    dend_61 { pt3dadd( -153.006, -27.9986, 97.6507, 0.55 ) }
    dend_61 { pt3dadd( -155.648, -33.7434, 104.152, 0.55 ) }
    dend_61 { pt3dadd( -157.019, -39.6621, 110.886, 0.55 ) }
    dend_61 { pt3dadd( -158.902, -45.2533, 117.774, 0.55 ) }
    dend_61 { pt3dadd( -161.783, -50.2459, 124.777, 0.55 ) }
    dend_61 { pt3dadd( -166.537, -53.8326, 131.617, 0.55 ) }
    dend_61 { pt3dadd( -170.485, -58.3966, 138.387, 0.55 ) }
    dend_61 { pt3dadd( -172.947, -61.6751, 146.477, 0.55 ) }
    dend_61 { pt3dadd( -176.82, -64.2549, 154.262, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -39.6204, 31.4889, -1.26433, 0.55 ) }
    dend_56 { pt3dadd( -40.6264, 32.4637, -2.90495, 0.55 ) }
    dend_56 { pt3dadd( -41.2956, 33.5409, -4.63827, 0.55 ) }
    dend_56 { pt3dadd( -41.8834, 34.7953, -6.4177, 0.55 ) }
    dend_56 { pt3dadd( -42.2515, 35.5808, -7.53197, 0.55 ) }
    dend_56 { pt3dadd( -42.9229, 37.0137, -9.56451, 0.83 ) }
    dend_56 { pt3dadd( -43.4141, 38.062, -11.0515, 0.55 ) }
    dend_56 { pt3dadd( -43.8773, 39.5304, -13.1992, 0.83 ) }
    dend_56 { pt3dadd( -43.9658, 40.4595, -14.3423, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -81.913, 20.0619, 19.7699, 0.28 ) }
    dend_48 { pt3dadd( -83.1755, 17.9969, 18.8539, 0.28 ) }
    dend_48 { pt3dadd( -83.772, 17.1261, 18.3761, 0.28 ) }
    dend_48 { pt3dadd( -84.5458, 15.901, 17.6565, 0.55 ) }
    dend_48 { pt3dadd( -85.1852, 14.8203, 17.0371, 0.28 ) }
    dend_48 { pt3dadd( -86.1305, 13.1685, 16.1182, 0.55 ) }
    dend_48 { pt3dadd( -88.7692, 8.29165, 13.5145, 0.28 ) }
    dend_48 { pt3dadd( -89.6217, 6.60535, 12.4595, 0.55 ) }
    dend_48 { pt3dadd( -90.9074, 4.02488, 10.7408, 0.28 ) }
    dend_48 { pt3dadd( -91.6411, 2.49394, 9.63887, 0.55 ) }
    dend_48 { pt3dadd( -92.146, 1.44405, 8.85125, 0.28 ) }
    dend_48 { pt3dadd( -92.7223, 0.236884, 7.95853, 0.55 ) }
    dend_48 { pt3dadd( -94.4703, -3.8196, 5.10275, 0.28 ) }
    dend_48 { pt3dadd( -95.0169, -5.03711, 4.18957, 0.55 ) }
    dend_48 { pt3dadd( -95.9598, -6.85477, 2.57042, 0.28 ) }
    dend_48 { pt3dadd( -96.732, -7.98989, 1.40458, 0.28 ) }
    dend_48 { pt3dadd( -97.4277, -8.7336, 0.578083, 0.55 ) }
    dend_48 { pt3dadd( -99.8674, -10.8103, -1.71201, 0.28 ) }
    dend_48 { pt3dadd( -101.005, -11.6477, -2.63021, 0.55 ) }
    dend_48 { pt3dadd( -103.782, -13.5193, -4.88079, 0.28 ) }
    dend_48 { pt3dadd( -106.561, -15.151, -6.95, 0.28 ) }
    dend_48 { pt3dadd( -109.584, -16.671, -9.05656, 0.28 ) }
    dend_48 { pt3dadd( -110.971, -17.2301, -9.87884, 0.55 ) }
    dend_48 { pt3dadd( -117.701, -24.302, -15.899, 0.55 ) }
    dend_48 { pt3dadd( -125.339, -31.845, -19.9368, 0.55 ) }
    dend_48 { pt3dadd( -132.696, -38.6439, -25.5217, 0.55 ) }
    dend_48 { pt3dadd( -140.156, -44.5577, -31.9177, 0.55 ) }
    dend_48 { pt3dadd( -147.623, -49.4799, -39.0981, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -81.913, 20.0619, 19.7699, 0.55 ) }
    dend_45 { pt3dadd( -82.8422, 19.9781, 19.889, 0.55 ) }
    dend_45 { pt3dadd( -85.4668, 19.7666, 20.5646, 0.55 ) }
    dend_45 { pt3dadd( -86.4534, 19.6652, 20.8727, 0.55 ) }
    dend_45 { pt3dadd( -88.7731, 19.3589, 21.6373, 0.55 ) }
    dend_45 { pt3dadd( -92.339, 18.9131, 22.6385, 0.55 ) }
    dend_45 { pt3dadd( -94.1925, 18.7362, 23.1222, 0.28 ) }
    dend_45 { pt3dadd( -97.0754, 18.3946, 23.8225, 0.55 ) }
    dend_45 { pt3dadd( -99.2149, 18.0921, 24.2685, 0.55 ) }
    dend_45 { pt3dadd( -100.118, 17.9584, 24.4592, 0.28 ) }
    dend_45 { pt3dadd( -105.537, 17.1536, 25.5958, 0.55 ) }
    dend_45 { pt3dadd( -108.066, 16.6507, 25.9797, 0.28 ) }
    dend_45 { pt3dadd( -111.476, 15.9464, 26.2981, 0.28 ) }
    dend_45 { pt3dadd( -114.414, 15.3713, 26.3972, 0.55 ) }
    dend_45 { pt3dadd( -125.928, 14.9708, 29.1719, 0.55 ) }
    dend_45 { pt3dadd( -137.057, 14.3589, 33.1962, 0.55 ) }
    dend_45 { pt3dadd( -147.54, 12.6297, 38.4428, 0.55 ) }
    dend_45 { pt3dadd( -157.748, 12.9459, 44.4528, 0.55 ) }
    dend_45 { pt3dadd( -166.492, 13.0165, 52.4514, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -173.545, 13.8597, 61.9363, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 74.7486, 8.4494, -45.3319, 0.55 ) }
    dend_42 { pt3dadd( 80.2116, 10.1245, -49.9021, 0.55 ) }
    dend_42 { pt3dadd( 81.9345, 10.5788, -51.4584, 0.55 ) }
    dend_42 { pt3dadd( 84.0897, 11.0743, -53.3815, 0.55 ) }
    dend_42 { pt3dadd( 87.995, 11.9424, -57.1061, 0.55 ) }
    dend_42 { pt3dadd( 92.0652, 12.6776, -61.0997, 0.55 ) }
    dend_42 { pt3dadd( 94.0527, 12.8721, -63.0037, 0.83 ) }
    dend_42 { pt3dadd( 95.6836, 12.9179, -64.7, 0.55 ) }
    dend_42 { pt3dadd( 96.8986, 12.8496, -66.0978, 0.83 ) }
    dend_42 { pt3dadd( 99.8128, 12.2608, -69.6849, 0.55 ) }
    dend_42 { pt3dadd( 102.207, 11.5406, -72.6602, 0.55 ) }
    dend_42 { pt3dadd( 104.964, 10.69, -75.9402, 0.55 ) }
    dend_42 { pt3dadd( 108.033, 9.83687, -79.6561, 0.55 ) }
    dend_42 { pt3dadd( 110.09, 9.21429, -82.203, 0.55 ) }
    dend_42 { pt3dadd( 112.408, 8.50569, -85.1541, 0.55 ) }
    dend_42 { pt3dadd( 114.41, 7.9709, -87.8501, 0.55 ) }
    dend_42 { pt3dadd( 115.669, 7.75949, -89.7203, 0.55 ) }
    dend_42 { pt3dadd( 117.232, 7.42868, -93.4642, 0.55 ) }
    dend_42 { pt3dadd( 118.075, 7.15296, -95.8041, 0.55 ) }
    dend_42 { pt3dadd( 118.771, 6.66331, -98.9063, 0.55 ) }
    dend_42 { pt3dadd( 119.696, 5.68477, -104.148, 0.55 ) }
    dend_42 { pt3dadd( 119.881, 5.42052, -105.329, 0.28 ) }
    dend_42 { pt3dadd( 122.293, 2.04423, -119.701, 0.28 ) }
    dend_42 { pt3dadd( 123.126, 1.07893, -123.921, 0.83 ) }
    dend_42 { pt3dadd( 126.447, -2.61937, -138.9, 0.83 ) }
    dend_42 { pt3dadd( 128.167, -4.61813, -145.863, 0.83 ) }
    dend_42 { pt3dadd( 129.007, -5.54519, -148.686, 0.55 ) }
    dend_42 { pt3dadd( 129.985, -6.4652, -151.441, 0.55 ) }
    dend_42 { pt3dadd( 132.762, -8.31602, -156.562, 0.55 ) }
    dend_42 { pt3dadd( 135.765, -10.0037, -161.07, 0.28 ) }
    dend_42 { pt3dadd( 136.7, -10.337, -161.348, 0.55 ) }
    dend_42 { pt3dadd( 138.778, -10.9339, -161.207, 0.28 ) }
    dend_42 { pt3dadd( 140.071, -11.2132, -160.93, 0.55 ) }
    dend_42 { pt3dadd( 141.419, -11.5241, -160.526, 0.28 ) }
    dend_42 { pt3dadd( 143.041, -11.8169, -159.966, 0.55 ) }
    dend_42 { pt3dadd( 145.467, -12.1224, -159.385, 0.28 ) }
    dend_42 { pt3dadd( 147.411, -12.4269, -158.983, 0.55 ) }
    dend_42 { pt3dadd( 149.564, -12.6177, -158.709, 0.28 ) }
    dend_42 { pt3dadd( 152.485, -12.8634, -158.597, 0.55 ) }
    dend_42 { pt3dadd( 155.76, -13.0598, -158.668, 0.55 ) }
    dend_42 { pt3dadd( 158.637, -13.1953, -158.923, 0.28 ) }
    dend_42 { pt3dadd( 162.614, -13.3429, -159.496, 0.55 ) }
    dend_42 { pt3dadd( 169.482, -13.3959, -161.222, 0.55 ) }
    dend_42 { pt3dadd( 172.513, -13.2551, -162.352, 0.55 ) }
    dend_42 { pt3dadd( 173.815, -13.1377, -162.978, 0.83 ) }
    dend_42 { pt3dadd( 176.29, -12.8929, -164.402, 0.55 ) }
    dend_42 { pt3dadd( 178.007, -12.6506, -165.498, 0.83 ) }
    dend_42 { pt3dadd( 182.63, -11.8743, -168.498, 0.55 ) }
    dend_42 { pt3dadd( 185.446, -11.5971, -170.407, 0.28 ) }
    dend_42 { pt3dadd( 186.633, -11.5575, -171.076, 0.55 ) }
    dend_42 { pt3dadd( 189.882, -11.7604, -172.547, 0.28 ) }
    dend_42 { pt3dadd( 191.019, -11.9391, -172.987, 0.55 ) }
    dend_42 { pt3dadd( 193.366, -12.4618, -173.529, 0.28 ) }
    dend_42 { pt3dadd( 195.757, -13.2354, -173.664, 0.55 ) }
    dend_42 { pt3dadd( 200.597, -15.0725, -173.081, 0.28 ) }
    dend_42 { pt3dadd( 202.831, -16.0224, -172.572, 0.55 ) }
    dend_42 { pt3dadd( 206.151, -17.6304, -171.64, 0.28 ) }
    dend_42 { pt3dadd( 210.35, -19.6473, -170.31, 0.55 ) }
    dend_42 { pt3dadd( 213.388, -21.0644, -169.298, 0.55 ) }
    dend_42 { pt3dadd( 218.657, -23.3537, -167.457, 0.28 ) }
    dend_42 { pt3dadd( 220.818, -24.1899, -166.879, 0.55 ) }
    dend_42 { pt3dadd( 224.541, -25.4113, -166.294, 0.28 ) }
    dend_42 { pt3dadd( 228.254, -26.3381, -165.968, 0.55 ) }
    dend_42 { pt3dadd( 230.29, -26.6099, -166.073, 0.28 ) }
    dend_42 { pt3dadd( 232.134, -26.6038, -166.31, 0.55 ) }
    dend_42 { pt3dadd( 237.336, -26.2673, -167.469, 0.28 ) }
    dend_42 { pt3dadd( 241.057, -25.7669, -168.355, 0.28 ) }
    dend_42 { pt3dadd( 244.297, -25.0938, -169.169, 0.55 ) }
    dend_42 { pt3dadd( 247.872, -24.2478, -170.25, 0.28 ) }
    dend_42 { pt3dadd( 248.774, -23.9782, -170.491, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 74.7486, 8.4494, -45.3319, 0.55 ) }
    dend_35 { pt3dadd( 75.1038, 6.70159, -46.9965, 0.55 ) }
    dend_35 { pt3dadd( 75.2572, 5.2068, -48.2839, 0.28 ) }
    dend_35 { pt3dadd( 75.3983, 3.81149, -49.3344, 0.55 ) }
    dend_35 { pt3dadd( 75.8639, 0.851094, -51.5971, 0.28 ) }
    dend_35 { pt3dadd( 75.8871, 0.670803, -51.7678, 0.55 ) }
    dend_35 { pt3dadd( 76.0368, -0.257709, -52.7497, 0.28 ) }
    dend_35 { pt3dadd( 76.0769, -0.99342, -53.6977, 0.55 ) }
    dend_35 { pt3dadd( 76.0641, -1.73752, -54.7896, 0.28 ) }
    dend_35 { pt3dadd( 76.0087, -2.7388, -56.3356, 0.55 ) }
    dend_35 { pt3dadd( 75.8683, -5.2649, -60.158, 0.55 ) }
    dend_35 { pt3dadd( 75.7063, -7.55525, -63.6916, 0.55 ) }
    dend_35 { pt3dadd( 75.5539, -9.38398, -66.5182, 0.55 ) }
    dend_35 { pt3dadd( 75.363, -11.1874, -69.2552, 0.55 ) }
    dend_35 { pt3dadd( 75.3122, -11.6582, -69.9376, 0.28 ) }
    dend_35 { pt3dadd( 75.2767, -12.1726, -70.6156, 0.55 ) }
    dend_35 { pt3dadd( 75.3101, -12.9056, -71.4782, 0.28 ) }
    dend_35 { pt3dadd( 75.5306, -14.2569, -72.8899, 0.55 ) }
    dend_35 { pt3dadd( 76.2145, -16.9525, -75.1379, 0.55 ) }
    dend_35 { pt3dadd( 76.5987, -18.4313, -76.2062, 0.28 ) }
    dend_35 { pt3dadd( 76.8942, -19.9153, -77.3586, 0.55 ) }
    dend_35 { pt3dadd( 77.1405, -21.9671, -79.0508, 0.28 ) }
    dend_35 { pt3dadd( 77.2215, -23.6079, -80.4546, 0.55 ) }
    dend_35 { pt3dadd( 77.2258, -26.0534, -82.5544, 0.28 ) }
    dend_35 { pt3dadd( 77.2524, -28.6022, -84.6414, 0.55 ) }
    dend_35 { pt3dadd( 77.236, -32.2928, -87.7052, 0.28 ) }
    dend_35 { pt3dadd( 77.1794, -34.2559, -89.3437, 0.55 ) }
    dend_35 { pt3dadd( 77.0842, -36.2514, -91.0705, 0.28 ) }
    dend_35 { pt3dadd( 76.9776, -37.9831, -92.7112, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 76.9251, -40.1126, -94.9765, 0.55 ) }
    dend_35 { pt3dadd( 77.0356, -42.1072, -97.0259, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 62.2435, 32.9211, -1.88733, 0.55 ) }
    dend_31 { pt3dadd( 64.2393, 32.9841, -1.29082, 0.55 ) }
    dend_31 { pt3dadd( 65.7094, 32.9448, -0.981303, 0.55 ) }
    dend_31 { pt3dadd( 68.9433, 32.7869, -0.461148, 0.55 ) }
    dend_31 { pt3dadd( 70.4095, 32.659, -0.347601, 0.55 ) }
    dend_31 { pt3dadd( 72.0125, 32.5355, -0.309894, 0.55 ) }
    dend_31 { pt3dadd( 74.1723, 32.3744, -0.415061, 0.55 ) }
    dend_31 { pt3dadd( 76.4708, 32.1012, -0.722037, 0.55 ) }
    dend_31 { pt3dadd( 77.6881, 31.9142, -1.01184, 0.55 ) }
    dend_31 { pt3dadd( 80.1846, 31.4642, -1.92139, 0.55 ) }
    dend_31 { pt3dadd( 81.336, 31.2585, -2.37668, 0.55 ) }
    dend_31 { pt3dadd( 84.0428, 30.7136, -3.49867, 0.55 ) }
    dend_31 { pt3dadd( 85.8812, 30.2782, -4.22927, 0.55 ) }
    dend_31 { pt3dadd( 87.2308, 29.9622, -4.70748, 0.83 ) }
    dend_31 { pt3dadd( 89.392, 29.3867, -5.43211, 0.55 ) }
    dend_31 { pt3dadd( 91.5117, 28.7425, -6.04344, 0.83 ) }
    dend_31 { pt3dadd( 93.3127, 28.131, -6.48505, 0.55 ) }
    dend_31 { pt3dadd( 94.9084, 27.6258, -6.80412, 0.55 ) }
    dend_31 { pt3dadd( 95.8095, 27.3862, -6.94652, 0.83 ) }
    dend_31 { pt3dadd( 97.9053, 26.8558, -7.17505, 0.28 ) }
    dend_31 { pt3dadd( 98.94, 26.6467, -7.2346, 0.28 ) }
    dend_31 { pt3dadd( 99.9493, 26.3727, -7.32868, 0.28 ) }
    dend_31 { pt3dadd( 101.039, 26.1032, -7.44102, 0.28 ) }
    dend_31 { pt3dadd( 102.782, 25.696, -7.6619, 0.28 ) }
    dend_31 { pt3dadd( 103.481, 25.5447, -7.73267, 0.55 ) }
    dend_31 { pt3dadd( 105.141, 25.233, -7.749, 0.55 ) }
    dend_31 { pt3dadd( 108.122, 24.6754, -7.62755, 0.55 ) }
    dend_31 { pt3dadd( 108.946, 24.5075, -7.55446, 0.55 ) }
    dend_31 { pt3dadd( 109.683, 24.3409, -7.45367, 0.83 ) }
    dend_31 { pt3dadd( 111.269, 24.0536, -7.12031, 0.55 ) }
    dend_31 { pt3dadd( 112.647, 23.8112, -6.8096, 0.55 ) }
    dend_31 { pt3dadd( 113.948, 23.5888, -6.51126, 0.55 ) }
    dend_31 { pt3dadd( 114.959, 23.3933, -6.30436, 0.55 ) }
    dend_31 { pt3dadd( 116.576, 22.9579, -6.02932, 0.55 ) }
    dend_31 { pt3dadd( 118.501, 22.2601, -5.77246, 0.55 ) }
    dend_31 { pt3dadd( 121.531, 20.8091, -5.50559, 0.55 ) }
    dend_31 { pt3dadd( 123.219, 19.7583, -5.41009, 0.55 ) }
    dend_31 { pt3dadd( 124.705, 18.5982, -5.34676, 0.28 ) }
    dend_31 { pt3dadd( 125.157, 18.1571, -5.33273, 0.55 ) }
    dend_31 { pt3dadd( 126.179, 16.8974, -5.29141, 0.28 ) }
    dend_31 { pt3dadd( 127.085, 15.4647, -5.22571, 0.55 ) }
    dend_31 { pt3dadd( 127.967, 13.6815, -5.01033, 0.55 ) }
    dend_31 { pt3dadd( 128.557, 12.5232, -4.81171, 0.28 ) }
    dend_31 { pt3dadd( 128.77, 12.1192, -4.72081, 0.55 ) }
    dend_31 { pt3dadd( 129.318, 11.1209, -4.47978, 0.28 ) }
    dend_31 { pt3dadd( 130.06, 9.83276, -4.13221, 0.55 ) }
    dend_31 { pt3dadd( 131.97, 6.76119, -3.20806, 0.55 ) }
    dend_31 { pt3dadd( 132.959, 5.22411, -2.70655, 0.55 ) }
    dend_31 { pt3dadd( 133.875, 3.81962, -2.23299, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 62.2435, 32.9211, -1.88733, 0.55 ) }
    dend_30 { pt3dadd( 63.3953, 33.1828, -1.01065, 0.55 ) }
    dend_30 { pt3dadd( 63.7649, 33.2657, -0.75012, 0.55 ) }
    dend_30 { pt3dadd( 65.1494, 33.5089, 0.158433, 0.55 ) }
    dend_30 { pt3dadd( 66.6916, 33.8106, 1.19674, 0.55 ) }
    dend_30 { pt3dadd( 68.6687, 34.1918, 2.58053, 0.55 ) }
    dend_30 { pt3dadd( 69.2148, 34.2978, 2.95908, 0.55 ) }
    dend_30 { pt3dadd( 70.1988, 34.4503, 3.62734, 0.55 ) }
    dend_30 { pt3dadd( 71.2747, 34.6432, 4.31959, 0.55 ) }
    dend_30 { pt3dadd( 72.5215, 34.9034, 5.0687, 0.55 ) }
    dend_30 { pt3dadd( 73.6945, 35.1654, 5.7794, 0.55 ) }
    dend_30 { pt3dadd( 74.3346, 35.3391, 6.13993, 0.55 ) }
    dend_30 { pt3dadd( 75.0835, 35.5651, 6.56259, 0.55 ) }
    dend_30 { pt3dadd( 76.0067, 35.8721, 7.06926, 0.83 ) }
    dend_30 { pt3dadd( 77.5192, 36.3748, 7.73662, 0.55 ) }
    dend_30 { pt3dadd( 78.5253, 36.6683, 8.12787, 0.83 ) }
    dend_30 { pt3dadd( 79.9297, 37.0117, 8.61994, 0.55 ) }
    dend_30 { pt3dadd( 80.3637, 37.0936, 8.76397, 0.55 ) }
    dend_30 { pt3dadd( 81.7179, 37.2813, 9.18032, 0.55 ) }
    dend_30 { pt3dadd( 84.1578, 37.4733, 9.8233, 0.55 ) }
    dend_30 { pt3dadd( 85.9557, 37.5165, 10.2501, 0.55 ) }
    dend_30 { pt3dadd( 87.3866, 37.485, 10.6189, 0.55 ) }
    dend_30 { pt3dadd( 88.8541, 37.3769, 11.0417, 0.55 ) }
    dend_30 { pt3dadd( 89.1638, 37.3461, 11.1319, 0.28 ) }
    dend_30 { pt3dadd( 89.7945, 37.2592, 11.3125, 0.83 ) }
    dend_30 { pt3dadd( 92.3884, 36.8655, 12.0676, 0.55 ) }
    dend_30 { pt3dadd( 94.2028, 36.5929, 12.5617, 0.55 ) }
    dend_30 { pt3dadd( 95.6878, 36.4048, 13.0049, 0.55 ) }
    dend_30 { pt3dadd( 96.5753, 36.2897, 13.2779, 0.83 ) }
    dend_30 { pt3dadd( 97.273, 36.2088, 13.4944, 0.28 ) }
    dend_30 { pt3dadd( 97.9057, 36.1366, 13.685, 0.55 ) }
    dend_30 { pt3dadd( 102.705, 36.7242, 15.9059, 0.55 ) }
    dend_30 { pt3dadd( 107.871, 36.5612, 17.1688, 0.55 ) }
    dend_30 { pt3dadd( 112.943, 37.0289, 18.7025, 0.55 ) }
    dend_30 { pt3dadd( 117.568, 36.6737, 21.3081, 0.55 ) }
    dend_30 { pt3dadd( 121.956, 35.575, 24.1087, 0.55 ) }
    dend_30 { pt3dadd( 126.803, 33.8036, 25.4042, 0.55 ) }
    dend_30 { pt3dadd( 131.613, 31.5635, 25.7883, 0.55 ) }
    dend_30 { pt3dadd( 136.781, 30.3021, 25.8929, 0.55 ) }
    dend_30 { pt3dadd( 141.905, 28.9462, 26.3478, 0.55 ) }
    dend_30 { pt3dadd( 147.169, 28.1877, 26.4892, 0.55 ) }
    dend_30 { pt3dadd( 152.395, 27.6393, 27.3225, 0.55 ) }
    dend_30 { pt3dadd( 157.393, 26.1629, 28.3933, 0.55 ) }
    dend_30 { pt3dadd( 162.427, 25.6062, 30.0239, 0.55 ) }
    dend_30 { pt3dadd( 167.172, 25.7803, 32.4227, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.45112, -32.5742, 5.22901, 1.38 ) }
    dend_13 { pt3dadd( 1.44521, -35.289, 4.95867, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.45112, -32.5742, 5.22901, 0.55 ) }
    dend_12 { pt3dadd( -2.65652, -34.6428, 4.60514, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.95632, -37.2658, 3.9326, 0.55 ) }
    dend_12 { pt3dadd( -5.00402, -39.0236, 3.40873, 0.55 ) }
    dend_12 { pt3dadd( -5.80031, -40.4932, 2.80587, 0.55 ) }
    dend_12 { pt3dadd( -7.43681, -43.5492, 1.27105, 0.55 ) }
    dend_12 { pt3dadd( -8.57009, -45.5985, 0.146356, 0.55 ) }
    dend_12 { pt3dadd( -9.54744, -47.4342, -0.905966, 0.55 ) }
    dend_12 { pt3dadd( -12.083, -51.924, -3.61715, 0.55 ) }
    dend_12 { pt3dadd( -15.1663, -57.1406, -6.84917, 0.55 ) }
    dend_12 { pt3dadd( -17.5305, -61.0997, -9.41409, 0.55 ) }
    dend_12 { pt3dadd( -19.0159, -63.6923, -11.0788, 0.55 ) }
    dend_12 { pt3dadd( -20.7119, -66.7902, -12.9754, 0.55 ) }
    dend_12 { pt3dadd( -22.8388, -71.1873, -15.3181, 0.55 ) }
    dend_12 { pt3dadd( -24.0537, -74.2632, -16.626, 0.55 ) }
    dend_12 { pt3dadd( -25.6007, -78.6464, -18.0145, 0.55 ) }
    dend_12 { pt3dadd( -26.8154, -82.7186, -19.0233, 0.55 ) }
    dend_12 { pt3dadd( -27.9685, -87.7523, -19.9682, 0.55 ) }
    dend_12 { pt3dadd( -28.9848, -93.6153, -20.7328, 0.55 ) }
    dend_12 { pt3dadd( -29.4397, -98.0533, -21.0207, 0.55 ) }
    dend_12 { pt3dadd( -29.6058, -100.247, -20.9691, 0.55 ) }
    dend_12 { pt3dadd( -29.8632, -105.371, -20.4578, 0.55 ) }
    dend_12 { pt3dadd( -30.0899, -110.158, -19.8294, 0.55 ) }
    dend_12 { pt3dadd( -30.2739, -114.955, -18.7665, 0.55 ) }
    dend_12 { pt3dadd( -30.4767, -117.711, -18.0388, 0.55 ) }
    dend_12 { pt3dadd( -31.2088, -126.227, -15.4896, 0.55 ) }
    dend_12 { pt3dadd( -31.2716, -126.854, -15.2942, 0.55 ) }
    dend_12 { pt3dadd( -31.6385, -130.69, -13.9807, 0.55 ) }
    dend_12 { pt3dadd( -32.6513, -137.583, -11.6439, 0.55 ) }
    dend_12 { pt3dadd( -32.936, -139.889, -10.9885, 0.55 ) }
    dend_12 { pt3dadd( -33.163, -143.501, -10.5458, 0.55 ) }
    dend_12 { pt3dadd( -33.0708, -144.838, -10.6323, 0.55 ) }
    dend_12 { pt3dadd( -32.1775, -149.342, -11.5725, 0.55 ) }
    dend_12 { pt3dadd( -31.161, -152.24, -12.6436, 0.55 ) }
    dend_12 { pt3dadd( -28.9762, -156.842, -15.1182, 0.55 ) }
    dend_12 { pt3dadd( -25.8906, -162.446, -18.4213, 0.28 ) }
    dend_12 { pt3dadd( -25.0171, -163.828, -19.3942, 0.55 ) }
    dend_12 { pt3dadd( -23.5964, -165.923, -21.031, 0.28 ) }
    dend_12 { pt3dadd( -23.3766, -166.239, -21.294, 0.55 ) }
    dend_12 { pt3dadd( -22.2556, -167.97, -22.6074, 0.28 ) }
    dend_12 { pt3dadd( -21.9769, -168.563, -22.9521, 0.55 ) }
    dend_12 { pt3dadd( -20.8778, -171.653, -24.2509, 0.28 ) }
    dend_12 { pt3dadd( -20.546, -172.708, -24.7007, 0.55 ) }
    dend_12 { pt3dadd( -19.7034, -175.766, -25.8673, 0.28 ) }
    dend_12 { pt3dadd( -19.4361, -176.728, -26.2293, 0.55 ) }
    dend_12 { pt3dadd( -18.5636, -180.05, -27.4442, 0.28 ) }
    dend_12 { pt3dadd( -18.1514, -181.578, -28.0061, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.51151, -77.7342, 61.6551, 0.55 ) }
    dend_10 { pt3dadd( 3.83879, -84.1193, 68.1579, 0.55 ) }
    dend_10 { pt3dadd( 1.32107, -89.7224, 75.0947, 0.55 ) }
    dend_10 { pt3dadd( -1.03233, -95.9207, 81.5674, 0.55 ) }
    dend_10 { pt3dadd( -3.57082, -102.154, 87.9356, 0.55 ) }
    dend_10 { pt3dadd( -5.28901, -109.395, 93.4559, 0.55 ) }
    dend_10 { pt3dadd( -6.82828, -116.34, 99.3931, 0.55 ) }
    dend_10 { pt3dadd( -7.72228, -124.682, 103.324, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.51151, -77.7342, 61.6551, 0.55 ) }
    dend_3 { pt3dadd( 7.25404, -82.9041, 66.0848, 0.55 ) }
    dend_3 { pt3dadd( 8.91288, -88.8359, 69.4683, 0.55 ) }
    dend_3 { pt3dadd( 9.49159, -94.7706, 73.1875, 0.55 ) }
    dend_3 { pt3dadd( 9.46843, -101.01, 76.4201, 0.55 ) }
    dend_3 { pt3dadd( 9.74847, -107.238, 79.6647, 0.55 ) }
    dend_3 { pt3dadd( 10.2291, -113.227, 83.3099, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.9658, 40.4595, -14.3423, 0.83 ) }
    dend_60 { pt3dadd( -43.3701, 42.4389, -15.4319, 0.83 ) }
    dend_60 { pt3dadd( -42.0996, 47.1349, -17.8029, 0.55 ) }
    dend_60 { pt3dadd( -41.5819, 49.124, -18.695, 0.83 ) }
    dend_60 { pt3dadd( -41.0502, 51.2202, -19.5336, 0.55 ) }
    dend_60 { pt3dadd( -40.5646, 53.3083, -20.1528, 0.55 ) }
    dend_60 { pt3dadd( -40.3414, 54.3265, -20.3509, 0.28 ) }
    dend_60 { pt3dadd( -40.266, 54.9596, -20.3478, 0.55 ) }
    dend_60 { pt3dadd( -40.0553, 56.9616, -19.9164, 0.28 ) }
    dend_60 { pt3dadd( -39.9544, 57.8072, -19.6859, 0.55 ) }
    dend_60 { pt3dadd( -39.6673, 60.7132, -18.7783, 0.28 ) }
    dend_60 { pt3dadd( -39.5179, 62.9926, -17.9978, 0.55 ) }
    dend_60 { pt3dadd( -39.4828, 66.5153, -16.7125, 0.28 ) }
    dend_60 { pt3dadd( -39.5769, 69.5908, -15.5507, 0.28 ) }
    dend_60 { pt3dadd( -39.7399, 71.2987, -14.8918, 0.55 ) }
    dend_60 { pt3dadd( -40.062, 73.318, -14.1409, 0.28 ) }
    dend_60 { pt3dadd( -40.2847, 74.2748, -13.785, 0.55 ) }
    dend_60 { pt3dadd( -40.912, 76.5489, -13.0823, 0.28 ) }
    dend_60 { pt3dadd( -41.415, 78.0824, -12.719, 0.28 ) }
    dend_60 { pt3dadd( -41.9307, 79.5998, -12.4156, 0.28 ) }
    dend_60 { pt3dadd( -42.1715, 80.404, -12.2508, 0.55 ) }
    dend_60 { pt3dadd( -42.9523, 83.6874, -11.6157, 0.28 ) }
    dend_60 { pt3dadd( -43.7319, 87.603, -10.901, 0.55 ) }
    dend_60 { pt3dadd( -43.9803, 88.9578, -10.6544, 0.55 ) }
    dend_60 { pt3dadd( -44.2576, 90.307, -10.3843, 0.55 ) }
    dend_60 { pt3dadd( -44.9865, 93.1781, -9.89318, 0.55 ) }
    dend_60 { pt3dadd( -45.5758, 95.0673, -9.64012, 0.28 ) }
    dend_60 { pt3dadd( -45.8785, 95.7804, -9.57405, 0.55 ) }
    dend_60 { pt3dadd( -46.8424, 97.6922, -9.38929, 0.28 ) }
    dend_60 { pt3dadd( -47.9329, 99.7449, -9.29232, 0.55 ) }
    dend_60 { pt3dadd( -49.7466, 102.712, -9.33276, 0.28 ) }
    dend_60 { pt3dadd( -50.6268, 103.953, -9.42166, 0.28 ) }
    dend_60 { pt3dadd( -52.0293, 105.712, -9.7666, 0.55 ) }
    dend_60 { pt3dadd( -53.5867, 107.564, -10.2472, 0.28 ) }
    dend_60 { pt3dadd( -53.8697, 107.856, -10.3468, 0.55 ) }
    dend_60 { pt3dadd( -54.8884, 108.789, -10.7316, 0.28 ) }
    dend_60 { pt3dadd( -58.4118, 111.767, -12.0525, 0.55 ) }
    dend_60 { pt3dadd( -63.2574, 115.511, -14.1976, 0.28 ) }
    dend_60 { pt3dadd( -64.1386, 116.159, -14.6648, 0.55 ) }
    dend_60 { pt3dadd( -66.5456, 117.849, -16.0167, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -67.5494, 118.552, -16.617, 0.28 ) }
    dend_60 { pt3dadd( -68.4114, 119.15, -17.1892, 0.55 ) }
    dend_60 { pt3dadd( -70.8785, 120.632, -19.1597, 0.28 ) }
    dend_60 { pt3dadd( -72.6317, 121.459, -20.5302, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -43.9658, 40.4595, -14.3423, 0.55 ) }
    dend_57 { pt3dadd( -44.1996, 42.2904, -14.3653, 0.55 ) }
    dend_57 { pt3dadd( -44.3742, 43.3586, -14.2825, 0.28 ) }
    dend_57 { pt3dadd( -44.6689, 44.0985, -14.0529, 0.55 ) }
    dend_57 { pt3dadd( -45.3457, 45.7975, -13.5256, 0.28 ) }
    dend_57 { pt3dadd( -45.821, 46.9909, -13.1552, 0.55 ) }
    dend_57 { pt3dadd( -46.6973, 49.1909, -12.4724, 0.28 ) }
    dend_57 { pt3dadd( -47.31, 50.3428, -11.9081, 0.55 ) }
    dend_57 { pt3dadd( -49.73, 52.9507, -9.6278, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -147.623, -49.4799, -39.0981, 0.55 ) }
    dend_52 { pt3dadd( -152.542, -55.1797, -43.0355, 0.55 ) }
    dend_52 { pt3dadd( -156.103, -61.4872, -47.4759, 0.55 ) }
    dend_52 { pt3dadd( -158.777, -66.9675, -53.3915, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -147.623, -49.4799, -39.0981, 0.55 ) }
    dend_49 { pt3dadd( -153.753, -54.8293, -45.5363, 0.55 ) }
    dend_49 { pt3dadd( -158.772, -59.9897, -53.0071, 0.55 ) }
    dend_49 { pt3dadd( -163.364, -65.2504, -60.6797, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -173.545, 13.8597, 61.9363, 0.55 ) }
    dend_47 { pt3dadd( -183.581, 14.4652, 68.7439, 0.55 ) }
    dend_47 { pt3dadd( -194.281, 16.3464, 74.1681, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -173.545, 13.8597, 61.9363, 0.55 ) }
    dend_46 { pt3dadd( -185.081, 12.4397, 65.6761, 0.55 ) }
    dend_46 { pt3dadd( -196.611, 13.026, 69.6525, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 77.0356, -42.1072, -97.0259, 0.28 ) }
    dend_39 { pt3dadd( 84.1217, -45.4115, -110.316, 0.28 ) }
    dend_39 { pt3dadd( 84.8145, -45.8192, -111.512, 0.55 ) }
    dend_39 { pt3dadd( 85.9842, -46.5075, -113.532, 0.28 ) }
    dend_39 { pt3dadd( 86.9691, -47.0871, -115.232, 0.28 ) }
    dend_39 { pt3dadd( 88.2728, -47.8543, -117.483, 0.55 ) }
    dend_39 { pt3dadd( 89.9917, -48.8659, -120.451, 0.55 ) }
    dend_39 { pt3dadd( 92.1956, -50.9993, -122.176, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 77.0356, -42.1072, -97.0259, 0.55 ) }
    dend_36 { pt3dadd( 77.5743, -43.0994, -98.478, 0.55 ) }
    dend_36 { pt3dadd( 77.7151, -43.5329, -99.1248, 0.28 ) }
    dend_36 { pt3dadd( 77.907, -44.2653, -100.253, 0.55 ) }
    dend_36 { pt3dadd( 78.3296, -45.8788, -102.738, 0.28 ) }
    dend_36 { pt3dadd( 78.6225, -46.9969, -104.461, 0.55 ) }
    dend_36 { pt3dadd( 79.1187, -48.8914, -107.379, 0.28 ) }
    dend_36 { pt3dadd( 79.6452, -51.1447, -111.177, 0.28 ) }
    dend_36 { pt3dadd( 79.829, -52.1673, -112.951, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 133.875, 3.81962, -2.23299, 0.28 ) }
    dend_33 { pt3dadd( 136.506, 0.74694, -0.833688, 0.28 ) }
    dend_33 { pt3dadd( 139.791, -3.30134, 1.38187, 0.28 ) }
    dend_33 { pt3dadd( 141.856, -5.92557, 2.93544, 0.55 ) }
    dend_33 { pt3dadd( 143.089, -7.35547, 3.8898, 0.28 ) }
    dend_33 { pt3dadd( 143.744, -8.12562, 4.41127, 0.28 ) }
    dend_33 { pt3dadd( 146.999, -11.932, 6.9182, 0.55 ) }
    dend_33 { pt3dadd( 147.732, -12.7648, 7.60926, 0.28 ) }
    dend_33 { pt3dadd( 149.444, -14.9699, 9.58112, 0.55 ) }
    dend_33 { pt3dadd( 150.915, -16.8983, 11.1965, 0.28 ) }
    dend_33 { pt3dadd( 152.205, -18.4584, 12.4859, 0.55 ) }
    dend_33 { pt3dadd( 153.735, -20.3399, 13.885, 0.55 ) }
    dend_33 { pt3dadd( 156.223, -23.3652, 15.6637, 0.55 ) }
    dend_33 { pt3dadd( 156.827, -24.1116, 16.0674, 0.55 ) }
    dend_33 { pt3dadd( 158.995, -26.9123, 17.5262, 0.28 ) }
    dend_33 { pt3dadd( 159.84, -28.0652, 18.0813, 0.55 ) }
    dend_33 { pt3dadd( 161.017, -29.5264, 18.7975, 0.28 ) }
    dend_33 { pt3dadd( 162.693, -31.6114, 19.7039, 0.55 ) }
    dend_33 { pt3dadd( 165.532, -34.9286, 20.6041, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 133.875, 3.81962, -2.23299, 0.55 ) }
    dend_32 { pt3dadd( 130.668, 3.60538, -2.65561, 0.55 ) }
    dend_32 { pt3dadd( 128.063, 3.4314, -2.99882, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.44521, -35.289, 4.95867, 0.83 ) }
    dend_17 { pt3dadd( 1.55806, -35.5071, 4.94286, 0.83 ) }
    dend_17 { pt3dadd( 2.84959, -37.4258, 4.92499, 0.83 ) }
    dend_17 { pt3dadd( 3.9813, -39.1076, 4.79397, 0.55 ) }
    dend_17 { pt3dadd( 4.88416, -40.4493, 4.68944, 0.55 ) }
    dend_17 { pt3dadd( 6.80322, -43.3012, 4.46726, 0.83 ) }
    dend_17 { pt3dadd( 9.13092, -46.7603, 4.19777, 0.55 ) }
    dend_17 { pt3dadd( 10.3985, -48.5687, 4.09369, 0.83 ) }
    dend_17 { pt3dadd( 12.6343, -51.4364, 4.0606, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.44521, -35.289, 4.95867, 0.55 ) }
    dend_14 { pt3dadd( -0.599571, -36.5353, 2.08599, 0.55 ) }
    dend_14 { pt3dadd( -2.7944, -37.8731, -0.997481, 0.55 ) }
    dend_14 { pt3dadd( -5.3854, -39.4524, -4.63755, 0.55 ) }
    dend_14 { pt3dadd( -8.53172, -41.3702, -9.05777, 0.55 ) }
    dend_14 { pt3dadd( -10.3172, -42.4585, -11.5661, 0.55 ) }
    dend_14 { pt3dadd( -10.6759, -42.6771, -12.07, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 10.2291, -113.227, 83.3099, 0.55 ) }
    dend_7 { pt3dadd( 11.6908, -120.913, 88.2464, 0.55 ) }
    dend_7 { pt3dadd( 13.8715, -129.161, 91.824, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 10.2291, -113.227, 83.3099, 0.55 ) }
    dend_4 { pt3dadd( 10.741, -121.531, 87.9258, 0.55 ) }
    dend_4 { pt3dadd( 10.9808, -129.605, 92.9531, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -49.73, 52.9507, -9.6278, 0.28 ) }
    dend_59 { pt3dadd( -51.9786, 53.6964, -8.17556, 0.28 ) }
    dend_59 { pt3dadd( -52.8586, 53.941, -7.55885, 0.55 ) }
    dend_59 { pt3dadd( -55.4046, 54.6301, -5.72852, 0.28 ) }
    dend_59 { pt3dadd( -56.6301, 55.0197, -4.90573, 0.55 ) }
    dend_59 { pt3dadd( -59.9301, 56.1197, -2.76554, 0.28 ) }
    dend_59 { pt3dadd( -63.2841, 57.2377, -0.590319, 0.55 ) }
    dend_59 { pt3dadd( -68.8108, 58.864, 2.94358, 0.28 ) }
    dend_59 { pt3dadd( -69.9891, 59.2166, 3.70017, 0.55 ) }
    dend_59 { pt3dadd( -72.5744, 60.1391, 5.35897, 0.28 ) }
    dend_59 { pt3dadd( -73.5925, 60.5414, 6.03212, 0.55 ) }
    dend_59 { pt3dadd( -83.6931, 62.5467, 10.309, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -93.718, 66.7771, 12.7464, 0.55 ) }
    dend_59 { pt3dadd( -103.311, 70.6027, 16.9495, 0.55 ) }
    dend_59 { pt3dadd( -111.74, 75.718, 22.1576, 0.55 ) }
    dend_59 { pt3dadd( -120.848, 80.8019, 26.0994, 0.55 ) }
    dend_59 { pt3dadd( -130.902, 83.8989, 29.7936, 0.55 ) }
    dend_59 { pt3dadd( -140.776, 85.5062, 34.7202, 0.55 ) }
    dend_59 { pt3dadd( -150.109, 85.4332, 40.8203, 0.55 ) }
    dend_59 { pt3dadd( -159.437, 86.0842, 46.896, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -49.73, 52.9507, -9.6278, 0.55 ) }
    dend_58 { pt3dadd( -52.7808, 51.6688, -9.29474, 0.55 ) }
    dend_58 { pt3dadd( -54.3626, 50.9531, -9.13586, 0.28 ) }
    dend_58 { pt3dadd( -55.5398, 50.4205, -9.01763, 0.55 ) }
    dend_58 { pt3dadd( -56.5209, 49.9765, -8.91909, 0.28 ) }
    dend_58 { pt3dadd( -57.2081, 49.6656, -8.85008, 0.55 ) }
    dend_58 { pt3dadd( -59.103, 48.8082, -8.65975, 0.28 ) }
    dend_58 { pt3dadd( -60.3266, 48.1717, -8.70531, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -158.777, -66.9675, -53.3915, 0.55 ) }
    dend_54 { pt3dadd( -163.27, -75.6201, -55.6037, 0.55 ) }
    dend_54 { pt3dadd( -167.731, -84.4986, -56.7047, 0.55 ) }
    dend_54 { pt3dadd( -171.222, -93.4539, -59.4548, 0.55 ) }
    dend_54 { pt3dadd( -175.862, -102.167, -61.035, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -158.777, -66.9675, -53.3915, 0.55 ) }
    dend_53 { pt3dadd( -163.577, -71.3659, -63.2285, 0.55 ) }
    dend_53 { pt3dadd( -167.645, -74.147, -73.9463, 0.55 ) }
    dend_53 { pt3dadd( -172.858, -78.3218, -83.67, 0.55 ) }
    dend_53 { pt3dadd( -180.348, -80.6356, -92.4848, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -163.364, -65.2504, -60.6797, 0.55 ) }
    dend_51 { pt3dadd( -169.676, -64.1605, -69.3685, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -163.364, -65.2504, -60.6797, 0.55 ) }
    dend_50 { pt3dadd( -166.877, -72.9635, -65.1046, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 92.1956, -50.9993, -122.176, 0.28 ) }
    dend_41 { pt3dadd( 95.6918, -52.345, -124.474, 0.28 ) }
    dend_41 { pt3dadd( 97.3158, -52.97, -125.541, 0.55 ) }
    dend_41 { pt3dadd( 100.413, -54.162, -127.577, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 92.1956, -50.9993, -122.176, 0.55 ) }
    dend_40 { pt3dadd( 91.5278, -52.0445, -124.031, 0.55 ) }
    dend_40 { pt3dadd( 90.1921, -54.1351, -127.742, 0.28 ) }
    dend_40 { pt3dadd( 89.757, -54.8161, -128.951, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 79.829, -52.1673, -112.951, 0.28 ) }
    dend_38 { pt3dadd( 80.363, -53.8665, -116.85, 0.28 ) }
    dend_38 { pt3dadd( 80.6275, -54.7079, -118.78, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 79.829, -52.1673, -112.951, 0.55 ) }
    dend_37 { pt3dadd( 77.6327, -52.5074, -112.485, 0.55 ) }
    dend_37 { pt3dadd( 71.5084, -53.4559, -111.185, 0.28 ) }
    dend_37 { pt3dadd( 70.0535, -53.6812, -110.876, 0.55 ) }
    dend_37 { pt3dadd( 66.0736, -54.2975, -110.031, 0.28 ) }
    dend_37 { pt3dadd( 63.5082, -54.6948, -109.486, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.6343, -51.4364, 4.0606, 0.83 ) }
    dend_23 { pt3dadd( 12.7009, -51.7278, 4.01981, 0.83 ) }
    dend_23 { pt3dadd( 13.5929, -55.5456, 3.60725, 0.83 ) }
    dend_23 { pt3dadd( 13.9626, -58.4342, 3.39235, 0.83 ) }
    dend_23 { pt3dadd( 14.0397, -61.2552, 3.39628, 0.83 ) }
    dend_23 { pt3dadd( 13.9264, -65.0369, 3.6264, 0.83 ) }
    dend_23 { pt3dadd( 13.632, -69.4119, 4.00388, 0.83 ) }
    dend_23 { pt3dadd( 13.2418, -74.3133, 4.67153, 0.83 ) }
    dend_23 { pt3dadd( 12.7948, -79.0892, 5.52539, 0.83 ) }
    dend_23 { pt3dadd( 11.9337, -84.9646, 6.32578, 0.83 ) }
    dend_23 { pt3dadd( 11.4486, -87.6617, 6.50399, 0.83 ) }
    dend_23 { pt3dadd( 11.1166, -89.6818, 6.51653, 0.83 ) }
    dend_23 { pt3dadd( 10.4287, -93.5565, 6.43761, 0.83 ) }
    dend_23 { pt3dadd( 9.94926, -97.0094, 6.21381, 0.83 ) }
    dend_23 { pt3dadd( 9.56287, -104.294, 5.09287, 0.83 ) }
    dend_23 { pt3dadd( 9.56218, -108.241, 4.00132, 0.83 ) }
    dend_23 { pt3dadd( 9.64527, -111.858, 2.74006, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.6343, -51.4364, 4.0606, 0.55 ) }
    dend_18 { pt3dadd( 11.8598, -53.3694, 4.07757, 0.55 ) }
    dend_18 { pt3dadd( 11.2664, -54.7723, 4.19102, 0.55 ) }
    dend_18 { pt3dadd( 10.9004, -55.6673, 4.35467, 0.55 ) }
    dend_18 { pt3dadd( 10.378, -57.0634, 4.75213, 0.55 ) }
    dend_18 { pt3dadd( 9.39505, -59.8226, 5.7227, 0.55 ) }
    dend_18 { pt3dadd( 8.60858, -61.9092, 6.68282, 0.55 ) }
    dend_18 { pt3dadd( 7.9601, -63.5795, 7.62939, 0.55 ) }
    dend_18 { pt3dadd( 7.25129, -65.2671, 8.69957, 0.55 ) }
    dend_18 { pt3dadd( 6.64382, -66.6662, 9.65838, 0.28 ) }
    dend_18 { pt3dadd( 6.11275, -67.8082, 10.6061, 0.55 ) }
    dend_18 { pt3dadd( 5.06662, -69.8847, 12.6155, 0.55 ) }
    dend_18 { pt3dadd( 4.341, -71.159, 13.9765, 0.55 ) }
    dend_18 { pt3dadd( 3.92742, -71.8733, 14.731, 0.55 ) }
    dend_18 { pt3dadd( 3.40211, -72.7182, 15.5723, 0.83 ) }
    dend_18 { pt3dadd( 1.84056, -75.2269, 17.8978, 0.28 ) }
    dend_18 { pt3dadd( 1.32707, -76.0574, 18.645, 0.55 ) }
    dend_18 { pt3dadd( 0.451764, -77.5553, 19.9505, 0.28 ) }
    dend_18 { pt3dadd( 0.178667, -78.0165, 20.3865, 0.55 ) }
    dend_18 { pt3dadd( -0.400147, -79.0973, 21.3956, 0.28 ) }
    dend_18 { pt3dadd( -0.720212, -79.7124, 21.9247, 0.55 ) }
    dend_18 { pt3dadd( -1.82633, -81.7263, 23.0952, 0.55 ) }
    dend_18 { pt3dadd( -3.6907, -87.0678, 28.5035, 0.55 ) }
    dend_18 { pt3dadd( -5.2314, -92.1372, 34.2641, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.6759, -42.6771, -12.07, 0.55 ) }
    dend_16 { pt3dadd( -13.9025, -44.0767, -15.3178, 0.55 ) }
    dend_16 { pt3dadd( -14.8575, -44.4111, -16.2309, 0.55 ) }
    dend_16 { pt3dadd( -17.2574, -45.2518, -18.4323, 0.55 ) }
    dend_16 { pt3dadd( -22.5177, -46.9339, -23.0291, 0.28 ) }
    dend_16 { pt3dadd( -23.3018, -47.1664, -23.6644, 0.55 ) }
    dend_16 { pt3dadd( -26.5708, -48.2273, -26.1877, 0.55 ) }
    dend_16 { pt3dadd( -31.0495, -49.6851, -29.2182, 0.55 ) }
    dend_16 { pt3dadd( -32.7649, -50.1905, -30.3373, 0.28 ) }
    dend_16 { pt3dadd( -34.2713, -50.5344, -31.2346, 0.28 ) }
    dend_16 { pt3dadd( -36.8432, -51.0743, -32.4329, 0.55 ) }
    dend_16 { pt3dadd( -39.9879, -51.5913, -34.0078, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -42.9031, -51.8317, -35.5256, 0.55 ) }
    dend_16 { pt3dadd( -45.163, -51.8407, -36.6585, 0.55 ) }
    dend_16 { pt3dadd( -46.7249, -51.7236, -37.4857, 0.55 ) }
    dend_16 { pt3dadd( -51.3243, -51.1835, -40.047, 0.55 ) }
    dend_16 { pt3dadd( -56.1762, -50.3061, -42.6572, 0.55 ) }
    dend_16 { pt3dadd( -58.1839, -49.8401, -43.6889, 0.28 ) }
    dend_16 { pt3dadd( -60.0911, -49.4255, -44.7023, 0.55 ) }
    dend_16 { pt3dadd( -63.9523, -48.8192, -46.7199, 0.28 ) }
    dend_16 { pt3dadd( -65.2502, -48.6503, -47.3864, 0.83 ) }
    dend_16 { pt3dadd( -67.6731, -48.3092, -48.4756, 0.28 ) }
    dend_16 { pt3dadd( -69.4102, -48.1883, -49.0452, 0.55 ) }
    dend_16 { pt3dadd( -71.9288, -48.0965, -49.8237, 0.28 ) }
    dend_16 { pt3dadd( -72.9315, -48.0479, -50.1024, 0.55 ) }
    dend_16 { pt3dadd( -74.7861, -47.9917, -50.5238, 0.55 ) }
    dend_16 { pt3dadd( -77.5934, -47.6416, -51.0593, 0.55 ) }
    dend_16 { pt3dadd( -79.4271, -47.3064, -51.3115, 0.28 ) }
    dend_16 { pt3dadd( -80.9058, -46.8642, -51.4037, 0.55 ) }
    dend_16 { pt3dadd( -82.655, -46.1413, -51.5204, 0.28 ) }
    dend_16 { pt3dadd( -82.944, -46.0009, -51.5489, 0.55 ) }
    dend_16 { pt3dadd( -85.6386, -44.6458, -52.2469, 0.28 ) }
    dend_16 { pt3dadd( -87.6064, -43.625, -52.9478, 0.55 ) }
    dend_16 { pt3dadd( -90.2256, -42.1187, -54.2046, 0.83 ) }
    dend_16 { pt3dadd( -92.3963, -40.8316, -55.4628, 0.28 ) }
    dend_16 { pt3dadd( -92.9594, -40.5024, -55.8385, 0.55 ) }
    dend_16 { pt3dadd( -97.288, -38.0345, -58.94, 0.28 ) }
    dend_16 { pt3dadd( -98.0484, -37.6137, -59.551, 0.55 ) }
    dend_16 { pt3dadd( -100.301, -36.2335, -61.4833, 0.28 ) }
    dend_16 { pt3dadd( -100.882, -35.8785, -61.9859, 0.55 ) }
    dend_16 { pt3dadd( -102.372, -34.9546, -63.1825, 0.28 ) }
    dend_16 { pt3dadd( -103.425, -34.2895, -63.969, 0.55 ) }
    dend_16 { pt3dadd( -105.766, -32.8066, -65.3994, 0.28 ) }
    dend_16 { pt3dadd( -107.152, -32.0169, -66.1986, 0.55 ) }
    dend_16 { pt3dadd( -110.104, -30.5042, -67.7562, 0.28 ) }
    dend_16 { pt3dadd( -110.983, -30.0985, -68.207, 0.55 ) }
    dend_16 { pt3dadd( -112.357, -29.5616, -68.8661, 0.28 ) }
    dend_16 { pt3dadd( -113.519, -29.1102, -69.3712, 0.55 ) }
    dend_16 { pt3dadd( -115.926, -28.2041, -70.2837, 0.28 ) }
    dend_16 { pt3dadd( -116.649, -27.9467, -70.536, 0.55 ) }
    dend_16 { pt3dadd( -122.017, -25.937, -72.1743, 0.28 ) }
    dend_16 { pt3dadd( -123.892, -25.108, -72.5937, 0.55 ) }
    dend_16 { pt3dadd( -127.225, -23.4787, -73.1387, 0.28 ) }
    dend_16 { pt3dadd( -128.726, -22.6882, -73.3404, 0.55 ) }
    dend_16 { pt3dadd( -132.151, -20.9005, -73.6142, 0.28 ) }
    dend_16 { pt3dadd( -133.403, -20.298, -73.6617, 0.55 ) }
    dend_16 { pt3dadd( -137.91, -18.5102, -73.5962, 0.28 ) }
    dend_16 { pt3dadd( -139.786, -17.9924, -73.5506, 0.55 ) }
    dend_16 { pt3dadd( -142.455, -17.6795, -73.4524, 0.55 ) }
    dend_16 { pt3dadd( -144.092, -17.5886, -73.3529, 0.55 ) }
    dend_16 { pt3dadd( -147.402, -17.4891, -72.8975, 0.28 ) }
    dend_16 { pt3dadd( -150.632, -17.4244, -72.2461, 0.28 ) }
    dend_16 { pt3dadd( -153.313, -17.361, -71.6253, 0.55 ) }
    dend_16 { pt3dadd( -156.54, -17.0008, -70.509, 0.28 ) }
    dend_16 { pt3dadd( -158.102, -16.6201, -69.7401, 0.55 ) }
    dend_16 { pt3dadd( -161.746, -15.0892, -67.5292, 0.28 ) }
    dend_16 { pt3dadd( -163.515, -13.9052, -65.9217, 0.55 ) }
    dend_16 { pt3dadd( -164.585, -12.9354, -64.6045, 0.28 ) }
    dend_16 { pt3dadd( -165.682, -11.84, -62.7767, 0.55 ) }
    dend_16 { pt3dadd( -166.984, -10.4005, -60.2706, 0.28 ) }
    dend_16 { pt3dadd( -167.483, -9.89572, -59.3279, 0.55 ) }
    dend_16 { pt3dadd( -170.234, -7.65527, -54.871, 0.28 ) }
    dend_16 { pt3dadd( -171.169, -6.95271, -53.3802, 0.55 ) }
    dend_16 { pt3dadd( -173.367, -5.40459, -49.7596, 0.28 ) }
    dend_16 { pt3dadd( -174.563, -4.58454, -47.7932, 0.55 ) }
    dend_16 { pt3dadd( -175.548, -3.91302, -46.1791, 0.55 ) }
    dend_16 { pt3dadd( -176.742, -3.12409, -44.2917, 0.28 ) }
    dend_16 { pt3dadd( -177.421, -2.72479, -43.4449, 0.55 ) }
    dend_16 { pt3dadd( -179.763, -1.28974, -40.7769, 0.28 ) }
    dend_16 { pt3dadd( -180.974, -0.357507, -39.3516, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.6759, -42.6771, -12.07, 0.55 ) }
    dend_15 { pt3dadd( -10.2419, -42.8423, -13.1435, 0.55 ) }
    dend_15 { pt3dadd( -9.7712, -42.8818, -14.2135, 0.55 ) }
    dend_15 { pt3dadd( -9.11572, -42.8318, -15.5176, 0.55 ) }
    dend_15 { pt3dadd( -8.53538, -42.6991, -16.5574, 0.55 ) }
    dend_15 { pt3dadd( -4.2393, -41.0551, -23.0794, 0.55 ) }
    dend_15 { pt3dadd( -3.278, -40.5013, -24.5672, 0.55 ) }
    dend_15 { pt3dadd( -1.88662, -39.5109, -26.8012, 0.55 ) }
    dend_15 { pt3dadd( -0.907553, -38.7533, -28.3904, 0.55 ) }
    dend_15 { pt3dadd( 0.072538, -37.9186, -29.9125, 0.28 ) }
    dend_15 { pt3dadd( 1.66536, -36.4892, -32.1643, 0.55 ) }
    dend_15 { pt3dadd( 4.17471, -34.243, -35.362, 0.28 ) }
    dend_15 { pt3dadd( 4.34309, -34.1136, -35.7041, 0.55 ) }
    dend_15 { pt3dadd( 4.90104, -33.7399, -38.2339, 0.28 ) }
    dend_15 { pt3dadd( 4.99221, -33.6004, -40.0006, 0.55 ) }
    dend_15 { pt3dadd( 4.91323, -33.5862, -41.9234, 0.55 ) }
    dend_15 { pt3dadd( 4.72387, -33.7351, -45.3757, 0.55 ) }
    dend_15 { pt3dadd( 4.37114, -34.0746, -52.1507, 0.55 ) }
    dend_15 { pt3dadd( 4.21529, -34.3484, -56.703, 0.55 ) }
    dend_15 { pt3dadd( 4.20351, -34.4561, -58.2748, 0.55 ) }
    dend_15 { pt3dadd( 4.37022, -35.078, -68.6037, 0.55 ) }
    dend_15 { pt3dadd( 4.53312, -35.2036, -71.3973, 0.55 ) }
    dend_15 { pt3dadd( 4.74253, -35.2716, -72.9572, 0.55 ) }
    dend_15 { pt3dadd( 5.54916, -35.5116, -76.5491, 0.55 ) }
    dend_15 { pt3dadd( 7.99616, -36.5118, -85.0476, 0.55 ) }
    dend_15 { pt3dadd( 8.75522, -36.8727, -87.3071, 0.28 ) }
    dend_15 { pt3dadd( 9.2865, -37.1334, -88.5598, 0.55 ) }
    dend_15 { pt3dadd( 10.1106, -37.598, -90.4003, 0.28 ) }
    dend_15 { pt3dadd( 10.5078, -37.8668, -91.1295, 0.55 ) }
    dend_15 { pt3dadd( 12.2099, -38.9981, -92.9379, 0.28 ) }
    dend_15 { pt3dadd( 13.9014, -40.4438, -93.3409, 0.55 ) }
    dend_15 { pt3dadd( 14.9285, -41.468, -93.5058, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 15.89, -42.5912, -93.5274, 0.55 ) }
    dend_15 { pt3dadd( 16.7437, -43.8103, -93.458, 0.28 ) }
    dend_15 { pt3dadd( 17.1097, -44.4387, -93.4376, 0.55 ) }
    dend_15 { pt3dadd( 17.968, -46.0817, -93.3071, 0.28 ) }
    dend_15 { pt3dadd( 18.1773, -46.5742, -93.3425, 0.55 ) }
    dend_15 { pt3dadd( 19.3436, -49.402, -93.7037, 0.28 ) }
    dend_15 { pt3dadd( 19.8976, -50.7141, -94.0462, 0.55 ) }
    dend_15 { pt3dadd( 21.1408, -53.5237, -95.1096, 0.28 ) }
    dend_15 { pt3dadd( 21.6266, -54.5608, -95.6235, 0.55 ) }
    dend_15 { pt3dadd( 23.329, -57.9696, -97.5396, 0.28 ) }
    dend_15 { pt3dadd( 23.7434, -58.7992, -98.0419, 0.55 ) }
    dend_15 { pt3dadd( 24.9688, -61.429, -99.7176, 0.28 ) }
    dend_15 { pt3dadd( 25.2263, -62.0446, -100.058, 0.55 ) }
    dend_15 { pt3dadd( 25.8543, -63.6715, -100.934, 0.28 ) }
    dend_15 { pt3dadd( 26.2149, -64.6175, -101.536, 0.55 ) }
    dend_15 { pt3dadd( 26.5911, -65.5478, -102.206, 0.55 ) }
    dend_15 { pt3dadd( 27.3448, -67.4035, -103.529, 0.28 ) }
    dend_15 { pt3dadd( 27.9001, -68.5533, -104.497, 0.55 ) }
    dend_15 { pt3dadd( 29.7631, -71.4327, -107.656, 0.28 ) }
    dend_15 { pt3dadd( 30.4995, -72.37, -108.942, 0.55 ) }
    dend_15 { pt3dadd( 31.0255, -72.9651, -109.819, 0.28 ) }
    dend_15 { pt3dadd( 31.5769, -73.5086, -110.698, 0.55 ) }
    dend_15 { pt3dadd( 33.334, -75.0313, -113.374, 0.28 ) }
    dend_15 { pt3dadd( 34.6887, -76.2107, -115.351, 0.55 ) }
    dend_15 { pt3dadd( 37.0949, -78.4445, -118.483, 0.28 ) }
    dend_15 { pt3dadd( 37.8562, -79.1395, -119.464, 0.55 ) }
    dend_15 { pt3dadd( 39.3929, -80.4139, -121.19, 0.28 ) }
    dend_15 { pt3dadd( 39.9266, -80.8308, -121.715, 0.55 ) }
    dend_15 { pt3dadd( 40.8631, -81.4936, -122.385, 0.28 ) }
    dend_15 { pt3dadd( 41.7179, -82.0511, -122.899, 0.55 ) }
    dend_15 { pt3dadd( 44.1245, -83.4274, -124.043, 0.28 ) }
    dend_15 { pt3dadd( 46.9077, -84.8867, -125.313, 0.28 ) }
    dend_15 { pt3dadd( 48.3502, -85.5569, -125.856, 0.28 ) }
    dend_15 { pt3dadd( 49.7834, -86.1876, -126.493, 0.55 ) }
    dend_15 { pt3dadd( 51.8819, -87.0089, -127.436, 0.28 ) }
    dend_15 { pt3dadd( 52.822, -87.3592, -127.836, 0.83 ) }
    dend_15 { pt3dadd( 55.2434, -88.2836, -128.761, 0.28 ) }
    dend_15 { pt3dadd( 56.2762, -88.71, -129.22, 0.55 ) }
    dend_15 { pt3dadd( 60.7433, -90.7675, -131.448, 0.28 ) }
    dend_15 { pt3dadd( 62.9209, -91.8277, -132.747, 0.28 ) }
    dend_15 { pt3dadd( 64.4706, -92.6005, -133.8, 0.55 ) }
    dend_15 { pt3dadd( 65.3367, -93.074, -134.522, 0.55 ) }
    dend_15 { pt3dadd( 67.563, -94.3706, -136.638, 0.28 ) }
    dend_15 { pt3dadd( 69.6012, -95.6977, -138.71, 0.55 ) }
    dend_15 { pt3dadd( 71.4517, -96.977, -140.594, 0.28 ) }
    dend_15 { pt3dadd( 73.085, -98.1658, -142.399, 0.55 ) }
    dend_15 { pt3dadd( 74.4405, -99.1279, -143.884, 0.28 ) }
    dend_15 { pt3dadd( 75.585, -99.8132, -145.031, 0.55 ) }
    dend_15 { pt3dadd( 78.417, -101.274, -147.659, 0.28 ) }
    dend_15 { pt3dadd( 79.8779, -102.01, -148.925, 0.55 ) }
    dend_15 { pt3dadd( 82.1051, -103.122, -150.736, 0.28 ) }
    dend_15 { pt3dadd( 83.9495, -103.969, -152.173, 0.55 ) }
    dend_15 { pt3dadd( 88.2802, -105.736, -155.553, 0.28 ) }
    dend_15 { pt3dadd( 90.0052, -106.344, -157.062, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 13.8715, -129.161, 91.824, 0.55 ) }
    dend_9 { pt3dadd( 14.873, -136.479, 94.941, 0.55 ) }
    dend_9 { pt3dadd( 16.0531, -144.324, 96.1009, 0.55 ) }
    dend_9 { pt3dadd( 17.1199, -151.918, 98.4394, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.8715, -129.161, 91.824, 0.55 ) }
    dend_8 { pt3dadd( 16.2437, -136.743, 96.6719, 0.55 ) }
    dend_8 { pt3dadd( 17.7841, -143.276, 103.119, 0.55 ) }
    dend_8 { pt3dadd( 19.6902, -148.308, 110.712, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.9808, -129.605, 92.9531, 0.55 ) }
    dend_6 { pt3dadd( 12.5846, -138.423, 97.6455, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.9808, -129.605, 92.9531, 0.55 ) }
    dend_5 { pt3dadd( 10.8883, -138.628, 98.3377, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.64527, -111.858, 2.74006, 0.83 ) }
    dend_25 { pt3dadd( 10.3895, -115.015, 3.31495, 0.83 ) }
    dend_25 { pt3dadd( 11.0427, -117.682, 4.02979, 0.83 ) }
    dend_25 { pt3dadd( 11.692, -120.333, 4.74035, 0.83 ) }
    dend_25 { pt3dadd( 12.3086, -122.851, 5.41515, 0.83 ) }
    dend_25 { pt3dadd( 13.2589, -126.731, 6.45506, 0.83 ) }
    dend_25 { pt3dadd( 14.2023, -130.584, 7.48746, 0.83 ) }
    dend_25 { pt3dadd( 14.8703, -133.145, 8.55547, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 9.64527, -111.858, 2.74006, 0.55 ) }
    dend_24 { pt3dadd( 11.2356, -113.916, 2.40894, 0.55 ) }
    dend_24 { pt3dadd( 12.4024, -115.52, 1.87191, 0.55 ) }
    dend_24 { pt3dadd( 13.1864, -116.708, 1.36646, 0.55 ) }
    dend_24 { pt3dadd( 13.8555, -118.109, 0.637849, 0.83 ) }
    dend_24 { pt3dadd( 14.4703, -119.703, -0.364304, 0.55 ) }
    dend_24 { pt3dadd( 15.0718, -121.263, -1.34454, 0.83 ) }
    dend_24 { pt3dadd( 15.596, -122.957, -2.54692, 0.55 ) }
    dend_24 { pt3dadd( 15.8797, -123.939, -3.33651, 0.83 ) }
    dend_24 { pt3dadd( 16.6127, -127.12, -6.11544, 0.55 ) }
    dend_24 { pt3dadd( 16.9484, -129.626, -8.41395, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.2314, -92.1372, 34.2641, 0.55 ) }
    dend_20 { pt3dadd( -7.2904, -98.8677, 40.171, 0.55 ) }
    dend_20 { pt3dadd( -10.1246, -104.523, 46.8355, 0.55 ) }
    dend_20 { pt3dadd( -13.1316, -109.258, 54.1131, 0.55 ) }
    dend_20 { pt3dadd( -16.4947, -112.823, 61.8855, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.2314, -92.1372, 34.2641, 0.55 ) }
    dend_19 { pt3dadd( -7.90175, -98.3804, 39.2853, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.8703, -133.145, 8.55547, 0.55 ) }
    dend_27 { pt3dadd( 14.9055, -134.472, 8.84143, 0.55 ) }
    dend_27 { pt3dadd( 14.9715, -136.165, 9.26502, 0.55 ) }
    dend_27 { pt3dadd( 15.0384, -137.764, 9.65744, 0.55 ) }
    dend_27 { pt3dadd( 15.0823, -138.899, 9.91519, 0.55 ) }
    dend_27 { pt3dadd( 15.1549, -140.925, 10.3372, 0.55 ) }
    dend_27 { pt3dadd( 15.5009, -146.604, 11.4352, 0.55 ) }
    dend_27 { pt3dadd( 15.6972, -148.522, 11.756, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 15.8712, -149.87, 11.9242, 0.55 ) }
    dend_27 { pt3dadd( 16.1377, -151.399, 12.0122, 0.55 ) }
    dend_27 { pt3dadd( 16.374, -152.574, 11.9768, 0.55 ) }
    dend_27 { pt3dadd( 17.0524, -155.306, 11.8298, 0.55 ) }
    dend_27 { pt3dadd( 17.503, -157.386, 11.6818, 0.55 ) }
    dend_27 { pt3dadd( 17.8136, -158.752, 11.6382, 0.55 ) }
    dend_27 { pt3dadd( 18.5238, -162.308, 11.6839, 0.55 ) }
    dend_27 { pt3dadd( 18.9389, -164.709, 11.8033, 0.55 ) }
    dend_27 { pt3dadd( 19.408, -167.816, 12.1207, 0.55 ) }
    dend_27 { pt3dadd( 19.8579, -171.36, 12.7453, 0.55 ) }
    dend_27 { pt3dadd( 20.1873, -173.73, 13.3413, 0.55 ) }
    dend_27 { pt3dadd( 20.3952, -175.131, 13.7423, 0.55 ) }
    dend_27 { pt3dadd( 20.5673, -176.424, 14.0978, 0.55 ) }
    dend_27 { pt3dadd( 20.8445, -178.053, 14.4918, 0.55 ) }
    dend_27 { pt3dadd( 21.591, -181.964, 15.1823, 0.55 ) }
    dend_27 { pt3dadd( 21.9513, -183.469, 15.4223, 0.55 ) }
    dend_27 { pt3dadd( 22.3216, -185.148, 15.661, 0.55 ) }
    dend_27 { pt3dadd( 22.8649, -187.668, 15.998, 0.55 ) }
    dend_27 { pt3dadd( 23.1928, -189.614, 16.2327, 0.55 ) }
    dend_27 { pt3dadd( 23.4189, -191.469, 16.3853, 0.55 ) }
    dend_27 { pt3dadd( 23.5638, -193.243, 16.4954, 0.55 ) }
    dend_27 { pt3dadd( 23.6675, -194.978, 16.612, 0.55 ) }
    dend_27 { pt3dadd( 23.7535, -196.211, 16.6873, 0.55 ) }
    dend_27 { pt3dadd( 23.9369, -198.223, 16.754, 0.55 ) }
    dend_27 { pt3dadd( 24.2105, -200.626, 16.6539, 0.55 ) }
    dend_27 { pt3dadd( 24.4108, -201.784, 16.5399, 0.55 ) }
    dend_27 { pt3dadd( 24.6324, -202.795, 16.3749, 0.55 ) }
    dend_27 { pt3dadd( 25.1834, -204.685, 16.0007, 0.55 ) }
    dend_27 { pt3dadd( 25.5372, -205.882, 15.7268, 0.55 ) }
    dend_27 { pt3dadd( 25.9623, -207.36, 15.4488, 0.55 ) }
    dend_27 { pt3dadd( 26.1952, -208.407, 15.2931, 0.55 ) }
    dend_27 { pt3dadd( 26.7061, -211.141, 14.9632, 0.55 ) }
    dend_27 { pt3dadd( 26.9745, -213.204, 14.8266, 0.55 ) }
    dend_27 { pt3dadd( 27.2211, -216.421, 14.8271, 0.55 ) }
    dend_27 { pt3dadd( 27.3307, -218.51, 15.0237, 0.55 ) }
    dend_27 { pt3dadd( 27.3981, -220.71, 15.286, 0.28 ) }
    dend_27 { pt3dadd( 27.3892, -221.598, 15.4138, 0.28 ) }
    dend_27 { pt3dadd( 27.27, -223.77, 15.8924, 0.28 ) }
    dend_27 { pt3dadd( 27.0719, -225.791, 16.4661, 0.28 ) }
    dend_27 { pt3dadd( 26.9012, -228.465, 17.5744, 0.28 ) }
    dend_27 { pt3dadd( 27.8864, -234.309, 19.0805, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 14.8703, -133.145, 8.55547, 0.55 ) }
    dend_26 { pt3dadd( 15.4342, -133.46, 9.34684, 0.55 ) }
    dend_26 { pt3dadd( 16.5082, -134.278, 11.0608, 0.55 ) }
    dend_26 { pt3dadd( 17.3941, -135.089, 12.5831, 0.28 ) }
    dend_26 { pt3dadd( 18.3108, -136.015, 14.2498, 0.55 ) }
    dend_26 { pt3dadd( 18.7627, -136.617, 15.3513, 0.28 ) }
    dend_26 { pt3dadd( 19.4246, -137.713, 17.3741, 0.55 ) }
    dend_26 { pt3dadd( 19.5461, -138.306, 18.36, 0.28 ) }
    dend_26 { pt3dadd( 19.5508, -138.525, 18.7503, 0.28 ) }
    dend_26 { pt3dadd( 19.5496, -138.843, 19.432, 0.55 ) }
    dend_26 { pt3dadd( 19.6604, -139.889, 22.0033, 0.28 ) }
    dend_26 { pt3dadd( 19.734, -140.298, 23.0789, 0.55 ) }
    dend_26 { pt3dadd( 20.202, -141.463, 26.1545, 0.28 ) }
    dend_26 { pt3dadd( 20.5371, -142.033, 27.7663, 0.28 ) }
    dend_26 { pt3dadd( 21.0421, -142.755, 29.7113, 0.55 ) }
    dend_26 { pt3dadd( 21.9835, -143.854, 32.4636, 0.28 ) }
    dend_26 { pt3dadd( 22.1413, -143.997, 32.8126, 0.55 ) }
    dend_26 { pt3dadd( 23.0104, -144.683, 34.4564, 0.28 ) }
    dend_26 { pt3dadd( 23.1028, -144.745, 34.5943, 0.55 ) }
    dend_26 { pt3dadd( 23.8995, -145.489, 35.8309, 0.28 ) }
    dend_26 { pt3dadd( 24.2515, -145.898, 36.4435, 0.55 ) }
    dend_26 { pt3dadd( 27.0846, -148.929, 41.5291, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.4947, -112.823, 61.8855, 0.55 ) }
    dend_22 { pt3dadd( -17.306, -117.476, 72.3171, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.4947, -112.823, 61.8855, 0.55 ) }
    dend_21 { pt3dadd( -22.1731, -121.112, 69.9315, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 11
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 13
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 5
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 11
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_BP_15aa299646_0_0


