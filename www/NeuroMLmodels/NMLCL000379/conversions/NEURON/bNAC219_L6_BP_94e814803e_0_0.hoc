// Cell: bNAC219_L6_BP_94e814803e_0_0
/*
{
  "id" : "bNAC219_L6_BP_94e814803e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-3.09298, 7.88657, 2.84321, 0.83", "-5.94621, 9.98747, 3.27352, 1.11", "-7.62849, 11.2254, 3.49735, 0.83", "-9.26289, 12.4176, 3.69791, 0.83", "-10.2306, 13.0974, 3.80781, 1.11", "-13.261, 15.2218, 4.16004, 1.11", "-18.6811, 18.8588, 4.78267, 0.83", "-20.6337, 20.1191, 4.98828, 0.83", "-22.1801, 21.0875, 5.11599, 0.83", "-23.6879, 22.0473, 5.22654, 0.83", "-24.9154, 22.8383, 5.28618, 0.55", "-25.838, 23.3739, 5.34672, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "4.42158, 5.86535, -6.17168, 0.55", "6.83432, 6.36118, -6.71049, 0.55", "8.23435, 6.48634, -7.42345, 0.83", "10.4501, 6.61955, -8.74782, 0.55", "11.5197, 6.68384, -9.38712, 1.38", "14.1497, 6.84194, -10.959, 0.55", "15.2698, 6.7884, -11.709, 0.83", "21.064, 5.80659, -15.9231, 0.55", "21.6245, 5.67456, -16.3867, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.685234, -10.0461, 3.26772, 1.11", "-0.73568, -14.2744, 4.86334, 1.11", "-0.756225, -15.9964, 5.51318, 0.83", "-0.78352, -18.2842, 6.37652, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.922738, 9.81578, -1.39236, 1.11", "1.0412, 12.0954, -1.36741, 1.11", "1.22679, 15.8141, -1.18348, 1.38", "1.24098, 16.0212, -1.1694, 1.38", "1.57959, 18.582, -0.970887, 0.83", "2.05626, 21.2882, -0.610643, 0.83", "2.877, 24.34, 0.180737, 0.83", "3.34238, 25.4957, 0.628456, 0.83", "3.79986, 26.3313, 1.03966, 1.11", "5.13291, 28.3648, 2.09706, 0.55", "6.68319, 30.4854, 3.36031, 0.83", "8.70625, 32.6625, 4.78676, 0.55", "9.73524, 33.5652, 5.43002, 0.83", "11.1761, 34.7867, 6.43765, 0.55", "12.9643, 36.3404, 7.80644, 0.55", "15.4673, 38.68, 9.90445, 0.55", "18.2262, 41.3553, 12.2215, 0.55", "19.9734, 43.091, 13.9611, 0.55", "22.1229, 45.2849, 16.4258, 0.55", "22.5707, 45.7245, 16.9861, 0.83", "23.7556, 46.8857, 18.5685, 0.55", "24.7503, 47.7904, 19.8087, 0.83", "27.0447, 50.2672, 22.7531, 0.55", "27.9027, 51.1725, 23.6082, 0.83", "28.6994, 51.8387, 24.1819, 0.55", "29.4862, 52.4116, 24.617, 0.83", "31.2253, 53.4748, 25.3961, 0.83", "33.5203, 54.9237, 26.2214, 0.83", "34.9249, 55.8832, 26.5753, 0.55", "35.9966, 56.7147, 26.8516, 0.55", "38.8048, 58.8631, 27.5334, 0.83", "40.6165, 60.241, 27.9002, 0.55", "43.3634, 62.2592, 28.3444, 0.55", "45.8764, 63.9498, 28.6495, 0.55", "48.1219, 65.3813, 28.8612, 0.55", "50.9549, 67.0572, 28.9986, 0.55", "52.6835, 67.8758, 29.025, 0.55", "53.8579, 68.335, 28.9008, 0.55", "55.4121, 68.6736, 28.6021, 0.55", "57.7232, 68.819, 27.9632, 0.55", "59.1614, 68.7346, 27.5078, 0.55", "61.2675, 68.5557, 26.9913, 0.55", "65.2917, 68.3359, 26.3702, 0.55", "68.4575, 68.3019, 26.1098, 0.55", "71.8203, 68.4172, 26.0357, 0.55", "73.9825, 68.5606, 26.159, 0.55", "79.6147, 69.414, 26.8512, 0.55", "82.9566, 70.1606, 27.5121, 0.55", "85.4709, 70.8745, 28.2417, 0.55", "87.002, 71.5468, 28.7451, 0.55", "88.7779, 72.5512, 29.321, 0.55", "91.7768, 74.537, 30.0317, 0.55", "92.4617, 75.0159, 30.1003, 0.55", "94.4221, 76.2959, 30.1678, 0.55", "96.2244, 77.6615, 30.2239, 0.83", "97.2075, 78.4193, 30.239, 0.55", "98.6789, 79.7217, 30.204, 0.83", "106.494, 86.6692, 32.0612, 0.83", "113.283, 94.6581, 33.1523, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-25.838, 23.3739, 5.34672, 0.55", "-26.8171, 24.2358, 4.66215, 0.55", "-27.8818, 25.173, 3.91775, 0.55", "-29.1667, 26.304, 3.01942, 0.55", "-30.2276, 27.2379, 2.27765, 0.83", "-31.1167, 28.0206, 1.65604, 0.55", "-32.7669, 29.4732, 0.502253, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.838, 23.3739, 5.34672, 0.55", "-27.621, 23.6863, 5.13939, 0.55", "-29.5177, 23.9614, 5.10782, 0.55", "-31.6683, 24.2699, 5.12461, 0.55", "-34.7821, 24.6832, 5.43548, 0.55", "-37.3869, 24.9562, 5.88134, 0.55", "-40.1185, 25.2017, 6.46613, 0.55", "-42.7578, 25.2673, 7.31725, 0.55", "-45.0286, 25.1115, 8.271, 0.55", "-47.8569, 24.7264, 9.7651, 0.55", "-49.0859, 24.4718, 10.5878, 0.55", "-50.4131, 24.1829, 11.5344, 0.55", "-52.7544, 23.5038, 13.096, 0.55", "-54.0011, 23.147, 13.7284, 0.55", "-55.3069, 22.7349, 14.383, 0.55", "-56.8603, 22.2644, 15.0022, 0.55", "-58.5488, 21.7869, 15.6286, 0.55", "-60.9587, 21.1001, 16.4694, 0.55", "-64.1788, 20.39, 17.301, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "21.6245, 5.67456, -16.3867, 0.55", "25.4302, 6.41779, -17.1925, 0.55", "27.6085, 6.76373, -17.9761, 0.55", "29.7509, 7.01822, -18.7921, 0.55", "31.2104, 7.13688, -19.3561, 0.55", "33.3403, 7.26144, -20.1701, 0.55", "37.7498, 7.45601, -22.007, 0.55", "42.7432, 7.68828, -24.429, 0.55", "45.1501, 7.67791, -25.7902, 0.55", "46.4352, 7.65261, -26.6087, 0.55", "47.8437, 7.63866, -27.5632, 0.55", "50.3521, 7.54506, -29.2653, 0.55", "51.2584, 7.46334, -29.9208, 0.55", "55.0966, 7.24795, -32.9871, 0.55", "57.8126, 7.16323, -35.3577, 0.55", "59.3776, 7.14941, -36.7628, 0.55", "60.9376, 7.12213, -38.1647, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "21.6245, 5.67456, -16.3867, 0.83", "23.6685, 6.84026, -16.394, 0.83", "24.8367, 7.5073, -16.4516, 0.55", "26.5564, 8.53, -16.682, 0.83", "27.7128, 9.24693, -16.8712, 0.55", "29.3079, 10.2755, -17.1074, 0.83", "31.2265, 11.5458, -17.3194, 0.55", "32.1914, 12.1158, -17.388, 0.55", "34.4099, 13.1352, -17.397, 0.83", "36.4225, 13.8211, -17.1488, 0.55", "37.5476, 14.1899, -16.9022, 0.83", "39.2361, 14.7728, -16.3528, 0.55", "41.662, 15.6416, -15.2507, 0.55", "45.0297, 16.677, -13.5511, 0.55", "48.2402, 17.547, -11.7102, 0.55", "50.7835, 18.209, -10.2065, 0.55", "54.9766, 19.3184, -7.70478, 0.55", "58.0449, 20.2119, -5.80421, 0.55", "59.8983, 20.8975, -4.58397, 0.55", "63.3132, 22.4926, -2.2954, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.78352, -18.2842, 6.37652, 0.83", "-1.51255, -21.2103, 6.43622, 0.83", "-2.22283, -24.0611, 6.49438, 0.83", "-3.01586, -27.244, 6.55932, 0.83", "-3.42997, -28.9062, 6.59323, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.78352, -18.2842, 6.37652, 0.55", "-0.14841, -20.0315, 7.70207, 0.55", "0.397247, -22.175, 9.41314, 0.55", "0.650935, -24.992, 11.7526, 0.55", "0.666716, -26.0885, 12.6894, 0.83", "0.418757, -28.8909, 15.4052, 0.55", "0.163789, -30.3403, 16.8309, 0.55", "-0.401236, -33.1598, 19.7264, 0.83", "-0.955207, -35.2555, 22.0108, 0.55", "-1.57295, -36.9871, 23.8592, 0.55", "-2.81764, -40.2682, 27.2934, 0.55", "-3.80531, -42.8832, 29.9984, 0.55", "-4.55379, -44.9788, 32.2, 0.55", "-5.21571, -47.2016, 34.4697, 0.28", "-5.40751, -48.1261, 35.3816, 0.55", "-5.70991, -49.8329, 36.9659, 0.28", "-5.77769, -52.4913, 39.0203, 0.55", "-8.28203, -61.3748, 46.2529, 0.55", "-11.0761, -69.5883, 54.2196, 0.55", "-13.4275, -76.3327, 63.7097, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-32.7669, 29.4732, 0.502253, 0.55", "-35.0611, 29.5249, 1.1488, 0.55", "-36.0512, 29.4729, 1.51051, 0.83", "-37.2404, 29.3272, 2.04921, 0.55", "-38.1664, 29.1956, 2.52907, 0.83", "-40.5879, 28.9234, 3.78918, 0.55", "-41.506, 28.8306, 4.2757, 0.28", "-43.0611, 28.6587, 5.1953, 0.55", "-45.1459, 28.4398, 6.42425, 0.55", "-46.7152, 28.2908, 7.29954, 0.55", "-48.799, 28.1072, 8.41489, 0.28", "-49.328, 28.0781, 8.65276, 0.55", "-50.4147, 28.0382, 9.11391, 0.28", "-51.1388, 28.0435, 9.37386, 0.55", "-52.5917, 28.0776, 9.79293, 0.28", "-53.4362, 28.0694, 9.98888, 0.55", "-54.9301, 27.9596, 10.318, 0.28", "-55.9263, 27.8893, 10.5067, 0.55", "-62.5572, 26.3586, 13.9028, 0.55", "-68.8042, 24.0381, 17.5466, 0.55", "-74.8574, 21.0635, 21.0021, 0.55", "-80.8054, 17.4032, 23.868, 0.55", "-86.1285, 13.7239, 27.777, 0.55", "-91.9223, 10.4242, 31.3606, 0.55", "-97.8552, 8.16821, 35.5388, 0.55", "-103.743, 5.40085, 39.4416, 0.55", "-109.543, 3.01366, 43.7295, 0.55", "-115.058, 0.435688, 48.2715, 0.55", "-119.912, -3.03707, 52.9341, 0.55", "-124.862, -5.91211, 57.921, 0.55", "-129.855, -9.38764, 62.4305, 0.55", "-134.071, -13.3125, 67.3298, 0.55", "-137.185, -17.0302, 73.1525, 0.55", "-140.146, -21.8573, 78.11, 0.55", "-142.071, -26.9208, 83.3253, 0.55", "-144.414, -31.7011, 88.6565, 0.55", "-147.56, -35.9484, 94.0563, 0.55", "-152.172, -38.946, 99.2869, 0.55", "-156.168, -42.7679, 104.454, 0.55", "-158.927, -45.7529, 110.874, 0.55", "-162.803, -48.0706, 116.994, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-32.7669, 29.4732, 0.502253, 0.55", "-34.3353, 30.8703, -2.09686, 0.55", "-35.3762, 32.3673, -4.87435, 0.55", "-36.2734, 34.1108, -7.75056, 0.55", "-36.8352, 35.2025, -9.55161, 0.55", "-37.8601, 37.1939, -12.8369, 0.83", "-38.6099, 38.6509, -15.2405, 0.55", "-39.3161, 40.6577, -18.7223, 0.83", "-39.4295, 41.9235, -20.6042, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-64.1788, 20.39, 17.301, 0.28", "-65.5412, 17.8587, 17.1001, 0.28", "-66.2, 16.7596, 16.9227, 0.28", "-67.0572, 15.2025, 16.6117, 0.55", "-67.7618, 13.8359, 16.3485, 0.28", "-68.799, 11.7577, 15.9728, 0.55", "-71.6737, 5.66384, 14.9635, 0.28", "-72.6167, 3.51268, 14.4351, 0.55", "-74.05, 0.189929, 13.5084, 0.28", "-74.8765, -1.805, 12.8635, 0.55", "-75.4491, -3.18297, 12.3861, 0.28", "-76.1009, -4.76316, 11.8509, 0.55", "-78.0582, -10.0183, 10.1862, 0.28", "-78.6774, -11.6141, 9.62754, 0.55", "-79.777, -14.0819, 8.52742, 0.28", "-80.6921, -15.6809, 7.6941, 0.28", "-81.5169, -16.7584, 7.10464, 0.55", "-84.389, -19.7897, 5.54618, 0.28", "-85.7236, -21.0191, 4.94458, 0.55", "-88.9975, -23.8408, 3.41222, 0.28", "-92.2765, -26.3538, 2.0066, 0.28", "-95.8488, -28.774, 0.558052, 0.28", "-97.4855, -29.6944, 0.010397, 0.55", "-105.247, -39.3828, -3.54264, 0.55", "-113.78, -49.0117, -4.62992, 0.55", "-122.239, -58.3138, -7.70002, 0.55", "-130.992, -66.9364, -11.9291, 0.55", "-139.937, -74.7532, -17.3339, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-64.1788, 20.39, 17.301, 0.55", "-65.042, 20.3429, 17.3806, 0.55", "-67.4873, 20.1703, 17.9165, 0.55", "-68.4088, 20.0769, 18.1632, 0.55", "-70.5792, 19.7916, 18.768, 0.55", "-73.9105, 19.4059, 19.5442, 0.55", "-75.6387, 19.2592, 19.924, 0.28", "-78.3284, 18.9833, 20.4561, 0.55", "-80.3249, 18.7497, 20.7757, 0.55", "-81.1683, 18.6456, 20.9118, 0.28", "-86.2268, 18.0196, 21.7211, 0.55", "-88.5902, 17.6446, 21.9443, 0.28", "-91.7718, 17.1523, 22.0602, 0.28", "-94.5079, 16.7869, 22.007, 0.55", "-105.207, 16.5168, 24.2779, 0.55", "-115.591, 15.8206, 27.6494, 0.55", "-125.46, 13.912, 31.9443, 0.55", "-135.003, 13.6091, 37.2868, 0.55", "-143.255, 12.6634, 44.4091, 0.55", "-149.951, 12.0292, 53.0351, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "60.9376, 7.12213, -38.1647, 0.55", "64.5886, 8.27115, -41.0806, 0.55", "65.7344, 8.59945, -42.0823, 0.55", "67.1636, 8.96291, -43.3269, 0.55", "69.7493, 9.62727, -45.7413, 0.55", "72.4327, 10.2265, -48.3468, 0.55", "73.7333, 10.4131, -49.6048, 0.83", "74.7922, 10.5095, -50.7354, 0.55", "75.5737, 10.5317, -51.6749, 0.83", "77.4197, 10.3467, -54.122, 0.55", "78.9214, 10.0518, -56.1737, 0.55", "80.6502, 9.68449, -58.443, 0.55", "82.5806, 9.33985, -61.0023, 0.55", "83.8704, 9.08325, -62.7593, 0.55", "85.3232, 8.79783, -64.7927, 0.55", "86.5814, 8.61366, -66.6374, 0.55", "87.3785, 8.59234, -67.8994, 0.55", "88.3524, 8.66624, -70.3995, 0.55", "88.869, 8.6783, -71.9663, 0.55", "89.2695, 8.64414, -74.0478, 0.55", "89.7723, 8.50884, -77.5743, 0.55", "89.8675, 8.45294, -78.3732, 0.28", "91.1206, 7.66294, -88.1082, 0.28", "91.5722, 7.43932, -90.967, 0.83", "93.397, 6.4551, -101.146, 0.83", "94.3437, 5.81434, -105.907, 0.83", "94.8136, 5.47378, -107.852, 0.55", "95.3755, 5.12204, -109.753, 0.55", "97.0407, 4.32183, -113.319, 0.55", "98.8688, 3.54666, -116.474, 0.28", "99.4596, 3.31079, -116.704, 0.55", "100.788, 2.79929, -116.707, 0.28", "101.621, 2.51884, -116.576, 0.55", "102.49, 2.20268, -116.367, 0.28", "103.541, 1.86492, -116.06, 0.55", "105.119, 1.46714, -115.754, 0.28", "106.38, 1.11794, -115.557, 0.55", "107.783, 0.838613, -115.435, 0.28", "109.686, 0.493669, -115.439, 0.55", "111.822, 0.175497, -115.563, 0.55", "113.7, -0.0619829, -115.794, 0.28", "116.296, -0.343733, -116.253, 0.55", "120.786, -0.631974, -117.507, 0.55", "122.774, -0.621062, -118.285, 0.55", "123.63, -0.567184, -118.706, 0.83", "125.258, -0.428209, -119.654, 0.55", "126.391, -0.276307, -120.376, 0.83", "129.448, 0.214186, -122.341, 0.55", "131.297, 0.40054, -123.609, 0.28", "132.073, 0.417974, -124.063, 0.55", "134.181, 0.237573, -125.099, 0.28", "134.912, 0.100648, -125.424, 0.55", "136.416, -0.313587, -125.87, 0.28", "137.936, -0.92576, -126.075, 0.55", "141.003, -2.41797, -125.959, 0.28", "142.414, -3.19346, -125.76, 0.55", "144.501, -4.48463, -125.367, 0.28", "147.143, -6.1224, -124.77, 0.55", "149.057, -7.28637, -124.302, 0.55", "152.388, -9.20995, -123.417, 0.28", "153.759, -9.91782, -123.16, 0.55", "156.132, -10.9612, -122.963, 0.28", "158.514, -11.7965, -122.907, 0.55", "159.833, -12.0805, -123.038, 0.28", "161.041, -12.1681, -123.225, 0.55", "164.466, -12.1692, -124.042, 0.28", "166.932, -12.0044, -124.639, 0.28", "169.093, -11.7103, -125.163, 0.55", "171.483, -11.304, -125.851, 0.28", "172.09, -11.1701, -125.998, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "60.9376, 7.12213, -38.1647, 0.55", "61.2428, 5.4439, -40.0209, 0.55", "61.345, 4.00672, -41.4622, 0.28", "61.4392, 2.65588, -42.6468, 0.55", "61.8157, -0.215284, -45.1981, 0.28", "61.8329, -0.387879, -45.3883, 0.55", "61.9528, -1.27167, -46.4777, 0.28", "61.9632, -1.95798, -47.5206, 0.55", "61.916, -2.64152, -48.7163, 0.28", "61.8112, -3.55491, -50.4061, 0.55", "61.547, -5.86408, -54.5867, 0.55", "61.2699, -7.952, -58.4489, 0.55", "61.0241, -9.61779, -61.538, 0.55", "60.7389, -11.2619, -64.5303, 0.55", "60.6637, -11.6931, -65.2774, 0.28", "60.6033, -12.1692, -66.022, 0.55", "60.6073, -12.8578, -66.9741, 0.28", "60.7847, -14.1451, -68.541, 0.55", "61.4026, -16.7592, -71.0663, 0.55", "61.7523, -18.2039, -72.2764, 0.28", "62.0069, -19.6447, -73.5753, 0.55", "62.1857, -21.6236, -75.4744, 0.28", "62.2049, -23.198, -77.0455, 0.55", "62.1099, -25.5389, -79.394, 0.28", "62.035, -27.986, -81.7342, 0.55", "61.8679, -31.5243, -85.1665, 0.28", "61.7279, -33.4038, -87.001, 0.55", "61.5453, -35.3088, -88.9306, 0.28", "61.3602, -36.9521, -90.7558, 0.28", "61.2144, -38.961, -93.2642, 0.55", "61.2481, -40.8541, -95.5385, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "63.3132, 22.4926, -2.2954, 0.55", "66.2998, 22.2346, -1.38983, 0.55", "68.4876, 21.9303, -0.924408, 0.55", "73.2906, 21.1683, -0.147326, 0.55", "75.4606, 20.7498, 0.0171037, 0.55", "77.8365, 20.3204, 0.0685265, 0.55", "81.0401, 19.7581, -0.0957064, 0.55", "84.4355, 19.026, -0.571162, 0.55", "86.2282, 18.5854, -1.01716, 0.55", "89.8977, 17.6053, -2.4099, 0.55", "91.5908, 17.1579, -3.10579, 0.55", "95.5618, 16.0219, -4.82412, 0.55", "98.248, 15.1558, -5.94923, 0.55", "100.221, 14.522, -6.68769, 0.83", "103.367, 13.4059, -7.81404, 0.55", "106.439, 12.1925, -8.77606, 0.83", "109.039, 11.0661, -9.48181, 0.55", "111.347, 10.1159, -9.99593, 0.55", "112.657, 9.64211, -10.2259, 0.83", "115.708, 8.57239, -10.6048, 0.28", "117.222, 8.11632, -10.7077, 0.28", "118.688, 7.57378, -10.8677, 0.28", "120.274, 7.02634, -11.0544, 0.28", "122.816, 6.18665, -11.413, 0.28", "123.838, 5.86592, -11.5292, 0.55", "126.27, 5.16328, -11.5736, 0.55", "130.636, 3.89611, -11.4271, 0.55", "131.84, 3.52404, -11.3284, 0.55", "132.913, 3.16605, -11.1884, 0.83", "135.236, 2.48997, -10.7066, 0.55", "137.253, 1.91168, -10.2558, 0.55", "139.159, 1.37461, -9.8222, 0.55", "140.637, 0.926596, -9.52447, 0.55", "142.981, 0.0386626, -9.14186, 0.55", "145.745, -1.26914, -8.80649, 0.55", "150.041, -3.82055, -8.5128, 0.55", "152.396, -5.58308, -8.44825, 0.55", "154.432, -7.46727, -8.44124, 0.28", "155.036, -8.16531, -8.45398, 0.55", "156.363, -10.1166, -8.48925, 0.28", "157.489, -12.2968, -8.50208, 0.55", "158.522, -14.9793, -8.31838, 0.55", "159.217, -16.7275, -8.11093, 0.28", "159.47, -17.3398, -8.0061, 0.55", "160.129, -18.8568, -7.72243, 0.28", "161.03, -20.8218, -7.30145, 0.55", "163.386, -25.5347, -6.15416, 0.55", "164.615, -27.9006, -5.52138, 0.55", "165.756, -30.0653, -4.92017, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "63.3132, 22.4926, -2.2954, 0.55", "65.0304, 22.8898, -0.837185, 0.55", "65.5836, 23.0117, -0.401088, 0.55", "67.6545, 23.3572, 1.14174, 0.55", "69.9626, 23.7919, 2.89483, 0.55", "72.9146, 24.3512, 5.22455, 0.55", "73.7304, 24.506, 5.86225, 0.55", "75.1965, 24.726, 6.99746, 0.55", "76.808, 24.9974, 8.1744, 0.55", "78.6872, 25.3557, 9.44928, 0.55", "80.4569, 25.7189, 10.6545, 0.55", "81.4305, 25.957, 11.2641, 0.55", "82.5728, 26.2689, 11.9743, 0.55", "83.987, 26.6925, 12.822, 0.83", "86.3231, 27.3548, 13.9601, 0.55", "87.8773, 27.7256, 14.6439, 0.83", "90.0434, 28.1358, 15.528, 0.55", "90.7101, 28.2256, 15.7935, 0.55", "92.7847, 28.4001, 16.5843, 0.55", "96.5134, 28.4801, 17.8724, 0.55", "99.2521, 28.3862, 18.7683, 0.55", "101.419, 28.2207, 19.539, 0.55", "103.624, 27.9483, 20.4129, 0.55", "104.089, 27.8793, 20.6003, 0.28", "105.031, 27.7029, 20.9821, 0.83", "108.898, 26.9265, 22.5782, 0.55", "111.607, 26.3809, 23.6414, 0.55", "113.825, 25.993, 24.5647, 0.55", "115.15, 25.7587, 25.1297, 0.83", "116.192, 25.5891, 25.5748, 0.28", "117.138, 25.4358, 25.9693, 0.55", "124.389, 26.0825, 29.936, 0.55", "132.211, 25.3995, 32.6222, 0.55", "139.95, 25.7036, 35.5904, 0.55", "146.746, 25.0663, 40.3098, 0.55", "153.043, 23.4091, 45.442, 0.55", "160.129, 20.42, 48.448, 0.55", "167.199, 16.5763, 50.1357, 0.55", "175.0, 14.0647, 51.2507, 0.55", "182.678, 11.487, 52.9182, 0.55", "190.698, 9.70587, 54.0054, 0.55", "198.608, 8.36894, 56.1128, 0.55", "205.999, 5.74885, 58.7358, 0.55", "213.514, 4.57703, 62.0475, 0.55", "220.6, 4.65919, 66.3616, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.42997, -28.9062, 6.59323, 1.38", "-1.37251, -32.1217, 4.8843, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.42997, -28.9062, 6.59323, 0.55", "-5.45976, -30.8477, 7.62776, 0.55", "-7.76725, -33.389, 8.77993, 0.55", "-9.50042, -35.0346, 9.6877, 0.55", "-11.0687, -36.3946, 10.2529, 0.55", "-14.6065, -39.1682, 11.2195, 0.55", "-17.0998, -40.9995, 11.8413, 0.55", "-19.3554, -42.6395, 12.3286, 0.55", "-25.1051, -46.5871, 13.5802, 0.55", "-31.9565, -51.1238, 15.1231, 0.55", "-37.2867, -54.5376, 16.2443, 0.55", "-40.7223, -56.7911, 16.9228, 0.55", "-44.6824, -59.5222, 17.7131, 0.55", "-49.767, -63.539, 18.7758, 0.55", "-52.8113, -66.4835, 19.4555, 0.55", "-56.5445, -70.8234, 20.5501, 0.55", "-59.5831, -74.9674, 21.5227, 0.55", "-62.8086, -80.2366, 22.5632, 0.55", "-66.0137, -86.5224, 23.6586, 0.55", "-67.9422, -91.4165, 24.3539, 0.55", "-68.659, -93.8906, 24.7661, 0.55", "-69.8491, -99.783, 25.8543, 0.55", "-70.7971, -105.322, 26.9575, 0.55", "-71.2748, -110.975, 28.3082, 0.55", "-71.49, -114.223, 29.2641, 0.55", "-71.913, -124.301, 32.5296, 0.55", "-71.942, -125.043, 32.7845, 0.55", "-71.9861, -129.608, 34.405, 0.55", "-72.3127, -137.723, 37.6707, 0.55", "-72.5178, -140.424, 38.622, 0.55", "-73.3009, -144.583, 39.4918, 0.55", "-73.737, -146.113, 39.4617, 0.55", "-75.5043, -151.266, 38.3167, 0.55", "-76.8417, -154.589, 36.8057, 0.55", "-79.4003, -159.838, 33.2912, 0.55", "-82.5454, -166.271, 28.373, 0.28", "-83.4128, -167.851, 26.9364, 0.55", "-84.8328, -170.234, 24.549, 0.28", "-85.0602, -170.592, 24.1724, 0.55", "-86.2271, -172.558, 22.2813, 0.28", "-86.585, -173.228, 21.814, 0.55", "-88.1624, -176.741, 20.0819, 0.28", "-88.7352, -177.93, 19.5317, 0.55", "-90.3289, -181.373, 18.1534, 0.28", "-90.8238, -182.458, 17.7208, 0.55", "-92.5286, -186.2, 16.3035, 0.28", "-93.3089, -187.923, 15.6382, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.4275, -76.3327, 63.7097, 0.55", "-17.2825, -83.1421, 69.5526, 0.55", "-22.2555, -89.2814, 75.3813, 0.55", "-26.7749, -95.9962, 80.8662, 0.55", "-31.4185, -102.771, 86.1646, 0.55", "-34.7435, -110.443, 91.0751, 0.55", "-38.1313, -117.795, 96.4594, 0.55", "-39.7721, -126.45, 100.269, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.4275, -76.3327, 63.7097, 0.55", "-13.3865, -83.3092, 71.5751, 0.55", "-12.2712, -91.3069, 78.1644, 0.55", "-12.7561, -99.7445, 84.2463, 0.55", "-13.4406, -108.801, 89.2423, 0.55", "-13.7724, -117.726, 94.5128, 0.55", "-14.2928, -126.272, 100.425, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-39.4295, 41.9235, -20.6042, 0.83", "-38.7706, 43.8389, -23.2766, 0.83", "-37.3065, 48.5177, -29.2796, 0.55", "-36.6632, 50.5531, -31.6661, 0.83", "-35.9577, 52.7451, -34.0413, 0.55", "-35.2166, 55.0336, -36.1043, 0.55", "-34.8263, 56.1971, -36.9678, 0.28", "-34.6133, 56.9938, -37.3134, 0.55", "-33.7845, 59.6987, -37.8377, 0.28", "-33.3958, 60.8577, -37.9997, 0.55", "-32.0894, 64.9082, -38.381, 0.28", "-31.1379, 68.1378, -38.5608, 0.55", "-29.9021, 73.2242, -38.6601, 0.28", "-28.9775, 77.721, -38.6473, 0.28", "-28.6109, 80.2588, -38.5804, 0.55", "-28.3694, 83.2883, -38.4899, 0.28", "-28.3517, 84.7461, -38.4205, 0.55", "-28.5111, 88.1813, -38.4085, 0.28", "-28.7801, 90.4766, -38.5166, 0.28", "-29.0969, 92.73, -38.6912, 0.28", "-29.218, 93.9156, -38.7906, 0.55", "-29.4499, 98.6767, -39.3228, 0.28", "-29.5363, 104.289, -40.0711, 0.55", "-29.5371, 106.224, -40.3389, 0.55", "-29.5679, 108.17, -40.5619, 0.55", "-29.8639, 112.321, -41.095, 0.55", "-30.2426, 115.058, -41.4974, 0.28", "-30.5101, 116.104, -41.6581, 0.55", "-31.4344, 118.959, -42.0216, 0.28", "-32.5503, 121.999, -42.5252, 0.55", "-34.5749, 126.392, -43.4028, 0.28", "-35.6229, 128.238, -43.8196, 0.28", "-37.4229, 130.812, -44.6425, 0.55", "-39.4839, 133.498, -45.6336, 0.28", "-39.8716, 133.923, -45.8073, 0.55", "-41.2993, 135.289, -46.4075, 0.28", "-46.2746, 139.699, -48.3441, 0.55", "-53.3274, 145.171, -51.2644, 0.28", "-54.6511, 146.091, -51.8806, 0.55", "-58.3148, 148.469, -53.6243, 0.28", "-59.8598, 149.443, -54.3987, 0.28", "-61.2134, 150.249, -55.1364, 0.55", "-65.2797, 152.117, -57.5711, 0.28", "-68.194, 153.164, -59.1468, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-39.4295, 41.9235, -20.6042, 0.55", "-39.4808, 42.8272, -20.6825, 0.55", "-39.5283, 43.3595, -20.6778, 0.28", "-39.6468, 43.7414, -20.5823, 0.55", "-39.9188, 44.6184, -20.3629, 0.28", "-40.1099, 45.2344, -20.2087, 0.55", "-40.4621, 46.37, -19.9246, 0.28", "-40.7211, 46.9783, -19.6662, 0.55", "-41.8168, 48.4334, -18.5434, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-139.937, -74.7532, -17.3339, 0.55", "-145.769, -82.4283, -19.7101, 0.55", "-149.994, -90.8037, -22.7561, 0.55", "-153.474, -98.5432, -27.8783, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-139.937, -74.7532, -17.3339, 0.55", "-146.056, -82.1165, -20.6077, 0.55", "-151.127, -89.6976, -24.9702, 0.55", "-155.777, -97.4336, -29.5031, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-149.951, 12.0292, 53.0351, 0.55", "-157.652, 12.288, 58.2029, 0.55", "-165.858, 13.4903, 62.3396, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-149.951, 12.0292, 53.0351, 0.55", "-163.256, 10.2236, 57.7267, 0.55", "-176.686, 10.6521, 62.4148, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "61.2481, -40.8541, -95.5385, 0.28", "66.7794, -42.5043, -105.634, 0.28", "67.3036, -42.7382, -106.554, 0.55", "68.1887, -43.133, -108.109, 0.28", "68.9338, -43.4654, -109.417, 0.28", "69.9203, -43.9055, -111.15, 0.55", "71.2208, -44.4857, -113.434, 0.55", "72.667, -46.0846, -114.919, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "61.2481, -40.8541, -95.5385, 0.55", "61.5318, -41.3578, -96.3695, 0.55", "61.6026, -41.5772, -96.7383, 0.28", "61.6962, -41.9469, -97.3806, 0.55", "61.9022, -42.7615, -98.7956, 0.28", "62.045, -43.3259, -99.7762, 0.55", "62.2869, -44.2823, -101.438, 0.28", "62.5352, -45.4134, -103.597, 0.28", "62.6164, -45.9255, -104.604, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "165.756, -30.0653, -4.92017, 0.28", "167.099, -32.0691, -4.32432, 0.28", "168.758, -34.7278, -3.31975, 0.28", "169.795, -36.4567, -2.59928, 0.55", "170.422, -37.4148, -2.14287, 0.28", "170.755, -37.9308, -1.89265, 0.28", "172.409, -40.4765, -0.697516, 0.55", "172.782, -41.0466, -0.351778, 0.28", "173.632, -42.5526, 0.647319, 0.55", "174.361, -43.859, 1.45656, 0.28", "175.011, -44.921, 2.1011, 0.55", "175.779, -46.1873, 2.78624, 0.55", "177.038, -48.1865, 3.60965, 0.55", "177.343, -48.6761, 3.79203, 0.55", "178.43, -50.5025, 4.44322, 0.28", "178.849, -51.2474, 4.68435, 0.55", "179.444, -52.1997, 4.99762, 0.28", "180.291, -53.5486, 5.37631, 0.55", "181.748, -55.6616, 5.6589, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "165.756, -30.0653, -4.92017, 0.55", "163.118, -29.9966, -5.23938, 0.55", "160.975, -29.9409, -5.49862, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.37251, -32.1217, 4.8843, 0.83", "-1.33286, -32.2756, 4.84186, 0.83", "-0.763437, -33.6662, 4.44766, 0.83", "-0.301317, -34.8808, 4.03091, 0.55", "0.0673542, -35.8498, 3.69843, 0.55", "0.850981, -37.9094, 2.99173, 0.83", "1.80146, -40.4076, 2.13456, 0.55", "2.34099, -41.7204, 1.69294, 0.83", "3.37608, -43.8316, 1.00189, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-1.37251, -32.1217, 4.8843, 0.55", "-2.9441, -32.6297, 3.38494, 0.55", "-4.63101, -33.175, 1.77555, 0.55", "-6.62242, -33.8187, -0.124345, 0.55", "-9.04064, -34.6004, -2.43144, 0.55", "-10.4129, -35.044, -3.74063, 0.55", "-10.6886, -35.1331, -4.00363, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.2928, -126.272, 100.425, 0.55", "-14.1811, -135.259, 107.69, 0.55", "-12.178, -144.606, 114.101, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.2928, -126.272, 100.425, 0.55", "-14.3954, -134.48, 105.837, 0.55", "-15.0759, -142.66, 111.285, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-41.8168, 48.4334, -18.5434, 0.28", "-43.2438, 49.9324, -16.8887, 0.28", "-43.7882, 50.4929, -16.1832, 0.55", "-45.3479, 52.112, -14.0968, 0.28", "-46.1155, 52.9238, -13.1625, 0.55", "-48.206, 55.131, -10.7287, 0.28", "-50.3308, 57.3742, -8.25495, 0.55", "-53.8664, 60.8724, -4.14294, 0.28", "-54.6186, 61.6241, -3.26573, 0.55", "-56.2584, 63.3998, -1.39605, 0.28", "-56.894, 64.138, -0.657158, 0.55", "-64.2209, 69.0749, 5.37187, 0.55", "-71.9834, 75.3555, 9.0221, 0.55", "-78.7483, 81.7197, 14.1707, 0.55", "-84.0105, 89.2438, 19.334, 0.55", "-90.3426, 96.507, 23.6548, 0.55", "-97.7592, 102.195, 28.7831, 0.55", "-104.676, 106.937, 35.4324, 0.55", "-110.808, 110.484, 43.5101, 0.55", "-116.89, 114.639, 51.3026, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-41.8168, 48.4334, -18.5434, 0.55", "-45.0062, 48.0669, -16.4918, 0.55", "-46.6709, 47.8207, -15.4195, 0.28", "-47.9097, 47.6375, -14.6215, 0.55", "-48.9422, 47.4847, -13.9565, 0.28", "-49.6654, 47.3778, -13.4906, 0.55", "-51.6596, 47.0828, -12.2061, 0.28", "-53.0309, 46.7476, -11.5078, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-153.474, -98.5432, -27.8783, 0.55", "-155.924, -104.183, -28.4785, 0.55", "-158.188, -109.919, -28.3784, 0.55", "-160.059, -115.696, -29.4483, 0.55", "-162.512, -121.36, -29.6291, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-153.474, -98.5432, -27.8783, 0.55", "-157.309, -101.908, -33.1702, 0.55", "-160.917, -104.304, -39.1631, 0.55", "-165.009, -107.556, -44.3418, 0.55", "-170.526, -109.798, -48.7456, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-155.777, -97.4336, -29.5031, 0.55", "-160.688, -103.378, -36.5023, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-155.777, -97.4336, -29.5031, 0.55", "-159.405, -105.797, -28.2533, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "72.667, -46.0846, -114.919, 0.28", "74.689, -47.3698, -116.466, 0.28", "75.6283, -47.9668, -117.185, 0.55", "77.4194, -49.1053, -118.556, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "72.667, -46.0846, -114.919, 0.55", "72.2494, -46.7371, -116.028, 0.55", "71.4141, -48.0424, -118.245, 0.28", "71.142, -48.4676, -118.967, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "62.6164, -45.9255, -104.604, 0.28", "63.2203, -48.1853, -108.106, 0.28", "63.5193, -49.3043, -109.84, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "62.6164, -45.9255, -104.604, 0.55", "60.7775, -46.5968, -103.84, 0.55", "55.6495, -48.4689, -101.708, 0.28", "54.4313, -48.9136, -101.202, 0.55", "51.0989, -50.1302, -99.8168, 0.28", "48.9508, -50.9143, -98.9241, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "3.37608, -43.8316, 1.00189, 0.83", "3.35321, -44.1316, 0.956813, 0.83", "3.1617, -48.0681, 0.439732, 0.83", "2.87383, -50.9931, 0.351607, 0.83", "2.55479, -53.8023, 0.637166, 0.83", "2.14571, -57.5335, 1.34838, 0.83", "1.6416, -61.8226, 2.37643, 0.83", "1.22238, -66.6216, 3.75206, 0.83", "0.922869, -71.2899, 5.29112, 0.83", "0.139567, -76.9713, 7.23969, 0.83", "-0.429983, -79.5592, 8.06506, 0.83", "-0.927371, -81.5007, 8.57146, 0.83", "-1.99726, -85.2133, 9.50681, 0.83", "-2.97365, -88.543, 10.1271, 0.83", "-5.08732, -95.6688, 10.4882, 0.83", "-6.45659, -99.5566, 10.1729, 0.83", "-7.85294, -103.131, 9.63057, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.37608, -43.8316, 1.00189, 0.55", "2.20643, -46.055, 1.80503, 0.55", "1.40515, -47.6666, 2.51948, 0.55", "0.979457, -48.7017, 3.06169, 0.55", "0.478518, -50.3337, 4.01927, 0.55", "-0.313624, -53.5782, 6.06832, 0.55", "-0.778039, -56.033, 7.89062, 0.55", "-1.02828, -58.0023, 9.55223, 0.55", "-1.24649, -59.9856, 11.3935, 0.55", "-1.39123, -61.6291, 13.0112, 0.28", "-1.41502, -62.9705, 14.5337, 0.55", "-1.3148, -65.4057, 17.6679, 0.55", "-1.23865, -66.8879, 19.7923, 0.55", "-1.20974, -67.7168, 20.9795, 0.55", "-1.25359, -68.6873, 22.3584, 0.83", "-1.52232, -71.5599, 26.2718, 0.28", "-1.62567, -72.5106, 27.5407, 0.55", "-1.79277, -74.2343, 29.7447, 0.28", "-1.821, -74.7659, 30.462, 0.55", "-1.83361, -76.0242, 32.0815, 0.28", "-1.86692, -76.7402, 32.9481, 0.55", "-2.48184, -79.0458, 35.2382, 0.55", "-1.17663, -85.5001, 42.9009, 0.55", "0.797187, -91.7044, 50.6558, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-10.6886, -35.1331, -4.00363, 0.55", "-12.811, -36.1383, -7.48228, 0.55", "-13.4347, -36.3648, -8.47777, 0.55", "-15.0252, -36.9214, -10.9015, 0.55", "-18.535, -37.9804, -16.0358, 0.28", "-19.0667, -38.1167, -16.7609, 0.55", "-21.3335, -38.7417, -19.6726, 0.55", "-24.5452, -39.5429, -23.3063, 0.55", "-25.7749, -39.8013, -24.6673, 0.28", "-26.8553, -39.9358, -25.7987, 0.28", "-28.7727, -40.0816, -27.4559, 0.55", "-31.0608, -40.1594, -29.5842, 0.28", "-33.1186, -40.0467, -31.6233, 0.55", "-34.6884, -39.8102, -33.1807, 0.55", "-35.7371, -39.5532, -34.3031, 0.55", "-38.7544, -38.6562, -37.7273, 0.55", "-41.8968, -37.449, -41.286, 0.55", "-43.188, -36.8598, -42.7259, 0.28", "-44.4122, -36.3273, -44.1194, 0.55", "-46.9466, -35.4327, -46.895, 0.28", "-47.8086, -35.1585, -47.8156, 0.83", "-49.4507, -34.6046, -49.407, 0.28", "-50.7055, -34.2783, -50.3626, 0.55", "-52.5537, -33.8661, -51.7026, 0.28", "-53.2948, -33.688, -52.211, 0.55", "-54.6956, -33.3727, -53.0703, 0.55", "-56.7871, -32.6677, -54.3057, 0.55", "-58.1555, -32.1078, -55.0391, 0.28", "-59.2512, -31.5023, -55.5507, 0.55", "-60.5047, -30.6259, -56.1772, 0.28", "-60.7052, -30.4653, -56.29, 0.55", "-62.4584, -28.9914, -57.7048, 0.28", "-63.6851, -27.916, -58.8995, 0.55", "-65.2076, -26.4101, -60.7705, 0.83", "-66.408, -25.1604, -62.5045, 0.28", "-66.7082, -24.8468, -62.9951, 0.55", "-68.9755, -22.5159, -66.9392, 0.28", "-69.3601, -22.1257, -67.6862, 0.55", "-70.442, -20.8789, -70.011, 0.28", "-70.7207, -20.5587, -70.6143, 0.55", "-71.4537, -19.714, -72.0848, 0.28", "-71.9844, -19.0991, -73.0758, 0.55", "-73.2408, -17.685, -75.014, 0.28", "-74.0154, -16.9124, -76.1155, 0.55", "-75.7343, -15.3837, -78.328, 0.28", "-76.258, -14.963, -78.9725, 0.55", "-77.1088, -14.3773, -79.9351, 0.28", "-77.8416, -13.877, -80.7054, 0.55", "-79.3986, -12.8457, -82.1872, 0.28", "-79.8753, -12.5447, -82.6133, 0.55", "-83.4474, -10.1993, -85.5866, 0.28", "-84.7072, -9.25647, -86.5074, 0.55", "-86.9646, -7.42728, -87.9887, 0.28", "-87.9795, -6.55195, -88.6234, 0.55", "-90.3464, -4.54154, -89.9155, 0.28", "-91.2355, -3.84051, -90.3404, 0.55", "-94.5709, -1.59229, -91.644, 0.28", "-96.0096, -0.836799, -92.1543, 0.55", "-98.1524, -0.0991584, -92.8213, 0.55", "-99.497, 0.277093, -93.1902, 0.55", "-102.295, 1.00459, -93.7177, 0.28", "-105.084, 1.71698, -94.0581, 0.28", "-107.417, 2.32702, -94.2743, 0.55", "-110.258, 3.3411, -94.2483, 0.28", "-111.646, 4.02974, -94.0605, 0.55", "-114.859, 6.21252, -93.3229, 0.28", "-116.46, 7.70134, -92.5528, 0.55", "-117.463, 8.85398, -91.8186, 0.28", "-118.587, 10.1827, -90.6756, 0.55", "-119.976, 11.9184, -89.0486, 0.28", "-120.513, 12.5434, -88.4365, 0.55", "-123.405, 15.4492, -85.6379, 0.28", "-124.394, 16.3861, -84.7024, 0.55", "-126.77, 18.5208, -82.3988, 0.28", "-128.065, 19.6638, -81.1466, 0.55", "-129.132, 20.6013, -80.1196, 0.55", "-130.414, 21.708, -78.9306, 0.28", "-131.096, 22.2664, -78.4393, 0.55", "-133.377, 24.2046, -76.96, 0.28", "-134.528, 25.3665, -76.1711, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.6886, -35.1331, -4.00363, 0.55", "-10.3217, -35.37, -4.826, 0.55", "-9.90841, -35.5187, -5.64782, 0.55", "-9.32698, -35.639, -6.64818, 0.55", "-8.80516, -35.6743, -7.44577, 0.55", "-4.90488, -35.3879, -12.4396, 0.55", "-4.0045, -35.187, -13.586, 0.55", "-2.67077, -34.7599, -15.3155, 0.55", "-1.72287, -34.4152, -16.5483, 0.55", "-0.766459, -34.01, -17.7304, 0.28", "0.787576, -33.2869, -19.4779, 0.55", "3.21834, -32.1353, -21.953, 0.28", "3.38451, -32.08, -22.2196, 0.55", "3.99397, -32.0041, -24.2094, 0.28", "4.16919, -31.9982, -25.6114, 0.55", "4.2012, -32.068, -27.1425, 0.55", "4.19685, -32.3161, -29.8883, 0.55", "4.1964, -32.8409, -35.2742, 0.55", "4.25304, -33.2392, -38.887, 0.55", "4.30358, -33.3926, -40.1316, 0.55", "4.8386, -34.3722, -48.3, 0.55", "5.08138, -34.6226, -50.5041, 0.55", "5.30978, -34.778, -51.7283, 0.55", "6.07745, -35.2449, -54.5263, 0.55", "8.25341, -36.7488, -61.1019, 0.55", "8.90327, -37.2349, -62.8409, 0.28", "9.34129, -37.5655, -63.7968, 0.55", "10.0074, -38.1181, -65.1961, 0.28", "10.3145, -38.4102, -65.7436, 0.55", "11.5708, -39.5837, -67.0459, 0.28", "12.7073, -40.9221, -67.2223, 0.55", "13.3729, -41.8398, -67.2612, 0.28", "13.9664, -42.8145, -67.1865, 0.55", "14.4578, -43.8405, -67.0423, 0.28", "14.6541, -44.3594, -66.9844, 0.55", "15.0862, -45.698, -66.7771, 0.28", "15.1818, -46.0959, -66.7767, 0.55", "15.7106, -48.3827, -66.9022, 0.28", "15.9743, -49.4539, -67.0985, 0.55", "16.5993, -51.772, -67.7777, 0.28", "16.8568, -52.6373, -68.1232, 0.55", "17.7965, -55.5078, -69.4333, 0.28", "18.027, -56.208, -69.7806, 0.55", "18.6926, -58.4192, -70.953, 0.28", "18.8231, -58.93, -71.1875, 0.55", "19.1256, -60.2714, -71.7927, 0.28", "19.3023, -61.0551, -72.2181, 0.55", "19.4967, -61.8327, -72.6973, 0.55", "19.8863, -63.3835, -73.642, 0.28", "20.2038, -64.3644, -74.3401, 0.55", "21.4032, -66.9243, -76.6463, 0.28", "21.9074, -67.7887, -77.594, 0.55", "22.2762, -68.349, -78.2403, 0.28", "22.6721, -68.8746, -78.8892, 0.55", "23.9574, -70.3883, -80.8636, 0.28", "24.9435, -71.5554, -82.3176, 0.55", "26.6572, -73.7131, -84.5933, 0.28", "27.2006, -74.3867, -85.3064, 0.55", "28.3036, -75.6385, -86.5469, 0.28", "28.6866, -76.0508, -86.9197, 0.55", "29.3567, -76.7109, -87.3769, 0.28", "29.9703, -77.2735, -87.7187, 0.55", "31.7108, -78.6995, -88.4461, 0.28", "33.7397, -80.2478, -89.2494, 0.28", "34.798, -80.9807, -89.577, 0.28", "35.859, -81.6875, -89.9814, 0.55", "37.4276, -82.6469, -90.5851, 0.28", "38.1318, -83.0626, -90.8382, 0.83", "39.9372, -84.1446, -91.4064, 0.28", "40.7058, -84.6331, -91.6991, 0.55", "44.0117, -86.9157, -93.149, 0.28", "45.6253, -88.0811, -94.0222, 0.28", "46.7772, -88.9301, -94.7457, 0.55", "47.4214, -89.4419, -95.2544, 0.55", "49.0786, -90.8291, -96.7663, 0.28", "50.5824, -92.2093, -98.2518, 0.55", "51.9373, -93.5179, -99.6006, 0.28", "53.1316, -94.7242, -100.903, 0.55", "54.1255, -95.7063, -101.973, 0.28", "54.9776, -96.4365, -102.797, 0.55", "57.1093, -98.0576, -104.676, 0.28", "58.2071, -98.8769, -105.574, 0.55", "59.8766, -100.112, -106.849, 0.28", "61.2665, -101.077, -107.859, 0.55", "64.5618, -103.18, -110.241, 0.28", "65.8957, -103.953, -111.322, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.178, -144.606, 114.101, 0.55", "-11.1564, -152.65, 119.051, 0.55", "-8.17822, -160.94, 122.457, 0.55", "-6.35822, -169.157, 126.8, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.178, -144.606, 114.101, 0.55", "-11.821, -151.221, 120.945, 0.55", "-13.6399, -157.713, 127.777, 0.55", "-16.912, -163.019, 135.203, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.0759, -142.66, 111.285, 0.55", "-14.4556, -149.962, 116.824, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.0759, -142.66, 111.285, 0.55", "-16.0968, -150.646, 116.192, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.85294, -103.131, 9.63057, 0.83", "-7.34876, -106.131, 9.77081, 0.83", "-6.73, -108.677, 10.0017, 0.83", "-6.11494, -111.208, 10.2313, 0.83", "-5.53084, -113.611, 10.4493, 0.83", "-4.63069, -117.315, 10.7852, 0.83", "-3.73704, -120.991, 11.1187, 0.83", "-2.8217, -123.453, 11.5276, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.85294, -103.131, 9.63057, 0.55", "-7.09058, -105.121, 8.76118, 0.55", "-6.69123, -106.661, 7.90943, 0.55", "-6.50934, -107.788, 7.2372, 0.55", "-6.5516, -109.079, 6.4716, 0.83", "-6.7959, -110.526, 5.54276, 0.55", "-7.03485, -111.941, 4.63425, 0.83", "-7.4598, -113.459, 3.60782, 0.55", "-7.76784, -114.335, 2.95304, 0.83", "-9.01542, -117.146, 0.757608, 0.55", "-10.2331, -119.322, -0.934136, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.797187, -91.7044, 50.6558, 0.55", "0.877582, -96.2922, 55.4925, 0.55", "0.683191, -100.066, 61.0455, 0.55", "0.579525, -103.171, 67.0456, 0.55", "0.415072, -105.42, 73.4577, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.797187, -91.7044, 50.6558, 0.55", "0.335524, -99.144, 58.5794, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.8217, -123.453, 11.5276, 0.55", "-2.6854, -125.097, 11.9273, 0.55", "-2.43248, -127.203, 12.4571, 0.55", "-2.19861, -129.192, 12.9468, 0.55", "-2.05805, -130.603, 13.2835, 0.55", "-1.85253, -133.117, 13.8628, 0.55", "-1.26823, -140.194, 15.2713, 0.55", "-1.06948, -142.602, 15.6253, 0.55", "-0.966593, -144.298, 15.7935, 0.55", "-0.91332, -146.235, 15.8355, 0.55", "-0.962472, -147.727, 15.7591, 0.55", "-1.05637, -151.222, 15.3955, 0.55", "-1.21369, -153.866, 15.1635, 0.55", "-1.24814, -155.608, 15.0342, 0.55", "-1.23383, -160.128, 14.9191, 0.55", "-1.17295, -163.167, 14.9748, 0.55", "-0.964657, -167.092, 15.2386, 0.55", "-0.500573, -171.56, 15.8212, 0.55", "0.024745, -174.561, 16.3093, 0.55", "0.397744, -176.34, 16.6188, 0.55", "0.711963, -177.977, 16.9153, 0.55", "1.0918, -180.051, 17.1847, 0.55", "1.78226, -185.038, 17.5589, 0.55", "2.07162, -186.974, 17.6056, 0.55", "2.34028, -189.123, 17.6705, 0.55", "2.71138, -192.348, 17.7665, 0.55", "2.90509, -194.815, 17.9209, 0.55", "2.95113, -197.144, 18.1097, 0.55", "2.90547, -199.354, 18.3413, 0.55", "2.84346, -201.507, 18.6153, 0.55", "2.79991, -203.04, 18.7914, 0.55", "2.69807, -205.548, 18.9914, 0.55", "2.41858, -208.55, 19.0414, 0.55", "2.26063, -210.01, 18.944, 0.55", "2.08446, -211.291, 18.7609, 0.55", "1.77975, -213.717, 18.2239, 0.55", "1.55009, -215.253, 17.8519, 0.55", "1.3237, -217.149, 17.4487, 0.55", "1.16015, -218.478, 17.2666, 0.55", "0.747727, -221.931, 16.9516, 0.55", "0.476352, -224.513, 16.9215, 0.55", "0.164447, -228.51, 17.215, 0.55", "0.140478, -231.1, 17.6021, 0.55", "0.141602, -233.82, 18.1015, 0.28", "0.140353, -234.911, 18.358, 0.28", "0.249713, -237.564, 19.2107, 0.28", "0.429972, -240.015, 20.191, 0.28", "1.11439, -243.296, 21.6426, 0.28", "2.57178, -250.737, 22.6858, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.8217, -123.453, 11.5276, 0.55", "-1.27017, -124.144, 11.6539, 0.55", "1.91617, -125.811, 12.1499, 0.55", "4.66152, -127.404, 12.6975, 0.28", "7.60672, -129.193, 13.3748, 0.55", "9.40215, -130.314, 14.0229, 0.28", "12.5339, -132.312, 15.4326, 0.55", "13.8486, -133.32, 16.3963, 0.28", "14.3291, -133.681, 16.8317, 0.28", "15.1719, -134.209, 17.5912, 0.55", "18.496, -135.994, 20.2727, 0.28", "19.9194, -136.703, 21.3524, 0.55", "24.2464, -138.8, 24.1003, 0.28", "26.6116, -139.861, 25.4137, 0.28", "29.5589, -141.223, 26.873, 0.55", "33.9395, -143.339, 28.6559, 0.28", "34.5325, -143.623, 28.8321, 0.55", "37.448, -145.021, 29.4992, 0.28", "37.711, -145.152, 29.5305, 0.55", "40.001, -146.6, 29.8913, 0.28", "41.0847, -147.37, 30.1347, 0.55", "50.0661, -153.16, 32.1969, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.415072, -105.42, 73.4577, 0.55", "4.0731, -110.245, 84.9732, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.415072, -105.42, 73.4577, 0.55", "-0.0704539, -111.668, 83.0461, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_BP_94e814803e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.09298, 7.88657, 2.84321, 0.83 ) }
    dend_43 { pt3dadd( -5.94621, 9.98747, 3.27352, 1.11 ) }
    dend_43 { pt3dadd( -7.62849, 11.2254, 3.49735, 0.83 ) }
    dend_43 { pt3dadd( -9.26289, 12.4176, 3.69791, 0.83 ) }
    dend_43 { pt3dadd( -10.2306, 13.0974, 3.80781, 1.11 ) }
    dend_43 { pt3dadd( -13.261, 15.2218, 4.16004, 1.11 ) }
    dend_43 { pt3dadd( -18.6811, 18.8588, 4.78267, 0.83 ) }
    dend_43 { pt3dadd( -20.6337, 20.1191, 4.98828, 0.83 ) }
    dend_43 { pt3dadd( -22.1801, 21.0875, 5.11599, 0.83 ) }
    dend_43 { pt3dadd( -23.6879, 22.0473, 5.22654, 0.83 ) }
    dend_43 { pt3dadd( -24.9154, 22.8383, 5.28618, 0.55 ) }
    dend_43 { pt3dadd( -25.838, 23.3739, 5.34672, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.42158, 5.86535, -6.17168, 0.55 ) }
    dend_28 { pt3dadd( 6.83432, 6.36118, -6.71049, 0.55 ) }
    dend_28 { pt3dadd( 8.23435, 6.48634, -7.42345, 0.83 ) }
    dend_28 { pt3dadd( 10.4501, 6.61955, -8.74782, 0.55 ) }
    dend_28 { pt3dadd( 11.5197, 6.68384, -9.38712, 1.38 ) }
    dend_28 { pt3dadd( 14.1497, 6.84194, -10.959, 0.55 ) }
    dend_28 { pt3dadd( 15.2698, 6.7884, -11.709, 0.83 ) }
    dend_28 { pt3dadd( 21.064, 5.80659, -15.9231, 0.55 ) }
    dend_28 { pt3dadd( 21.6245, 5.67456, -16.3867, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.685234, -10.0461, 3.26772, 1.11 ) }
    dend_1 { pt3dadd( -0.73568, -14.2744, 4.86334, 1.11 ) }
    dend_1 { pt3dadd( -0.756225, -15.9964, 5.51318, 0.83 ) }
    dend_1 { pt3dadd( -0.78352, -18.2842, 6.37652, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.922738, 9.81578, -1.39236, 1.11 ) }
    dend_0 { pt3dadd( 1.0412, 12.0954, -1.36741, 1.11 ) }
    dend_0 { pt3dadd( 1.22679, 15.8141, -1.18348, 1.38 ) }
    dend_0 { pt3dadd( 1.24098, 16.0212, -1.1694, 1.38 ) }
    dend_0 { pt3dadd( 1.57959, 18.582, -0.970887, 0.83 ) }
    dend_0 { pt3dadd( 2.05626, 21.2882, -0.610643, 0.83 ) }
    dend_0 { pt3dadd( 2.877, 24.34, 0.180737, 0.83 ) }
    dend_0 { pt3dadd( 3.34238, 25.4957, 0.628456, 0.83 ) }
    dend_0 { pt3dadd( 3.79986, 26.3313, 1.03966, 1.11 ) }
    dend_0 { pt3dadd( 5.13291, 28.3648, 2.09706, 0.55 ) }
    dend_0 { pt3dadd( 6.68319, 30.4854, 3.36031, 0.83 ) }
    dend_0 { pt3dadd( 8.70625, 32.6625, 4.78676, 0.55 ) }
    dend_0 { pt3dadd( 9.73524, 33.5652, 5.43002, 0.83 ) }
    dend_0 { pt3dadd( 11.1761, 34.7867, 6.43765, 0.55 ) }
    dend_0 { pt3dadd( 12.9643, 36.3404, 7.80644, 0.55 ) }
    dend_0 { pt3dadd( 15.4673, 38.68, 9.90445, 0.55 ) }
    dend_0 { pt3dadd( 18.2262, 41.3553, 12.2215, 0.55 ) }
    dend_0 { pt3dadd( 19.9734, 43.091, 13.9611, 0.55 ) }
    dend_0 { pt3dadd( 22.1229, 45.2849, 16.4258, 0.55 ) }
    dend_0 { pt3dadd( 22.5707, 45.7245, 16.9861, 0.83 ) }
    dend_0 { pt3dadd( 23.7556, 46.8857, 18.5685, 0.55 ) }
    dend_0 { pt3dadd( 24.7503, 47.7904, 19.8087, 0.83 ) }
    dend_0 { pt3dadd( 27.0447, 50.2672, 22.7531, 0.55 ) }
    dend_0 { pt3dadd( 27.9027, 51.1725, 23.6082, 0.83 ) }
    dend_0 { pt3dadd( 28.6994, 51.8387, 24.1819, 0.55 ) }
    dend_0 { pt3dadd( 29.4862, 52.4116, 24.617, 0.83 ) }
    dend_0 { pt3dadd( 31.2253, 53.4748, 25.3961, 0.83 ) }
    dend_0 { pt3dadd( 33.5203, 54.9237, 26.2214, 0.83 ) }
    dend_0 { pt3dadd( 34.9249, 55.8832, 26.5753, 0.55 ) }
    dend_0 { pt3dadd( 35.9966, 56.7147, 26.8516, 0.55 ) }
    dend_0 { pt3dadd( 38.8048, 58.8631, 27.5334, 0.83 ) }
    dend_0 { pt3dadd( 40.6165, 60.241, 27.9002, 0.55 ) }
    dend_0 { pt3dadd( 43.3634, 62.2592, 28.3444, 0.55 ) }
    dend_0 { pt3dadd( 45.8764, 63.9498, 28.6495, 0.55 ) }
    dend_0 { pt3dadd( 48.1219, 65.3813, 28.8612, 0.55 ) }
    dend_0 { pt3dadd( 50.9549, 67.0572, 28.9986, 0.55 ) }
    dend_0 { pt3dadd( 52.6835, 67.8758, 29.025, 0.55 ) }
    dend_0 { pt3dadd( 53.8579, 68.335, 28.9008, 0.55 ) }
    dend_0 { pt3dadd( 55.4121, 68.6736, 28.6021, 0.55 ) }
    dend_0 { pt3dadd( 57.7232, 68.819, 27.9632, 0.55 ) }
    dend_0 { pt3dadd( 59.1614, 68.7346, 27.5078, 0.55 ) }
    dend_0 { pt3dadd( 61.2675, 68.5557, 26.9913, 0.55 ) }
    dend_0 { pt3dadd( 65.2917, 68.3359, 26.3702, 0.55 ) }
    dend_0 { pt3dadd( 68.4575, 68.3019, 26.1098, 0.55 ) }
    dend_0 { pt3dadd( 71.8203, 68.4172, 26.0357, 0.55 ) }
    dend_0 { pt3dadd( 73.9825, 68.5606, 26.159, 0.55 ) }
    dend_0 { pt3dadd( 79.6147, 69.414, 26.8512, 0.55 ) }
    dend_0 { pt3dadd( 82.9566, 70.1606, 27.5121, 0.55 ) }
    dend_0 { pt3dadd( 85.4709, 70.8745, 28.2417, 0.55 ) }
    dend_0 { pt3dadd( 87.002, 71.5468, 28.7451, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 88.7779, 72.5512, 29.321, 0.55 ) }
    dend_0 { pt3dadd( 91.7768, 74.537, 30.0317, 0.55 ) }
    dend_0 { pt3dadd( 92.4617, 75.0159, 30.1003, 0.55 ) }
    dend_0 { pt3dadd( 94.4221, 76.2959, 30.1678, 0.55 ) }
    dend_0 { pt3dadd( 96.2244, 77.6615, 30.2239, 0.83 ) }
    dend_0 { pt3dadd( 97.2075, 78.4193, 30.239, 0.55 ) }
    dend_0 { pt3dadd( 98.6789, 79.7217, 30.204, 0.83 ) }
    dend_0 { pt3dadd( 106.494, 86.6692, 32.0612, 0.83 ) }
    dend_0 { pt3dadd( 113.283, 94.6581, 33.1523, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -25.838, 23.3739, 5.34672, 0.55 ) }
    dend_55 { pt3dadd( -26.8171, 24.2358, 4.66215, 0.55 ) }
    dend_55 { pt3dadd( -27.8818, 25.173, 3.91775, 0.55 ) }
    dend_55 { pt3dadd( -29.1667, 26.304, 3.01942, 0.55 ) }
    dend_55 { pt3dadd( -30.2276, 27.2379, 2.27765, 0.83 ) }
    dend_55 { pt3dadd( -31.1167, 28.0206, 1.65604, 0.55 ) }
    dend_55 { pt3dadd( -32.7669, 29.4732, 0.502253, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.838, 23.3739, 5.34672, 0.55 ) }
    dend_44 { pt3dadd( -27.621, 23.6863, 5.13939, 0.55 ) }
    dend_44 { pt3dadd( -29.5177, 23.9614, 5.10782, 0.55 ) }
    dend_44 { pt3dadd( -31.6683, 24.2699, 5.12461, 0.55 ) }
    dend_44 { pt3dadd( -34.7821, 24.6832, 5.43548, 0.55 ) }
    dend_44 { pt3dadd( -37.3869, 24.9562, 5.88134, 0.55 ) }
    dend_44 { pt3dadd( -40.1185, 25.2017, 6.46613, 0.55 ) }
    dend_44 { pt3dadd( -42.7578, 25.2673, 7.31725, 0.55 ) }
    dend_44 { pt3dadd( -45.0286, 25.1115, 8.271, 0.55 ) }
    dend_44 { pt3dadd( -47.8569, 24.7264, 9.7651, 0.55 ) }
    dend_44 { pt3dadd( -49.0859, 24.4718, 10.5878, 0.55 ) }
    dend_44 { pt3dadd( -50.4131, 24.1829, 11.5344, 0.55 ) }
    dend_44 { pt3dadd( -52.7544, 23.5038, 13.096, 0.55 ) }
    dend_44 { pt3dadd( -54.0011, 23.147, 13.7284, 0.55 ) }
    dend_44 { pt3dadd( -55.3069, 22.7349, 14.383, 0.55 ) }
    dend_44 { pt3dadd( -56.8603, 22.2644, 15.0022, 0.55 ) }
    dend_44 { pt3dadd( -58.5488, 21.7869, 15.6286, 0.55 ) }
    dend_44 { pt3dadd( -60.9587, 21.1001, 16.4694, 0.55 ) }
    dend_44 { pt3dadd( -64.1788, 20.39, 17.301, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 21.6245, 5.67456, -16.3867, 0.55 ) }
    dend_34 { pt3dadd( 25.4302, 6.41779, -17.1925, 0.55 ) }
    dend_34 { pt3dadd( 27.6085, 6.76373, -17.9761, 0.55 ) }
    dend_34 { pt3dadd( 29.7509, 7.01822, -18.7921, 0.55 ) }
    dend_34 { pt3dadd( 31.2104, 7.13688, -19.3561, 0.55 ) }
    dend_34 { pt3dadd( 33.3403, 7.26144, -20.1701, 0.55 ) }
    dend_34 { pt3dadd( 37.7498, 7.45601, -22.007, 0.55 ) }
    dend_34 { pt3dadd( 42.7432, 7.68828, -24.429, 0.55 ) }
    dend_34 { pt3dadd( 45.1501, 7.67791, -25.7902, 0.55 ) }
    dend_34 { pt3dadd( 46.4352, 7.65261, -26.6087, 0.55 ) }
    dend_34 { pt3dadd( 47.8437, 7.63866, -27.5632, 0.55 ) }
    dend_34 { pt3dadd( 50.3521, 7.54506, -29.2653, 0.55 ) }
    dend_34 { pt3dadd( 51.2584, 7.46334, -29.9208, 0.55 ) }
    dend_34 { pt3dadd( 55.0966, 7.24795, -32.9871, 0.55 ) }
    dend_34 { pt3dadd( 57.8126, 7.16323, -35.3577, 0.55 ) }
    dend_34 { pt3dadd( 59.3776, 7.14941, -36.7628, 0.55 ) }
    dend_34 { pt3dadd( 60.9376, 7.12213, -38.1647, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 21.6245, 5.67456, -16.3867, 0.83 ) }
    dend_29 { pt3dadd( 23.6685, 6.84026, -16.394, 0.83 ) }
    dend_29 { pt3dadd( 24.8367, 7.5073, -16.4516, 0.55 ) }
    dend_29 { pt3dadd( 26.5564, 8.53, -16.682, 0.83 ) }
    dend_29 { pt3dadd( 27.7128, 9.24693, -16.8712, 0.55 ) }
    dend_29 { pt3dadd( 29.3079, 10.2755, -17.1074, 0.83 ) }
    dend_29 { pt3dadd( 31.2265, 11.5458, -17.3194, 0.55 ) }
    dend_29 { pt3dadd( 32.1914, 12.1158, -17.388, 0.55 ) }
    dend_29 { pt3dadd( 34.4099, 13.1352, -17.397, 0.83 ) }
    dend_29 { pt3dadd( 36.4225, 13.8211, -17.1488, 0.55 ) }
    dend_29 { pt3dadd( 37.5476, 14.1899, -16.9022, 0.83 ) }
    dend_29 { pt3dadd( 39.2361, 14.7728, -16.3528, 0.55 ) }
    dend_29 { pt3dadd( 41.662, 15.6416, -15.2507, 0.55 ) }
    dend_29 { pt3dadd( 45.0297, 16.677, -13.5511, 0.55 ) }
    dend_29 { pt3dadd( 48.2402, 17.547, -11.7102, 0.55 ) }
    dend_29 { pt3dadd( 50.7835, 18.209, -10.2065, 0.55 ) }
    dend_29 { pt3dadd( 54.9766, 19.3184, -7.70478, 0.55 ) }
    dend_29 { pt3dadd( 58.0449, 20.2119, -5.80421, 0.55 ) }
    dend_29 { pt3dadd( 59.8983, 20.8975, -4.58397, 0.55 ) }
    dend_29 { pt3dadd( 63.3132, 22.4926, -2.2954, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.78352, -18.2842, 6.37652, 0.83 ) }
    dend_11 { pt3dadd( -1.51255, -21.2103, 6.43622, 0.83 ) }
    dend_11 { pt3dadd( -2.22283, -24.0611, 6.49438, 0.83 ) }
    dend_11 { pt3dadd( -3.01586, -27.244, 6.55932, 0.83 ) }
    dend_11 { pt3dadd( -3.42997, -28.9062, 6.59323, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.78352, -18.2842, 6.37652, 0.55 ) }
    dend_2 { pt3dadd( -0.14841, -20.0315, 7.70207, 0.55 ) }
    dend_2 { pt3dadd( 0.397247, -22.175, 9.41314, 0.55 ) }
    dend_2 { pt3dadd( 0.650935, -24.992, 11.7526, 0.55 ) }
    dend_2 { pt3dadd( 0.666716, -26.0885, 12.6894, 0.83 ) }
    dend_2 { pt3dadd( 0.418757, -28.8909, 15.4052, 0.55 ) }
    dend_2 { pt3dadd( 0.163789, -30.3403, 16.8309, 0.55 ) }
    dend_2 { pt3dadd( -0.401236, -33.1598, 19.7264, 0.83 ) }
    dend_2 { pt3dadd( -0.955207, -35.2555, 22.0108, 0.55 ) }
    dend_2 { pt3dadd( -1.57295, -36.9871, 23.8592, 0.55 ) }
    dend_2 { pt3dadd( -2.81764, -40.2682, 27.2934, 0.55 ) }
    dend_2 { pt3dadd( -3.80531, -42.8832, 29.9984, 0.55 ) }
    dend_2 { pt3dadd( -4.55379, -44.9788, 32.2, 0.55 ) }
    dend_2 { pt3dadd( -5.21571, -47.2016, 34.4697, 0.28 ) }
    dend_2 { pt3dadd( -5.40751, -48.1261, 35.3816, 0.55 ) }
    dend_2 { pt3dadd( -5.70991, -49.8329, 36.9659, 0.28 ) }
    dend_2 { pt3dadd( -5.77769, -52.4913, 39.0203, 0.55 ) }
    dend_2 { pt3dadd( -8.28203, -61.3748, 46.2529, 0.55 ) }
    dend_2 { pt3dadd( -11.0761, -69.5883, 54.2196, 0.55 ) }
    dend_2 { pt3dadd( -13.4275, -76.3327, 63.7097, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -32.7669, 29.4732, 0.502253, 0.55 ) }
    dend_61 { pt3dadd( -35.0611, 29.5249, 1.1488, 0.55 ) }
    dend_61 { pt3dadd( -36.0512, 29.4729, 1.51051, 0.83 ) }
    dend_61 { pt3dadd( -37.2404, 29.3272, 2.04921, 0.55 ) }
    dend_61 { pt3dadd( -38.1664, 29.1956, 2.52907, 0.83 ) }
    dend_61 { pt3dadd( -40.5879, 28.9234, 3.78918, 0.55 ) }
    dend_61 { pt3dadd( -41.506, 28.8306, 4.2757, 0.28 ) }
    dend_61 { pt3dadd( -43.0611, 28.6587, 5.1953, 0.55 ) }
    dend_61 { pt3dadd( -45.1459, 28.4398, 6.42425, 0.55 ) }
    dend_61 { pt3dadd( -46.7152, 28.2908, 7.29954, 0.55 ) }
    dend_61 { pt3dadd( -48.799, 28.1072, 8.41489, 0.28 ) }
    dend_61 { pt3dadd( -49.328, 28.0781, 8.65276, 0.55 ) }
    dend_61 { pt3dadd( -50.4147, 28.0382, 9.11391, 0.28 ) }
    dend_61 { pt3dadd( -51.1388, 28.0435, 9.37386, 0.55 ) }
    dend_61 { pt3dadd( -52.5917, 28.0776, 9.79293, 0.28 ) }
    dend_61 { pt3dadd( -53.4362, 28.0694, 9.98888, 0.55 ) }
    dend_61 { pt3dadd( -54.9301, 27.9596, 10.318, 0.28 ) }
    dend_61 { pt3dadd( -55.9263, 27.8893, 10.5067, 0.55 ) }
    dend_61 { pt3dadd( -62.5572, 26.3586, 13.9028, 0.55 ) }
    dend_61 { pt3dadd( -68.8042, 24.0381, 17.5466, 0.55 ) }
    dend_61 { pt3dadd( -74.8574, 21.0635, 21.0021, 0.55 ) }
    dend_61 { pt3dadd( -80.8054, 17.4032, 23.868, 0.55 ) }
    dend_61 { pt3dadd( -86.1285, 13.7239, 27.777, 0.55 ) }
    dend_61 { pt3dadd( -91.9223, 10.4242, 31.3606, 0.55 ) }
    dend_61 { pt3dadd( -97.8552, 8.16821, 35.5388, 0.55 ) }
    dend_61 { pt3dadd( -103.743, 5.40085, 39.4416, 0.55 ) }
    dend_61 { pt3dadd( -109.543, 3.01366, 43.7295, 0.55 ) }
    dend_61 { pt3dadd( -115.058, 0.435688, 48.2715, 0.55 ) }
    dend_61 { pt3dadd( -119.912, -3.03707, 52.9341, 0.55 ) }
    dend_61 { pt3dadd( -124.862, -5.91211, 57.921, 0.55 ) }
    dend_61 { pt3dadd( -129.855, -9.38764, 62.4305, 0.55 ) }
    dend_61 { pt3dadd( -134.071, -13.3125, 67.3298, 0.55 ) }
    dend_61 { pt3dadd( -137.185, -17.0302, 73.1525, 0.55 ) }
    dend_61 { pt3dadd( -140.146, -21.8573, 78.11, 0.55 ) }
    dend_61 { pt3dadd( -142.071, -26.9208, 83.3253, 0.55 ) }
    dend_61 { pt3dadd( -144.414, -31.7011, 88.6565, 0.55 ) }
    dend_61 { pt3dadd( -147.56, -35.9484, 94.0563, 0.55 ) }
    dend_61 { pt3dadd( -152.172, -38.946, 99.2869, 0.55 ) }
    dend_61 { pt3dadd( -156.168, -42.7679, 104.454, 0.55 ) }
    dend_61 { pt3dadd( -158.927, -45.7529, 110.874, 0.55 ) }
    dend_61 { pt3dadd( -162.803, -48.0706, 116.994, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -32.7669, 29.4732, 0.502253, 0.55 ) }
    dend_56 { pt3dadd( -34.3353, 30.8703, -2.09686, 0.55 ) }
    dend_56 { pt3dadd( -35.3762, 32.3673, -4.87435, 0.55 ) }
    dend_56 { pt3dadd( -36.2734, 34.1108, -7.75056, 0.55 ) }
    dend_56 { pt3dadd( -36.8352, 35.2025, -9.55161, 0.55 ) }
    dend_56 { pt3dadd( -37.8601, 37.1939, -12.8369, 0.83 ) }
    dend_56 { pt3dadd( -38.6099, 38.6509, -15.2405, 0.55 ) }
    dend_56 { pt3dadd( -39.3161, 40.6577, -18.7223, 0.83 ) }
    dend_56 { pt3dadd( -39.4295, 41.9235, -20.6042, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -64.1788, 20.39, 17.301, 0.28 ) }
    dend_48 { pt3dadd( -65.5412, 17.8587, 17.1001, 0.28 ) }
    dend_48 { pt3dadd( -66.2, 16.7596, 16.9227, 0.28 ) }
    dend_48 { pt3dadd( -67.0572, 15.2025, 16.6117, 0.55 ) }
    dend_48 { pt3dadd( -67.7618, 13.8359, 16.3485, 0.28 ) }
    dend_48 { pt3dadd( -68.799, 11.7577, 15.9728, 0.55 ) }
    dend_48 { pt3dadd( -71.6737, 5.66384, 14.9635, 0.28 ) }
    dend_48 { pt3dadd( -72.6167, 3.51268, 14.4351, 0.55 ) }
    dend_48 { pt3dadd( -74.05, 0.189929, 13.5084, 0.28 ) }
    dend_48 { pt3dadd( -74.8765, -1.805, 12.8635, 0.55 ) }
    dend_48 { pt3dadd( -75.4491, -3.18297, 12.3861, 0.28 ) }
    dend_48 { pt3dadd( -76.1009, -4.76316, 11.8509, 0.55 ) }
    dend_48 { pt3dadd( -78.0582, -10.0183, 10.1862, 0.28 ) }
    dend_48 { pt3dadd( -78.6774, -11.6141, 9.62754, 0.55 ) }
    dend_48 { pt3dadd( -79.777, -14.0819, 8.52742, 0.28 ) }
    dend_48 { pt3dadd( -80.6921, -15.6809, 7.6941, 0.28 ) }
    dend_48 { pt3dadd( -81.5169, -16.7584, 7.10464, 0.55 ) }
    dend_48 { pt3dadd( -84.389, -19.7897, 5.54618, 0.28 ) }
    dend_48 { pt3dadd( -85.7236, -21.0191, 4.94458, 0.55 ) }
    dend_48 { pt3dadd( -88.9975, -23.8408, 3.41222, 0.28 ) }
    dend_48 { pt3dadd( -92.2765, -26.3538, 2.0066, 0.28 ) }
    dend_48 { pt3dadd( -95.8488, -28.774, 0.558052, 0.28 ) }
    dend_48 { pt3dadd( -97.4855, -29.6944, 0.010397, 0.55 ) }
    dend_48 { pt3dadd( -105.247, -39.3828, -3.54264, 0.55 ) }
    dend_48 { pt3dadd( -113.78, -49.0117, -4.62992, 0.55 ) }
    dend_48 { pt3dadd( -122.239, -58.3138, -7.70002, 0.55 ) }
    dend_48 { pt3dadd( -130.992, -66.9364, -11.9291, 0.55 ) }
    dend_48 { pt3dadd( -139.937, -74.7532, -17.3339, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -64.1788, 20.39, 17.301, 0.55 ) }
    dend_45 { pt3dadd( -65.042, 20.3429, 17.3806, 0.55 ) }
    dend_45 { pt3dadd( -67.4873, 20.1703, 17.9165, 0.55 ) }
    dend_45 { pt3dadd( -68.4088, 20.0769, 18.1632, 0.55 ) }
    dend_45 { pt3dadd( -70.5792, 19.7916, 18.768, 0.55 ) }
    dend_45 { pt3dadd( -73.9105, 19.4059, 19.5442, 0.55 ) }
    dend_45 { pt3dadd( -75.6387, 19.2592, 19.924, 0.28 ) }
    dend_45 { pt3dadd( -78.3284, 18.9833, 20.4561, 0.55 ) }
    dend_45 { pt3dadd( -80.3249, 18.7497, 20.7757, 0.55 ) }
    dend_45 { pt3dadd( -81.1683, 18.6456, 20.9118, 0.28 ) }
    dend_45 { pt3dadd( -86.2268, 18.0196, 21.7211, 0.55 ) }
    dend_45 { pt3dadd( -88.5902, 17.6446, 21.9443, 0.28 ) }
    dend_45 { pt3dadd( -91.7718, 17.1523, 22.0602, 0.28 ) }
    dend_45 { pt3dadd( -94.5079, 16.7869, 22.007, 0.55 ) }
    dend_45 { pt3dadd( -105.207, 16.5168, 24.2779, 0.55 ) }
    dend_45 { pt3dadd( -115.591, 15.8206, 27.6494, 0.55 ) }
    dend_45 { pt3dadd( -125.46, 13.912, 31.9443, 0.55 ) }
    dend_45 { pt3dadd( -135.003, 13.6091, 37.2868, 0.55 ) }
    dend_45 { pt3dadd( -143.255, 12.6634, 44.4091, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -149.951, 12.0292, 53.0351, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 60.9376, 7.12213, -38.1647, 0.55 ) }
    dend_42 { pt3dadd( 64.5886, 8.27115, -41.0806, 0.55 ) }
    dend_42 { pt3dadd( 65.7344, 8.59945, -42.0823, 0.55 ) }
    dend_42 { pt3dadd( 67.1636, 8.96291, -43.3269, 0.55 ) }
    dend_42 { pt3dadd( 69.7493, 9.62727, -45.7413, 0.55 ) }
    dend_42 { pt3dadd( 72.4327, 10.2265, -48.3468, 0.55 ) }
    dend_42 { pt3dadd( 73.7333, 10.4131, -49.6048, 0.83 ) }
    dend_42 { pt3dadd( 74.7922, 10.5095, -50.7354, 0.55 ) }
    dend_42 { pt3dadd( 75.5737, 10.5317, -51.6749, 0.83 ) }
    dend_42 { pt3dadd( 77.4197, 10.3467, -54.122, 0.55 ) }
    dend_42 { pt3dadd( 78.9214, 10.0518, -56.1737, 0.55 ) }
    dend_42 { pt3dadd( 80.6502, 9.68449, -58.443, 0.55 ) }
    dend_42 { pt3dadd( 82.5806, 9.33985, -61.0023, 0.55 ) }
    dend_42 { pt3dadd( 83.8704, 9.08325, -62.7593, 0.55 ) }
    dend_42 { pt3dadd( 85.3232, 8.79783, -64.7927, 0.55 ) }
    dend_42 { pt3dadd( 86.5814, 8.61366, -66.6374, 0.55 ) }
    dend_42 { pt3dadd( 87.3785, 8.59234, -67.8994, 0.55 ) }
    dend_42 { pt3dadd( 88.3524, 8.66624, -70.3995, 0.55 ) }
    dend_42 { pt3dadd( 88.869, 8.6783, -71.9663, 0.55 ) }
    dend_42 { pt3dadd( 89.2695, 8.64414, -74.0478, 0.55 ) }
    dend_42 { pt3dadd( 89.7723, 8.50884, -77.5743, 0.55 ) }
    dend_42 { pt3dadd( 89.8675, 8.45294, -78.3732, 0.28 ) }
    dend_42 { pt3dadd( 91.1206, 7.66294, -88.1082, 0.28 ) }
    dend_42 { pt3dadd( 91.5722, 7.43932, -90.967, 0.83 ) }
    dend_42 { pt3dadd( 93.397, 6.4551, -101.146, 0.83 ) }
    dend_42 { pt3dadd( 94.3437, 5.81434, -105.907, 0.83 ) }
    dend_42 { pt3dadd( 94.8136, 5.47378, -107.852, 0.55 ) }
    dend_42 { pt3dadd( 95.3755, 5.12204, -109.753, 0.55 ) }
    dend_42 { pt3dadd( 97.0407, 4.32183, -113.319, 0.55 ) }
    dend_42 { pt3dadd( 98.8688, 3.54666, -116.474, 0.28 ) }
    dend_42 { pt3dadd( 99.4596, 3.31079, -116.704, 0.55 ) }
    dend_42 { pt3dadd( 100.788, 2.79929, -116.707, 0.28 ) }
    dend_42 { pt3dadd( 101.621, 2.51884, -116.576, 0.55 ) }
    dend_42 { pt3dadd( 102.49, 2.20268, -116.367, 0.28 ) }
    dend_42 { pt3dadd( 103.541, 1.86492, -116.06, 0.55 ) }
    dend_42 { pt3dadd( 105.119, 1.46714, -115.754, 0.28 ) }
    dend_42 { pt3dadd( 106.38, 1.11794, -115.557, 0.55 ) }
    dend_42 { pt3dadd( 107.783, 0.838613, -115.435, 0.28 ) }
    dend_42 { pt3dadd( 109.686, 0.493669, -115.439, 0.55 ) }
    dend_42 { pt3dadd( 111.822, 0.175497, -115.563, 0.55 ) }
    dend_42 { pt3dadd( 113.7, -0.0619829, -115.794, 0.28 ) }
    dend_42 { pt3dadd( 116.296, -0.343733, -116.253, 0.55 ) }
    dend_42 { pt3dadd( 120.786, -0.631974, -117.507, 0.55 ) }
    dend_42 { pt3dadd( 122.774, -0.621062, -118.285, 0.55 ) }
    dend_42 { pt3dadd( 123.63, -0.567184, -118.706, 0.83 ) }
    dend_42 { pt3dadd( 125.258, -0.428209, -119.654, 0.55 ) }
    dend_42 { pt3dadd( 126.391, -0.276307, -120.376, 0.83 ) }
    dend_42 { pt3dadd( 129.448, 0.214186, -122.341, 0.55 ) }
    dend_42 { pt3dadd( 131.297, 0.40054, -123.609, 0.28 ) }
    dend_42 { pt3dadd( 132.073, 0.417974, -124.063, 0.55 ) }
    dend_42 { pt3dadd( 134.181, 0.237573, -125.099, 0.28 ) }
    dend_42 { pt3dadd( 134.912, 0.100648, -125.424, 0.55 ) }
    dend_42 { pt3dadd( 136.416, -0.313587, -125.87, 0.28 ) }
    dend_42 { pt3dadd( 137.936, -0.92576, -126.075, 0.55 ) }
    dend_42 { pt3dadd( 141.003, -2.41797, -125.959, 0.28 ) }
    dend_42 { pt3dadd( 142.414, -3.19346, -125.76, 0.55 ) }
    dend_42 { pt3dadd( 144.501, -4.48463, -125.367, 0.28 ) }
    dend_42 { pt3dadd( 147.143, -6.1224, -124.77, 0.55 ) }
    dend_42 { pt3dadd( 149.057, -7.28637, -124.302, 0.55 ) }
    dend_42 { pt3dadd( 152.388, -9.20995, -123.417, 0.28 ) }
    dend_42 { pt3dadd( 153.759, -9.91782, -123.16, 0.55 ) }
    dend_42 { pt3dadd( 156.132, -10.9612, -122.963, 0.28 ) }
    dend_42 { pt3dadd( 158.514, -11.7965, -122.907, 0.55 ) }
    dend_42 { pt3dadd( 159.833, -12.0805, -123.038, 0.28 ) }
    dend_42 { pt3dadd( 161.041, -12.1681, -123.225, 0.55 ) }
    dend_42 { pt3dadd( 164.466, -12.1692, -124.042, 0.28 ) }
    dend_42 { pt3dadd( 166.932, -12.0044, -124.639, 0.28 ) }
    dend_42 { pt3dadd( 169.093, -11.7103, -125.163, 0.55 ) }
    dend_42 { pt3dadd( 171.483, -11.304, -125.851, 0.28 ) }
    dend_42 { pt3dadd( 172.09, -11.1701, -125.998, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 60.9376, 7.12213, -38.1647, 0.55 ) }
    dend_35 { pt3dadd( 61.2428, 5.4439, -40.0209, 0.55 ) }
    dend_35 { pt3dadd( 61.345, 4.00672, -41.4622, 0.28 ) }
    dend_35 { pt3dadd( 61.4392, 2.65588, -42.6468, 0.55 ) }
    dend_35 { pt3dadd( 61.8157, -0.215284, -45.1981, 0.28 ) }
    dend_35 { pt3dadd( 61.8329, -0.387879, -45.3883, 0.55 ) }
    dend_35 { pt3dadd( 61.9528, -1.27167, -46.4777, 0.28 ) }
    dend_35 { pt3dadd( 61.9632, -1.95798, -47.5206, 0.55 ) }
    dend_35 { pt3dadd( 61.916, -2.64152, -48.7163, 0.28 ) }
    dend_35 { pt3dadd( 61.8112, -3.55491, -50.4061, 0.55 ) }
    dend_35 { pt3dadd( 61.547, -5.86408, -54.5867, 0.55 ) }
    dend_35 { pt3dadd( 61.2699, -7.952, -58.4489, 0.55 ) }
    dend_35 { pt3dadd( 61.0241, -9.61779, -61.538, 0.55 ) }
    dend_35 { pt3dadd( 60.7389, -11.2619, -64.5303, 0.55 ) }
    dend_35 { pt3dadd( 60.6637, -11.6931, -65.2774, 0.28 ) }
    dend_35 { pt3dadd( 60.6033, -12.1692, -66.022, 0.55 ) }
    dend_35 { pt3dadd( 60.6073, -12.8578, -66.9741, 0.28 ) }
    dend_35 { pt3dadd( 60.7847, -14.1451, -68.541, 0.55 ) }
    dend_35 { pt3dadd( 61.4026, -16.7592, -71.0663, 0.55 ) }
    dend_35 { pt3dadd( 61.7523, -18.2039, -72.2764, 0.28 ) }
    dend_35 { pt3dadd( 62.0069, -19.6447, -73.5753, 0.55 ) }
    dend_35 { pt3dadd( 62.1857, -21.6236, -75.4744, 0.28 ) }
    dend_35 { pt3dadd( 62.2049, -23.198, -77.0455, 0.55 ) }
    dend_35 { pt3dadd( 62.1099, -25.5389, -79.394, 0.28 ) }
    dend_35 { pt3dadd( 62.035, -27.986, -81.7342, 0.55 ) }
    dend_35 { pt3dadd( 61.8679, -31.5243, -85.1665, 0.28 ) }
    dend_35 { pt3dadd( 61.7279, -33.4038, -87.001, 0.55 ) }
    dend_35 { pt3dadd( 61.5453, -35.3088, -88.9306, 0.28 ) }
    dend_35 { pt3dadd( 61.3602, -36.9521, -90.7558, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 61.2144, -38.961, -93.2642, 0.55 ) }
    dend_35 { pt3dadd( 61.2481, -40.8541, -95.5385, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 63.3132, 22.4926, -2.2954, 0.55 ) }
    dend_31 { pt3dadd( 66.2998, 22.2346, -1.38983, 0.55 ) }
    dend_31 { pt3dadd( 68.4876, 21.9303, -0.924408, 0.55 ) }
    dend_31 { pt3dadd( 73.2906, 21.1683, -0.147326, 0.55 ) }
    dend_31 { pt3dadd( 75.4606, 20.7498, 0.0171037, 0.55 ) }
    dend_31 { pt3dadd( 77.8365, 20.3204, 0.0685265, 0.55 ) }
    dend_31 { pt3dadd( 81.0401, 19.7581, -0.0957064, 0.55 ) }
    dend_31 { pt3dadd( 84.4355, 19.026, -0.571162, 0.55 ) }
    dend_31 { pt3dadd( 86.2282, 18.5854, -1.01716, 0.55 ) }
    dend_31 { pt3dadd( 89.8977, 17.6053, -2.4099, 0.55 ) }
    dend_31 { pt3dadd( 91.5908, 17.1579, -3.10579, 0.55 ) }
    dend_31 { pt3dadd( 95.5618, 16.0219, -4.82412, 0.55 ) }
    dend_31 { pt3dadd( 98.248, 15.1558, -5.94923, 0.55 ) }
    dend_31 { pt3dadd( 100.221, 14.522, -6.68769, 0.83 ) }
    dend_31 { pt3dadd( 103.367, 13.4059, -7.81404, 0.55 ) }
    dend_31 { pt3dadd( 106.439, 12.1925, -8.77606, 0.83 ) }
    dend_31 { pt3dadd( 109.039, 11.0661, -9.48181, 0.55 ) }
    dend_31 { pt3dadd( 111.347, 10.1159, -9.99593, 0.55 ) }
    dend_31 { pt3dadd( 112.657, 9.64211, -10.2259, 0.83 ) }
    dend_31 { pt3dadd( 115.708, 8.57239, -10.6048, 0.28 ) }
    dend_31 { pt3dadd( 117.222, 8.11632, -10.7077, 0.28 ) }
    dend_31 { pt3dadd( 118.688, 7.57378, -10.8677, 0.28 ) }
    dend_31 { pt3dadd( 120.274, 7.02634, -11.0544, 0.28 ) }
    dend_31 { pt3dadd( 122.816, 6.18665, -11.413, 0.28 ) }
    dend_31 { pt3dadd( 123.838, 5.86592, -11.5292, 0.55 ) }
    dend_31 { pt3dadd( 126.27, 5.16328, -11.5736, 0.55 ) }
    dend_31 { pt3dadd( 130.636, 3.89611, -11.4271, 0.55 ) }
    dend_31 { pt3dadd( 131.84, 3.52404, -11.3284, 0.55 ) }
    dend_31 { pt3dadd( 132.913, 3.16605, -11.1884, 0.83 ) }
    dend_31 { pt3dadd( 135.236, 2.48997, -10.7066, 0.55 ) }
    dend_31 { pt3dadd( 137.253, 1.91168, -10.2558, 0.55 ) }
    dend_31 { pt3dadd( 139.159, 1.37461, -9.8222, 0.55 ) }
    dend_31 { pt3dadd( 140.637, 0.926596, -9.52447, 0.55 ) }
    dend_31 { pt3dadd( 142.981, 0.0386626, -9.14186, 0.55 ) }
    dend_31 { pt3dadd( 145.745, -1.26914, -8.80649, 0.55 ) }
    dend_31 { pt3dadd( 150.041, -3.82055, -8.5128, 0.55 ) }
    dend_31 { pt3dadd( 152.396, -5.58308, -8.44825, 0.55 ) }
    dend_31 { pt3dadd( 154.432, -7.46727, -8.44124, 0.28 ) }
    dend_31 { pt3dadd( 155.036, -8.16531, -8.45398, 0.55 ) }
    dend_31 { pt3dadd( 156.363, -10.1166, -8.48925, 0.28 ) }
    dend_31 { pt3dadd( 157.489, -12.2968, -8.50208, 0.55 ) }
    dend_31 { pt3dadd( 158.522, -14.9793, -8.31838, 0.55 ) }
    dend_31 { pt3dadd( 159.217, -16.7275, -8.11093, 0.28 ) }
    dend_31 { pt3dadd( 159.47, -17.3398, -8.0061, 0.55 ) }
    dend_31 { pt3dadd( 160.129, -18.8568, -7.72243, 0.28 ) }
    dend_31 { pt3dadd( 161.03, -20.8218, -7.30145, 0.55 ) }
    dend_31 { pt3dadd( 163.386, -25.5347, -6.15416, 0.55 ) }
    dend_31 { pt3dadd( 164.615, -27.9006, -5.52138, 0.55 ) }
    dend_31 { pt3dadd( 165.756, -30.0653, -4.92017, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 63.3132, 22.4926, -2.2954, 0.55 ) }
    dend_30 { pt3dadd( 65.0304, 22.8898, -0.837185, 0.55 ) }
    dend_30 { pt3dadd( 65.5836, 23.0117, -0.401088, 0.55 ) }
    dend_30 { pt3dadd( 67.6545, 23.3572, 1.14174, 0.55 ) }
    dend_30 { pt3dadd( 69.9626, 23.7919, 2.89483, 0.55 ) }
    dend_30 { pt3dadd( 72.9146, 24.3512, 5.22455, 0.55 ) }
    dend_30 { pt3dadd( 73.7304, 24.506, 5.86225, 0.55 ) }
    dend_30 { pt3dadd( 75.1965, 24.726, 6.99746, 0.55 ) }
    dend_30 { pt3dadd( 76.808, 24.9974, 8.1744, 0.55 ) }
    dend_30 { pt3dadd( 78.6872, 25.3557, 9.44928, 0.55 ) }
    dend_30 { pt3dadd( 80.4569, 25.7189, 10.6545, 0.55 ) }
    dend_30 { pt3dadd( 81.4305, 25.957, 11.2641, 0.55 ) }
    dend_30 { pt3dadd( 82.5728, 26.2689, 11.9743, 0.55 ) }
    dend_30 { pt3dadd( 83.987, 26.6925, 12.822, 0.83 ) }
    dend_30 { pt3dadd( 86.3231, 27.3548, 13.9601, 0.55 ) }
    dend_30 { pt3dadd( 87.8773, 27.7256, 14.6439, 0.83 ) }
    dend_30 { pt3dadd( 90.0434, 28.1358, 15.528, 0.55 ) }
    dend_30 { pt3dadd( 90.7101, 28.2256, 15.7935, 0.55 ) }
    dend_30 { pt3dadd( 92.7847, 28.4001, 16.5843, 0.55 ) }
    dend_30 { pt3dadd( 96.5134, 28.4801, 17.8724, 0.55 ) }
    dend_30 { pt3dadd( 99.2521, 28.3862, 18.7683, 0.55 ) }
    dend_30 { pt3dadd( 101.419, 28.2207, 19.539, 0.55 ) }
    dend_30 { pt3dadd( 103.624, 27.9483, 20.4129, 0.55 ) }
    dend_30 { pt3dadd( 104.089, 27.8793, 20.6003, 0.28 ) }
    dend_30 { pt3dadd( 105.031, 27.7029, 20.9821, 0.83 ) }
    dend_30 { pt3dadd( 108.898, 26.9265, 22.5782, 0.55 ) }
    dend_30 { pt3dadd( 111.607, 26.3809, 23.6414, 0.55 ) }
    dend_30 { pt3dadd( 113.825, 25.993, 24.5647, 0.55 ) }
    dend_30 { pt3dadd( 115.15, 25.7587, 25.1297, 0.83 ) }
    dend_30 { pt3dadd( 116.192, 25.5891, 25.5748, 0.28 ) }
    dend_30 { pt3dadd( 117.138, 25.4358, 25.9693, 0.55 ) }
    dend_30 { pt3dadd( 124.389, 26.0825, 29.936, 0.55 ) }
    dend_30 { pt3dadd( 132.211, 25.3995, 32.6222, 0.55 ) }
    dend_30 { pt3dadd( 139.95, 25.7036, 35.5904, 0.55 ) }
    dend_30 { pt3dadd( 146.746, 25.0663, 40.3098, 0.55 ) }
    dend_30 { pt3dadd( 153.043, 23.4091, 45.442, 0.55 ) }
    dend_30 { pt3dadd( 160.129, 20.42, 48.448, 0.55 ) }
    dend_30 { pt3dadd( 167.199, 16.5763, 50.1357, 0.55 ) }
    dend_30 { pt3dadd( 175.0, 14.0647, 51.2507, 0.55 ) }
    dend_30 { pt3dadd( 182.678, 11.487, 52.9182, 0.55 ) }
    dend_30 { pt3dadd( 190.698, 9.70587, 54.0054, 0.55 ) }
    dend_30 { pt3dadd( 198.608, 8.36894, 56.1128, 0.55 ) }
    dend_30 { pt3dadd( 205.999, 5.74885, 58.7358, 0.55 ) }
    dend_30 { pt3dadd( 213.514, 4.57703, 62.0475, 0.55 ) }
    dend_30 { pt3dadd( 220.6, 4.65919, 66.3616, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.42997, -28.9062, 6.59323, 1.38 ) }
    dend_13 { pt3dadd( -1.37251, -32.1217, 4.8843, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.42997, -28.9062, 6.59323, 0.55 ) }
    dend_12 { pt3dadd( -5.45976, -30.8477, 7.62776, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -7.76725, -33.389, 8.77993, 0.55 ) }
    dend_12 { pt3dadd( -9.50042, -35.0346, 9.6877, 0.55 ) }
    dend_12 { pt3dadd( -11.0687, -36.3946, 10.2529, 0.55 ) }
    dend_12 { pt3dadd( -14.6065, -39.1682, 11.2195, 0.55 ) }
    dend_12 { pt3dadd( -17.0998, -40.9995, 11.8413, 0.55 ) }
    dend_12 { pt3dadd( -19.3554, -42.6395, 12.3286, 0.55 ) }
    dend_12 { pt3dadd( -25.1051, -46.5871, 13.5802, 0.55 ) }
    dend_12 { pt3dadd( -31.9565, -51.1238, 15.1231, 0.55 ) }
    dend_12 { pt3dadd( -37.2867, -54.5376, 16.2443, 0.55 ) }
    dend_12 { pt3dadd( -40.7223, -56.7911, 16.9228, 0.55 ) }
    dend_12 { pt3dadd( -44.6824, -59.5222, 17.7131, 0.55 ) }
    dend_12 { pt3dadd( -49.767, -63.539, 18.7758, 0.55 ) }
    dend_12 { pt3dadd( -52.8113, -66.4835, 19.4555, 0.55 ) }
    dend_12 { pt3dadd( -56.5445, -70.8234, 20.5501, 0.55 ) }
    dend_12 { pt3dadd( -59.5831, -74.9674, 21.5227, 0.55 ) }
    dend_12 { pt3dadd( -62.8086, -80.2366, 22.5632, 0.55 ) }
    dend_12 { pt3dadd( -66.0137, -86.5224, 23.6586, 0.55 ) }
    dend_12 { pt3dadd( -67.9422, -91.4165, 24.3539, 0.55 ) }
    dend_12 { pt3dadd( -68.659, -93.8906, 24.7661, 0.55 ) }
    dend_12 { pt3dadd( -69.8491, -99.783, 25.8543, 0.55 ) }
    dend_12 { pt3dadd( -70.7971, -105.322, 26.9575, 0.55 ) }
    dend_12 { pt3dadd( -71.2748, -110.975, 28.3082, 0.55 ) }
    dend_12 { pt3dadd( -71.49, -114.223, 29.2641, 0.55 ) }
    dend_12 { pt3dadd( -71.913, -124.301, 32.5296, 0.55 ) }
    dend_12 { pt3dadd( -71.942, -125.043, 32.7845, 0.55 ) }
    dend_12 { pt3dadd( -71.9861, -129.608, 34.405, 0.55 ) }
    dend_12 { pt3dadd( -72.3127, -137.723, 37.6707, 0.55 ) }
    dend_12 { pt3dadd( -72.5178, -140.424, 38.622, 0.55 ) }
    dend_12 { pt3dadd( -73.3009, -144.583, 39.4918, 0.55 ) }
    dend_12 { pt3dadd( -73.737, -146.113, 39.4617, 0.55 ) }
    dend_12 { pt3dadd( -75.5043, -151.266, 38.3167, 0.55 ) }
    dend_12 { pt3dadd( -76.8417, -154.589, 36.8057, 0.55 ) }
    dend_12 { pt3dadd( -79.4003, -159.838, 33.2912, 0.55 ) }
    dend_12 { pt3dadd( -82.5454, -166.271, 28.373, 0.28 ) }
    dend_12 { pt3dadd( -83.4128, -167.851, 26.9364, 0.55 ) }
    dend_12 { pt3dadd( -84.8328, -170.234, 24.549, 0.28 ) }
    dend_12 { pt3dadd( -85.0602, -170.592, 24.1724, 0.55 ) }
    dend_12 { pt3dadd( -86.2271, -172.558, 22.2813, 0.28 ) }
    dend_12 { pt3dadd( -86.585, -173.228, 21.814, 0.55 ) }
    dend_12 { pt3dadd( -88.1624, -176.741, 20.0819, 0.28 ) }
    dend_12 { pt3dadd( -88.7352, -177.93, 19.5317, 0.55 ) }
    dend_12 { pt3dadd( -90.3289, -181.373, 18.1534, 0.28 ) }
    dend_12 { pt3dadd( -90.8238, -182.458, 17.7208, 0.55 ) }
    dend_12 { pt3dadd( -92.5286, -186.2, 16.3035, 0.28 ) }
    dend_12 { pt3dadd( -93.3089, -187.923, 15.6382, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.4275, -76.3327, 63.7097, 0.55 ) }
    dend_10 { pt3dadd( -17.2825, -83.1421, 69.5526, 0.55 ) }
    dend_10 { pt3dadd( -22.2555, -89.2814, 75.3813, 0.55 ) }
    dend_10 { pt3dadd( -26.7749, -95.9962, 80.8662, 0.55 ) }
    dend_10 { pt3dadd( -31.4185, -102.771, 86.1646, 0.55 ) }
    dend_10 { pt3dadd( -34.7435, -110.443, 91.0751, 0.55 ) }
    dend_10 { pt3dadd( -38.1313, -117.795, 96.4594, 0.55 ) }
    dend_10 { pt3dadd( -39.7721, -126.45, 100.269, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.4275, -76.3327, 63.7097, 0.55 ) }
    dend_3 { pt3dadd( -13.3865, -83.3092, 71.5751, 0.55 ) }
    dend_3 { pt3dadd( -12.2712, -91.3069, 78.1644, 0.55 ) }
    dend_3 { pt3dadd( -12.7561, -99.7445, 84.2463, 0.55 ) }
    dend_3 { pt3dadd( -13.4406, -108.801, 89.2423, 0.55 ) }
    dend_3 { pt3dadd( -13.7724, -117.726, 94.5128, 0.55 ) }
    dend_3 { pt3dadd( -14.2928, -126.272, 100.425, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -39.4295, 41.9235, -20.6042, 0.83 ) }
    dend_60 { pt3dadd( -38.7706, 43.8389, -23.2766, 0.83 ) }
    dend_60 { pt3dadd( -37.3065, 48.5177, -29.2796, 0.55 ) }
    dend_60 { pt3dadd( -36.6632, 50.5531, -31.6661, 0.83 ) }
    dend_60 { pt3dadd( -35.9577, 52.7451, -34.0413, 0.55 ) }
    dend_60 { pt3dadd( -35.2166, 55.0336, -36.1043, 0.55 ) }
    dend_60 { pt3dadd( -34.8263, 56.1971, -36.9678, 0.28 ) }
    dend_60 { pt3dadd( -34.6133, 56.9938, -37.3134, 0.55 ) }
    dend_60 { pt3dadd( -33.7845, 59.6987, -37.8377, 0.28 ) }
    dend_60 { pt3dadd( -33.3958, 60.8577, -37.9997, 0.55 ) }
    dend_60 { pt3dadd( -32.0894, 64.9082, -38.381, 0.28 ) }
    dend_60 { pt3dadd( -31.1379, 68.1378, -38.5608, 0.55 ) }
    dend_60 { pt3dadd( -29.9021, 73.2242, -38.6601, 0.28 ) }
    dend_60 { pt3dadd( -28.9775, 77.721, -38.6473, 0.28 ) }
    dend_60 { pt3dadd( -28.6109, 80.2588, -38.5804, 0.55 ) }
    dend_60 { pt3dadd( -28.3694, 83.2883, -38.4899, 0.28 ) }
    dend_60 { pt3dadd( -28.3517, 84.7461, -38.4205, 0.55 ) }
    dend_60 { pt3dadd( -28.5111, 88.1813, -38.4085, 0.28 ) }
    dend_60 { pt3dadd( -28.7801, 90.4766, -38.5166, 0.28 ) }
    dend_60 { pt3dadd( -29.0969, 92.73, -38.6912, 0.28 ) }
    dend_60 { pt3dadd( -29.218, 93.9156, -38.7906, 0.55 ) }
    dend_60 { pt3dadd( -29.4499, 98.6767, -39.3228, 0.28 ) }
    dend_60 { pt3dadd( -29.5363, 104.289, -40.0711, 0.55 ) }
    dend_60 { pt3dadd( -29.5371, 106.224, -40.3389, 0.55 ) }
    dend_60 { pt3dadd( -29.5679, 108.17, -40.5619, 0.55 ) }
    dend_60 { pt3dadd( -29.8639, 112.321, -41.095, 0.55 ) }
    dend_60 { pt3dadd( -30.2426, 115.058, -41.4974, 0.28 ) }
    dend_60 { pt3dadd( -30.5101, 116.104, -41.6581, 0.55 ) }
    dend_60 { pt3dadd( -31.4344, 118.959, -42.0216, 0.28 ) }
    dend_60 { pt3dadd( -32.5503, 121.999, -42.5252, 0.55 ) }
    dend_60 { pt3dadd( -34.5749, 126.392, -43.4028, 0.28 ) }
    dend_60 { pt3dadd( -35.6229, 128.238, -43.8196, 0.28 ) }
    dend_60 { pt3dadd( -37.4229, 130.812, -44.6425, 0.55 ) }
    dend_60 { pt3dadd( -39.4839, 133.498, -45.6336, 0.28 ) }
    dend_60 { pt3dadd( -39.8716, 133.923, -45.8073, 0.55 ) }
    dend_60 { pt3dadd( -41.2993, 135.289, -46.4075, 0.28 ) }
    dend_60 { pt3dadd( -46.2746, 139.699, -48.3441, 0.55 ) }
    dend_60 { pt3dadd( -53.3274, 145.171, -51.2644, 0.28 ) }
    dend_60 { pt3dadd( -54.6511, 146.091, -51.8806, 0.55 ) }
    dend_60 { pt3dadd( -58.3148, 148.469, -53.6243, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -59.8598, 149.443, -54.3987, 0.28 ) }
    dend_60 { pt3dadd( -61.2134, 150.249, -55.1364, 0.55 ) }
    dend_60 { pt3dadd( -65.2797, 152.117, -57.5711, 0.28 ) }
    dend_60 { pt3dadd( -68.194, 153.164, -59.1468, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -39.4295, 41.9235, -20.6042, 0.55 ) }
    dend_57 { pt3dadd( -39.4808, 42.8272, -20.6825, 0.55 ) }
    dend_57 { pt3dadd( -39.5283, 43.3595, -20.6778, 0.28 ) }
    dend_57 { pt3dadd( -39.6468, 43.7414, -20.5823, 0.55 ) }
    dend_57 { pt3dadd( -39.9188, 44.6184, -20.3629, 0.28 ) }
    dend_57 { pt3dadd( -40.1099, 45.2344, -20.2087, 0.55 ) }
    dend_57 { pt3dadd( -40.4621, 46.37, -19.9246, 0.28 ) }
    dend_57 { pt3dadd( -40.7211, 46.9783, -19.6662, 0.55 ) }
    dend_57 { pt3dadd( -41.8168, 48.4334, -18.5434, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -139.937, -74.7532, -17.3339, 0.55 ) }
    dend_52 { pt3dadd( -145.769, -82.4283, -19.7101, 0.55 ) }
    dend_52 { pt3dadd( -149.994, -90.8037, -22.7561, 0.55 ) }
    dend_52 { pt3dadd( -153.474, -98.5432, -27.8783, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -139.937, -74.7532, -17.3339, 0.55 ) }
    dend_49 { pt3dadd( -146.056, -82.1165, -20.6077, 0.55 ) }
    dend_49 { pt3dadd( -151.127, -89.6976, -24.9702, 0.55 ) }
    dend_49 { pt3dadd( -155.777, -97.4336, -29.5031, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -149.951, 12.0292, 53.0351, 0.55 ) }
    dend_47 { pt3dadd( -157.652, 12.288, 58.2029, 0.55 ) }
    dend_47 { pt3dadd( -165.858, 13.4903, 62.3396, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -149.951, 12.0292, 53.0351, 0.55 ) }
    dend_46 { pt3dadd( -163.256, 10.2236, 57.7267, 0.55 ) }
    dend_46 { pt3dadd( -176.686, 10.6521, 62.4148, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 61.2481, -40.8541, -95.5385, 0.28 ) }
    dend_39 { pt3dadd( 66.7794, -42.5043, -105.634, 0.28 ) }
    dend_39 { pt3dadd( 67.3036, -42.7382, -106.554, 0.55 ) }
    dend_39 { pt3dadd( 68.1887, -43.133, -108.109, 0.28 ) }
    dend_39 { pt3dadd( 68.9338, -43.4654, -109.417, 0.28 ) }
    dend_39 { pt3dadd( 69.9203, -43.9055, -111.15, 0.55 ) }
    dend_39 { pt3dadd( 71.2208, -44.4857, -113.434, 0.55 ) }
    dend_39 { pt3dadd( 72.667, -46.0846, -114.919, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 61.2481, -40.8541, -95.5385, 0.55 ) }
    dend_36 { pt3dadd( 61.5318, -41.3578, -96.3695, 0.55 ) }
    dend_36 { pt3dadd( 61.6026, -41.5772, -96.7383, 0.28 ) }
    dend_36 { pt3dadd( 61.6962, -41.9469, -97.3806, 0.55 ) }
    dend_36 { pt3dadd( 61.9022, -42.7615, -98.7956, 0.28 ) }
    dend_36 { pt3dadd( 62.045, -43.3259, -99.7762, 0.55 ) }
    dend_36 { pt3dadd( 62.2869, -44.2823, -101.438, 0.28 ) }
    dend_36 { pt3dadd( 62.5352, -45.4134, -103.597, 0.28 ) }
    dend_36 { pt3dadd( 62.6164, -45.9255, -104.604, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 165.756, -30.0653, -4.92017, 0.28 ) }
    dend_33 { pt3dadd( 167.099, -32.0691, -4.32432, 0.28 ) }
    dend_33 { pt3dadd( 168.758, -34.7278, -3.31975, 0.28 ) }
    dend_33 { pt3dadd( 169.795, -36.4567, -2.59928, 0.55 ) }
    dend_33 { pt3dadd( 170.422, -37.4148, -2.14287, 0.28 ) }
    dend_33 { pt3dadd( 170.755, -37.9308, -1.89265, 0.28 ) }
    dend_33 { pt3dadd( 172.409, -40.4765, -0.697516, 0.55 ) }
    dend_33 { pt3dadd( 172.782, -41.0466, -0.351778, 0.28 ) }
    dend_33 { pt3dadd( 173.632, -42.5526, 0.647319, 0.55 ) }
    dend_33 { pt3dadd( 174.361, -43.859, 1.45656, 0.28 ) }
    dend_33 { pt3dadd( 175.011, -44.921, 2.1011, 0.55 ) }
    dend_33 { pt3dadd( 175.779, -46.1873, 2.78624, 0.55 ) }
    dend_33 { pt3dadd( 177.038, -48.1865, 3.60965, 0.55 ) }
    dend_33 { pt3dadd( 177.343, -48.6761, 3.79203, 0.55 ) }
    dend_33 { pt3dadd( 178.43, -50.5025, 4.44322, 0.28 ) }
    dend_33 { pt3dadd( 178.849, -51.2474, 4.68435, 0.55 ) }
    dend_33 { pt3dadd( 179.444, -52.1997, 4.99762, 0.28 ) }
    dend_33 { pt3dadd( 180.291, -53.5486, 5.37631, 0.55 ) }
    dend_33 { pt3dadd( 181.748, -55.6616, 5.6589, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 165.756, -30.0653, -4.92017, 0.55 ) }
    dend_32 { pt3dadd( 163.118, -29.9966, -5.23938, 0.55 ) }
    dend_32 { pt3dadd( 160.975, -29.9409, -5.49862, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.37251, -32.1217, 4.8843, 0.83 ) }
    dend_17 { pt3dadd( -1.33286, -32.2756, 4.84186, 0.83 ) }
    dend_17 { pt3dadd( -0.763437, -33.6662, 4.44766, 0.83 ) }
    dend_17 { pt3dadd( -0.301317, -34.8808, 4.03091, 0.55 ) }
    dend_17 { pt3dadd( 0.0673542, -35.8498, 3.69843, 0.55 ) }
    dend_17 { pt3dadd( 0.850981, -37.9094, 2.99173, 0.83 ) }
    dend_17 { pt3dadd( 1.80146, -40.4076, 2.13456, 0.55 ) }
    dend_17 { pt3dadd( 2.34099, -41.7204, 1.69294, 0.83 ) }
    dend_17 { pt3dadd( 3.37608, -43.8316, 1.00189, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -1.37251, -32.1217, 4.8843, 0.55 ) }
    dend_14 { pt3dadd( -2.9441, -32.6297, 3.38494, 0.55 ) }
    dend_14 { pt3dadd( -4.63101, -33.175, 1.77555, 0.55 ) }
    dend_14 { pt3dadd( -6.62242, -33.8187, -0.124345, 0.55 ) }
    dend_14 { pt3dadd( -9.04064, -34.6004, -2.43144, 0.55 ) }
    dend_14 { pt3dadd( -10.4129, -35.044, -3.74063, 0.55 ) }
    dend_14 { pt3dadd( -10.6886, -35.1331, -4.00363, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.2928, -126.272, 100.425, 0.55 ) }
    dend_7 { pt3dadd( -14.1811, -135.259, 107.69, 0.55 ) }
    dend_7 { pt3dadd( -12.178, -144.606, 114.101, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.2928, -126.272, 100.425, 0.55 ) }
    dend_4 { pt3dadd( -14.3954, -134.48, 105.837, 0.55 ) }
    dend_4 { pt3dadd( -15.0759, -142.66, 111.285, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -41.8168, 48.4334, -18.5434, 0.28 ) }
    dend_59 { pt3dadd( -43.2438, 49.9324, -16.8887, 0.28 ) }
    dend_59 { pt3dadd( -43.7882, 50.4929, -16.1832, 0.55 ) }
    dend_59 { pt3dadd( -45.3479, 52.112, -14.0968, 0.28 ) }
    dend_59 { pt3dadd( -46.1155, 52.9238, -13.1625, 0.55 ) }
    dend_59 { pt3dadd( -48.206, 55.131, -10.7287, 0.28 ) }
    dend_59 { pt3dadd( -50.3308, 57.3742, -8.25495, 0.55 ) }
    dend_59 { pt3dadd( -53.8664, 60.8724, -4.14294, 0.28 ) }
    dend_59 { pt3dadd( -54.6186, 61.6241, -3.26573, 0.55 ) }
    dend_59 { pt3dadd( -56.2584, 63.3998, -1.39605, 0.28 ) }
    dend_59 { pt3dadd( -56.894, 64.138, -0.657158, 0.55 ) }
    dend_59 { pt3dadd( -64.2209, 69.0749, 5.37187, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -71.9834, 75.3555, 9.0221, 0.55 ) }
    dend_59 { pt3dadd( -78.7483, 81.7197, 14.1707, 0.55 ) }
    dend_59 { pt3dadd( -84.0105, 89.2438, 19.334, 0.55 ) }
    dend_59 { pt3dadd( -90.3426, 96.507, 23.6548, 0.55 ) }
    dend_59 { pt3dadd( -97.7592, 102.195, 28.7831, 0.55 ) }
    dend_59 { pt3dadd( -104.676, 106.937, 35.4324, 0.55 ) }
    dend_59 { pt3dadd( -110.808, 110.484, 43.5101, 0.55 ) }
    dend_59 { pt3dadd( -116.89, 114.639, 51.3026, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -41.8168, 48.4334, -18.5434, 0.55 ) }
    dend_58 { pt3dadd( -45.0062, 48.0669, -16.4918, 0.55 ) }
    dend_58 { pt3dadd( -46.6709, 47.8207, -15.4195, 0.28 ) }
    dend_58 { pt3dadd( -47.9097, 47.6375, -14.6215, 0.55 ) }
    dend_58 { pt3dadd( -48.9422, 47.4847, -13.9565, 0.28 ) }
    dend_58 { pt3dadd( -49.6654, 47.3778, -13.4906, 0.55 ) }
    dend_58 { pt3dadd( -51.6596, 47.0828, -12.2061, 0.28 ) }
    dend_58 { pt3dadd( -53.0309, 46.7476, -11.5078, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -153.474, -98.5432, -27.8783, 0.55 ) }
    dend_54 { pt3dadd( -155.924, -104.183, -28.4785, 0.55 ) }
    dend_54 { pt3dadd( -158.188, -109.919, -28.3784, 0.55 ) }
    dend_54 { pt3dadd( -160.059, -115.696, -29.4483, 0.55 ) }
    dend_54 { pt3dadd( -162.512, -121.36, -29.6291, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -153.474, -98.5432, -27.8783, 0.55 ) }
    dend_53 { pt3dadd( -157.309, -101.908, -33.1702, 0.55 ) }
    dend_53 { pt3dadd( -160.917, -104.304, -39.1631, 0.55 ) }
    dend_53 { pt3dadd( -165.009, -107.556, -44.3418, 0.55 ) }
    dend_53 { pt3dadd( -170.526, -109.798, -48.7456, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -155.777, -97.4336, -29.5031, 0.55 ) }
    dend_51 { pt3dadd( -160.688, -103.378, -36.5023, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -155.777, -97.4336, -29.5031, 0.55 ) }
    dend_50 { pt3dadd( -159.405, -105.797, -28.2533, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 72.667, -46.0846, -114.919, 0.28 ) }
    dend_41 { pt3dadd( 74.689, -47.3698, -116.466, 0.28 ) }
    dend_41 { pt3dadd( 75.6283, -47.9668, -117.185, 0.55 ) }
    dend_41 { pt3dadd( 77.4194, -49.1053, -118.556, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 72.667, -46.0846, -114.919, 0.55 ) }
    dend_40 { pt3dadd( 72.2494, -46.7371, -116.028, 0.55 ) }
    dend_40 { pt3dadd( 71.4141, -48.0424, -118.245, 0.28 ) }
    dend_40 { pt3dadd( 71.142, -48.4676, -118.967, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 62.6164, -45.9255, -104.604, 0.28 ) }
    dend_38 { pt3dadd( 63.2203, -48.1853, -108.106, 0.28 ) }
    dend_38 { pt3dadd( 63.5193, -49.3043, -109.84, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 62.6164, -45.9255, -104.604, 0.55 ) }
    dend_37 { pt3dadd( 60.7775, -46.5968, -103.84, 0.55 ) }
    dend_37 { pt3dadd( 55.6495, -48.4689, -101.708, 0.28 ) }
    dend_37 { pt3dadd( 54.4313, -48.9136, -101.202, 0.55 ) }
    dend_37 { pt3dadd( 51.0989, -50.1302, -99.8168, 0.28 ) }
    dend_37 { pt3dadd( 48.9508, -50.9143, -98.9241, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 3.37608, -43.8316, 1.00189, 0.83 ) }
    dend_23 { pt3dadd( 3.35321, -44.1316, 0.956813, 0.83 ) }
    dend_23 { pt3dadd( 3.1617, -48.0681, 0.439732, 0.83 ) }
    dend_23 { pt3dadd( 2.87383, -50.9931, 0.351607, 0.83 ) }
    dend_23 { pt3dadd( 2.55479, -53.8023, 0.637166, 0.83 ) }
    dend_23 { pt3dadd( 2.14571, -57.5335, 1.34838, 0.83 ) }
    dend_23 { pt3dadd( 1.6416, -61.8226, 2.37643, 0.83 ) }
    dend_23 { pt3dadd( 1.22238, -66.6216, 3.75206, 0.83 ) }
    dend_23 { pt3dadd( 0.922869, -71.2899, 5.29112, 0.83 ) }
    dend_23 { pt3dadd( 0.139567, -76.9713, 7.23969, 0.83 ) }
    dend_23 { pt3dadd( -0.429983, -79.5592, 8.06506, 0.83 ) }
    dend_23 { pt3dadd( -0.927371, -81.5007, 8.57146, 0.83 ) }
    dend_23 { pt3dadd( -1.99726, -85.2133, 9.50681, 0.83 ) }
    dend_23 { pt3dadd( -2.97365, -88.543, 10.1271, 0.83 ) }
    dend_23 { pt3dadd( -5.08732, -95.6688, 10.4882, 0.83 ) }
    dend_23 { pt3dadd( -6.45659, -99.5566, 10.1729, 0.83 ) }
    dend_23 { pt3dadd( -7.85294, -103.131, 9.63057, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.37608, -43.8316, 1.00189, 0.55 ) }
    dend_18 { pt3dadd( 2.20643, -46.055, 1.80503, 0.55 ) }
    dend_18 { pt3dadd( 1.40515, -47.6666, 2.51948, 0.55 ) }
    dend_18 { pt3dadd( 0.979457, -48.7017, 3.06169, 0.55 ) }
    dend_18 { pt3dadd( 0.478518, -50.3337, 4.01927, 0.55 ) }
    dend_18 { pt3dadd( -0.313624, -53.5782, 6.06832, 0.55 ) }
    dend_18 { pt3dadd( -0.778039, -56.033, 7.89062, 0.55 ) }
    dend_18 { pt3dadd( -1.02828, -58.0023, 9.55223, 0.55 ) }
    dend_18 { pt3dadd( -1.24649, -59.9856, 11.3935, 0.55 ) }
    dend_18 { pt3dadd( -1.39123, -61.6291, 13.0112, 0.28 ) }
    dend_18 { pt3dadd( -1.41502, -62.9705, 14.5337, 0.55 ) }
    dend_18 { pt3dadd( -1.3148, -65.4057, 17.6679, 0.55 ) }
    dend_18 { pt3dadd( -1.23865, -66.8879, 19.7923, 0.55 ) }
    dend_18 { pt3dadd( -1.20974, -67.7168, 20.9795, 0.55 ) }
    dend_18 { pt3dadd( -1.25359, -68.6873, 22.3584, 0.83 ) }
    dend_18 { pt3dadd( -1.52232, -71.5599, 26.2718, 0.28 ) }
    dend_18 { pt3dadd( -1.62567, -72.5106, 27.5407, 0.55 ) }
    dend_18 { pt3dadd( -1.79277, -74.2343, 29.7447, 0.28 ) }
    dend_18 { pt3dadd( -1.821, -74.7659, 30.462, 0.55 ) }
    dend_18 { pt3dadd( -1.83361, -76.0242, 32.0815, 0.28 ) }
    dend_18 { pt3dadd( -1.86692, -76.7402, 32.9481, 0.55 ) }
    dend_18 { pt3dadd( -2.48184, -79.0458, 35.2382, 0.55 ) }
    dend_18 { pt3dadd( -1.17663, -85.5001, 42.9009, 0.55 ) }
    dend_18 { pt3dadd( 0.797187, -91.7044, 50.6558, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -10.6886, -35.1331, -4.00363, 0.55 ) }
    dend_16 { pt3dadd( -12.811, -36.1383, -7.48228, 0.55 ) }
    dend_16 { pt3dadd( -13.4347, -36.3648, -8.47777, 0.55 ) }
    dend_16 { pt3dadd( -15.0252, -36.9214, -10.9015, 0.55 ) }
    dend_16 { pt3dadd( -18.535, -37.9804, -16.0358, 0.28 ) }
    dend_16 { pt3dadd( -19.0667, -38.1167, -16.7609, 0.55 ) }
    dend_16 { pt3dadd( -21.3335, -38.7417, -19.6726, 0.55 ) }
    dend_16 { pt3dadd( -24.5452, -39.5429, -23.3063, 0.55 ) }
    dend_16 { pt3dadd( -25.7749, -39.8013, -24.6673, 0.28 ) }
    dend_16 { pt3dadd( -26.8553, -39.9358, -25.7987, 0.28 ) }
    dend_16 { pt3dadd( -28.7727, -40.0816, -27.4559, 0.55 ) }
    dend_16 { pt3dadd( -31.0608, -40.1594, -29.5842, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -33.1186, -40.0467, -31.6233, 0.55 ) }
    dend_16 { pt3dadd( -34.6884, -39.8102, -33.1807, 0.55 ) }
    dend_16 { pt3dadd( -35.7371, -39.5532, -34.3031, 0.55 ) }
    dend_16 { pt3dadd( -38.7544, -38.6562, -37.7273, 0.55 ) }
    dend_16 { pt3dadd( -41.8968, -37.449, -41.286, 0.55 ) }
    dend_16 { pt3dadd( -43.188, -36.8598, -42.7259, 0.28 ) }
    dend_16 { pt3dadd( -44.4122, -36.3273, -44.1194, 0.55 ) }
    dend_16 { pt3dadd( -46.9466, -35.4327, -46.895, 0.28 ) }
    dend_16 { pt3dadd( -47.8086, -35.1585, -47.8156, 0.83 ) }
    dend_16 { pt3dadd( -49.4507, -34.6046, -49.407, 0.28 ) }
    dend_16 { pt3dadd( -50.7055, -34.2783, -50.3626, 0.55 ) }
    dend_16 { pt3dadd( -52.5537, -33.8661, -51.7026, 0.28 ) }
    dend_16 { pt3dadd( -53.2948, -33.688, -52.211, 0.55 ) }
    dend_16 { pt3dadd( -54.6956, -33.3727, -53.0703, 0.55 ) }
    dend_16 { pt3dadd( -56.7871, -32.6677, -54.3057, 0.55 ) }
    dend_16 { pt3dadd( -58.1555, -32.1078, -55.0391, 0.28 ) }
    dend_16 { pt3dadd( -59.2512, -31.5023, -55.5507, 0.55 ) }
    dend_16 { pt3dadd( -60.5047, -30.6259, -56.1772, 0.28 ) }
    dend_16 { pt3dadd( -60.7052, -30.4653, -56.29, 0.55 ) }
    dend_16 { pt3dadd( -62.4584, -28.9914, -57.7048, 0.28 ) }
    dend_16 { pt3dadd( -63.6851, -27.916, -58.8995, 0.55 ) }
    dend_16 { pt3dadd( -65.2076, -26.4101, -60.7705, 0.83 ) }
    dend_16 { pt3dadd( -66.408, -25.1604, -62.5045, 0.28 ) }
    dend_16 { pt3dadd( -66.7082, -24.8468, -62.9951, 0.55 ) }
    dend_16 { pt3dadd( -68.9755, -22.5159, -66.9392, 0.28 ) }
    dend_16 { pt3dadd( -69.3601, -22.1257, -67.6862, 0.55 ) }
    dend_16 { pt3dadd( -70.442, -20.8789, -70.011, 0.28 ) }
    dend_16 { pt3dadd( -70.7207, -20.5587, -70.6143, 0.55 ) }
    dend_16 { pt3dadd( -71.4537, -19.714, -72.0848, 0.28 ) }
    dend_16 { pt3dadd( -71.9844, -19.0991, -73.0758, 0.55 ) }
    dend_16 { pt3dadd( -73.2408, -17.685, -75.014, 0.28 ) }
    dend_16 { pt3dadd( -74.0154, -16.9124, -76.1155, 0.55 ) }
    dend_16 { pt3dadd( -75.7343, -15.3837, -78.328, 0.28 ) }
    dend_16 { pt3dadd( -76.258, -14.963, -78.9725, 0.55 ) }
    dend_16 { pt3dadd( -77.1088, -14.3773, -79.9351, 0.28 ) }
    dend_16 { pt3dadd( -77.8416, -13.877, -80.7054, 0.55 ) }
    dend_16 { pt3dadd( -79.3986, -12.8457, -82.1872, 0.28 ) }
    dend_16 { pt3dadd( -79.8753, -12.5447, -82.6133, 0.55 ) }
    dend_16 { pt3dadd( -83.4474, -10.1993, -85.5866, 0.28 ) }
    dend_16 { pt3dadd( -84.7072, -9.25647, -86.5074, 0.55 ) }
    dend_16 { pt3dadd( -86.9646, -7.42728, -87.9887, 0.28 ) }
    dend_16 { pt3dadd( -87.9795, -6.55195, -88.6234, 0.55 ) }
    dend_16 { pt3dadd( -90.3464, -4.54154, -89.9155, 0.28 ) }
    dend_16 { pt3dadd( -91.2355, -3.84051, -90.3404, 0.55 ) }
    dend_16 { pt3dadd( -94.5709, -1.59229, -91.644, 0.28 ) }
    dend_16 { pt3dadd( -96.0096, -0.836799, -92.1543, 0.55 ) }
    dend_16 { pt3dadd( -98.1524, -0.0991584, -92.8213, 0.55 ) }
    dend_16 { pt3dadd( -99.497, 0.277093, -93.1902, 0.55 ) }
    dend_16 { pt3dadd( -102.295, 1.00459, -93.7177, 0.28 ) }
    dend_16 { pt3dadd( -105.084, 1.71698, -94.0581, 0.28 ) }
    dend_16 { pt3dadd( -107.417, 2.32702, -94.2743, 0.55 ) }
    dend_16 { pt3dadd( -110.258, 3.3411, -94.2483, 0.28 ) }
    dend_16 { pt3dadd( -111.646, 4.02974, -94.0605, 0.55 ) }
    dend_16 { pt3dadd( -114.859, 6.21252, -93.3229, 0.28 ) }
    dend_16 { pt3dadd( -116.46, 7.70134, -92.5528, 0.55 ) }
    dend_16 { pt3dadd( -117.463, 8.85398, -91.8186, 0.28 ) }
    dend_16 { pt3dadd( -118.587, 10.1827, -90.6756, 0.55 ) }
    dend_16 { pt3dadd( -119.976, 11.9184, -89.0486, 0.28 ) }
    dend_16 { pt3dadd( -120.513, 12.5434, -88.4365, 0.55 ) }
    dend_16 { pt3dadd( -123.405, 15.4492, -85.6379, 0.28 ) }
    dend_16 { pt3dadd( -124.394, 16.3861, -84.7024, 0.55 ) }
    dend_16 { pt3dadd( -126.77, 18.5208, -82.3988, 0.28 ) }
    dend_16 { pt3dadd( -128.065, 19.6638, -81.1466, 0.55 ) }
    dend_16 { pt3dadd( -129.132, 20.6013, -80.1196, 0.55 ) }
    dend_16 { pt3dadd( -130.414, 21.708, -78.9306, 0.28 ) }
    dend_16 { pt3dadd( -131.096, 22.2664, -78.4393, 0.55 ) }
    dend_16 { pt3dadd( -133.377, 24.2046, -76.96, 0.28 ) }
    dend_16 { pt3dadd( -134.528, 25.3665, -76.1711, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.6886, -35.1331, -4.00363, 0.55 ) }
    dend_15 { pt3dadd( -10.3217, -35.37, -4.826, 0.55 ) }
    dend_15 { pt3dadd( -9.90841, -35.5187, -5.64782, 0.55 ) }
    dend_15 { pt3dadd( -9.32698, -35.639, -6.64818, 0.55 ) }
    dend_15 { pt3dadd( -8.80516, -35.6743, -7.44577, 0.55 ) }
    dend_15 { pt3dadd( -4.90488, -35.3879, -12.4396, 0.55 ) }
    dend_15 { pt3dadd( -4.0045, -35.187, -13.586, 0.55 ) }
    dend_15 { pt3dadd( -2.67077, -34.7599, -15.3155, 0.55 ) }
    dend_15 { pt3dadd( -1.72287, -34.4152, -16.5483, 0.55 ) }
    dend_15 { pt3dadd( -0.766459, -34.01, -17.7304, 0.28 ) }
    dend_15 { pt3dadd( 0.787576, -33.2869, -19.4779, 0.55 ) }
    dend_15 { pt3dadd( 3.21834, -32.1353, -21.953, 0.28 ) }
    dend_15 { pt3dadd( 3.38451, -32.08, -22.2196, 0.55 ) }
    dend_15 { pt3dadd( 3.99397, -32.0041, -24.2094, 0.28 ) }
    dend_15 { pt3dadd( 4.16919, -31.9982, -25.6114, 0.55 ) }
    dend_15 { pt3dadd( 4.2012, -32.068, -27.1425, 0.55 ) }
    dend_15 { pt3dadd( 4.19685, -32.3161, -29.8883, 0.55 ) }
    dend_15 { pt3dadd( 4.1964, -32.8409, -35.2742, 0.55 ) }
    dend_15 { pt3dadd( 4.25304, -33.2392, -38.887, 0.55 ) }
    dend_15 { pt3dadd( 4.30358, -33.3926, -40.1316, 0.55 ) }
    dend_15 { pt3dadd( 4.8386, -34.3722, -48.3, 0.55 ) }
    dend_15 { pt3dadd( 5.08138, -34.6226, -50.5041, 0.55 ) }
    dend_15 { pt3dadd( 5.30978, -34.778, -51.7283, 0.55 ) }
    dend_15 { pt3dadd( 6.07745, -35.2449, -54.5263, 0.55 ) }
    dend_15 { pt3dadd( 8.25341, -36.7488, -61.1019, 0.55 ) }
    dend_15 { pt3dadd( 8.90327, -37.2349, -62.8409, 0.28 ) }
    dend_15 { pt3dadd( 9.34129, -37.5655, -63.7968, 0.55 ) }
    dend_15 { pt3dadd( 10.0074, -38.1181, -65.1961, 0.28 ) }
    dend_15 { pt3dadd( 10.3145, -38.4102, -65.7436, 0.55 ) }
    dend_15 { pt3dadd( 11.5708, -39.5837, -67.0459, 0.28 ) }
    dend_15 { pt3dadd( 12.7073, -40.9221, -67.2223, 0.55 ) }
    dend_15 { pt3dadd( 13.3729, -41.8398, -67.2612, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 13.9664, -42.8145, -67.1865, 0.55 ) }
    dend_15 { pt3dadd( 14.4578, -43.8405, -67.0423, 0.28 ) }
    dend_15 { pt3dadd( 14.6541, -44.3594, -66.9844, 0.55 ) }
    dend_15 { pt3dadd( 15.0862, -45.698, -66.7771, 0.28 ) }
    dend_15 { pt3dadd( 15.1818, -46.0959, -66.7767, 0.55 ) }
    dend_15 { pt3dadd( 15.7106, -48.3827, -66.9022, 0.28 ) }
    dend_15 { pt3dadd( 15.9743, -49.4539, -67.0985, 0.55 ) }
    dend_15 { pt3dadd( 16.5993, -51.772, -67.7777, 0.28 ) }
    dend_15 { pt3dadd( 16.8568, -52.6373, -68.1232, 0.55 ) }
    dend_15 { pt3dadd( 17.7965, -55.5078, -69.4333, 0.28 ) }
    dend_15 { pt3dadd( 18.027, -56.208, -69.7806, 0.55 ) }
    dend_15 { pt3dadd( 18.6926, -58.4192, -70.953, 0.28 ) }
    dend_15 { pt3dadd( 18.8231, -58.93, -71.1875, 0.55 ) }
    dend_15 { pt3dadd( 19.1256, -60.2714, -71.7927, 0.28 ) }
    dend_15 { pt3dadd( 19.3023, -61.0551, -72.2181, 0.55 ) }
    dend_15 { pt3dadd( 19.4967, -61.8327, -72.6973, 0.55 ) }
    dend_15 { pt3dadd( 19.8863, -63.3835, -73.642, 0.28 ) }
    dend_15 { pt3dadd( 20.2038, -64.3644, -74.3401, 0.55 ) }
    dend_15 { pt3dadd( 21.4032, -66.9243, -76.6463, 0.28 ) }
    dend_15 { pt3dadd( 21.9074, -67.7887, -77.594, 0.55 ) }
    dend_15 { pt3dadd( 22.2762, -68.349, -78.2403, 0.28 ) }
    dend_15 { pt3dadd( 22.6721, -68.8746, -78.8892, 0.55 ) }
    dend_15 { pt3dadd( 23.9574, -70.3883, -80.8636, 0.28 ) }
    dend_15 { pt3dadd( 24.9435, -71.5554, -82.3176, 0.55 ) }
    dend_15 { pt3dadd( 26.6572, -73.7131, -84.5933, 0.28 ) }
    dend_15 { pt3dadd( 27.2006, -74.3867, -85.3064, 0.55 ) }
    dend_15 { pt3dadd( 28.3036, -75.6385, -86.5469, 0.28 ) }
    dend_15 { pt3dadd( 28.6866, -76.0508, -86.9197, 0.55 ) }
    dend_15 { pt3dadd( 29.3567, -76.7109, -87.3769, 0.28 ) }
    dend_15 { pt3dadd( 29.9703, -77.2735, -87.7187, 0.55 ) }
    dend_15 { pt3dadd( 31.7108, -78.6995, -88.4461, 0.28 ) }
    dend_15 { pt3dadd( 33.7397, -80.2478, -89.2494, 0.28 ) }
    dend_15 { pt3dadd( 34.798, -80.9807, -89.577, 0.28 ) }
    dend_15 { pt3dadd( 35.859, -81.6875, -89.9814, 0.55 ) }
    dend_15 { pt3dadd( 37.4276, -82.6469, -90.5851, 0.28 ) }
    dend_15 { pt3dadd( 38.1318, -83.0626, -90.8382, 0.83 ) }
    dend_15 { pt3dadd( 39.9372, -84.1446, -91.4064, 0.28 ) }
    dend_15 { pt3dadd( 40.7058, -84.6331, -91.6991, 0.55 ) }
    dend_15 { pt3dadd( 44.0117, -86.9157, -93.149, 0.28 ) }
    dend_15 { pt3dadd( 45.6253, -88.0811, -94.0222, 0.28 ) }
    dend_15 { pt3dadd( 46.7772, -88.9301, -94.7457, 0.55 ) }
    dend_15 { pt3dadd( 47.4214, -89.4419, -95.2544, 0.55 ) }
    dend_15 { pt3dadd( 49.0786, -90.8291, -96.7663, 0.28 ) }
    dend_15 { pt3dadd( 50.5824, -92.2093, -98.2518, 0.55 ) }
    dend_15 { pt3dadd( 51.9373, -93.5179, -99.6006, 0.28 ) }
    dend_15 { pt3dadd( 53.1316, -94.7242, -100.903, 0.55 ) }
    dend_15 { pt3dadd( 54.1255, -95.7063, -101.973, 0.28 ) }
    dend_15 { pt3dadd( 54.9776, -96.4365, -102.797, 0.55 ) }
    dend_15 { pt3dadd( 57.1093, -98.0576, -104.676, 0.28 ) }
    dend_15 { pt3dadd( 58.2071, -98.8769, -105.574, 0.55 ) }
    dend_15 { pt3dadd( 59.8766, -100.112, -106.849, 0.28 ) }
    dend_15 { pt3dadd( 61.2665, -101.077, -107.859, 0.55 ) }
    dend_15 { pt3dadd( 64.5618, -103.18, -110.241, 0.28 ) }
    dend_15 { pt3dadd( 65.8957, -103.953, -111.322, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.178, -144.606, 114.101, 0.55 ) }
    dend_9 { pt3dadd( -11.1564, -152.65, 119.051, 0.55 ) }
    dend_9 { pt3dadd( -8.17822, -160.94, 122.457, 0.55 ) }
    dend_9 { pt3dadd( -6.35822, -169.157, 126.8, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.178, -144.606, 114.101, 0.55 ) }
    dend_8 { pt3dadd( -11.821, -151.221, 120.945, 0.55 ) }
    dend_8 { pt3dadd( -13.6399, -157.713, 127.777, 0.55 ) }
    dend_8 { pt3dadd( -16.912, -163.019, 135.203, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.0759, -142.66, 111.285, 0.55 ) }
    dend_6 { pt3dadd( -14.4556, -149.962, 116.824, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.0759, -142.66, 111.285, 0.55 ) }
    dend_5 { pt3dadd( -16.0968, -150.646, 116.192, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.85294, -103.131, 9.63057, 0.83 ) }
    dend_25 { pt3dadd( -7.34876, -106.131, 9.77081, 0.83 ) }
    dend_25 { pt3dadd( -6.73, -108.677, 10.0017, 0.83 ) }
    dend_25 { pt3dadd( -6.11494, -111.208, 10.2313, 0.83 ) }
    dend_25 { pt3dadd( -5.53084, -113.611, 10.4493, 0.83 ) }
    dend_25 { pt3dadd( -4.63069, -117.315, 10.7852, 0.83 ) }
    dend_25 { pt3dadd( -3.73704, -120.991, 11.1187, 0.83 ) }
    dend_25 { pt3dadd( -2.8217, -123.453, 11.5276, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.85294, -103.131, 9.63057, 0.55 ) }
    dend_24 { pt3dadd( -7.09058, -105.121, 8.76118, 0.55 ) }
    dend_24 { pt3dadd( -6.69123, -106.661, 7.90943, 0.55 ) }
    dend_24 { pt3dadd( -6.50934, -107.788, 7.2372, 0.55 ) }
    dend_24 { pt3dadd( -6.5516, -109.079, 6.4716, 0.83 ) }
    dend_24 { pt3dadd( -6.7959, -110.526, 5.54276, 0.55 ) }
    dend_24 { pt3dadd( -7.03485, -111.941, 4.63425, 0.83 ) }
    dend_24 { pt3dadd( -7.4598, -113.459, 3.60782, 0.55 ) }
    dend_24 { pt3dadd( -7.76784, -114.335, 2.95304, 0.83 ) }
    dend_24 { pt3dadd( -9.01542, -117.146, 0.757608, 0.55 ) }
    dend_24 { pt3dadd( -10.2331, -119.322, -0.934136, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.797187, -91.7044, 50.6558, 0.55 ) }
    dend_20 { pt3dadd( 0.877582, -96.2922, 55.4925, 0.55 ) }
    dend_20 { pt3dadd( 0.683191, -100.066, 61.0455, 0.55 ) }
    dend_20 { pt3dadd( 0.579525, -103.171, 67.0456, 0.55 ) }
    dend_20 { pt3dadd( 0.415072, -105.42, 73.4577, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.797187, -91.7044, 50.6558, 0.55 ) }
    dend_19 { pt3dadd( 0.335524, -99.144, 58.5794, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.8217, -123.453, 11.5276, 0.55 ) }
    dend_27 { pt3dadd( -2.6854, -125.097, 11.9273, 0.55 ) }
    dend_27 { pt3dadd( -2.43248, -127.203, 12.4571, 0.55 ) }
    dend_27 { pt3dadd( -2.19861, -129.192, 12.9468, 0.55 ) }
    dend_27 { pt3dadd( -2.05805, -130.603, 13.2835, 0.55 ) }
    dend_27 { pt3dadd( -1.85253, -133.117, 13.8628, 0.55 ) }
    dend_27 { pt3dadd( -1.26823, -140.194, 15.2713, 0.55 ) }
    dend_27 { pt3dadd( -1.06948, -142.602, 15.6253, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( -0.966593, -144.298, 15.7935, 0.55 ) }
    dend_27 { pt3dadd( -0.91332, -146.235, 15.8355, 0.55 ) }
    dend_27 { pt3dadd( -0.962472, -147.727, 15.7591, 0.55 ) }
    dend_27 { pt3dadd( -1.05637, -151.222, 15.3955, 0.55 ) }
    dend_27 { pt3dadd( -1.21369, -153.866, 15.1635, 0.55 ) }
    dend_27 { pt3dadd( -1.24814, -155.608, 15.0342, 0.55 ) }
    dend_27 { pt3dadd( -1.23383, -160.128, 14.9191, 0.55 ) }
    dend_27 { pt3dadd( -1.17295, -163.167, 14.9748, 0.55 ) }
    dend_27 { pt3dadd( -0.964657, -167.092, 15.2386, 0.55 ) }
    dend_27 { pt3dadd( -0.500573, -171.56, 15.8212, 0.55 ) }
    dend_27 { pt3dadd( 0.024745, -174.561, 16.3093, 0.55 ) }
    dend_27 { pt3dadd( 0.397744, -176.34, 16.6188, 0.55 ) }
    dend_27 { pt3dadd( 0.711963, -177.977, 16.9153, 0.55 ) }
    dend_27 { pt3dadd( 1.0918, -180.051, 17.1847, 0.55 ) }
    dend_27 { pt3dadd( 1.78226, -185.038, 17.5589, 0.55 ) }
    dend_27 { pt3dadd( 2.07162, -186.974, 17.6056, 0.55 ) }
    dend_27 { pt3dadd( 2.34028, -189.123, 17.6705, 0.55 ) }
    dend_27 { pt3dadd( 2.71138, -192.348, 17.7665, 0.55 ) }
    dend_27 { pt3dadd( 2.90509, -194.815, 17.9209, 0.55 ) }
    dend_27 { pt3dadd( 2.95113, -197.144, 18.1097, 0.55 ) }
    dend_27 { pt3dadd( 2.90547, -199.354, 18.3413, 0.55 ) }
    dend_27 { pt3dadd( 2.84346, -201.507, 18.6153, 0.55 ) }
    dend_27 { pt3dadd( 2.79991, -203.04, 18.7914, 0.55 ) }
    dend_27 { pt3dadd( 2.69807, -205.548, 18.9914, 0.55 ) }
    dend_27 { pt3dadd( 2.41858, -208.55, 19.0414, 0.55 ) }
    dend_27 { pt3dadd( 2.26063, -210.01, 18.944, 0.55 ) }
    dend_27 { pt3dadd( 2.08446, -211.291, 18.7609, 0.55 ) }
    dend_27 { pt3dadd( 1.77975, -213.717, 18.2239, 0.55 ) }
    dend_27 { pt3dadd( 1.55009, -215.253, 17.8519, 0.55 ) }
    dend_27 { pt3dadd( 1.3237, -217.149, 17.4487, 0.55 ) }
    dend_27 { pt3dadd( 1.16015, -218.478, 17.2666, 0.55 ) }
    dend_27 { pt3dadd( 0.747727, -221.931, 16.9516, 0.55 ) }
    dend_27 { pt3dadd( 0.476352, -224.513, 16.9215, 0.55 ) }
    dend_27 { pt3dadd( 0.164447, -228.51, 17.215, 0.55 ) }
    dend_27 { pt3dadd( 0.140478, -231.1, 17.6021, 0.55 ) }
    dend_27 { pt3dadd( 0.141602, -233.82, 18.1015, 0.28 ) }
    dend_27 { pt3dadd( 0.140353, -234.911, 18.358, 0.28 ) }
    dend_27 { pt3dadd( 0.249713, -237.564, 19.2107, 0.28 ) }
    dend_27 { pt3dadd( 0.429972, -240.015, 20.191, 0.28 ) }
    dend_27 { pt3dadd( 1.11439, -243.296, 21.6426, 0.28 ) }
    dend_27 { pt3dadd( 2.57178, -250.737, 22.6858, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.8217, -123.453, 11.5276, 0.55 ) }
    dend_26 { pt3dadd( -1.27017, -124.144, 11.6539, 0.55 ) }
    dend_26 { pt3dadd( 1.91617, -125.811, 12.1499, 0.55 ) }
    dend_26 { pt3dadd( 4.66152, -127.404, 12.6975, 0.28 ) }
    dend_26 { pt3dadd( 7.60672, -129.193, 13.3748, 0.55 ) }
    dend_26 { pt3dadd( 9.40215, -130.314, 14.0229, 0.28 ) }
    dend_26 { pt3dadd( 12.5339, -132.312, 15.4326, 0.55 ) }
    dend_26 { pt3dadd( 13.8486, -133.32, 16.3963, 0.28 ) }
    dend_26 { pt3dadd( 14.3291, -133.681, 16.8317, 0.28 ) }
    dend_26 { pt3dadd( 15.1719, -134.209, 17.5912, 0.55 ) }
    dend_26 { pt3dadd( 18.496, -135.994, 20.2727, 0.28 ) }
    dend_26 { pt3dadd( 19.9194, -136.703, 21.3524, 0.55 ) }
    dend_26 { pt3dadd( 24.2464, -138.8, 24.1003, 0.28 ) }
    dend_26 { pt3dadd( 26.6116, -139.861, 25.4137, 0.28 ) }
    dend_26 { pt3dadd( 29.5589, -141.223, 26.873, 0.55 ) }
    dend_26 { pt3dadd( 33.9395, -143.339, 28.6559, 0.28 ) }
    dend_26 { pt3dadd( 34.5325, -143.623, 28.8321, 0.55 ) }
    dend_26 { pt3dadd( 37.448, -145.021, 29.4992, 0.28 ) }
    dend_26 { pt3dadd( 37.711, -145.152, 29.5305, 0.55 ) }
    dend_26 { pt3dadd( 40.001, -146.6, 29.8913, 0.28 ) }
    dend_26 { pt3dadd( 41.0847, -147.37, 30.1347, 0.55 ) }
    dend_26 { pt3dadd( 50.0661, -153.16, 32.1969, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.415072, -105.42, 73.4577, 0.55 ) }
    dend_22 { pt3dadd( 4.0731, -110.245, 84.9732, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.415072, -105.42, 73.4577, 0.55 ) }
    dend_21 { pt3dadd( -0.0704539, -111.668, 83.0461, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 9
    dend_48 nseg = 7
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_12 nseg = 11
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_59 nseg = 7
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_BP_94e814803e_0_0


